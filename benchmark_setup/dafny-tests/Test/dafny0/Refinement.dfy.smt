(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@225 (T@T) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@299 (T@T T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@T) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U T@U T@U) T@U)
(declare-fun $generated@@512 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@513 (T@T T@T) T@T)
(declare-fun $generated@@514 (T@T) T@T)
(declare-fun $generated@@515 (T@T) T@T)
(declare-fun $generated@@516 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@620 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@70) (= (type $generated@@215) $generated@@70)) (= (type $generated@@216) $generated@@170)) (= (type $generated@@217) $generated@@170)) (= (type $generated@@218) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@218)) (= ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218)  (and ($generated@@213 $generated@@216 $generated@@214 $generated@@218) ($generated@@213 $generated@@217 $generated@@215 $generated@@218))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@219 $generated@@220)) $generated@@75)
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@161) (= ($generated@@159 $generated@@221) (= ($generated@@219 $generated@@221) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@161) ($generated@@159 $generated@@222)) (exists (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (and (= (type $generated@@223) $generated@@170) (= (type $generated@@224) $generated@@170)) (= $generated@@222 ($generated@@184 $generated@@223 $generated@@224)))
 :no-pattern (type $generated@@223)
 :no-pattern (type $generated@@224)
 :no-pattern ($generated $generated@@223)
 :no-pattern ($generated@@0 $generated@@223)
 :no-pattern ($generated $generated@@224)
 :no-pattern ($generated@@0 $generated@@224)
)))
 :pattern ( ($generated@@159 $generated@@222))
)))
(assert  (and (and (forall (($generated@@229 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@229)) 18)) (forall (($generated@@230 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
))) (forall (($generated@@231 T@T) ) (! (= (type ($generated@@225 $generated@@231)) ($generated@@227 $generated@@231))
 :pattern ( ($generated@@225 $generated@@231))
))))
(assert (forall (($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@232)) 0)
 :pattern ( ($generated@@225 $generated@@232))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@170)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@70) (= (type $generated@@237) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237) ($generated@@85 $generated@@235 $generated@@236 $generated@@237)))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@240) $generated@@170)) (= (type $generated@@241) $generated@@70)) ($generated@@143 $generated@@238 $generated@@239)) ($generated@@213 $generated@@240 $generated@@241 $generated@@238)) ($generated@@213 $generated@@240 $generated@@241 $generated@@239))
 :pattern ( ($generated@@143 $generated@@238 $generated@@239) ($generated@@213 $generated@@240 $generated@@241 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@242) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@245) $generated@@70)) ($generated@@143 $generated@@242 $generated@@243)) ($generated@@85 $generated@@244 $generated@@245 $generated@@242)) ($generated@@85 $generated@@244 $generated@@245 $generated@@243))
 :pattern ( ($generated@@143 $generated@@242 $generated@@243) ($generated@@85 $generated@@244 $generated@@245 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@247) $generated@@88)) (=> (and (and ($generated@@152 $generated@@246) (and (not (= $generated@@247 $generated@@148)) (= ($generated@@153 $generated@@247) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151) $generated@@46 $generated@@246)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151))
)))
(assert (forall (($generated@@250 T@T) ) (! (= (type ($generated@@249 $generated@@250)) ($generated@@87 $generated@@250 $generated@@2))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@90 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@87 $generated@@252 $generated@@2)) (and (= (= ($generated@@248 $generated@@251) 0) (= $generated@@251 ($generated@@249 $generated@@252))) (=> (not (= ($generated@@248 $generated@@251) 0)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) (< 0 ($generated ($generated@@92 $generated@@251 $generated@@253))))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 19)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@87 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 20)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@87 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@292) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@290 $generated@@291 $generated@@292)) (and ($generated@@143 $generated@@291 $generated@@292) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@73 (type $generated@@294))))
 (=> (and (and (= (type $generated@@293) $generated@@88) (= (type $generated@@294) ($generated@@72 $generated@@295))) (not ($generated@@196 $generated@@294))) (= ($generated@@94 ($generated@@92 $generated@@291 $generated@@293) $generated@@294) ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))
))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@90 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@87 $generated@@297 $generated@@2)) (= ($generated@@176 $generated@@296) (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@297) (and (<= 0 ($generated ($generated@@92 $generated@@296 $generated@@298))) (<= ($generated ($generated@@92 $generated@@296 $generated@@298)) ($generated@@248 $generated@@296))))
 :pattern ( ($generated@@92 $generated@@296 $generated@@298))
)))))
 :pattern ( ($generated@@176 $generated@@296))
)))
(assert (forall (($generated@@300 T@T) ($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@170) ($generated@@185 $generated@@302 $generated@@147)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@302)) $generated@@302) ($generated@@154 ($generated@@299 $generated@@88 $generated@@302) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@302 $generated@@147))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@170) ($generated@@185 $generated@@303 $generated@@181)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@303)) $generated@@303) ($generated@@154 ($generated@@299 $generated@@88 $generated@@303) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@303 $generated@@181))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@88) (= ($generated@@154 $generated@@304 $generated@@181)  (and ($generated@@154 $generated@@304 $generated@@147) (not (= $generated@@304 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@304 $generated@@181))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@258 (type $generated@@305))))
(let (($generated@@307 ($generated@@257 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@256 $generated@@307 $generated@@306)) (or (= $generated@@305 ($generated@@255 $generated@@307 $generated@@306)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@305) $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@254 $generated@@305))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@258 (type $generated@@310))))
(= (type ($generated@@309 $generated@@310)) ($generated@@87 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@258 (type $generated@@312))))
(let (($generated@@314 ($generated@@257 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@256 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@255 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@313) ($generated@@0 ($generated@@92 ($generated@@309 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(let (($generated@@318 ($generated@@275 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@274 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@273 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@272 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@276 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@276 (type $generated@@323))))
(let (($generated@@325 ($generated@@275 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@274 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@273 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@92 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@328) $generated@@70)) (= ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@327 $generated@@329)))) ($generated@@185 $generated@@329 $generated@@328))
 :pattern ( ($generated@@92 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@330) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@331) $generated@@70)) (= (type $generated@@332) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@170) ($generated@@0 ($generated@@92 $generated@@330 $generated@@333))) ($generated@@213 $generated@@333 $generated@@331 $generated@@332))
 :pattern ( ($generated@@92 $generated@@330 $generated@@333))
))))
 :pattern ( ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@335) $generated@@70)) (= (type $generated@@336) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@170) ($generated@@0 ($generated@@92 $generated@@334 $generated@@337))) ($generated@@213 $generated@@337 $generated@@335 $generated@@336))
 :pattern ( ($generated@@92 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= ($generated ($generated@@92 ($generated@@249 $generated@@339) $generated@@338)) 0))
 :pattern ( (let (($generated@@339 (type $generated@@338)))
($generated@@92 ($generated@@249 $generated@@339) $generated@@338)))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@258 (type $generated@@343))))
(let (($generated@@345 ($generated@@257 (type $generated@@343))))
(= (type ($generated@@341 $generated@@343)) ($generated@@87 $generated@@345 $generated@@344))))
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@347) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))  (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347)))) (= ($generated@@92 ($generated@@341 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@347))))))
 :pattern ( ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@276 (type $generated@@351))))
(let (($generated@@353 ($generated@@275 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@87 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@355) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355)))) (= ($generated@@92 ($generated@@349 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@355))))))
 :pattern ( ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(let (($generated@@359 ($generated@@257 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@256 $generated@@359 $generated@@358)) (= ($generated@@0 ($generated@@92 ($generated@@309 $generated@@356) $generated@@357)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@356) $generated@@360)) (= $generated@@357 ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@356) $generated@@360))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))
))))))
 :pattern ( ($generated@@92 ($generated@@309 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(let (($generated@@364 ($generated@@275 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@274 $generated@@364 $generated@@363)) (= ($generated@@0 ($generated@@92 ($generated@@320 $generated@@361) $generated@@362)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@361) $generated@@365)) (= $generated@@362 ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@361) $generated@@365))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))
))))))
 :pattern ( ($generated@@92 ($generated@@320 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@70)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (= (type $generated@@369) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@370) $generated@@70)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))) (and ($generated@@213 ($generated@@92 ($generated@@341 $generated@@369) $generated@@373) $generated@@371 $generated@@372) ($generated@@213 $generated@@373 $generated@@370 $generated@@372)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@369) $generated@@373))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))
))))
 :pattern ( ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@70)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))) (and ($generated@@213 ($generated@@92 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@213 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@383) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@382 $generated@@384))) (and ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))) ($generated@@143 $generated@@382 $generated@@384))
 :pattern ( ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@T) ) (! (= (type ($generated@@385 $generated@@386)) ($generated@@87 $generated@@386 $generated@@4))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@276 (type $generated@@387))))
(let (($generated@@389 ($generated@@275 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@274 $generated@@389 $generated@@388)) (= (= $generated@@387 ($generated@@273 $generated@@389 $generated@@388)) (= ($generated@@272 $generated@@387) ($generated@@385 $generated@@389))))))
 :pattern ( ($generated@@272 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@276 (type $generated@@390))))
(let (($generated@@392 ($generated@@275 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@274 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@273 $generated@@392 $generated@@391)) (= ($generated@@320 $generated@@390) ($generated@@385 $generated@@391))))))
 :pattern ( ($generated@@320 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@276 (type $generated@@393))))
(let (($generated@@395 ($generated@@275 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@274 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@273 $generated@@395 $generated@@394)) (= ($generated@@348 $generated@@393) ($generated@@385 $generated@@170))))))
 :pattern ( ($generated@@348 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@258 (type $generated@@396))))
(let (($generated@@398 ($generated@@257 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@256 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@255 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (and (and (= (type $generated@@399) $generated@@170) (= (type $generated@@400) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@340 $generated@@396) ($generated@@233 ($generated@@184 $generated@@399 $generated@@400)))))
 :no-pattern (type $generated@@399)
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@340 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@276 (type $generated@@401))))
(let (($generated@@403 ($generated@@275 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@274 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@273 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@170) (= (type $generated@@405) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@348 $generated@@401) ($generated@@233 ($generated@@184 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@348 $generated@@401))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@76)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@T) ) (!  (=> (and (= (type $generated@@408) $generated@@76) (= (type $generated@@409) $generated@@74)) (and (= ($generated@@406 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@408) (= ($generated@@83 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@409)))
 :pattern ( ($generated@@192 $generated@@410 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@170) ($generated@@185 $generated@@411 $generated@@46)) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@411)) $generated@@411) ($generated@@154 ($generated@@299 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@170) ($generated@@185 $generated@@412 $generated@@47)) (and (= ($generated@@233 ($generated@@299 $generated@@3 $generated@@412)) $generated@@412) ($generated@@154 ($generated@@299 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@44)) (and (= ($generated@@233 ($generated@@299 $generated@@4 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@299 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 21))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@45)) (and (= ($generated@@233 ($generated@@299 $generated@@414 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@299 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@70) (= ($generated@@185 ($generated@@233 $generated@@416) $generated@@417) ($generated@@154 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@185 ($generated@@233 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@90 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@87 $generated@@419 $generated@@2)) (<= 0 ($generated@@248 $generated@@418))))
 :pattern ( ($generated@@248 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@228 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@227 $generated@@421)) (<= 0 ($generated@@226 $generated@@420))))
 :pattern ( ($generated@@226 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@70) (= (type $generated@@425) $generated@@70)) (= ($generated@@422 ($generated@@366 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@366 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@70)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@70) (= (type $generated@@429) $generated@@70)) (= ($generated@@426 ($generated@@366 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@366 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@81 ($generated@@366 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@366 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@70) (= (type $generated@@435) $generated@@70)) (= ($generated@@432 ($generated@@374 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@374 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@70) (= (type $generated@@439) $generated@@70)) (= ($generated@@436 ($generated@@374 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@374 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@81 ($generated@@374 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@374 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@170) (= (type $generated@@443) $generated@@170)) (= ($generated@@219 ($generated@@184 $generated@@442 $generated@@443)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@70)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@70) (= (type $generated@@447) $generated@@70)) (= ($generated@@444 ($generated@@160 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@160 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@70)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@70) (= (type $generated@@451) $generated@@70)) (= ($generated@@448 ($generated@@160 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@160 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@170) (= (type $generated@@453) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@184 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@228 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@227 $generated@@170)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@226 $generated@@462))) ($generated@@213 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@86 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@86 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@70) (= ($generated@@468 ($generated@@199 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@199 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@70) (= ($generated@@472 ($generated@@204 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@204 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@70) (= ($generated@@476 ($generated@@175 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@175 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@70) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@70) (= ($generated@@81 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@299 $generated@@485 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@487) $generated@@70)) (= (type $generated@@488) $generated@@70)) (= ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))) (and ($generated@@185 ($generated@@92 ($generated@@341 $generated@@486) $generated@@489) $generated@@488) ($generated@@185 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@486) $generated@@489))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@491) $generated@@70)) (= (type $generated@@492) $generated@@70)) (= ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))) (and ($generated@@185 ($generated@@92 ($generated@@349 $generated@@490) $generated@@493) $generated@@492) ($generated@@185 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@490) $generated@@493))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@170) (= (type $generated@@497) $generated@@170)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@184 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@184 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@70)) (= (type $generated@@502) $generated@@70)) ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502))) (and (= ($generated@@233 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500)) $generated@@500) ($generated@@154 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500) ($generated@@366 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@170) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) $generated@@70)) ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505))) (and (= ($generated@@233 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503)) $generated@@503) ($generated@@154 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503) ($generated@@374 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= (type $generated@@508) $generated@@170)) ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507))) (and (= ($generated@@233 ($generated@@299 $generated@@161 $generated@@508)) $generated@@508) ($generated@@154 ($generated@@299 $generated@@161 $generated@@508) ($generated@@160 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@92 ($generated@@385 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@92 ($generated@@385 $generated@@510) $generated@@509)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@517 T@T) ($generated@@518 T@T) ) (= ($generated@@1 ($generated@@513 $generated@@517 $generated@@518)) 22)) (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (! (= ($generated@@514 ($generated@@513 $generated@@519 $generated@@520)) $generated@@519)
 :pattern ( ($generated@@513 $generated@@519 $generated@@520))
))) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@515 ($generated@@513 $generated@@521 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@513 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@515 (type $generated@@523))))
(= (type ($generated@@511 $generated@@523 $generated@@524 $generated@@525)) $generated@@526))
 :pattern ( ($generated@@511 $generated@@523 $generated@@524 $generated@@525))
))) (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(let (($generated@@532 (type $generated@@528)))
(= (type ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530)) ($generated@@513 $generated@@532 $generated@@531))))
 :pattern ( ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530))
))) (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@515 (type $generated@@533))))
 (=> (= (type $generated@@536) $generated@@537) (= ($generated@@511 ($generated@@516 $generated@@533 $generated@@534 $generated@@535 $generated@@536) $generated@@534 $generated@@535) $generated@@536)))
 :weight 0
))) (and (and (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (or (= $generated@@540 $generated@@542) (= ($generated@@511 ($generated@@516 $generated@@539 $generated@@540 $generated@@541 $generated@@538) $generated@@542 $generated@@543) ($generated@@511 $generated@@539 $generated@@542 $generated@@543)))
 :weight 0
)) (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (or (= $generated@@547 $generated@@549) (= ($generated@@511 ($generated@@516 $generated@@545 $generated@@546 $generated@@547 $generated@@544) $generated@@548 $generated@@549) ($generated@@511 $generated@@545 $generated@@548 $generated@@549)))
 :weight 0
))) (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (or true (= ($generated@@511 ($generated@@516 $generated@@551 $generated@@552 $generated@@553 $generated@@550) $generated@@554 $generated@@555) ($generated@@511 $generated@@551 $generated@@554 $generated@@555)))
 :weight 0
)))) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (= (type ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559)) ($generated@@513 $generated@@88 $generated@@4))
 :pattern ( ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@73 (type $generated@@565))))
 (=> (and (and (and (and (and (= (type $generated@@560) $generated@@88) (= (type $generated@@561) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@562) ($generated@@72 $generated@@4))) (= (type $generated@@563) $generated@@88)) (= (type $generated@@564) $generated@@88)) (= (type $generated@@565) ($generated@@72 $generated@@566))) (= ($generated@@0 ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))  (=> (and (not (= $generated@@564 $generated@@560)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@561 $generated@@564) $generated@@562))) (= $generated@@564 $generated@@563)))))
 :pattern ( ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@161) (= ($generated@@494 ($generated@@233 $generated@@571)) ($generated@@495 $generated@@571)))
 :pattern ( ($generated@@494 ($generated@@233 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@170) ($generated@@185 $generated@@572 ($generated@@86 0))) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@170) (= (type $generated@@574) $generated@@70)) ($generated@@185 $generated@@573 ($generated@@199 $generated@@574))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573) ($generated@@199 $generated@@574))))
 :pattern ( ($generated@@185 $generated@@573 ($generated@@199 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@185 $generated@@575 ($generated@@204 $generated@@576))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@204 $generated@@576))))
 :pattern ( ($generated@@185 $generated@@575 ($generated@@204 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@185 $generated@@577 ($generated@@175 $generated@@578))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577) ($generated@@175 $generated@@578))))
 :pattern ( ($generated@@185 $generated@@577 ($generated@@175 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@185 $generated@@579 ($generated@@456 $generated@@580))) (and (= ($generated@@233 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579) ($generated@@456 $generated@@580))))
 :pattern ( ($generated@@185 $generated@@579 ($generated@@456 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
 (=> (and (and (and (= (type $generated@@581) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@582) $generated@@88)) (= (type $generated@@583) ($generated@@72 $generated@@585))) ($generated@@152 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))) ($generated@@143 $generated@@581 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@567 $generated@@181) $generated@@68))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@586 ($generated@@175 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@586 $generated@@589)))) ($generated@@213 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@92 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@85 $generated@@586 ($generated@@175 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@161) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@592) (and ($generated@@159 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@70) ($generated@@85 $generated@@590 ($generated@@160 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@160 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@213 ($generated@@168 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@213 ($generated@@168 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@161) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@596) (and ($generated@@159 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@70) ($generated@@85 $generated@@594 ($generated@@160 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@85 $generated@@594 ($generated@@160 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@213 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@213 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@170) (= (type $generated@@599) $generated@@170)) (= ($generated@@184 ($generated@@209 $generated@@598) ($generated@@209 $generated@@599)) ($generated@@209 ($generated@@184 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@184 ($generated@@209 $generated@@598) ($generated@@209 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@233 ($generated@@209 $generated@@600)) ($generated@@209 ($generated@@233 $generated@@600)))
 :pattern ( ($generated@@233 ($generated@@209 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@228 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@227 $generated@@602)) (= ($generated@@226 $generated@@601) 0)) (= $generated@@601 ($generated@@225 $generated@@602))))
 :pattern ( ($generated@@226 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@87 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@248 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@248 $generated@@603) ($generated ($generated@@92 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@248 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@608) $generated@@2)) ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@610) $generated@@3)) ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@612) $generated@@4)) ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@614) $generated@@414)) ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@616) $generated@@170)) ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@227 $generated@@170)) (= (type $generated@@618) $generated@@70)) (= ($generated@@154 $generated@@617 ($generated@@456 $generated@@618)) (forall (($generated@@619 Int) ) (!  (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@226 $generated@@617))) ($generated@@185 ($generated@@457 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@457 $generated@@617 $generated@@619))
))))
 :pattern ( ($generated@@154 $generated@@617 ($generated@@456 $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 Int) ) (!  (=> (= (type $generated@@621) ($generated@@227 $generated@@170)) (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@226 $generated@@621))) (< ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@621 $generated@@622))) ($generated@@620 $generated@@621))))
 :pattern ( ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@621 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@624) $generated@@70)) (= (type $generated@@625) $generated@@70)) ($generated@@154 $generated@@623 ($generated@@366 $generated@@624 $generated@@625))) (and (and ($generated@@154 ($generated@@254 $generated@@623) ($generated@@199 $generated@@624)) ($generated@@154 ($generated@@309 $generated@@623) ($generated@@199 $generated@@625))) ($generated@@154 ($generated@@340 $generated@@623) ($generated@@199 ($generated@@160 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@154 $generated@@623 ($generated@@366 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@154 $generated@@626 ($generated@@374 $generated@@627 $generated@@628))) (and (and ($generated@@154 ($generated@@272 $generated@@626) ($generated@@204 $generated@@627)) ($generated@@154 ($generated@@320 $generated@@626) ($generated@@204 $generated@@628))) ($generated@@154 ($generated@@348 $generated@@626) ($generated@@204 ($generated@@160 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@154 $generated@@626 ($generated@@374 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@2) ($generated@@154 $generated@@629 $generated@@46))
 :pattern ( ($generated@@154 $generated@@629 $generated@@46))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@3) ($generated@@154 $generated@@630 $generated@@47))
 :pattern ( ($generated@@154 $generated@@630 $generated@@47))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@4) ($generated@@154 $generated@@631 $generated@@44))
 :pattern ( ($generated@@154 $generated@@631 $generated@@44))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@414) ($generated@@154 $generated@@632 $generated@@45))
 :pattern ( ($generated@@154 $generated@@632 $generated@@45))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@170) ($generated@@154 $generated@@633 $generated@@48))
 :pattern ( ($generated@@154 $generated@@633 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () Int)
(assert  (and (and (= (type $generated@@634) ($generated@@513 $generated@@88 $generated@@4)) (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@636) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@639  (=> (and (= $generated@@634 ($generated@@512 $generated@@148 $generated@@635 $generated@@60 $generated@@636)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@0 ($generated@@511 $generated@@634 $generated@@636 $generated@@151)))))
(let (($generated@@640  (=> (and ($generated@@152 $generated@@635) ($generated@@637 $generated@@635)) (=> (and (and (not (= $generated@@636 $generated@@148)) (and ($generated@@154 $generated@@636 $generated@@181) ($generated@@85 $generated@@636 $generated@@181 $generated@@635))) (and (= 0 $generated@@638) (= (ControlFlow 0 3) 2))) $generated@@639))))
$generated@@640)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@321 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (Int Int) Int)
(declare-fun $generated@@577 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@152)) (= (type $generated@@255) $generated@@152)) (= (type $generated@@256) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@250 $generated@@256)) (= ($generated@@77 ($generated@@224 $generated@@254 $generated@@255) ($generated@@142 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@254 $generated@@255) ($generated@@142 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@71)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@143) (= ($generated@@141 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@143) ($generated@@141 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@152) (= (type $generated@@262) $generated@@152)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@141 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@152)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@67) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@77 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@79 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@82 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@79 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@84 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 18)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@79 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@79 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@82 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@79 $generated@@319 $generated@@2)) (= ($generated@@158 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@84 $generated@@318 $generated@@320))) (<= ($generated ($generated@@84 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@84 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@152) ($generated@@225 $generated@@324 $generated@@135)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@324)) $generated@@324) ($generated@@139 ($generated@@321 $generated@@80 $generated@@324) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@324 $generated@@135))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@152) ($generated@@225 $generated@@325 $generated@@221)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@321 $generated@@80 $generated@@325) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@325 $generated@@221))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@80) (= ($generated@@139 $generated@@326 $generated@@221)  (and ($generated@@139 $generated@@326 $generated@@135) (not (= $generated@@326 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@326 $generated@@221))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@286 (type $generated@@327))))
(let (($generated@@329 ($generated@@285 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@284 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@283 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@282 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@286 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@286 (type $generated@@334))))
(let (($generated@@336 ($generated@@285 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@284 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@283 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@304 (type $generated@@338))))
(let (($generated@@340 ($generated@@303 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@302 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@301 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@300 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@304 (type $generated@@345))))
(let (($generated@@347 ($generated@@303 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@302 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@301 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@225 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@234 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@251 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@234 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@239 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@251 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@239 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@277 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@277 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@286 (type $generated@@365))))
(let (($generated@@367 ($generated@@285 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@369) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@304 (type $generated@@373))))
(let (($generated@@375 ($generated@@303 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@285 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@284 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@303 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@302 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))) (and ($generated@@251 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@251 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))) (and ($generated@@251 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@251 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@304 (type $generated@@406))))
(let (($generated@@408 ($generated@@303 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@302 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@301 $generated@@408 $generated@@407)) (= ($generated@@300 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@300 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@304 (type $generated@@409))))
(let (($generated@@411 ($generated@@303 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@302 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@301 $generated@@411 $generated@@410)) (= ($generated@@342 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@342 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@304 (type $generated@@412))))
(let (($generated@@414 ($generated@@303 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@302 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@301 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@286 (type $generated@@415))))
(let (($generated@@417 ($generated@@285 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@284 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@283 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@415) ($generated@@271 ($generated@@224 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@304 (type $generated@@420))))
(let (($generated@@422 ($generated@@303 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@302 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@301 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@420) ($generated@@271 ($generated@@224 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@225 $generated@@425 $generated@@46)) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@321 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@225 $generated@@426 $generated@@47)) (and (= ($generated@@271 ($generated@@321 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@321 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@225 $generated@@427 $generated@@44)) (and (= ($generated@@271 ($generated@@321 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@321 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@225 $generated@@429 $generated@@45)) (and (= ($generated@@271 ($generated@@321 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@321 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@225 ($generated@@271 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@276 $generated@@432))))
 :pattern ( ($generated@@276 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@266 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@265 $generated@@435)) (<= 0 ($generated@@264 $generated@@434))))
 :pattern ( ($generated@@264 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@257 ($generated@@224 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@224 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@224 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@266 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@265 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@264 $generated@@476))) ($generated@@251 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@234 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@234 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@239 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@239 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@321 $generated@@499 ($generated@@271 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@271 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))) (and ($generated@@225 ($generated@@84 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@225 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))) (and ($generated@@225 ($generated@@84 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@225 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@224 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@224 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@224 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@224 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@225 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@271 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@225 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@225 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@271 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@225 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@225 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@271 ($generated@@321 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@321 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@225 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@142 $generated@@527 $generated@@528)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 Int) ($generated@@531 Int) ) (! (= ($generated@@529 $generated@@530 $generated@@531) (* $generated@@530 $generated@@531))
 :pattern ( ($generated@@529 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@143) (= ($generated@@508 ($generated@@271 $generated@@532)) ($generated@@509 $generated@@532)))
 :pattern ( ($generated@@508 ($generated@@271 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@152) ($generated@@225 $generated@@533 ($generated@@78 0))) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@533)) $generated@@533) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@533 ($generated@@78 0)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@152) (= (type $generated@@535) $generated@@67)) ($generated@@225 $generated@@534 ($generated@@234 $generated@@535))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@534)) $generated@@534) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@534) ($generated@@234 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@534 ($generated@@234 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@67)) ($generated@@225 $generated@@536 ($generated@@239 $generated@@537))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@536) ($generated@@239 $generated@@537))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@239 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@152) (= (type $generated@@539) $generated@@67)) ($generated@@225 $generated@@538 ($generated@@157 $generated@@539))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@538)) $generated@@538) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@538) ($generated@@157 $generated@@539))))
 :pattern ( ($generated@@225 $generated@@538 ($generated@@157 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@152) (= (type $generated@@541) $generated@@67)) ($generated@@225 $generated@@540 ($generated@@470 $generated@@541))) (and (= ($generated@@271 ($generated@@321 ($generated@@265 $generated@@152) $generated@@540)) $generated@@540) ($generated@@139 ($generated@@321 ($generated@@265 $generated@@152) $generated@@540) ($generated@@470 $generated@@541))))
 :pattern ( ($generated@@225 $generated@@540 ($generated@@470 $generated@@541)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@525 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@525 $generated@@221) $generated@@66))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@542 ($generated@@157 $generated@@543) $generated@@544) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@542 $generated@@545)))) ($generated@@251 $generated@@545 $generated@@543 $generated@@544))
 :pattern ( ($generated@@84 $generated@@542 $generated@@545))
))))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@157 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@143) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@548) (and ($generated@@141 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@67) ($generated@@77 $generated@@546 ($generated@@142 $generated@@547 $generated@@549) $generated@@548))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@142 $generated@@547 $generated@@549) $generated@@548))
))))) ($generated@@251 ($generated@@150 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@251 ($generated@@150 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@143) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@552) (and ($generated@@141 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@67) ($generated@@77 $generated@@550 ($generated@@142 $generated@@553 $generated@@551) $generated@@552))
 :pattern ( ($generated@@77 $generated@@550 ($generated@@142 $generated@@553 $generated@@551) $generated@@552))
))))) ($generated@@251 ($generated@@151 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@251 ($generated@@151 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@152) (= (type $generated@@555) $generated@@152)) (= ($generated@@224 ($generated@@246 $generated@@554) ($generated@@246 $generated@@555)) ($generated@@246 ($generated@@224 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@554) ($generated@@246 $generated@@555)))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@556))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@556))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@556))))
)))
(assert (forall (($generated@@557 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@557)) ($generated@@246 ($generated@@271 $generated@@557)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@266 (type $generated@@558))))
 (=> (and (= (type $generated@@558) ($generated@@265 $generated@@559)) (= ($generated@@264 $generated@@558) 0)) (= $generated@@558 ($generated@@263 $generated@@559))))
 :pattern ( ($generated@@264 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@561)))
 (=> (and (and (= (type $generated@@560) ($generated@@79 $generated@@563 $generated@@2)) (= (type $generated@@562) $generated@@2)) (<= 0 ($generated $generated@@562))) (= ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)) (+ (- ($generated@@276 $generated@@560) ($generated ($generated@@84 $generated@@560 $generated@@561))) ($generated $generated@@562)))))
 :pattern ( ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@565) $generated@@2)) ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
 :pattern ( ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@567) $generated@@3)) ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
 :pattern ( ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@569) $generated@@4)) ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
 :pattern ( ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@571) $generated@@428)) ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
 :pattern ( ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@573) $generated@@152)) ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
 :pattern ( ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@265 $generated@@152)) (= (type $generated@@575) $generated@@67)) (= ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)) (forall (($generated@@576 Int) ) (!  (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@264 $generated@@574))) ($generated@@225 ($generated@@471 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@471 $generated@@574 $generated@@576))
))))
 :pattern ( ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ) (!  (=> (= (type $generated@@578) ($generated@@265 $generated@@152)) (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@264 $generated@@578))) (< ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@578 $generated@@579))) ($generated@@577 $generated@@578))))
 :pattern ( ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@578 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582))) (and (and ($generated@@139 ($generated@@282 $generated@@580) ($generated@@234 $generated@@581)) ($generated@@139 ($generated@@331 $generated@@580) ($generated@@234 $generated@@582))) ($generated@@139 ($generated@@362 $generated@@580) ($generated@@234 ($generated@@142 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585))) (and (and ($generated@@139 ($generated@@300 $generated@@583) ($generated@@239 $generated@@584)) ($generated@@139 ($generated@@342 $generated@@583) ($generated@@239 $generated@@585))) ($generated@@139 ($generated@@370 $generated@@583) ($generated@@239 ($generated@@142 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@2) ($generated@@139 $generated@@586 $generated@@46))
 :pattern ( ($generated@@139 $generated@@586 $generated@@46))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@3) ($generated@@139 $generated@@587 $generated@@47))
 :pattern ( ($generated@@139 $generated@@587 $generated@@47))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@4) ($generated@@139 $generated@@588 $generated@@44))
 :pattern ( ($generated@@139 $generated@@588 $generated@@44))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@428) ($generated@@139 $generated@@589 $generated@@45))
 :pattern ( ($generated@@139 $generated@@589 $generated@@45))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@152) ($generated@@139 $generated@@590 $generated@@48))
 :pattern ( ($generated@@139 $generated@@590 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 (T@U) Bool)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () Int)
(assert  (and (and (= (type $generated@@591) ($generated@@167 $generated@@80 $generated@@4)) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@596) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@598  (=> (= $generated@@591 ($generated@@166 $generated@@136 $generated@@592 $generated@@60 false)) (=> (and (= $generated@@593 ($generated@@529 ($generated@@244 2) $generated@@594)) (= (ControlFlow 0 2) (- 0 1))) (<= ($generated@@244 0) $generated@@593)))))
(let (($generated@@599  (=> (and ($generated@@250 $generated@@592) ($generated@@595 $generated@@592)) (=> (and (and (and (not (= $generated@@596 $generated@@136)) (and ($generated@@139 $generated@@596 $generated@@221) ($generated@@77 $generated@@596 $generated@@221 $generated@@592))) (= 0 $generated@@597)) (and (<= ($generated@@244 0) $generated@@594) (= (ControlFlow 0 3) 2))) $generated@@598))))
$generated@@599)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@225 (T@T) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@299 (T@T T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@T) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U T@U T@U) T@U)
(declare-fun $generated@@512 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@513 (T@T T@T) T@T)
(declare-fun $generated@@514 (T@T) T@T)
(declare-fun $generated@@515 (T@T) T@T)
(declare-fun $generated@@516 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@70) (= (type $generated@@215) $generated@@70)) (= (type $generated@@216) $generated@@170)) (= (type $generated@@217) $generated@@170)) (= (type $generated@@218) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@218)) (= ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218)  (and ($generated@@213 $generated@@216 $generated@@214 $generated@@218) ($generated@@213 $generated@@217 $generated@@215 $generated@@218))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@219 $generated@@220)) $generated@@75)
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@161) (= ($generated@@159 $generated@@221) (= ($generated@@219 $generated@@221) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@161) ($generated@@159 $generated@@222)) (exists (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (and (= (type $generated@@223) $generated@@170) (= (type $generated@@224) $generated@@170)) (= $generated@@222 ($generated@@184 $generated@@223 $generated@@224)))
 :no-pattern (type $generated@@223)
 :no-pattern (type $generated@@224)
 :no-pattern ($generated $generated@@223)
 :no-pattern ($generated@@0 $generated@@223)
 :no-pattern ($generated $generated@@224)
 :no-pattern ($generated@@0 $generated@@224)
)))
 :pattern ( ($generated@@159 $generated@@222))
)))
(assert  (and (and (forall (($generated@@229 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@229)) 18)) (forall (($generated@@230 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
))) (forall (($generated@@231 T@T) ) (! (= (type ($generated@@225 $generated@@231)) ($generated@@227 $generated@@231))
 :pattern ( ($generated@@225 $generated@@231))
))))
(assert (forall (($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@232)) 0)
 :pattern ( ($generated@@225 $generated@@232))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@170)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@70) (= (type $generated@@237) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237) ($generated@@85 $generated@@235 $generated@@236 $generated@@237)))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@240) $generated@@170)) (= (type $generated@@241) $generated@@70)) ($generated@@143 $generated@@238 $generated@@239)) ($generated@@213 $generated@@240 $generated@@241 $generated@@238)) ($generated@@213 $generated@@240 $generated@@241 $generated@@239))
 :pattern ( ($generated@@143 $generated@@238 $generated@@239) ($generated@@213 $generated@@240 $generated@@241 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@242) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@245) $generated@@70)) ($generated@@143 $generated@@242 $generated@@243)) ($generated@@85 $generated@@244 $generated@@245 $generated@@242)) ($generated@@85 $generated@@244 $generated@@245 $generated@@243))
 :pattern ( ($generated@@143 $generated@@242 $generated@@243) ($generated@@85 $generated@@244 $generated@@245 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@247) $generated@@88)) (=> (and (and ($generated@@152 $generated@@246) (and (not (= $generated@@247 $generated@@148)) (= ($generated@@153 $generated@@247) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151) $generated@@46 $generated@@246)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151))
)))
(assert (forall (($generated@@250 T@T) ) (! (= (type ($generated@@249 $generated@@250)) ($generated@@87 $generated@@250 $generated@@2))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@90 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@87 $generated@@252 $generated@@2)) (and (= (= ($generated@@248 $generated@@251) 0) (= $generated@@251 ($generated@@249 $generated@@252))) (=> (not (= ($generated@@248 $generated@@251) 0)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) (< 0 ($generated ($generated@@92 $generated@@251 $generated@@253))))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 19)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@87 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 20)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@87 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@292) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@290 $generated@@291 $generated@@292)) (and ($generated@@143 $generated@@291 $generated@@292) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@73 (type $generated@@294))))
 (=> (and (and (= (type $generated@@293) $generated@@88) (= (type $generated@@294) ($generated@@72 $generated@@295))) (not ($generated@@196 $generated@@294))) (= ($generated@@94 ($generated@@92 $generated@@291 $generated@@293) $generated@@294) ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))
))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@90 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@87 $generated@@297 $generated@@2)) (= ($generated@@176 $generated@@296) (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@297) (and (<= 0 ($generated ($generated@@92 $generated@@296 $generated@@298))) (<= ($generated ($generated@@92 $generated@@296 $generated@@298)) ($generated@@248 $generated@@296))))
 :pattern ( ($generated@@92 $generated@@296 $generated@@298))
)))))
 :pattern ( ($generated@@176 $generated@@296))
)))
(assert (forall (($generated@@300 T@T) ($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@170) ($generated@@185 $generated@@302 $generated@@147)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@302)) $generated@@302) ($generated@@154 ($generated@@299 $generated@@88 $generated@@302) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@302 $generated@@147))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@170) ($generated@@185 $generated@@303 $generated@@181)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@303)) $generated@@303) ($generated@@154 ($generated@@299 $generated@@88 $generated@@303) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@303 $generated@@181))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@88) (= ($generated@@154 $generated@@304 $generated@@181)  (and ($generated@@154 $generated@@304 $generated@@147) (not (= $generated@@304 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@304 $generated@@181))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@258 (type $generated@@305))))
(let (($generated@@307 ($generated@@257 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@256 $generated@@307 $generated@@306)) (or (= $generated@@305 ($generated@@255 $generated@@307 $generated@@306)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@305) $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@254 $generated@@305))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@258 (type $generated@@310))))
(= (type ($generated@@309 $generated@@310)) ($generated@@87 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@258 (type $generated@@312))))
(let (($generated@@314 ($generated@@257 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@256 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@255 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@313) ($generated@@0 ($generated@@92 ($generated@@309 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(let (($generated@@318 ($generated@@275 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@274 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@273 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@272 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@276 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@276 (type $generated@@323))))
(let (($generated@@325 ($generated@@275 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@274 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@273 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@92 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@328) $generated@@70)) (= ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@327 $generated@@329)))) ($generated@@185 $generated@@329 $generated@@328))
 :pattern ( ($generated@@92 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@330) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@331) $generated@@70)) (= (type $generated@@332) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@170) ($generated@@0 ($generated@@92 $generated@@330 $generated@@333))) ($generated@@213 $generated@@333 $generated@@331 $generated@@332))
 :pattern ( ($generated@@92 $generated@@330 $generated@@333))
))))
 :pattern ( ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@335) $generated@@70)) (= (type $generated@@336) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@170) ($generated@@0 ($generated@@92 $generated@@334 $generated@@337))) ($generated@@213 $generated@@337 $generated@@335 $generated@@336))
 :pattern ( ($generated@@92 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= ($generated ($generated@@92 ($generated@@249 $generated@@339) $generated@@338)) 0))
 :pattern ( (let (($generated@@339 (type $generated@@338)))
($generated@@92 ($generated@@249 $generated@@339) $generated@@338)))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@258 (type $generated@@343))))
(let (($generated@@345 ($generated@@257 (type $generated@@343))))
(= (type ($generated@@341 $generated@@343)) ($generated@@87 $generated@@345 $generated@@344))))
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@347) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))  (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347)))) (= ($generated@@92 ($generated@@341 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@347))))))
 :pattern ( ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@276 (type $generated@@351))))
(let (($generated@@353 ($generated@@275 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@87 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@355) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355)))) (= ($generated@@92 ($generated@@349 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@355))))))
 :pattern ( ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(let (($generated@@359 ($generated@@257 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@256 $generated@@359 $generated@@358)) (= ($generated@@0 ($generated@@92 ($generated@@309 $generated@@356) $generated@@357)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@356) $generated@@360)) (= $generated@@357 ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@356) $generated@@360))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))
))))))
 :pattern ( ($generated@@92 ($generated@@309 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(let (($generated@@364 ($generated@@275 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@274 $generated@@364 $generated@@363)) (= ($generated@@0 ($generated@@92 ($generated@@320 $generated@@361) $generated@@362)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@361) $generated@@365)) (= $generated@@362 ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@361) $generated@@365))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))
))))))
 :pattern ( ($generated@@92 ($generated@@320 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@70)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (= (type $generated@@369) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@370) $generated@@70)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))) (and ($generated@@213 ($generated@@92 ($generated@@341 $generated@@369) $generated@@373) $generated@@371 $generated@@372) ($generated@@213 $generated@@373 $generated@@370 $generated@@372)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@369) $generated@@373))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))
))))
 :pattern ( ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@70)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))) (and ($generated@@213 ($generated@@92 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@213 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@383) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@382 $generated@@384))) (and ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))) ($generated@@143 $generated@@382 $generated@@384))
 :pattern ( ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@T) ) (! (= (type ($generated@@385 $generated@@386)) ($generated@@87 $generated@@386 $generated@@4))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@276 (type $generated@@387))))
(let (($generated@@389 ($generated@@275 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@274 $generated@@389 $generated@@388)) (= (= $generated@@387 ($generated@@273 $generated@@389 $generated@@388)) (= ($generated@@272 $generated@@387) ($generated@@385 $generated@@389))))))
 :pattern ( ($generated@@272 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@276 (type $generated@@390))))
(let (($generated@@392 ($generated@@275 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@274 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@273 $generated@@392 $generated@@391)) (= ($generated@@320 $generated@@390) ($generated@@385 $generated@@391))))))
 :pattern ( ($generated@@320 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@276 (type $generated@@393))))
(let (($generated@@395 ($generated@@275 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@274 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@273 $generated@@395 $generated@@394)) (= ($generated@@348 $generated@@393) ($generated@@385 $generated@@170))))))
 :pattern ( ($generated@@348 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@258 (type $generated@@396))))
(let (($generated@@398 ($generated@@257 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@256 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@255 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (and (and (= (type $generated@@399) $generated@@170) (= (type $generated@@400) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@340 $generated@@396) ($generated@@233 ($generated@@184 $generated@@399 $generated@@400)))))
 :no-pattern (type $generated@@399)
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@340 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@276 (type $generated@@401))))
(let (($generated@@403 ($generated@@275 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@274 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@273 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@170) (= (type $generated@@405) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@348 $generated@@401) ($generated@@233 ($generated@@184 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@348 $generated@@401))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@76)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@T) ) (!  (=> (and (= (type $generated@@408) $generated@@76) (= (type $generated@@409) $generated@@74)) (and (= ($generated@@406 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@408) (= ($generated@@83 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@409)))
 :pattern ( ($generated@@192 $generated@@410 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@170) ($generated@@185 $generated@@411 $generated@@46)) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@411)) $generated@@411) ($generated@@154 ($generated@@299 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@170) ($generated@@185 $generated@@412 $generated@@47)) (and (= ($generated@@233 ($generated@@299 $generated@@3 $generated@@412)) $generated@@412) ($generated@@154 ($generated@@299 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@44)) (and (= ($generated@@233 ($generated@@299 $generated@@4 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@299 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 21))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@45)) (and (= ($generated@@233 ($generated@@299 $generated@@414 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@299 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@70) (= ($generated@@185 ($generated@@233 $generated@@416) $generated@@417) ($generated@@154 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@185 ($generated@@233 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@90 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@87 $generated@@419 $generated@@2)) (<= 0 ($generated@@248 $generated@@418))))
 :pattern ( ($generated@@248 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@228 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@227 $generated@@421)) (<= 0 ($generated@@226 $generated@@420))))
 :pattern ( ($generated@@226 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@70) (= (type $generated@@425) $generated@@70)) (= ($generated@@422 ($generated@@366 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@366 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@70)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@70) (= (type $generated@@429) $generated@@70)) (= ($generated@@426 ($generated@@366 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@366 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@81 ($generated@@366 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@366 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@70) (= (type $generated@@435) $generated@@70)) (= ($generated@@432 ($generated@@374 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@374 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@70) (= (type $generated@@439) $generated@@70)) (= ($generated@@436 ($generated@@374 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@374 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@81 ($generated@@374 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@374 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@170) (= (type $generated@@443) $generated@@170)) (= ($generated@@219 ($generated@@184 $generated@@442 $generated@@443)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@70)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@70) (= (type $generated@@447) $generated@@70)) (= ($generated@@444 ($generated@@160 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@160 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@70)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@70) (= (type $generated@@451) $generated@@70)) (= ($generated@@448 ($generated@@160 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@160 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@170) (= (type $generated@@453) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@184 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@228 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@227 $generated@@170)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@226 $generated@@462))) ($generated@@213 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@86 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@86 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@70) (= ($generated@@468 ($generated@@199 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@199 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@70) (= ($generated@@472 ($generated@@204 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@204 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@70) (= ($generated@@476 ($generated@@175 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@175 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@70) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@70) (= ($generated@@81 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@299 $generated@@485 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@487) $generated@@70)) (= (type $generated@@488) $generated@@70)) (= ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))) (and ($generated@@185 ($generated@@92 ($generated@@341 $generated@@486) $generated@@489) $generated@@488) ($generated@@185 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@486) $generated@@489))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@491) $generated@@70)) (= (type $generated@@492) $generated@@70)) (= ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))) (and ($generated@@185 ($generated@@92 ($generated@@349 $generated@@490) $generated@@493) $generated@@492) ($generated@@185 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@490) $generated@@493))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@170) (= (type $generated@@497) $generated@@170)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@184 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@184 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@70)) (= (type $generated@@502) $generated@@70)) ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502))) (and (= ($generated@@233 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500)) $generated@@500) ($generated@@154 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500) ($generated@@366 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@170) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) $generated@@70)) ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505))) (and (= ($generated@@233 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503)) $generated@@503) ($generated@@154 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503) ($generated@@374 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= (type $generated@@508) $generated@@170)) ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507))) (and (= ($generated@@233 ($generated@@299 $generated@@161 $generated@@508)) $generated@@508) ($generated@@154 ($generated@@299 $generated@@161 $generated@@508) ($generated@@160 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@92 ($generated@@385 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@92 ($generated@@385 $generated@@510) $generated@@509)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@517 T@T) ($generated@@518 T@T) ) (= ($generated@@1 ($generated@@513 $generated@@517 $generated@@518)) 22)) (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (! (= ($generated@@514 ($generated@@513 $generated@@519 $generated@@520)) $generated@@519)
 :pattern ( ($generated@@513 $generated@@519 $generated@@520))
))) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@515 ($generated@@513 $generated@@521 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@513 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@515 (type $generated@@523))))
(= (type ($generated@@511 $generated@@523 $generated@@524 $generated@@525)) $generated@@526))
 :pattern ( ($generated@@511 $generated@@523 $generated@@524 $generated@@525))
))) (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(let (($generated@@532 (type $generated@@528)))
(= (type ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530)) ($generated@@513 $generated@@532 $generated@@531))))
 :pattern ( ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530))
))) (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@515 (type $generated@@533))))
 (=> (= (type $generated@@536) $generated@@537) (= ($generated@@511 ($generated@@516 $generated@@533 $generated@@534 $generated@@535 $generated@@536) $generated@@534 $generated@@535) $generated@@536)))
 :weight 0
))) (and (and (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (or (= $generated@@540 $generated@@542) (= ($generated@@511 ($generated@@516 $generated@@539 $generated@@540 $generated@@541 $generated@@538) $generated@@542 $generated@@543) ($generated@@511 $generated@@539 $generated@@542 $generated@@543)))
 :weight 0
)) (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (or (= $generated@@547 $generated@@549) (= ($generated@@511 ($generated@@516 $generated@@545 $generated@@546 $generated@@547 $generated@@544) $generated@@548 $generated@@549) ($generated@@511 $generated@@545 $generated@@548 $generated@@549)))
 :weight 0
))) (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (or true (= ($generated@@511 ($generated@@516 $generated@@551 $generated@@552 $generated@@553 $generated@@550) $generated@@554 $generated@@555) ($generated@@511 $generated@@551 $generated@@554 $generated@@555)))
 :weight 0
)))) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (= (type ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559)) ($generated@@513 $generated@@88 $generated@@4))
 :pattern ( ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@73 (type $generated@@565))))
 (=> (and (and (and (and (and (= (type $generated@@560) $generated@@88) (= (type $generated@@561) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@562) ($generated@@72 $generated@@4))) (= (type $generated@@563) $generated@@88)) (= (type $generated@@564) $generated@@88)) (= (type $generated@@565) ($generated@@72 $generated@@566))) (= ($generated@@0 ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))  (=> (and (not (= $generated@@564 $generated@@560)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@561 $generated@@564) $generated@@562))) (= $generated@@564 $generated@@563)))))
 :pattern ( ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@161) (= ($generated@@494 ($generated@@233 $generated@@571)) ($generated@@495 $generated@@571)))
 :pattern ( ($generated@@494 ($generated@@233 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@170) ($generated@@185 $generated@@572 ($generated@@86 0))) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@170) (= (type $generated@@574) $generated@@70)) ($generated@@185 $generated@@573 ($generated@@199 $generated@@574))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573) ($generated@@199 $generated@@574))))
 :pattern ( ($generated@@185 $generated@@573 ($generated@@199 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@185 $generated@@575 ($generated@@204 $generated@@576))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@204 $generated@@576))))
 :pattern ( ($generated@@185 $generated@@575 ($generated@@204 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@185 $generated@@577 ($generated@@175 $generated@@578))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577) ($generated@@175 $generated@@578))))
 :pattern ( ($generated@@185 $generated@@577 ($generated@@175 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@185 $generated@@579 ($generated@@456 $generated@@580))) (and (= ($generated@@233 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579) ($generated@@456 $generated@@580))))
 :pattern ( ($generated@@185 $generated@@579 ($generated@@456 $generated@@580)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@567 $generated@@181) $generated@@68))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@581 ($generated@@175 $generated@@582) $generated@@583) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@581 $generated@@584)))) ($generated@@213 $generated@@584 $generated@@582 $generated@@583))
 :pattern ( ($generated@@92 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@85 $generated@@581 ($generated@@175 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@161) (= (type $generated@@586) $generated@@70)) (= (type $generated@@587) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@587) (and ($generated@@159 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@70) ($generated@@85 $generated@@585 ($generated@@160 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@85 $generated@@585 ($generated@@160 $generated@@586 $generated@@588) $generated@@587))
))))) ($generated@@213 ($generated@@168 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@213 ($generated@@168 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@161) (= (type $generated@@590) $generated@@70)) (= (type $generated@@591) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@591) (and ($generated@@159 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@70) ($generated@@85 $generated@@589 ($generated@@160 $generated@@592 $generated@@590) $generated@@591))
 :pattern ( ($generated@@85 $generated@@589 ($generated@@160 $generated@@592 $generated@@590) $generated@@591))
))))) ($generated@@213 ($generated@@169 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@213 ($generated@@169 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@170) (= (type $generated@@594) $generated@@170)) (= ($generated@@184 ($generated@@209 $generated@@593) ($generated@@209 $generated@@594)) ($generated@@209 ($generated@@184 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@184 ($generated@@209 $generated@@593) ($generated@@209 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@233 ($generated@@209 $generated@@595)) ($generated@@209 ($generated@@233 $generated@@595)))
 :pattern ( ($generated@@233 ($generated@@209 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@228 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@227 $generated@@597)) (= ($generated@@226 $generated@@596) 0)) (= $generated@@596 ($generated@@225 $generated@@597))))
 :pattern ( ($generated@@226 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@87 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@248 ($generated@@93 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@248 $generated@@598) ($generated ($generated@@92 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@248 ($generated@@93 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@603) $generated@@2)) ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@605) $generated@@3)) ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@607) $generated@@4)) ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@609) $generated@@414)) ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@170)) ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@227 $generated@@170)) (= (type $generated@@613) $generated@@70)) (= ($generated@@154 $generated@@612 ($generated@@456 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@226 $generated@@612))) ($generated@@185 ($generated@@457 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@457 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@154 $generated@@612 ($generated@@456 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@227 $generated@@170)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@226 $generated@@616))) (< ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@619) $generated@@70)) (= (type $generated@@620) $generated@@70)) ($generated@@154 $generated@@618 ($generated@@366 $generated@@619 $generated@@620))) (and (and ($generated@@154 ($generated@@254 $generated@@618) ($generated@@199 $generated@@619)) ($generated@@154 ($generated@@309 $generated@@618) ($generated@@199 $generated@@620))) ($generated@@154 ($generated@@340 $generated@@618) ($generated@@199 ($generated@@160 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@154 $generated@@618 ($generated@@366 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@154 $generated@@621 ($generated@@374 $generated@@622 $generated@@623))) (and (and ($generated@@154 ($generated@@272 $generated@@621) ($generated@@204 $generated@@622)) ($generated@@154 ($generated@@320 $generated@@621) ($generated@@204 $generated@@623))) ($generated@@154 ($generated@@348 $generated@@621) ($generated@@204 ($generated@@160 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@154 $generated@@621 ($generated@@374 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@154 $generated@@624 $generated@@46))
 :pattern ( ($generated@@154 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@154 $generated@@625 $generated@@47))
 :pattern ( ($generated@@154 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@154 $generated@@626 $generated@@44))
 :pattern ( ($generated@@154 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@414) ($generated@@154 $generated@@627 $generated@@45))
 :pattern ( ($generated@@154 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@170) ($generated@@154 $generated@@628 $generated@@48))
 :pattern ( ($generated@@154 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(declare-fun $generated@@634 () Int)
(assert  (and (and (and (= (type $generated@@629) ($generated@@513 $generated@@88 $generated@@4)) (= (type $generated@@630) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@631) $generated@@88)) (= (type $generated@@632) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@635  (=> (= $generated@@629 ($generated@@512 $generated@@148 $generated@@630 $generated@@60 $generated@@631)) (=> (and (and (and ($generated@@152 $generated@@632) ($generated@@633 $generated@@632)) (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@88) (=> (and (not (= $generated@@636 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@630 $generated@@636) $generated@@60))) (or (= ($generated@@92 $generated@@632 $generated@@636) ($generated@@92 $generated@@630 $generated@@636)) (= $generated@@636 $generated@@631))))
 :pattern ( ($generated@@92 $generated@@632 $generated@@636))
))) (and ($generated@@143 $generated@@630 $generated@@632) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@85 $generated@@631 $generated@@181 $generated@@630)))))
(let (($generated@@637  (=> (and ($generated@@152 $generated@@630) ($generated@@633 $generated@@630)) (=> (and (and (not (= $generated@@631 $generated@@148)) (and ($generated@@154 $generated@@631 $generated@@181) ($generated@@85 $generated@@631 $generated@@181 $generated@@630))) (and (= 0 $generated@@634) (= (ControlFlow 0 3) 2))) $generated@@635))))
$generated@@637)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@74 (Int) Bool)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (Int) Int)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@430 () T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@473 (T@U Int) T@U)
(declare-fun $generated@@482 (T@U) Int)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@75 Int) ) (!  (=> (or ($generated@@74 $generated@@75) (not (= 0 $generated@@72))) (= ($generated@@73 $generated@@75) $generated@@75))
 :pattern ( ($generated@@73 $generated@@75))
))))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@65)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@67 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@67 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@64)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@139 Int) ) (!  (=> (or ($generated@@74 $generated@@139) (not (= 0 $generated@@72))) (<= ($generated@@138 0) ($generated@@73 $generated@@139)))
 :pattern ( ($generated@@73 $generated@@139))
))))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@64)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@64) (= (type $generated@@146) $generated@@64)) (= (type $generated@@147) $generated@@142)) ($generated@@136 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@136 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@64)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@80 $generated@@151 $generated@@2)) (= (type $generated@@160) $generated@@64)) ($generated@@136 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@136 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@81 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@67 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@81) (= (type $generated@@211) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@212) ($generated@@66 $generated@@4))) (= (type $generated@@214) $generated@@81)) (= (type $generated@@215) ($generated@@66 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@163 $generated@@81 $generated@@4))
 :pattern ( ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@67 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@224) ($generated@@66 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@66 $generated@@228))) (= ($generated@@0 ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@142)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@151)) (= (type $generated@@236) $generated@@151)) (= ($generated@@136 ($generated@@229 $generated@@235 $generated@@236) ($generated@@141 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@136 ($generated@@229 $generated@@235 $generated@@236) ($generated@@141 $generated@@233 $generated@@234)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@237 Int) ) (!  (=> (or ($generated@@74 ($generated@@138 $generated@@237)) (not (= 0 $generated@@72))) (= ($generated@@73 ($generated@@138 $generated@@237)) ($generated@@138 $generated@@237)))
 :weight 3
 :pattern ( ($generated@@73 ($generated@@138 $generated@@237)))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@142) (= (type $generated@@239) $generated@@142)) (= ($generated@@148 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@148 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@80 $generated@@151 $generated@@4)) (= (type $generated@@243) $generated@@64)) (= ($generated@@136 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@151) ($generated@@0 ($generated@@85 $generated@@242 $generated@@244))) ($generated@@230 $generated@@244 $generated@@243))
 :pattern ( ($generated@@85 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@136 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@80 $generated@@151 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@136 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@151) ($generated@@0 ($generated@@85 $generated@@247 $generated@@249))) ($generated@@230 $generated@@249 $generated@@248))
 :pattern ( ($generated@@85 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@136 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@138 $generated@@250) $generated@@250)
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) $generated@@64)) (= (type $generated@@259) $generated@@151)) (= (type $generated@@260) $generated@@151)) (= (type $generated@@261) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@255 $generated@@261)) (= ($generated@@78 ($generated@@229 $generated@@259 $generated@@260) ($generated@@141 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@78 ($generated@@229 $generated@@259 $generated@@260) ($generated@@141 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@142) (= ($generated@@140 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@142) ($generated@@140 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@151) (= (type $generated@@267) $generated@@151)) (= $generated@@265 ($generated@@229 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@140 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@151)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@256 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@78 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@256 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@80 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@83 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@80 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@85 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@80 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@85 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@85 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@80 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@83 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@80 $generated@@324 $generated@@2)) (= ($generated@@157 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@85 $generated@@323 $generated@@325))) (<= ($generated ($generated@@85 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@85 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@157 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@85 ($generated@@287 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@287 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@80 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@291 (type $generated@@333))))
(let (($generated@@335 ($generated@@290 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@289 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@288 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@309 (type $generated@@337))))
(let (($generated@@339 ($generated@@308 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@307 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@306 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@305 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@309 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@80 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@309 (type $generated@@344))))
(let (($generated@@346 ($generated@@308 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@307 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@306 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@80 $generated@@151 $generated@@2)) (= (type $generated@@349) $generated@@64)) (= ($generated@@136 $generated@@348 ($generated@@156 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@151) (< 0 ($generated ($generated@@85 $generated@@348 $generated@@350)))) ($generated@@230 $generated@@350 $generated@@349))
 :pattern ( ($generated@@85 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@136 $generated@@348 ($generated@@156 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@80 $generated@@151 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@351 ($generated@@240 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@151) ($generated@@0 ($generated@@85 $generated@@351 $generated@@354))) ($generated@@256 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@85 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@78 $generated@@351 ($generated@@240 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@80 $generated@@151 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@151) ($generated@@0 ($generated@@85 $generated@@355 $generated@@358))) ($generated@@256 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@85 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@78 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@85 ($generated@@282 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@85 ($generated@@282 $generated@@360) $generated@@359)))
)))
(assert  (and (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@361 $generated@@364)) ($generated@@80 $generated@@151 $generated@@4))
 :pattern ( ($generated@@361 $generated@@364))
)) (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@362 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@362 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@291 (type $generated@@367))))
(let (($generated@@369 ($generated@@290 (type $generated@@367))))
(= (type ($generated@@363 $generated@@367)) ($generated@@80 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@363 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@289 $generated@@151 $generated@@151)) (= (type $generated@@371) $generated@@151)) (= ($generated@@0 ($generated@@85 ($generated@@361 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@85 ($generated@@287 $generated@@370) ($generated@@149 ($generated@@362 $generated@@142 $generated@@371)))) (= ($generated@@85 ($generated@@363 $generated@@370) ($generated@@149 ($generated@@362 $generated@@142 $generated@@371))) ($generated@@150 ($generated@@362 $generated@@142 $generated@@371))))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@80 $generated@@151 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@309 (type $generated@@375))))
(let (($generated@@377 ($generated@@308 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@80 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@379) $generated@@151)) (= ($generated@@0 ($generated@@85 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@378) ($generated@@149 ($generated@@362 $generated@@142 $generated@@379)))) (= ($generated@@85 ($generated@@373 $generated@@378) ($generated@@149 ($generated@@362 $generated@@142 $generated@@379))) ($generated@@150 ($generated@@362 $generated@@142 $generated@@379))))))
 :pattern ( ($generated@@85 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@290 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@289 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@85 ($generated@@287 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@85 ($generated@@363 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@85 ($generated@@287 $generated@@380) $generated@@384))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@308 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@307 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@85 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@385) $generated@@389))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@64)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@289 $generated@@151 $generated@@151)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@151) ($generated@@0 ($generated@@85 ($generated@@287 $generated@@393) $generated@@397))) (and ($generated@@256 ($generated@@85 ($generated@@363 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@256 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@393) $generated@@397))
 :pattern ( ($generated@@85 ($generated@@287 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@78 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@151) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@401) $generated@@405))) (and ($generated@@256 ($generated@@85 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@256 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@78 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@80 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@309 (type $generated@@408))))
(let (($generated@@410 ($generated@@308 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@307 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@306 $generated@@410 $generated@@409)) (= ($generated@@305 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@305 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@309 (type $generated@@411))))
(let (($generated@@413 ($generated@@308 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@307 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@306 $generated@@413 $generated@@412)) (= ($generated@@341 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@341 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@309 (type $generated@@414))))
(let (($generated@@416 ($generated@@308 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@307 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@306 $generated@@416 $generated@@415)) (= ($generated@@372 $generated@@414) ($generated@@406 $generated@@151))))))
 :pattern ( ($generated@@372 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@291 (type $generated@@417))))
(let (($generated@@419 ($generated@@290 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@289 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@288 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@151) (= (type $generated@@421) $generated@@151)) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@417) ($generated@@276 ($generated@@229 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@361 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@309 (type $generated@@422))))
(let (($generated@@424 ($generated@@308 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@307 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@306 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@151) (= (type $generated@@426) $generated@@151)) ($generated@@0 ($generated@@85 ($generated@@372 $generated@@422) ($generated@@276 ($generated@@229 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@372 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@151) ($generated@@230 $generated@@427 $generated@@46)) (and (= ($generated@@276 ($generated@@362 $generated@@2 $generated@@427)) $generated@@427) ($generated@@136 ($generated@@362 $generated@@2 $generated@@427) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@427 $generated@@46))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@151) ($generated@@230 $generated@@428 $generated@@47)) (and (= ($generated@@276 ($generated@@362 $generated@@3 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@362 $generated@@3 $generated@@428) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@428 $generated@@47))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@151) ($generated@@230 $generated@@429 $generated@@44)) (and (= ($generated@@276 ($generated@@362 $generated@@4 $generated@@429)) $generated@@429) ($generated@@136 ($generated@@362 $generated@@4 $generated@@429) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@429 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@430) 20))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@151) ($generated@@230 $generated@@431 $generated@@45)) (and (= ($generated@@276 ($generated@@362 $generated@@430 $generated@@431)) $generated@@431) ($generated@@136 ($generated@@362 $generated@@430 $generated@@431) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@431 $generated@@45))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (= (type $generated@@433) $generated@@64) (= ($generated@@230 ($generated@@276 $generated@@432) $generated@@433) ($generated@@136 $generated@@432 $generated@@433)))
 :pattern ( ($generated@@230 ($generated@@276 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@83 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@80 $generated@@435 $generated@@2)) (<= 0 ($generated@@281 $generated@@434))))
 :pattern ( ($generated@@281 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@271 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@270 $generated@@437)) (<= 0 ($generated@@269 $generated@@436))))
 :pattern ( ($generated@@269 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@390 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@390 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@390 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@390 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@76 ($generated@@390 $generated@@446 $generated@@447)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@398 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@398 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@398 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@76 ($generated@@398 $generated@@456 $generated@@457)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@151) (= (type $generated@@459) $generated@@151)) (= ($generated@@262 ($generated@@229 $generated@@458 $generated@@459)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@141 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@141 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@141 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@141 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@151) (= (type $generated@@469) $generated@@151)) (= ($generated@@149 ($generated@@229 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@229 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@151) (= (type $generated@@471) $generated@@151)) (= ($generated@@150 ($generated@@229 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@229 $generated@@470 $generated@@471))
)))
(assert  (and (forall (($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@474))
)) (forall (($generated@@475 T@U) ($generated@@476 Int) ) (! (let (($generated@@477 ($generated@@271 (type $generated@@475))))
(= (type ($generated@@473 $generated@@475 $generated@@476)) $generated@@477))
 :pattern ( ($generated@@473 $generated@@475 $generated@@476))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@270 $generated@@151)) (= (type $generated@@479) $generated@@64)) (= (type $generated@@480) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@478 ($generated@@472 $generated@@479) $generated@@480) (forall (($generated@@481 Int) ) (!  (=> (and (<= 0 $generated@@481) (< $generated@@481 ($generated@@269 $generated@@478))) ($generated@@256 ($generated@@473 $generated@@478 $generated@@481) $generated@@479 $generated@@480))
 :pattern ( ($generated@@473 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@78 $generated@@478 ($generated@@472 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@483 Int) ) (! (= ($generated@@482 ($generated@@79 $generated@@483)) $generated@@483)
 :pattern ( ($generated@@79 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@240 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@240 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@76 ($generated@@240 $generated@@487)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@245 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@245 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@76 ($generated@@245 $generated@@491)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@156 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@76 ($generated@@156 $generated@@495)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@472 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@472 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@76 ($generated@@472 $generated@@499)) $generated@@57))
 :pattern ( ($generated@@472 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(= ($generated@@362 $generated@@501 ($generated@@276 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@276 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@289 $generated@@151 $generated@@151)) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@64)) (= ($generated@@136 $generated@@502 ($generated@@390 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@151) ($generated@@0 ($generated@@85 ($generated@@287 $generated@@502) $generated@@505))) (and ($generated@@230 ($generated@@85 ($generated@@363 $generated@@502) $generated@@505) $generated@@504) ($generated@@230 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@502) $generated@@505))
 :pattern ( ($generated@@85 ($generated@@287 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@136 $generated@@502 ($generated@@390 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) (= ($generated@@136 $generated@@506 ($generated@@398 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@151) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@506) $generated@@509))) (and ($generated@@230 ($generated@@85 ($generated@@373 $generated@@506) $generated@@509) $generated@@508) ($generated@@230 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@506) $generated@@509))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@136 $generated@@506 ($generated@@398 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@151) (= (type $generated@@513) $generated@@151)) (< ($generated@@510 $generated@@512) ($generated@@511 ($generated@@229 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@229 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@151) (= (type $generated@@515) $generated@@151)) (< ($generated@@510 $generated@@515) ($generated@@511 ($generated@@229 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@229 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@151) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@230 $generated@@516 ($generated@@390 $generated@@517 $generated@@518))) (and (= ($generated@@276 ($generated@@362 ($generated@@289 $generated@@151 $generated@@151) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@362 ($generated@@289 $generated@@151 $generated@@151) $generated@@516) ($generated@@390 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@230 $generated@@516 ($generated@@390 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@151) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) ($generated@@230 $generated@@519 ($generated@@398 $generated@@520 $generated@@521))) (and (= ($generated@@276 ($generated@@362 ($generated@@307 $generated@@151 $generated@@151) $generated@@519)) $generated@@519) ($generated@@136 ($generated@@362 ($generated@@307 $generated@@151 $generated@@151) $generated@@519) ($generated@@398 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@230 $generated@@519 ($generated@@398 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@151)) ($generated@@230 $generated@@524 ($generated@@141 $generated@@522 $generated@@523))) (and (= ($generated@@276 ($generated@@362 $generated@@142 $generated@@524)) $generated@@524) ($generated@@136 ($generated@@362 $generated@@142 $generated@@524) ($generated@@141 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@230 $generated@@524 ($generated@@141 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
 (not ($generated@@0 ($generated@@85 ($generated@@406 $generated@@526) $generated@@525))))
 :pattern ( (let (($generated@@526 (type $generated@@525)))
($generated@@85 ($generated@@406 $generated@@526) $generated@@525)))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (and (= ($generated@@76 ($generated@@141 $generated@@529 $generated@@530)) $generated@@62) (= ($generated@@527 ($generated@@141 $generated@@529 $generated@@530)) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@142) (= ($generated@@510 ($generated@@276 $generated@@531)) ($generated@@511 $generated@@531)))
 :pattern ( ($generated@@510 ($generated@@276 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@151) ($generated@@230 $generated@@532 ($generated@@79 0))) (and (= ($generated@@276 ($generated@@362 $generated@@2 $generated@@532)) $generated@@532) ($generated@@136 ($generated@@362 ($generated@@80 $generated@@151 $generated@@4) $generated@@532) ($generated@@79 0))))
 :pattern ( ($generated@@230 $generated@@532 ($generated@@79 0)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@151) (= (type $generated@@534) $generated@@64)) ($generated@@230 $generated@@533 ($generated@@240 $generated@@534))) (and (= ($generated@@276 ($generated@@362 ($generated@@80 $generated@@151 $generated@@4) $generated@@533)) $generated@@533) ($generated@@136 ($generated@@362 ($generated@@80 $generated@@151 $generated@@4) $generated@@533) ($generated@@240 $generated@@534))))
 :pattern ( ($generated@@230 $generated@@533 ($generated@@240 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@151) (= (type $generated@@536) $generated@@64)) ($generated@@230 $generated@@535 ($generated@@245 $generated@@536))) (and (= ($generated@@276 ($generated@@362 ($generated@@80 $generated@@151 $generated@@4) $generated@@535)) $generated@@535) ($generated@@136 ($generated@@362 ($generated@@80 $generated@@151 $generated@@4) $generated@@535) ($generated@@245 $generated@@536))))
 :pattern ( ($generated@@230 $generated@@535 ($generated@@245 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@151) (= (type $generated@@538) $generated@@64)) ($generated@@230 $generated@@537 ($generated@@156 $generated@@538))) (and (= ($generated@@276 ($generated@@362 ($generated@@80 $generated@@151 $generated@@2) $generated@@537)) $generated@@537) ($generated@@136 ($generated@@362 ($generated@@80 $generated@@151 $generated@@2) $generated@@537) ($generated@@156 $generated@@538))))
 :pattern ( ($generated@@230 $generated@@537 ($generated@@156 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@151) (= (type $generated@@540) $generated@@64)) ($generated@@230 $generated@@539 ($generated@@472 $generated@@540))) (and (= ($generated@@276 ($generated@@362 ($generated@@270 $generated@@151) $generated@@539)) $generated@@539) ($generated@@136 ($generated@@362 ($generated@@270 $generated@@151) $generated@@539) ($generated@@472 $generated@@540))))
 :pattern ( ($generated@@230 $generated@@539 ($generated@@472 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@80 $generated@@151 $generated@@2)) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@541 ($generated@@156 $generated@@542) $generated@@543) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@151) (< 0 ($generated ($generated@@85 $generated@@541 $generated@@544)))) ($generated@@256 $generated@@544 $generated@@542 $generated@@543))
 :pattern ( ($generated@@85 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@78 $generated@@541 ($generated@@156 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@142) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@255 $generated@@547) (and ($generated@@140 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@64) ($generated@@78 $generated@@545 ($generated@@141 $generated@@546 $generated@@548) $generated@@547))
 :pattern ( ($generated@@78 $generated@@545 ($generated@@141 $generated@@546 $generated@@548) $generated@@547))
))))) ($generated@@256 ($generated@@149 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@256 ($generated@@149 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@142) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@255 $generated@@551) (and ($generated@@140 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@78 $generated@@549 ($generated@@141 $generated@@552 $generated@@550) $generated@@551))
 :pattern ( ($generated@@78 $generated@@549 ($generated@@141 $generated@@552 $generated@@550) $generated@@551))
))))) ($generated@@256 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@256 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@151) (= (type $generated@@554) $generated@@151)) (= ($generated@@229 ($generated@@251 $generated@@553) ($generated@@251 $generated@@554)) ($generated@@251 ($generated@@229 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@229 ($generated@@251 $generated@@553) ($generated@@251 $generated@@554)))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@138 $generated@@555))) ($generated@@251 ($generated@@276 ($generated@@8 $generated@@555))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@138 $generated@@555))))
)))
(assert (forall (($generated@@556 T@U) ) (! (= ($generated@@276 ($generated@@251 $generated@@556)) ($generated@@251 ($generated@@276 $generated@@556)))
 :pattern ( ($generated@@276 ($generated@@251 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@271 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@270 $generated@@558)) (= ($generated@@269 $generated@@557) 0)) (= $generated@@557 ($generated@@268 $generated@@558))))
 :pattern ( ($generated@@269 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (and (= (type $generated@@559) ($generated@@80 $generated@@562 $generated@@2)) (= (type $generated@@561) $generated@@2)) (<= 0 ($generated $generated@@561))) (= ($generated@@281 ($generated@@86 $generated@@559 $generated@@560 $generated@@561)) (+ (- ($generated@@281 $generated@@559) ($generated ($generated@@85 $generated@@559 $generated@@560))) ($generated $generated@@561)))))
 :pattern ( ($generated@@281 ($generated@@86 $generated@@559 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@564) $generated@@2)) ($generated@@78 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@78 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@566) $generated@@3)) ($generated@@78 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@78 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@568) $generated@@4)) ($generated@@78 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@78 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@570) $generated@@430)) ($generated@@78 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@78 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@572) $generated@@151)) ($generated@@78 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@78 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@270 $generated@@151)) (= (type $generated@@574) $generated@@64)) (= ($generated@@136 $generated@@573 ($generated@@472 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@269 $generated@@573))) ($generated@@230 ($generated@@473 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@473 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@136 $generated@@573 ($generated@@472 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@270 $generated@@151)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@269 $generated@@577))) (< ($generated@@511 ($generated@@362 $generated@@142 ($generated@@473 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@511 ($generated@@362 $generated@@142 ($generated@@473 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@289 $generated@@151 $generated@@151)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@390 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@287 $generated@@579) ($generated@@240 $generated@@580)) ($generated@@136 ($generated@@330 $generated@@579) ($generated@@240 $generated@@581))) ($generated@@136 ($generated@@361 $generated@@579) ($generated@@240 ($generated@@141 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@390 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@136 $generated@@582 ($generated@@398 $generated@@583 $generated@@584))) (and (and ($generated@@136 ($generated@@305 $generated@@582) ($generated@@245 $generated@@583)) ($generated@@136 ($generated@@341 $generated@@582) ($generated@@245 $generated@@584))) ($generated@@136 ($generated@@372 $generated@@582) ($generated@@245 ($generated@@141 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@136 $generated@@582 ($generated@@398 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@136 $generated@@585 $generated@@46))
 :pattern ( ($generated@@136 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@136 $generated@@586 $generated@@47))
 :pattern ( ($generated@@136 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@136 $generated@@587 $generated@@44))
 :pattern ( ($generated@@136 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@430) ($generated@@136 $generated@@588 $generated@@45))
 :pattern ( ($generated@@136 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@151) ($generated@@136 $generated@@589 $generated@@48))
 :pattern ( ($generated@@136 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@591) ($generated@@163 $generated@@81 $generated@@4))) (= (type $generated@@592) $generated@@81)) (= (type $generated@@594) ($generated@@163 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@596  (=> (= (ControlFlow 0 5) (- 0 4)) (<= ($generated@@138 0) ($generated@@73 $generated@@590)))))
(let (($generated@@597  (=> (and (and (= $generated@@591 ($generated@@217 $generated@@592 $generated@@593 $generated@@60 false)) (= ($generated@@73 $generated@@590) $generated@@590)) (and ($generated@@136 ($generated@@8 ($generated@@73 $generated@@590)) $generated@@46) (= (ControlFlow 0 6) 5))) $generated@@596)))
(let (($generated@@598  (=> ($generated@@78 ($generated@@8 $generated@@590) $generated@@46 $generated@@593) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@590) (= $generated@@590 $generated@@590))) (=> (or (<= 0 $generated@@590) (= $generated@@590 $generated@@590)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (= $generated@@590 $generated@@590) (< $generated@@590 $generated@@590))))))))
(let (($generated@@599  (=> (= $generated@@594 ($generated@@162 $generated@@592 $generated@@593 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@598) (=> (= (ControlFlow 0 7) 6) $generated@@597)))))
(let (($generated@@600  (=> (and (and ($generated@@255 $generated@@593) ($generated@@595 $generated@@593)) (and (= 0 $generated@@72) (= (ControlFlow 0 8) 7))) $generated@@599)))
$generated@@600))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@225 (T@T) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@299 (T@T T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@T) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U T@U T@U) T@U)
(declare-fun $generated@@512 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@513 (T@T T@T) T@T)
(declare-fun $generated@@514 (T@T) T@T)
(declare-fun $generated@@515 (T@T) T@T)
(declare-fun $generated@@516 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@70) (= (type $generated@@215) $generated@@70)) (= (type $generated@@216) $generated@@170)) (= (type $generated@@217) $generated@@170)) (= (type $generated@@218) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@218)) (= ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218)  (and ($generated@@213 $generated@@216 $generated@@214 $generated@@218) ($generated@@213 $generated@@217 $generated@@215 $generated@@218))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@219 $generated@@220)) $generated@@75)
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@161) (= ($generated@@159 $generated@@221) (= ($generated@@219 $generated@@221) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@161) ($generated@@159 $generated@@222)) (exists (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (and (= (type $generated@@223) $generated@@170) (= (type $generated@@224) $generated@@170)) (= $generated@@222 ($generated@@184 $generated@@223 $generated@@224)))
 :no-pattern (type $generated@@223)
 :no-pattern (type $generated@@224)
 :no-pattern ($generated $generated@@223)
 :no-pattern ($generated@@0 $generated@@223)
 :no-pattern ($generated $generated@@224)
 :no-pattern ($generated@@0 $generated@@224)
)))
 :pattern ( ($generated@@159 $generated@@222))
)))
(assert  (and (and (forall (($generated@@229 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@229)) 18)) (forall (($generated@@230 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
))) (forall (($generated@@231 T@T) ) (! (= (type ($generated@@225 $generated@@231)) ($generated@@227 $generated@@231))
 :pattern ( ($generated@@225 $generated@@231))
))))
(assert (forall (($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@232)) 0)
 :pattern ( ($generated@@225 $generated@@232))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@170)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@70) (= (type $generated@@237) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237) ($generated@@85 $generated@@235 $generated@@236 $generated@@237)))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@240) $generated@@170)) (= (type $generated@@241) $generated@@70)) ($generated@@143 $generated@@238 $generated@@239)) ($generated@@213 $generated@@240 $generated@@241 $generated@@238)) ($generated@@213 $generated@@240 $generated@@241 $generated@@239))
 :pattern ( ($generated@@143 $generated@@238 $generated@@239) ($generated@@213 $generated@@240 $generated@@241 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@242) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@245) $generated@@70)) ($generated@@143 $generated@@242 $generated@@243)) ($generated@@85 $generated@@244 $generated@@245 $generated@@242)) ($generated@@85 $generated@@244 $generated@@245 $generated@@243))
 :pattern ( ($generated@@143 $generated@@242 $generated@@243) ($generated@@85 $generated@@244 $generated@@245 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@247) $generated@@88)) (=> (and (and ($generated@@152 $generated@@246) (and (not (= $generated@@247 $generated@@148)) (= ($generated@@153 $generated@@247) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151) $generated@@46 $generated@@246)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151))
)))
(assert (forall (($generated@@250 T@T) ) (! (= (type ($generated@@249 $generated@@250)) ($generated@@87 $generated@@250 $generated@@2))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@90 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@87 $generated@@252 $generated@@2)) (and (= (= ($generated@@248 $generated@@251) 0) (= $generated@@251 ($generated@@249 $generated@@252))) (=> (not (= ($generated@@248 $generated@@251) 0)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) (< 0 ($generated ($generated@@92 $generated@@251 $generated@@253))))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 19)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@87 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 20)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@87 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@292) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@290 $generated@@291 $generated@@292)) (and ($generated@@143 $generated@@291 $generated@@292) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@73 (type $generated@@294))))
 (=> (and (and (= (type $generated@@293) $generated@@88) (= (type $generated@@294) ($generated@@72 $generated@@295))) (not ($generated@@196 $generated@@294))) (= ($generated@@94 ($generated@@92 $generated@@291 $generated@@293) $generated@@294) ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))
))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@90 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@87 $generated@@297 $generated@@2)) (= ($generated@@176 $generated@@296) (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@297) (and (<= 0 ($generated ($generated@@92 $generated@@296 $generated@@298))) (<= ($generated ($generated@@92 $generated@@296 $generated@@298)) ($generated@@248 $generated@@296))))
 :pattern ( ($generated@@92 $generated@@296 $generated@@298))
)))))
 :pattern ( ($generated@@176 $generated@@296))
)))
(assert (forall (($generated@@300 T@T) ($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@170) ($generated@@185 $generated@@302 $generated@@147)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@302)) $generated@@302) ($generated@@154 ($generated@@299 $generated@@88 $generated@@302) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@302 $generated@@147))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@170) ($generated@@185 $generated@@303 $generated@@181)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@303)) $generated@@303) ($generated@@154 ($generated@@299 $generated@@88 $generated@@303) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@303 $generated@@181))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@88) (= ($generated@@154 $generated@@304 $generated@@181)  (and ($generated@@154 $generated@@304 $generated@@147) (not (= $generated@@304 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@304 $generated@@181))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@258 (type $generated@@305))))
(let (($generated@@307 ($generated@@257 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@256 $generated@@307 $generated@@306)) (or (= $generated@@305 ($generated@@255 $generated@@307 $generated@@306)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@305) $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@254 $generated@@305))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@258 (type $generated@@310))))
(= (type ($generated@@309 $generated@@310)) ($generated@@87 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@258 (type $generated@@312))))
(let (($generated@@314 ($generated@@257 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@256 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@255 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@313) ($generated@@0 ($generated@@92 ($generated@@309 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(let (($generated@@318 ($generated@@275 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@274 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@273 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@272 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@276 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@276 (type $generated@@323))))
(let (($generated@@325 ($generated@@275 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@274 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@273 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@92 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@328) $generated@@70)) (= ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@327 $generated@@329)))) ($generated@@185 $generated@@329 $generated@@328))
 :pattern ( ($generated@@92 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@330) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@331) $generated@@70)) (= (type $generated@@332) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@170) ($generated@@0 ($generated@@92 $generated@@330 $generated@@333))) ($generated@@213 $generated@@333 $generated@@331 $generated@@332))
 :pattern ( ($generated@@92 $generated@@330 $generated@@333))
))))
 :pattern ( ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@335) $generated@@70)) (= (type $generated@@336) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@170) ($generated@@0 ($generated@@92 $generated@@334 $generated@@337))) ($generated@@213 $generated@@337 $generated@@335 $generated@@336))
 :pattern ( ($generated@@92 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= ($generated ($generated@@92 ($generated@@249 $generated@@339) $generated@@338)) 0))
 :pattern ( (let (($generated@@339 (type $generated@@338)))
($generated@@92 ($generated@@249 $generated@@339) $generated@@338)))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@258 (type $generated@@343))))
(let (($generated@@345 ($generated@@257 (type $generated@@343))))
(= (type ($generated@@341 $generated@@343)) ($generated@@87 $generated@@345 $generated@@344))))
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@347) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))  (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347)))) (= ($generated@@92 ($generated@@341 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@347))))))
 :pattern ( ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@276 (type $generated@@351))))
(let (($generated@@353 ($generated@@275 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@87 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@355) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355)))) (= ($generated@@92 ($generated@@349 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@355))))))
 :pattern ( ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(let (($generated@@359 ($generated@@257 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@256 $generated@@359 $generated@@358)) (= ($generated@@0 ($generated@@92 ($generated@@309 $generated@@356) $generated@@357)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@356) $generated@@360)) (= $generated@@357 ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@356) $generated@@360))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))
))))))
 :pattern ( ($generated@@92 ($generated@@309 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(let (($generated@@364 ($generated@@275 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@274 $generated@@364 $generated@@363)) (= ($generated@@0 ($generated@@92 ($generated@@320 $generated@@361) $generated@@362)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@361) $generated@@365)) (= $generated@@362 ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@361) $generated@@365))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))
))))))
 :pattern ( ($generated@@92 ($generated@@320 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@70)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (= (type $generated@@369) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@370) $generated@@70)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))) (and ($generated@@213 ($generated@@92 ($generated@@341 $generated@@369) $generated@@373) $generated@@371 $generated@@372) ($generated@@213 $generated@@373 $generated@@370 $generated@@372)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@369) $generated@@373))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))
))))
 :pattern ( ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@70)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))) (and ($generated@@213 ($generated@@92 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@213 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@383) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@382 $generated@@384))) (and ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))) ($generated@@143 $generated@@382 $generated@@384))
 :pattern ( ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@T) ) (! (= (type ($generated@@385 $generated@@386)) ($generated@@87 $generated@@386 $generated@@4))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@276 (type $generated@@387))))
(let (($generated@@389 ($generated@@275 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@274 $generated@@389 $generated@@388)) (= (= $generated@@387 ($generated@@273 $generated@@389 $generated@@388)) (= ($generated@@272 $generated@@387) ($generated@@385 $generated@@389))))))
 :pattern ( ($generated@@272 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@276 (type $generated@@390))))
(let (($generated@@392 ($generated@@275 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@274 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@273 $generated@@392 $generated@@391)) (= ($generated@@320 $generated@@390) ($generated@@385 $generated@@391))))))
 :pattern ( ($generated@@320 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@276 (type $generated@@393))))
(let (($generated@@395 ($generated@@275 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@274 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@273 $generated@@395 $generated@@394)) (= ($generated@@348 $generated@@393) ($generated@@385 $generated@@170))))))
 :pattern ( ($generated@@348 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@258 (type $generated@@396))))
(let (($generated@@398 ($generated@@257 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@256 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@255 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (and (and (= (type $generated@@399) $generated@@170) (= (type $generated@@400) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@340 $generated@@396) ($generated@@233 ($generated@@184 $generated@@399 $generated@@400)))))
 :no-pattern (type $generated@@399)
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@340 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@276 (type $generated@@401))))
(let (($generated@@403 ($generated@@275 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@274 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@273 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@170) (= (type $generated@@405) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@348 $generated@@401) ($generated@@233 ($generated@@184 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@348 $generated@@401))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@76)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@T) ) (!  (=> (and (= (type $generated@@408) $generated@@76) (= (type $generated@@409) $generated@@74)) (and (= ($generated@@406 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@408) (= ($generated@@83 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@409)))
 :pattern ( ($generated@@192 $generated@@410 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@170) ($generated@@185 $generated@@411 $generated@@46)) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@411)) $generated@@411) ($generated@@154 ($generated@@299 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@170) ($generated@@185 $generated@@412 $generated@@47)) (and (= ($generated@@233 ($generated@@299 $generated@@3 $generated@@412)) $generated@@412) ($generated@@154 ($generated@@299 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@44)) (and (= ($generated@@233 ($generated@@299 $generated@@4 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@299 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 21))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@45)) (and (= ($generated@@233 ($generated@@299 $generated@@414 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@299 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@70) (= ($generated@@185 ($generated@@233 $generated@@416) $generated@@417) ($generated@@154 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@185 ($generated@@233 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@90 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@87 $generated@@419 $generated@@2)) (<= 0 ($generated@@248 $generated@@418))))
 :pattern ( ($generated@@248 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@228 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@227 $generated@@421)) (<= 0 ($generated@@226 $generated@@420))))
 :pattern ( ($generated@@226 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@70) (= (type $generated@@425) $generated@@70)) (= ($generated@@422 ($generated@@366 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@366 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@70)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@70) (= (type $generated@@429) $generated@@70)) (= ($generated@@426 ($generated@@366 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@366 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@81 ($generated@@366 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@366 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@70) (= (type $generated@@435) $generated@@70)) (= ($generated@@432 ($generated@@374 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@374 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@70) (= (type $generated@@439) $generated@@70)) (= ($generated@@436 ($generated@@374 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@374 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@81 ($generated@@374 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@374 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@170) (= (type $generated@@443) $generated@@170)) (= ($generated@@219 ($generated@@184 $generated@@442 $generated@@443)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@70)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@70) (= (type $generated@@447) $generated@@70)) (= ($generated@@444 ($generated@@160 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@160 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@70)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@70) (= (type $generated@@451) $generated@@70)) (= ($generated@@448 ($generated@@160 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@160 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@170) (= (type $generated@@453) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@184 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@228 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@227 $generated@@170)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@226 $generated@@462))) ($generated@@213 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@86 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@86 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@70) (= ($generated@@468 ($generated@@199 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@199 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@70) (= ($generated@@472 ($generated@@204 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@204 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@70) (= ($generated@@476 ($generated@@175 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@175 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@70) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@70) (= ($generated@@81 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@299 $generated@@485 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@487) $generated@@70)) (= (type $generated@@488) $generated@@70)) (= ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))) (and ($generated@@185 ($generated@@92 ($generated@@341 $generated@@486) $generated@@489) $generated@@488) ($generated@@185 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@486) $generated@@489))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@491) $generated@@70)) (= (type $generated@@492) $generated@@70)) (= ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))) (and ($generated@@185 ($generated@@92 ($generated@@349 $generated@@490) $generated@@493) $generated@@492) ($generated@@185 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@490) $generated@@493))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@170) (= (type $generated@@497) $generated@@170)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@184 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@184 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@70)) (= (type $generated@@502) $generated@@70)) ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502))) (and (= ($generated@@233 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500)) $generated@@500) ($generated@@154 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500) ($generated@@366 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@170) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) $generated@@70)) ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505))) (and (= ($generated@@233 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503)) $generated@@503) ($generated@@154 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503) ($generated@@374 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= (type $generated@@508) $generated@@170)) ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507))) (and (= ($generated@@233 ($generated@@299 $generated@@161 $generated@@508)) $generated@@508) ($generated@@154 ($generated@@299 $generated@@161 $generated@@508) ($generated@@160 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@92 ($generated@@385 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@92 ($generated@@385 $generated@@510) $generated@@509)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@517 T@T) ($generated@@518 T@T) ) (= ($generated@@1 ($generated@@513 $generated@@517 $generated@@518)) 22)) (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (! (= ($generated@@514 ($generated@@513 $generated@@519 $generated@@520)) $generated@@519)
 :pattern ( ($generated@@513 $generated@@519 $generated@@520))
))) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@515 ($generated@@513 $generated@@521 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@513 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@515 (type $generated@@523))))
(= (type ($generated@@511 $generated@@523 $generated@@524 $generated@@525)) $generated@@526))
 :pattern ( ($generated@@511 $generated@@523 $generated@@524 $generated@@525))
))) (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(let (($generated@@532 (type $generated@@528)))
(= (type ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530)) ($generated@@513 $generated@@532 $generated@@531))))
 :pattern ( ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530))
))) (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@515 (type $generated@@533))))
 (=> (= (type $generated@@536) $generated@@537) (= ($generated@@511 ($generated@@516 $generated@@533 $generated@@534 $generated@@535 $generated@@536) $generated@@534 $generated@@535) $generated@@536)))
 :weight 0
))) (and (and (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (or (= $generated@@540 $generated@@542) (= ($generated@@511 ($generated@@516 $generated@@539 $generated@@540 $generated@@541 $generated@@538) $generated@@542 $generated@@543) ($generated@@511 $generated@@539 $generated@@542 $generated@@543)))
 :weight 0
)) (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (or (= $generated@@547 $generated@@549) (= ($generated@@511 ($generated@@516 $generated@@545 $generated@@546 $generated@@547 $generated@@544) $generated@@548 $generated@@549) ($generated@@511 $generated@@545 $generated@@548 $generated@@549)))
 :weight 0
))) (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (or true (= ($generated@@511 ($generated@@516 $generated@@551 $generated@@552 $generated@@553 $generated@@550) $generated@@554 $generated@@555) ($generated@@511 $generated@@551 $generated@@554 $generated@@555)))
 :weight 0
)))) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (= (type ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559)) ($generated@@513 $generated@@88 $generated@@4))
 :pattern ( ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@73 (type $generated@@565))))
 (=> (and (and (and (and (and (= (type $generated@@560) $generated@@88) (= (type $generated@@561) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@562) ($generated@@72 $generated@@4))) (= (type $generated@@563) $generated@@88)) (= (type $generated@@564) $generated@@88)) (= (type $generated@@565) ($generated@@72 $generated@@566))) (= ($generated@@0 ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))  (=> (and (not (= $generated@@564 $generated@@560)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@561 $generated@@564) $generated@@562))) (= $generated@@564 $generated@@563)))))
 :pattern ( ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@161) (= ($generated@@494 ($generated@@233 $generated@@571)) ($generated@@495 $generated@@571)))
 :pattern ( ($generated@@494 ($generated@@233 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@170) ($generated@@185 $generated@@572 ($generated@@86 0))) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@170) (= (type $generated@@574) $generated@@70)) ($generated@@185 $generated@@573 ($generated@@199 $generated@@574))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573) ($generated@@199 $generated@@574))))
 :pattern ( ($generated@@185 $generated@@573 ($generated@@199 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@185 $generated@@575 ($generated@@204 $generated@@576))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@204 $generated@@576))))
 :pattern ( ($generated@@185 $generated@@575 ($generated@@204 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@185 $generated@@577 ($generated@@175 $generated@@578))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577) ($generated@@175 $generated@@578))))
 :pattern ( ($generated@@185 $generated@@577 ($generated@@175 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@185 $generated@@579 ($generated@@456 $generated@@580))) (and (= ($generated@@233 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579) ($generated@@456 $generated@@580))))
 :pattern ( ($generated@@185 $generated@@579 ($generated@@456 $generated@@580)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@567 $generated@@181) $generated@@68))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@581 ($generated@@175 $generated@@582) $generated@@583) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@581 $generated@@584)))) ($generated@@213 $generated@@584 $generated@@582 $generated@@583))
 :pattern ( ($generated@@92 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@85 $generated@@581 ($generated@@175 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@161) (= (type $generated@@586) $generated@@70)) (= (type $generated@@587) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@587) (and ($generated@@159 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@70) ($generated@@85 $generated@@585 ($generated@@160 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@85 $generated@@585 ($generated@@160 $generated@@586 $generated@@588) $generated@@587))
))))) ($generated@@213 ($generated@@168 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@213 ($generated@@168 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@161) (= (type $generated@@590) $generated@@70)) (= (type $generated@@591) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@591) (and ($generated@@159 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@70) ($generated@@85 $generated@@589 ($generated@@160 $generated@@592 $generated@@590) $generated@@591))
 :pattern ( ($generated@@85 $generated@@589 ($generated@@160 $generated@@592 $generated@@590) $generated@@591))
))))) ($generated@@213 ($generated@@169 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@213 ($generated@@169 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@170) (= (type $generated@@594) $generated@@170)) (= ($generated@@184 ($generated@@209 $generated@@593) ($generated@@209 $generated@@594)) ($generated@@209 ($generated@@184 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@184 ($generated@@209 $generated@@593) ($generated@@209 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@233 ($generated@@209 $generated@@595)) ($generated@@209 ($generated@@233 $generated@@595)))
 :pattern ( ($generated@@233 ($generated@@209 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@228 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@227 $generated@@597)) (= ($generated@@226 $generated@@596) 0)) (= $generated@@596 ($generated@@225 $generated@@597))))
 :pattern ( ($generated@@226 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@87 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@248 ($generated@@93 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@248 $generated@@598) ($generated ($generated@@92 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@248 ($generated@@93 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@603) $generated@@2)) ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@605) $generated@@3)) ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@607) $generated@@4)) ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@609) $generated@@414)) ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@170)) ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@227 $generated@@170)) (= (type $generated@@613) $generated@@70)) (= ($generated@@154 $generated@@612 ($generated@@456 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@226 $generated@@612))) ($generated@@185 ($generated@@457 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@457 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@154 $generated@@612 ($generated@@456 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@227 $generated@@170)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@226 $generated@@616))) (< ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@619) $generated@@70)) (= (type $generated@@620) $generated@@70)) ($generated@@154 $generated@@618 ($generated@@366 $generated@@619 $generated@@620))) (and (and ($generated@@154 ($generated@@254 $generated@@618) ($generated@@199 $generated@@619)) ($generated@@154 ($generated@@309 $generated@@618) ($generated@@199 $generated@@620))) ($generated@@154 ($generated@@340 $generated@@618) ($generated@@199 ($generated@@160 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@154 $generated@@618 ($generated@@366 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@154 $generated@@621 ($generated@@374 $generated@@622 $generated@@623))) (and (and ($generated@@154 ($generated@@272 $generated@@621) ($generated@@204 $generated@@622)) ($generated@@154 ($generated@@320 $generated@@621) ($generated@@204 $generated@@623))) ($generated@@154 ($generated@@348 $generated@@621) ($generated@@204 ($generated@@160 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@154 $generated@@621 ($generated@@374 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@154 $generated@@624 $generated@@46))
 :pattern ( ($generated@@154 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@154 $generated@@625 $generated@@47))
 :pattern ( ($generated@@154 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@154 $generated@@626 $generated@@44))
 :pattern ( ($generated@@154 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@414) ($generated@@154 $generated@@627 $generated@@45))
 :pattern ( ($generated@@154 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@170) ($generated@@154 $generated@@628 $generated@@48))
 :pattern ( ($generated@@154 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(assert  (and (and (and (= (type $generated@@629) ($generated@@513 $generated@@88 $generated@@4)) (= (type $generated@@630) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@631) $generated@@88)) (= (type $generated@@632) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@636  (=> (= $generated@@629 ($generated@@512 $generated@@148 $generated@@630 $generated@@60 $generated@@631)) (=> (and (and (and ($generated@@152 $generated@@632) ($generated@@633 $generated@@632)) (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@88) (=> (and (not (= $generated@@637 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@630 $generated@@637) $generated@@60))) (or (= ($generated@@92 $generated@@632 $generated@@637) ($generated@@92 $generated@@630 $generated@@637)) (= $generated@@637 $generated@@631))))
 :pattern ( ($generated@@92 $generated@@632 $generated@@637))
))) (and (and ($generated@@143 $generated@@630 $generated@@632) ($generated@@85 $generated@@631 $generated@@181 $generated@@630)) (and (<= ($generated ($generated@@94 ($generated@@92 $generated@@632 $generated@@631) $generated@@151)) (+ ($generated ($generated@@94 ($generated@@92 $generated@@630 $generated@@631) $generated@@151)) $generated@@634)) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@85 $generated@@631 $generated@@181 $generated@@630)))))
(let (($generated@@638  (=> (and ($generated@@152 $generated@@630) ($generated@@633 $generated@@630)) (=> (and (and (not (= $generated@@631 $generated@@148)) (and ($generated@@154 $generated@@631 $generated@@181) ($generated@@85 $generated@@631 $generated@@181 $generated@@630))) (and (= 0 $generated@@635) (= (ControlFlow 0 3) 2))) $generated@@636))))
$generated@@638)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@333 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (Int Int) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@67) (= (type $generated@@257) $generated@@67)) (= (type $generated@@258) $generated@@156)) (= (type $generated@@259) $generated@@156)) (= (type $generated@@260) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@254 $generated@@260)) (= ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@147) (= ($generated@@145 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@147) ($generated@@145 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@156) (= (type $generated@@266) $generated@@156)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@145 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@156)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@77 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@282) $generated@@156)) (= (type $generated@@283) $generated@@67)) ($generated@@135 $generated@@280 $generated@@281)) ($generated@@255 $generated@@282 $generated@@283 $generated@@280)) ($generated@@255 $generated@@282 $generated@@283 $generated@@281))
 :pattern ( ($generated@@135 $generated@@280 $generated@@281) ($generated@@255 $generated@@282 $generated@@283 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@284) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@285) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@287) $generated@@67)) ($generated@@135 $generated@@284 $generated@@285)) ($generated@@77 $generated@@286 $generated@@287 $generated@@284)) ($generated@@77 $generated@@286 $generated@@287 $generated@@285))
 :pattern ( ($generated@@135 $generated@@284 $generated@@285) ($generated@@77 $generated@@286 $generated@@287 $generated@@284))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@79 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@82 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@79 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@84 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@79 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@79 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@82 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@79 $generated@@331 $generated@@2)) (= ($generated@@162 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@84 $generated@@330 $generated@@332))) (<= ($generated ($generated@@84 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@84 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@162 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@156) ($generated@@229 $generated@@336 $generated@@139)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@336)) $generated@@336) ($generated@@143 ($generated@@333 $generated@@80 $generated@@336) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@336 $generated@@139))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@156) ($generated@@229 $generated@@337 $generated@@225)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@337)) $generated@@337) ($generated@@143 ($generated@@333 $generated@@80 $generated@@337) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@337 $generated@@225))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@80) (= ($generated@@143 $generated@@338 $generated@@225)  (and ($generated@@143 $generated@@338 $generated@@139) (not (= $generated@@338 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@338 $generated@@225))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@298 (type $generated@@339))))
(let (($generated@@341 ($generated@@297 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@296 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@295 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@294 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@298 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@79 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@298 (type $generated@@346))))
(let (($generated@@348 ($generated@@297 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@296 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@295 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@316 (type $generated@@350))))
(let (($generated@@352 ($generated@@315 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@314 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@313 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@312 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@316 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@316 (type $generated@@357))))
(let (($generated@@359 ($generated@@315 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@314 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@313 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@362) $generated@@67)) (= ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@361 $generated@@363)))) ($generated@@229 $generated@@363 $generated@@362))
 :pattern ( ($generated@@84 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@365) $generated@@67)) (= (type $generated@@366) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@156) ($generated@@0 ($generated@@84 $generated@@364 $generated@@367))) ($generated@@255 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@84 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@77 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@156) ($generated@@0 ($generated@@84 $generated@@368 $generated@@371))) ($generated@@255 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@84 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@84 ($generated@@289 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@84 ($generated@@289 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@298 (type $generated@@377))))
(let (($generated@@379 ($generated@@297 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@381) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@380) ($generated@@154 ($generated@@333 $generated@@147 $generated@@381)))) (= ($generated@@84 ($generated@@375 $generated@@380) ($generated@@154 ($generated@@333 $generated@@147 $generated@@381))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@381))))))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@316 (type $generated@@385))))
(let (($generated@@387 ($generated@@315 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@79 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@389) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@388) ($generated@@154 ($generated@@333 $generated@@147 $generated@@389)))) (= ($generated@@84 ($generated@@383 $generated@@388) ($generated@@154 ($generated@@333 $generated@@147 $generated@@389))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@389))))))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@297 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@296 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@84 ($generated@@343 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@84 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@390) $generated@@394))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@315 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@314 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@84 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@395) $generated@@399))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@403) $generated@@407))) (and ($generated@@255 ($generated@@84 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@255 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@411) $generated@@415))) (and ($generated@@255 ($generated@@84 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@255 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@77 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@417) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@416 $generated@@418))) (and ($generated@@135 $generated@@416 $generated@@417) ($generated@@135 $generated@@417 $generated@@418))) ($generated@@135 $generated@@416 $generated@@418))
 :pattern ( ($generated@@135 $generated@@416 $generated@@417) ($generated@@135 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@79 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@316 (type $generated@@421))))
(let (($generated@@423 ($generated@@315 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@314 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@313 $generated@@423 $generated@@422)) (= ($generated@@312 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@312 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@316 (type $generated@@424))))
(let (($generated@@426 ($generated@@315 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@314 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@313 $generated@@426 $generated@@425)) (= ($generated@@354 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@354 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@316 (type $generated@@427))))
(let (($generated@@429 ($generated@@315 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@314 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@313 $generated@@429 $generated@@428)) (= ($generated@@382 $generated@@427) ($generated@@419 $generated@@156))))))
 :pattern ( ($generated@@382 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@298 (type $generated@@430))))
(let (($generated@@432 ($generated@@297 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@296 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@295 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@156) (= (type $generated@@434) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@374 $generated@@430) ($generated@@275 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@316 (type $generated@@435))))
(let (($generated@@437 ($generated@@315 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@314 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@313 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@156) (= (type $generated@@439) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@382 $generated@@435) ($generated@@275 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@333 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@156) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@275 ($generated@@333 $generated@@3 $generated@@441)) $generated@@441) ($generated@@143 ($generated@@333 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@275 ($generated@@333 $generated@@4 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@333 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@156) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@275 ($generated@@333 $generated@@443 $generated@@444)) $generated@@444) ($generated@@143 ($generated@@333 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@67) (= ($generated@@229 ($generated@@275 $generated@@445) $generated@@446) ($generated@@143 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@275 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@82 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@79 $generated@@448 $generated@@2)) (<= 0 ($generated@@288 $generated@@447))))
 :pattern ( ($generated@@288 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@270 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@269 $generated@@450)) (<= 0 ($generated@@268 $generated@@449))))
 :pattern ( ($generated@@268 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@400 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@400 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@400 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@400 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@75 ($generated@@400 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@408 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@408 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@408 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@75 ($generated@@408 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@156) (= (type $generated@@472) $generated@@156)) (= ($generated@@261 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@146 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@146 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@146 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@146 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@156) (= (type $generated@@484) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@270 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@269 $generated@@156)) (= (type $generated@@492) $generated@@67)) (= (type $generated@@493) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@268 $generated@@491))) ($generated@@255 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@78 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@78 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@238 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@243 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@161 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@333 $generated@@514 ($generated@@275 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@275 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) (= ($generated@@143 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@515) $generated@@518))) (and ($generated@@229 ($generated@@84 ($generated@@375 $generated@@515) $generated@@518) $generated@@517) ($generated@@229 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@515) $generated@@518))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@143 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) (= ($generated@@143 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@519) $generated@@522))) (and ($generated@@229 ($generated@@84 ($generated@@383 $generated@@519) $generated@@522) $generated@@521) ($generated@@229 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@519) $generated@@522))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@143 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@156)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@228 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@228 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@156) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@229 $generated@@529 ($generated@@400 $generated@@530 $generated@@531))) (and (= ($generated@@275 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@529)) $generated@@529) ($generated@@143 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@529) ($generated@@400 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@229 $generated@@529 ($generated@@400 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@156) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@229 $generated@@532 ($generated@@408 $generated@@533 $generated@@534))) (and (= ($generated@@275 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@532)) $generated@@532) ($generated@@143 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@532) ($generated@@408 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@532 ($generated@@408 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@156)) ($generated@@229 $generated@@537 ($generated@@146 $generated@@535 $generated@@536))) (and (= ($generated@@275 ($generated@@333 $generated@@147 $generated@@537)) $generated@@537) ($generated@@143 ($generated@@333 $generated@@147 $generated@@537) ($generated@@146 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@146 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@84 ($generated@@419 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@84 ($generated@@419 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 Int) ($generated@@542 Int) ) (! (= ($generated@@540 $generated@@541 $generated@@542) (mod $generated@@541 $generated@@542))
 :pattern ( ($generated@@540 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@72)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@67) (= (type $generated@@546) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@146 $generated@@545 $generated@@546)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@147) (= ($generated@@523 ($generated@@275 $generated@@547)) ($generated@@524 $generated@@547)))
 :pattern ( ($generated@@523 ($generated@@275 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@156) ($generated@@229 $generated@@548 ($generated@@78 0))) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@548)) $generated@@548) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@548) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@78 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@156) (= (type $generated@@550) $generated@@67)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@549)) $generated@@549) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@156) (= (type $generated@@552) $generated@@67)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@551)) $generated@@551) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@156) (= (type $generated@@554) $generated@@67)) ($generated@@229 $generated@@553 ($generated@@161 $generated@@554))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@553)) $generated@@553) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@553) ($generated@@161 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@161 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@156) (= (type $generated@@556) $generated@@67)) ($generated@@229 $generated@@555 ($generated@@485 $generated@@556))) (and (= ($generated@@275 ($generated@@333 ($generated@@269 $generated@@156) $generated@@555)) $generated@@555) ($generated@@143 ($generated@@333 ($generated@@269 $generated@@156) $generated@@555) ($generated@@485 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@485 $generated@@556)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@543 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@543 $generated@@225) $generated@@66))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@557 $generated@@560)))) ($generated@@255 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@84 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@147) (= (type $generated@@562) $generated@@67)) (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@563) (and ($generated@@145 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@67) ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@255 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@255 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@67)) (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@567) (and ($generated@@145 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@67) ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@255 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@255 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@156) (= (type $generated@@570) $generated@@156)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@275 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@275 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@275 $generated@@572)))
 :pattern ( ($generated@@275 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@270 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@269 $generated@@574)) (= ($generated@@268 $generated@@573) 0)) (= $generated@@573 ($generated@@267 $generated@@574))))
 :pattern ( ($generated@@268 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@288 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@288 $generated@@575) ($generated ($generated@@84 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@288 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@2)) ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@3)) ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@4)) ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@443)) ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@156)) ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@269 $generated@@156)) (= (type $generated@@590) $generated@@67)) (= ($generated@@143 $generated@@589 ($generated@@485 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@268 $generated@@589))) ($generated@@229 ($generated@@486 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@486 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@143 $generated@@589 ($generated@@485 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@269 $generated@@156)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@268 $generated@@593))) (< ($generated@@524 ($generated@@333 $generated@@147 ($generated@@486 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@524 ($generated@@333 $generated@@147 ($generated@@486 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@143 $generated@@595 ($generated@@400 $generated@@596 $generated@@597))) (and (and ($generated@@143 ($generated@@294 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@143 ($generated@@343 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@143 ($generated@@374 $generated@@595) ($generated@@238 ($generated@@146 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@143 $generated@@595 ($generated@@400 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@143 $generated@@598 ($generated@@408 $generated@@599 $generated@@600))) (and (and ($generated@@143 ($generated@@312 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@143 ($generated@@354 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@143 ($generated@@382 $generated@@598) ($generated@@243 ($generated@@146 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@143 $generated@@598 ($generated@@408 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@143 $generated@@601 $generated@@46))
 :pattern ( ($generated@@143 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@143 $generated@@602 $generated@@47))
 :pattern ( ($generated@@143 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@143 $generated@@603 $generated@@44))
 :pattern ( ($generated@@143 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@443) ($generated@@143 $generated@@604 $generated@@45))
 :pattern ( ($generated@@143 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@156) ($generated@@143 $generated@@605 $generated@@48))
 :pattern ( ($generated@@143 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(assert  (and (and (and (= (type $generated@@606) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@612) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@614  (=> (and (and (and (= $generated@@606 ($generated@@170 $generated@@140 $generated@@607 $generated@@60 false)) (<= ($generated@@248 0) $generated@@608)) (and ($generated@@254 $generated@@609) ($generated@@610 $generated@@609))) (and (and (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@80) (=> (and (not (= $generated@@615 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@607 $generated@@615) $generated@@60))) (= ($generated@@84 $generated@@609 $generated@@615) ($generated@@84 $generated@@607 $generated@@615))))
 :pattern ( ($generated@@84 $generated@@609 $generated@@615))
)) ($generated@@135 $generated@@607 $generated@@609)) (and (<= ($generated@@248 0) $generated@@611) (= (ControlFlow 0 2) (- 0 1))))) (not (= ($generated@@248 2) 0)))))
(let (($generated@@616  (=> (and ($generated@@254 $generated@@607) ($generated@@610 $generated@@607)) (=> (and (and (not (= $generated@@612 $generated@@140)) (and ($generated@@143 $generated@@612 $generated@@225) ($generated@@77 $generated@@612 $generated@@225 $generated@@607))) (and (= 0 $generated@@613) (= (ControlFlow 0 3) 2))) $generated@@614))))
$generated@@616)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 (Int) Bool)
(declare-fun $generated@@137 (Int) Int)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@138 Int) ) (!  (=> (or ($generated@@136 $generated@@138) (not (= 0 $generated@@134))) (<= ($generated@@137 0) ($generated@@135 $generated@@138)))
 :pattern ( ($generated@@135 $generated@@138))
))))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@64)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@64) (= (type $generated@@145) $generated@@64)) (= (type $generated@@146) $generated@@141)) ($generated@@132 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@132 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@64)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@76 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@64)) ($generated@@132 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@132 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@77 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@67 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@77) (= (type $generated@@210) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@211) ($generated@@66 $generated@@4))) (= (type $generated@@213) $generated@@77)) (= (type $generated@@214) ($generated@@66 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@77 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@150) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@132 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@132 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@137 $generated@@248) $generated@@248)
 :pattern ( ($generated@@137 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@150)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@253 $generated@@259)) (= ($generated@@74 ($generated@@228 $generated@@257 $generated@@258) ($generated@@140 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@257 $generated@@258) ($generated@@140 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@141) (= ($generated@@139 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@141) ($generated@@139 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@150) (= (type $generated@@265) $generated@@150)) (= $generated@@263 ($generated@@228 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@139 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 17)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@150)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@74 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@76 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@79 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@76 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@81 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 18)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@156 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@156 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@285 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@289 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@307 (type $generated@@335))))
(let (($generated@@337 ($generated@@306 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@305 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@304 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@303 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@307 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@150 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@132 $generated@@346 ($generated@@155 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@150) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@229 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@132 $generated@@346 ($generated@@155 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@238 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@150) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@254 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@238 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@243 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@254 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@243 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@81 ($generated@@280 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@81 ($generated@@280 $generated@@358) $generated@@357)))
)))
(assert  (and (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@359 $generated@@362)) ($generated@@76 $generated@@150 $generated@@4))
 :pattern ( ($generated@@359 $generated@@362))
)) (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@360 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@360 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@289 (type $generated@@365))))
(let (($generated@@367 ($generated@@288 (type $generated@@365))))
(= (type ($generated@@361 $generated@@365)) ($generated@@76 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@361 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@369) $generated@@150)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@368) ($generated@@148 ($generated@@360 $generated@@141 $generated@@369)))) (= ($generated@@81 ($generated@@361 $generated@@368) ($generated@@148 ($generated@@360 $generated@@141 $generated@@369))) ($generated@@149 ($generated@@360 $generated@@141 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@76 $generated@@150 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@307 (type $generated@@373))))
(let (($generated@@375 ($generated@@306 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@377) $generated@@150)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@376) ($generated@@148 ($generated@@360 $generated@@141 $generated@@377)))) (= ($generated@@81 ($generated@@371 $generated@@376) ($generated@@148 ($generated@@360 $generated@@141 $generated@@377))) ($generated@@149 ($generated@@360 $generated@@141 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@288 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@287 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@306 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@305 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@64)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))) (and ($generated@@254 ($generated@@81 ($generated@@361 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@254 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))) (and ($generated@@254 ($generated@@81 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@254 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@76 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@307 (type $generated@@406))))
(let (($generated@@408 ($generated@@306 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@305 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@304 $generated@@408 $generated@@407)) (= ($generated@@303 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@303 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@307 (type $generated@@409))))
(let (($generated@@411 ($generated@@306 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@305 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@304 $generated@@411 $generated@@410)) (= ($generated@@339 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@339 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@307 (type $generated@@412))))
(let (($generated@@414 ($generated@@306 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@305 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@304 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@150))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@289 (type $generated@@415))))
(let (($generated@@417 ($generated@@288 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@287 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@286 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@150) (= (type $generated@@419) $generated@@150)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@415) ($generated@@274 ($generated@@228 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@359 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@307 (type $generated@@420))))
(let (($generated@@422 ($generated@@306 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@305 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@304 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@150) (= (type $generated@@424) $generated@@150)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@420) ($generated@@274 ($generated@@228 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@150) ($generated@@229 $generated@@425 $generated@@46)) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@360 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@150) ($generated@@229 $generated@@426 $generated@@47)) (and (= ($generated@@274 ($generated@@360 $generated@@3 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@360 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@229 $generated@@427 $generated@@44)) (and (= ($generated@@274 ($generated@@360 $generated@@4 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@360 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@150) ($generated@@229 $generated@@429 $generated@@45)) (and (= ($generated@@274 ($generated@@360 $generated@@428 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@360 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@64) (= ($generated@@229 ($generated@@274 $generated@@430) $generated@@431) ($generated@@132 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@229 ($generated@@274 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@79 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@76 $generated@@433 $generated@@2)) (<= 0 ($generated@@279 $generated@@432))))
 :pattern ( ($generated@@279 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@269 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@268 $generated@@435)) (<= 0 ($generated@@267 $generated@@434))))
 :pattern ( ($generated@@267 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@72 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@150) (= (type $generated@@457) $generated@@150)) (= ($generated@@260 ($generated@@228 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@140 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@140 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@140 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@140 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) (= (type $generated@@467) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@228 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@150) (= (type $generated@@469) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@228 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@269 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@268 $generated@@150)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@267 $generated@@476))) ($generated@@254 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@75 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@75 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@238 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@238 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@243 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@243 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@155 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@155 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@155 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@360 $generated@@499 ($generated@@274 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@274 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))) (and ($generated@@229 ($generated@@81 ($generated@@361 $generated@@500) $generated@@503) $generated@@502) ($generated@@229 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))) (and ($generated@@229 ($generated@@81 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@229 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@150) (= (type $generated@@511) $generated@@150)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@228 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@228 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@150) (= (type $generated@@513) $generated@@150)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@228 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@228 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@150) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@229 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@274 ($generated@@360 ($generated@@287 $generated@@150 $generated@@150) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@360 ($generated@@287 $generated@@150 $generated@@150) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@229 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@150) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@229 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@274 ($generated@@360 ($generated@@305 $generated@@150 $generated@@150) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@360 ($generated@@305 $generated@@150 $generated@@150) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@229 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@150)) ($generated@@229 $generated@@522 ($generated@@140 $generated@@520 $generated@@521))) (and (= ($generated@@274 ($generated@@360 $generated@@141 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@360 $generated@@141 $generated@@522) ($generated@@140 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@229 $generated@@522 ($generated@@140 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@81 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@81 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (and (= ($generated@@72 ($generated@@140 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@140 $generated@@527 $generated@@528)) $generated@@63)))
 :pattern ( ($generated@@140 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@141) (= ($generated@@508 ($generated@@274 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@274 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@150) ($generated@@229 $generated@@530 ($generated@@75 0))) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@530)) $generated@@530) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@150 $generated@@4) $generated@@530) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@75 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@64)) ($generated@@229 $generated@@531 ($generated@@238 $generated@@532))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@150 $generated@@4) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@150 $generated@@4) $generated@@531) ($generated@@238 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@531 ($generated@@238 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@150) (= (type $generated@@534) $generated@@64)) ($generated@@229 $generated@@533 ($generated@@243 $generated@@534))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@150 $generated@@4) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@150 $generated@@4) $generated@@533) ($generated@@243 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@533 ($generated@@243 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@150) (= (type $generated@@536) $generated@@64)) ($generated@@229 $generated@@535 ($generated@@155 $generated@@536))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@150 $generated@@2) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@150 $generated@@2) $generated@@535) ($generated@@155 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@155 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@64)) ($generated@@229 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@274 ($generated@@360 ($generated@@268 $generated@@150) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@360 ($generated@@268 $generated@@150) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@539 Int) ) (!  (=> (or ($generated@@136 $generated@@539) (not (= 0 $generated@@134))) (= ($generated@@135 $generated@@539) (ite (< $generated@@539 0) 2 3)))
 :pattern ( ($generated@@135 $generated@@539))
))))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@76 $generated@@150 $generated@@2)) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@540 ($generated@@155 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@150) (< 0 ($generated ($generated@@81 $generated@@540 $generated@@543)))) ($generated@@254 $generated@@543 $generated@@541 $generated@@542))
 :pattern ( ($generated@@81 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@155 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@141) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@546) (and ($generated@@139 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@64) ($generated@@74 $generated@@544 ($generated@@140 $generated@@545 $generated@@547) $generated@@546))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@140 $generated@@545 $generated@@547) $generated@@546))
))))) ($generated@@254 ($generated@@148 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@254 ($generated@@148 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@141) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@550) (and ($generated@@139 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@140 $generated@@551 $generated@@549) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@140 $generated@@551 $generated@@549) $generated@@550))
))))) ($generated@@254 ($generated@@149 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@254 ($generated@@149 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@150) (= (type $generated@@553) $generated@@150)) (= ($generated@@228 ($generated@@249 $generated@@552) ($generated@@249 $generated@@553)) ($generated@@249 ($generated@@228 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@228 ($generated@@249 $generated@@552) ($generated@@249 $generated@@553)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@137 $generated@@554))) ($generated@@249 ($generated@@274 ($generated@@8 $generated@@554))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@137 $generated@@554))))
)))
(assert (forall (($generated@@555 T@U) ) (! (= ($generated@@274 ($generated@@249 $generated@@555)) ($generated@@249 ($generated@@274 $generated@@555)))
 :pattern ( ($generated@@274 ($generated@@249 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@269 (type $generated@@556))))
 (=> (and (= (type $generated@@556) ($generated@@268 $generated@@557)) (= ($generated@@267 $generated@@556) 0)) (= $generated@@556 ($generated@@266 $generated@@557))))
 :pattern ( ($generated@@267 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@559)))
 (=> (and (and (= (type $generated@@558) ($generated@@76 $generated@@561 $generated@@2)) (= (type $generated@@560) $generated@@2)) (<= 0 ($generated $generated@@560))) (= ($generated@@279 ($generated@@82 $generated@@558 $generated@@559 $generated@@560)) (+ (- ($generated@@279 $generated@@558) ($generated ($generated@@81 $generated@@558 $generated@@559))) ($generated $generated@@560)))))
 :pattern ( ($generated@@279 ($generated@@82 $generated@@558 $generated@@559 $generated@@560)))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@562 Int) ) (!  (=> (or ($generated@@136 ($generated@@137 $generated@@562)) (not (= 0 $generated@@134))) (= ($generated@@135 ($generated@@137 $generated@@562)) (ite (< $generated@@562 0) 2 3)))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@137 $generated@@562)))
))))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@2)) ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@3)) ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@4)) ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@428)) ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@150)) ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@268 $generated@@150)) (= (type $generated@@574) $generated@@64)) (= ($generated@@132 $generated@@573 ($generated@@470 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@267 $generated@@573))) ($generated@@229 ($generated@@471 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@471 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@132 $generated@@573 ($generated@@470 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@268 $generated@@150)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@267 $generated@@577))) (< ($generated@@509 ($generated@@360 $generated@@141 ($generated@@471 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@509 ($generated@@360 $generated@@141 ($generated@@471 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@132 $generated@@579 ($generated@@388 $generated@@580 $generated@@581))) (and (and ($generated@@132 ($generated@@285 $generated@@579) ($generated@@238 $generated@@580)) ($generated@@132 ($generated@@328 $generated@@579) ($generated@@238 $generated@@581))) ($generated@@132 ($generated@@359 $generated@@579) ($generated@@238 ($generated@@140 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@132 $generated@@579 ($generated@@388 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@396 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@303 $generated@@582) ($generated@@243 $generated@@583)) ($generated@@132 ($generated@@339 $generated@@582) ($generated@@243 $generated@@584))) ($generated@@132 ($generated@@370 $generated@@582) ($generated@@243 ($generated@@140 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@396 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@132 $generated@@585 $generated@@46))
 :pattern ( ($generated@@132 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@132 $generated@@586 $generated@@47))
 :pattern ( ($generated@@132 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@132 $generated@@587 $generated@@44))
 :pattern ( ($generated@@132 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@428) ($generated@@132 $generated@@588 $generated@@45))
 :pattern ( ($generated@@132 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@150) ($generated@@132 $generated@@589 $generated@@48))
 :pattern ( ($generated@@132 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) ($generated@@162 $generated@@77 $generated@@4))) (= (type $generated@@592) $generated@@77)) (= (type $generated@@594) ($generated@@162 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@596  (=> (= (ControlFlow 0 5) (- 0 4)) (<= ($generated@@137 0) ($generated@@135 $generated@@590)))))
(let (($generated@@597  (=> (and (and (<= 0 $generated@@590) (= ($generated@@135 $generated@@590) ($generated@@137 3))) (and ($generated@@132 ($generated@@8 ($generated@@135 $generated@@590)) $generated@@46) (= (ControlFlow 0 7) 5))) $generated@@596)))
(let (($generated@@598  (=> (and (and (< $generated@@590 0) (= ($generated@@135 $generated@@590) ($generated@@137 2))) (and ($generated@@132 ($generated@@8 ($generated@@135 $generated@@590)) $generated@@46) (= (ControlFlow 0 6) 5))) $generated@@596)))
(let (($generated@@599  (=> (= $generated@@591 ($generated@@216 $generated@@592 $generated@@593 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 6) $generated@@598) (=> (= (ControlFlow 0 8) 7) $generated@@597)))))
(let (($generated@@600  (=> ($generated@@74 ($generated@@8 $generated@@590) $generated@@46 $generated@@593) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@590) (= $generated@@590 $generated@@590))) (=> (or (<= 0 $generated@@590) (= $generated@@590 $generated@@590)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (= $generated@@590 $generated@@590) (< $generated@@590 $generated@@590))))))))
(let (($generated@@601  (=> (= $generated@@594 ($generated@@161 $generated@@592 $generated@@593 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@600) (=> (= (ControlFlow 0 9) 8) $generated@@599)))))
(let (($generated@@602  (=> (and (and ($generated@@253 $generated@@593) ($generated@@595 $generated@@593)) (and (= 0 $generated@@134) (= (ControlFlow 0 10) 9))) $generated@@601)))
$generated@@602))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (Int) Int)
(declare-fun $generated@@129 (Int) Bool)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@T) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@T T@T) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@U Int) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@366 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@131 Int) ) (!  (=> (or ($generated@@129 $generated@@131) (not (= 0 $generated@@127))) (<= ($generated@@130 0) ($generated@@128 $generated@@131)))
 :pattern ( ($generated@@128 $generated@@131))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@138 $generated@@139)) 12)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@134 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@134 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@136 (type $generated@@144))))
(= (type ($generated@@132 $generated@@144 $generated@@145 $generated@@146)) $generated@@147))
 :pattern ( ($generated@@132 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 (type $generated@@151)))
(let (($generated@@153 (type $generated@@149)))
(= (type ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151)) ($generated@@134 $generated@@153 $generated@@152))))
 :pattern ( ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@136 (type $generated@@154))))
 (=> (= (type $generated@@157) $generated@@158) (= ($generated@@132 ($generated@@137 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@155 $generated@@156) $generated@@157)))
 :weight 0
))) (and (and (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@132 ($generated@@137 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@132 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@132 ($generated@@137 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@132 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or true (= ($generated@@132 ($generated@@137 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@132 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Bool) ) (! (= (type ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@134 $generated@@72 $generated@@4))
 :pattern ( ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@64 (type $generated@@186))))
 (=> (and (and (and (and (= (type $generated@@181) $generated@@72) (= (type $generated@@182) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@183) ($generated@@63 $generated@@4))) (= (type $generated@@185) $generated@@72)) (= (type $generated@@186) ($generated@@63 $generated@@187))) (= ($generated@@0 ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (not (= $generated@@185 $generated@@181)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@182 $generated@@185) $generated@@183))) $generated@@184))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@130 $generated@@188) $generated@@188)
 :pattern ( ($generated@@130 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@203) 14) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@61) (= (type $generated@@207) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207) ($generated@@69 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@213 $generated@@214)) 15)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@210 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@211 (type $generated@@219))))
(= (type ($generated@@208 $generated@@219)) ($generated@@71 $generated@@220 $generated@@4)))
 :pattern ( ($generated@@208 $generated@@219))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= (type ($generated@@209 $generated@@221 $generated@@222)) ($generated@@210 $generated@@221 $generated@@222))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (let (($generated@@225 (type $generated@@223)))
 (not ($generated@@0 ($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223))))
 :pattern ( (let (($generated@@225 (type $generated@@223)))
($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223)))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@231 $generated@@232)) 16)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@228 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@229 (type $generated@@237))))
(= (type ($generated@@226 $generated@@237)) ($generated@@71 $generated@@238 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@237))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= (type ($generated@@227 $generated@@239 $generated@@240)) ($generated@@228 $generated@@239 $generated@@240))
 :pattern ( ($generated@@227 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (let (($generated@@243 (type $generated@@241)))
 (not ($generated@@0 ($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241))))
 :pattern ( (let (($generated@@243 (type $generated@@241)))
($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@212 (type $generated@@244))))
(let (($generated@@246 ($generated@@211 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@210 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@209 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@208 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@230 (type $generated@@248))))
(let (($generated@@250 ($generated@@229 (type $generated@@248))))
 (=> (= (type $generated@@248) ($generated@@228 $generated@@250 $generated@@249)) (or (= $generated@@248 ($generated@@227 $generated@@250 $generated@@249)) (exists (($generated@@251 T@U) ) (!  (and (= (type $generated@@251) $generated@@250) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@248) $generated@@251)))
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
))))))
 :pattern ( ($generated@@226 $generated@@248))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@61)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@254) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@255) $generated@@61)) (= (type $generated@@256) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@203) ($generated@@0 ($generated@@76 $generated@@254 $generated@@257))) ($generated@@201 $generated@@257 $generated@@255 $generated@@256))
 :pattern ( ($generated@@76 $generated@@254 $generated@@257))
))))
 :pattern ( ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@203) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@201 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert  (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@212 (type $generated@@268))))
(let (($generated@@270 ($generated@@211 (type $generated@@268))))
(= (type ($generated@@265 $generated@@268)) ($generated@@71 $generated@@270 $generated@@269))))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@210 $generated@@203 $generated@@203)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))) (and ($generated@@201 ($generated@@76 ($generated@@265 $generated@@271) $generated@@275) $generated@@273 $generated@@274) ($generated@@201 $generated@@275 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@76 ($generated@@265 $generated@@271) $generated@@275))
 :pattern ( ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@230 (type $generated@@280))))
(let (($generated@@282 ($generated@@229 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@228 $generated@@203 $generated@@203)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))) (and ($generated@@201 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@201 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@71 $generated@@289 $generated@@4))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@230 (type $generated@@290))))
(let (($generated@@292 ($generated@@229 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@228 $generated@@292 $generated@@291)) (= (= $generated@@290 ($generated@@227 $generated@@292 $generated@@291)) (= ($generated@@226 $generated@@290) ($generated@@288 $generated@@292))))))
 :pattern ( ($generated@@226 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@196 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@195 $generated@@294)) (<= 0 ($generated@@194 $generated@@293))))
 :pattern ( ($generated@@194 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@264 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@264 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@264 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@264 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@264 $generated@@303 $generated@@304)) $generated@@58))
 :pattern ( ($generated@@264 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@61) (= (type $generated@@308) $generated@@61)) (= ($generated@@305 ($generated@@276 $generated@@307 $generated@@308)) $generated@@307))
 :pattern ( ($generated@@276 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@309 ($generated@@276 $generated@@311 $generated@@312)) $generated@@312))
 :pattern ( ($generated@@276 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@313 $generated@@314)) $generated@@59))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert  (and (forall (($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@317))
)) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@196 (type $generated@@318))))
(= (type ($generated@@316 $generated@@318 $generated@@319)) $generated@@320))
 :pattern ( ($generated@@316 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@195 $generated@@203)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323) (forall (($generated@@324 Int) ) (!  (=> (and (<= 0 $generated@@324) (< $generated@@324 ($generated@@194 $generated@@321))) ($generated@@201 ($generated@@316 $generated@@321 $generated@@324) $generated@@322 $generated@@323))
 :pattern ( ($generated@@316 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@325 ($generated@@70 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@70 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@327 ($generated@@252 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@252 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@252 $generated@@330)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@258 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@258 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@334)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@334))
)))
(assert  (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@337))
)) (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@336 ($generated@@335 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@335 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@335 $generated@@340)) $generated@@56))
 :pattern ( ($generated@@335 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@315 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@315 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@344)) $generated@@57))
 :pattern ( ($generated@@315 $generated@@344))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated@@345 $generated@@349 ($generated@@202 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@202 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (not ($generated@@0 ($generated@@76 ($generated@@288 $generated@@351) $generated@@350))))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@76 ($generated@@288 $generated@@351) $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@71 $generated@@203 $generated@@2)) (= (type $generated@@353) $generated@@61)) (= (type $generated@@354) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@352 ($generated@@335 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@203) (< 0 ($generated ($generated@@76 $generated@@352 $generated@@355)))) ($generated@@201 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@76 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@69 $generated@@352 ($generated@@335 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 Int) ) (! (= ($generated@@202 ($generated@@8 ($generated@@130 $generated@@356))) ($generated@@189 ($generated@@202 ($generated@@8 $generated@@356))))
 :pattern ( ($generated@@202 ($generated@@8 ($generated@@130 $generated@@356))))
)))
(assert (forall (($generated@@357 T@U) ) (! (= ($generated@@202 ($generated@@189 $generated@@357)) ($generated@@189 ($generated@@202 $generated@@357)))
 :pattern ( ($generated@@202 ($generated@@189 $generated@@357)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@196 (type $generated@@358))))
 (=> (and (= (type $generated@@358) ($generated@@195 $generated@@359)) (= ($generated@@194 $generated@@358) 0)) (= $generated@@358 ($generated@@193 $generated@@359))))
 :pattern ( ($generated@@194 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@361) $generated@@2)) ($generated@@69 $generated@@361 $generated@@46 $generated@@360))
 :pattern ( ($generated@@69 $generated@@361 $generated@@46 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@363) $generated@@3)) ($generated@@69 $generated@@363 $generated@@47 $generated@@362))
 :pattern ( ($generated@@69 $generated@@363 $generated@@47 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@365) $generated@@4)) ($generated@@69 $generated@@365 $generated@@44 $generated@@364))
 :pattern ( ($generated@@69 $generated@@365 $generated@@44 $generated@@364))
)))
(assert (= ($generated@@1 $generated@@366) 17))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@368) $generated@@366)) ($generated@@69 $generated@@368 $generated@@45 $generated@@367))
 :pattern ( ($generated@@69 $generated@@368 $generated@@45 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@203)) ($generated@@69 $generated@@370 $generated@@48 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@48 $generated@@369))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@371 () Int)
(declare-fun $generated@@372 () T@U)
(declare-fun $generated@@373 () T@U)
(declare-fun $generated@@374 () T@U)
(declare-fun $generated@@375 (T@U) Bool)
(declare-fun $generated@@376 (T@U) Bool)
(assert  (and (and (= (type $generated@@372) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@373) ($generated@@134 $generated@@72 $generated@@4))) (= (type $generated@@374) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@377 true))
(let (($generated@@378  (=> ($generated@@69 ($generated@@8 $generated@@371) $generated@@46 $generated@@372) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@371) (= $generated@@371 $generated@@371))) (=> (or (<= 0 $generated@@371) (= $generated@@371 $generated@@371)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (= $generated@@371 $generated@@371) (< $generated@@371 $generated@@371))))))))
(let (($generated@@379  (=> (= $generated@@373 ($generated@@133 $generated@@374 $generated@@372 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@378) (=> (= (ControlFlow 0 5) 4) $generated@@377)))))
(let (($generated@@380  (=> (and (and ($generated@@375 $generated@@372) ($generated@@376 $generated@@372)) (and (= 0 $generated@@127) (= (ControlFlow 0 6) 5))) $generated@@379)))
$generated@@380)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@321 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@152)) (= (type $generated@@255) $generated@@152)) (= (type $generated@@256) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@250 $generated@@256)) (= ($generated@@77 ($generated@@224 $generated@@254 $generated@@255) ($generated@@142 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@254 $generated@@255) ($generated@@142 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@71)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@143) (= ($generated@@141 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@143) ($generated@@141 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@152) (= (type $generated@@262) $generated@@152)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@141 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@152)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@67) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@77 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@79 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@82 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@79 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@84 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 18)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@79 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@79 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@82 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@79 $generated@@319 $generated@@2)) (= ($generated@@158 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@84 $generated@@318 $generated@@320))) (<= ($generated ($generated@@84 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@84 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@152) ($generated@@225 $generated@@324 $generated@@135)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@324)) $generated@@324) ($generated@@139 ($generated@@321 $generated@@80 $generated@@324) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@324 $generated@@135))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@152) ($generated@@225 $generated@@325 $generated@@221)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@321 $generated@@80 $generated@@325) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@325 $generated@@221))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@80) (= ($generated@@139 $generated@@326 $generated@@221)  (and ($generated@@139 $generated@@326 $generated@@135) (not (= $generated@@326 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@326 $generated@@221))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@286 (type $generated@@327))))
(let (($generated@@329 ($generated@@285 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@284 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@283 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@282 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@286 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@286 (type $generated@@334))))
(let (($generated@@336 ($generated@@285 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@284 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@283 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@304 (type $generated@@338))))
(let (($generated@@340 ($generated@@303 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@302 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@301 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@300 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@304 (type $generated@@345))))
(let (($generated@@347 ($generated@@303 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@302 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@301 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@225 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@234 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@251 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@234 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@239 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@251 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@239 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@277 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@277 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@286 (type $generated@@365))))
(let (($generated@@367 ($generated@@285 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@369) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@304 (type $generated@@373))))
(let (($generated@@375 ($generated@@303 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@285 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@284 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@303 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@302 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))) (and ($generated@@251 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@251 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))) (and ($generated@@251 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@251 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@304 (type $generated@@406))))
(let (($generated@@408 ($generated@@303 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@302 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@301 $generated@@408 $generated@@407)) (= ($generated@@300 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@300 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@304 (type $generated@@409))))
(let (($generated@@411 ($generated@@303 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@302 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@301 $generated@@411 $generated@@410)) (= ($generated@@342 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@342 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@304 (type $generated@@412))))
(let (($generated@@414 ($generated@@303 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@302 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@301 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@286 (type $generated@@415))))
(let (($generated@@417 ($generated@@285 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@284 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@283 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@415) ($generated@@271 ($generated@@224 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@304 (type $generated@@420))))
(let (($generated@@422 ($generated@@303 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@302 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@301 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@420) ($generated@@271 ($generated@@224 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@225 $generated@@425 $generated@@46)) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@321 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@225 $generated@@426 $generated@@47)) (and (= ($generated@@271 ($generated@@321 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@321 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@225 $generated@@427 $generated@@44)) (and (= ($generated@@271 ($generated@@321 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@321 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@225 $generated@@429 $generated@@45)) (and (= ($generated@@271 ($generated@@321 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@321 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@225 ($generated@@271 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@276 $generated@@432))))
 :pattern ( ($generated@@276 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@266 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@265 $generated@@435)) (<= 0 ($generated@@264 $generated@@434))))
 :pattern ( ($generated@@264 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@257 ($generated@@224 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@224 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@224 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@266 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@265 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@264 $generated@@476))) ($generated@@251 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@234 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@234 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@239 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@239 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@321 $generated@@499 ($generated@@271 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@271 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))) (and ($generated@@225 ($generated@@84 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@225 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))) (and ($generated@@225 ($generated@@84 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@225 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@224 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@224 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@224 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@224 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@225 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@271 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@225 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@225 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@271 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@225 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@225 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@271 ($generated@@321 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@321 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@225 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@142 $generated@@527 $generated@@528)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@143) (= ($generated@@508 ($generated@@271 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@271 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@152) ($generated@@225 $generated@@530 ($generated@@78 0))) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@530)) $generated@@530) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@530) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@530 ($generated@@78 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@225 $generated@@531 ($generated@@234 $generated@@532))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@234 $generated@@532))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@234 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@225 $generated@@533 ($generated@@239 $generated@@534))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@239 $generated@@534))))
 :pattern ( ($generated@@225 $generated@@533 ($generated@@239 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@225 $generated@@535 ($generated@@157 $generated@@536))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535) ($generated@@157 $generated@@536))))
 :pattern ( ($generated@@225 $generated@@535 ($generated@@157 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@225 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@271 ($generated@@321 ($generated@@265 $generated@@152) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@321 ($generated@@265 $generated@@152) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@225 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@525 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@525 $generated@@221) $generated@@66))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@539 $generated@@542)))) ($generated@@251 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@84 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@143) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@545) (and ($generated@@141 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@67) ($generated@@77 $generated@@543 ($generated@@142 $generated@@544 $generated@@546) $generated@@545))
 :pattern ( ($generated@@77 $generated@@543 ($generated@@142 $generated@@544 $generated@@546) $generated@@545))
))))) ($generated@@251 ($generated@@150 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@251 ($generated@@150 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@143) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@549) (and ($generated@@141 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@67) ($generated@@77 $generated@@547 ($generated@@142 $generated@@550 $generated@@548) $generated@@549))
 :pattern ( ($generated@@77 $generated@@547 ($generated@@142 $generated@@550 $generated@@548) $generated@@549))
))))) ($generated@@251 ($generated@@151 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@251 ($generated@@151 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@152) (= (type $generated@@552) $generated@@152)) (= ($generated@@224 ($generated@@246 $generated@@551) ($generated@@246 $generated@@552)) ($generated@@246 ($generated@@224 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@551) ($generated@@246 $generated@@552)))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@553))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@553))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@553))))
)))
(assert (forall (($generated@@554 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@554)) ($generated@@246 ($generated@@271 $generated@@554)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@266 (type $generated@@555))))
 (=> (and (= (type $generated@@555) ($generated@@265 $generated@@556)) (= ($generated@@264 $generated@@555) 0)) (= $generated@@555 ($generated@@263 $generated@@556))))
 :pattern ( ($generated@@264 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@558)))
 (=> (and (and (= (type $generated@@557) ($generated@@79 $generated@@560 $generated@@2)) (= (type $generated@@559) $generated@@2)) (<= 0 ($generated $generated@@559))) (= ($generated@@276 ($generated@@85 $generated@@557 $generated@@558 $generated@@559)) (+ (- ($generated@@276 $generated@@557) ($generated ($generated@@84 $generated@@557 $generated@@558))) ($generated $generated@@559)))))
 :pattern ( ($generated@@276 ($generated@@85 $generated@@557 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@2)) ($generated@@77 $generated@@562 $generated@@46 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@46 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@3)) ($generated@@77 $generated@@564 $generated@@47 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@47 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@4)) ($generated@@77 $generated@@566 $generated@@44 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@44 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@428)) ($generated@@77 $generated@@568 $generated@@45 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@45 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@152)) ($generated@@77 $generated@@570 $generated@@48 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@48 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@265 $generated@@152)) (= (type $generated@@572) $generated@@67)) (= ($generated@@139 $generated@@571 ($generated@@470 $generated@@572)) (forall (($generated@@573 Int) ) (!  (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@264 $generated@@571))) ($generated@@225 ($generated@@471 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@471 $generated@@571 $generated@@573))
))))
 :pattern ( ($generated@@139 $generated@@571 ($generated@@470 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 Int) ) (!  (=> (= (type $generated@@575) ($generated@@265 $generated@@152)) (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@264 $generated@@575))) (< ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@575 $generated@@576))) ($generated@@574 $generated@@575))))
 :pattern ( ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@575 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) ($generated@@139 $generated@@577 ($generated@@388 $generated@@578 $generated@@579))) (and (and ($generated@@139 ($generated@@282 $generated@@577) ($generated@@234 $generated@@578)) ($generated@@139 ($generated@@331 $generated@@577) ($generated@@234 $generated@@579))) ($generated@@139 ($generated@@362 $generated@@577) ($generated@@234 ($generated@@142 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@388 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@580 ($generated@@396 $generated@@581 $generated@@582))) (and (and ($generated@@139 ($generated@@300 $generated@@580) ($generated@@239 $generated@@581)) ($generated@@139 ($generated@@342 $generated@@580) ($generated@@239 $generated@@582))) ($generated@@139 ($generated@@370 $generated@@580) ($generated@@239 ($generated@@142 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@396 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@2) ($generated@@139 $generated@@583 $generated@@46))
 :pattern ( ($generated@@139 $generated@@583 $generated@@46))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@3) ($generated@@139 $generated@@584 $generated@@47))
 :pattern ( ($generated@@139 $generated@@584 $generated@@47))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@4) ($generated@@139 $generated@@585 $generated@@44))
 :pattern ( ($generated@@139 $generated@@585 $generated@@44))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@428) ($generated@@139 $generated@@586 $generated@@45))
 :pattern ( ($generated@@139 $generated@@586 $generated@@45))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@152) ($generated@@139 $generated@@587 $generated@@48))
 :pattern ( ($generated@@139 $generated@@587 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 (T@U) Bool)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Int)
(assert  (and (and (= (type $generated@@588) ($generated@@167 $generated@@80 $generated@@4)) (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@594) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@596  (=> (= $generated@@588 ($generated@@166 $generated@@136 $generated@@589 $generated@@60 false)) (=> (and (= $generated@@590 ($generated@@244 100)) (= $generated@@591 ($generated@@244 200))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@244 0) $generated@@592)) (=> (<= ($generated@@244 0) $generated@@592) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@244 0) $generated@@590)) (=> (<= ($generated@@244 0) $generated@@590) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@244 0) $generated@@591))))))))))
(let (($generated@@597  (=> (and ($generated@@250 $generated@@589) ($generated@@593 $generated@@589)) (=> (and (and (not (= $generated@@594 $generated@@136)) (and ($generated@@139 $generated@@594 $generated@@221) ($generated@@77 $generated@@594 $generated@@221 $generated@@589))) (and (= 0 $generated@@595) (= (ControlFlow 0 5) 2))) $generated@@596))))
$generated@@597)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (Int) Int)
(declare-fun $generated@@129 (Int) Bool)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@T) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@T T@T) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@U Int) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@366 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@131 Int) ) (!  (=> (or ($generated@@129 $generated@@131) (not (= 0 $generated@@127))) (<= ($generated@@130 0) ($generated@@128 $generated@@131)))
 :pattern ( ($generated@@128 $generated@@131))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@138 $generated@@139)) 12)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@134 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@134 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@136 (type $generated@@144))))
(= (type ($generated@@132 $generated@@144 $generated@@145 $generated@@146)) $generated@@147))
 :pattern ( ($generated@@132 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 (type $generated@@151)))
(let (($generated@@153 (type $generated@@149)))
(= (type ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151)) ($generated@@134 $generated@@153 $generated@@152))))
 :pattern ( ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@136 (type $generated@@154))))
 (=> (= (type $generated@@157) $generated@@158) (= ($generated@@132 ($generated@@137 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@155 $generated@@156) $generated@@157)))
 :weight 0
))) (and (and (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@132 ($generated@@137 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@132 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@132 ($generated@@137 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@132 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or true (= ($generated@@132 ($generated@@137 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@132 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Bool) ) (! (= (type ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@134 $generated@@72 $generated@@4))
 :pattern ( ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@64 (type $generated@@186))))
 (=> (and (and (and (and (= (type $generated@@181) $generated@@72) (= (type $generated@@182) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@183) ($generated@@63 $generated@@4))) (= (type $generated@@185) $generated@@72)) (= (type $generated@@186) ($generated@@63 $generated@@187))) (= ($generated@@0 ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (not (= $generated@@185 $generated@@181)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@182 $generated@@185) $generated@@183))) $generated@@184))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@130 $generated@@188) $generated@@188)
 :pattern ( ($generated@@130 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@203) 14) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@61) (= (type $generated@@207) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207) ($generated@@69 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@213 $generated@@214)) 15)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@210 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@211 (type $generated@@219))))
(= (type ($generated@@208 $generated@@219)) ($generated@@71 $generated@@220 $generated@@4)))
 :pattern ( ($generated@@208 $generated@@219))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= (type ($generated@@209 $generated@@221 $generated@@222)) ($generated@@210 $generated@@221 $generated@@222))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (let (($generated@@225 (type $generated@@223)))
 (not ($generated@@0 ($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223))))
 :pattern ( (let (($generated@@225 (type $generated@@223)))
($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223)))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@231 $generated@@232)) 16)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@228 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@229 (type $generated@@237))))
(= (type ($generated@@226 $generated@@237)) ($generated@@71 $generated@@238 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@237))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= (type ($generated@@227 $generated@@239 $generated@@240)) ($generated@@228 $generated@@239 $generated@@240))
 :pattern ( ($generated@@227 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (let (($generated@@243 (type $generated@@241)))
 (not ($generated@@0 ($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241))))
 :pattern ( (let (($generated@@243 (type $generated@@241)))
($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@212 (type $generated@@244))))
(let (($generated@@246 ($generated@@211 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@210 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@209 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@208 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@230 (type $generated@@248))))
(let (($generated@@250 ($generated@@229 (type $generated@@248))))
 (=> (= (type $generated@@248) ($generated@@228 $generated@@250 $generated@@249)) (or (= $generated@@248 ($generated@@227 $generated@@250 $generated@@249)) (exists (($generated@@251 T@U) ) (!  (and (= (type $generated@@251) $generated@@250) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@248) $generated@@251)))
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
))))))
 :pattern ( ($generated@@226 $generated@@248))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@61)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@254) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@255) $generated@@61)) (= (type $generated@@256) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@203) ($generated@@0 ($generated@@76 $generated@@254 $generated@@257))) ($generated@@201 $generated@@257 $generated@@255 $generated@@256))
 :pattern ( ($generated@@76 $generated@@254 $generated@@257))
))))
 :pattern ( ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@203) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@201 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert  (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@212 (type $generated@@268))))
(let (($generated@@270 ($generated@@211 (type $generated@@268))))
(= (type ($generated@@265 $generated@@268)) ($generated@@71 $generated@@270 $generated@@269))))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@210 $generated@@203 $generated@@203)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))) (and ($generated@@201 ($generated@@76 ($generated@@265 $generated@@271) $generated@@275) $generated@@273 $generated@@274) ($generated@@201 $generated@@275 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@76 ($generated@@265 $generated@@271) $generated@@275))
 :pattern ( ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@230 (type $generated@@280))))
(let (($generated@@282 ($generated@@229 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@228 $generated@@203 $generated@@203)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))) (and ($generated@@201 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@201 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@71 $generated@@289 $generated@@4))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@230 (type $generated@@290))))
(let (($generated@@292 ($generated@@229 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@228 $generated@@292 $generated@@291)) (= (= $generated@@290 ($generated@@227 $generated@@292 $generated@@291)) (= ($generated@@226 $generated@@290) ($generated@@288 $generated@@292))))))
 :pattern ( ($generated@@226 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@196 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@195 $generated@@294)) (<= 0 ($generated@@194 $generated@@293))))
 :pattern ( ($generated@@194 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@264 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@264 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@264 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@264 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@264 $generated@@303 $generated@@304)) $generated@@58))
 :pattern ( ($generated@@264 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@61) (= (type $generated@@308) $generated@@61)) (= ($generated@@305 ($generated@@276 $generated@@307 $generated@@308)) $generated@@307))
 :pattern ( ($generated@@276 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@309 ($generated@@276 $generated@@311 $generated@@312)) $generated@@312))
 :pattern ( ($generated@@276 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@313 $generated@@314)) $generated@@59))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert  (and (forall (($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@317))
)) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@196 (type $generated@@318))))
(= (type ($generated@@316 $generated@@318 $generated@@319)) $generated@@320))
 :pattern ( ($generated@@316 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@195 $generated@@203)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323) (forall (($generated@@324 Int) ) (!  (=> (and (<= 0 $generated@@324) (< $generated@@324 ($generated@@194 $generated@@321))) ($generated@@201 ($generated@@316 $generated@@321 $generated@@324) $generated@@322 $generated@@323))
 :pattern ( ($generated@@316 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@325 ($generated@@70 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@70 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@327 ($generated@@252 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@252 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@252 $generated@@330)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@258 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@258 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@334)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@334))
)))
(assert  (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@337))
)) (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@336 ($generated@@335 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@335 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@335 $generated@@340)) $generated@@56))
 :pattern ( ($generated@@335 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@315 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@315 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@344)) $generated@@57))
 :pattern ( ($generated@@315 $generated@@344))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated@@345 $generated@@349 ($generated@@202 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@202 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (not ($generated@@0 ($generated@@76 ($generated@@288 $generated@@351) $generated@@350))))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@76 ($generated@@288 $generated@@351) $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@71 $generated@@203 $generated@@2)) (= (type $generated@@353) $generated@@61)) (= (type $generated@@354) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@352 ($generated@@335 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@203) (< 0 ($generated ($generated@@76 $generated@@352 $generated@@355)))) ($generated@@201 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@76 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@69 $generated@@352 ($generated@@335 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 Int) ) (! (= ($generated@@202 ($generated@@8 ($generated@@130 $generated@@356))) ($generated@@189 ($generated@@202 ($generated@@8 $generated@@356))))
 :pattern ( ($generated@@202 ($generated@@8 ($generated@@130 $generated@@356))))
)))
(assert (forall (($generated@@357 T@U) ) (! (= ($generated@@202 ($generated@@189 $generated@@357)) ($generated@@189 ($generated@@202 $generated@@357)))
 :pattern ( ($generated@@202 ($generated@@189 $generated@@357)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@196 (type $generated@@358))))
 (=> (and (= (type $generated@@358) ($generated@@195 $generated@@359)) (= ($generated@@194 $generated@@358) 0)) (= $generated@@358 ($generated@@193 $generated@@359))))
 :pattern ( ($generated@@194 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@361) $generated@@2)) ($generated@@69 $generated@@361 $generated@@46 $generated@@360))
 :pattern ( ($generated@@69 $generated@@361 $generated@@46 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@363) $generated@@3)) ($generated@@69 $generated@@363 $generated@@47 $generated@@362))
 :pattern ( ($generated@@69 $generated@@363 $generated@@47 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@365) $generated@@4)) ($generated@@69 $generated@@365 $generated@@44 $generated@@364))
 :pattern ( ($generated@@69 $generated@@365 $generated@@44 $generated@@364))
)))
(assert (= ($generated@@1 $generated@@366) 17))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@368) $generated@@366)) ($generated@@69 $generated@@368 $generated@@45 $generated@@367))
 :pattern ( ($generated@@69 $generated@@368 $generated@@45 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@203)) ($generated@@69 $generated@@370 $generated@@48 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@48 $generated@@369))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@371 () T@U)
(declare-fun $generated@@372 () T@U)
(declare-fun $generated@@373 () T@U)
(declare-fun $generated@@374 () Int)
(declare-fun $generated@@375 () Int)
(declare-fun $generated@@376 (T@U) Bool)
(declare-fun $generated@@377 (T@U) Bool)
(assert  (and (and (= (type $generated@@371) ($generated@@134 $generated@@72 $generated@@4)) (= (type $generated@@372) $generated@@72)) (= (type $generated@@373) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@378  (=> (= $generated@@371 ($generated@@133 $generated@@372 $generated@@373 $generated@@60 false)) (=> (and (= $generated@@374 ($generated@@130 6)) ($generated@@69 ($generated@@8 $generated@@374) $generated@@46 $generated@@373)) (=> (and (and (and ($generated@@129 ($generated@@130 6)) (= $generated@@375 ($generated@@130 7))) (and ($generated@@69 ($generated@@8 $generated@@375) $generated@@46 $generated@@373) ($generated@@129 ($generated@@130 7)))) (and (and ($generated@@129 ($generated@@130 6)) ($generated@@129 ($generated@@130 7))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@128 ($generated@@130 6)) ($generated@@128 ($generated@@130 7))))))))
(let (($generated@@379  (=> (and (and ($generated@@376 $generated@@373) ($generated@@377 $generated@@373)) (and (= 1 $generated@@127) (= (ControlFlow 0 3) 2))) $generated@@378)))
$generated@@379)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 () Int)
(assert  (and (and (and (= (type $generated@@157) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@158) $generated@@47)) (= (type $generated@@159) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@160) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@166  (=> (= $generated@@157 ($generated@@45 $generated@@158 $generated@@159 $generated@@160 false)) (=> (and (= $generated@@161 (+ $generated@@162 1)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@161 $generated@@162)))))
(let (($generated@@167  (=> (and (and ($generated@@163 $generated@@159) ($generated@@164 $generated@@159)) (and (= 0 $generated@@165) (= (ControlFlow 0 3) 2))) $generated@@166)))
$generated@@167)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (Int) Int)
(declare-fun $generated@@129 (Int) Bool)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@T) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@T T@T) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@U Int) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@368 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@131 Int) ) (!  (=> (or ($generated@@129 $generated@@131) (not (= 0 $generated@@127))) (<= ($generated@@130 0) ($generated@@128 $generated@@131)))
 :pattern ( ($generated@@128 $generated@@131))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@138 $generated@@139)) 12)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@134 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@134 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@136 (type $generated@@144))))
(= (type ($generated@@132 $generated@@144 $generated@@145 $generated@@146)) $generated@@147))
 :pattern ( ($generated@@132 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 (type $generated@@151)))
(let (($generated@@153 (type $generated@@149)))
(= (type ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151)) ($generated@@134 $generated@@153 $generated@@152))))
 :pattern ( ($generated@@137 $generated@@148 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@136 (type $generated@@154))))
 (=> (= (type $generated@@157) $generated@@158) (= ($generated@@132 ($generated@@137 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@155 $generated@@156) $generated@@157)))
 :weight 0
))) (and (and (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@132 ($generated@@137 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@132 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@132 ($generated@@137 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@132 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or true (= ($generated@@132 ($generated@@137 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@132 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Bool) ) (! (= (type ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@134 $generated@@72 $generated@@4))
 :pattern ( ($generated@@133 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@64 (type $generated@@186))))
 (=> (and (and (and (and (= (type $generated@@181) $generated@@72) (= (type $generated@@182) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@183) ($generated@@63 $generated@@4))) (= (type $generated@@185) $generated@@72)) (= (type $generated@@186) ($generated@@63 $generated@@187))) (= ($generated@@0 ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (not (= $generated@@185 $generated@@181)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@182 $generated@@185) $generated@@183))) $generated@@184))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@130 $generated@@188) $generated@@188)
 :pattern ( ($generated@@130 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@203) 14) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@61) (= (type $generated@@207) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207) ($generated@@69 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@213 $generated@@214)) 15)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@210 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@211 (type $generated@@219))))
(= (type ($generated@@208 $generated@@219)) ($generated@@71 $generated@@220 $generated@@4)))
 :pattern ( ($generated@@208 $generated@@219))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= (type ($generated@@209 $generated@@221 $generated@@222)) ($generated@@210 $generated@@221 $generated@@222))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (let (($generated@@225 (type $generated@@223)))
 (not ($generated@@0 ($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223))))
 :pattern ( (let (($generated@@225 (type $generated@@223)))
($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223)))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@231 $generated@@232)) 16)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@228 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@229 (type $generated@@237))))
(= (type ($generated@@226 $generated@@237)) ($generated@@71 $generated@@238 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@237))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= (type ($generated@@227 $generated@@239 $generated@@240)) ($generated@@228 $generated@@239 $generated@@240))
 :pattern ( ($generated@@227 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (let (($generated@@243 (type $generated@@241)))
 (not ($generated@@0 ($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241))))
 :pattern ( (let (($generated@@243 (type $generated@@241)))
($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@212 (type $generated@@244))))
(let (($generated@@246 ($generated@@211 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@210 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@209 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@208 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@230 (type $generated@@248))))
(let (($generated@@250 ($generated@@229 (type $generated@@248))))
 (=> (= (type $generated@@248) ($generated@@228 $generated@@250 $generated@@249)) (or (= $generated@@248 ($generated@@227 $generated@@250 $generated@@249)) (exists (($generated@@251 T@U) ) (!  (and (= (type $generated@@251) $generated@@250) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@248) $generated@@251)))
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
))))))
 :pattern ( ($generated@@226 $generated@@248))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@61)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@254) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@255) $generated@@61)) (= (type $generated@@256) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@203) ($generated@@0 ($generated@@76 $generated@@254 $generated@@257))) ($generated@@201 $generated@@257 $generated@@255 $generated@@256))
 :pattern ( ($generated@@76 $generated@@254 $generated@@257))
))))
 :pattern ( ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@203) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@201 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert  (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@212 (type $generated@@268))))
(let (($generated@@270 ($generated@@211 (type $generated@@268))))
(= (type ($generated@@265 $generated@@268)) ($generated@@71 $generated@@270 $generated@@269))))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@210 $generated@@203 $generated@@203)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))) (and ($generated@@201 ($generated@@76 ($generated@@265 $generated@@271) $generated@@275) $generated@@273 $generated@@274) ($generated@@201 $generated@@275 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@76 ($generated@@265 $generated@@271) $generated@@275))
 :pattern ( ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@230 (type $generated@@280))))
(let (($generated@@282 ($generated@@229 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@228 $generated@@203 $generated@@203)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))) (and ($generated@@201 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@201 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@71 $generated@@289 $generated@@4))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@230 (type $generated@@290))))
(let (($generated@@292 ($generated@@229 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@228 $generated@@292 $generated@@291)) (= (= $generated@@290 ($generated@@227 $generated@@292 $generated@@291)) (= ($generated@@226 $generated@@290) ($generated@@288 $generated@@292))))))
 :pattern ( ($generated@@226 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@196 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@195 $generated@@294)) (<= 0 ($generated@@194 $generated@@293))))
 :pattern ( ($generated@@194 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@264 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@264 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@264 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@264 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@264 $generated@@303 $generated@@304)) $generated@@58))
 :pattern ( ($generated@@264 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@61) (= (type $generated@@308) $generated@@61)) (= ($generated@@305 ($generated@@276 $generated@@307 $generated@@308)) $generated@@307))
 :pattern ( ($generated@@276 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@309 ($generated@@276 $generated@@311 $generated@@312)) $generated@@312))
 :pattern ( ($generated@@276 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@313 $generated@@314)) $generated@@59))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert  (and (forall (($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@317))
)) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@196 (type $generated@@318))))
(= (type ($generated@@316 $generated@@318 $generated@@319)) $generated@@320))
 :pattern ( ($generated@@316 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@195 $generated@@203)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323) (forall (($generated@@324 Int) ) (!  (=> (and (<= 0 $generated@@324) (< $generated@@324 ($generated@@194 $generated@@321))) ($generated@@201 ($generated@@316 $generated@@321 $generated@@324) $generated@@322 $generated@@323))
 :pattern ( ($generated@@316 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@325 ($generated@@70 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@70 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@327 ($generated@@252 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@252 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@252 $generated@@330)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@258 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@258 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@334)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@334))
)))
(assert  (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@337))
)) (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@336 ($generated@@335 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@335 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@335 $generated@@340)) $generated@@56))
 :pattern ( ($generated@@335 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@315 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@315 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@344)) $generated@@57))
 :pattern ( ($generated@@315 $generated@@344))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated@@345 $generated@@349 ($generated@@202 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@202 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (not ($generated@@0 ($generated@@76 ($generated@@288 $generated@@351) $generated@@350))))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@76 ($generated@@288 $generated@@351) $generated@@350)))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@352 Int) ) (!  (=> (or ($generated@@129 $generated@@352) (not (= 0 $generated@@127))) (= ($generated@@128 $generated@@352) (ite (< $generated@@352 0) 2 3)))
 :pattern ( ($generated@@128 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@71 $generated@@203 $generated@@2)) (= (type $generated@@354) $generated@@61)) (= (type $generated@@355) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@353 ($generated@@335 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@203) (< 0 ($generated ($generated@@76 $generated@@353 $generated@@356)))) ($generated@@201 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@76 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@69 $generated@@353 ($generated@@335 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 Int) ) (! (= ($generated@@202 ($generated@@8 ($generated@@130 $generated@@357))) ($generated@@189 ($generated@@202 ($generated@@8 $generated@@357))))
 :pattern ( ($generated@@202 ($generated@@8 ($generated@@130 $generated@@357))))
)))
(assert (forall (($generated@@358 T@U) ) (! (= ($generated@@202 ($generated@@189 $generated@@358)) ($generated@@189 ($generated@@202 $generated@@358)))
 :pattern ( ($generated@@202 ($generated@@189 $generated@@358)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@196 (type $generated@@359))))
 (=> (and (= (type $generated@@359) ($generated@@195 $generated@@360)) (= ($generated@@194 $generated@@359) 0)) (= $generated@@359 ($generated@@193 $generated@@360))))
 :pattern ( ($generated@@194 $generated@@359))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@361 Int) ) (!  (=> (or ($generated@@129 ($generated@@130 $generated@@361)) (not (= 0 $generated@@127))) (= ($generated@@128 ($generated@@130 $generated@@361)) (ite (< $generated@@361 0) 2 3)))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@130 $generated@@361)))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@363) $generated@@2)) ($generated@@69 $generated@@363 $generated@@46 $generated@@362))
 :pattern ( ($generated@@69 $generated@@363 $generated@@46 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@365) $generated@@3)) ($generated@@69 $generated@@365 $generated@@47 $generated@@364))
 :pattern ( ($generated@@69 $generated@@365 $generated@@47 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@367) $generated@@4)) ($generated@@69 $generated@@367 $generated@@44 $generated@@366))
 :pattern ( ($generated@@69 $generated@@367 $generated@@44 $generated@@366))
)))
(assert (= ($generated@@1 $generated@@368) 17))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@368)) ($generated@@69 $generated@@370 $generated@@45 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@45 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@372) $generated@@203)) ($generated@@69 $generated@@372 $generated@@48 $generated@@371))
 :pattern ( ($generated@@69 $generated@@372 $generated@@48 $generated@@371))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@373 () T@U)
(declare-fun $generated@@374 () T@U)
(declare-fun $generated@@375 () T@U)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 (T@U) Bool)
(declare-fun $generated@@379 (T@U) Bool)
(assert  (and (and (= (type $generated@@373) ($generated@@134 $generated@@72 $generated@@4)) (= (type $generated@@374) $generated@@72)) (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@380  (=> (= $generated@@373 ($generated@@133 $generated@@374 $generated@@375 $generated@@60 false)) (=> (and (= $generated@@376 ($generated@@130 6)) ($generated@@69 ($generated@@8 $generated@@376) $generated@@46 $generated@@375)) (=> (and (and (and ($generated@@129 ($generated@@130 6)) (= $generated@@377 ($generated@@130 7))) (and ($generated@@69 ($generated@@8 $generated@@377) $generated@@46 $generated@@375) ($generated@@129 ($generated@@130 7)))) (and (and ($generated@@129 ($generated@@130 6)) ($generated@@129 ($generated@@130 7))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@130 ($generated@@128 ($generated@@130 6))) ($generated@@130 ($generated@@128 ($generated@@130 7)))))))))
(let (($generated@@381  (=> (and (and ($generated@@378 $generated@@375) ($generated@@379 $generated@@375)) (and (= 1 $generated@@127) (= (ControlFlow 0 3) 2))) $generated@@380)))
$generated@@381)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@321 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (Int Int) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (Int Int) Int)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@152)) (= (type $generated@@255) $generated@@152)) (= (type $generated@@256) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@250 $generated@@256)) (= ($generated@@77 ($generated@@224 $generated@@254 $generated@@255) ($generated@@142 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@254 $generated@@255) ($generated@@142 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@71)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@143) (= ($generated@@141 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@143) ($generated@@141 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@152) (= (type $generated@@262) $generated@@152)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@141 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@152)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@67) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@77 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@79 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@82 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@79 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@84 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 18)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@79 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@79 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@82 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@79 $generated@@319 $generated@@2)) (= ($generated@@158 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@84 $generated@@318 $generated@@320))) (<= ($generated ($generated@@84 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@84 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@152) ($generated@@225 $generated@@324 $generated@@135)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@324)) $generated@@324) ($generated@@139 ($generated@@321 $generated@@80 $generated@@324) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@324 $generated@@135))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@152) ($generated@@225 $generated@@325 $generated@@221)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@321 $generated@@80 $generated@@325) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@325 $generated@@221))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@80) (= ($generated@@139 $generated@@326 $generated@@221)  (and ($generated@@139 $generated@@326 $generated@@135) (not (= $generated@@326 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@326 $generated@@221))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@286 (type $generated@@327))))
(let (($generated@@329 ($generated@@285 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@284 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@283 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@282 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@286 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@286 (type $generated@@334))))
(let (($generated@@336 ($generated@@285 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@284 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@283 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@304 (type $generated@@338))))
(let (($generated@@340 ($generated@@303 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@302 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@301 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@300 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@304 (type $generated@@345))))
(let (($generated@@347 ($generated@@303 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@302 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@301 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@225 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@234 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@251 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@234 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@239 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@251 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@239 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@277 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@277 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@286 (type $generated@@365))))
(let (($generated@@367 ($generated@@285 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@369) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@304 (type $generated@@373))))
(let (($generated@@375 ($generated@@303 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@285 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@284 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@303 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@302 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))) (and ($generated@@251 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@251 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))) (and ($generated@@251 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@251 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@304 (type $generated@@406))))
(let (($generated@@408 ($generated@@303 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@302 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@301 $generated@@408 $generated@@407)) (= ($generated@@300 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@300 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@304 (type $generated@@409))))
(let (($generated@@411 ($generated@@303 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@302 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@301 $generated@@411 $generated@@410)) (= ($generated@@342 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@342 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@304 (type $generated@@412))))
(let (($generated@@414 ($generated@@303 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@302 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@301 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@286 (type $generated@@415))))
(let (($generated@@417 ($generated@@285 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@284 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@283 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@415) ($generated@@271 ($generated@@224 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@304 (type $generated@@420))))
(let (($generated@@422 ($generated@@303 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@302 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@301 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@420) ($generated@@271 ($generated@@224 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@225 $generated@@425 $generated@@46)) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@321 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@225 $generated@@426 $generated@@47)) (and (= ($generated@@271 ($generated@@321 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@321 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@225 $generated@@427 $generated@@44)) (and (= ($generated@@271 ($generated@@321 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@321 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@225 $generated@@429 $generated@@45)) (and (= ($generated@@271 ($generated@@321 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@321 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@225 ($generated@@271 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@276 $generated@@432))))
 :pattern ( ($generated@@276 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@266 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@265 $generated@@435)) (<= 0 ($generated@@264 $generated@@434))))
 :pattern ( ($generated@@264 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@257 ($generated@@224 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@224 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@224 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@266 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@265 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@264 $generated@@476))) ($generated@@251 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@234 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@234 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@239 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@239 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@321 $generated@@499 ($generated@@271 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@271 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))) (and ($generated@@225 ($generated@@84 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@225 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))) (and ($generated@@225 ($generated@@84 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@225 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@224 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@224 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@224 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@224 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@225 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@271 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@225 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@225 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@271 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@225 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@225 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@271 ($generated@@321 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@321 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@225 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 Int) ($generated@@527 Int) ) (! (= ($generated@@525 $generated@@526 $generated@@527) (mod $generated@@526 $generated@@527))
 :pattern ( ($generated@@525 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@67) (= (type $generated@@531) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@530 $generated@@531)) $generated@@62) (= ($generated@@528 ($generated@@142 $generated@@530 $generated@@531)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 Int) ($generated@@534 Int) ) (! (= ($generated@@532 $generated@@533 $generated@@534) (* $generated@@533 $generated@@534))
 :pattern ( ($generated@@532 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@143) (= ($generated@@508 ($generated@@271 $generated@@535)) ($generated@@509 $generated@@535)))
 :pattern ( ($generated@@508 ($generated@@271 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@152) ($generated@@225 $generated@@536 ($generated@@78 0))) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@536)) $generated@@536) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@536) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@78 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@225 $generated@@537 ($generated@@234 $generated@@538))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@537) ($generated@@234 $generated@@538))))
 :pattern ( ($generated@@225 $generated@@537 ($generated@@234 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@152) (= (type $generated@@540) $generated@@67)) ($generated@@225 $generated@@539 ($generated@@239 $generated@@540))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@539)) $generated@@539) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@539) ($generated@@239 $generated@@540))))
 :pattern ( ($generated@@225 $generated@@539 ($generated@@239 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@152) (= (type $generated@@542) $generated@@67)) ($generated@@225 $generated@@541 ($generated@@157 $generated@@542))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@541)) $generated@@541) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@541) ($generated@@157 $generated@@542))))
 :pattern ( ($generated@@225 $generated@@541 ($generated@@157 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@152) (= (type $generated@@544) $generated@@67)) ($generated@@225 $generated@@543 ($generated@@470 $generated@@544))) (and (= ($generated@@271 ($generated@@321 ($generated@@265 $generated@@152) $generated@@543)) $generated@@543) ($generated@@139 ($generated@@321 ($generated@@265 $generated@@152) $generated@@543) ($generated@@470 $generated@@544))))
 :pattern ( ($generated@@225 $generated@@543 ($generated@@470 $generated@@544)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@528 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@528 $generated@@221) $generated@@66))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@545 ($generated@@157 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@545 $generated@@548)))) ($generated@@251 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@84 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@77 $generated@@545 ($generated@@157 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@143) (= (type $generated@@550) $generated@@67)) (= (type $generated@@551) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@551) (and ($generated@@141 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@67) ($generated@@77 $generated@@549 ($generated@@142 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@77 $generated@@549 ($generated@@142 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@251 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@251 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@143) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@555) (and ($generated@@141 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@67) ($generated@@77 $generated@@553 ($generated@@142 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@77 $generated@@553 ($generated@@142 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@251 ($generated@@151 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@251 ($generated@@151 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@152) (= (type $generated@@558) $generated@@152)) (= ($generated@@224 ($generated@@246 $generated@@557) ($generated@@246 $generated@@558)) ($generated@@246 ($generated@@224 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@557) ($generated@@246 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@559))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@560)) ($generated@@246 ($generated@@271 $generated@@560)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@266 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@265 $generated@@562)) (= ($generated@@264 $generated@@561) 0)) (= $generated@@561 ($generated@@263 $generated@@562))))
 :pattern ( ($generated@@264 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@79 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@276 ($generated@@85 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@276 $generated@@563) ($generated ($generated@@84 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@276 ($generated@@85 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@2)) ($generated@@77 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@3)) ($generated@@77 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@4)) ($generated@@77 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@428)) ($generated@@77 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@152)) ($generated@@77 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@265 $generated@@152)) (= (type $generated@@578) $generated@@67)) (= ($generated@@139 $generated@@577 ($generated@@470 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@264 $generated@@577))) ($generated@@225 ($generated@@471 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@471 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@470 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@265 $generated@@152)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@264 $generated@@581))) (< ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@388 $generated@@584 $generated@@585))) (and (and ($generated@@139 ($generated@@282 $generated@@583) ($generated@@234 $generated@@584)) ($generated@@139 ($generated@@331 $generated@@583) ($generated@@234 $generated@@585))) ($generated@@139 ($generated@@362 $generated@@583) ($generated@@234 ($generated@@142 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@388 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) $generated@@67)) ($generated@@139 $generated@@586 ($generated@@396 $generated@@587 $generated@@588))) (and (and ($generated@@139 ($generated@@300 $generated@@586) ($generated@@239 $generated@@587)) ($generated@@139 ($generated@@342 $generated@@586) ($generated@@239 $generated@@588))) ($generated@@139 ($generated@@370 $generated@@586) ($generated@@239 ($generated@@142 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@139 $generated@@586 ($generated@@396 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@139 $generated@@589 $generated@@46))
 :pattern ( ($generated@@139 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@139 $generated@@590 $generated@@47))
 :pattern ( ($generated@@139 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@139 $generated@@591 $generated@@44))
 :pattern ( ($generated@@139 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@428) ($generated@@139 $generated@@592 $generated@@45))
 :pattern ( ($generated@@139 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@152) ($generated@@139 $generated@@593 $generated@@48))
 :pattern ( ($generated@@139 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 (T@U) Bool)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () Int)
(assert  (and (and (= (type $generated@@594) ($generated@@167 $generated@@80 $generated@@4)) (= (type $generated@@595) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@599) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@601  (=> (and (= $generated@@594 ($generated@@166 $generated@@136 $generated@@595 $generated@@60 false)) (= $generated@@596 ($generated@@532 ($generated@@244 2) $generated@@597))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> false (<= ($generated@@244 0) $generated@@596))) (=> (=> false (<= ($generated@@244 0) $generated@@596)) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@525 $generated@@596 ($generated@@244 2)) ($generated@@244 0))))))))
(let (($generated@@602  (=> (and ($generated@@250 $generated@@595) ($generated@@598 $generated@@595)) (=> (and (and (and (not (= $generated@@599 $generated@@136)) (and ($generated@@139 $generated@@599 $generated@@221) ($generated@@77 $generated@@599 $generated@@221 $generated@@595))) (= 0 $generated@@600)) (and (<= ($generated@@244 0) $generated@@597) (= (ControlFlow 0 4) 2))) $generated@@601))))
$generated@@602)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@321 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@152)) (= (type $generated@@255) $generated@@152)) (= (type $generated@@256) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@250 $generated@@256)) (= ($generated@@77 ($generated@@224 $generated@@254 $generated@@255) ($generated@@142 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@254 $generated@@255) ($generated@@142 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@71)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@143) (= ($generated@@141 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@143) ($generated@@141 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@152) (= (type $generated@@262) $generated@@152)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@141 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@152)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@67) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@77 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@79 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@82 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@79 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@84 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 18)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@79 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@79 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@82 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@79 $generated@@319 $generated@@2)) (= ($generated@@158 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@84 $generated@@318 $generated@@320))) (<= ($generated ($generated@@84 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@84 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@152) ($generated@@225 $generated@@324 $generated@@135)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@324)) $generated@@324) ($generated@@139 ($generated@@321 $generated@@80 $generated@@324) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@324 $generated@@135))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@152) ($generated@@225 $generated@@325 $generated@@221)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@321 $generated@@80 $generated@@325) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@325 $generated@@221))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@80) (= ($generated@@139 $generated@@326 $generated@@221)  (and ($generated@@139 $generated@@326 $generated@@135) (not (= $generated@@326 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@326 $generated@@221))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@286 (type $generated@@327))))
(let (($generated@@329 ($generated@@285 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@284 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@283 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@282 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@286 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@286 (type $generated@@334))))
(let (($generated@@336 ($generated@@285 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@284 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@283 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@304 (type $generated@@338))))
(let (($generated@@340 ($generated@@303 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@302 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@301 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@300 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@304 (type $generated@@345))))
(let (($generated@@347 ($generated@@303 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@302 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@301 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@225 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@234 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@251 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@234 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@239 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@251 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@239 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@277 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@277 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@286 (type $generated@@365))))
(let (($generated@@367 ($generated@@285 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@369) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@304 (type $generated@@373))))
(let (($generated@@375 ($generated@@303 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@285 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@284 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@303 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@302 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))) (and ($generated@@251 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@251 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))) (and ($generated@@251 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@251 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@304 (type $generated@@406))))
(let (($generated@@408 ($generated@@303 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@302 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@301 $generated@@408 $generated@@407)) (= ($generated@@300 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@300 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@304 (type $generated@@409))))
(let (($generated@@411 ($generated@@303 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@302 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@301 $generated@@411 $generated@@410)) (= ($generated@@342 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@342 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@304 (type $generated@@412))))
(let (($generated@@414 ($generated@@303 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@302 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@301 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@286 (type $generated@@415))))
(let (($generated@@417 ($generated@@285 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@284 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@283 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@415) ($generated@@271 ($generated@@224 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@304 (type $generated@@420))))
(let (($generated@@422 ($generated@@303 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@302 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@301 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@420) ($generated@@271 ($generated@@224 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@225 $generated@@425 $generated@@46)) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@321 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@225 $generated@@426 $generated@@47)) (and (= ($generated@@271 ($generated@@321 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@321 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@225 $generated@@427 $generated@@44)) (and (= ($generated@@271 ($generated@@321 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@321 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@225 $generated@@429 $generated@@45)) (and (= ($generated@@271 ($generated@@321 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@321 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@225 ($generated@@271 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@276 $generated@@432))))
 :pattern ( ($generated@@276 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@266 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@265 $generated@@435)) (<= 0 ($generated@@264 $generated@@434))))
 :pattern ( ($generated@@264 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@257 ($generated@@224 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@224 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@224 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@266 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@265 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@264 $generated@@476))) ($generated@@251 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@234 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@234 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@239 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@239 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@321 $generated@@499 ($generated@@271 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@271 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))) (and ($generated@@225 ($generated@@84 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@225 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))) (and ($generated@@225 ($generated@@84 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@225 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@224 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@224 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@224 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@224 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@225 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@271 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@225 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@225 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@271 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@225 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@225 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@271 ($generated@@321 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@321 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@225 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@142 $generated@@527 $generated@@528)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@143) (= ($generated@@508 ($generated@@271 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@271 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@152) ($generated@@225 $generated@@530 ($generated@@78 0))) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@530)) $generated@@530) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@530) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@530 ($generated@@78 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@225 $generated@@531 ($generated@@234 $generated@@532))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@234 $generated@@532))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@234 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@225 $generated@@533 ($generated@@239 $generated@@534))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@239 $generated@@534))))
 :pattern ( ($generated@@225 $generated@@533 ($generated@@239 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@225 $generated@@535 ($generated@@157 $generated@@536))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535) ($generated@@157 $generated@@536))))
 :pattern ( ($generated@@225 $generated@@535 ($generated@@157 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@225 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@271 ($generated@@321 ($generated@@265 $generated@@152) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@321 ($generated@@265 $generated@@152) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@225 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@525 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@525 $generated@@221) $generated@@66))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@539 $generated@@542)))) ($generated@@251 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@84 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@143) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@545) (and ($generated@@141 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@67) ($generated@@77 $generated@@543 ($generated@@142 $generated@@544 $generated@@546) $generated@@545))
 :pattern ( ($generated@@77 $generated@@543 ($generated@@142 $generated@@544 $generated@@546) $generated@@545))
))))) ($generated@@251 ($generated@@150 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@251 ($generated@@150 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@143) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@549) (and ($generated@@141 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@67) ($generated@@77 $generated@@547 ($generated@@142 $generated@@550 $generated@@548) $generated@@549))
 :pattern ( ($generated@@77 $generated@@547 ($generated@@142 $generated@@550 $generated@@548) $generated@@549))
))))) ($generated@@251 ($generated@@151 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@251 ($generated@@151 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@152) (= (type $generated@@552) $generated@@152)) (= ($generated@@224 ($generated@@246 $generated@@551) ($generated@@246 $generated@@552)) ($generated@@246 ($generated@@224 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@551) ($generated@@246 $generated@@552)))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@553))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@553))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@553))))
)))
(assert (forall (($generated@@554 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@554)) ($generated@@246 ($generated@@271 $generated@@554)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@266 (type $generated@@555))))
 (=> (and (= (type $generated@@555) ($generated@@265 $generated@@556)) (= ($generated@@264 $generated@@555) 0)) (= $generated@@555 ($generated@@263 $generated@@556))))
 :pattern ( ($generated@@264 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@558)))
 (=> (and (and (= (type $generated@@557) ($generated@@79 $generated@@560 $generated@@2)) (= (type $generated@@559) $generated@@2)) (<= 0 ($generated $generated@@559))) (= ($generated@@276 ($generated@@85 $generated@@557 $generated@@558 $generated@@559)) (+ (- ($generated@@276 $generated@@557) ($generated ($generated@@84 $generated@@557 $generated@@558))) ($generated $generated@@559)))))
 :pattern ( ($generated@@276 ($generated@@85 $generated@@557 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@2)) ($generated@@77 $generated@@562 $generated@@46 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@46 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@3)) ($generated@@77 $generated@@564 $generated@@47 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@47 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@4)) ($generated@@77 $generated@@566 $generated@@44 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@44 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@428)) ($generated@@77 $generated@@568 $generated@@45 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@45 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@152)) ($generated@@77 $generated@@570 $generated@@48 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@48 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@265 $generated@@152)) (= (type $generated@@572) $generated@@67)) (= ($generated@@139 $generated@@571 ($generated@@470 $generated@@572)) (forall (($generated@@573 Int) ) (!  (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@264 $generated@@571))) ($generated@@225 ($generated@@471 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@471 $generated@@571 $generated@@573))
))))
 :pattern ( ($generated@@139 $generated@@571 ($generated@@470 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 Int) ) (!  (=> (= (type $generated@@575) ($generated@@265 $generated@@152)) (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@264 $generated@@575))) (< ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@575 $generated@@576))) ($generated@@574 $generated@@575))))
 :pattern ( ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@575 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) ($generated@@139 $generated@@577 ($generated@@388 $generated@@578 $generated@@579))) (and (and ($generated@@139 ($generated@@282 $generated@@577) ($generated@@234 $generated@@578)) ($generated@@139 ($generated@@331 $generated@@577) ($generated@@234 $generated@@579))) ($generated@@139 ($generated@@362 $generated@@577) ($generated@@234 ($generated@@142 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@388 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@580 ($generated@@396 $generated@@581 $generated@@582))) (and (and ($generated@@139 ($generated@@300 $generated@@580) ($generated@@239 $generated@@581)) ($generated@@139 ($generated@@342 $generated@@580) ($generated@@239 $generated@@582))) ($generated@@139 ($generated@@370 $generated@@580) ($generated@@239 ($generated@@142 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@396 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@2) ($generated@@139 $generated@@583 $generated@@46))
 :pattern ( ($generated@@139 $generated@@583 $generated@@46))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@3) ($generated@@139 $generated@@584 $generated@@47))
 :pattern ( ($generated@@139 $generated@@584 $generated@@47))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@4) ($generated@@139 $generated@@585 $generated@@44))
 :pattern ( ($generated@@139 $generated@@585 $generated@@44))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@428) ($generated@@139 $generated@@586 $generated@@45))
 :pattern ( ($generated@@139 $generated@@586 $generated@@45))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@152) ($generated@@139 $generated@@587 $generated@@48))
 :pattern ( ($generated@@139 $generated@@587 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 (T@U) Bool)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Int)
(assert  (and (and (= (type $generated@@588) ($generated@@167 $generated@@80 $generated@@4)) (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@594) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@596  (=> (= $generated@@588 ($generated@@166 $generated@@136 $generated@@589 $generated@@60 false)) (=> (and (= $generated@@590 ($generated@@244 100)) (= $generated@@591 ($generated@@244 200))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> false (<= ($generated@@244 0) $generated@@592))) (=> (=> false (<= ($generated@@244 0) $generated@@592)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> false (<= ($generated@@244 0) $generated@@590))) (=> (=> false (<= ($generated@@244 0) $generated@@590)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> false (<= ($generated@@244 0) $generated@@591))) (=> (=> false (<= ($generated@@244 0) $generated@@591)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@244 12) $generated@@590)) (=> (<= ($generated@@244 12) $generated@@590) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@244 1200) $generated@@591))))))))))))))
(let (($generated@@597  (=> (and ($generated@@250 $generated@@589) ($generated@@593 $generated@@589)) (=> (and (and (not (= $generated@@594 $generated@@136)) (and ($generated@@139 $generated@@594 $generated@@221) ($generated@@77 $generated@@594 $generated@@221 $generated@@589))) (and (= 0 $generated@@595) (= (ControlFlow 0 7) 2))) $generated@@596))))
$generated@@597)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () Int)
(assert  (and (and (and (= (type $generated@@157) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@158) $generated@@47)) (= (type $generated@@159) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@160) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@165  (=> (and (= $generated@@157 ($generated@@45 $generated@@158 $generated@@159 $generated@@160 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@161 $generated@@161))))
(let (($generated@@166  (=> (and (and ($generated@@162 $generated@@159) ($generated@@163 $generated@@159)) (and (= 0 $generated@@164) (= (ControlFlow 0 3) 2))) $generated@@165)))
$generated@@166)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@225 (T@T) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@299 (T@T T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@T) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U T@U T@U) T@U)
(declare-fun $generated@@512 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@513 (T@T T@T) T@T)
(declare-fun $generated@@514 (T@T) T@T)
(declare-fun $generated@@515 (T@T) T@T)
(declare-fun $generated@@516 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@620 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@70) (= (type $generated@@215) $generated@@70)) (= (type $generated@@216) $generated@@170)) (= (type $generated@@217) $generated@@170)) (= (type $generated@@218) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@218)) (= ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218)  (and ($generated@@213 $generated@@216 $generated@@214 $generated@@218) ($generated@@213 $generated@@217 $generated@@215 $generated@@218))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@219 $generated@@220)) $generated@@75)
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@161) (= ($generated@@159 $generated@@221) (= ($generated@@219 $generated@@221) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@161) ($generated@@159 $generated@@222)) (exists (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (and (= (type $generated@@223) $generated@@170) (= (type $generated@@224) $generated@@170)) (= $generated@@222 ($generated@@184 $generated@@223 $generated@@224)))
 :no-pattern (type $generated@@223)
 :no-pattern (type $generated@@224)
 :no-pattern ($generated $generated@@223)
 :no-pattern ($generated@@0 $generated@@223)
 :no-pattern ($generated $generated@@224)
 :no-pattern ($generated@@0 $generated@@224)
)))
 :pattern ( ($generated@@159 $generated@@222))
)))
(assert  (and (and (forall (($generated@@229 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@229)) 18)) (forall (($generated@@230 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
))) (forall (($generated@@231 T@T) ) (! (= (type ($generated@@225 $generated@@231)) ($generated@@227 $generated@@231))
 :pattern ( ($generated@@225 $generated@@231))
))))
(assert (forall (($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@232)) 0)
 :pattern ( ($generated@@225 $generated@@232))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@170)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@70) (= (type $generated@@237) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237) ($generated@@85 $generated@@235 $generated@@236 $generated@@237)))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@240) $generated@@170)) (= (type $generated@@241) $generated@@70)) ($generated@@143 $generated@@238 $generated@@239)) ($generated@@213 $generated@@240 $generated@@241 $generated@@238)) ($generated@@213 $generated@@240 $generated@@241 $generated@@239))
 :pattern ( ($generated@@143 $generated@@238 $generated@@239) ($generated@@213 $generated@@240 $generated@@241 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@242) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@245) $generated@@70)) ($generated@@143 $generated@@242 $generated@@243)) ($generated@@85 $generated@@244 $generated@@245 $generated@@242)) ($generated@@85 $generated@@244 $generated@@245 $generated@@243))
 :pattern ( ($generated@@143 $generated@@242 $generated@@243) ($generated@@85 $generated@@244 $generated@@245 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@247) $generated@@88)) (=> (and (and ($generated@@152 $generated@@246) (and (not (= $generated@@247 $generated@@148)) (= ($generated@@153 $generated@@247) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151) $generated@@46 $generated@@246)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151))
)))
(assert (forall (($generated@@250 T@T) ) (! (= (type ($generated@@249 $generated@@250)) ($generated@@87 $generated@@250 $generated@@2))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@90 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@87 $generated@@252 $generated@@2)) (and (= (= ($generated@@248 $generated@@251) 0) (= $generated@@251 ($generated@@249 $generated@@252))) (=> (not (= ($generated@@248 $generated@@251) 0)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) (< 0 ($generated ($generated@@92 $generated@@251 $generated@@253))))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 19)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@87 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 20)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@87 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@292) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@290 $generated@@291 $generated@@292)) (and ($generated@@143 $generated@@291 $generated@@292) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@73 (type $generated@@294))))
 (=> (and (and (= (type $generated@@293) $generated@@88) (= (type $generated@@294) ($generated@@72 $generated@@295))) (not ($generated@@196 $generated@@294))) (= ($generated@@94 ($generated@@92 $generated@@291 $generated@@293) $generated@@294) ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))
))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@90 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@87 $generated@@297 $generated@@2)) (= ($generated@@176 $generated@@296) (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@297) (and (<= 0 ($generated ($generated@@92 $generated@@296 $generated@@298))) (<= ($generated ($generated@@92 $generated@@296 $generated@@298)) ($generated@@248 $generated@@296))))
 :pattern ( ($generated@@92 $generated@@296 $generated@@298))
)))))
 :pattern ( ($generated@@176 $generated@@296))
)))
(assert (forall (($generated@@300 T@T) ($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@170) ($generated@@185 $generated@@302 $generated@@147)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@302)) $generated@@302) ($generated@@154 ($generated@@299 $generated@@88 $generated@@302) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@302 $generated@@147))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@170) ($generated@@185 $generated@@303 $generated@@181)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@303)) $generated@@303) ($generated@@154 ($generated@@299 $generated@@88 $generated@@303) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@303 $generated@@181))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@88) (= ($generated@@154 $generated@@304 $generated@@181)  (and ($generated@@154 $generated@@304 $generated@@147) (not (= $generated@@304 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@304 $generated@@181))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@258 (type $generated@@305))))
(let (($generated@@307 ($generated@@257 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@256 $generated@@307 $generated@@306)) (or (= $generated@@305 ($generated@@255 $generated@@307 $generated@@306)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@305) $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@254 $generated@@305))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@258 (type $generated@@310))))
(= (type ($generated@@309 $generated@@310)) ($generated@@87 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@258 (type $generated@@312))))
(let (($generated@@314 ($generated@@257 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@256 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@255 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@313) ($generated@@0 ($generated@@92 ($generated@@309 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(let (($generated@@318 ($generated@@275 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@274 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@273 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@272 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@276 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@276 (type $generated@@323))))
(let (($generated@@325 ($generated@@275 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@274 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@273 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@92 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@328) $generated@@70)) (= ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@327 $generated@@329)))) ($generated@@185 $generated@@329 $generated@@328))
 :pattern ( ($generated@@92 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@330) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@331) $generated@@70)) (= (type $generated@@332) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@170) ($generated@@0 ($generated@@92 $generated@@330 $generated@@333))) ($generated@@213 $generated@@333 $generated@@331 $generated@@332))
 :pattern ( ($generated@@92 $generated@@330 $generated@@333))
))))
 :pattern ( ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@335) $generated@@70)) (= (type $generated@@336) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@170) ($generated@@0 ($generated@@92 $generated@@334 $generated@@337))) ($generated@@213 $generated@@337 $generated@@335 $generated@@336))
 :pattern ( ($generated@@92 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= ($generated ($generated@@92 ($generated@@249 $generated@@339) $generated@@338)) 0))
 :pattern ( (let (($generated@@339 (type $generated@@338)))
($generated@@92 ($generated@@249 $generated@@339) $generated@@338)))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@258 (type $generated@@343))))
(let (($generated@@345 ($generated@@257 (type $generated@@343))))
(= (type ($generated@@341 $generated@@343)) ($generated@@87 $generated@@345 $generated@@344))))
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@347) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))  (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347)))) (= ($generated@@92 ($generated@@341 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@347))))))
 :pattern ( ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@276 (type $generated@@351))))
(let (($generated@@353 ($generated@@275 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@87 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@355) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355)))) (= ($generated@@92 ($generated@@349 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@355))))))
 :pattern ( ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(let (($generated@@359 ($generated@@257 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@256 $generated@@359 $generated@@358)) (= ($generated@@0 ($generated@@92 ($generated@@309 $generated@@356) $generated@@357)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@356) $generated@@360)) (= $generated@@357 ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@356) $generated@@360))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))
))))))
 :pattern ( ($generated@@92 ($generated@@309 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(let (($generated@@364 ($generated@@275 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@274 $generated@@364 $generated@@363)) (= ($generated@@0 ($generated@@92 ($generated@@320 $generated@@361) $generated@@362)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@361) $generated@@365)) (= $generated@@362 ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@361) $generated@@365))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))
))))))
 :pattern ( ($generated@@92 ($generated@@320 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@70)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (= (type $generated@@369) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@370) $generated@@70)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))) (and ($generated@@213 ($generated@@92 ($generated@@341 $generated@@369) $generated@@373) $generated@@371 $generated@@372) ($generated@@213 $generated@@373 $generated@@370 $generated@@372)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@369) $generated@@373))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))
))))
 :pattern ( ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@70)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))) (and ($generated@@213 ($generated@@92 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@213 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@383) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@382 $generated@@384))) (and ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))) ($generated@@143 $generated@@382 $generated@@384))
 :pattern ( ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@T) ) (! (= (type ($generated@@385 $generated@@386)) ($generated@@87 $generated@@386 $generated@@4))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@276 (type $generated@@387))))
(let (($generated@@389 ($generated@@275 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@274 $generated@@389 $generated@@388)) (= (= $generated@@387 ($generated@@273 $generated@@389 $generated@@388)) (= ($generated@@272 $generated@@387) ($generated@@385 $generated@@389))))))
 :pattern ( ($generated@@272 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@276 (type $generated@@390))))
(let (($generated@@392 ($generated@@275 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@274 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@273 $generated@@392 $generated@@391)) (= ($generated@@320 $generated@@390) ($generated@@385 $generated@@391))))))
 :pattern ( ($generated@@320 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@276 (type $generated@@393))))
(let (($generated@@395 ($generated@@275 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@274 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@273 $generated@@395 $generated@@394)) (= ($generated@@348 $generated@@393) ($generated@@385 $generated@@170))))))
 :pattern ( ($generated@@348 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@258 (type $generated@@396))))
(let (($generated@@398 ($generated@@257 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@256 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@255 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (and (and (= (type $generated@@399) $generated@@170) (= (type $generated@@400) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@340 $generated@@396) ($generated@@233 ($generated@@184 $generated@@399 $generated@@400)))))
 :no-pattern (type $generated@@399)
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@340 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@276 (type $generated@@401))))
(let (($generated@@403 ($generated@@275 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@274 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@273 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@170) (= (type $generated@@405) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@348 $generated@@401) ($generated@@233 ($generated@@184 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@348 $generated@@401))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@76)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@T) ) (!  (=> (and (= (type $generated@@408) $generated@@76) (= (type $generated@@409) $generated@@74)) (and (= ($generated@@406 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@408) (= ($generated@@83 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@409)))
 :pattern ( ($generated@@192 $generated@@410 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@170) ($generated@@185 $generated@@411 $generated@@46)) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@411)) $generated@@411) ($generated@@154 ($generated@@299 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@170) ($generated@@185 $generated@@412 $generated@@47)) (and (= ($generated@@233 ($generated@@299 $generated@@3 $generated@@412)) $generated@@412) ($generated@@154 ($generated@@299 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@44)) (and (= ($generated@@233 ($generated@@299 $generated@@4 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@299 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 21))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@45)) (and (= ($generated@@233 ($generated@@299 $generated@@414 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@299 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@70) (= ($generated@@185 ($generated@@233 $generated@@416) $generated@@417) ($generated@@154 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@185 ($generated@@233 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@90 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@87 $generated@@419 $generated@@2)) (<= 0 ($generated@@248 $generated@@418))))
 :pattern ( ($generated@@248 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@228 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@227 $generated@@421)) (<= 0 ($generated@@226 $generated@@420))))
 :pattern ( ($generated@@226 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@70) (= (type $generated@@425) $generated@@70)) (= ($generated@@422 ($generated@@366 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@366 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@70)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@70) (= (type $generated@@429) $generated@@70)) (= ($generated@@426 ($generated@@366 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@366 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@81 ($generated@@366 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@366 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@70) (= (type $generated@@435) $generated@@70)) (= ($generated@@432 ($generated@@374 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@374 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@70) (= (type $generated@@439) $generated@@70)) (= ($generated@@436 ($generated@@374 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@374 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@81 ($generated@@374 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@374 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@170) (= (type $generated@@443) $generated@@170)) (= ($generated@@219 ($generated@@184 $generated@@442 $generated@@443)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@70)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@70) (= (type $generated@@447) $generated@@70)) (= ($generated@@444 ($generated@@160 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@160 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@70)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@70) (= (type $generated@@451) $generated@@70)) (= ($generated@@448 ($generated@@160 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@160 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@170) (= (type $generated@@453) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@184 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@228 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@227 $generated@@170)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@226 $generated@@462))) ($generated@@213 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@86 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@86 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@70) (= ($generated@@468 ($generated@@199 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@199 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@70) (= ($generated@@472 ($generated@@204 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@204 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@70) (= ($generated@@476 ($generated@@175 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@175 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@70) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@70) (= ($generated@@81 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@299 $generated@@485 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@487) $generated@@70)) (= (type $generated@@488) $generated@@70)) (= ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))) (and ($generated@@185 ($generated@@92 ($generated@@341 $generated@@486) $generated@@489) $generated@@488) ($generated@@185 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@486) $generated@@489))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@491) $generated@@70)) (= (type $generated@@492) $generated@@70)) (= ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))) (and ($generated@@185 ($generated@@92 ($generated@@349 $generated@@490) $generated@@493) $generated@@492) ($generated@@185 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@490) $generated@@493))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@170) (= (type $generated@@497) $generated@@170)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@184 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@184 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@70)) (= (type $generated@@502) $generated@@70)) ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502))) (and (= ($generated@@233 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500)) $generated@@500) ($generated@@154 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500) ($generated@@366 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@170) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) $generated@@70)) ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505))) (and (= ($generated@@233 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503)) $generated@@503) ($generated@@154 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503) ($generated@@374 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= (type $generated@@508) $generated@@170)) ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507))) (and (= ($generated@@233 ($generated@@299 $generated@@161 $generated@@508)) $generated@@508) ($generated@@154 ($generated@@299 $generated@@161 $generated@@508) ($generated@@160 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@92 ($generated@@385 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@92 ($generated@@385 $generated@@510) $generated@@509)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@517 T@T) ($generated@@518 T@T) ) (= ($generated@@1 ($generated@@513 $generated@@517 $generated@@518)) 22)) (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (! (= ($generated@@514 ($generated@@513 $generated@@519 $generated@@520)) $generated@@519)
 :pattern ( ($generated@@513 $generated@@519 $generated@@520))
))) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@515 ($generated@@513 $generated@@521 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@513 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@515 (type $generated@@523))))
(= (type ($generated@@511 $generated@@523 $generated@@524 $generated@@525)) $generated@@526))
 :pattern ( ($generated@@511 $generated@@523 $generated@@524 $generated@@525))
))) (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(let (($generated@@532 (type $generated@@528)))
(= (type ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530)) ($generated@@513 $generated@@532 $generated@@531))))
 :pattern ( ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530))
))) (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@515 (type $generated@@533))))
 (=> (= (type $generated@@536) $generated@@537) (= ($generated@@511 ($generated@@516 $generated@@533 $generated@@534 $generated@@535 $generated@@536) $generated@@534 $generated@@535) $generated@@536)))
 :weight 0
))) (and (and (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (or (= $generated@@540 $generated@@542) (= ($generated@@511 ($generated@@516 $generated@@539 $generated@@540 $generated@@541 $generated@@538) $generated@@542 $generated@@543) ($generated@@511 $generated@@539 $generated@@542 $generated@@543)))
 :weight 0
)) (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (or (= $generated@@547 $generated@@549) (= ($generated@@511 ($generated@@516 $generated@@545 $generated@@546 $generated@@547 $generated@@544) $generated@@548 $generated@@549) ($generated@@511 $generated@@545 $generated@@548 $generated@@549)))
 :weight 0
))) (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (or true (= ($generated@@511 ($generated@@516 $generated@@551 $generated@@552 $generated@@553 $generated@@550) $generated@@554 $generated@@555) ($generated@@511 $generated@@551 $generated@@554 $generated@@555)))
 :weight 0
)))) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (= (type ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559)) ($generated@@513 $generated@@88 $generated@@4))
 :pattern ( ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@73 (type $generated@@565))))
 (=> (and (and (and (and (and (= (type $generated@@560) $generated@@88) (= (type $generated@@561) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@562) ($generated@@72 $generated@@4))) (= (type $generated@@563) $generated@@88)) (= (type $generated@@564) $generated@@88)) (= (type $generated@@565) ($generated@@72 $generated@@566))) (= ($generated@@0 ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))  (=> (and (not (= $generated@@564 $generated@@560)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@561 $generated@@564) $generated@@562))) (= $generated@@564 $generated@@563)))))
 :pattern ( ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@161) (= ($generated@@494 ($generated@@233 $generated@@571)) ($generated@@495 $generated@@571)))
 :pattern ( ($generated@@494 ($generated@@233 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@170) ($generated@@185 $generated@@572 ($generated@@86 0))) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@170) (= (type $generated@@574) $generated@@70)) ($generated@@185 $generated@@573 ($generated@@199 $generated@@574))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573) ($generated@@199 $generated@@574))))
 :pattern ( ($generated@@185 $generated@@573 ($generated@@199 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@185 $generated@@575 ($generated@@204 $generated@@576))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@204 $generated@@576))))
 :pattern ( ($generated@@185 $generated@@575 ($generated@@204 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@185 $generated@@577 ($generated@@175 $generated@@578))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577) ($generated@@175 $generated@@578))))
 :pattern ( ($generated@@185 $generated@@577 ($generated@@175 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@185 $generated@@579 ($generated@@456 $generated@@580))) (and (= ($generated@@233 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579) ($generated@@456 $generated@@580))))
 :pattern ( ($generated@@185 $generated@@579 ($generated@@456 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
 (=> (and (and (and (= (type $generated@@581) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@582) $generated@@88)) (= (type $generated@@583) ($generated@@72 $generated@@585))) ($generated@@152 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))) ($generated@@143 $generated@@581 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@567 $generated@@181) $generated@@68))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@586 ($generated@@175 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@586 $generated@@589)))) ($generated@@213 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@92 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@85 $generated@@586 ($generated@@175 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@161) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@592) (and ($generated@@159 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@70) ($generated@@85 $generated@@590 ($generated@@160 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@160 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@213 ($generated@@168 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@213 ($generated@@168 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@161) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@596) (and ($generated@@159 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@70) ($generated@@85 $generated@@594 ($generated@@160 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@85 $generated@@594 ($generated@@160 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@213 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@213 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@170) (= (type $generated@@599) $generated@@170)) (= ($generated@@184 ($generated@@209 $generated@@598) ($generated@@209 $generated@@599)) ($generated@@209 ($generated@@184 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@184 ($generated@@209 $generated@@598) ($generated@@209 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@233 ($generated@@209 $generated@@600)) ($generated@@209 ($generated@@233 $generated@@600)))
 :pattern ( ($generated@@233 ($generated@@209 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@228 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@227 $generated@@602)) (= ($generated@@226 $generated@@601) 0)) (= $generated@@601 ($generated@@225 $generated@@602))))
 :pattern ( ($generated@@226 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@87 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@248 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@248 $generated@@603) ($generated ($generated@@92 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@248 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@608) $generated@@2)) ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@610) $generated@@3)) ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@612) $generated@@4)) ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@614) $generated@@414)) ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@616) $generated@@170)) ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@227 $generated@@170)) (= (type $generated@@618) $generated@@70)) (= ($generated@@154 $generated@@617 ($generated@@456 $generated@@618)) (forall (($generated@@619 Int) ) (!  (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@226 $generated@@617))) ($generated@@185 ($generated@@457 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@457 $generated@@617 $generated@@619))
))))
 :pattern ( ($generated@@154 $generated@@617 ($generated@@456 $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 Int) ) (!  (=> (= (type $generated@@621) ($generated@@227 $generated@@170)) (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@226 $generated@@621))) (< ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@621 $generated@@622))) ($generated@@620 $generated@@621))))
 :pattern ( ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@621 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@624) $generated@@70)) (= (type $generated@@625) $generated@@70)) ($generated@@154 $generated@@623 ($generated@@366 $generated@@624 $generated@@625))) (and (and ($generated@@154 ($generated@@254 $generated@@623) ($generated@@199 $generated@@624)) ($generated@@154 ($generated@@309 $generated@@623) ($generated@@199 $generated@@625))) ($generated@@154 ($generated@@340 $generated@@623) ($generated@@199 ($generated@@160 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@154 $generated@@623 ($generated@@366 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@154 $generated@@626 ($generated@@374 $generated@@627 $generated@@628))) (and (and ($generated@@154 ($generated@@272 $generated@@626) ($generated@@204 $generated@@627)) ($generated@@154 ($generated@@320 $generated@@626) ($generated@@204 $generated@@628))) ($generated@@154 ($generated@@348 $generated@@626) ($generated@@204 ($generated@@160 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@154 $generated@@626 ($generated@@374 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@2) ($generated@@154 $generated@@629 $generated@@46))
 :pattern ( ($generated@@154 $generated@@629 $generated@@46))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@3) ($generated@@154 $generated@@630 $generated@@47))
 :pattern ( ($generated@@154 $generated@@630 $generated@@47))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@4) ($generated@@154 $generated@@631 $generated@@44))
 :pattern ( ($generated@@154 $generated@@631 $generated@@44))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@414) ($generated@@154 $generated@@632 $generated@@45))
 :pattern ( ($generated@@154 $generated@@632 $generated@@45))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@170) ($generated@@154 $generated@@633 $generated@@48))
 :pattern ( ($generated@@154 $generated@@633 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 (T@U) Bool)
(declare-fun $generated@@641 () Int)
(assert  (and (and (and (= (type $generated@@634) ($generated@@513 $generated@@88 $generated@@4)) (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@636) $generated@@88)) (= (type $generated@@639) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@642  (=> (and (= $generated@@634 ($generated@@512 $generated@@148 $generated@@635 $generated@@60 $generated@@636)) ($generated@@0 ($generated@@511 $generated@@634 $generated@@636 $generated@@151))) (=> (and (and (= $generated@@637 (+ ($generated ($generated@@94 ($generated@@92 $generated@@635 $generated@@636) $generated@@151)) $generated@@638)) (= $generated@@639 ($generated@@93 $generated@@635 $generated@@636 ($generated@@95 ($generated@@92 $generated@@635 $generated@@636) $generated@@151 ($generated@@8 $generated@@637))))) (and ($generated@@152 $generated@@639) (= (ControlFlow 0 2) (- 0 1)))) (<= ($generated ($generated@@94 ($generated@@92 $generated@@639 $generated@@636) $generated@@151)) (+ ($generated ($generated@@94 ($generated@@92 $generated@@635 $generated@@636) $generated@@151)) $generated@@638))))))
(let (($generated@@643  (=> (and ($generated@@152 $generated@@635) ($generated@@640 $generated@@635)) (=> (and (and (not (= $generated@@636 $generated@@148)) (and ($generated@@154 $generated@@636 $generated@@181) ($generated@@85 $generated@@636 $generated@@181 $generated@@635))) (and (= 0 $generated@@641) (= (ControlFlow 0 3) 2))) $generated@@642))))
$generated@@643)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@225 (T@T) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@299 (T@T T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@T) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U T@U T@U) T@U)
(declare-fun $generated@@512 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@513 (T@T T@T) T@T)
(declare-fun $generated@@514 (T@T) T@T)
(declare-fun $generated@@515 (T@T) T@T)
(declare-fun $generated@@516 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@620 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@70) (= (type $generated@@215) $generated@@70)) (= (type $generated@@216) $generated@@170)) (= (type $generated@@217) $generated@@170)) (= (type $generated@@218) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@218)) (= ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218)  (and ($generated@@213 $generated@@216 $generated@@214 $generated@@218) ($generated@@213 $generated@@217 $generated@@215 $generated@@218))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@219 $generated@@220)) $generated@@75)
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@161) (= ($generated@@159 $generated@@221) (= ($generated@@219 $generated@@221) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@161) ($generated@@159 $generated@@222)) (exists (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (and (= (type $generated@@223) $generated@@170) (= (type $generated@@224) $generated@@170)) (= $generated@@222 ($generated@@184 $generated@@223 $generated@@224)))
 :no-pattern (type $generated@@223)
 :no-pattern (type $generated@@224)
 :no-pattern ($generated $generated@@223)
 :no-pattern ($generated@@0 $generated@@223)
 :no-pattern ($generated $generated@@224)
 :no-pattern ($generated@@0 $generated@@224)
)))
 :pattern ( ($generated@@159 $generated@@222))
)))
(assert  (and (and (forall (($generated@@229 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@229)) 18)) (forall (($generated@@230 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
))) (forall (($generated@@231 T@T) ) (! (= (type ($generated@@225 $generated@@231)) ($generated@@227 $generated@@231))
 :pattern ( ($generated@@225 $generated@@231))
))))
(assert (forall (($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@232)) 0)
 :pattern ( ($generated@@225 $generated@@232))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@170)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@70) (= (type $generated@@237) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237) ($generated@@85 $generated@@235 $generated@@236 $generated@@237)))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@240) $generated@@170)) (= (type $generated@@241) $generated@@70)) ($generated@@143 $generated@@238 $generated@@239)) ($generated@@213 $generated@@240 $generated@@241 $generated@@238)) ($generated@@213 $generated@@240 $generated@@241 $generated@@239))
 :pattern ( ($generated@@143 $generated@@238 $generated@@239) ($generated@@213 $generated@@240 $generated@@241 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@242) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@245) $generated@@70)) ($generated@@143 $generated@@242 $generated@@243)) ($generated@@85 $generated@@244 $generated@@245 $generated@@242)) ($generated@@85 $generated@@244 $generated@@245 $generated@@243))
 :pattern ( ($generated@@143 $generated@@242 $generated@@243) ($generated@@85 $generated@@244 $generated@@245 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@247) $generated@@88)) (=> (and (and ($generated@@152 $generated@@246) (and (not (= $generated@@247 $generated@@148)) (= ($generated@@153 $generated@@247) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151) $generated@@46 $generated@@246)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151))
)))
(assert (forall (($generated@@250 T@T) ) (! (= (type ($generated@@249 $generated@@250)) ($generated@@87 $generated@@250 $generated@@2))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@90 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@87 $generated@@252 $generated@@2)) (and (= (= ($generated@@248 $generated@@251) 0) (= $generated@@251 ($generated@@249 $generated@@252))) (=> (not (= ($generated@@248 $generated@@251) 0)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) (< 0 ($generated ($generated@@92 $generated@@251 $generated@@253))))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 19)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@87 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 20)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@87 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@292) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@290 $generated@@291 $generated@@292)) (and ($generated@@143 $generated@@291 $generated@@292) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@73 (type $generated@@294))))
 (=> (and (and (= (type $generated@@293) $generated@@88) (= (type $generated@@294) ($generated@@72 $generated@@295))) (not ($generated@@196 $generated@@294))) (= ($generated@@94 ($generated@@92 $generated@@291 $generated@@293) $generated@@294) ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))
))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@90 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@87 $generated@@297 $generated@@2)) (= ($generated@@176 $generated@@296) (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@297) (and (<= 0 ($generated ($generated@@92 $generated@@296 $generated@@298))) (<= ($generated ($generated@@92 $generated@@296 $generated@@298)) ($generated@@248 $generated@@296))))
 :pattern ( ($generated@@92 $generated@@296 $generated@@298))
)))))
 :pattern ( ($generated@@176 $generated@@296))
)))
(assert (forall (($generated@@300 T@T) ($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@170) ($generated@@185 $generated@@302 $generated@@147)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@302)) $generated@@302) ($generated@@154 ($generated@@299 $generated@@88 $generated@@302) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@302 $generated@@147))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@170) ($generated@@185 $generated@@303 $generated@@181)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@303)) $generated@@303) ($generated@@154 ($generated@@299 $generated@@88 $generated@@303) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@303 $generated@@181))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@88) (= ($generated@@154 $generated@@304 $generated@@181)  (and ($generated@@154 $generated@@304 $generated@@147) (not (= $generated@@304 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@304 $generated@@181))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@258 (type $generated@@305))))
(let (($generated@@307 ($generated@@257 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@256 $generated@@307 $generated@@306)) (or (= $generated@@305 ($generated@@255 $generated@@307 $generated@@306)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@305) $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@254 $generated@@305))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@258 (type $generated@@310))))
(= (type ($generated@@309 $generated@@310)) ($generated@@87 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@258 (type $generated@@312))))
(let (($generated@@314 ($generated@@257 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@256 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@255 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@313) ($generated@@0 ($generated@@92 ($generated@@309 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(let (($generated@@318 ($generated@@275 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@274 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@273 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@272 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@276 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@276 (type $generated@@323))))
(let (($generated@@325 ($generated@@275 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@274 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@273 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@92 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@328) $generated@@70)) (= ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@327 $generated@@329)))) ($generated@@185 $generated@@329 $generated@@328))
 :pattern ( ($generated@@92 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@330) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@331) $generated@@70)) (= (type $generated@@332) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@170) ($generated@@0 ($generated@@92 $generated@@330 $generated@@333))) ($generated@@213 $generated@@333 $generated@@331 $generated@@332))
 :pattern ( ($generated@@92 $generated@@330 $generated@@333))
))))
 :pattern ( ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@335) $generated@@70)) (= (type $generated@@336) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@170) ($generated@@0 ($generated@@92 $generated@@334 $generated@@337))) ($generated@@213 $generated@@337 $generated@@335 $generated@@336))
 :pattern ( ($generated@@92 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= ($generated ($generated@@92 ($generated@@249 $generated@@339) $generated@@338)) 0))
 :pattern ( (let (($generated@@339 (type $generated@@338)))
($generated@@92 ($generated@@249 $generated@@339) $generated@@338)))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@258 (type $generated@@343))))
(let (($generated@@345 ($generated@@257 (type $generated@@343))))
(= (type ($generated@@341 $generated@@343)) ($generated@@87 $generated@@345 $generated@@344))))
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@347) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))  (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347)))) (= ($generated@@92 ($generated@@341 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@347))))))
 :pattern ( ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@276 (type $generated@@351))))
(let (($generated@@353 ($generated@@275 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@87 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@355) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355)))) (= ($generated@@92 ($generated@@349 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@355))))))
 :pattern ( ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(let (($generated@@359 ($generated@@257 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@256 $generated@@359 $generated@@358)) (= ($generated@@0 ($generated@@92 ($generated@@309 $generated@@356) $generated@@357)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@356) $generated@@360)) (= $generated@@357 ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@356) $generated@@360))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))
))))))
 :pattern ( ($generated@@92 ($generated@@309 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(let (($generated@@364 ($generated@@275 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@274 $generated@@364 $generated@@363)) (= ($generated@@0 ($generated@@92 ($generated@@320 $generated@@361) $generated@@362)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@361) $generated@@365)) (= $generated@@362 ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@361) $generated@@365))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))
))))))
 :pattern ( ($generated@@92 ($generated@@320 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@70)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (= (type $generated@@369) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@370) $generated@@70)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))) (and ($generated@@213 ($generated@@92 ($generated@@341 $generated@@369) $generated@@373) $generated@@371 $generated@@372) ($generated@@213 $generated@@373 $generated@@370 $generated@@372)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@369) $generated@@373))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))
))))
 :pattern ( ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@70)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))) (and ($generated@@213 ($generated@@92 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@213 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@383) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@382 $generated@@384))) (and ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))) ($generated@@143 $generated@@382 $generated@@384))
 :pattern ( ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@T) ) (! (= (type ($generated@@385 $generated@@386)) ($generated@@87 $generated@@386 $generated@@4))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@276 (type $generated@@387))))
(let (($generated@@389 ($generated@@275 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@274 $generated@@389 $generated@@388)) (= (= $generated@@387 ($generated@@273 $generated@@389 $generated@@388)) (= ($generated@@272 $generated@@387) ($generated@@385 $generated@@389))))))
 :pattern ( ($generated@@272 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@276 (type $generated@@390))))
(let (($generated@@392 ($generated@@275 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@274 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@273 $generated@@392 $generated@@391)) (= ($generated@@320 $generated@@390) ($generated@@385 $generated@@391))))))
 :pattern ( ($generated@@320 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@276 (type $generated@@393))))
(let (($generated@@395 ($generated@@275 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@274 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@273 $generated@@395 $generated@@394)) (= ($generated@@348 $generated@@393) ($generated@@385 $generated@@170))))))
 :pattern ( ($generated@@348 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@258 (type $generated@@396))))
(let (($generated@@398 ($generated@@257 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@256 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@255 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (and (and (= (type $generated@@399) $generated@@170) (= (type $generated@@400) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@340 $generated@@396) ($generated@@233 ($generated@@184 $generated@@399 $generated@@400)))))
 :no-pattern (type $generated@@399)
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@340 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@276 (type $generated@@401))))
(let (($generated@@403 ($generated@@275 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@274 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@273 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@170) (= (type $generated@@405) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@348 $generated@@401) ($generated@@233 ($generated@@184 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@348 $generated@@401))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@76)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@T) ) (!  (=> (and (= (type $generated@@408) $generated@@76) (= (type $generated@@409) $generated@@74)) (and (= ($generated@@406 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@408) (= ($generated@@83 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@409)))
 :pattern ( ($generated@@192 $generated@@410 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@170) ($generated@@185 $generated@@411 $generated@@46)) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@411)) $generated@@411) ($generated@@154 ($generated@@299 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@170) ($generated@@185 $generated@@412 $generated@@47)) (and (= ($generated@@233 ($generated@@299 $generated@@3 $generated@@412)) $generated@@412) ($generated@@154 ($generated@@299 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@44)) (and (= ($generated@@233 ($generated@@299 $generated@@4 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@299 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 21))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@45)) (and (= ($generated@@233 ($generated@@299 $generated@@414 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@299 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@70) (= ($generated@@185 ($generated@@233 $generated@@416) $generated@@417) ($generated@@154 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@185 ($generated@@233 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@90 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@87 $generated@@419 $generated@@2)) (<= 0 ($generated@@248 $generated@@418))))
 :pattern ( ($generated@@248 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@228 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@227 $generated@@421)) (<= 0 ($generated@@226 $generated@@420))))
 :pattern ( ($generated@@226 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@70) (= (type $generated@@425) $generated@@70)) (= ($generated@@422 ($generated@@366 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@366 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@70)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@70) (= (type $generated@@429) $generated@@70)) (= ($generated@@426 ($generated@@366 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@366 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@81 ($generated@@366 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@366 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@70) (= (type $generated@@435) $generated@@70)) (= ($generated@@432 ($generated@@374 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@374 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@70) (= (type $generated@@439) $generated@@70)) (= ($generated@@436 ($generated@@374 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@374 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@81 ($generated@@374 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@374 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@170) (= (type $generated@@443) $generated@@170)) (= ($generated@@219 ($generated@@184 $generated@@442 $generated@@443)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@70)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@70) (= (type $generated@@447) $generated@@70)) (= ($generated@@444 ($generated@@160 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@160 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@70)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@70) (= (type $generated@@451) $generated@@70)) (= ($generated@@448 ($generated@@160 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@160 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@170) (= (type $generated@@453) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@184 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@228 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@227 $generated@@170)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@226 $generated@@462))) ($generated@@213 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@86 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@86 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@70) (= ($generated@@468 ($generated@@199 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@199 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@70) (= ($generated@@472 ($generated@@204 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@204 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@70) (= ($generated@@476 ($generated@@175 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@175 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@70) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@70) (= ($generated@@81 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@299 $generated@@485 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@487) $generated@@70)) (= (type $generated@@488) $generated@@70)) (= ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))) (and ($generated@@185 ($generated@@92 ($generated@@341 $generated@@486) $generated@@489) $generated@@488) ($generated@@185 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@486) $generated@@489))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@491) $generated@@70)) (= (type $generated@@492) $generated@@70)) (= ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))) (and ($generated@@185 ($generated@@92 ($generated@@349 $generated@@490) $generated@@493) $generated@@492) ($generated@@185 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@490) $generated@@493))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@170) (= (type $generated@@497) $generated@@170)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@184 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@184 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@70)) (= (type $generated@@502) $generated@@70)) ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502))) (and (= ($generated@@233 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500)) $generated@@500) ($generated@@154 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500) ($generated@@366 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@170) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) $generated@@70)) ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505))) (and (= ($generated@@233 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503)) $generated@@503) ($generated@@154 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503) ($generated@@374 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= (type $generated@@508) $generated@@170)) ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507))) (and (= ($generated@@233 ($generated@@299 $generated@@161 $generated@@508)) $generated@@508) ($generated@@154 ($generated@@299 $generated@@161 $generated@@508) ($generated@@160 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@92 ($generated@@385 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@92 ($generated@@385 $generated@@510) $generated@@509)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@517 T@T) ($generated@@518 T@T) ) (= ($generated@@1 ($generated@@513 $generated@@517 $generated@@518)) 22)) (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (! (= ($generated@@514 ($generated@@513 $generated@@519 $generated@@520)) $generated@@519)
 :pattern ( ($generated@@513 $generated@@519 $generated@@520))
))) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@515 ($generated@@513 $generated@@521 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@513 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@515 (type $generated@@523))))
(= (type ($generated@@511 $generated@@523 $generated@@524 $generated@@525)) $generated@@526))
 :pattern ( ($generated@@511 $generated@@523 $generated@@524 $generated@@525))
))) (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(let (($generated@@532 (type $generated@@528)))
(= (type ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530)) ($generated@@513 $generated@@532 $generated@@531))))
 :pattern ( ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530))
))) (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@515 (type $generated@@533))))
 (=> (= (type $generated@@536) $generated@@537) (= ($generated@@511 ($generated@@516 $generated@@533 $generated@@534 $generated@@535 $generated@@536) $generated@@534 $generated@@535) $generated@@536)))
 :weight 0
))) (and (and (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (or (= $generated@@540 $generated@@542) (= ($generated@@511 ($generated@@516 $generated@@539 $generated@@540 $generated@@541 $generated@@538) $generated@@542 $generated@@543) ($generated@@511 $generated@@539 $generated@@542 $generated@@543)))
 :weight 0
)) (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (or (= $generated@@547 $generated@@549) (= ($generated@@511 ($generated@@516 $generated@@545 $generated@@546 $generated@@547 $generated@@544) $generated@@548 $generated@@549) ($generated@@511 $generated@@545 $generated@@548 $generated@@549)))
 :weight 0
))) (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (or true (= ($generated@@511 ($generated@@516 $generated@@551 $generated@@552 $generated@@553 $generated@@550) $generated@@554 $generated@@555) ($generated@@511 $generated@@551 $generated@@554 $generated@@555)))
 :weight 0
)))) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (= (type ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559)) ($generated@@513 $generated@@88 $generated@@4))
 :pattern ( ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@73 (type $generated@@565))))
 (=> (and (and (and (and (and (= (type $generated@@560) $generated@@88) (= (type $generated@@561) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@562) ($generated@@72 $generated@@4))) (= (type $generated@@563) $generated@@88)) (= (type $generated@@564) $generated@@88)) (= (type $generated@@565) ($generated@@72 $generated@@566))) (= ($generated@@0 ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))  (=> (and (not (= $generated@@564 $generated@@560)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@561 $generated@@564) $generated@@562))) (= $generated@@564 $generated@@563)))))
 :pattern ( ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@161) (= ($generated@@494 ($generated@@233 $generated@@571)) ($generated@@495 $generated@@571)))
 :pattern ( ($generated@@494 ($generated@@233 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@170) ($generated@@185 $generated@@572 ($generated@@86 0))) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@170) (= (type $generated@@574) $generated@@70)) ($generated@@185 $generated@@573 ($generated@@199 $generated@@574))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573) ($generated@@199 $generated@@574))))
 :pattern ( ($generated@@185 $generated@@573 ($generated@@199 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@185 $generated@@575 ($generated@@204 $generated@@576))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@204 $generated@@576))))
 :pattern ( ($generated@@185 $generated@@575 ($generated@@204 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@185 $generated@@577 ($generated@@175 $generated@@578))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577) ($generated@@175 $generated@@578))))
 :pattern ( ($generated@@185 $generated@@577 ($generated@@175 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@185 $generated@@579 ($generated@@456 $generated@@580))) (and (= ($generated@@233 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579) ($generated@@456 $generated@@580))))
 :pattern ( ($generated@@185 $generated@@579 ($generated@@456 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
 (=> (and (and (and (= (type $generated@@581) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@582) $generated@@88)) (= (type $generated@@583) ($generated@@72 $generated@@585))) ($generated@@152 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))) ($generated@@143 $generated@@581 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@567 $generated@@181) $generated@@68))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@586 ($generated@@175 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@586 $generated@@589)))) ($generated@@213 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@92 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@85 $generated@@586 ($generated@@175 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@161) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@592) (and ($generated@@159 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@70) ($generated@@85 $generated@@590 ($generated@@160 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@160 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@213 ($generated@@168 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@213 ($generated@@168 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@161) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@596) (and ($generated@@159 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@70) ($generated@@85 $generated@@594 ($generated@@160 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@85 $generated@@594 ($generated@@160 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@213 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@213 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@170) (= (type $generated@@599) $generated@@170)) (= ($generated@@184 ($generated@@209 $generated@@598) ($generated@@209 $generated@@599)) ($generated@@209 ($generated@@184 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@184 ($generated@@209 $generated@@598) ($generated@@209 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@233 ($generated@@209 $generated@@600)) ($generated@@209 ($generated@@233 $generated@@600)))
 :pattern ( ($generated@@233 ($generated@@209 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@228 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@227 $generated@@602)) (= ($generated@@226 $generated@@601) 0)) (= $generated@@601 ($generated@@225 $generated@@602))))
 :pattern ( ($generated@@226 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@87 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@248 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@248 $generated@@603) ($generated ($generated@@92 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@248 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@608) $generated@@2)) ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@610) $generated@@3)) ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@612) $generated@@4)) ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@614) $generated@@414)) ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@616) $generated@@170)) ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@227 $generated@@170)) (= (type $generated@@618) $generated@@70)) (= ($generated@@154 $generated@@617 ($generated@@456 $generated@@618)) (forall (($generated@@619 Int) ) (!  (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@226 $generated@@617))) ($generated@@185 ($generated@@457 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@457 $generated@@617 $generated@@619))
))))
 :pattern ( ($generated@@154 $generated@@617 ($generated@@456 $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 Int) ) (!  (=> (= (type $generated@@621) ($generated@@227 $generated@@170)) (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@226 $generated@@621))) (< ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@621 $generated@@622))) ($generated@@620 $generated@@621))))
 :pattern ( ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@621 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@624) $generated@@70)) (= (type $generated@@625) $generated@@70)) ($generated@@154 $generated@@623 ($generated@@366 $generated@@624 $generated@@625))) (and (and ($generated@@154 ($generated@@254 $generated@@623) ($generated@@199 $generated@@624)) ($generated@@154 ($generated@@309 $generated@@623) ($generated@@199 $generated@@625))) ($generated@@154 ($generated@@340 $generated@@623) ($generated@@199 ($generated@@160 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@154 $generated@@623 ($generated@@366 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@154 $generated@@626 ($generated@@374 $generated@@627 $generated@@628))) (and (and ($generated@@154 ($generated@@272 $generated@@626) ($generated@@204 $generated@@627)) ($generated@@154 ($generated@@320 $generated@@626) ($generated@@204 $generated@@628))) ($generated@@154 ($generated@@348 $generated@@626) ($generated@@204 ($generated@@160 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@154 $generated@@626 ($generated@@374 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@2) ($generated@@154 $generated@@629 $generated@@46))
 :pattern ( ($generated@@154 $generated@@629 $generated@@46))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@3) ($generated@@154 $generated@@630 $generated@@47))
 :pattern ( ($generated@@154 $generated@@630 $generated@@47))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@4) ($generated@@154 $generated@@631 $generated@@44))
 :pattern ( ($generated@@154 $generated@@631 $generated@@44))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@414) ($generated@@154 $generated@@632 $generated@@45))
 :pattern ( ($generated@@154 $generated@@632 $generated@@45))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@170) ($generated@@154 $generated@@633 $generated@@48))
 :pattern ( ($generated@@154 $generated@@633 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 (T@U) Bool)
(declare-fun $generated@@641 () Int)
(assert  (and (and (and (= (type $generated@@634) ($generated@@513 $generated@@88 $generated@@4)) (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@636) $generated@@88)) (= (type $generated@@639) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@642  (=> (= $generated@@634 ($generated@@512 $generated@@148 $generated@@635 $generated@@60 $generated@@636)) (=> (and (and ($generated@@0 ($generated@@511 $generated@@634 $generated@@636 $generated@@151)) (= $generated@@637 (+ ($generated ($generated@@94 ($generated@@92 $generated@@635 $generated@@636) $generated@@151)) $generated@@638))) (and (= $generated@@639 ($generated@@93 $generated@@635 $generated@@636 ($generated@@95 ($generated@@92 $generated@@635 $generated@@636) $generated@@151 ($generated@@8 $generated@@637)))) ($generated@@152 $generated@@639))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> false (<= ($generated ($generated@@94 ($generated@@92 $generated@@639 $generated@@636) $generated@@151)) (+ ($generated ($generated@@94 ($generated@@92 $generated@@635 $generated@@636) $generated@@151)) $generated@@638)))) (=> (=> false (<= ($generated ($generated@@94 ($generated@@92 $generated@@639 $generated@@636) $generated@@151)) (+ ($generated ($generated@@94 ($generated@@92 $generated@@635 $generated@@636) $generated@@151)) $generated@@638))) (=> (= (ControlFlow 0 2) (- 0 1)) (<= (+ ($generated ($generated@@94 ($generated@@92 $generated@@635 $generated@@636) $generated@@151)) $generated@@638) ($generated ($generated@@94 ($generated@@92 $generated@@639 $generated@@636) $generated@@151))))))))))
(let (($generated@@643  (=> (and ($generated@@152 $generated@@635) ($generated@@640 $generated@@635)) (=> (and (and (not (= $generated@@636 $generated@@148)) (and ($generated@@154 $generated@@636 $generated@@181) ($generated@@85 $generated@@636 $generated@@181 $generated@@635))) (and (= 0 $generated@@641) (= (ControlFlow 0 4) 2))) $generated@@642))))
$generated@@643)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (Int) Int)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@215 (T@U T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@227 (T@T) T@U)
(declare-fun $generated@@228 (T@U) Int)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@251 (T@T) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@257 (T@T T@T) T@U)
(declare-fun $generated@@258 (T@T T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@368 (T@U T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@T) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@416 () T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@459 (T@U Int) T@U)
(declare-fun $generated@@468 (T@U) Int)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@513 (T@U T@U T@U) T@U)
(declare-fun $generated@@514 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@515 (T@T T@T) T@T)
(declare-fun $generated@@516 (T@T) T@T)
(declare-fun $generated@@517 (T@T) T@T)
(declare-fun $generated@@518 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@209 $generated@@210) $generated@@210)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@211 $generated@@214) $generated@@214)
 :pattern ( ($generated@@211 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@70) (= (type $generated@@217) $generated@@70)) (= (type $generated@@218) $generated@@170)) (= (type $generated@@219) $generated@@170)) (= (type $generated@@220) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@220)) (= ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220)  (and ($generated@@215 $generated@@218 $generated@@216 $generated@@220) ($generated@@215 $generated@@219 $generated@@217 $generated@@220))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@75)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@161) (= ($generated@@159 $generated@@223) (= ($generated@@221 $generated@@223) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@161) ($generated@@159 $generated@@224)) (exists (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (and (= (type $generated@@225) $generated@@170) (= (type $generated@@226) $generated@@170)) (= $generated@@224 ($generated@@184 $generated@@225 $generated@@226)))
 :no-pattern (type $generated@@225)
 :no-pattern (type $generated@@226)
 :no-pattern ($generated $generated@@225)
 :no-pattern ($generated@@0 $generated@@225)
 :no-pattern ($generated $generated@@226)
 :no-pattern ($generated@@0 $generated@@226)
)))
 :pattern ( ($generated@@159 $generated@@224))
)))
(assert  (and (and (forall (($generated@@231 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@231)) 18)) (forall (($generated@@232 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@229 $generated@@232))
))) (forall (($generated@@233 T@T) ) (! (= (type ($generated@@227 $generated@@233)) ($generated@@229 $generated@@233))
 :pattern ( ($generated@@227 $generated@@233))
))))
(assert (forall (($generated@@234 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@234)) 0)
 :pattern ( ($generated@@227 $generated@@234))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@170)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@70) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239) ($generated@@85 $generated@@237 $generated@@238 $generated@@239)))
 :pattern ( ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@240) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@241) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@242) $generated@@170)) (= (type $generated@@243) $generated@@70)) ($generated@@143 $generated@@240 $generated@@241)) ($generated@@215 $generated@@242 $generated@@243 $generated@@240)) ($generated@@215 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@143 $generated@@240 $generated@@241) ($generated@@215 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@247) $generated@@70)) ($generated@@143 $generated@@244 $generated@@245)) ($generated@@85 $generated@@246 $generated@@247 $generated@@244)) ($generated@@85 $generated@@246 $generated@@247 $generated@@245))
 :pattern ( ($generated@@143 $generated@@244 $generated@@245) ($generated@@85 $generated@@246 $generated@@247 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@249) $generated@@88)) (=> (and (and ($generated@@152 $generated@@248) (and (not (= $generated@@249 $generated@@148)) (= ($generated@@153 $generated@@249) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151) $generated@@46 $generated@@248)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151))
)))
(assert (forall (($generated@@252 T@T) ) (! (= (type ($generated@@251 $generated@@252)) ($generated@@87 $generated@@252 $generated@@2))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@90 (type $generated@@253))))
 (=> (= (type $generated@@253) ($generated@@87 $generated@@254 $generated@@2)) (and (= (= ($generated@@250 $generated@@253) 0) (= $generated@@253 ($generated@@251 $generated@@254))) (=> (not (= ($generated@@250 $generated@@253) 0)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@254) (< 0 ($generated ($generated@@92 $generated@@253 $generated@@255))))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))))
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (= ($generated@@1 ($generated@@258 $generated@@261 $generated@@262)) 19)) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@263 $generated@@264)) $generated@@263)
 :pattern ( ($generated@@258 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@258 $generated@@265 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@258 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@259 (type $generated@@267))))
(= (type ($generated@@256 $generated@@267)) ($generated@@87 $generated@@268 $generated@@4)))
 :pattern ( ($generated@@256 $generated@@267))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= (type ($generated@@257 $generated@@269 $generated@@270)) ($generated@@258 $generated@@269 $generated@@270))
 :pattern ( ($generated@@257 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@T) ) (! (let (($generated@@273 (type $generated@@271)))
 (not ($generated@@0 ($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271))))
 :pattern ( (let (($generated@@273 (type $generated@@271)))
($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271)))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 20)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@87 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@292 $generated@@293 $generated@@294)) (and ($generated@@143 $generated@@293 $generated@@294) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@73 (type $generated@@296))))
 (=> (and (and (= (type $generated@@295) $generated@@88) (= (type $generated@@296) ($generated@@72 $generated@@297))) (not ($generated@@196 $generated@@296))) (= ($generated@@94 ($generated@@92 $generated@@293 $generated@@295) $generated@@296) ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))
))))
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@90 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@87 $generated@@299 $generated@@2)) (= ($generated@@176 $generated@@298) (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@299) (and (<= 0 ($generated ($generated@@92 $generated@@298 $generated@@300))) (<= ($generated ($generated@@92 $generated@@298 $generated@@300)) ($generated@@250 $generated@@298))))
 :pattern ( ($generated@@92 $generated@@298 $generated@@300))
)))))
 :pattern ( ($generated@@176 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@170) ($generated@@185 $generated@@304 $generated@@147)) (and (= ($generated@@235 ($generated@@301 $generated@@88 $generated@@304)) $generated@@304) ($generated@@154 ($generated@@301 $generated@@88 $generated@@304) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@304 $generated@@147))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@170) ($generated@@185 $generated@@305 $generated@@181)) (and (= ($generated@@235 ($generated@@301 $generated@@88 $generated@@305)) $generated@@305) ($generated@@154 ($generated@@301 $generated@@88 $generated@@305) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@305 $generated@@181))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@88) (= ($generated@@154 $generated@@306 $generated@@181)  (and ($generated@@154 $generated@@306 $generated@@147) (not (= $generated@@306 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@306 $generated@@181))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@260 (type $generated@@307))))
(let (($generated@@309 ($generated@@259 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@258 $generated@@309 $generated@@308)) (or (= $generated@@307 ($generated@@257 $generated@@309 $generated@@308)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@307) $generated@@310)))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@256 $generated@@307))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@260 (type $generated@@312))))
(= (type ($generated@@311 $generated@@312)) ($generated@@87 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@260 (type $generated@@314))))
(let (($generated@@316 ($generated@@259 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@258 $generated@@316 $generated@@315)) (or (= $generated@@314 ($generated@@257 $generated@@316 $generated@@315)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@315) ($generated@@0 ($generated@@92 ($generated@@311 $generated@@314) $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@278 (type $generated@@318))))
(let (($generated@@320 ($generated@@277 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@276 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@275 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@274 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@278 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@87 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@278 (type $generated@@325))))
(let (($generated@@327 ($generated@@277 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@276 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@275 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@92 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@330) $generated@@70)) (= ($generated@@154 $generated@@329 ($generated@@175 $generated@@330)) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@329 $generated@@331)))) ($generated@@185 $generated@@331 $generated@@330))
 :pattern ( ($generated@@92 $generated@@329 $generated@@331))
))))
 :pattern ( ($generated@@154 $generated@@329 ($generated@@175 $generated@@330)))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@332) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@333) $generated@@70)) (= (type $generated@@334) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@332 ($generated@@199 $generated@@333) $generated@@334) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@170) ($generated@@0 ($generated@@92 $generated@@332 $generated@@335))) ($generated@@215 $generated@@335 $generated@@333 $generated@@334))
 :pattern ( ($generated@@92 $generated@@332 $generated@@335))
))))
 :pattern ( ($generated@@85 $generated@@332 ($generated@@199 $generated@@333) $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@337) $generated@@70)) (= (type $generated@@338) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@170) ($generated@@0 ($generated@@92 $generated@@336 $generated@@339))) ($generated@@215 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@92 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 (type $generated@@340)))
(= ($generated ($generated@@92 ($generated@@251 $generated@@341) $generated@@340)) 0))
 :pattern ( (let (($generated@@341 (type $generated@@340)))
($generated@@92 ($generated@@251 $generated@@341) $generated@@340)))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@260 (type $generated@@345))))
(let (($generated@@347 ($generated@@259 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345)) ($generated@@87 $generated@@347 $generated@@346))))
 :pattern ( ($generated@@343 $generated@@345))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@349) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@342 $generated@@348) $generated@@349))  (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@348) ($generated@@168 ($generated@@301 $generated@@161 $generated@@349)))) (= ($generated@@92 ($generated@@343 $generated@@348) ($generated@@168 ($generated@@301 $generated@@161 $generated@@349))) ($generated@@169 ($generated@@301 $generated@@161 $generated@@349))))))
 :pattern ( ($generated@@92 ($generated@@342 $generated@@348) $generated@@349))
)))
(assert  (and (forall (($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@352)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@350 $generated@@352))
)) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@278 (type $generated@@353))))
(let (($generated@@355 ($generated@@277 (type $generated@@353))))
(= (type ($generated@@351 $generated@@353)) ($generated@@87 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@351 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@357) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@350 $generated@@356) $generated@@357))  (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@356) ($generated@@168 ($generated@@301 $generated@@161 $generated@@357)))) (= ($generated@@92 ($generated@@351 $generated@@356) ($generated@@168 ($generated@@301 $generated@@161 $generated@@357))) ($generated@@169 ($generated@@301 $generated@@161 $generated@@357))))))
 :pattern ( ($generated@@92 ($generated@@350 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(let (($generated@@361 ($generated@@259 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@258 $generated@@361 $generated@@360)) (= ($generated@@0 ($generated@@92 ($generated@@311 $generated@@358) $generated@@359)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@358) $generated@@362)) (= $generated@@359 ($generated@@92 ($generated@@343 $generated@@358) $generated@@362))))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@358) $generated@@362))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@358) $generated@@362))
))))))
 :pattern ( ($generated@@92 ($generated@@311 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@277 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@276 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@92 ($generated@@322 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@92 ($generated@@351 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@363) $generated@@367))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@92 ($generated@@322 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@70)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (= (type $generated@@371) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@372) $generated@@70)) (= (type $generated@@373) $generated@@70)) (= (type $generated@@374) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))) (and ($generated@@215 ($generated@@92 ($generated@@343 $generated@@371) $generated@@375) $generated@@373 $generated@@374) ($generated@@215 $generated@@375 $generated@@372 $generated@@374)))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@371) $generated@@375))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))
))))
 :pattern ( ($generated@@85 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@377 $generated@@378)) $generated@@70)
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@379) $generated@@383))) (and ($generated@@215 ($generated@@92 ($generated@@351 $generated@@379) $generated@@383) $generated@@381 $generated@@382) ($generated@@215 $generated@@383 $generated@@380 $generated@@382)))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@379) $generated@@383))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@379) $generated@@383))
))))
 :pattern ( ($generated@@85 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@385) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@386) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@384 $generated@@386))) (and ($generated@@143 $generated@@384 $generated@@385) ($generated@@143 $generated@@385 $generated@@386))) ($generated@@143 $generated@@384 $generated@@386))
 :pattern ( ($generated@@143 $generated@@384 $generated@@385) ($generated@@143 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@T) ) (! (= (type ($generated@@387 $generated@@388)) ($generated@@87 $generated@@388 $generated@@4))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@278 (type $generated@@389))))
(let (($generated@@391 ($generated@@277 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@276 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@275 $generated@@391 $generated@@390)) (= ($generated@@274 $generated@@389) ($generated@@387 $generated@@391))))))
 :pattern ( ($generated@@274 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@278 (type $generated@@392))))
(let (($generated@@394 ($generated@@277 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@276 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@275 $generated@@394 $generated@@393)) (= ($generated@@322 $generated@@392) ($generated@@387 $generated@@393))))))
 :pattern ( ($generated@@322 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@278 (type $generated@@395))))
(let (($generated@@397 ($generated@@277 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@276 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@275 $generated@@397 $generated@@396)) (= ($generated@@350 $generated@@395) ($generated@@387 $generated@@170))))))
 :pattern ( ($generated@@350 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@260 (type $generated@@398))))
(let (($generated@@400 ($generated@@259 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@258 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@257 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (and (and (= (type $generated@@401) $generated@@170) (= (type $generated@@402) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@398) ($generated@@235 ($generated@@184 $generated@@401 $generated@@402)))))
 :no-pattern (type $generated@@401)
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@342 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@278 (type $generated@@403))))
(let (($generated@@405 ($generated@@277 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@276 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@275 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (and (and (= (type $generated@@406) $generated@@170) (= (type $generated@@407) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@350 $generated@@403) ($generated@@235 ($generated@@184 $generated@@406 $generated@@407)))))
 :no-pattern (type $generated@@406)
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@350 $generated@@403))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@76)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@T) ) (!  (=> (and (= (type $generated@@410) $generated@@76) (= (type $generated@@411) $generated@@74)) (and (= ($generated@@408 ($generated@@192 $generated@@412 $generated@@410 $generated@@411)) $generated@@410) (= ($generated@@83 ($generated@@192 $generated@@412 $generated@@410 $generated@@411)) $generated@@411)))
 :pattern ( ($generated@@192 $generated@@412 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@46)) (and (= ($generated@@235 ($generated@@301 $generated@@2 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@301 $generated@@2 $generated@@413) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@46))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@170) ($generated@@185 $generated@@414 $generated@@47)) (and (= ($generated@@235 ($generated@@301 $generated@@3 $generated@@414)) $generated@@414) ($generated@@154 ($generated@@301 $generated@@3 $generated@@414) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@414 $generated@@47))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@44)) (and (= ($generated@@235 ($generated@@301 $generated@@4 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@301 $generated@@4 $generated@@415) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@416) 21))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@170) ($generated@@185 $generated@@417 $generated@@45)) (and (= ($generated@@235 ($generated@@301 $generated@@416 $generated@@417)) $generated@@417) ($generated@@154 ($generated@@301 $generated@@416 $generated@@417) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@417 $generated@@45))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@70) (= ($generated@@185 ($generated@@235 $generated@@418) $generated@@419) ($generated@@154 $generated@@418 $generated@@419)))
 :pattern ( ($generated@@185 ($generated@@235 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@90 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@87 $generated@@421 $generated@@2)) (<= 0 ($generated@@250 $generated@@420))))
 :pattern ( ($generated@@250 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@230 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@229 $generated@@423)) (<= 0 ($generated@@228 $generated@@422))))
 :pattern ( ($generated@@228 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@70) (= (type $generated@@427) $generated@@70)) (= ($generated@@424 ($generated@@368 $generated@@426 $generated@@427)) $generated@@426))
 :pattern ( ($generated@@368 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@428 ($generated@@368 $generated@@430 $generated@@431)) $generated@@431))
 :pattern ( ($generated@@368 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@70) (= (type $generated@@433) $generated@@70)) (= ($generated@@81 ($generated@@368 $generated@@432 $generated@@433)) $generated@@58))
 :pattern ( ($generated@@368 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@70)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@70) (= (type $generated@@437) $generated@@70)) (= ($generated@@434 ($generated@@376 $generated@@436 $generated@@437)) $generated@@436))
 :pattern ( ($generated@@376 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@438 ($generated@@376 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@376 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@70) (= (type $generated@@443) $generated@@70)) (= ($generated@@81 ($generated@@376 $generated@@442 $generated@@443)) $generated@@59))
 :pattern ( ($generated@@376 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@170) (= (type $generated@@445) $generated@@170)) (= ($generated@@221 ($generated@@184 $generated@@444 $generated@@445)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@70)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@70) (= (type $generated@@449) $generated@@70)) (= ($generated@@446 ($generated@@160 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@160 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) $generated@@70)) (= ($generated@@450 ($generated@@160 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@160 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@170) (= (type $generated@@457) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@184 $generated@@456 $generated@@457))
)))
(assert  (and (forall (($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@460))
)) (forall (($generated@@461 T@U) ($generated@@462 Int) ) (! (let (($generated@@463 ($generated@@230 (type $generated@@461))))
(= (type ($generated@@459 $generated@@461 $generated@@462)) $generated@@463))
 :pattern ( ($generated@@459 $generated@@461 $generated@@462))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@229 $generated@@170)) (= (type $generated@@465) $generated@@70)) (= (type $generated@@466) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@464 ($generated@@458 $generated@@465) $generated@@466) (forall (($generated@@467 Int) ) (!  (=> (and (<= 0 $generated@@467) (< $generated@@467 ($generated@@228 $generated@@464))) ($generated@@215 ($generated@@459 $generated@@464 $generated@@467) $generated@@465 $generated@@466))
 :pattern ( ($generated@@459 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@85 $generated@@464 ($generated@@458 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@469 Int) ) (! (= ($generated@@468 ($generated@@86 $generated@@469)) $generated@@469)
 :pattern ( ($generated@@86 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@70) (= ($generated@@470 ($generated@@199 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@199 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@473)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@70) (= ($generated@@474 ($generated@@204 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@204 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@477)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@478 ($generated@@175 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@175 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@481)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@70) (= ($generated@@482 ($generated@@458 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@458 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@70) (= ($generated@@81 ($generated@@458 $generated@@485)) $generated@@57))
 :pattern ( ($generated@@458 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(= ($generated@@301 $generated@@487 ($generated@@235 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@235 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@489) $generated@@70)) (= (type $generated@@490) $generated@@70)) (= ($generated@@154 $generated@@488 ($generated@@368 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@488) $generated@@491))) (and ($generated@@185 ($generated@@92 ($generated@@343 $generated@@488) $generated@@491) $generated@@490) ($generated@@185 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@488) $generated@@491))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@154 $generated@@488 ($generated@@368 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@493) $generated@@70)) (= (type $generated@@494) $generated@@70)) (= ($generated@@154 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@492) $generated@@495))) (and ($generated@@185 ($generated@@92 ($generated@@351 $generated@@492) $generated@@495) $generated@@494) ($generated@@185 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@492) $generated@@495))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@154 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@496 $generated@@498) ($generated@@497 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@170)) (< ($generated@@496 $generated@@501) ($generated@@497 ($generated@@184 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@184 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@170) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) $generated@@70)) ($generated@@185 $generated@@502 ($generated@@368 $generated@@503 $generated@@504))) (and (= ($generated@@235 ($generated@@301 ($generated@@258 $generated@@170 $generated@@170) $generated@@502)) $generated@@502) ($generated@@154 ($generated@@301 ($generated@@258 $generated@@170 $generated@@170) $generated@@502) ($generated@@368 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@185 $generated@@502 ($generated@@368 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@170) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) $generated@@70)) ($generated@@185 $generated@@505 ($generated@@376 $generated@@506 $generated@@507))) (and (= ($generated@@235 ($generated@@301 ($generated@@276 $generated@@170 $generated@@170) $generated@@505)) $generated@@505) ($generated@@154 ($generated@@301 ($generated@@276 $generated@@170 $generated@@170) $generated@@505) ($generated@@376 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@505 ($generated@@376 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= (type $generated@@510) $generated@@170)) ($generated@@185 $generated@@510 ($generated@@160 $generated@@508 $generated@@509))) (and (= ($generated@@235 ($generated@@301 $generated@@161 $generated@@510)) $generated@@510) ($generated@@154 ($generated@@301 $generated@@161 $generated@@510) ($generated@@160 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@185 $generated@@510 ($generated@@160 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
 (not ($generated@@0 ($generated@@92 ($generated@@387 $generated@@512) $generated@@511))))
 :pattern ( (let (($generated@@512 (type $generated@@511)))
($generated@@92 ($generated@@387 $generated@@512) $generated@@511)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (= ($generated@@1 ($generated@@515 $generated@@519 $generated@@520)) 22)) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@516 ($generated@@515 $generated@@521 $generated@@522)) $generated@@521)
 :pattern ( ($generated@@515 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@T) ($generated@@524 T@T) ) (! (= ($generated@@517 ($generated@@515 $generated@@523 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@515 $generated@@523 $generated@@524))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@517 (type $generated@@525))))
(= (type ($generated@@513 $generated@@525 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@513 $generated@@525 $generated@@526 $generated@@527))
))) (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(let (($generated@@534 (type $generated@@530)))
(= (type ($generated@@518 $generated@@529 $generated@@530 $generated@@531 $generated@@532)) ($generated@@515 $generated@@534 $generated@@533))))
 :pattern ( ($generated@@518 $generated@@529 $generated@@530 $generated@@531 $generated@@532))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@517 (type $generated@@535))))
 (=> (= (type $generated@@538) $generated@@539) (= ($generated@@513 ($generated@@518 $generated@@535 $generated@@536 $generated@@537 $generated@@538) $generated@@536 $generated@@537) $generated@@538)))
 :weight 0
))) (and (and (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (or (= $generated@@542 $generated@@544) (= ($generated@@513 ($generated@@518 $generated@@541 $generated@@542 $generated@@543 $generated@@540) $generated@@544 $generated@@545) ($generated@@513 $generated@@541 $generated@@544 $generated@@545)))
 :weight 0
)) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@549 $generated@@551) (= ($generated@@513 ($generated@@518 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@513 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
))) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or true (= ($generated@@513 ($generated@@518 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@513 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
)))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (= (type ($generated@@514 $generated@@558 $generated@@559 $generated@@560 $generated@@561)) ($generated@@515 $generated@@88 $generated@@4))
 :pattern ( ($generated@@514 $generated@@558 $generated@@559 $generated@@560 $generated@@561))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@73 (type $generated@@567))))
 (=> (and (and (and (and (and (= (type $generated@@562) $generated@@88) (= (type $generated@@563) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@564) ($generated@@72 $generated@@4))) (= (type $generated@@565) $generated@@88)) (= (type $generated@@566) $generated@@88)) (= (type $generated@@567) ($generated@@72 $generated@@568))) (= ($generated@@0 ($generated@@513 ($generated@@514 $generated@@562 $generated@@563 $generated@@564 $generated@@565) $generated@@566 $generated@@567))  (=> (and (not (= $generated@@566 $generated@@562)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@563 $generated@@566) $generated@@564))) (= $generated@@566 $generated@@565)))))
 :pattern ( ($generated@@513 ($generated@@514 $generated@@562 $generated@@563 $generated@@564 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@70) (= (type $generated@@572) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@160 $generated@@571 $generated@@572)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@161) (= ($generated@@496 ($generated@@235 $generated@@573)) ($generated@@497 $generated@@573)))
 :pattern ( ($generated@@496 ($generated@@235 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@170) ($generated@@185 $generated@@574 ($generated@@86 0))) (and (= ($generated@@235 ($generated@@301 $generated@@2 $generated@@574)) $generated@@574) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@574) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@574 ($generated@@86 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@185 $generated@@575 ($generated@@199 $generated@@576))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@199 $generated@@576))))
 :pattern ( ($generated@@185 $generated@@575 ($generated@@199 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@185 $generated@@577 ($generated@@204 $generated@@578))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@577) ($generated@@204 $generated@@578))))
 :pattern ( ($generated@@185 $generated@@577 ($generated@@204 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@185 $generated@@579 ($generated@@175 $generated@@580))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@2) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@2) $generated@@579) ($generated@@175 $generated@@580))))
 :pattern ( ($generated@@185 $generated@@579 ($generated@@175 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@170) (= (type $generated@@582) $generated@@70)) ($generated@@185 $generated@@581 ($generated@@458 $generated@@582))) (and (= ($generated@@235 ($generated@@301 ($generated@@229 $generated@@170) $generated@@581)) $generated@@581) ($generated@@154 ($generated@@301 ($generated@@229 $generated@@170) $generated@@581) ($generated@@458 $generated@@582))))
 :pattern ( ($generated@@185 $generated@@581 ($generated@@458 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (=> (and (and (and (= (type $generated@@583) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@584) $generated@@88)) (= (type $generated@@585) ($generated@@72 $generated@@587))) ($generated@@152 ($generated@@93 $generated@@583 $generated@@584 ($generated@@95 ($generated@@92 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))) ($generated@@143 $generated@@583 ($generated@@93 $generated@@583 $generated@@584 ($generated@@95 ($generated@@92 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@93 $generated@@583 $generated@@584 ($generated@@95 ($generated@@92 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@569 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@569 $generated@@181) $generated@@68))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@588 ($generated@@175 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@588 $generated@@591)))) ($generated@@215 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@92 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@85 $generated@@588 ($generated@@175 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@161) (= (type $generated@@593) $generated@@70)) (= (type $generated@@594) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@594) (and ($generated@@159 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@70) ($generated@@85 $generated@@592 ($generated@@160 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@85 $generated@@592 ($generated@@160 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@215 ($generated@@168 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@215 ($generated@@168 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@161) (= (type $generated@@597) $generated@@70)) (= (type $generated@@598) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@598) (and ($generated@@159 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@70) ($generated@@85 $generated@@596 ($generated@@160 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 ($generated@@160 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@215 ($generated@@169 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@215 ($generated@@169 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@170) (= (type $generated@@601) $generated@@170)) (= ($generated@@184 ($generated@@211 $generated@@600) ($generated@@211 $generated@@601)) ($generated@@211 ($generated@@184 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@184 ($generated@@211 $generated@@600) ($generated@@211 $generated@@601)))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@235 ($generated@@8 ($generated@@209 $generated@@602))) ($generated@@211 ($generated@@235 ($generated@@8 $generated@@602))))
 :pattern ( ($generated@@235 ($generated@@8 ($generated@@209 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@235 ($generated@@211 $generated@@603)) ($generated@@211 ($generated@@235 $generated@@603)))
 :pattern ( ($generated@@235 ($generated@@211 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@230 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@229 $generated@@605)) (= ($generated@@228 $generated@@604) 0)) (= $generated@@604 ($generated@@227 $generated@@605))))
 :pattern ( ($generated@@228 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@607)))
 (=> (and (and (= (type $generated@@606) ($generated@@87 $generated@@609 $generated@@2)) (= (type $generated@@608) $generated@@2)) (<= 0 ($generated $generated@@608))) (= ($generated@@250 ($generated@@93 $generated@@606 $generated@@607 $generated@@608)) (+ (- ($generated@@250 $generated@@606) ($generated ($generated@@92 $generated@@606 $generated@@607))) ($generated $generated@@608)))))
 :pattern ( ($generated@@250 ($generated@@93 $generated@@606 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@2)) ($generated@@85 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@613) $generated@@3)) ($generated@@85 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@85 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@615) $generated@@4)) ($generated@@85 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@85 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@617) $generated@@416)) ($generated@@85 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@85 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@619) $generated@@170)) ($generated@@85 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@85 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@229 $generated@@170)) (= (type $generated@@621) $generated@@70)) (= ($generated@@154 $generated@@620 ($generated@@458 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@228 $generated@@620))) ($generated@@185 ($generated@@459 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@459 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@154 $generated@@620 ($generated@@458 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (= (type $generated@@624) ($generated@@229 $generated@@170)) (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@228 $generated@@624))) (< ($generated@@497 ($generated@@301 $generated@@161 ($generated@@459 $generated@@624 $generated@@625))) ($generated@@623 $generated@@624))))
 :pattern ( ($generated@@497 ($generated@@301 $generated@@161 ($generated@@459 $generated@@624 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@154 $generated@@626 ($generated@@368 $generated@@627 $generated@@628))) (and (and ($generated@@154 ($generated@@256 $generated@@626) ($generated@@199 $generated@@627)) ($generated@@154 ($generated@@311 $generated@@626) ($generated@@199 $generated@@628))) ($generated@@154 ($generated@@342 $generated@@626) ($generated@@199 ($generated@@160 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@154 $generated@@626 ($generated@@368 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@630) $generated@@70)) (= (type $generated@@631) $generated@@70)) ($generated@@154 $generated@@629 ($generated@@376 $generated@@630 $generated@@631))) (and (and ($generated@@154 ($generated@@274 $generated@@629) ($generated@@204 $generated@@630)) ($generated@@154 ($generated@@322 $generated@@629) ($generated@@204 $generated@@631))) ($generated@@154 ($generated@@350 $generated@@629) ($generated@@204 ($generated@@160 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@154 $generated@@629 ($generated@@376 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@2) ($generated@@154 $generated@@632 $generated@@46))
 :pattern ( ($generated@@154 $generated@@632 $generated@@46))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@3) ($generated@@154 $generated@@633 $generated@@47))
 :pattern ( ($generated@@154 $generated@@633 $generated@@47))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@4) ($generated@@154 $generated@@634 $generated@@44))
 :pattern ( ($generated@@154 $generated@@634 $generated@@44))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@416) ($generated@@154 $generated@@635 $generated@@45))
 :pattern ( ($generated@@154 $generated@@635 $generated@@45))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@170) ($generated@@154 $generated@@636 $generated@@48))
 :pattern ( ($generated@@154 $generated@@636 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 (T@U) Bool)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () Int)
(assert  (and (and (and (and (and (= (type $generated@@637) ($generated@@515 $generated@@88 $generated@@4)) (= (type $generated@@638) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@639) $generated@@88)) (= (type $generated@@641) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@643) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@646) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@648  (=> (= $generated@@637 ($generated@@514 $generated@@148 $generated@@638 $generated@@60 $generated@@639)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@0 ($generated@@513 $generated@@637 $generated@@639 $generated@@151))) (=> ($generated@@0 ($generated@@513 $generated@@637 $generated@@639 $generated@@151)) (=> (and (and (= $generated@@640 ($generated@@209 25)) (= $generated@@641 ($generated@@93 $generated@@638 $generated@@639 ($generated@@95 ($generated@@92 $generated@@638 $generated@@639) $generated@@151 ($generated@@8 $generated@@640))))) (and ($generated@@152 $generated@@641) (= $generated@@642 ($generated@@209 30)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@73 (type $generated@@650))))
 (=> (and (= (type $generated@@649) $generated@@88) (= (type $generated@@650) ($generated@@72 $generated@@651))) (=> (and (and (not (= $generated@@649 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@641 $generated@@649) $generated@@60))) (= $generated@@649 $generated@@639)) ($generated@@0 ($generated@@513 $generated@@637 $generated@@649 $generated@@650)))))
 :no-pattern (type $generated@@649)
 :no-pattern (type $generated@@650)
 :no-pattern ($generated $generated@@649)
 :no-pattern ($generated@@0 $generated@@649)
 :no-pattern ($generated $generated@@650)
 :no-pattern ($generated@@0 $generated@@650)
))) (=> (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 ($generated@@73 (type $generated@@653))))
 (=> (and (= (type $generated@@652) $generated@@88) (= (type $generated@@653) ($generated@@72 $generated@@654))) (=> (and (and (not (= $generated@@652 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@641 $generated@@652) $generated@@60))) (= $generated@@652 $generated@@639)) ($generated@@0 ($generated@@513 $generated@@637 $generated@@652 $generated@@653)))))
 :no-pattern (type $generated@@652)
 :no-pattern (type $generated@@653)
 :no-pattern ($generated $generated@@652)
 :no-pattern ($generated@@0 $generated@@652)
 :no-pattern ($generated $generated@@653)
 :no-pattern ($generated@@0 $generated@@653)
)) (=> (and ($generated@@152 $generated@@643) ($generated@@644 $generated@@643)) (=> (and (and (<= ($generated ($generated@@94 ($generated@@92 $generated@@643 $generated@@639) $generated@@151)) (+ ($generated ($generated@@94 ($generated@@92 $generated@@641 $generated@@639) $generated@@151)) $generated@@642)) (<= (+ ($generated ($generated@@94 ($generated@@92 $generated@@641 $generated@@639) $generated@@151)) $generated@@642) ($generated ($generated@@94 ($generated@@92 $generated@@643 $generated@@639) $generated@@151)))) (and (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@88) (=> (and (not (= $generated@@655 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@641 $generated@@655) $generated@@60))) (or (= ($generated@@92 $generated@@643 $generated@@655) ($generated@@92 $generated@@641 $generated@@655)) (= $generated@@655 $generated@@639))))
 :pattern ( ($generated@@92 $generated@@643 $generated@@655))
)) ($generated@@143 $generated@@641 $generated@@643))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated ($generated@@94 ($generated@@92 $generated@@643 $generated@@639) $generated@@151)) ($generated@@209 55))) (=> (= ($generated ($generated@@94 ($generated@@92 $generated@@643 $generated@@639) $generated@@151)) ($generated@@209 55)) (=> (= $generated@@645 ($generated@@209 12)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (! (let (($generated@@658 ($generated@@73 (type $generated@@657))))
 (=> (and (= (type $generated@@656) $generated@@88) (= (type $generated@@657) ($generated@@72 $generated@@658))) (=> (and (and (not (= $generated@@656 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@643 $generated@@656) $generated@@60))) (= $generated@@656 $generated@@639)) ($generated@@0 ($generated@@513 $generated@@637 $generated@@656 $generated@@657)))))
 :no-pattern (type $generated@@656)
 :no-pattern (type $generated@@657)
 :no-pattern ($generated $generated@@656)
 :no-pattern ($generated@@0 $generated@@656)
 :no-pattern ($generated $generated@@657)
 :no-pattern ($generated@@0 $generated@@657)
))) (=> (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (! (let (($generated@@661 ($generated@@73 (type $generated@@660))))
 (=> (and (= (type $generated@@659) $generated@@88) (= (type $generated@@660) ($generated@@72 $generated@@661))) (=> (and (and (not (= $generated@@659 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@643 $generated@@659) $generated@@60))) (= $generated@@659 $generated@@639)) ($generated@@0 ($generated@@513 $generated@@637 $generated@@659 $generated@@660)))))
 :no-pattern (type $generated@@659)
 :no-pattern (type $generated@@660)
 :no-pattern ($generated $generated@@659)
 :no-pattern ($generated@@0 $generated@@659)
 :no-pattern ($generated $generated@@660)
 :no-pattern ($generated@@0 $generated@@660)
)) (=> (and (and (and ($generated@@152 $generated@@646) ($generated@@644 $generated@@646)) (<= ($generated ($generated@@94 ($generated@@92 $generated@@646 $generated@@639) $generated@@151)) (+ ($generated ($generated@@94 ($generated@@92 $generated@@643 $generated@@639) $generated@@151)) $generated@@645))) (and (and (<= (+ ($generated ($generated@@94 ($generated@@92 $generated@@643 $generated@@639) $generated@@151)) $generated@@645) ($generated ($generated@@94 ($generated@@92 $generated@@646 $generated@@639) $generated@@151))) (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@88) (=> (and (not (= $generated@@662 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@643 $generated@@662) $generated@@60))) (or (= ($generated@@92 $generated@@646 $generated@@662) ($generated@@92 $generated@@643 $generated@@662)) (= $generated@@662 $generated@@639))))
 :pattern ( ($generated@@92 $generated@@646 $generated@@662))
))) (and ($generated@@143 $generated@@643 $generated@@646) (= (ControlFlow 0 2) (- 0 1))))) (= ($generated ($generated@@94 ($generated@@92 $generated@@646 $generated@@639) $generated@@151)) ($generated@@209 66))))))))))))))))))
(let (($generated@@663  (=> (and ($generated@@152 $generated@@638) ($generated@@644 $generated@@638)) (=> (and (and (not (= $generated@@639 $generated@@148)) (and ($generated@@154 $generated@@639 $generated@@181) ($generated@@85 $generated@@639 $generated@@181 $generated@@638))) (and (= 1 $generated@@647) (= (ControlFlow 0 7) 2))) $generated@@648))))
$generated@@663)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (Int) Int)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@215 (T@U T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@227 (T@T) T@U)
(declare-fun $generated@@228 (T@U) Int)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@251 (T@T) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@257 (T@T T@T) T@U)
(declare-fun $generated@@258 (T@T T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@368 (T@U T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@T) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@416 () T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@459 (T@U Int) T@U)
(declare-fun $generated@@468 (T@U) Int)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@513 (T@U T@U T@U) T@U)
(declare-fun $generated@@514 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@515 (T@T T@T) T@T)
(declare-fun $generated@@516 (T@T) T@T)
(declare-fun $generated@@517 (T@T) T@T)
(declare-fun $generated@@518 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@569 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@630 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@65 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@209 $generated@@210) $generated@@210)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@211 $generated@@214) $generated@@214)
 :pattern ( ($generated@@211 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@70) (= (type $generated@@217) $generated@@70)) (= (type $generated@@218) $generated@@170)) (= (type $generated@@219) $generated@@170)) (= (type $generated@@220) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@220)) (= ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220)  (and ($generated@@215 $generated@@218 $generated@@216 $generated@@220) ($generated@@215 $generated@@219 $generated@@217 $generated@@220))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@75)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@161) (= ($generated@@159 $generated@@223) (= ($generated@@221 $generated@@223) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@161) ($generated@@159 $generated@@224)) (exists (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (and (= (type $generated@@225) $generated@@170) (= (type $generated@@226) $generated@@170)) (= $generated@@224 ($generated@@184 $generated@@225 $generated@@226)))
 :no-pattern (type $generated@@225)
 :no-pattern (type $generated@@226)
 :no-pattern ($generated $generated@@225)
 :no-pattern ($generated@@0 $generated@@225)
 :no-pattern ($generated $generated@@226)
 :no-pattern ($generated@@0 $generated@@226)
)))
 :pattern ( ($generated@@159 $generated@@224))
)))
(assert  (and (and (forall (($generated@@231 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@231)) 18)) (forall (($generated@@232 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@229 $generated@@232))
))) (forall (($generated@@233 T@T) ) (! (= (type ($generated@@227 $generated@@233)) ($generated@@229 $generated@@233))
 :pattern ( ($generated@@227 $generated@@233))
))))
(assert (forall (($generated@@234 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@234)) 0)
 :pattern ( ($generated@@227 $generated@@234))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@170)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@70) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239) ($generated@@85 $generated@@237 $generated@@238 $generated@@239)))
 :pattern ( ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@240) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@241) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@242) $generated@@170)) (= (type $generated@@243) $generated@@70)) ($generated@@143 $generated@@240 $generated@@241)) ($generated@@215 $generated@@242 $generated@@243 $generated@@240)) ($generated@@215 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@143 $generated@@240 $generated@@241) ($generated@@215 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@247) $generated@@70)) ($generated@@143 $generated@@244 $generated@@245)) ($generated@@85 $generated@@246 $generated@@247 $generated@@244)) ($generated@@85 $generated@@246 $generated@@247 $generated@@245))
 :pattern ( ($generated@@143 $generated@@244 $generated@@245) ($generated@@85 $generated@@246 $generated@@247 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@249) $generated@@88)) (=> (and (and ($generated@@152 $generated@@248) (and (not (= $generated@@249 $generated@@148)) (= ($generated@@153 $generated@@249) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151) $generated@@46 $generated@@248)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151))
)))
(assert (forall (($generated@@252 T@T) ) (! (= (type ($generated@@251 $generated@@252)) ($generated@@87 $generated@@252 $generated@@2))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@90 (type $generated@@253))))
 (=> (= (type $generated@@253) ($generated@@87 $generated@@254 $generated@@2)) (and (= (= ($generated@@250 $generated@@253) 0) (= $generated@@253 ($generated@@251 $generated@@254))) (=> (not (= ($generated@@250 $generated@@253) 0)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@254) (< 0 ($generated ($generated@@92 $generated@@253 $generated@@255))))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))))
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (= ($generated@@1 ($generated@@258 $generated@@261 $generated@@262)) 19)) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@263 $generated@@264)) $generated@@263)
 :pattern ( ($generated@@258 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@258 $generated@@265 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@258 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@259 (type $generated@@267))))
(= (type ($generated@@256 $generated@@267)) ($generated@@87 $generated@@268 $generated@@4)))
 :pattern ( ($generated@@256 $generated@@267))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= (type ($generated@@257 $generated@@269 $generated@@270)) ($generated@@258 $generated@@269 $generated@@270))
 :pattern ( ($generated@@257 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@T) ) (! (let (($generated@@273 (type $generated@@271)))
 (not ($generated@@0 ($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271))))
 :pattern ( (let (($generated@@273 (type $generated@@271)))
($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271)))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 20)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@87 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@292 $generated@@293 $generated@@294)) (and ($generated@@143 $generated@@293 $generated@@294) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@73 (type $generated@@296))))
 (=> (and (and (= (type $generated@@295) $generated@@88) (= (type $generated@@296) ($generated@@72 $generated@@297))) (not ($generated@@196 $generated@@296))) (= ($generated@@94 ($generated@@92 $generated@@293 $generated@@295) $generated@@296) ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))
))))
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@90 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@87 $generated@@299 $generated@@2)) (= ($generated@@176 $generated@@298) (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@299) (and (<= 0 ($generated ($generated@@92 $generated@@298 $generated@@300))) (<= ($generated ($generated@@92 $generated@@298 $generated@@300)) ($generated@@250 $generated@@298))))
 :pattern ( ($generated@@92 $generated@@298 $generated@@300))
)))))
 :pattern ( ($generated@@176 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@170) ($generated@@185 $generated@@304 $generated@@181)) (and (= ($generated@@235 ($generated@@301 $generated@@88 $generated@@304)) $generated@@304) ($generated@@154 ($generated@@301 $generated@@88 $generated@@304) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@304 $generated@@181))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@170) ($generated@@185 $generated@@305 $generated@@147)) (and (= ($generated@@235 ($generated@@301 $generated@@88 $generated@@305)) $generated@@305) ($generated@@154 ($generated@@301 $generated@@88 $generated@@305) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@305 $generated@@147))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@88) (= ($generated@@154 $generated@@306 $generated@@181)  (and ($generated@@154 $generated@@306 $generated@@147) (not (= $generated@@306 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@306 $generated@@181))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@260 (type $generated@@307))))
(let (($generated@@309 ($generated@@259 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@258 $generated@@309 $generated@@308)) (or (= $generated@@307 ($generated@@257 $generated@@309 $generated@@308)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@307) $generated@@310)))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@256 $generated@@307))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@260 (type $generated@@312))))
(= (type ($generated@@311 $generated@@312)) ($generated@@87 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@260 (type $generated@@314))))
(let (($generated@@316 ($generated@@259 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@258 $generated@@316 $generated@@315)) (or (= $generated@@314 ($generated@@257 $generated@@316 $generated@@315)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@315) ($generated@@0 ($generated@@92 ($generated@@311 $generated@@314) $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@278 (type $generated@@318))))
(let (($generated@@320 ($generated@@277 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@276 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@275 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@274 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@278 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@87 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@278 (type $generated@@325))))
(let (($generated@@327 ($generated@@277 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@276 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@275 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@92 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@330) $generated@@70)) (= ($generated@@154 $generated@@329 ($generated@@175 $generated@@330)) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@329 $generated@@331)))) ($generated@@185 $generated@@331 $generated@@330))
 :pattern ( ($generated@@92 $generated@@329 $generated@@331))
))))
 :pattern ( ($generated@@154 $generated@@329 ($generated@@175 $generated@@330)))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@332) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@333) $generated@@70)) (= (type $generated@@334) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@332 ($generated@@199 $generated@@333) $generated@@334) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@170) ($generated@@0 ($generated@@92 $generated@@332 $generated@@335))) ($generated@@215 $generated@@335 $generated@@333 $generated@@334))
 :pattern ( ($generated@@92 $generated@@332 $generated@@335))
))))
 :pattern ( ($generated@@85 $generated@@332 ($generated@@199 $generated@@333) $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@337) $generated@@70)) (= (type $generated@@338) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@170) ($generated@@0 ($generated@@92 $generated@@336 $generated@@339))) ($generated@@215 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@92 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 (type $generated@@340)))
(= ($generated ($generated@@92 ($generated@@251 $generated@@341) $generated@@340)) 0))
 :pattern ( (let (($generated@@341 (type $generated@@340)))
($generated@@92 ($generated@@251 $generated@@341) $generated@@340)))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@260 (type $generated@@345))))
(let (($generated@@347 ($generated@@259 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345)) ($generated@@87 $generated@@347 $generated@@346))))
 :pattern ( ($generated@@343 $generated@@345))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@349) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@342 $generated@@348) $generated@@349))  (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@348) ($generated@@168 ($generated@@301 $generated@@161 $generated@@349)))) (= ($generated@@92 ($generated@@343 $generated@@348) ($generated@@168 ($generated@@301 $generated@@161 $generated@@349))) ($generated@@169 ($generated@@301 $generated@@161 $generated@@349))))))
 :pattern ( ($generated@@92 ($generated@@342 $generated@@348) $generated@@349))
)))
(assert  (and (forall (($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@352)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@350 $generated@@352))
)) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@278 (type $generated@@353))))
(let (($generated@@355 ($generated@@277 (type $generated@@353))))
(= (type ($generated@@351 $generated@@353)) ($generated@@87 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@351 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@357) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@350 $generated@@356) $generated@@357))  (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@356) ($generated@@168 ($generated@@301 $generated@@161 $generated@@357)))) (= ($generated@@92 ($generated@@351 $generated@@356) ($generated@@168 ($generated@@301 $generated@@161 $generated@@357))) ($generated@@169 ($generated@@301 $generated@@161 $generated@@357))))))
 :pattern ( ($generated@@92 ($generated@@350 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(let (($generated@@361 ($generated@@259 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@258 $generated@@361 $generated@@360)) (= ($generated@@0 ($generated@@92 ($generated@@311 $generated@@358) $generated@@359)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@358) $generated@@362)) (= $generated@@359 ($generated@@92 ($generated@@343 $generated@@358) $generated@@362))))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@358) $generated@@362))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@358) $generated@@362))
))))))
 :pattern ( ($generated@@92 ($generated@@311 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@277 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@276 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@92 ($generated@@322 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@92 ($generated@@351 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@363) $generated@@367))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@92 ($generated@@322 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@70)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (= (type $generated@@371) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@372) $generated@@70)) (= (type $generated@@373) $generated@@70)) (= (type $generated@@374) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))) (and ($generated@@215 ($generated@@92 ($generated@@343 $generated@@371) $generated@@375) $generated@@373 $generated@@374) ($generated@@215 $generated@@375 $generated@@372 $generated@@374)))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@371) $generated@@375))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))
))))
 :pattern ( ($generated@@85 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@377 $generated@@378)) $generated@@70)
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@379) $generated@@383))) (and ($generated@@215 ($generated@@92 ($generated@@351 $generated@@379) $generated@@383) $generated@@381 $generated@@382) ($generated@@215 $generated@@383 $generated@@380 $generated@@382)))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@379) $generated@@383))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@379) $generated@@383))
))))
 :pattern ( ($generated@@85 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@385) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@386) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@384 $generated@@386))) (and ($generated@@143 $generated@@384 $generated@@385) ($generated@@143 $generated@@385 $generated@@386))) ($generated@@143 $generated@@384 $generated@@386))
 :pattern ( ($generated@@143 $generated@@384 $generated@@385) ($generated@@143 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@T) ) (! (= (type ($generated@@387 $generated@@388)) ($generated@@87 $generated@@388 $generated@@4))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@278 (type $generated@@389))))
(let (($generated@@391 ($generated@@277 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@276 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@275 $generated@@391 $generated@@390)) (= ($generated@@274 $generated@@389) ($generated@@387 $generated@@391))))))
 :pattern ( ($generated@@274 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@278 (type $generated@@392))))
(let (($generated@@394 ($generated@@277 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@276 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@275 $generated@@394 $generated@@393)) (= ($generated@@322 $generated@@392) ($generated@@387 $generated@@393))))))
 :pattern ( ($generated@@322 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@278 (type $generated@@395))))
(let (($generated@@397 ($generated@@277 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@276 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@275 $generated@@397 $generated@@396)) (= ($generated@@350 $generated@@395) ($generated@@387 $generated@@170))))))
 :pattern ( ($generated@@350 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@260 (type $generated@@398))))
(let (($generated@@400 ($generated@@259 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@258 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@257 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (and (and (= (type $generated@@401) $generated@@170) (= (type $generated@@402) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@398) ($generated@@235 ($generated@@184 $generated@@401 $generated@@402)))))
 :no-pattern (type $generated@@401)
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@342 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@278 (type $generated@@403))))
(let (($generated@@405 ($generated@@277 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@276 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@275 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (and (and (= (type $generated@@406) $generated@@170) (= (type $generated@@407) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@350 $generated@@403) ($generated@@235 ($generated@@184 $generated@@406 $generated@@407)))))
 :no-pattern (type $generated@@406)
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@350 $generated@@403))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@76)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@T) ) (!  (=> (and (= (type $generated@@410) $generated@@76) (= (type $generated@@411) $generated@@74)) (and (= ($generated@@408 ($generated@@192 $generated@@412 $generated@@410 $generated@@411)) $generated@@410) (= ($generated@@83 ($generated@@192 $generated@@412 $generated@@410 $generated@@411)) $generated@@411)))
 :pattern ( ($generated@@192 $generated@@412 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@46)) (and (= ($generated@@235 ($generated@@301 $generated@@2 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@301 $generated@@2 $generated@@413) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@46))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@170) ($generated@@185 $generated@@414 $generated@@47)) (and (= ($generated@@235 ($generated@@301 $generated@@3 $generated@@414)) $generated@@414) ($generated@@154 ($generated@@301 $generated@@3 $generated@@414) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@414 $generated@@47))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@44)) (and (= ($generated@@235 ($generated@@301 $generated@@4 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@301 $generated@@4 $generated@@415) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@416) 21))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@170) ($generated@@185 $generated@@417 $generated@@45)) (and (= ($generated@@235 ($generated@@301 $generated@@416 $generated@@417)) $generated@@417) ($generated@@154 ($generated@@301 $generated@@416 $generated@@417) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@417 $generated@@45))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@70) (= ($generated@@185 ($generated@@235 $generated@@418) $generated@@419) ($generated@@154 $generated@@418 $generated@@419)))
 :pattern ( ($generated@@185 ($generated@@235 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@90 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@87 $generated@@421 $generated@@2)) (<= 0 ($generated@@250 $generated@@420))))
 :pattern ( ($generated@@250 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@230 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@229 $generated@@423)) (<= 0 ($generated@@228 $generated@@422))))
 :pattern ( ($generated@@228 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@70) (= (type $generated@@427) $generated@@70)) (= ($generated@@424 ($generated@@368 $generated@@426 $generated@@427)) $generated@@426))
 :pattern ( ($generated@@368 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@428 ($generated@@368 $generated@@430 $generated@@431)) $generated@@431))
 :pattern ( ($generated@@368 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@70) (= (type $generated@@433) $generated@@70)) (= ($generated@@81 ($generated@@368 $generated@@432 $generated@@433)) $generated@@58))
 :pattern ( ($generated@@368 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@70)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@70) (= (type $generated@@437) $generated@@70)) (= ($generated@@434 ($generated@@376 $generated@@436 $generated@@437)) $generated@@436))
 :pattern ( ($generated@@376 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@438 ($generated@@376 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@376 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@70) (= (type $generated@@443) $generated@@70)) (= ($generated@@81 ($generated@@376 $generated@@442 $generated@@443)) $generated@@59))
 :pattern ( ($generated@@376 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@170) (= (type $generated@@445) $generated@@170)) (= ($generated@@221 ($generated@@184 $generated@@444 $generated@@445)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@70)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@70) (= (type $generated@@449) $generated@@70)) (= ($generated@@446 ($generated@@160 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@160 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) $generated@@70)) (= ($generated@@450 ($generated@@160 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@160 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@170) (= (type $generated@@457) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@184 $generated@@456 $generated@@457))
)))
(assert  (and (forall (($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@460))
)) (forall (($generated@@461 T@U) ($generated@@462 Int) ) (! (let (($generated@@463 ($generated@@230 (type $generated@@461))))
(= (type ($generated@@459 $generated@@461 $generated@@462)) $generated@@463))
 :pattern ( ($generated@@459 $generated@@461 $generated@@462))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@229 $generated@@170)) (= (type $generated@@465) $generated@@70)) (= (type $generated@@466) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@464 ($generated@@458 $generated@@465) $generated@@466) (forall (($generated@@467 Int) ) (!  (=> (and (<= 0 $generated@@467) (< $generated@@467 ($generated@@228 $generated@@464))) ($generated@@215 ($generated@@459 $generated@@464 $generated@@467) $generated@@465 $generated@@466))
 :pattern ( ($generated@@459 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@85 $generated@@464 ($generated@@458 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@469 Int) ) (! (= ($generated@@468 ($generated@@86 $generated@@469)) $generated@@469)
 :pattern ( ($generated@@86 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@70) (= ($generated@@470 ($generated@@199 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@199 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@473)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@70) (= ($generated@@474 ($generated@@204 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@204 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@477)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@478 ($generated@@175 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@175 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@481)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@70) (= ($generated@@482 ($generated@@458 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@458 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@70) (= ($generated@@81 ($generated@@458 $generated@@485)) $generated@@57))
 :pattern ( ($generated@@458 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(= ($generated@@301 $generated@@487 ($generated@@235 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@235 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@489) $generated@@70)) (= (type $generated@@490) $generated@@70)) (= ($generated@@154 $generated@@488 ($generated@@368 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@488) $generated@@491))) (and ($generated@@185 ($generated@@92 ($generated@@343 $generated@@488) $generated@@491) $generated@@490) ($generated@@185 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@488) $generated@@491))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@154 $generated@@488 ($generated@@368 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@493) $generated@@70)) (= (type $generated@@494) $generated@@70)) (= ($generated@@154 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@492) $generated@@495))) (and ($generated@@185 ($generated@@92 ($generated@@351 $generated@@492) $generated@@495) $generated@@494) ($generated@@185 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@492) $generated@@495))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@154 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@496 $generated@@498) ($generated@@497 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@170)) (< ($generated@@496 $generated@@501) ($generated@@497 ($generated@@184 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@184 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@170) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) $generated@@70)) ($generated@@185 $generated@@502 ($generated@@368 $generated@@503 $generated@@504))) (and (= ($generated@@235 ($generated@@301 ($generated@@258 $generated@@170 $generated@@170) $generated@@502)) $generated@@502) ($generated@@154 ($generated@@301 ($generated@@258 $generated@@170 $generated@@170) $generated@@502) ($generated@@368 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@185 $generated@@502 ($generated@@368 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@170) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) $generated@@70)) ($generated@@185 $generated@@505 ($generated@@376 $generated@@506 $generated@@507))) (and (= ($generated@@235 ($generated@@301 ($generated@@276 $generated@@170 $generated@@170) $generated@@505)) $generated@@505) ($generated@@154 ($generated@@301 ($generated@@276 $generated@@170 $generated@@170) $generated@@505) ($generated@@376 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@505 ($generated@@376 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= (type $generated@@510) $generated@@170)) ($generated@@185 $generated@@510 ($generated@@160 $generated@@508 $generated@@509))) (and (= ($generated@@235 ($generated@@301 $generated@@161 $generated@@510)) $generated@@510) ($generated@@154 ($generated@@301 $generated@@161 $generated@@510) ($generated@@160 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@185 $generated@@510 ($generated@@160 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
 (not ($generated@@0 ($generated@@92 ($generated@@387 $generated@@512) $generated@@511))))
 :pattern ( (let (($generated@@512 (type $generated@@511)))
($generated@@92 ($generated@@387 $generated@@512) $generated@@511)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (= ($generated@@1 ($generated@@515 $generated@@519 $generated@@520)) 22)) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@516 ($generated@@515 $generated@@521 $generated@@522)) $generated@@521)
 :pattern ( ($generated@@515 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@T) ($generated@@524 T@T) ) (! (= ($generated@@517 ($generated@@515 $generated@@523 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@515 $generated@@523 $generated@@524))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@517 (type $generated@@525))))
(= (type ($generated@@513 $generated@@525 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@513 $generated@@525 $generated@@526 $generated@@527))
))) (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(let (($generated@@534 (type $generated@@530)))
(= (type ($generated@@518 $generated@@529 $generated@@530 $generated@@531 $generated@@532)) ($generated@@515 $generated@@534 $generated@@533))))
 :pattern ( ($generated@@518 $generated@@529 $generated@@530 $generated@@531 $generated@@532))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@517 (type $generated@@535))))
 (=> (= (type $generated@@538) $generated@@539) (= ($generated@@513 ($generated@@518 $generated@@535 $generated@@536 $generated@@537 $generated@@538) $generated@@536 $generated@@537) $generated@@538)))
 :weight 0
))) (and (and (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (or (= $generated@@542 $generated@@544) (= ($generated@@513 ($generated@@518 $generated@@541 $generated@@542 $generated@@543 $generated@@540) $generated@@544 $generated@@545) ($generated@@513 $generated@@541 $generated@@544 $generated@@545)))
 :weight 0
)) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@549 $generated@@551) (= ($generated@@513 ($generated@@518 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@513 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
))) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or true (= ($generated@@513 ($generated@@518 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@513 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
)))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (= (type ($generated@@514 $generated@@558 $generated@@559 $generated@@560 $generated@@561)) ($generated@@515 $generated@@88 $generated@@4))
 :pattern ( ($generated@@514 $generated@@558 $generated@@559 $generated@@560 $generated@@561))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@73 (type $generated@@567))))
 (=> (and (and (and (and (and (= (type $generated@@562) $generated@@88) (= (type $generated@@563) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@564) ($generated@@72 $generated@@4))) (= (type $generated@@565) $generated@@88)) (= (type $generated@@566) $generated@@88)) (= (type $generated@@567) ($generated@@72 $generated@@568))) (= ($generated@@0 ($generated@@513 ($generated@@514 $generated@@562 $generated@@563 $generated@@564 $generated@@565) $generated@@566 $generated@@567))  (=> (and (not (= $generated@@566 $generated@@562)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@563 $generated@@566) $generated@@564))) (= $generated@@566 $generated@@565)))))
 :pattern ( ($generated@@513 ($generated@@514 $generated@@562 $generated@@563 $generated@@564 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (= (type ($generated@@569 $generated@@570 $generated@@571 $generated@@572 $generated@@573)) ($generated@@515 $generated@@88 $generated@@4))
 :pattern ( ($generated@@569 $generated@@570 $generated@@571 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@73 (type $generated@@579))))
 (=> (and (and (and (and (and (= (type $generated@@574) $generated@@88) (= (type $generated@@575) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@576) ($generated@@72 $generated@@4))) (= (type $generated@@577) $generated@@88)) (= (type $generated@@578) $generated@@88)) (= (type $generated@@579) ($generated@@72 $generated@@580))) (= ($generated@@0 ($generated@@513 ($generated@@569 $generated@@574 $generated@@575 $generated@@576 $generated@@577) $generated@@578 $generated@@579))  (=> (and (not (= $generated@@578 $generated@@574)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@575 $generated@@578) $generated@@576))) (= $generated@@578 $generated@@577)))))
 :pattern ( ($generated@@513 ($generated@@569 $generated@@574 $generated@@575 $generated@@576 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@77)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@70) (= (type $generated@@584) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@583 $generated@@584)) $generated@@63) (= ($generated@@581 ($generated@@160 $generated@@583 $generated@@584)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@161) (= ($generated@@496 ($generated@@235 $generated@@585)) ($generated@@497 $generated@@585)))
 :pattern ( ($generated@@496 ($generated@@235 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@170) ($generated@@185 $generated@@586 ($generated@@86 0))) (and (= ($generated@@235 ($generated@@301 $generated@@2 $generated@@586)) $generated@@586) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@586) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@586 ($generated@@86 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@170) (= (type $generated@@588) $generated@@70)) ($generated@@185 $generated@@587 ($generated@@199 $generated@@588))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@587)) $generated@@587) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@587) ($generated@@199 $generated@@588))))
 :pattern ( ($generated@@185 $generated@@587 ($generated@@199 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@170) (= (type $generated@@590) $generated@@70)) ($generated@@185 $generated@@589 ($generated@@204 $generated@@590))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@589)) $generated@@589) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@589) ($generated@@204 $generated@@590))))
 :pattern ( ($generated@@185 $generated@@589 ($generated@@204 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@170) (= (type $generated@@592) $generated@@70)) ($generated@@185 $generated@@591 ($generated@@175 $generated@@592))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@2) $generated@@591)) $generated@@591) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@2) $generated@@591) ($generated@@175 $generated@@592))))
 :pattern ( ($generated@@185 $generated@@591 ($generated@@175 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@170) (= (type $generated@@594) $generated@@70)) ($generated@@185 $generated@@593 ($generated@@458 $generated@@594))) (and (= ($generated@@235 ($generated@@301 ($generated@@229 $generated@@170) $generated@@593)) $generated@@593) ($generated@@154 ($generated@@301 ($generated@@229 $generated@@170) $generated@@593) ($generated@@458 $generated@@594))))
 :pattern ( ($generated@@185 $generated@@593 ($generated@@458 $generated@@594)))
)))
(assert (= ($generated@@81 $generated@@181) $generated@@64))
(assert (= ($generated@@581 $generated@@181) $generated@@68))
(assert (= ($generated@@81 $generated@@147) $generated@@66))
(assert (= ($generated@@581 $generated@@147) $generated@@68))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@595 ($generated@@175 $generated@@596) $generated@@597) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@595 $generated@@598)))) ($generated@@215 $generated@@598 $generated@@596 $generated@@597))
 :pattern ( ($generated@@92 $generated@@595 $generated@@598))
))))
 :pattern ( ($generated@@85 $generated@@595 ($generated@@175 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@161) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@601) (and ($generated@@159 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@70) ($generated@@85 $generated@@599 ($generated@@160 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@85 $generated@@599 ($generated@@160 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@215 ($generated@@168 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@215 ($generated@@168 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@161) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@605) (and ($generated@@159 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@70) ($generated@@85 $generated@@603 ($generated@@160 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@85 $generated@@603 ($generated@@160 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@215 ($generated@@169 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@215 ($generated@@169 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@170) (= (type $generated@@608) $generated@@170)) (= ($generated@@184 ($generated@@211 $generated@@607) ($generated@@211 $generated@@608)) ($generated@@211 ($generated@@184 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@184 ($generated@@211 $generated@@607) ($generated@@211 $generated@@608)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@235 ($generated@@8 ($generated@@209 $generated@@609))) ($generated@@211 ($generated@@235 ($generated@@8 $generated@@609))))
 :pattern ( ($generated@@235 ($generated@@8 ($generated@@209 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ) (! (= ($generated@@235 ($generated@@211 $generated@@610)) ($generated@@211 ($generated@@235 $generated@@610)))
 :pattern ( ($generated@@235 ($generated@@211 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 ($generated@@230 (type $generated@@611))))
 (=> (and (= (type $generated@@611) ($generated@@229 $generated@@612)) (= ($generated@@228 $generated@@611) 0)) (= $generated@@611 ($generated@@227 $generated@@612))))
 :pattern ( ($generated@@228 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@614)))
 (=> (and (and (= (type $generated@@613) ($generated@@87 $generated@@616 $generated@@2)) (= (type $generated@@615) $generated@@2)) (<= 0 ($generated $generated@@615))) (= ($generated@@250 ($generated@@93 $generated@@613 $generated@@614 $generated@@615)) (+ (- ($generated@@250 $generated@@613) ($generated ($generated@@92 $generated@@613 $generated@@614))) ($generated $generated@@615)))))
 :pattern ( ($generated@@250 ($generated@@93 $generated@@613 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@618) $generated@@2)) ($generated@@85 $generated@@618 $generated@@46 $generated@@617))
 :pattern ( ($generated@@85 $generated@@618 $generated@@46 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@620) $generated@@3)) ($generated@@85 $generated@@620 $generated@@47 $generated@@619))
 :pattern ( ($generated@@85 $generated@@620 $generated@@47 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@622) $generated@@4)) ($generated@@85 $generated@@622 $generated@@44 $generated@@621))
 :pattern ( ($generated@@85 $generated@@622 $generated@@44 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@624) $generated@@416)) ($generated@@85 $generated@@624 $generated@@45 $generated@@623))
 :pattern ( ($generated@@85 $generated@@624 $generated@@45 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@626) $generated@@170)) ($generated@@85 $generated@@626 $generated@@48 $generated@@625))
 :pattern ( ($generated@@85 $generated@@626 $generated@@48 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@229 $generated@@170)) (= (type $generated@@628) $generated@@70)) (= ($generated@@154 $generated@@627 ($generated@@458 $generated@@628)) (forall (($generated@@629 Int) ) (!  (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@228 $generated@@627))) ($generated@@185 ($generated@@459 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@459 $generated@@627 $generated@@629))
))))
 :pattern ( ($generated@@154 $generated@@627 ($generated@@458 $generated@@628)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 Int) ) (!  (=> (= (type $generated@@631) ($generated@@229 $generated@@170)) (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@228 $generated@@631))) (< ($generated@@497 ($generated@@301 $generated@@161 ($generated@@459 $generated@@631 $generated@@632))) ($generated@@630 $generated@@631))))
 :pattern ( ($generated@@497 ($generated@@301 $generated@@161 ($generated@@459 $generated@@631 $generated@@632))))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@634) $generated@@70)) (= (type $generated@@635) $generated@@70)) ($generated@@154 $generated@@633 ($generated@@368 $generated@@634 $generated@@635))) (and (and ($generated@@154 ($generated@@256 $generated@@633) ($generated@@199 $generated@@634)) ($generated@@154 ($generated@@311 $generated@@633) ($generated@@199 $generated@@635))) ($generated@@154 ($generated@@342 $generated@@633) ($generated@@199 ($generated@@160 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@154 $generated@@633 ($generated@@368 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@637) $generated@@70)) (= (type $generated@@638) $generated@@70)) ($generated@@154 $generated@@636 ($generated@@376 $generated@@637 $generated@@638))) (and (and ($generated@@154 ($generated@@274 $generated@@636) ($generated@@204 $generated@@637)) ($generated@@154 ($generated@@322 $generated@@636) ($generated@@204 $generated@@638))) ($generated@@154 ($generated@@350 $generated@@636) ($generated@@204 ($generated@@160 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@154 $generated@@636 ($generated@@376 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@2) ($generated@@154 $generated@@639 $generated@@46))
 :pattern ( ($generated@@154 $generated@@639 $generated@@46))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@3) ($generated@@154 $generated@@640 $generated@@47))
 :pattern ( ($generated@@154 $generated@@640 $generated@@47))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@4) ($generated@@154 $generated@@641 $generated@@44))
 :pattern ( ($generated@@154 $generated@@641 $generated@@44))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@416) ($generated@@154 $generated@@642 $generated@@45))
 :pattern ( ($generated@@154 $generated@@642 $generated@@45))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@170) ($generated@@154 $generated@@643 $generated@@48))
 :pattern ( ($generated@@154 $generated@@643 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(declare-fun $generated@@649 () Int)
(assert  (and (and (and (= (type $generated@@644) ($generated@@515 $generated@@88 $generated@@4)) (= (type $generated@@645) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@646) $generated@@88)) (= (type $generated@@647) ($generated@@515 $generated@@88 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@650  (=> (= $generated@@644 ($generated@@514 $generated@@148 $generated@@645 $generated@@60 $generated@@646)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@73 (type $generated@@652))))
 (=> (and (= (type $generated@@651) $generated@@88) (= (type $generated@@652) ($generated@@72 $generated@@653))) (=> (and (and (not (= $generated@@651 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@645 $generated@@651) $generated@@60))) (= $generated@@651 $generated@@646)) ($generated@@0 ($generated@@513 $generated@@644 $generated@@651 $generated@@652)))))
 :no-pattern (type $generated@@651)
 :no-pattern (type $generated@@652)
 :no-pattern ($generated $generated@@651)
 :no-pattern ($generated@@0 $generated@@651)
 :no-pattern ($generated $generated@@652)
 :no-pattern ($generated@@0 $generated@@652)
))) (=> (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@73 (type $generated@@655))))
 (=> (and (= (type $generated@@654) $generated@@88) (= (type $generated@@655) ($generated@@72 $generated@@656))) (=> (and (and (not (= $generated@@654 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@645 $generated@@654) $generated@@60))) (= $generated@@654 $generated@@646)) ($generated@@0 ($generated@@513 $generated@@644 $generated@@654 $generated@@655)))))
 :no-pattern (type $generated@@654)
 :no-pattern (type $generated@@655)
 :no-pattern ($generated $generated@@654)
 :no-pattern ($generated@@0 $generated@@654)
 :no-pattern ($generated $generated@@655)
 :no-pattern ($generated@@0 $generated@@655)
)) (=> (and (and (= $generated@@647 ($generated@@569 $generated@@148 $generated@@645 $generated@@60 $generated@@646)) (= (ControlFlow 0 2) (- 0 1))) true) (= ($generated ($generated@@94 ($generated@@92 $generated@@645 $generated@@646) $generated@@151)) ($generated@@209 10))))))))
(let (($generated@@657  (=> (and ($generated@@152 $generated@@645) ($generated@@648 $generated@@645)) (=> (and (and ($generated@@154 $generated@@646 $generated@@181) ($generated@@85 $generated@@646 $generated@@181 $generated@@645)) (and (= 1 $generated@@649) (= (ControlFlow 0 4) 2))) $generated@@650))))
$generated@@657)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () Int)
(assert  (and (and (= (type $generated@@188) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@189) $generated@@46)) (= (type $generated@@190) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@195  (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@181 (= $generated@@182 ($generated@@162 10))))))
(let (($generated@@196  (=> (< $generated@@183 10) (=> (and (and (= $generated@@184 (- 10 $generated@@183)) (= $generated@@181 true)) (and (= $generated@@182 $generated@@185) (= (ControlFlow 0 6) 4))) $generated@@195))))
(let (($generated@@197  (=> (<= 10 $generated@@183) (=> (and (and (= $generated@@186 ($generated@@162 10)) (= $generated@@181 false)) (and (= $generated@@182 $generated@@186) (= (ControlFlow 0 5) 4))) $generated@@195))))
(let (($generated@@198  (=> $generated@@187 (and (=> (= (ControlFlow 0 7) 5) $generated@@197) (=> (= (ControlFlow 0 7) 6) $generated@@196)))))
(let (($generated@@199 true))
(let (($generated@@200  (and (=> (= (ControlFlow 0 8) 2) $generated@@199) (=> (= (ControlFlow 0 8) 7) $generated@@198))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (and (and (and (= $generated@@188 ($generated@@107 $generated@@189 $generated@@190 $generated@@50 false)) (= $generated@@183 ($generated@@162 0))) (and (= $generated@@191 (- 10 $generated@@183)) (forall (($generated@@203 T@U) ) (!  (=> (= (type $generated@@203) $generated@@46) (=> (and (not (= $generated@@203 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@190 $generated@@203) $generated@@50))) (= ($generated@@49 $generated@@190 $generated@@203) ($generated@@49 $generated@@190 $generated@@203))))
 :pattern ( ($generated@@49 $generated@@190 $generated@@203))
)))) (and (and ($generated@@44 $generated@@190 $generated@@190) (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@55 (type $generated@@205))))
 (=> (and (and (= (type $generated@@204) $generated@@46) (= (type $generated@@205) ($generated@@54 $generated@@206))) (and (not (= $generated@@204 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@190 $generated@@204) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@190 $generated@@204) $generated@@205) ($generated@@48 ($generated@@49 $generated@@190 $generated@@204) $generated@@205)) ($generated@@0 ($generated@@106 $generated@@188 $generated@@204 $generated@@205)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@190 $generated@@204) $generated@@205))
))) (and (<= (- 10 $generated@@183) $generated@@191) (=> (= (- 10 $generated@@183) $generated@@191) true)))) (and (=> (= (ControlFlow 0 9) 1) $generated@@201) (=> (= (ControlFlow 0 9) 8) $generated@@200)))))
(let (($generated@@207  (=> (and (and ($generated@@192 $generated@@190) ($generated@@193 $generated@@190)) (and (= 0 $generated@@194) (= (ControlFlow 0 10) 9))) $generated@@202)))
$generated@@207))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (and (and (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (= (ControlFlow 0 2) (- 0 1))) true) (= $generated@@177 ($generated@@157 10)))))
(let (($generated@@182  (=> (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (= 0 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (and (and (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (= (ControlFlow 0 2) (- 0 1))) true) (= $generated@@177 ($generated@@157 10)))))
(let (($generated@@182  (=> (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (= 0 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (Int) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@188 (T@U T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@203 (T@U T@U T@U) T@U)
(declare-fun $generated@@204 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@205 (T@T T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 (T@T T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@283 (T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (Int) Int)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@308 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@345 (T@U) Int)
(declare-fun $generated@@346 (T@T) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@T T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@T) T@U)
(declare-fun $generated@@371 (T@T T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@387 (T@U T@U) Bool)
(declare-fun $generated@@393 (T@U) Bool)
(declare-fun $generated@@403 (T@T T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@478 (T@U T@U) T@U)
(declare-fun $generated@@486 (T@U T@U) T@U)
(declare-fun $generated@@497 (T@T) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@570 (T@U Int) T@U)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@608 (T@U) Int)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@675 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 6) (= (type $generated@@44) $generated@@79)) (= (type $generated@@45) $generated@@79)) (= (type $generated@@46) $generated@@79)) (= (type $generated@@47) $generated@@79)) (= (type $generated@@48) $generated@@79)) (= ($generated@@1 $generated@@80) 7)) (= (type $generated@@49) $generated@@80)) (= (type $generated@@50) $generated@@80)) (= (type $generated@@51) $generated@@80)) (= (type $generated@@52) $generated@@80)) (= (type $generated@@53) $generated@@80)) (= (type $generated@@54) $generated@@80)) (= (type $generated@@55) $generated@@80)) (= (type $generated@@56) $generated@@80)) (= (type $generated@@57) $generated@@80)) (= (type $generated@@58) $generated@@80)) (= (type $generated@@59) $generated@@80)) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@87)) 8))) (forall (($generated@@88 T@T) ) (! (= ($generated@@82 ($generated@@81 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@81 $generated@@88))
))) (= (type $generated@@60) ($generated@@81 $generated@@4))) (= ($generated@@1 $generated@@83) 9)) (= (type $generated@@61) $generated@@83)) (= (type $generated@@62) $generated@@80)) (= (type $generated@@63) $generated@@80)) (= ($generated@@1 $generated@@84) 10)) (= (type $generated@@64) $generated@@84)) (= (type $generated@@65) $generated@@80)) (= (type $generated@@66) $generated@@80)) (= (type $generated@@67) $generated@@80)) (= (type $generated@@68) $generated@@80)) (= ($generated@@1 $generated@@85) 11)) (= (type $generated@@69) $generated@@85)) (= (type $generated@@70) $generated@@80)) (= ($generated@@1 $generated@@86) 12)) (= (type $generated@@71) $generated@@86)) (= (type $generated@@72) $generated@@86)) (= (type $generated@@73) $generated@@86)) (= (type $generated@@74) $generated@@86)) (= (type $generated@@75) $generated@@83)) (= (type $generated@@76) $generated@@83)) (= (type $generated@@77) $generated@@83)) (= (type $generated@@78) $generated@@83)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78)
)
(assert (= ($generated@@89 $generated@@60) 0))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@80)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert (forall (($generated@@93 T@U) ) (! (= (type ($generated@@92 $generated@@93)) $generated@@83)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (= ($generated@@92 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@105 $generated@@106)) 13)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@96 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@96 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@100 (type $generated@@111))))
(= (type ($generated@@101 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@101 $generated@@111 $generated@@112))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 (type $generated@@116)))
(let (($generated@@118 (type $generated@@115)))
(= (type ($generated@@102 $generated@@114 $generated@@115 $generated@@116)) ($generated@@96 $generated@@118 $generated@@117))))
 :pattern ( ($generated@@102 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@100 (type $generated@@119))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@101 ($generated@@102 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@101 ($generated@@102 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@101 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@101 $generated@@128 $generated@@130)))
 :weight 0
)))) (= ($generated@@1 $generated@@97) 14)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@82 (type $generated@@132))))
(= (type ($generated@@103 $generated@@131 $generated@@132)) $generated@@133))
 :pattern ( ($generated@@103 $generated@@131 $generated@@132))
))) (= ($generated@@1 $generated@@98) 15)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= (type ($generated@@104 $generated@@134 $generated@@135 $generated@@136)) $generated@@98)
 :pattern ( ($generated@@104 $generated@@134 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@82 (type $generated@@138))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@103 ($generated@@104 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@103 ($generated@@104 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@103 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@103 ($generated@@104 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@103 $generated@@146 $generated@@148)))
 :weight 0
)))) (forall (($generated@@149 Int) ) (! (= (type ($generated@@95 $generated@@149)) $generated@@79)
 :pattern ( ($generated@@95 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
 :pattern ( ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@154) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@152 $generated@@153 $generated@@154)) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@97) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@153 $generated@@155) $generated@@60))) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@154 $generated@@155) $generated@@60)))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@154 $generated@@155) $generated@@60))
)))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert  (and (= (type $generated@@156) $generated@@79) (= (type $generated@@157) $generated@@97)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@97) (= (type $generated@@159) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@158 $generated@@156 $generated@@159)  (or (= $generated@@158 $generated@@157) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@159 $generated@@158) $generated@@60)))))
 :pattern ( ($generated@@94 $generated@@158 $generated@@156 $generated@@159))
)))
(assert (= (type $generated@@160) $generated@@79))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@97) (= (type $generated@@162) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@161 $generated@@160 $generated@@162)  (or (= $generated@@161 $generated@@157) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@162 $generated@@161) $generated@@60)))))
 :pattern ( ($generated@@94 $generated@@161 $generated@@160 $generated@@162))
)))
(assert (= (type $generated@@163) $generated@@79))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@97) (= (type $generated@@165) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@164 $generated@@163 $generated@@165)  (or (= $generated@@164 $generated@@157) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@165 $generated@@164) $generated@@60)))))
 :pattern ( ($generated@@94 $generated@@164 $generated@@163 $generated@@165))
)))
(assert  (and (= (type $generated@@166) ($generated@@81 $generated@@2)) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@79)
 :pattern ( ($generated@@168 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@172) $generated@@97)) (and ($generated@@167 $generated@@171) (and (not (= $generated@@172 $generated@@157)) (= ($generated@@168 $generated@@172) $generated@@163)))) ($generated@@169 ($generated@@103 ($generated@@101 $generated@@171 $generated@@172) $generated@@166) $generated@@46))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@171 $generated@@172) $generated@@166))
)))
(assert (= (type $generated@@173) ($generated@@81 $generated@@2)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@175) $generated@@97)) (and ($generated@@167 $generated@@174) (and (not (= $generated@@175 $generated@@157)) (= ($generated@@168 $generated@@175) $generated@@163)))) ($generated@@169 ($generated@@103 ($generated@@101 $generated@@174 $generated@@175) $generated@@173) $generated@@46))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@174 $generated@@175) $generated@@173))
)))
(assert (= (type $generated@@176) ($generated@@81 $generated@@2)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@178) $generated@@97)) (and ($generated@@167 $generated@@177) (and (not (= $generated@@178 $generated@@157)) (= ($generated@@168 $generated@@178) $generated@@163)))) ($generated@@169 ($generated@@103 ($generated@@101 $generated@@177 $generated@@178) $generated@@176) $generated@@46))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@177 $generated@@178) $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@2) ($generated@@169 $generated@@179 ($generated@@95 0)))
 :pattern ( ($generated@@169 $generated@@179 ($generated@@95 0)))
)))
(assert  (and (= ($generated@@1 $generated@@182) 16) (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@183 $generated@@184)) $generated@@79)
 :pattern ( ($generated@@181 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (and (= (type $generated@@185) $generated@@79) (= (type $generated@@186) $generated@@79)) (= (type $generated@@187) $generated@@182)) ($generated@@169 $generated@@187 ($generated@@181 $generated@@185 $generated@@186))) ($generated@@180 $generated@@187))
 :pattern ( ($generated@@180 $generated@@187) ($generated@@169 $generated@@187 ($generated@@181 $generated@@185 $generated@@186)))
)))
(assert  (and (and (= ($generated@@1 $generated@@191) 17) (forall (($generated@@192 T@U) ) (! (= (type ($generated@@189 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@192))
))) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@191)
 :pattern ( ($generated@@190 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@182) (= (type $generated@@195) $generated@@182)) true) (= ($generated@@188 $generated@@194 $generated@@195)  (and (= ($generated@@189 $generated@@194) ($generated@@189 $generated@@195)) (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)))))
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@79)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@96 $generated@@191 $generated@@2)) (= (type $generated@@200) $generated@@79)) ($generated@@169 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@169 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert (forall (($generated@@201 T@U) ) (!  (=> (= (type $generated@@201) $generated@@97) (= ($generated@@169 $generated@@201 $generated@@160)  (or (= $generated@@201 $generated@@157) (= ($generated@@168 $generated@@201) $generated@@160))))
 :pattern ( ($generated@@169 $generated@@201 $generated@@160))
)))
(assert (forall (($generated@@202 T@U) ) (!  (=> (= (type $generated@@202) $generated@@97) (= ($generated@@169 $generated@@202 $generated@@163)  (or (= $generated@@202 $generated@@157) (= ($generated@@168 $generated@@202) $generated@@163))))
 :pattern ( ($generated@@169 $generated@@202 $generated@@163))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@205 $generated@@209 $generated@@210)) 18)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@205 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@207 ($generated@@205 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@205 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@203 $generated@@215 $generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@203 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 (type $generated@@222)))
(let (($generated@@224 (type $generated@@220)))
(= (type ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@205 $generated@@224 $generated@@223))))
 :pattern ( ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@207 (type $generated@@225))))
 (=> (= (type $generated@@228) $generated@@229) (= ($generated@@203 ($generated@@208 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@226 $generated@@227) $generated@@228)))
 :weight 0
))) (and (and (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@203 ($generated@@208 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@203 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@203 ($generated@@208 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@203 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or true (= ($generated@@203 ($generated@@208 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@203 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
)))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ) (! (= (type ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@205 $generated@@97 $generated@@4))
 :pattern ( ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@82 (type $generated@@257))))
 (=> (and (and (and (and (= (type $generated@@252) $generated@@97) (= (type $generated@@253) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@254) ($generated@@81 $generated@@4))) (= (type $generated@@256) $generated@@97)) (= (type $generated@@257) ($generated@@81 $generated@@258))) (= ($generated@@0 ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (not (= $generated@@256 $generated@@252)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@253 $generated@@256) $generated@@254))) $generated@@255))))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (= (type $generated@@259) $generated@@79))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@97) (= (type $generated@@261) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@260 $generated@@259 $generated@@261) ($generated@@94 $generated@@260 $generated@@156 $generated@@261)))
 :pattern ( ($generated@@94 $generated@@260 $generated@@259 $generated@@261))
)))
(assert (= (type $generated@@262) $generated@@79))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@97) (= (type $generated@@264) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@263 $generated@@262 $generated@@264) ($generated@@94 $generated@@263 $generated@@160 $generated@@264)))
 :pattern ( ($generated@@94 $generated@@263 $generated@@262 $generated@@264))
)))
(assert (= (type $generated@@265) $generated@@79))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@97) (= (type $generated@@267) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@266 $generated@@265 $generated@@267) ($generated@@94 $generated@@266 $generated@@163 $generated@@267)))
 :pattern ( ($generated@@94 $generated@@266 $generated@@265 $generated@@267))
)))
(assert (= (type $generated@@268) ($generated@@81 ($generated@@96 $generated@@191 $generated@@4))))
(assert (= ($generated@@89 $generated@@268) 0))
(assert (forall (($generated@@270 T@T) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (= (type ($generated@@269 $generated@@270 $generated@@271 $generated@@272)) ($generated@@81 $generated@@270))
 :pattern ( ($generated@@269 $generated@@270 $generated@@271 $generated@@272))
)))
(assert (= ($generated@@269 ($generated@@96 $generated@@191 $generated@@4) $generated@@69 $generated@@75) $generated@@268))
(assert ($generated@@273 $generated@@268))
(assert (= ($generated@@89 $generated@@176) 0))
(assert (= ($generated@@269 $generated@@2 $generated@@69 $generated@@78) $generated@@176))
(assert ($generated@@273 $generated@@176))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! (= (type ($generated@@274 $generated@@276 $generated@@277)) $generated@@182)
 :pattern ( ($generated@@274 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) $generated@@79) (= (type $generated@@279) $generated@@79)) (= (type $generated@@280) $generated@@191)) (= (type $generated@@281) $generated@@191)) (= ($generated@@169 ($generated@@274 $generated@@280 $generated@@281) ($generated@@181 $generated@@278 $generated@@279))  (and ($generated@@275 $generated@@280 $generated@@278) ($generated@@275 $generated@@281 $generated@@279))))
 :pattern ( ($generated@@169 ($generated@@274 $generated@@280 $generated@@281) ($generated@@181 $generated@@278 $generated@@279)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@191)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert  (=> true (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (= (type $generated@@286) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@287) $generated@@97)) (or ($generated@@283 $generated@@286 $generated@@287) (and ($generated@@167 $generated@@286) (and (not (= $generated@@287 $generated@@157)) (and ($generated@@169 $generated@@287 $generated@@265) ($generated@@94 $generated@@287 $generated@@265 $generated@@286)))))) (= ($generated@@282 $generated@@286 $generated@@287)  (and ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@286 $generated@@287) $generated@@268) ($generated@@284 $generated@@287))) (= ($generated ($generated@@103 ($generated@@101 $generated@@286 $generated@@287) $generated@@176)) (- ($generated ($generated@@103 ($generated@@101 $generated@@286 $generated@@287) $generated@@166)) ($generated ($generated@@103 ($generated@@101 $generated@@286 $generated@@287) $generated@@173)))))))
 :pattern ( ($generated@@282 $generated@@286 $generated@@287) ($generated@@167 $generated@@286))
))))
(assert (= ($generated@@89 $generated@@166) 0))
(assert (= ($generated@@269 $generated@@2 $generated@@69 $generated@@76) $generated@@166))
(assert  (not ($generated@@273 $generated@@166)))
(assert (= ($generated@@89 $generated@@173) 0))
(assert (= ($generated@@269 $generated@@2 $generated@@69 $generated@@77) $generated@@173))
(assert  (not ($generated@@273 $generated@@173)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@182) (= (type $generated@@289) $generated@@182)) (= ($generated@@188 $generated@@288 $generated@@289) (= $generated@@288 $generated@@289)))
 :pattern ( ($generated@@188 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@79)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@96 $generated@@191 $generated@@4)) (= (type $generated@@293) $generated@@79)) (= ($generated@@169 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@191) ($generated@@0 ($generated@@101 $generated@@292 $generated@@294))) ($generated@@275 $generated@@294 $generated@@293))
 :pattern ( ($generated@@101 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@169 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@79)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) ($generated@@96 $generated@@191 $generated@@4)) (= (type $generated@@298) $generated@@79)) (= ($generated@@169 $generated@@297 ($generated@@295 $generated@@298)) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@191) ($generated@@0 ($generated@@101 $generated@@297 $generated@@299))) ($generated@@275 $generated@@299 $generated@@298))
 :pattern ( ($generated@@101 $generated@@297 $generated@@299))
))))
 :pattern ( ($generated@@169 $generated@@297 ($generated@@295 $generated@@298)))
)))
(assert (forall (($generated@@301 Int) ) (! (= ($generated@@300 $generated@@301) $generated@@301)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 (type $generated@@303)))
(= (type ($generated@@302 $generated@@303)) $generated@@304))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= ($generated@@302 $generated@@305) $generated@@305)
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert  (=> true (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (= (type $generated@@306) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@307) $generated@@97)) (or ($generated@@283 $generated@@306 $generated@@307) (and ($generated@@167 $generated@@306) (and (not (= $generated@@307 $generated@@157)) (and ($generated@@169 $generated@@307 $generated@@265) ($generated@@94 $generated@@307 $generated@@265 $generated@@306)))))) ($generated@@282 $generated@@306 $generated@@307)) ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@306 $generated@@307) $generated@@268) ($generated@@284 $generated@@307))))
 :pattern ( ($generated@@282 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@309) $generated@@79) (= (type $generated@@310) $generated@@79)) (= (type $generated@@311) $generated@@191)) (= (type $generated@@312) $generated@@191)) (= (type $generated@@313) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@167 $generated@@313)) (= ($generated@@94 ($generated@@274 $generated@@311 $generated@@312) ($generated@@181 $generated@@309 $generated@@310) $generated@@313)  (and ($generated@@308 $generated@@311 $generated@@309 $generated@@313) ($generated@@308 $generated@@312 $generated@@310 $generated@@313))))
 :pattern ( ($generated@@94 ($generated@@274 $generated@@311 $generated@@312) ($generated@@181 $generated@@309 $generated@@310) $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@84)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@182) (= ($generated@@180 $generated@@316) (= ($generated@@314 $generated@@316) $generated@@64)))
 :pattern ( ($generated@@180 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@182) ($generated@@180 $generated@@317)) (exists (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (and (and (= (type $generated@@318) $generated@@191) (= (type $generated@@319) $generated@@191)) (= $generated@@317 ($generated@@274 $generated@@318 $generated@@319)))
 :no-pattern (type $generated@@318)
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
)))
 :pattern ( ($generated@@180 $generated@@317))
)))
(assert  (and (and (forall (($generated@@324 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@324)) 19)) (forall (($generated@@325 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@322 $generated@@325))
))) (forall (($generated@@326 T@T) ) (! (= (type ($generated@@320 $generated@@326)) ($generated@@322 $generated@@326))
 :pattern ( ($generated@@320 $generated@@326))
))))
(assert (forall (($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@327)) 0)
 :pattern ( ($generated@@320 $generated@@327))
)))
(assert ($generated@@273 $generated@@60))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@79) (= (type $generated@@330) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@308 ($generated@@284 $generated@@328) $generated@@329 $generated@@330) ($generated@@94 $generated@@328 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@308 ($generated@@284 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@331) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@332) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@333) $generated@@191)) (= (type $generated@@334) $generated@@79)) ($generated@@152 $generated@@331 $generated@@332)) ($generated@@308 $generated@@333 $generated@@334 $generated@@331)) ($generated@@308 $generated@@333 $generated@@334 $generated@@332))
 :pattern ( ($generated@@152 $generated@@331 $generated@@332) ($generated@@308 $generated@@333 $generated@@334 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@335) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@336) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@338) $generated@@79)) ($generated@@152 $generated@@335 $generated@@336)) ($generated@@94 $generated@@337 $generated@@338 $generated@@335)) ($generated@@94 $generated@@337 $generated@@338 $generated@@336))
 :pattern ( ($generated@@152 $generated@@335 $generated@@336) ($generated@@94 $generated@@337 $generated@@338 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@340) $generated@@97)) (=> (and (and ($generated@@167 $generated@@339) (and (not (= $generated@@340 $generated@@157)) (= ($generated@@168 $generated@@340) $generated@@163))) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@339 $generated@@340) $generated@@60))) ($generated@@94 ($generated@@103 ($generated@@101 $generated@@339 $generated@@340) $generated@@166) $generated@@46 $generated@@339)))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@339 $generated@@340) $generated@@166))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@342) $generated@@97)) (=> (and (and ($generated@@167 $generated@@341) (and (not (= $generated@@342 $generated@@157)) (= ($generated@@168 $generated@@342) $generated@@163))) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@341 $generated@@342) $generated@@60))) ($generated@@94 ($generated@@103 ($generated@@101 $generated@@341 $generated@@342) $generated@@173) $generated@@46 $generated@@341)))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@341 $generated@@342) $generated@@173))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@344) $generated@@97)) (=> (and (and ($generated@@167 $generated@@343) (and (not (= $generated@@344 $generated@@157)) (= ($generated@@168 $generated@@344) $generated@@163))) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@343 $generated@@344) $generated@@60))) ($generated@@94 ($generated@@103 ($generated@@101 $generated@@343 $generated@@344) $generated@@176) $generated@@46 $generated@@343)))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@343 $generated@@344) $generated@@176))
)))
(assert (forall (($generated@@347 T@T) ) (! (= (type ($generated@@346 $generated@@347)) ($generated@@96 $generated@@347 $generated@@2))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@99 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@96 $generated@@349 $generated@@2)) (and (= (= ($generated@@345 $generated@@348) 0) (= $generated@@348 ($generated@@346 $generated@@349))) (=> (not (= ($generated@@345 $generated@@348) 0)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) (< 0 ($generated ($generated@@101 $generated@@348 $generated@@350))))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert  (and (and (and (and (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (= ($generated@@1 ($generated@@353 $generated@@356 $generated@@357)) 20)) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@353 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@355 ($generated@@353 $generated@@360 $generated@@361)) $generated@@361)
 :pattern ( ($generated@@353 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@354 (type $generated@@362))))
(= (type ($generated@@351 $generated@@362)) ($generated@@96 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@362))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= (type ($generated@@352 $generated@@364 $generated@@365)) ($generated@@353 $generated@@364 $generated@@365))
 :pattern ( ($generated@@352 $generated@@364 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@T) ) (! (let (($generated@@368 (type $generated@@366)))
 (not ($generated@@0 ($generated@@101 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366))))
 :pattern ( (let (($generated@@368 (type $generated@@366)))
($generated@@101 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366)))
)))
(assert  (and (and (and (and (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (= ($generated@@1 ($generated@@371 $generated@@374 $generated@@375)) 21)) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= ($generated@@372 ($generated@@371 $generated@@376 $generated@@377)) $generated@@376)
 :pattern ( ($generated@@371 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= ($generated@@373 ($generated@@371 $generated@@378 $generated@@379)) $generated@@379)
 :pattern ( ($generated@@371 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@372 (type $generated@@380))))
(= (type ($generated@@369 $generated@@380)) ($generated@@96 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@380))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= (type ($generated@@370 $generated@@382 $generated@@383)) ($generated@@371 $generated@@382 $generated@@383))
 :pattern ( ($generated@@370 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@T) ) (! (let (($generated@@386 (type $generated@@384)))
 (not ($generated@@0 ($generated@@101 ($generated@@369 ($generated@@370 $generated@@386 $generated@@385)) $generated@@384))))
 :pattern ( (let (($generated@@386 (type $generated@@384)))
($generated@@101 ($generated@@369 ($generated@@370 $generated@@386 $generated@@385)) $generated@@384)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@389) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@387 $generated@@388 $generated@@389)) (and ($generated@@152 $generated@@388 $generated@@389) (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@82 (type $generated@@391))))
 (=> (and (and (= (type $generated@@390) $generated@@97) (= (type $generated@@391) ($generated@@81 $generated@@392))) (not ($generated@@273 $generated@@391))) (= ($generated@@103 ($generated@@101 $generated@@388 $generated@@390) $generated@@391) ($generated@@103 ($generated@@101 $generated@@389 $generated@@390) $generated@@391))))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@389 $generated@@390) $generated@@391))
))))
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@395) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@396) $generated@@97)) (=> (and (and (and ($generated@@167 $generated@@394) ($generated@@167 $generated@@395)) (and (not (= $generated@@396 $generated@@157)) ($generated@@169 $generated@@396 $generated@@265))) (and ($generated@@393 $generated@@394) ($generated@@152 $generated@@394 $generated@@395))) (=> (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@82 (type $generated@@398))))
 (=> (and (and (= (type $generated@@397) $generated@@97) (= (type $generated@@398) ($generated@@81 $generated@@399))) (and (not (= $generated@@397 $generated@@157)) (or (= $generated@@397 $generated@@396) ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@394 $generated@@396) $generated@@268) ($generated@@284 $generated@@397)))))) (= ($generated@@103 ($generated@@101 $generated@@394 $generated@@397) $generated@@398) ($generated@@103 ($generated@@101 $generated@@395 $generated@@397) $generated@@398))))
 :no-pattern (type $generated@@397)
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
)) (= ($generated@@282 $generated@@394 $generated@@396) ($generated@@282 $generated@@395 $generated@@396)))))
 :pattern ( ($generated@@393 $generated@@394) ($generated@@152 $generated@@394 $generated@@395) ($generated@@282 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@99 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@96 $generated@@401 $generated@@2)) (= ($generated@@197 $generated@@400) (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@401) (and (<= 0 ($generated ($generated@@101 $generated@@400 $generated@@402))) (<= ($generated ($generated@@101 $generated@@400 $generated@@402)) ($generated@@345 $generated@@400))))
 :pattern ( ($generated@@101 $generated@@400 $generated@@402))
)))))
 :pattern ( ($generated@@197 $generated@@400))
)))
(assert (forall (($generated@@404 T@T) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@404)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@191) ($generated@@275 $generated@@406 $generated@@156)) (and (= ($generated@@284 ($generated@@403 $generated@@97 $generated@@406)) $generated@@406) ($generated@@169 ($generated@@403 $generated@@97 $generated@@406) $generated@@156)))
 :pattern ( ($generated@@275 $generated@@406 $generated@@156))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@191) ($generated@@275 $generated@@407 $generated@@259)) (and (= ($generated@@284 ($generated@@403 $generated@@97 $generated@@407)) $generated@@407) ($generated@@169 ($generated@@403 $generated@@97 $generated@@407) $generated@@259)))
 :pattern ( ($generated@@275 $generated@@407 $generated@@259))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@191) ($generated@@275 $generated@@408 $generated@@160)) (and (= ($generated@@284 ($generated@@403 $generated@@97 $generated@@408)) $generated@@408) ($generated@@169 ($generated@@403 $generated@@97 $generated@@408) $generated@@160)))
 :pattern ( ($generated@@275 $generated@@408 $generated@@160))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@191) ($generated@@275 $generated@@409 $generated@@262)) (and (= ($generated@@284 ($generated@@403 $generated@@97 $generated@@409)) $generated@@409) ($generated@@169 ($generated@@403 $generated@@97 $generated@@409) $generated@@262)))
 :pattern ( ($generated@@275 $generated@@409 $generated@@262))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@191) ($generated@@275 $generated@@410 $generated@@265)) (and (= ($generated@@284 ($generated@@403 $generated@@97 $generated@@410)) $generated@@410) ($generated@@169 ($generated@@403 $generated@@97 $generated@@410) $generated@@265)))
 :pattern ( ($generated@@275 $generated@@410 $generated@@265))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@191) ($generated@@275 $generated@@411 $generated@@163)) (and (= ($generated@@284 ($generated@@403 $generated@@97 $generated@@411)) $generated@@411) ($generated@@169 ($generated@@403 $generated@@97 $generated@@411) $generated@@163)))
 :pattern ( ($generated@@275 $generated@@411 $generated@@163))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@97) (= ($generated@@169 $generated@@412 $generated@@259)  (and ($generated@@169 $generated@@412 $generated@@156) (not (= $generated@@412 $generated@@157)))))
 :pattern ( ($generated@@169 $generated@@412 $generated@@259))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@97) (= ($generated@@169 $generated@@413 $generated@@262)  (and ($generated@@169 $generated@@413 $generated@@160) (not (= $generated@@413 $generated@@157)))))
 :pattern ( ($generated@@169 $generated@@413 $generated@@262))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (= (type $generated@@414) $generated@@97) (= ($generated@@169 $generated@@414 $generated@@265)  (and ($generated@@169 $generated@@414 $generated@@163) (not (= $generated@@414 $generated@@157)))))
 :pattern ( ($generated@@169 $generated@@414 $generated@@265))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@355 (type $generated@@415))))
(let (($generated@@417 ($generated@@354 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@353 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@352 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) ($generated@@0 ($generated@@101 ($generated@@351 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@351 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@355 (type $generated@@420))))
(= (type ($generated@@419 $generated@@420)) ($generated@@96 $generated@@421 $generated@@4)))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@355 (type $generated@@422))))
(let (($generated@@424 ($generated@@354 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@353 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@352 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@423) ($generated@@0 ($generated@@101 ($generated@@419 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@419 $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@373 (type $generated@@426))))
(let (($generated@@428 ($generated@@372 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@371 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@370 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) ($generated@@0 ($generated@@101 ($generated@@369 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@369 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@373 (type $generated@@431))))
(= (type ($generated@@430 $generated@@431)) ($generated@@96 $generated@@432 $generated@@4)))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@373 (type $generated@@433))))
(let (($generated@@435 ($generated@@372 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@371 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@370 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@434) ($generated@@0 ($generated@@101 ($generated@@430 $generated@@433) $generated@@436)))
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@430 $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@96 $generated@@191 $generated@@2)) (= (type $generated@@438) $generated@@79)) (= ($generated@@169 $generated@@437 ($generated@@196 $generated@@438)) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@191) (< 0 ($generated ($generated@@101 $generated@@437 $generated@@439)))) ($generated@@275 $generated@@439 $generated@@438))
 :pattern ( ($generated@@101 $generated@@437 $generated@@439))
))))
 :pattern ( ($generated@@169 $generated@@437 ($generated@@196 $generated@@438)))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@440) ($generated@@96 $generated@@191 $generated@@4)) (= (type $generated@@441) $generated@@79)) (= (type $generated@@442) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@440 ($generated@@290 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@191) ($generated@@0 ($generated@@101 $generated@@440 $generated@@443))) ($generated@@308 $generated@@443 $generated@@441 $generated@@442))
 :pattern ( ($generated@@101 $generated@@440 $generated@@443))
))))
 :pattern ( ($generated@@94 $generated@@440 ($generated@@290 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@96 $generated@@191 $generated@@4)) (= (type $generated@@445) $generated@@79)) (= (type $generated@@446) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@444 ($generated@@295 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@191) ($generated@@0 ($generated@@101 $generated@@444 $generated@@447))) ($generated@@308 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@101 $generated@@444 $generated@@447))
))))
 :pattern ( ($generated@@94 $generated@@444 ($generated@@295 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(= ($generated ($generated@@101 ($generated@@346 $generated@@449) $generated@@448)) 0))
 :pattern ( (let (($generated@@449 (type $generated@@448)))
($generated@@101 ($generated@@346 $generated@@449) $generated@@448)))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@451) $generated@@97)) (=> (and (and ($generated@@167 $generated@@450) (and (not (= $generated@@451 $generated@@157)) (= ($generated@@168 $generated@@451) $generated@@163))) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@450 $generated@@451) $generated@@60))) ($generated@@94 ($generated@@103 ($generated@@101 $generated@@450 $generated@@451) $generated@@268) ($generated@@290 $generated@@259) $generated@@450)))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@450 $generated@@451) $generated@@268))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) ($generated@@96 $generated@@191 $generated@@4))
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@355 (type $generated@@455))))
(let (($generated@@457 ($generated@@354 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455)) ($generated@@96 $generated@@457 $generated@@456))))
 :pattern ( ($generated@@453 $generated@@455))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) ($generated@@353 $generated@@191 $generated@@191)) (= (type $generated@@459) $generated@@191)) (= ($generated@@0 ($generated@@101 ($generated@@452 $generated@@458) $generated@@459))  (and ($generated@@0 ($generated@@101 ($generated@@351 $generated@@458) ($generated@@189 ($generated@@403 $generated@@182 $generated@@459)))) (= ($generated@@101 ($generated@@453 $generated@@458) ($generated@@189 ($generated@@403 $generated@@182 $generated@@459))) ($generated@@190 ($generated@@403 $generated@@182 $generated@@459))))))
 :pattern ( ($generated@@101 ($generated@@452 $generated@@458) $generated@@459))
)))
(assert  (and (forall (($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@462)) ($generated@@96 $generated@@191 $generated@@4))
 :pattern ( ($generated@@460 $generated@@462))
)) (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@373 (type $generated@@463))))
(let (($generated@@465 ($generated@@372 (type $generated@@463))))
(= (type ($generated@@461 $generated@@463)) ($generated@@96 $generated@@465 $generated@@464))))
 :pattern ( ($generated@@461 $generated@@463))
))))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) ($generated@@371 $generated@@191 $generated@@191)) (= (type $generated@@467) $generated@@191)) (= ($generated@@0 ($generated@@101 ($generated@@460 $generated@@466) $generated@@467))  (and ($generated@@0 ($generated@@101 ($generated@@369 $generated@@466) ($generated@@189 ($generated@@403 $generated@@182 $generated@@467)))) (= ($generated@@101 ($generated@@461 $generated@@466) ($generated@@189 ($generated@@403 $generated@@182 $generated@@467))) ($generated@@190 ($generated@@403 $generated@@182 $generated@@467))))))
 :pattern ( ($generated@@101 ($generated@@460 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
(let (($generated@@471 ($generated@@354 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@353 $generated@@471 $generated@@470)) (= ($generated@@0 ($generated@@101 ($generated@@419 $generated@@468) $generated@@469)) (exists (($generated@@472 T@U) ) (!  (and (= (type $generated@@472) $generated@@471) (and ($generated@@0 ($generated@@101 ($generated@@351 $generated@@468) $generated@@472)) (= $generated@@469 ($generated@@101 ($generated@@453 $generated@@468) $generated@@472))))
 :pattern ( ($generated@@101 ($generated@@351 $generated@@468) $generated@@472))
 :pattern ( ($generated@@101 ($generated@@453 $generated@@468) $generated@@472))
))))))
 :pattern ( ($generated@@101 ($generated@@419 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@372 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@371 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@101 ($generated@@430 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@101 ($generated@@369 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@101 ($generated@@461 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@101 ($generated@@369 $generated@@473) $generated@@477))
 :pattern ( ($generated@@101 ($generated@@461 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@101 ($generated@@430 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@479 $generated@@480)) $generated@@79)
 :pattern ( ($generated@@478 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (and (= (type $generated@@481) ($generated@@353 $generated@@191 $generated@@191)) (= (type $generated@@482) $generated@@79)) (= (type $generated@@483) $generated@@79)) (= (type $generated@@484) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@481 ($generated@@478 $generated@@482 $generated@@483) $generated@@484) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@191) ($generated@@0 ($generated@@101 ($generated@@351 $generated@@481) $generated@@485))) (and ($generated@@308 ($generated@@101 ($generated@@453 $generated@@481) $generated@@485) $generated@@483 $generated@@484) ($generated@@308 $generated@@485 $generated@@482 $generated@@484)))
 :pattern ( ($generated@@101 ($generated@@453 $generated@@481) $generated@@485))
 :pattern ( ($generated@@101 ($generated@@351 $generated@@481) $generated@@485))
))))
 :pattern ( ($generated@@94 $generated@@481 ($generated@@478 $generated@@482 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@487 $generated@@488)) $generated@@79)
 :pattern ( ($generated@@486 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (and (= (type $generated@@489) ($generated@@371 $generated@@191 $generated@@191)) (= (type $generated@@490) $generated@@79)) (= (type $generated@@491) $generated@@79)) (= (type $generated@@492) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@489 ($generated@@486 $generated@@490 $generated@@491) $generated@@492) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@191) ($generated@@0 ($generated@@101 ($generated@@369 $generated@@489) $generated@@493))) (and ($generated@@308 ($generated@@101 ($generated@@461 $generated@@489) $generated@@493) $generated@@491 $generated@@492) ($generated@@308 $generated@@493 $generated@@490 $generated@@492)))
 :pattern ( ($generated@@101 ($generated@@461 $generated@@489) $generated@@493))
 :pattern ( ($generated@@101 ($generated@@369 $generated@@489) $generated@@493))
))))
 :pattern ( ($generated@@94 $generated@@489 ($generated@@486 $generated@@490 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@494) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@495) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@496) ($generated@@96 $generated@@97 $generated@@98))) (not (= $generated@@494 $generated@@496))) (and ($generated@@152 $generated@@494 $generated@@495) ($generated@@152 $generated@@495 $generated@@496))) ($generated@@152 $generated@@494 $generated@@496))
 :pattern ( ($generated@@152 $generated@@494 $generated@@495) ($generated@@152 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@T) ) (! (= (type ($generated@@497 $generated@@498)) ($generated@@96 $generated@@498 $generated@@4))
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@373 (type $generated@@499))))
(let (($generated@@501 ($generated@@372 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@371 $generated@@501 $generated@@500)) (= (= $generated@@499 ($generated@@370 $generated@@501 $generated@@500)) (= ($generated@@369 $generated@@499) ($generated@@497 $generated@@501))))))
 :pattern ( ($generated@@369 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@373 (type $generated@@502))))
(let (($generated@@504 ($generated@@372 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@371 $generated@@504 $generated@@503)) (= (= $generated@@502 ($generated@@370 $generated@@504 $generated@@503)) (= ($generated@@430 $generated@@502) ($generated@@497 $generated@@503))))))
 :pattern ( ($generated@@430 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@373 (type $generated@@505))))
(let (($generated@@507 ($generated@@372 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@371 $generated@@507 $generated@@506)) (= (= $generated@@505 ($generated@@370 $generated@@507 $generated@@506)) (= ($generated@@460 $generated@@505) ($generated@@497 $generated@@191))))))
 :pattern ( ($generated@@460 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@355 (type $generated@@508))))
(let (($generated@@510 ($generated@@354 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@353 $generated@@510 $generated@@509)) (or (= $generated@@508 ($generated@@352 $generated@@510 $generated@@509)) (exists (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (and (and (= (type $generated@@511) $generated@@191) (= (type $generated@@512) $generated@@191)) ($generated@@0 ($generated@@101 ($generated@@452 $generated@@508) ($generated@@284 ($generated@@274 $generated@@511 $generated@@512)))))
 :no-pattern (type $generated@@511)
 :no-pattern (type $generated@@512)
 :no-pattern ($generated $generated@@511)
 :no-pattern ($generated@@0 $generated@@511)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
))))))
 :pattern ( ($generated@@452 $generated@@508))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@373 (type $generated@@513))))
(let (($generated@@515 ($generated@@372 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@371 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@370 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@191) (= (type $generated@@517) $generated@@191)) ($generated@@0 ($generated@@101 ($generated@@460 $generated@@513) ($generated@@284 ($generated@@274 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@460 $generated@@513))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@85)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@T) ) (!  (=> (and (= (type $generated@@520) $generated@@85) (= (type $generated@@521) $generated@@83)) (and (= ($generated@@518 ($generated@@269 $generated@@522 $generated@@520 $generated@@521)) $generated@@520) (= ($generated@@92 ($generated@@269 $generated@@522 $generated@@520 $generated@@521)) $generated@@521)))
 :pattern ( ($generated@@269 $generated@@522 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@191) ($generated@@275 $generated@@523 $generated@@46)) (and (= ($generated@@284 ($generated@@403 $generated@@2 $generated@@523)) $generated@@523) ($generated@@169 ($generated@@403 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@275 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@191) ($generated@@275 $generated@@524 $generated@@47)) (and (= ($generated@@284 ($generated@@403 $generated@@3 $generated@@524)) $generated@@524) ($generated@@169 ($generated@@403 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@275 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@191) ($generated@@275 $generated@@525 $generated@@44)) (and (= ($generated@@284 ($generated@@403 $generated@@4 $generated@@525)) $generated@@525) ($generated@@169 ($generated@@403 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@275 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 22))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@191) ($generated@@275 $generated@@527 $generated@@45)) (and (= ($generated@@284 ($generated@@403 $generated@@526 $generated@@527)) $generated@@527) ($generated@@169 ($generated@@403 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@275 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@79) (= ($generated@@275 ($generated@@284 $generated@@528) $generated@@529) ($generated@@169 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@275 ($generated@@284 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@99 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@96 $generated@@531 $generated@@2)) (<= 0 ($generated@@345 $generated@@530))))
 :pattern ( ($generated@@345 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@323 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@322 $generated@@533)) (<= 0 ($generated@@321 $generated@@532))))
 :pattern ( ($generated@@321 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@79)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@79) (= (type $generated@@537) $generated@@79)) (= ($generated@@534 ($generated@@478 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@478 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@79)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@79) (= (type $generated@@541) $generated@@79)) (= ($generated@@538 ($generated@@478 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@478 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@79) (= (type $generated@@543) $generated@@79)) (= ($generated@@90 ($generated@@478 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@478 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@79)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@79) (= (type $generated@@547) $generated@@79)) (= ($generated@@544 ($generated@@486 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@486 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@79)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@79) (= (type $generated@@551) $generated@@79)) (= ($generated@@548 ($generated@@486 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@486 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@79) (= (type $generated@@553) $generated@@79)) (= ($generated@@90 ($generated@@486 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@486 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@191) (= (type $generated@@555) $generated@@191)) (= ($generated@@314 ($generated@@274 $generated@@554 $generated@@555)) $generated@@64))
 :pattern ( ($generated@@274 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@79)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@79) (= (type $generated@@559) $generated@@79)) (= ($generated@@556 ($generated@@181 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@181 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@79)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@79) (= (type $generated@@563) $generated@@79)) (= ($generated@@560 ($generated@@181 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@181 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@191) (= (type $generated@@565) $generated@@191)) (= ($generated@@189 ($generated@@274 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@274 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@191) (= (type $generated@@567) $generated@@191)) (= ($generated@@190 ($generated@@274 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@274 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@97) ($generated@@169 $generated@@568 $generated@@156))
 :pattern ( ($generated@@169 $generated@@568 $generated@@156))
)))
(assert  (and (forall (($generated@@571 T@U) ) (! (= (type ($generated@@569 $generated@@571)) $generated@@79)
 :pattern ( ($generated@@569 $generated@@571))
)) (forall (($generated@@572 T@U) ($generated@@573 Int) ) (! (let (($generated@@574 ($generated@@323 (type $generated@@572))))
(= (type ($generated@@570 $generated@@572 $generated@@573)) $generated@@574))
 :pattern ( ($generated@@570 $generated@@572 $generated@@573))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@322 $generated@@191)) (= (type $generated@@576) $generated@@79)) (= (type $generated@@577) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@575 ($generated@@569 $generated@@576) $generated@@577) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@321 $generated@@575))) ($generated@@308 ($generated@@570 $generated@@575 $generated@@578) $generated@@576 $generated@@577))
 :pattern ( ($generated@@570 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@94 $generated@@575 ($generated@@569 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@579 ($generated@@95 $generated@@580)) $generated@@580)
 :pattern ( ($generated@@95 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@79)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@79) (= ($generated@@581 ($generated@@290 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@290 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@79) (= ($generated@@90 ($generated@@290 $generated@@584)) $generated@@54))
 :pattern ( ($generated@@290 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@79)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@79) (= ($generated@@585 ($generated@@295 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@295 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@79) (= ($generated@@90 ($generated@@295 $generated@@588)) $generated@@55))
 :pattern ( ($generated@@295 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@79)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@79) (= ($generated@@589 ($generated@@196 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@196 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@79) (= ($generated@@90 ($generated@@196 $generated@@592)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@79)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@79) (= ($generated@@593 ($generated@@569 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@569 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@79) (= ($generated@@90 ($generated@@569 $generated@@596)) $generated@@57))
 :pattern ( ($generated@@569 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
(= ($generated@@403 $generated@@598 ($generated@@284 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@284 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@353 $generated@@191 $generated@@191)) (= (type $generated@@600) $generated@@79)) (= (type $generated@@601) $generated@@79)) (= ($generated@@169 $generated@@599 ($generated@@478 $generated@@600 $generated@@601)) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@191) ($generated@@0 ($generated@@101 ($generated@@351 $generated@@599) $generated@@602))) (and ($generated@@275 ($generated@@101 ($generated@@453 $generated@@599) $generated@@602) $generated@@601) ($generated@@275 $generated@@602 $generated@@600)))
 :pattern ( ($generated@@101 ($generated@@453 $generated@@599) $generated@@602))
 :pattern ( ($generated@@101 ($generated@@351 $generated@@599) $generated@@602))
))))
 :pattern ( ($generated@@169 $generated@@599 ($generated@@478 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@371 $generated@@191 $generated@@191)) (= (type $generated@@604) $generated@@79)) (= (type $generated@@605) $generated@@79)) (= ($generated@@169 $generated@@603 ($generated@@486 $generated@@604 $generated@@605)) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@191) ($generated@@0 ($generated@@101 ($generated@@369 $generated@@603) $generated@@606))) (and ($generated@@275 ($generated@@101 ($generated@@461 $generated@@603) $generated@@606) $generated@@605) ($generated@@275 $generated@@606 $generated@@604)))
 :pattern ( ($generated@@101 ($generated@@461 $generated@@603) $generated@@606))
 :pattern ( ($generated@@101 ($generated@@369 $generated@@603) $generated@@606))
))))
 :pattern ( ($generated@@169 $generated@@603 ($generated@@486 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@191) (= (type $generated@@610) $generated@@191)) (< ($generated@@607 $generated@@609) ($generated@@608 ($generated@@274 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@274 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@191) (= (type $generated@@612) $generated@@191)) (< ($generated@@607 $generated@@612) ($generated@@608 ($generated@@274 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@274 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@191) (= (type $generated@@614) $generated@@79)) (= (type $generated@@615) $generated@@79)) ($generated@@275 $generated@@613 ($generated@@478 $generated@@614 $generated@@615))) (and (= ($generated@@284 ($generated@@403 ($generated@@353 $generated@@191 $generated@@191) $generated@@613)) $generated@@613) ($generated@@169 ($generated@@403 ($generated@@353 $generated@@191 $generated@@191) $generated@@613) ($generated@@478 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@275 $generated@@613 ($generated@@478 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@191) (= (type $generated@@617) $generated@@79)) (= (type $generated@@618) $generated@@79)) ($generated@@275 $generated@@616 ($generated@@486 $generated@@617 $generated@@618))) (and (= ($generated@@284 ($generated@@403 ($generated@@371 $generated@@191 $generated@@191) $generated@@616)) $generated@@616) ($generated@@169 ($generated@@403 ($generated@@371 $generated@@191 $generated@@191) $generated@@616) ($generated@@486 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@275 $generated@@616 ($generated@@486 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@79) (= (type $generated@@620) $generated@@79)) (= (type $generated@@621) $generated@@191)) ($generated@@275 $generated@@621 ($generated@@181 $generated@@619 $generated@@620))) (and (= ($generated@@284 ($generated@@403 $generated@@182 $generated@@621)) $generated@@621) ($generated@@169 ($generated@@403 $generated@@182 $generated@@621) ($generated@@181 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@275 $generated@@621 ($generated@@181 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ) (! (let (($generated@@623 (type $generated@@622)))
 (not ($generated@@0 ($generated@@101 ($generated@@497 $generated@@623) $generated@@622))))
 :pattern ( (let (($generated@@623 (type $generated@@622)))
($generated@@101 ($generated@@497 $generated@@623) $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@86)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@79) (= (type $generated@@627) $generated@@79)) (and (= ($generated@@90 ($generated@@181 $generated@@626 $generated@@627)) $generated@@65) (= ($generated@@624 ($generated@@181 $generated@@626 $generated@@627)) $generated@@72)))
 :pattern ( ($generated@@181 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@182) (= ($generated@@607 ($generated@@284 $generated@@628)) ($generated@@608 $generated@@628)))
 :pattern ( ($generated@@607 ($generated@@284 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@191) ($generated@@275 $generated@@629 ($generated@@95 0))) (and (= ($generated@@284 ($generated@@403 $generated@@2 $generated@@629)) $generated@@629) ($generated@@169 ($generated@@403 ($generated@@96 $generated@@191 $generated@@4) $generated@@629) ($generated@@95 0))))
 :pattern ( ($generated@@275 $generated@@629 ($generated@@95 0)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@191) (= (type $generated@@631) $generated@@79)) ($generated@@275 $generated@@630 ($generated@@290 $generated@@631))) (and (= ($generated@@284 ($generated@@403 ($generated@@96 $generated@@191 $generated@@4) $generated@@630)) $generated@@630) ($generated@@169 ($generated@@403 ($generated@@96 $generated@@191 $generated@@4) $generated@@630) ($generated@@290 $generated@@631))))
 :pattern ( ($generated@@275 $generated@@630 ($generated@@290 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@191) (= (type $generated@@633) $generated@@79)) ($generated@@275 $generated@@632 ($generated@@295 $generated@@633))) (and (= ($generated@@284 ($generated@@403 ($generated@@96 $generated@@191 $generated@@4) $generated@@632)) $generated@@632) ($generated@@169 ($generated@@403 ($generated@@96 $generated@@191 $generated@@4) $generated@@632) ($generated@@295 $generated@@633))))
 :pattern ( ($generated@@275 $generated@@632 ($generated@@295 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@191) (= (type $generated@@635) $generated@@79)) ($generated@@275 $generated@@634 ($generated@@196 $generated@@635))) (and (= ($generated@@284 ($generated@@403 ($generated@@96 $generated@@191 $generated@@2) $generated@@634)) $generated@@634) ($generated@@169 ($generated@@403 ($generated@@96 $generated@@191 $generated@@2) $generated@@634) ($generated@@196 $generated@@635))))
 :pattern ( ($generated@@275 $generated@@634 ($generated@@196 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@191) (= (type $generated@@637) $generated@@79)) ($generated@@275 $generated@@636 ($generated@@569 $generated@@637))) (and (= ($generated@@284 ($generated@@403 ($generated@@322 $generated@@191) $generated@@636)) $generated@@636) ($generated@@169 ($generated@@403 ($generated@@322 $generated@@191) $generated@@636) ($generated@@569 $generated@@637))))
 :pattern ( ($generated@@275 $generated@@636 ($generated@@569 $generated@@637)))
)))
(assert (= ($generated@@90 $generated@@156) $generated@@62))
(assert (= ($generated@@624 $generated@@156) $generated@@71))
(assert (= ($generated@@90 $generated@@259) $generated@@63))
(assert (= ($generated@@624 $generated@@259) $generated@@71))
(assert (= ($generated@@90 $generated@@160) $generated@@66))
(assert (= ($generated@@624 $generated@@160) $generated@@73))
(assert (= ($generated@@90 $generated@@262) $generated@@67))
(assert (= ($generated@@624 $generated@@262) $generated@@73))
(assert (= ($generated@@90 $generated@@265) $generated@@68))
(assert (= ($generated@@624 $generated@@265) $generated@@74))
(assert (= ($generated@@90 $generated@@163) $generated@@70))
(assert (= ($generated@@624 $generated@@163) $generated@@74))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@638) ($generated@@96 $generated@@191 $generated@@2)) (= (type $generated@@639) $generated@@79)) (= (type $generated@@640) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@638 ($generated@@196 $generated@@639) $generated@@640) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@191) (< 0 ($generated ($generated@@101 $generated@@638 $generated@@641)))) ($generated@@308 $generated@@641 $generated@@639 $generated@@640))
 :pattern ( ($generated@@101 $generated@@638 $generated@@641))
))))
 :pattern ( ($generated@@94 $generated@@638 ($generated@@196 $generated@@639) $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) $generated@@182) (= (type $generated@@643) $generated@@79)) (= (type $generated@@644) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@167 $generated@@644) (and ($generated@@180 $generated@@642) (exists (($generated@@645 T@U) ) (!  (and (= (type $generated@@645) $generated@@79) ($generated@@94 $generated@@642 ($generated@@181 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@94 $generated@@642 ($generated@@181 $generated@@643 $generated@@645) $generated@@644))
))))) ($generated@@308 ($generated@@189 $generated@@642) $generated@@643 $generated@@644))
 :pattern ( ($generated@@308 ($generated@@189 $generated@@642) $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@182) (= (type $generated@@647) $generated@@79)) (= (type $generated@@648) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@167 $generated@@648) (and ($generated@@180 $generated@@646) (exists (($generated@@649 T@U) ) (!  (and (= (type $generated@@649) $generated@@79) ($generated@@94 $generated@@646 ($generated@@181 $generated@@649 $generated@@647) $generated@@648))
 :pattern ( ($generated@@94 $generated@@646 ($generated@@181 $generated@@649 $generated@@647) $generated@@648))
))))) ($generated@@308 ($generated@@190 $generated@@646) $generated@@647 $generated@@648))
 :pattern ( ($generated@@308 ($generated@@190 $generated@@646) $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@650) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@651) $generated@@97)) (and ($generated@@167 $generated@@650) (and (not (= $generated@@651 $generated@@157)) (= ($generated@@168 $generated@@651) $generated@@163)))) ($generated@@169 ($generated@@103 ($generated@@101 $generated@@650 $generated@@651) $generated@@268) ($generated@@290 $generated@@259)))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@650 $generated@@651) $generated@@268))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@191) (= (type $generated@@653) $generated@@191)) (= ($generated@@274 ($generated@@302 $generated@@652) ($generated@@302 $generated@@653)) ($generated@@302 ($generated@@274 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@274 ($generated@@302 $generated@@652) ($generated@@302 $generated@@653)))
)))
(assert (forall (($generated@@654 Int) ) (! (= ($generated@@284 ($generated@@8 ($generated@@300 $generated@@654))) ($generated@@302 ($generated@@284 ($generated@@8 $generated@@654))))
 :pattern ( ($generated@@284 ($generated@@8 ($generated@@300 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ) (! (= ($generated@@284 ($generated@@302 $generated@@655)) ($generated@@302 ($generated@@284 $generated@@655)))
 :pattern ( ($generated@@284 ($generated@@302 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (! (let (($generated@@657 ($generated@@323 (type $generated@@656))))
 (=> (and (= (type $generated@@656) ($generated@@322 $generated@@657)) (= ($generated@@321 $generated@@656) 0)) (= $generated@@656 ($generated@@320 $generated@@657))))
 :pattern ( ($generated@@321 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (! (let (($generated@@661 (type $generated@@659)))
 (=> (and (and (= (type $generated@@658) ($generated@@96 $generated@@661 $generated@@2)) (= (type $generated@@660) $generated@@2)) (<= 0 ($generated $generated@@660))) (= ($generated@@345 ($generated@@102 $generated@@658 $generated@@659 $generated@@660)) (+ (- ($generated@@345 $generated@@658) ($generated ($generated@@101 $generated@@658 $generated@@659))) ($generated $generated@@660)))))
 :pattern ( ($generated@@345 ($generated@@102 $generated@@658 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@663) $generated@@2)) ($generated@@94 $generated@@663 $generated@@46 $generated@@662))
 :pattern ( ($generated@@94 $generated@@663 $generated@@46 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@665) $generated@@3)) ($generated@@94 $generated@@665 $generated@@47 $generated@@664))
 :pattern ( ($generated@@94 $generated@@665 $generated@@47 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@667) $generated@@4)) ($generated@@94 $generated@@667 $generated@@44 $generated@@666))
 :pattern ( ($generated@@94 $generated@@667 $generated@@44 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@669) $generated@@526)) ($generated@@94 $generated@@669 $generated@@45 $generated@@668))
 :pattern ( ($generated@@94 $generated@@669 $generated@@45 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@671) $generated@@191)) ($generated@@94 $generated@@671 $generated@@48 $generated@@670))
 :pattern ( ($generated@@94 $generated@@671 $generated@@48 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@322 $generated@@191)) (= (type $generated@@673) $generated@@79)) (= ($generated@@169 $generated@@672 ($generated@@569 $generated@@673)) (forall (($generated@@674 Int) ) (!  (=> (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@321 $generated@@672))) ($generated@@275 ($generated@@570 $generated@@672 $generated@@674) $generated@@673))
 :pattern ( ($generated@@570 $generated@@672 $generated@@674))
))))
 :pattern ( ($generated@@169 $generated@@672 ($generated@@569 $generated@@673)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 Int) ) (!  (=> (= (type $generated@@676) ($generated@@322 $generated@@191)) (=> (and (<= 0 $generated@@677) (< $generated@@677 ($generated@@321 $generated@@676))) (< ($generated@@608 ($generated@@403 $generated@@182 ($generated@@570 $generated@@676 $generated@@677))) ($generated@@675 $generated@@676))))
 :pattern ( ($generated@@608 ($generated@@403 $generated@@182 ($generated@@570 $generated@@676 $generated@@677))))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) ($generated@@353 $generated@@191 $generated@@191)) (= (type $generated@@679) $generated@@79)) (= (type $generated@@680) $generated@@79)) ($generated@@169 $generated@@678 ($generated@@478 $generated@@679 $generated@@680))) (and (and ($generated@@169 ($generated@@351 $generated@@678) ($generated@@290 $generated@@679)) ($generated@@169 ($generated@@419 $generated@@678) ($generated@@290 $generated@@680))) ($generated@@169 ($generated@@452 $generated@@678) ($generated@@290 ($generated@@181 $generated@@679 $generated@@680)))))
 :pattern ( ($generated@@169 $generated@@678 ($generated@@478 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (and (= (type $generated@@681) ($generated@@371 $generated@@191 $generated@@191)) (= (type $generated@@682) $generated@@79)) (= (type $generated@@683) $generated@@79)) ($generated@@169 $generated@@681 ($generated@@486 $generated@@682 $generated@@683))) (and (and ($generated@@169 ($generated@@369 $generated@@681) ($generated@@295 $generated@@682)) ($generated@@169 ($generated@@430 $generated@@681) ($generated@@295 $generated@@683))) ($generated@@169 ($generated@@460 $generated@@681) ($generated@@295 ($generated@@181 $generated@@682 $generated@@683)))))
 :pattern ( ($generated@@169 $generated@@681 ($generated@@486 $generated@@682 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@2) ($generated@@169 $generated@@684 $generated@@46))
 :pattern ( ($generated@@169 $generated@@684 $generated@@46))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@3) ($generated@@169 $generated@@685 $generated@@47))
 :pattern ( ($generated@@169 $generated@@685 $generated@@47))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@4) ($generated@@169 $generated@@686 $generated@@44))
 :pattern ( ($generated@@169 $generated@@686 $generated@@44))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@526) ($generated@@169 $generated@@687 $generated@@45))
 :pattern ( ($generated@@169 $generated@@687 $generated@@45))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@191) ($generated@@169 $generated@@688 $generated@@48))
 :pattern ( ($generated@@169 $generated@@688 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Bool)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@689) ($generated@@205 $generated@@97 $generated@@4)) (= (type $generated@@690) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@691) $generated@@97)) (= (type $generated@@692) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@693) $generated@@97)) (= (type $generated@@694) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@695) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@696) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@698) $generated@@97)) (= (type $generated@@700) $generated@@97)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@702  (=> (= $generated@@689 ($generated@@204 $generated@@157 $generated@@690 $generated@@60 false)) (=> (and (and (not (= $generated@@691 $generated@@157)) (and ($generated@@169 $generated@@691 $generated@@265) ($generated@@94 $generated@@691 $generated@@265 $generated@@690))) (and ($generated@@167 $generated@@692) ($generated@@393 $generated@@692))) (=> (and (and (and (and (not (= $generated@@693 $generated@@157)) (and ($generated@@169 $generated@@693 $generated@@265) ($generated@@94 $generated@@693 $generated@@265 $generated@@692))) (= ($generated ($generated@@103 ($generated@@101 $generated@@692 $generated@@693) $generated@@176)) ($generated@@300 0))) (and ($generated@@283 $generated@@692 $generated@@693) ($generated@@282 $generated@@692 $generated@@693))) (and (and (forall (($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@97) ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@692 $generated@@693) $generated@@268) ($generated@@284 $generated@@703)))) (and (not (= $generated@@703 $generated@@157)) (not ($generated@@0 ($generated@@103 ($generated@@101 $generated@@690 $generated@@703) $generated@@60)))))
 :pattern ( ($generated@@101 ($generated@@103 ($generated@@101 $generated@@692 $generated@@693) $generated@@268) ($generated@@284 $generated@@703)))
)) (not ($generated@@0 ($generated@@103 ($generated@@101 $generated@@690 $generated@@693) $generated@@60)))) (and (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@97) (=> (and (not (= $generated@@704 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@690 $generated@@704) $generated@@60))) (= ($generated@@101 $generated@@692 $generated@@704) ($generated@@101 $generated@@690 $generated@@704))))
 :pattern ( ($generated@@101 $generated@@692 $generated@@704))
)) ($generated@@152 $generated@@690 $generated@@692)))) (and (=> (= (ControlFlow 0 2) (- 0 13)) true) (and (=> (= (ControlFlow 0 2) (- 0 12)) (not (= $generated@@693 $generated@@157))) (=> (not (= $generated@@693 $generated@@157)) (and (=> (= (ControlFlow 0 2) (- 0 11)) (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (! (let (($generated@@707 ($generated@@82 (type $generated@@706))))
 (=> (and (= (type $generated@@705) $generated@@97) (= (type $generated@@706) ($generated@@81 $generated@@707))) (=> (and (and (not (= $generated@@705 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@692 $generated@@705) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@692 $generated@@693) $generated@@268) ($generated@@284 $generated@@705)))) ($generated@@0 ($generated@@203 $generated@@689 $generated@@705 $generated@@706)))))
 :no-pattern (type $generated@@705)
 :no-pattern (type $generated@@706)
 :no-pattern ($generated $generated@@705)
 :no-pattern ($generated@@0 $generated@@705)
 :no-pattern ($generated $generated@@706)
 :no-pattern ($generated@@0 $generated@@706)
))) (=> (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (! (let (($generated@@710 ($generated@@82 (type $generated@@709))))
 (=> (and (= (type $generated@@708) $generated@@97) (= (type $generated@@709) ($generated@@81 $generated@@710))) (=> (and (and (not (= $generated@@708 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@692 $generated@@708) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@692 $generated@@693) $generated@@268) ($generated@@284 $generated@@708)))) ($generated@@0 ($generated@@203 $generated@@689 $generated@@708 $generated@@709)))))
 :no-pattern (type $generated@@708)
 :no-pattern (type $generated@@709)
 :no-pattern ($generated $generated@@708)
 :no-pattern ($generated@@0 $generated@@708)
 :no-pattern ($generated $generated@@709)
 :no-pattern ($generated@@0 $generated@@709)
)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@282 $generated@@692 $generated@@693)) (=> ($generated@@282 $generated@@692 $generated@@693) (=> (and (and (and ($generated@@167 $generated@@694) ($generated@@393 $generated@@694)) (and (= ($generated ($generated@@103 ($generated@@101 $generated@@694 $generated@@693) $generated@@176)) (+ ($generated ($generated@@103 ($generated@@101 $generated@@692 $generated@@693) $generated@@176)) 1)) ($generated@@283 $generated@@694 $generated@@693))) (and (and ($generated@@282 $generated@@694 $generated@@693) (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@97) (=> (and ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@694 $generated@@693) $generated@@268) ($generated@@284 $generated@@711))) (not ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@692 $generated@@693) $generated@@268) ($generated@@284 $generated@@711))))) (and (not (= $generated@@711 $generated@@157)) (not ($generated@@0 ($generated@@103 ($generated@@101 $generated@@692 $generated@@711) $generated@@60))))))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@692 $generated@@711) $generated@@60))
))) (and (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@97) (=> (and (not (= $generated@@712 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@692 $generated@@712) $generated@@60))) (or (= ($generated@@101 $generated@@694 $generated@@712) ($generated@@101 $generated@@692 $generated@@712)) ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@692 $generated@@693) $generated@@268) ($generated@@284 $generated@@712))))))
 :pattern ( ($generated@@101 $generated@@694 $generated@@712))
)) ($generated@@152 $generated@@692 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@693 $generated@@157))) (=> (not (= $generated@@693 $generated@@157)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (! (let (($generated@@715 ($generated@@82 (type $generated@@714))))
 (=> (and (= (type $generated@@713) $generated@@97) (= (type $generated@@714) ($generated@@81 $generated@@715))) (=> (and (and (not (= $generated@@713 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@694 $generated@@713) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@694 $generated@@693) $generated@@268) ($generated@@284 $generated@@713)))) ($generated@@0 ($generated@@203 $generated@@689 $generated@@713 $generated@@714)))))
 :no-pattern (type $generated@@713)
 :no-pattern (type $generated@@714)
 :no-pattern ($generated $generated@@713)
 :no-pattern ($generated@@0 $generated@@713)
 :no-pattern ($generated $generated@@714)
 :no-pattern ($generated@@0 $generated@@714)
))) (=> (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (! (let (($generated@@718 ($generated@@82 (type $generated@@717))))
 (=> (and (= (type $generated@@716) $generated@@97) (= (type $generated@@717) ($generated@@81 $generated@@718))) (=> (and (and (not (= $generated@@716 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@694 $generated@@716) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@694 $generated@@693) $generated@@268) ($generated@@284 $generated@@716)))) ($generated@@0 ($generated@@203 $generated@@689 $generated@@716 $generated@@717)))))
 :no-pattern (type $generated@@716)
 :no-pattern (type $generated@@717)
 :no-pattern ($generated $generated@@716)
 :no-pattern ($generated@@0 $generated@@716)
 :no-pattern ($generated $generated@@717)
 :no-pattern ($generated@@0 $generated@@717)
)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@282 $generated@@694 $generated@@693)) (=> ($generated@@282 $generated@@694 $generated@@693) (=> (and (and (and ($generated@@167 $generated@@695) ($generated@@393 $generated@@695)) (and (= ($generated ($generated@@103 ($generated@@101 $generated@@695 $generated@@693) $generated@@176)) (+ ($generated ($generated@@103 ($generated@@101 $generated@@694 $generated@@693) $generated@@176)) 1)) ($generated@@283 $generated@@695 $generated@@693))) (and (and ($generated@@282 $generated@@695 $generated@@693) (forall (($generated@@719 T@U) ) (!  (=> (= (type $generated@@719) $generated@@97) (=> (and ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@695 $generated@@693) $generated@@268) ($generated@@284 $generated@@719))) (not ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@694 $generated@@693) $generated@@268) ($generated@@284 $generated@@719))))) (and (not (= $generated@@719 $generated@@157)) (not ($generated@@0 ($generated@@103 ($generated@@101 $generated@@694 $generated@@719) $generated@@60))))))
 :pattern ( ($generated@@103 ($generated@@101 $generated@@694 $generated@@719) $generated@@60))
))) (and (forall (($generated@@720 T@U) ) (!  (=> (= (type $generated@@720) $generated@@97) (=> (and (not (= $generated@@720 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@694 $generated@@720) $generated@@60))) (or (= ($generated@@101 $generated@@695 $generated@@720) ($generated@@101 $generated@@694 $generated@@720)) ($generated@@0 ($generated@@101 ($generated@@103 ($generated@@101 $generated@@694 $generated@@693) $generated@@268) ($generated@@284 $generated@@720))))))
 :pattern ( ($generated@@101 $generated@@695 $generated@@720))
)) ($generated@@152 $generated@@694 $generated@@695)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@693 $generated@@157))) (=> (not (= $generated@@693 $generated@@157)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@282 $generated@@695 $generated@@693)) (=> ($generated@@282 $generated@@695 $generated@@693) (=> (and ($generated@@167 $generated@@696) ($generated@@393 $generated@@696)) (=> (and (and (= $generated@@697 ($generated ($generated@@103 ($generated@@101 $generated@@696 $generated@@693) $generated@@176))) (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@97) (=> (and (not (= $generated@@721 $generated@@157)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@695 $generated@@721) $generated@@60))) (= ($generated@@101 $generated@@696 $generated@@721) ($generated@@101 $generated@@695 $generated@@721))))
 :pattern ( ($generated@@101 $generated@@696 $generated@@721))
))) (and ($generated@@152 $generated@@695 $generated@@696) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@697 ($generated@@300 2))))))))))))))))))))))))))))))
(let (($generated@@722  (=> (and (and (and ($generated@@167 $generated@@690) ($generated@@393 $generated@@690)) (and (not (= $generated@@698 $generated@@157)) (and ($generated@@169 $generated@@698 $generated@@262) ($generated@@94 $generated@@698 $generated@@262 $generated@@690)))) (and (and (=> $generated@@699 (and ($generated@@169 $generated@@700 $generated@@265) ($generated@@94 $generated@@700 $generated@@265 $generated@@690))) true) (and (= 0 $generated@@701) (= (ControlFlow 0 14) 2)))) $generated@@702)))
$generated@@722)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U) T@U)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 (T@U T@U) Bool)
(declare-fun $generated@@205 (T@U T@U) Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (Int Int) Int)
(declare-fun $generated@@210 (Int) Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@219 (T@T T@U T@U) T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U T@U T@U) T@U)
(declare-fun $generated@@272 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@329 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@360 (T@U) Int)
(declare-fun $generated@@361 (T@T) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@T) T@U)
(declare-fun $generated@@368 (T@T T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@370 (T@T) T@T)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@T T@T) T@U)
(declare-fun $generated@@386 (T@T T@T) T@T)
(declare-fun $generated@@387 (T@T) T@T)
(declare-fun $generated@@388 (T@T) T@T)
(declare-fun $generated@@402 (T@U T@U) Bool)
(declare-fun $generated@@408 (T@U) Bool)
(declare-fun $generated@@418 (T@T T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) Bool)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@502 (T@U T@U) T@U)
(declare-fun $generated@@510 (T@U T@U) T@U)
(declare-fun $generated@@518 (T@U T@U) T@U)
(declare-fun $generated@@545 (T@T) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@574 () T@T)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@608 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@618 (T@U Int) T@U)
(declare-fun $generated@@630 (T@U) Int)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@636 (T@U) T@U)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@644 (T@U) T@U)
(declare-fun $generated@@658 (T@U) Int)
(declare-fun $generated@@659 (T@U) Int)
(declare-fun $generated@@676 (T@T) T@U)
(declare-fun $generated@@682 (T@U) T@U)
(declare-fun $generated@@698 (T@U T@U) Bool)
(declare-fun $generated@@748 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@78 $generated@@85))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@61) $generated@@80)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@64) $generated@@81)) (= (type $generated@@65) $generated@@77)) (= ($generated@@1 $generated@@82) 11)) (= (type $generated@@66) $generated@@82)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@83) 12)) (= (type $generated@@69) $generated@@83)) (= (type $generated@@70) $generated@@83)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)) (= (type $generated@@75) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (= ($generated@@86 $generated@@60) 0))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@77)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@44) $generated@@49))
(assert (= ($generated@@87 $generated@@45) $generated@@50))
(assert (= ($generated@@87 $generated@@46) $generated@@51))
(assert (= ($generated@@87 $generated@@47) $generated@@52))
(assert (= ($generated@@87 $generated@@48) $generated@@53))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@80)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 13)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@79 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 15)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@79 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@76)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@151) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@149 $generated@@150 $generated@@151)) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@94) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@150 $generated@@152) $generated@@60))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@151 $generated@@152) $generated@@60)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@151 $generated@@152) $generated@@60))
)))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert  (and (= (type $generated@@153) $generated@@76) (= (type $generated@@154) $generated@@94)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@94) (= (type $generated@@156) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@155 $generated@@153 $generated@@156)  (or (= $generated@@155 $generated@@154) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@155 $generated@@153 $generated@@156))
)))
(assert (= (type $generated@@157) $generated@@76))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@94) (= (type $generated@@159) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@158 $generated@@157 $generated@@159)  (or (= $generated@@158 $generated@@154) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@159 $generated@@158) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@158 $generated@@157 $generated@@159))
)))
(assert  (and (= (type $generated@@160) ($generated@@78 $generated@@2)) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@76)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@166) $generated@@94)) (and ($generated@@161 $generated@@165) (and (not (= $generated@@166 $generated@@154)) (= ($generated@@162 $generated@@166) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@165 $generated@@166) $generated@@160) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@165 $generated@@166) $generated@@160))
)))
(assert (= (type $generated@@167) ($generated@@78 $generated@@2)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@169) $generated@@94)) (and ($generated@@161 $generated@@168) (and (not (= $generated@@169 $generated@@154)) (= ($generated@@162 $generated@@169) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@168 $generated@@169) $generated@@167) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@168 $generated@@169) $generated@@167))
)))
(assert (= (type $generated@@170) ($generated@@78 $generated@@2)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@172) $generated@@94)) (and ($generated@@161 $generated@@171) (and (not (= $generated@@172 $generated@@154)) (= ($generated@@162 $generated@@172) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@171 $generated@@172) $generated@@170) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@171 $generated@@172) $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@2) ($generated@@163 $generated@@173 ($generated@@92 0)))
 :pattern ( ($generated@@163 $generated@@173 ($generated@@92 0)))
)))
(assert  (and (= ($generated@@1 $generated@@176) 16) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@76)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@76) (= (type $generated@@180) $generated@@76)) (= (type $generated@@181) $generated@@176)) ($generated@@163 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@163 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (and (= ($generated@@1 $generated@@185) 17) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@186))
))) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@185)
 :pattern ( ($generated@@184 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@176) (= (type $generated@@189) $generated@@176)) true) (= ($generated@@182 $generated@@188 $generated@@189)  (and (= ($generated@@183 $generated@@188) ($generated@@183 $generated@@189)) (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)))))
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@76)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@194) $generated@@76)) ($generated@@163 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@163 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= (type $generated@@195) $generated@@94) (= ($generated@@163 $generated@@195 $generated@@157)  (or (= $generated@@195 $generated@@154) (= ($generated@@162 $generated@@195) $generated@@157))))
 :pattern ( ($generated@@163 $generated@@195 $generated@@157))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@96 (type $generated@@197))))
(= (type ($generated@@196 $generated@@197 $generated@@198)) ($generated@@93 $generated@@199 $generated@@4)))
 :pattern ( ($generated@@196 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@96 (type $generated@@200))))
 (=> (and (= (type $generated@@200) ($generated@@93 $generated@@202 $generated@@4)) (= (type $generated@@201) ($generated@@93 $generated@@202 $generated@@4))) (= ($generated@@196 ($generated@@196 $generated@@200 $generated@@201) $generated@@201) ($generated@@196 $generated@@200 $generated@@201))))
 :pattern ( ($generated@@196 ($generated@@196 $generated@@200 $generated@@201) $generated@@201))
)))
(assert  (and (and (= (type $generated@@206) $generated@@76) (= (type $generated@@207) ($generated@@78 ($generated@@93 $generated@@185 $generated@@4)))) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@208 $generated@@211)) $generated@@185)
 :pattern ( ($generated@@208 $generated@@211))
))))
(assert  (=> (<= 0 $generated@@203) (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (= (type $generated@@212) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@213) $generated@@94)) (or ($generated@@205 $generated@@212 $generated@@213) (and (not (= 0 $generated@@203)) (and ($generated@@161 $generated@@212) (and (not (= $generated@@213 $generated@@154)) (and ($generated@@163 $generated@@213 $generated@@206) ($generated@@91 $generated@@213 $generated@@206 $generated@@212))))))) (= ($generated@@204 $generated@@212 $generated@@213)  (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@212 $generated@@213) $generated@@207) ($generated@@208 $generated@@213))) (= ($generated ($generated@@100 ($generated@@98 $generated@@212 $generated@@213) $generated@@170)) (- ($generated@@209 ($generated@@210 2) ($generated ($generated@@100 ($generated@@98 $generated@@212 $generated@@213) $generated@@160))) ($generated ($generated@@100 ($generated@@98 $generated@@212 $generated@@213) $generated@@167)))))))
 :pattern ( ($generated@@204 $generated@@212 $generated@@213) ($generated@@161 $generated@@212))
))))
(assert (= (type $generated@@214) $generated@@76))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@94) (= (type $generated@@216) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@215 $generated@@214 $generated@@216) ($generated@@91 $generated@@215 $generated@@153 $generated@@216)))
 :pattern ( ($generated@@91 $generated@@215 $generated@@214 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@217) $generated@@94) (= (type $generated@@218) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@217 $generated@@206 $generated@@218) ($generated@@91 $generated@@217 $generated@@157 $generated@@218)))
 :pattern ( ($generated@@91 $generated@@217 $generated@@206 $generated@@218))
)))
(assert (= ($generated@@86 $generated@@207) 0))
(assert (forall (($generated@@220 T@T) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@78 $generated@@220))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (= ($generated@@219 ($generated@@93 $generated@@185 $generated@@4) $generated@@66 $generated@@74) $generated@@207))
(assert ($generated@@223 $generated@@207))
(assert (= ($generated@@86 $generated@@170) 0))
(assert (= ($generated@@219 $generated@@2 $generated@@66 $generated@@75) $generated@@170))
(assert ($generated@@223 $generated@@170))
(assert  (=> (<= 0 $generated@@203) (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@225) $generated@@94)) (or ($generated@@205 $generated@@224 $generated@@225) (and (not (= 0 $generated@@203)) (and ($generated@@161 $generated@@224) (and (not (= $generated@@225 $generated@@154)) (and ($generated@@163 $generated@@225 $generated@@206) ($generated@@91 $generated@@225 $generated@@206 $generated@@224))))))) ($generated@@204 $generated@@224 $generated@@225)) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@224 $generated@@225) $generated@@207) ($generated@@208 $generated@@225))))
 :pattern ( ($generated@@204 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= (type ($generated@@226 $generated@@228 $generated@@229)) $generated@@176)
 :pattern ( ($generated@@226 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@230) $generated@@76) (= (type $generated@@231) $generated@@76)) (= (type $generated@@232) $generated@@185)) (= (type $generated@@233) $generated@@185)) (= ($generated@@163 ($generated@@226 $generated@@232 $generated@@233) ($generated@@175 $generated@@230 $generated@@231))  (and ($generated@@227 $generated@@232 $generated@@230) ($generated@@227 $generated@@233 $generated@@231))))
 :pattern ( ($generated@@163 ($generated@@226 $generated@@232 $generated@@233) ($generated@@175 $generated@@230 $generated@@231)))
)))
(assert (= ($generated@@86 $generated@@160) 0))
(assert (= ($generated@@219 $generated@@2 $generated@@66 $generated@@72) $generated@@160))
(assert  (not ($generated@@223 $generated@@160)))
(assert (= ($generated@@86 $generated@@167) 0))
(assert (= ($generated@@219 $generated@@2 $generated@@66 $generated@@73) $generated@@167))
(assert  (not ($generated@@223 $generated@@167)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@176) (= (type $generated@@235) $generated@@176)) (= ($generated@@182 $generated@@234 $generated@@235) (= $generated@@234 $generated@@235)))
 :pattern ( ($generated@@182 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@76)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@239) $generated@@76)) (= ($generated@@163 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@185) ($generated@@0 ($generated@@98 $generated@@238 $generated@@240))) ($generated@@227 $generated@@240 $generated@@239))
 :pattern ( ($generated@@98 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@163 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@76)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@244) $generated@@76)) (= ($generated@@163 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@185) ($generated@@0 ($generated@@98 $generated@@243 $generated@@245))) ($generated@@227 $generated@@245 $generated@@244))
 :pattern ( ($generated@@98 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@163 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@210 $generated@@246) $generated@@246)
 :pattern ( ($generated@@210 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@76) (= (type $generated@@253) $generated@@76)) (= (type $generated@@254) $generated@@185)) (= (type $generated@@255) $generated@@185)) (= (type $generated@@256) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@161 $generated@@256)) (= ($generated@@91 ($generated@@226 $generated@@254 $generated@@255) ($generated@@175 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@91 ($generated@@226 $generated@@254 $generated@@255) ($generated@@175 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@81)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@176) (= ($generated@@174 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@64)))
 :pattern ( ($generated@@174 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@176) ($generated@@174 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@185) (= (type $generated@@262) $generated@@185)) (= $generated@@260 ($generated@@226 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@174 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 18)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert ($generated@@223 $generated@@60))
(assert  (and (and (and (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@277 $generated@@278)) 19)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@273 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@275 ($generated@@273 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@273 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@271 $generated@@283 $generated@@284 $generated@@285)) $generated@@286))
 :pattern ( ($generated@@271 $generated@@283 $generated@@284 $generated@@285))
))) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (! (let (($generated@@291 (type $generated@@290)))
(let (($generated@@292 (type $generated@@288)))
(= (type ($generated@@276 $generated@@287 $generated@@288 $generated@@289 $generated@@290)) ($generated@@273 $generated@@292 $generated@@291))))
 :pattern ( ($generated@@276 $generated@@287 $generated@@288 $generated@@289 $generated@@290))
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@275 (type $generated@@293))))
 (=> (= (type $generated@@296) $generated@@297) (= ($generated@@271 ($generated@@276 $generated@@293 $generated@@294 $generated@@295 $generated@@296) $generated@@294 $generated@@295) $generated@@296)))
 :weight 0
))) (and (and (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (or (= $generated@@300 $generated@@302) (= ($generated@@271 ($generated@@276 $generated@@299 $generated@@300 $generated@@301 $generated@@298) $generated@@302 $generated@@303) ($generated@@271 $generated@@299 $generated@@302 $generated@@303)))
 :weight 0
)) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (or (= $generated@@307 $generated@@309) (= ($generated@@271 ($generated@@276 $generated@@305 $generated@@306 $generated@@307 $generated@@304) $generated@@308 $generated@@309) ($generated@@271 $generated@@305 $generated@@308 $generated@@309)))
 :weight 0
))) (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (or true (= ($generated@@271 ($generated@@276 $generated@@311 $generated@@312 $generated@@313 $generated@@310) $generated@@314 $generated@@315) ($generated@@271 $generated@@311 $generated@@314 $generated@@315)))
 :weight 0
)))) (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (! (= (type ($generated@@272 $generated@@316 $generated@@317 $generated@@318 $generated@@319 $generated@@320)) ($generated@@273 $generated@@94 $generated@@4))
 :pattern ( ($generated@@272 $generated@@316 $generated@@317 $generated@@318 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (and (and (and (and (and (and (= (type $generated@@321) $generated@@94) (= (type $generated@@322) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@323) ($generated@@78 $generated@@4))) (= (type $generated@@324) $generated@@94)) (= (type $generated@@325) ($generated@@93 $generated@@185 $generated@@4))) (= (type $generated@@326) $generated@@94)) (= (type $generated@@327) ($generated@@78 $generated@@328))) (= ($generated@@0 ($generated@@271 ($generated@@272 $generated@@321 $generated@@322 $generated@@323 $generated@@324 $generated@@325) $generated@@326 $generated@@327))  (=> (and (not (= $generated@@326 $generated@@321)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@322 $generated@@326) $generated@@323))) (or (= $generated@@326 $generated@@324) ($generated@@0 ($generated@@98 $generated@@325 ($generated@@208 $generated@@326))))))))
 :pattern ( ($generated@@271 ($generated@@272 $generated@@321 $generated@@322 $generated@@323 $generated@@324 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (! (= (type ($generated@@329 $generated@@330 $generated@@331 $generated@@332 $generated@@333 $generated@@334)) ($generated@@273 $generated@@94 $generated@@4))
 :pattern ( ($generated@@329 $generated@@330 $generated@@331 $generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@79 (type $generated@@341))))
 (=> (and (and (and (and (and (and (= (type $generated@@335) $generated@@94) (= (type $generated@@336) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@337) ($generated@@78 $generated@@4))) (= (type $generated@@338) $generated@@94)) (= (type $generated@@339) ($generated@@93 $generated@@185 $generated@@4))) (= (type $generated@@340) $generated@@94)) (= (type $generated@@341) ($generated@@78 $generated@@342))) (= ($generated@@0 ($generated@@271 ($generated@@329 $generated@@335 $generated@@336 $generated@@337 $generated@@338 $generated@@339) $generated@@340 $generated@@341))  (=> (and (not (= $generated@@340 $generated@@335)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@336 $generated@@340) $generated@@337))) (or (= $generated@@340 $generated@@338) ($generated@@0 ($generated@@98 $generated@@339 ($generated@@208 $generated@@340))))))))
 :pattern ( ($generated@@271 ($generated@@329 $generated@@335 $generated@@336 $generated@@337 $generated@@338 $generated@@339) $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@76) (= (type $generated@@345) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@251 ($generated@@208 $generated@@343) $generated@@344 $generated@@345) ($generated@@91 $generated@@343 $generated@@344 $generated@@345)))
 :pattern ( ($generated@@251 ($generated@@208 $generated@@343) $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@346) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@347) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@348) $generated@@185)) (= (type $generated@@349) $generated@@76)) ($generated@@149 $generated@@346 $generated@@347)) ($generated@@251 $generated@@348 $generated@@349 $generated@@346)) ($generated@@251 $generated@@348 $generated@@349 $generated@@347))
 :pattern ( ($generated@@149 $generated@@346 $generated@@347) ($generated@@251 $generated@@348 $generated@@349 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@350) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@351) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@353) $generated@@76)) ($generated@@149 $generated@@350 $generated@@351)) ($generated@@91 $generated@@352 $generated@@353 $generated@@350)) ($generated@@91 $generated@@352 $generated@@353 $generated@@351))
 :pattern ( ($generated@@149 $generated@@350 $generated@@351) ($generated@@91 $generated@@352 $generated@@353 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@355) $generated@@94)) (=> (and (and ($generated@@161 $generated@@354) (and (not (= $generated@@355 $generated@@154)) (= ($generated@@162 $generated@@355) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@354 $generated@@355) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@354 $generated@@355) $generated@@160) $generated@@46 $generated@@354)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@354 $generated@@355) $generated@@160))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@357) $generated@@94)) (=> (and (and ($generated@@161 $generated@@356) (and (not (= $generated@@357 $generated@@154)) (= ($generated@@162 $generated@@357) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@356 $generated@@357) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@356 $generated@@357) $generated@@167) $generated@@46 $generated@@356)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@356 $generated@@357) $generated@@167))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@359) $generated@@94)) (=> (and (and ($generated@@161 $generated@@358) (and (not (= $generated@@359 $generated@@154)) (= ($generated@@162 $generated@@359) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@358 $generated@@359) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@358 $generated@@359) $generated@@170) $generated@@46 $generated@@358)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@358 $generated@@359) $generated@@170))
)))
(assert (forall (($generated@@362 T@T) ) (! (= (type ($generated@@361 $generated@@362)) ($generated@@93 $generated@@362 $generated@@2))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@96 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@93 $generated@@364 $generated@@2)) (and (= (= ($generated@@360 $generated@@363) 0) (= $generated@@363 ($generated@@361 $generated@@364))) (=> (not (= ($generated@@360 $generated@@363) 0)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (< 0 ($generated ($generated@@98 $generated@@363 $generated@@365))))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert  (and (and (and (and (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (= ($generated@@1 ($generated@@368 $generated@@371 $generated@@372)) 20)) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@369 ($generated@@368 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@368 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@370 ($generated@@368 $generated@@375 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@368 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@369 (type $generated@@377))))
(= (type ($generated@@366 $generated@@377)) ($generated@@93 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@377))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= (type ($generated@@367 $generated@@379 $generated@@380)) ($generated@@368 $generated@@379 $generated@@380))
 :pattern ( ($generated@@367 $generated@@379 $generated@@380))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@T) ) (! (let (($generated@@383 (type $generated@@381)))
 (not ($generated@@0 ($generated@@98 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381))))
 :pattern ( (let (($generated@@383 (type $generated@@381)))
($generated@@98 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381)))
)))
(assert  (and (and (and (and (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (= ($generated@@1 ($generated@@386 $generated@@389 $generated@@390)) 21)) (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (! (= ($generated@@387 ($generated@@386 $generated@@391 $generated@@392)) $generated@@391)
 :pattern ( ($generated@@386 $generated@@391 $generated@@392))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@388 ($generated@@386 $generated@@393 $generated@@394)) $generated@@394)
 :pattern ( ($generated@@386 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@387 (type $generated@@395))))
(= (type ($generated@@384 $generated@@395)) ($generated@@93 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@395))
))) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= (type ($generated@@385 $generated@@397 $generated@@398)) ($generated@@386 $generated@@397 $generated@@398))
 :pattern ( ($generated@@385 $generated@@397 $generated@@398))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@T) ) (! (let (($generated@@401 (type $generated@@399)))
 (not ($generated@@0 ($generated@@98 ($generated@@384 ($generated@@385 $generated@@401 $generated@@400)) $generated@@399))))
 :pattern ( (let (($generated@@401 (type $generated@@399)))
($generated@@98 ($generated@@384 ($generated@@385 $generated@@401 $generated@@400)) $generated@@399)))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@404) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@402 $generated@@403 $generated@@404)) (and ($generated@@149 $generated@@403 $generated@@404) (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@79 (type $generated@@406))))
 (=> (and (and (= (type $generated@@405) $generated@@94) (= (type $generated@@406) ($generated@@78 $generated@@407))) (not ($generated@@223 $generated@@406))) (= ($generated@@100 ($generated@@98 $generated@@403 $generated@@405) $generated@@406) ($generated@@100 ($generated@@98 $generated@@404 $generated@@405) $generated@@406))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@404 $generated@@405) $generated@@406))
))))
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@409) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@410) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@411) $generated@@94)) (=> (and (and (and ($generated@@161 $generated@@409) ($generated@@161 $generated@@410)) (and (not (= $generated@@411 $generated@@154)) ($generated@@163 $generated@@411 $generated@@206))) (and ($generated@@408 $generated@@409) ($generated@@149 $generated@@409 $generated@@410))) (=> (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@79 (type $generated@@413))))
 (=> (and (and (= (type $generated@@412) $generated@@94) (= (type $generated@@413) ($generated@@78 $generated@@414))) (and (not (= $generated@@412 $generated@@154)) (or (= $generated@@412 $generated@@411) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@409 $generated@@411) $generated@@207) ($generated@@208 $generated@@412)))))) (= ($generated@@100 ($generated@@98 $generated@@409 $generated@@412) $generated@@413) ($generated@@100 ($generated@@98 $generated@@410 $generated@@412) $generated@@413))))
 :no-pattern (type $generated@@412)
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
)) (= ($generated@@204 $generated@@409 $generated@@411) ($generated@@204 $generated@@410 $generated@@411)))))
 :pattern ( ($generated@@408 $generated@@409) ($generated@@149 $generated@@409 $generated@@410) ($generated@@204 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@96 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@93 $generated@@416 $generated@@2)) (= ($generated@@191 $generated@@415) (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@416) (and (<= 0 ($generated ($generated@@98 $generated@@415 $generated@@417))) (<= ($generated ($generated@@98 $generated@@415 $generated@@417)) ($generated@@360 $generated@@415))))
 :pattern ( ($generated@@98 $generated@@415 $generated@@417))
)))))
 :pattern ( ($generated@@191 $generated@@415))
)))
(assert (forall (($generated@@419 T@T) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@419)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@185) ($generated@@227 $generated@@421 $generated@@153)) (and (= ($generated@@208 ($generated@@418 $generated@@94 $generated@@421)) $generated@@421) ($generated@@163 ($generated@@418 $generated@@94 $generated@@421) $generated@@153)))
 :pattern ( ($generated@@227 $generated@@421 $generated@@153))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@185) ($generated@@227 $generated@@422 $generated@@214)) (and (= ($generated@@208 ($generated@@418 $generated@@94 $generated@@422)) $generated@@422) ($generated@@163 ($generated@@418 $generated@@94 $generated@@422) $generated@@214)))
 :pattern ( ($generated@@227 $generated@@422 $generated@@214))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@185) ($generated@@227 $generated@@423 $generated@@157)) (and (= ($generated@@208 ($generated@@418 $generated@@94 $generated@@423)) $generated@@423) ($generated@@163 ($generated@@418 $generated@@94 $generated@@423) $generated@@157)))
 :pattern ( ($generated@@227 $generated@@423 $generated@@157))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@185) ($generated@@227 $generated@@424 $generated@@206)) (and (= ($generated@@208 ($generated@@418 $generated@@94 $generated@@424)) $generated@@424) ($generated@@163 ($generated@@418 $generated@@94 $generated@@424) $generated@@206)))
 :pattern ( ($generated@@227 $generated@@424 $generated@@206))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (= (type $generated@@425) $generated@@94) (= ($generated@@163 $generated@@425 $generated@@214)  (and ($generated@@163 $generated@@425 $generated@@153) (not (= $generated@@425 $generated@@154)))))
 :pattern ( ($generated@@163 $generated@@425 $generated@@214))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@94) (= ($generated@@163 $generated@@426 $generated@@206)  (and ($generated@@163 $generated@@426 $generated@@157) (not (= $generated@@426 $generated@@154)))))
 :pattern ( ($generated@@163 $generated@@426 $generated@@206))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@370 (type $generated@@427))))
(let (($generated@@429 ($generated@@369 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@368 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@367 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) ($generated@@0 ($generated@@98 ($generated@@366 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@366 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@370 (type $generated@@432))))
(= (type ($generated@@431 $generated@@432)) ($generated@@93 $generated@@433 $generated@@4)))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@370 (type $generated@@434))))
(let (($generated@@436 ($generated@@369 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@368 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@367 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@435) ($generated@@0 ($generated@@98 ($generated@@431 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@431 $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@388 (type $generated@@438))))
(let (($generated@@440 ($generated@@387 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@386 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@385 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) ($generated@@0 ($generated@@98 ($generated@@384 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@384 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@388 (type $generated@@443))))
(= (type ($generated@@442 $generated@@443)) ($generated@@93 $generated@@444 $generated@@4)))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@388 (type $generated@@445))))
(let (($generated@@447 ($generated@@387 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@386 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@385 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@446) ($generated@@0 ($generated@@98 ($generated@@442 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@442 $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@450) $generated@@76)) (= ($generated@@163 $generated@@449 ($generated@@190 $generated@@450)) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@185) (< 0 ($generated ($generated@@98 $generated@@449 $generated@@451)))) ($generated@@227 $generated@@451 $generated@@450))
 :pattern ( ($generated@@98 $generated@@449 $generated@@451))
))))
 :pattern ( ($generated@@163 $generated@@449 ($generated@@190 $generated@@450)))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@96 (type $generated@@454))))
(= (type ($generated@@453 $generated@@454 $generated@@455)) ($generated@@93 $generated@@456 $generated@@4)))
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@96 (type $generated@@457))))
 (=> (and (and (= (type $generated@@457) ($generated@@93 $generated@@459 $generated@@4)) (= (type $generated@@458) ($generated@@93 $generated@@459 $generated@@4))) ($generated@@452 $generated@@457 $generated@@458)) (and (= ($generated@@453 ($generated@@196 $generated@@457 $generated@@458) $generated@@457) $generated@@458) (= ($generated@@453 ($generated@@196 $generated@@457 $generated@@458) $generated@@458) $generated@@457))))
 :pattern ( ($generated@@196 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
 (=> (and (= (type $generated@@460) ($generated@@93 $generated@@463 $generated@@4)) (= (type $generated@@461) ($generated@@93 $generated@@463 $generated@@4))) (= ($generated@@0 ($generated@@98 ($generated@@453 $generated@@460 $generated@@461) $generated@@462))  (and ($generated@@0 ($generated@@98 $generated@@460 $generated@@462)) (not ($generated@@0 ($generated@@98 $generated@@461 $generated@@462)))))))
 :pattern ( ($generated@@98 ($generated@@453 $generated@@460 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@465) $generated@@76)) (= (type $generated@@466) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@464 ($generated@@236 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@185) ($generated@@0 ($generated@@98 $generated@@464 $generated@@467))) ($generated@@251 $generated@@467 $generated@@465 $generated@@466))
 :pattern ( ($generated@@98 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@91 $generated@@464 ($generated@@236 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@469) $generated@@76)) (= (type $generated@@470) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@468 ($generated@@241 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@185) ($generated@@0 ($generated@@98 $generated@@468 $generated@@471))) ($generated@@251 $generated@@471 $generated@@469 $generated@@470))
 :pattern ( ($generated@@98 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@91 $generated@@468 ($generated@@241 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 (type $generated@@472)))
(= ($generated ($generated@@98 ($generated@@361 $generated@@473) $generated@@472)) 0))
 :pattern ( (let (($generated@@473 (type $generated@@472)))
($generated@@98 ($generated@@361 $generated@@473) $generated@@472)))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@475) $generated@@94)) (=> (and (and ($generated@@161 $generated@@474) (and (not (= $generated@@475 $generated@@154)) (= ($generated@@162 $generated@@475) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@474 $generated@@475) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@474 $generated@@475) $generated@@207) ($generated@@236 $generated@@214) $generated@@474)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@474 $generated@@475) $generated@@207))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) ($generated@@93 $generated@@185 $generated@@4))
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@370 (type $generated@@479))))
(let (($generated@@481 ($generated@@369 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479)) ($generated@@93 $generated@@481 $generated@@480))))
 :pattern ( ($generated@@477 $generated@@479))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) ($generated@@368 $generated@@185 $generated@@185)) (= (type $generated@@483) $generated@@185)) (= ($generated@@0 ($generated@@98 ($generated@@476 $generated@@482) $generated@@483))  (and ($generated@@0 ($generated@@98 ($generated@@366 $generated@@482) ($generated@@183 ($generated@@418 $generated@@176 $generated@@483)))) (= ($generated@@98 ($generated@@477 $generated@@482) ($generated@@183 ($generated@@418 $generated@@176 $generated@@483))) ($generated@@184 ($generated@@418 $generated@@176 $generated@@483))))))
 :pattern ( ($generated@@98 ($generated@@476 $generated@@482) $generated@@483))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) ($generated@@93 $generated@@185 $generated@@4))
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@388 (type $generated@@487))))
(let (($generated@@489 ($generated@@387 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487)) ($generated@@93 $generated@@489 $generated@@488))))
 :pattern ( ($generated@@485 $generated@@487))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) ($generated@@386 $generated@@185 $generated@@185)) (= (type $generated@@491) $generated@@185)) (= ($generated@@0 ($generated@@98 ($generated@@484 $generated@@490) $generated@@491))  (and ($generated@@0 ($generated@@98 ($generated@@384 $generated@@490) ($generated@@183 ($generated@@418 $generated@@176 $generated@@491)))) (= ($generated@@98 ($generated@@485 $generated@@490) ($generated@@183 ($generated@@418 $generated@@176 $generated@@491))) ($generated@@184 ($generated@@418 $generated@@176 $generated@@491))))))
 :pattern ( ($generated@@98 ($generated@@484 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(let (($generated@@495 ($generated@@369 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@368 $generated@@495 $generated@@494)) (= ($generated@@0 ($generated@@98 ($generated@@431 $generated@@492) $generated@@493)) (exists (($generated@@496 T@U) ) (!  (and (= (type $generated@@496) $generated@@495) (and ($generated@@0 ($generated@@98 ($generated@@366 $generated@@492) $generated@@496)) (= $generated@@493 ($generated@@98 ($generated@@477 $generated@@492) $generated@@496))))
 :pattern ( ($generated@@98 ($generated@@366 $generated@@492) $generated@@496))
 :pattern ( ($generated@@98 ($generated@@477 $generated@@492) $generated@@496))
))))))
 :pattern ( ($generated@@98 ($generated@@431 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(let (($generated@@500 ($generated@@387 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@386 $generated@@500 $generated@@499)) (= ($generated@@0 ($generated@@98 ($generated@@442 $generated@@497) $generated@@498)) (exists (($generated@@501 T@U) ) (!  (and (= (type $generated@@501) $generated@@500) (and ($generated@@0 ($generated@@98 ($generated@@384 $generated@@497) $generated@@501)) (= $generated@@498 ($generated@@98 ($generated@@485 $generated@@497) $generated@@501))))
 :pattern ( ($generated@@98 ($generated@@384 $generated@@497) $generated@@501))
 :pattern ( ($generated@@98 ($generated@@485 $generated@@497) $generated@@501))
))))))
 :pattern ( ($generated@@98 ($generated@@442 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@503 $generated@@504)) $generated@@76)
 :pattern ( ($generated@@502 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) ($generated@@368 $generated@@185 $generated@@185)) (= (type $generated@@506) $generated@@76)) (= (type $generated@@507) $generated@@76)) (= (type $generated@@508) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@505 ($generated@@502 $generated@@506 $generated@@507) $generated@@508) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@366 $generated@@505) $generated@@509))) (and ($generated@@251 ($generated@@98 ($generated@@477 $generated@@505) $generated@@509) $generated@@507 $generated@@508) ($generated@@251 $generated@@509 $generated@@506 $generated@@508)))
 :pattern ( ($generated@@98 ($generated@@477 $generated@@505) $generated@@509))
 :pattern ( ($generated@@98 ($generated@@366 $generated@@505) $generated@@509))
))))
 :pattern ( ($generated@@91 $generated@@505 ($generated@@502 $generated@@506 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@511 $generated@@512)) $generated@@76)
 :pattern ( ($generated@@510 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) ($generated@@386 $generated@@185 $generated@@185)) (= (type $generated@@514) $generated@@76)) (= (type $generated@@515) $generated@@76)) (= (type $generated@@516) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@513 ($generated@@510 $generated@@514 $generated@@515) $generated@@516) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@384 $generated@@513) $generated@@517))) (and ($generated@@251 ($generated@@98 ($generated@@485 $generated@@513) $generated@@517) $generated@@515 $generated@@516) ($generated@@251 $generated@@517 $generated@@514 $generated@@516)))
 :pattern ( ($generated@@98 ($generated@@485 $generated@@513) $generated@@517))
 :pattern ( ($generated@@98 ($generated@@384 $generated@@513) $generated@@517))
))))
 :pattern ( ($generated@@91 $generated@@513 ($generated@@510 $generated@@514 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= (type ($generated@@518 $generated@@519 $generated@@520)) ($generated@@93 $generated@@521 $generated@@4)))
 :pattern ( ($generated@@518 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@523)))
 (=> (and (and (= (type $generated@@522) ($generated@@93 $generated@@525 $generated@@4)) (= (type $generated@@524) $generated@@525)) ($generated@@0 ($generated@@98 $generated@@522 $generated@@524))) ($generated@@0 ($generated@@98 ($generated@@518 $generated@@522 $generated@@523) $generated@@524))))
 :pattern ( ($generated@@518 $generated@@522 $generated@@523) ($generated@@98 $generated@@522 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (=> (and (and (= (type $generated@@526) ($generated@@93 $generated@@529 $generated@@4)) (= (type $generated@@527) ($generated@@93 $generated@@529 $generated@@4))) ($generated@@0 ($generated@@98 $generated@@526 $generated@@528))) ($generated@@0 ($generated@@98 ($generated@@196 $generated@@526 $generated@@527) $generated@@528))))
 :pattern ( ($generated@@196 $generated@@526 $generated@@527) ($generated@@98 $generated@@526 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (=> (and (and (= (type $generated@@530) ($generated@@93 $generated@@533 $generated@@4)) (= (type $generated@@531) ($generated@@93 $generated@@533 $generated@@4))) ($generated@@0 ($generated@@98 $generated@@531 $generated@@532))) ($generated@@0 ($generated@@98 ($generated@@196 $generated@@530 $generated@@531) $generated@@532))))
 :pattern ( ($generated@@196 $generated@@530 $generated@@531) ($generated@@98 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@535)))
 (=> (and (= (type $generated@@534) ($generated@@93 $generated@@537 $generated@@4)) (= (type $generated@@536) $generated@@537)) (= ($generated@@0 ($generated@@98 ($generated@@518 $generated@@534 $generated@@535) $generated@@536))  (or (= $generated@@536 $generated@@535) ($generated@@0 ($generated@@98 $generated@@534 $generated@@536))))))
 :pattern ( ($generated@@98 ($generated@@518 $generated@@534 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@538) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@539) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@540) ($generated@@93 $generated@@94 $generated@@95))) (not (= $generated@@538 $generated@@540))) (and ($generated@@149 $generated@@538 $generated@@539) ($generated@@149 $generated@@539 $generated@@540))) ($generated@@149 $generated@@538 $generated@@540))
 :pattern ( ($generated@@149 $generated@@538 $generated@@539) ($generated@@149 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (=> (and (and (= (type $generated@@541) ($generated@@93 $generated@@544 $generated@@4)) (= (type $generated@@542) ($generated@@93 $generated@@544 $generated@@4))) ($generated@@0 ($generated@@98 $generated@@542 $generated@@543))) (not ($generated@@0 ($generated@@98 ($generated@@453 $generated@@541 $generated@@542) $generated@@543)))))
 :pattern ( ($generated@@453 $generated@@541 $generated@@542) ($generated@@98 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@546 T@T) ) (! (= (type ($generated@@545 $generated@@546)) ($generated@@93 $generated@@546 $generated@@4))
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@388 (type $generated@@547))))
(let (($generated@@549 ($generated@@387 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@386 $generated@@549 $generated@@548)) (= (= $generated@@547 ($generated@@385 $generated@@549 $generated@@548)) (= ($generated@@384 $generated@@547) ($generated@@545 $generated@@549))))))
 :pattern ( ($generated@@384 $generated@@547))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@388 (type $generated@@550))))
(let (($generated@@552 ($generated@@387 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@386 $generated@@552 $generated@@551)) (= (= $generated@@550 ($generated@@385 $generated@@552 $generated@@551)) (= ($generated@@442 $generated@@550) ($generated@@545 $generated@@551))))))
 :pattern ( ($generated@@442 $generated@@550))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@388 (type $generated@@553))))
(let (($generated@@555 ($generated@@387 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@386 $generated@@555 $generated@@554)) (= (= $generated@@553 ($generated@@385 $generated@@555 $generated@@554)) (= ($generated@@484 $generated@@553) ($generated@@545 $generated@@185))))))
 :pattern ( ($generated@@484 $generated@@553))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@370 (type $generated@@556))))
(let (($generated@@558 ($generated@@369 (type $generated@@556))))
 (=> (= (type $generated@@556) ($generated@@368 $generated@@558 $generated@@557)) (or (= $generated@@556 ($generated@@367 $generated@@558 $generated@@557)) (exists (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (and (and (= (type $generated@@559) $generated@@185) (= (type $generated@@560) $generated@@185)) ($generated@@0 ($generated@@98 ($generated@@476 $generated@@556) ($generated@@208 ($generated@@226 $generated@@559 $generated@@560)))))
 :no-pattern (type $generated@@559)
 :no-pattern (type $generated@@560)
 :no-pattern ($generated $generated@@559)
 :no-pattern ($generated@@0 $generated@@559)
 :no-pattern ($generated $generated@@560)
 :no-pattern ($generated@@0 $generated@@560)
))))))
 :pattern ( ($generated@@476 $generated@@556))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@388 (type $generated@@561))))
(let (($generated@@563 ($generated@@387 (type $generated@@561))))
 (=> (= (type $generated@@561) ($generated@@386 $generated@@563 $generated@@562)) (or (= $generated@@561 ($generated@@385 $generated@@563 $generated@@562)) (exists (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (and (and (= (type $generated@@564) $generated@@185) (= (type $generated@@565) $generated@@185)) ($generated@@0 ($generated@@98 ($generated@@484 $generated@@561) ($generated@@208 ($generated@@226 $generated@@564 $generated@@565)))))
 :no-pattern (type $generated@@564)
 :no-pattern (type $generated@@565)
 :no-pattern ($generated $generated@@564)
 :no-pattern ($generated@@0 $generated@@564)
 :no-pattern ($generated $generated@@565)
 :no-pattern ($generated@@0 $generated@@565)
))))))
 :pattern ( ($generated@@484 $generated@@561))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@82)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@T) ) (!  (=> (and (= (type $generated@@568) $generated@@82) (= (type $generated@@569) $generated@@80)) (and (= ($generated@@566 ($generated@@219 $generated@@570 $generated@@568 $generated@@569)) $generated@@568) (= ($generated@@89 ($generated@@219 $generated@@570 $generated@@568 $generated@@569)) $generated@@569)))
 :pattern ( ($generated@@219 $generated@@570 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@185) ($generated@@227 $generated@@571 $generated@@46)) (and (= ($generated@@208 ($generated@@418 $generated@@2 $generated@@571)) $generated@@571) ($generated@@163 ($generated@@418 $generated@@2 $generated@@571) $generated@@46)))
 :pattern ( ($generated@@227 $generated@@571 $generated@@46))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@185) ($generated@@227 $generated@@572 $generated@@47)) (and (= ($generated@@208 ($generated@@418 $generated@@3 $generated@@572)) $generated@@572) ($generated@@163 ($generated@@418 $generated@@3 $generated@@572) $generated@@47)))
 :pattern ( ($generated@@227 $generated@@572 $generated@@47))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@185) ($generated@@227 $generated@@573 $generated@@44)) (and (= ($generated@@208 ($generated@@418 $generated@@4 $generated@@573)) $generated@@573) ($generated@@163 ($generated@@418 $generated@@4 $generated@@573) $generated@@44)))
 :pattern ( ($generated@@227 $generated@@573 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@574) 22))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@185) ($generated@@227 $generated@@575 $generated@@45)) (and (= ($generated@@208 ($generated@@418 $generated@@574 $generated@@575)) $generated@@575) ($generated@@163 ($generated@@418 $generated@@574 $generated@@575) $generated@@45)))
 :pattern ( ($generated@@227 $generated@@575 $generated@@45))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@76) (= ($generated@@227 ($generated@@208 $generated@@576) $generated@@577) ($generated@@163 $generated@@576 $generated@@577)))
 :pattern ( ($generated@@227 ($generated@@208 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@96 (type $generated@@578))))
 (=> (= (type $generated@@578) ($generated@@93 $generated@@579 $generated@@2)) (<= 0 ($generated@@360 $generated@@578))))
 :pattern ( ($generated@@360 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@266 (type $generated@@580))))
 (=> (= (type $generated@@580) ($generated@@265 $generated@@581)) (<= 0 ($generated@@264 $generated@@580))))
 :pattern ( ($generated@@264 $generated@@580))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@76)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@76) (= (type $generated@@585) $generated@@76)) (= ($generated@@582 ($generated@@502 $generated@@584 $generated@@585)) $generated@@584))
 :pattern ( ($generated@@502 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@76)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@76) (= (type $generated@@589) $generated@@76)) (= ($generated@@586 ($generated@@502 $generated@@588 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@502 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@76) (= (type $generated@@591) $generated@@76)) (= ($generated@@87 ($generated@@502 $generated@@590 $generated@@591)) $generated@@58))
 :pattern ( ($generated@@502 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@76)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@76) (= (type $generated@@595) $generated@@76)) (= ($generated@@592 ($generated@@510 $generated@@594 $generated@@595)) $generated@@594))
 :pattern ( ($generated@@510 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@76)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@76) (= (type $generated@@599) $generated@@76)) (= ($generated@@596 ($generated@@510 $generated@@598 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@510 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@76) (= (type $generated@@601) $generated@@76)) (= ($generated@@87 ($generated@@510 $generated@@600 $generated@@601)) $generated@@59))
 :pattern ( ($generated@@510 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@185) (= (type $generated@@603) $generated@@185)) (= ($generated@@257 ($generated@@226 $generated@@602 $generated@@603)) $generated@@64))
 :pattern ( ($generated@@226 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@76)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@76) (= (type $generated@@607) $generated@@76)) (= ($generated@@604 ($generated@@175 $generated@@606 $generated@@607)) $generated@@606))
 :pattern ( ($generated@@175 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ) (! (= (type ($generated@@608 $generated@@609)) $generated@@76)
 :pattern ( ($generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@76) (= (type $generated@@611) $generated@@76)) (= ($generated@@608 ($generated@@175 $generated@@610 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@175 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@185) (= (type $generated@@613) $generated@@185)) (= ($generated@@183 ($generated@@226 $generated@@612 $generated@@613)) $generated@@612))
 :pattern ( ($generated@@226 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@185) (= (type $generated@@615) $generated@@185)) (= ($generated@@184 ($generated@@226 $generated@@614 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@226 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@94) ($generated@@163 $generated@@616 $generated@@153))
 :pattern ( ($generated@@163 $generated@@616 $generated@@153))
)))
(assert  (and (forall (($generated@@619 T@U) ) (! (= (type ($generated@@617 $generated@@619)) $generated@@76)
 :pattern ( ($generated@@617 $generated@@619))
)) (forall (($generated@@620 T@U) ($generated@@621 Int) ) (! (let (($generated@@622 ($generated@@266 (type $generated@@620))))
(= (type ($generated@@618 $generated@@620 $generated@@621)) $generated@@622))
 :pattern ( ($generated@@618 $generated@@620 $generated@@621))
))))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@265 $generated@@185)) (= (type $generated@@624) $generated@@76)) (= (type $generated@@625) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@623 ($generated@@617 $generated@@624) $generated@@625) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@264 $generated@@623))) ($generated@@251 ($generated@@618 $generated@@623 $generated@@626) $generated@@624 $generated@@625))
 :pattern ( ($generated@@618 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@91 $generated@@623 ($generated@@617 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
 (=> (= (type $generated@@627) ($generated@@93 $generated@@629 $generated@@4)) ($generated@@0 ($generated@@98 ($generated@@518 $generated@@627 $generated@@628) $generated@@628))))
 :pattern ( ($generated@@518 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@630 ($generated@@92 $generated@@631)) $generated@@631)
 :pattern ( ($generated@@92 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@76)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@76) (= ($generated@@632 ($generated@@236 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@236 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@76) (= ($generated@@87 ($generated@@236 $generated@@635)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ) (! (= (type ($generated@@636 $generated@@637)) $generated@@76)
 :pattern ( ($generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@76) (= ($generated@@636 ($generated@@241 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@241 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@76) (= ($generated@@87 ($generated@@241 $generated@@639)) $generated@@55))
 :pattern ( ($generated@@241 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (! (= (type ($generated@@640 $generated@@641)) $generated@@76)
 :pattern ( ($generated@@640 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@76) (= ($generated@@640 ($generated@@190 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@190 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@76) (= ($generated@@87 ($generated@@190 $generated@@643)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ) (! (= (type ($generated@@644 $generated@@645)) $generated@@76)
 :pattern ( ($generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@76) (= ($generated@@644 ($generated@@617 $generated@@646)) $generated@@646))
 :pattern ( ($generated@@617 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@76) (= ($generated@@87 ($generated@@617 $generated@@647)) $generated@@57))
 :pattern ( ($generated@@617 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@648)))
(= ($generated@@418 $generated@@649 ($generated@@208 $generated@@648)) $generated@@648))
 :pattern ( ($generated@@208 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@650) ($generated@@368 $generated@@185 $generated@@185)) (= (type $generated@@651) $generated@@76)) (= (type $generated@@652) $generated@@76)) (= ($generated@@163 $generated@@650 ($generated@@502 $generated@@651 $generated@@652)) (forall (($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@366 $generated@@650) $generated@@653))) (and ($generated@@227 ($generated@@98 ($generated@@477 $generated@@650) $generated@@653) $generated@@652) ($generated@@227 $generated@@653 $generated@@651)))
 :pattern ( ($generated@@98 ($generated@@477 $generated@@650) $generated@@653))
 :pattern ( ($generated@@98 ($generated@@366 $generated@@650) $generated@@653))
))))
 :pattern ( ($generated@@163 $generated@@650 ($generated@@502 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@654) ($generated@@386 $generated@@185 $generated@@185)) (= (type $generated@@655) $generated@@76)) (= (type $generated@@656) $generated@@76)) (= ($generated@@163 $generated@@654 ($generated@@510 $generated@@655 $generated@@656)) (forall (($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@384 $generated@@654) $generated@@657))) (and ($generated@@227 ($generated@@98 ($generated@@485 $generated@@654) $generated@@657) $generated@@656) ($generated@@227 $generated@@657 $generated@@655)))
 :pattern ( ($generated@@98 ($generated@@485 $generated@@654) $generated@@657))
 :pattern ( ($generated@@98 ($generated@@384 $generated@@654) $generated@@657))
))))
 :pattern ( ($generated@@163 $generated@@654 ($generated@@510 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@185) (= (type $generated@@661) $generated@@185)) (< ($generated@@658 $generated@@660) ($generated@@659 ($generated@@226 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@226 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@185) (= (type $generated@@663) $generated@@185)) (< ($generated@@658 $generated@@663) ($generated@@659 ($generated@@226 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@226 $generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@96 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@93 $generated@@666 $generated@@4)) (= (type $generated@@665) ($generated@@93 $generated@@666 $generated@@4))) (= ($generated@@196 $generated@@664 ($generated@@196 $generated@@664 $generated@@665)) ($generated@@196 $generated@@664 $generated@@665))))
 :pattern ( ($generated@@196 $generated@@664 ($generated@@196 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@185) (= (type $generated@@668) $generated@@76)) (= (type $generated@@669) $generated@@76)) ($generated@@227 $generated@@667 ($generated@@502 $generated@@668 $generated@@669))) (and (= ($generated@@208 ($generated@@418 ($generated@@368 $generated@@185 $generated@@185) $generated@@667)) $generated@@667) ($generated@@163 ($generated@@418 ($generated@@368 $generated@@185 $generated@@185) $generated@@667) ($generated@@502 $generated@@668 $generated@@669))))
 :pattern ( ($generated@@227 $generated@@667 ($generated@@502 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) $generated@@185) (= (type $generated@@671) $generated@@76)) (= (type $generated@@672) $generated@@76)) ($generated@@227 $generated@@670 ($generated@@510 $generated@@671 $generated@@672))) (and (= ($generated@@208 ($generated@@418 ($generated@@386 $generated@@185 $generated@@185) $generated@@670)) $generated@@670) ($generated@@163 ($generated@@418 ($generated@@386 $generated@@185 $generated@@185) $generated@@670) ($generated@@510 $generated@@671 $generated@@672))))
 :pattern ( ($generated@@227 $generated@@670 ($generated@@510 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) $generated@@76) (= (type $generated@@674) $generated@@76)) (= (type $generated@@675) $generated@@185)) ($generated@@227 $generated@@675 ($generated@@175 $generated@@673 $generated@@674))) (and (= ($generated@@208 ($generated@@418 $generated@@176 $generated@@675)) $generated@@675) ($generated@@163 ($generated@@418 $generated@@176 $generated@@675) ($generated@@175 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@227 $generated@@675 ($generated@@175 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@677 T@T) ) (! (= (type ($generated@@676 $generated@@677)) ($generated@@93 $generated@@677 $generated@@4))
 :pattern ( ($generated@@676 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ) (! (let (($generated@@679 (type $generated@@678)))
 (not ($generated@@0 ($generated@@98 ($generated@@676 $generated@@679) $generated@@678))))
 :pattern ( (let (($generated@@679 (type $generated@@678)))
($generated@@98 ($generated@@676 $generated@@679) $generated@@678)))
)))
(assert (forall (($generated@@680 T@U) ) (! (let (($generated@@681 (type $generated@@680)))
 (not ($generated@@0 ($generated@@98 ($generated@@545 $generated@@681) $generated@@680))))
 :pattern ( (let (($generated@@681 (type $generated@@680)))
($generated@@98 ($generated@@545 $generated@@681) $generated@@680)))
)))
(assert (forall (($generated@@683 T@U) ) (! (= (type ($generated@@682 $generated@@683)) $generated@@83)
 :pattern ( ($generated@@682 $generated@@683))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) $generated@@76) (= (type $generated@@685) $generated@@76)) (and (= ($generated@@87 ($generated@@175 $generated@@684 $generated@@685)) $generated@@65) (= ($generated@@682 ($generated@@175 $generated@@684 $generated@@685)) $generated@@70)))
 :pattern ( ($generated@@175 $generated@@684 $generated@@685))
)))
(assert (forall (($generated@@686 Int) ($generated@@687 Int) ) (! (= ($generated@@209 $generated@@686 $generated@@687) (* $generated@@686 $generated@@687))
 :pattern ( ($generated@@209 $generated@@686 $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@176) (= ($generated@@658 ($generated@@208 $generated@@688)) ($generated@@659 $generated@@688)))
 :pattern ( ($generated@@658 ($generated@@208 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@185) ($generated@@227 $generated@@689 ($generated@@92 0))) (and (= ($generated@@208 ($generated@@418 $generated@@2 $generated@@689)) $generated@@689) ($generated@@163 ($generated@@418 ($generated@@93 $generated@@185 $generated@@4) $generated@@689) ($generated@@92 0))))
 :pattern ( ($generated@@227 $generated@@689 ($generated@@92 0)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (= (type $generated@@690) $generated@@185) (= (type $generated@@691) $generated@@76)) ($generated@@227 $generated@@690 ($generated@@236 $generated@@691))) (and (= ($generated@@208 ($generated@@418 ($generated@@93 $generated@@185 $generated@@4) $generated@@690)) $generated@@690) ($generated@@163 ($generated@@418 ($generated@@93 $generated@@185 $generated@@4) $generated@@690) ($generated@@236 $generated@@691))))
 :pattern ( ($generated@@227 $generated@@690 ($generated@@236 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (= (type $generated@@692) $generated@@185) (= (type $generated@@693) $generated@@76)) ($generated@@227 $generated@@692 ($generated@@241 $generated@@693))) (and (= ($generated@@208 ($generated@@418 ($generated@@93 $generated@@185 $generated@@4) $generated@@692)) $generated@@692) ($generated@@163 ($generated@@418 ($generated@@93 $generated@@185 $generated@@4) $generated@@692) ($generated@@241 $generated@@693))))
 :pattern ( ($generated@@227 $generated@@692 ($generated@@241 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@694) $generated@@185) (= (type $generated@@695) $generated@@76)) ($generated@@227 $generated@@694 ($generated@@190 $generated@@695))) (and (= ($generated@@208 ($generated@@418 ($generated@@93 $generated@@185 $generated@@2) $generated@@694)) $generated@@694) ($generated@@163 ($generated@@418 ($generated@@93 $generated@@185 $generated@@2) $generated@@694) ($generated@@190 $generated@@695))))
 :pattern ( ($generated@@227 $generated@@694 ($generated@@190 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@185) (= (type $generated@@697) $generated@@76)) ($generated@@227 $generated@@696 ($generated@@617 $generated@@697))) (and (= ($generated@@208 ($generated@@418 ($generated@@265 $generated@@185) $generated@@696)) $generated@@696) ($generated@@163 ($generated@@418 ($generated@@265 $generated@@185) $generated@@696) ($generated@@617 $generated@@697))))
 :pattern ( ($generated@@227 $generated@@696 ($generated@@617 $generated@@697)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (! (let (($generated@@701 ($generated@@96 (type $generated@@699))))
 (=> (and (= (type $generated@@699) ($generated@@93 $generated@@701 $generated@@4)) (= (type $generated@@700) ($generated@@93 $generated@@701 $generated@@4))) (= ($generated@@698 $generated@@699 $generated@@700) (forall (($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@701) ($generated@@0 ($generated@@98 $generated@@699 $generated@@702))) ($generated@@0 ($generated@@98 $generated@@700 $generated@@702)))
 :pattern ( ($generated@@98 $generated@@699 $generated@@702))
 :pattern ( ($generated@@98 $generated@@700 $generated@@702))
)))))
 :pattern ( ($generated@@698 $generated@@699 $generated@@700))
)))
(assert (= ($generated@@87 $generated@@153) $generated@@62))
(assert (= ($generated@@682 $generated@@153) $generated@@69))
(assert (= ($generated@@87 $generated@@214) $generated@@63))
(assert (= ($generated@@682 $generated@@214) $generated@@69))
(assert (= ($generated@@87 $generated@@157) $generated@@67))
(assert (= ($generated@@682 $generated@@157) $generated@@71))
(assert (= ($generated@@87 $generated@@206) $generated@@68))
(assert (= ($generated@@682 $generated@@206) $generated@@71))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (and (= (type $generated@@703) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@704) $generated@@76)) (= (type $generated@@705) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@703 ($generated@@190 $generated@@704) $generated@@705) (forall (($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@706) $generated@@185) (< 0 ($generated ($generated@@98 $generated@@703 $generated@@706)))) ($generated@@251 $generated@@706 $generated@@704 $generated@@705))
 :pattern ( ($generated@@98 $generated@@703 $generated@@706))
))))
 :pattern ( ($generated@@91 $generated@@703 ($generated@@190 $generated@@704) $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (! (let (($generated@@709 ($generated@@96 (type $generated@@707))))
 (=> (and (= (type $generated@@707) ($generated@@93 $generated@@709 $generated@@4)) (= (type $generated@@708) ($generated@@93 $generated@@709 $generated@@4))) (= ($generated@@452 $generated@@707 $generated@@708) (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@709) (or (not ($generated@@0 ($generated@@98 $generated@@707 $generated@@710))) (not ($generated@@0 ($generated@@98 $generated@@708 $generated@@710)))))
 :pattern ( ($generated@@98 $generated@@707 $generated@@710))
 :pattern ( ($generated@@98 $generated@@708 $generated@@710))
)))))
 :pattern ( ($generated@@452 $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (and (= (type $generated@@711) $generated@@176) (= (type $generated@@712) $generated@@76)) (= (type $generated@@713) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@161 $generated@@713) (and ($generated@@174 $generated@@711) (exists (($generated@@714 T@U) ) (!  (and (= (type $generated@@714) $generated@@76) ($generated@@91 $generated@@711 ($generated@@175 $generated@@712 $generated@@714) $generated@@713))
 :pattern ( ($generated@@91 $generated@@711 ($generated@@175 $generated@@712 $generated@@714) $generated@@713))
))))) ($generated@@251 ($generated@@183 $generated@@711) $generated@@712 $generated@@713))
 :pattern ( ($generated@@251 ($generated@@183 $generated@@711) $generated@@712 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (and (= (type $generated@@715) $generated@@176) (= (type $generated@@716) $generated@@76)) (= (type $generated@@717) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@161 $generated@@717) (and ($generated@@174 $generated@@715) (exists (($generated@@718 T@U) ) (!  (and (= (type $generated@@718) $generated@@76) ($generated@@91 $generated@@715 ($generated@@175 $generated@@718 $generated@@716) $generated@@717))
 :pattern ( ($generated@@91 $generated@@715 ($generated@@175 $generated@@718 $generated@@716) $generated@@717))
))))) ($generated@@251 ($generated@@184 $generated@@715) $generated@@716 $generated@@717))
 :pattern ( ($generated@@251 ($generated@@184 $generated@@715) $generated@@716 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@719) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@720) $generated@@94)) (and ($generated@@161 $generated@@719) (and (not (= $generated@@720 $generated@@154)) (= ($generated@@162 $generated@@720) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@719 $generated@@720) $generated@@207) ($generated@@236 $generated@@214)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@719 $generated@@720) $generated@@207))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@185) (= (type $generated@@722) $generated@@185)) (= ($generated@@226 ($generated@@247 $generated@@721) ($generated@@247 $generated@@722)) ($generated@@247 ($generated@@226 $generated@@721 $generated@@722))))
 :pattern ( ($generated@@226 ($generated@@247 $generated@@721) ($generated@@247 $generated@@722)))
)))
(assert (forall (($generated@@723 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@210 $generated@@723))) ($generated@@247 ($generated@@208 ($generated@@8 $generated@@723))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@210 $generated@@723))))
)))
(assert (forall (($generated@@724 T@U) ) (! (= ($generated@@208 ($generated@@247 $generated@@724)) ($generated@@247 ($generated@@208 $generated@@724)))
 :pattern ( ($generated@@208 ($generated@@247 $generated@@724)))
)))
(assert (forall (($generated@@725 T@U) ) (! (let (($generated@@726 ($generated@@266 (type $generated@@725))))
 (=> (and (= (type $generated@@725) ($generated@@265 $generated@@726)) (= ($generated@@264 $generated@@725) 0)) (= $generated@@725 ($generated@@263 $generated@@726))))
 :pattern ( ($generated@@264 $generated@@725))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ($generated@@729 T@U) ) (! (let (($generated@@730 (type $generated@@728)))
 (=> (and (and (= (type $generated@@727) ($generated@@93 $generated@@730 $generated@@2)) (= (type $generated@@729) $generated@@2)) (<= 0 ($generated $generated@@729))) (= ($generated@@360 ($generated@@99 $generated@@727 $generated@@728 $generated@@729)) (+ (- ($generated@@360 $generated@@727) ($generated ($generated@@98 $generated@@727 $generated@@728))) ($generated $generated@@729)))))
 :pattern ( ($generated@@360 ($generated@@99 $generated@@727 $generated@@728 $generated@@729)))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ) (! (let (($generated@@734 (type $generated@@733)))
 (=> (and (= (type $generated@@731) ($generated@@93 $generated@@734 $generated@@4)) (= (type $generated@@732) ($generated@@93 $generated@@734 $generated@@4))) (= ($generated@@0 ($generated@@98 ($generated@@196 $generated@@731 $generated@@732) $generated@@733))  (or ($generated@@0 ($generated@@98 $generated@@731 $generated@@733)) ($generated@@0 ($generated@@98 $generated@@732 $generated@@733))))))
 :pattern ( ($generated@@98 ($generated@@196 $generated@@731 $generated@@732) $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@735) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@736) $generated@@2)) ($generated@@91 $generated@@736 $generated@@46 $generated@@735))
 :pattern ( ($generated@@91 $generated@@736 $generated@@46 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (= (type $generated@@737) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@738) $generated@@3)) ($generated@@91 $generated@@738 $generated@@47 $generated@@737))
 :pattern ( ($generated@@91 $generated@@738 $generated@@47 $generated@@737))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@739) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@740) $generated@@4)) ($generated@@91 $generated@@740 $generated@@44 $generated@@739))
 :pattern ( ($generated@@91 $generated@@740 $generated@@44 $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (= (type $generated@@741) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@742) $generated@@574)) ($generated@@91 $generated@@742 $generated@@45 $generated@@741))
 :pattern ( ($generated@@91 $generated@@742 $generated@@45 $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (= (type $generated@@743) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@744) $generated@@185)) ($generated@@91 $generated@@744 $generated@@48 $generated@@743))
 :pattern ( ($generated@@91 $generated@@744 $generated@@48 $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (= (type $generated@@745) ($generated@@265 $generated@@185)) (= (type $generated@@746) $generated@@76)) (= ($generated@@163 $generated@@745 ($generated@@617 $generated@@746)) (forall (($generated@@747 Int) ) (!  (=> (and (<= 0 $generated@@747) (< $generated@@747 ($generated@@264 $generated@@745))) ($generated@@227 ($generated@@618 $generated@@745 $generated@@747) $generated@@746))
 :pattern ( ($generated@@618 $generated@@745 $generated@@747))
))))
 :pattern ( ($generated@@163 $generated@@745 ($generated@@617 $generated@@746)))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 Int) ) (!  (=> (= (type $generated@@749) ($generated@@265 $generated@@185)) (=> (and (<= 0 $generated@@750) (< $generated@@750 ($generated@@264 $generated@@749))) (< ($generated@@659 ($generated@@418 $generated@@176 ($generated@@618 $generated@@749 $generated@@750))) ($generated@@748 $generated@@749))))
 :pattern ( ($generated@@659 ($generated@@418 $generated@@176 ($generated@@618 $generated@@749 $generated@@750))))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (and (and (= (type $generated@@751) ($generated@@368 $generated@@185 $generated@@185)) (= (type $generated@@752) $generated@@76)) (= (type $generated@@753) $generated@@76)) ($generated@@163 $generated@@751 ($generated@@502 $generated@@752 $generated@@753))) (and (and ($generated@@163 ($generated@@366 $generated@@751) ($generated@@236 $generated@@752)) ($generated@@163 ($generated@@431 $generated@@751) ($generated@@236 $generated@@753))) ($generated@@163 ($generated@@476 $generated@@751) ($generated@@236 ($generated@@175 $generated@@752 $generated@@753)))))
 :pattern ( ($generated@@163 $generated@@751 ($generated@@502 $generated@@752 $generated@@753)))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (and (and (= (type $generated@@754) ($generated@@386 $generated@@185 $generated@@185)) (= (type $generated@@755) $generated@@76)) (= (type $generated@@756) $generated@@76)) ($generated@@163 $generated@@754 ($generated@@510 $generated@@755 $generated@@756))) (and (and ($generated@@163 ($generated@@384 $generated@@754) ($generated@@241 $generated@@755)) ($generated@@163 ($generated@@442 $generated@@754) ($generated@@241 $generated@@756))) ($generated@@163 ($generated@@484 $generated@@754) ($generated@@241 ($generated@@175 $generated@@755 $generated@@756)))))
 :pattern ( ($generated@@163 $generated@@754 ($generated@@510 $generated@@755 $generated@@756)))
)))
(assert (forall (($generated@@757 T@U) ) (!  (=> (= (type $generated@@757) $generated@@2) ($generated@@163 $generated@@757 $generated@@46))
 :pattern ( ($generated@@163 $generated@@757 $generated@@46))
)))
(assert (forall (($generated@@758 T@U) ) (!  (=> (= (type $generated@@758) $generated@@3) ($generated@@163 $generated@@758 $generated@@47))
 :pattern ( ($generated@@163 $generated@@758 $generated@@47))
)))
(assert (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) $generated@@4) ($generated@@163 $generated@@759 $generated@@44))
 :pattern ( ($generated@@163 $generated@@759 $generated@@44))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) $generated@@574) ($generated@@163 $generated@@760 $generated@@45))
 :pattern ( ($generated@@163 $generated@@760 $generated@@45))
)))
(assert (forall (($generated@@761 T@U) ) (!  (=> (= (type $generated@@761) $generated@@185) ($generated@@163 $generated@@761 $generated@@48))
 :pattern ( ($generated@@163 $generated@@761 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@762 () T@U)
(declare-fun $generated@@763 () T@U)
(declare-fun $generated@@764 () Bool)
(declare-fun $generated@@765 () Bool)
(declare-fun $generated@@766 () Bool)
(declare-fun $generated@@767 () Bool)
(declare-fun $generated@@768 () Bool)
(declare-fun $generated@@769 () T@U)
(declare-fun $generated@@770 () Bool)
(declare-fun $generated@@771 () Bool)
(declare-fun $generated@@772 () T@U)
(declare-fun $generated@@773 () Bool)
(assert  (and (and (and (= (type $generated@@763) $generated@@94) (= (type $generated@@762) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@769) ($generated@@273 $generated@@94 $generated@@4))) (= (type $generated@@772) ($generated@@273 $generated@@94 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@774  (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@204 $generated@@762 $generated@@763) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@208 $generated@@763)))))))
(let (($generated@@775  (=> (and (= ($generated@@204 $generated@@762 $generated@@763)  (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@208 $generated@@763))) (= ($generated ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@170)) (- ($generated@@209 ($generated@@210 2) ($generated ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@160))) ($generated ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@167)))))) ($generated@@163 ($generated@@11 ($generated@@204 $generated@@762 $generated@@763)) $generated@@44)) (and (=> (= (ControlFlow 0 7) (- 0 11)) $generated@@764) (=> $generated@@764 (and (=> (= (ControlFlow 0 7) (- 0 10)) $generated@@765) (=> $generated@@765 (and (=> (= (ControlFlow 0 7) (- 0 9)) $generated@@766) (=> $generated@@766 (and (=> (= (ControlFlow 0 7) (- 0 8)) $generated@@767) (=> $generated@@767 (=> (= (ControlFlow 0 7) 6) $generated@@774))))))))))))
(let (($generated@@776  (=> (not ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@208 $generated@@763)))) (=> (and (and (= $generated@@765 true) (= $generated@@766 true)) (and (= $generated@@767 true) (= (ControlFlow 0 13) 7))) $generated@@775))))
(let (($generated@@777  (=> (and (and (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@208 $generated@@763))) (= $generated@@768 ($generated@@0 ($generated@@271 $generated@@769 $generated@@763 $generated@@170)))) (and (= $generated@@770 ($generated@@0 ($generated@@271 $generated@@769 $generated@@763 $generated@@160))) (= $generated@@771 ($generated@@0 ($generated@@271 $generated@@769 $generated@@763 $generated@@167))))) (and (and (= $generated@@765 $generated@@768) (= $generated@@766 $generated@@770)) (and (= $generated@@767 $generated@@771) (= (ControlFlow 0 12) 7)))) $generated@@775)))
(let (($generated@@778  (=> (and (= $generated@@772 ($generated@@329 $generated@@154 $generated@@762 $generated@@60 $generated@@763 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207))) (= $generated@@764 ($generated@@0 ($generated@@271 $generated@@769 $generated@@763 $generated@@207)))) (and (=> (= (ControlFlow 0 14) 12) $generated@@777) (=> (= (ControlFlow 0 14) 13) $generated@@776)))))
(let (($generated@@779 true))
(let (($generated@@780  (=> (and (=> ($generated@@204 $generated@@762 $generated@@763) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@208 $generated@@763)))) (= (ControlFlow 0 4) 1)) $generated@@779)))
(let (($generated@@781  (=> ($generated@@91 $generated@@763 $generated@@157 $generated@@762) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@763 $generated@@763) (and ($generated@@698 ($generated@@196 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@518 ($generated@@676 $generated@@185) ($generated@@208 $generated@@763))) ($generated@@196 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@518 ($generated@@676 $generated@@185) ($generated@@208 $generated@@763)))) (not ($generated@@698 ($generated@@196 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@518 ($generated@@676 $generated@@185) ($generated@@208 $generated@@763))) ($generated@@196 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@518 ($generated@@676 $generated@@185) ($generated@@208 $generated@@763)))))))) (=> (or (= $generated@@763 $generated@@763) (and ($generated@@698 ($generated@@196 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@518 ($generated@@676 $generated@@185) ($generated@@208 $generated@@763))) ($generated@@196 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@518 ($generated@@676 $generated@@185) ($generated@@208 $generated@@763)))) (not ($generated@@698 ($generated@@196 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@518 ($generated@@676 $generated@@185) ($generated@@208 $generated@@763))) ($generated@@196 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@518 ($generated@@676 $generated@@185) ($generated@@208 $generated@@763))))))) (=> (and (and (or (= $generated@@763 $generated@@763) ($generated@@205 $generated@@762 $generated@@763)) ($generated@@204 $generated@@762 $generated@@763)) (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207) ($generated@@208 $generated@@763))) (= (ControlFlow 0 2) 1))) $generated@@779))))))
(let (($generated@@782  (=> (= $generated@@769 ($generated@@272 $generated@@154 $generated@@762 $generated@@60 $generated@@763 ($generated@@100 ($generated@@98 $generated@@762 $generated@@763) $generated@@207))) (=> (and (= $generated@@773 ($generated@@0 ($generated@@271 $generated@@769 $generated@@763 $generated@@207))) $generated@@773) (and (and (=> (= (ControlFlow 0 15) 14) $generated@@778) (=> (= (ControlFlow 0 15) 2) $generated@@781)) (=> (= (ControlFlow 0 15) 4) $generated@@780))))))
(let (($generated@@783  (=> (and ($generated@@161 $generated@@762) ($generated@@408 $generated@@762)) (=> (and (and (not (= $generated@@763 $generated@@154)) (and ($generated@@163 $generated@@763 $generated@@206) ($generated@@91 $generated@@763 $generated@@206 $generated@@762))) (and (= 0 $generated@@203) (= (ControlFlow 0 16) 15))) $generated@@782))))
$generated@@783)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@258 (Int Int) Int)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@268 (T@T T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@379 (T@U T@U) Bool)
(declare-fun $generated@@385 (T@U) Bool)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@U T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@498 (T@T) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@527 () T@T)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@571 (T@U Int) T@U)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(declare-fun $generated@@626 (T@T) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@690 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@78 $generated@@85))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@61) $generated@@80)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@64) $generated@@81)) (= (type $generated@@65) $generated@@77)) (= ($generated@@1 $generated@@82) 11)) (= (type $generated@@66) $generated@@82)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@83) 12)) (= (type $generated@@69) $generated@@83)) (= (type $generated@@70) $generated@@83)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)) (= (type $generated@@75) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (= ($generated@@86 $generated@@60) 0))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@77)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@44) $generated@@49))
(assert (= ($generated@@87 $generated@@45) $generated@@50))
(assert (= ($generated@@87 $generated@@46) $generated@@51))
(assert (= ($generated@@87 $generated@@47) $generated@@52))
(assert (= ($generated@@87 $generated@@48) $generated@@53))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@80)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 13)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@79 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 15)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@79 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@76)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@151) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@149 $generated@@150 $generated@@151)) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@94) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@150 $generated@@152) $generated@@60))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@151 $generated@@152) $generated@@60)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@151 $generated@@152) $generated@@60))
)))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert  (and (= (type $generated@@153) $generated@@76) (= (type $generated@@154) $generated@@94)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@94) (= (type $generated@@156) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@155 $generated@@153 $generated@@156)  (or (= $generated@@155 $generated@@154) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@155 $generated@@153 $generated@@156))
)))
(assert (= (type $generated@@157) $generated@@76))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@94) (= (type $generated@@159) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@158 $generated@@157 $generated@@159)  (or (= $generated@@158 $generated@@154) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@159 $generated@@158) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@158 $generated@@157 $generated@@159))
)))
(assert  (and (= (type $generated@@160) ($generated@@78 $generated@@2)) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@76)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@166) $generated@@94)) (and ($generated@@161 $generated@@165) (and (not (= $generated@@166 $generated@@154)) (= ($generated@@162 $generated@@166) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@165 $generated@@166) $generated@@160) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@165 $generated@@166) $generated@@160))
)))
(assert (= (type $generated@@167) ($generated@@78 $generated@@2)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@169) $generated@@94)) (and ($generated@@161 $generated@@168) (and (not (= $generated@@169 $generated@@154)) (= ($generated@@162 $generated@@169) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@168 $generated@@169) $generated@@167) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@168 $generated@@169) $generated@@167))
)))
(assert (= (type $generated@@170) ($generated@@78 $generated@@2)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@172) $generated@@94)) (and ($generated@@161 $generated@@171) (and (not (= $generated@@172 $generated@@154)) (= ($generated@@162 $generated@@172) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@171 $generated@@172) $generated@@170) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@171 $generated@@172) $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@2) ($generated@@163 $generated@@173 ($generated@@92 0)))
 :pattern ( ($generated@@163 $generated@@173 ($generated@@92 0)))
)))
(assert  (and (= ($generated@@1 $generated@@176) 16) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@76)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@76) (= (type $generated@@180) $generated@@76)) (= (type $generated@@181) $generated@@176)) ($generated@@163 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@163 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (and (= ($generated@@1 $generated@@185) 17) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@186))
))) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@185)
 :pattern ( ($generated@@184 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@176) (= (type $generated@@189) $generated@@176)) true) (= ($generated@@182 $generated@@188 $generated@@189)  (and (= ($generated@@183 $generated@@188) ($generated@@183 $generated@@189)) (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)))))
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@76)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@194) $generated@@76)) ($generated@@163 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@163 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= (type $generated@@195) $generated@@94) (= ($generated@@163 $generated@@195 $generated@@157)  (or (= $generated@@195 $generated@@154) (= ($generated@@162 $generated@@195) $generated@@157))))
 :pattern ( ($generated@@163 $generated@@195 $generated@@157))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 18)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@94 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@79 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@94) (= (type $generated@@246) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@247) ($generated@@78 $generated@@4))) (= (type $generated@@249) $generated@@94)) (= (type $generated@@250) ($generated@@78 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert  (and (and (= (type $generated@@255) $generated@@76) (= (type $generated@@256) ($generated@@78 ($generated@@93 $generated@@185 $generated@@4)))) (forall (($generated@@260 T@U) ) (! (= (type ($generated@@257 $generated@@260)) $generated@@185)
 :pattern ( ($generated@@257 $generated@@260))
))))
(assert  (=> (<= 0 $generated@@252) (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@262) $generated@@94)) (or ($generated@@254 $generated@@261 $generated@@262) (and (not (= 0 $generated@@252)) (and ($generated@@161 $generated@@261) (and (not (= $generated@@262 $generated@@154)) (and ($generated@@163 $generated@@262 $generated@@255) ($generated@@91 $generated@@262 $generated@@255 $generated@@261))))))) (= ($generated@@253 $generated@@261 $generated@@262)  (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@261 $generated@@262) $generated@@256) ($generated@@257 $generated@@262))) (= ($generated ($generated@@100 ($generated@@98 $generated@@261 $generated@@262) $generated@@170)) (- ($generated@@258 ($generated@@259 2) ($generated ($generated@@100 ($generated@@98 $generated@@261 $generated@@262) $generated@@160))) ($generated ($generated@@100 ($generated@@98 $generated@@261 $generated@@262) $generated@@167)))))))
 :pattern ( ($generated@@253 $generated@@261 $generated@@262) ($generated@@161 $generated@@261))
))))
(assert (= (type $generated@@263) $generated@@76))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@94) (= (type $generated@@265) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@264 $generated@@263 $generated@@265) ($generated@@91 $generated@@264 $generated@@153 $generated@@265)))
 :pattern ( ($generated@@91 $generated@@264 $generated@@263 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@94) (= (type $generated@@267) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@266 $generated@@255 $generated@@267) ($generated@@91 $generated@@266 $generated@@157 $generated@@267)))
 :pattern ( ($generated@@91 $generated@@266 $generated@@255 $generated@@267))
)))
(assert (= ($generated@@86 $generated@@256) 0))
(assert (forall (($generated@@269 T@T) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (= (type ($generated@@268 $generated@@269 $generated@@270 $generated@@271)) ($generated@@78 $generated@@269))
 :pattern ( ($generated@@268 $generated@@269 $generated@@270 $generated@@271))
)))
(assert (= ($generated@@268 ($generated@@93 $generated@@185 $generated@@4) $generated@@66 $generated@@74) $generated@@256))
(assert ($generated@@272 $generated@@256))
(assert (= ($generated@@86 $generated@@170) 0))
(assert (= ($generated@@268 $generated@@2 $generated@@66 $generated@@75) $generated@@170))
(assert ($generated@@272 $generated@@170))
(assert  (=> (<= 0 $generated@@252) (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@274) $generated@@94)) (or ($generated@@254 $generated@@273 $generated@@274) (and (not (= 0 $generated@@252)) (and ($generated@@161 $generated@@273) (and (not (= $generated@@274 $generated@@154)) (and ($generated@@163 $generated@@274 $generated@@255) ($generated@@91 $generated@@274 $generated@@255 $generated@@273))))))) ($generated@@253 $generated@@273 $generated@@274)) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@273 $generated@@274) $generated@@256) ($generated@@257 $generated@@274))))
 :pattern ( ($generated@@253 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (= (type ($generated@@275 $generated@@277 $generated@@278)) $generated@@176)
 :pattern ( ($generated@@275 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) $generated@@76) (= (type $generated@@280) $generated@@76)) (= (type $generated@@281) $generated@@185)) (= (type $generated@@282) $generated@@185)) (= ($generated@@163 ($generated@@275 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280))  (and ($generated@@276 $generated@@281 $generated@@279) ($generated@@276 $generated@@282 $generated@@280))))
 :pattern ( ($generated@@163 ($generated@@275 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280)))
)))
(assert (= ($generated@@86 $generated@@160) 0))
(assert (= ($generated@@268 $generated@@2 $generated@@66 $generated@@72) $generated@@160))
(assert  (not ($generated@@272 $generated@@160)))
(assert (= ($generated@@86 $generated@@167) 0))
(assert (= ($generated@@268 $generated@@2 $generated@@66 $generated@@73) $generated@@167))
(assert  (not ($generated@@272 $generated@@167)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@176) (= (type $generated@@284) $generated@@176)) (= ($generated@@182 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@182 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@76)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@288) $generated@@76)) (= ($generated@@163 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@185) ($generated@@0 ($generated@@98 $generated@@287 $generated@@289))) ($generated@@276 $generated@@289 $generated@@288))
 :pattern ( ($generated@@98 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@163 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@76)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@293) $generated@@76)) (= ($generated@@163 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@185) ($generated@@0 ($generated@@98 $generated@@292 $generated@@294))) ($generated@@276 $generated@@294 $generated@@293))
 :pattern ( ($generated@@98 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@163 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@295 Int) ) (! (= ($generated@@259 $generated@@295) $generated@@295)
 :pattern ( ($generated@@259 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 (type $generated@@297)))
(= (type ($generated@@296 $generated@@297)) $generated@@298))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= ($generated@@296 $generated@@299) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@76) (= (type $generated@@302) $generated@@76)) (= (type $generated@@303) $generated@@185)) (= (type $generated@@304) $generated@@185)) (= (type $generated@@305) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@161 $generated@@305)) (= ($generated@@91 ($generated@@275 $generated@@303 $generated@@304) ($generated@@175 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@91 ($generated@@275 $generated@@303 $generated@@304) ($generated@@175 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@81)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@176) (= ($generated@@174 $generated@@308) (= ($generated@@306 $generated@@308) $generated@@64)))
 :pattern ( ($generated@@174 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@176) ($generated@@174 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@185) (= (type $generated@@311) $generated@@185)) (= $generated@@309 ($generated@@275 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@174 $generated@@309))
)))
(assert  (and (and (forall (($generated@@316 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@316)) 19)) (forall (($generated@@317 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@314 $generated@@317))
))) (forall (($generated@@318 T@T) ) (! (= (type ($generated@@312 $generated@@318)) ($generated@@314 $generated@@318))
 :pattern ( ($generated@@312 $generated@@318))
))))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@319)) 0)
 :pattern ( ($generated@@312 $generated@@319))
)))
(assert ($generated@@272 $generated@@60))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@76) (= (type $generated@@322) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@300 ($generated@@257 $generated@@320) $generated@@321 $generated@@322) ($generated@@91 $generated@@320 $generated@@321 $generated@@322)))
 :pattern ( ($generated@@300 ($generated@@257 $generated@@320) $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@323) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@324) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@325) $generated@@185)) (= (type $generated@@326) $generated@@76)) ($generated@@149 $generated@@323 $generated@@324)) ($generated@@300 $generated@@325 $generated@@326 $generated@@323)) ($generated@@300 $generated@@325 $generated@@326 $generated@@324))
 :pattern ( ($generated@@149 $generated@@323 $generated@@324) ($generated@@300 $generated@@325 $generated@@326 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@327) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@328) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@330) $generated@@76)) ($generated@@149 $generated@@327 $generated@@328)) ($generated@@91 $generated@@329 $generated@@330 $generated@@327)) ($generated@@91 $generated@@329 $generated@@330 $generated@@328))
 :pattern ( ($generated@@149 $generated@@327 $generated@@328) ($generated@@91 $generated@@329 $generated@@330 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@332) $generated@@94)) (=> (and (and ($generated@@161 $generated@@331) (and (not (= $generated@@332 $generated@@154)) (= ($generated@@162 $generated@@332) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@331 $generated@@332) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@331 $generated@@332) $generated@@160) $generated@@46 $generated@@331)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@331 $generated@@332) $generated@@160))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@334) $generated@@94)) (=> (and (and ($generated@@161 $generated@@333) (and (not (= $generated@@334 $generated@@154)) (= ($generated@@162 $generated@@334) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@333 $generated@@334) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@333 $generated@@334) $generated@@167) $generated@@46 $generated@@333)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@333 $generated@@334) $generated@@167))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@336) $generated@@94)) (=> (and (and ($generated@@161 $generated@@335) (and (not (= $generated@@336 $generated@@154)) (= ($generated@@162 $generated@@336) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@335 $generated@@336) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@335 $generated@@336) $generated@@170) $generated@@46 $generated@@335)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@335 $generated@@336) $generated@@170))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@93 $generated@@339 $generated@@2))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@96 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@93 $generated@@341 $generated@@2)) (and (= (= ($generated@@337 $generated@@340) 0) (= $generated@@340 ($generated@@338 $generated@@341))) (=> (not (= ($generated@@337 $generated@@340) 0)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) (< 0 ($generated ($generated@@98 $generated@@340 $generated@@342))))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 20)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@93 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@98 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@98 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 21)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@93 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@98 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@98 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@381) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@379 $generated@@380 $generated@@381)) (and ($generated@@149 $generated@@380 $generated@@381) (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@79 (type $generated@@383))))
 (=> (and (and (= (type $generated@@382) $generated@@94) (= (type $generated@@383) ($generated@@78 $generated@@384))) (not ($generated@@272 $generated@@383))) (= ($generated@@100 ($generated@@98 $generated@@380 $generated@@382) $generated@@383) ($generated@@100 ($generated@@98 $generated@@381 $generated@@382) $generated@@383))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@381 $generated@@382) $generated@@383))
))))
 :pattern ( ($generated@@379 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@387) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@388) $generated@@94)) (=> (and (and (and ($generated@@161 $generated@@386) ($generated@@161 $generated@@387)) (and (not (= $generated@@388 $generated@@154)) ($generated@@163 $generated@@388 $generated@@255))) (and ($generated@@385 $generated@@386) ($generated@@149 $generated@@386 $generated@@387))) (=> (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@79 (type $generated@@390))))
 (=> (and (and (= (type $generated@@389) $generated@@94) (= (type $generated@@390) ($generated@@78 $generated@@391))) (and (not (= $generated@@389 $generated@@154)) (or (= $generated@@389 $generated@@388) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@386 $generated@@388) $generated@@256) ($generated@@257 $generated@@389)))))) (= ($generated@@100 ($generated@@98 $generated@@386 $generated@@389) $generated@@390) ($generated@@100 ($generated@@98 $generated@@387 $generated@@389) $generated@@390))))
 :no-pattern (type $generated@@389)
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
)) (= ($generated@@253 $generated@@386 $generated@@388) ($generated@@253 $generated@@387 $generated@@388)))))
 :pattern ( ($generated@@385 $generated@@386) ($generated@@149 $generated@@386 $generated@@387) ($generated@@253 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@96 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@93 $generated@@393 $generated@@2)) (= ($generated@@191 $generated@@392) (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@393) (and (<= 0 ($generated ($generated@@98 $generated@@392 $generated@@394))) (<= ($generated ($generated@@98 $generated@@392 $generated@@394)) ($generated@@337 $generated@@392))))
 :pattern ( ($generated@@98 $generated@@392 $generated@@394))
)))))
 :pattern ( ($generated@@191 $generated@@392))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@185) ($generated@@276 $generated@@398 $generated@@153)) (and (= ($generated@@257 ($generated@@395 $generated@@94 $generated@@398)) $generated@@398) ($generated@@163 ($generated@@395 $generated@@94 $generated@@398) $generated@@153)))
 :pattern ( ($generated@@276 $generated@@398 $generated@@153))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@185) ($generated@@276 $generated@@399 $generated@@263)) (and (= ($generated@@257 ($generated@@395 $generated@@94 $generated@@399)) $generated@@399) ($generated@@163 ($generated@@395 $generated@@94 $generated@@399) $generated@@263)))
 :pattern ( ($generated@@276 $generated@@399 $generated@@263))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@185) ($generated@@276 $generated@@400 $generated@@157)) (and (= ($generated@@257 ($generated@@395 $generated@@94 $generated@@400)) $generated@@400) ($generated@@163 ($generated@@395 $generated@@94 $generated@@400) $generated@@157)))
 :pattern ( ($generated@@276 $generated@@400 $generated@@157))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@185) ($generated@@276 $generated@@401 $generated@@255)) (and (= ($generated@@257 ($generated@@395 $generated@@94 $generated@@401)) $generated@@401) ($generated@@163 ($generated@@395 $generated@@94 $generated@@401) $generated@@255)))
 :pattern ( ($generated@@276 $generated@@401 $generated@@255))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@94) (= ($generated@@163 $generated@@402 $generated@@263)  (and ($generated@@163 $generated@@402 $generated@@153) (not (= $generated@@402 $generated@@154)))))
 :pattern ( ($generated@@163 $generated@@402 $generated@@263))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@94) (= ($generated@@163 $generated@@403 $generated@@255)  (and ($generated@@163 $generated@@403 $generated@@157) (not (= $generated@@403 $generated@@154)))))
 :pattern ( ($generated@@163 $generated@@403 $generated@@255))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@347 (type $generated@@404))))
(let (($generated@@406 ($generated@@346 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@345 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@344 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) ($generated@@0 ($generated@@98 ($generated@@343 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@343 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@347 (type $generated@@409))))
(= (type ($generated@@408 $generated@@409)) ($generated@@93 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@347 (type $generated@@411))))
(let (($generated@@413 ($generated@@346 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@345 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@344 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@412) ($generated@@0 ($generated@@98 ($generated@@408 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@408 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@365 (type $generated@@415))))
(let (($generated@@417 ($generated@@364 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@363 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@362 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) ($generated@@0 ($generated@@98 ($generated@@361 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@361 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@365 (type $generated@@420))))
(= (type ($generated@@419 $generated@@420)) ($generated@@93 $generated@@421 $generated@@4)))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@365 (type $generated@@422))))
(let (($generated@@424 ($generated@@364 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@363 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@362 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@423) ($generated@@0 ($generated@@98 ($generated@@419 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@419 $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@427) $generated@@76)) (= ($generated@@163 $generated@@426 ($generated@@190 $generated@@427)) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@185) (< 0 ($generated ($generated@@98 $generated@@426 $generated@@428)))) ($generated@@276 $generated@@428 $generated@@427))
 :pattern ( ($generated@@98 $generated@@426 $generated@@428))
))))
 :pattern ( ($generated@@163 $generated@@426 ($generated@@190 $generated@@427)))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@430) $generated@@76)) (= (type $generated@@431) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@429 ($generated@@285 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@185) ($generated@@0 ($generated@@98 $generated@@429 $generated@@432))) ($generated@@300 $generated@@432 $generated@@430 $generated@@431))
 :pattern ( ($generated@@98 $generated@@429 $generated@@432))
))))
 :pattern ( ($generated@@91 $generated@@429 ($generated@@285 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (= (type $generated@@433) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@434) $generated@@76)) (= (type $generated@@435) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@433 ($generated@@290 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@185) ($generated@@0 ($generated@@98 $generated@@433 $generated@@436))) ($generated@@300 $generated@@436 $generated@@434 $generated@@435))
 :pattern ( ($generated@@98 $generated@@433 $generated@@436))
))))
 :pattern ( ($generated@@91 $generated@@433 ($generated@@290 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(= ($generated ($generated@@98 ($generated@@338 $generated@@438) $generated@@437)) 0))
 :pattern ( (let (($generated@@438 (type $generated@@437)))
($generated@@98 ($generated@@338 $generated@@438) $generated@@437)))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@440) $generated@@94)) (=> (and (and ($generated@@161 $generated@@439) (and (not (= $generated@@440 $generated@@154)) (= ($generated@@162 $generated@@440) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@439 $generated@@440) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@439 $generated@@440) $generated@@256) ($generated@@285 $generated@@263) $generated@@439)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@439 $generated@@440) $generated@@256))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@93 $generated@@185 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@347 (type $generated@@444))))
(let (($generated@@446 ($generated@@346 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@93 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@345 $generated@@185 $generated@@185)) (= (type $generated@@448) $generated@@185)) (= ($generated@@0 ($generated@@98 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@98 ($generated@@343 $generated@@447) ($generated@@183 ($generated@@395 $generated@@176 $generated@@448)))) (= ($generated@@98 ($generated@@442 $generated@@447) ($generated@@183 ($generated@@395 $generated@@176 $generated@@448))) ($generated@@184 ($generated@@395 $generated@@176 $generated@@448))))))
 :pattern ( ($generated@@98 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert  (and (forall (($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@451)) ($generated@@93 $generated@@185 $generated@@4))
 :pattern ( ($generated@@449 $generated@@451))
)) (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@365 (type $generated@@452))))
(let (($generated@@454 ($generated@@364 (type $generated@@452))))
(= (type ($generated@@450 $generated@@452)) ($generated@@93 $generated@@454 $generated@@453))))
 :pattern ( ($generated@@450 $generated@@452))
))))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) ($generated@@363 $generated@@185 $generated@@185)) (= (type $generated@@456) $generated@@185)) (= ($generated@@0 ($generated@@98 ($generated@@449 $generated@@455) $generated@@456))  (and ($generated@@0 ($generated@@98 ($generated@@361 $generated@@455) ($generated@@183 ($generated@@395 $generated@@176 $generated@@456)))) (= ($generated@@98 ($generated@@450 $generated@@455) ($generated@@183 ($generated@@395 $generated@@176 $generated@@456))) ($generated@@184 ($generated@@395 $generated@@176 $generated@@456))))))
 :pattern ( ($generated@@98 ($generated@@449 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@346 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@345 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@98 ($generated@@408 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@98 ($generated@@343 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@98 ($generated@@442 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@98 ($generated@@343 $generated@@457) $generated@@461))
 :pattern ( ($generated@@98 ($generated@@442 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@98 ($generated@@408 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(let (($generated@@465 ($generated@@364 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@363 $generated@@465 $generated@@464)) (= ($generated@@0 ($generated@@98 ($generated@@419 $generated@@462) $generated@@463)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) (and ($generated@@0 ($generated@@98 ($generated@@361 $generated@@462) $generated@@466)) (= $generated@@463 ($generated@@98 ($generated@@450 $generated@@462) $generated@@466))))
 :pattern ( ($generated@@98 ($generated@@361 $generated@@462) $generated@@466))
 :pattern ( ($generated@@98 ($generated@@450 $generated@@462) $generated@@466))
))))))
 :pattern ( ($generated@@98 ($generated@@419 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@76)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@345 $generated@@185 $generated@@185)) (= (type $generated@@471) $generated@@76)) (= (type $generated@@472) $generated@@76)) (= (type $generated@@473) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@343 $generated@@470) $generated@@474))) (and ($generated@@300 ($generated@@98 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@300 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@98 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@98 ($generated@@343 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@91 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@476 $generated@@477)) $generated@@76)
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (= (type $generated@@478) ($generated@@363 $generated@@185 $generated@@185)) (= (type $generated@@479) $generated@@76)) (= (type $generated@@480) $generated@@76)) (= (type $generated@@481) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@361 $generated@@478) $generated@@482))) (and ($generated@@300 ($generated@@98 ($generated@@450 $generated@@478) $generated@@482) $generated@@480 $generated@@481) ($generated@@300 $generated@@482 $generated@@479 $generated@@481)))
 :pattern ( ($generated@@98 ($generated@@450 $generated@@478) $generated@@482))
 :pattern ( ($generated@@98 ($generated@@361 $generated@@478) $generated@@482))
))))
 :pattern ( ($generated@@91 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(= (type ($generated@@483 $generated@@484 $generated@@485)) ($generated@@93 $generated@@486 $generated@@4)))
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@488)))
 (=> (and (and (= (type $generated@@487) ($generated@@93 $generated@@490 $generated@@4)) (= (type $generated@@489) $generated@@490)) ($generated@@0 ($generated@@98 $generated@@487 $generated@@489))) ($generated@@0 ($generated@@98 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))))
 :pattern ( ($generated@@483 $generated@@487 $generated@@488) ($generated@@98 $generated@@487 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@492)))
 (=> (and (= (type $generated@@491) ($generated@@93 $generated@@494 $generated@@4)) (= (type $generated@@493) $generated@@494)) (= ($generated@@0 ($generated@@98 ($generated@@483 $generated@@491 $generated@@492) $generated@@493))  (or (= $generated@@493 $generated@@492) ($generated@@0 ($generated@@98 $generated@@491 $generated@@493))))))
 :pattern ( ($generated@@98 ($generated@@483 $generated@@491 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@495) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@496) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@497) ($generated@@93 $generated@@94 $generated@@95))) (not (= $generated@@495 $generated@@497))) (and ($generated@@149 $generated@@495 $generated@@496) ($generated@@149 $generated@@496 $generated@@497))) ($generated@@149 $generated@@495 $generated@@497))
 :pattern ( ($generated@@149 $generated@@495 $generated@@496) ($generated@@149 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@T) ) (! (= (type ($generated@@498 $generated@@499)) ($generated@@93 $generated@@499 $generated@@4))
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@365 (type $generated@@500))))
(let (($generated@@502 ($generated@@364 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@363 $generated@@502 $generated@@501)) (= (= $generated@@500 ($generated@@362 $generated@@502 $generated@@501)) (= ($generated@@361 $generated@@500) ($generated@@498 $generated@@502))))))
 :pattern ( ($generated@@361 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@365 (type $generated@@503))))
(let (($generated@@505 ($generated@@364 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@363 $generated@@505 $generated@@504)) (= (= $generated@@503 ($generated@@362 $generated@@505 $generated@@504)) (= ($generated@@419 $generated@@503) ($generated@@498 $generated@@504))))))
 :pattern ( ($generated@@419 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@365 (type $generated@@506))))
(let (($generated@@508 ($generated@@364 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@363 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@362 $generated@@508 $generated@@507)) (= ($generated@@449 $generated@@506) ($generated@@498 $generated@@185))))))
 :pattern ( ($generated@@449 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@347 (type $generated@@509))))
(let (($generated@@511 ($generated@@346 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@345 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@344 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@185) (= (type $generated@@513) $generated@@185)) ($generated@@0 ($generated@@98 ($generated@@441 $generated@@509) ($generated@@257 ($generated@@275 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@441 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@365 (type $generated@@514))))
(let (($generated@@516 ($generated@@364 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@363 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@362 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (and (and (= (type $generated@@517) $generated@@185) (= (type $generated@@518) $generated@@185)) ($generated@@0 ($generated@@98 ($generated@@449 $generated@@514) ($generated@@257 ($generated@@275 $generated@@517 $generated@@518)))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
))))))
 :pattern ( ($generated@@449 $generated@@514))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@82)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@T) ) (!  (=> (and (= (type $generated@@521) $generated@@82) (= (type $generated@@522) $generated@@80)) (and (= ($generated@@519 ($generated@@268 $generated@@523 $generated@@521 $generated@@522)) $generated@@521) (= ($generated@@89 ($generated@@268 $generated@@523 $generated@@521 $generated@@522)) $generated@@522)))
 :pattern ( ($generated@@268 $generated@@523 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@185) ($generated@@276 $generated@@524 $generated@@46)) (and (= ($generated@@257 ($generated@@395 $generated@@2 $generated@@524)) $generated@@524) ($generated@@163 ($generated@@395 $generated@@2 $generated@@524) $generated@@46)))
 :pattern ( ($generated@@276 $generated@@524 $generated@@46))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@185) ($generated@@276 $generated@@525 $generated@@47)) (and (= ($generated@@257 ($generated@@395 $generated@@3 $generated@@525)) $generated@@525) ($generated@@163 ($generated@@395 $generated@@3 $generated@@525) $generated@@47)))
 :pattern ( ($generated@@276 $generated@@525 $generated@@47))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@185) ($generated@@276 $generated@@526 $generated@@44)) (and (= ($generated@@257 ($generated@@395 $generated@@4 $generated@@526)) $generated@@526) ($generated@@163 ($generated@@395 $generated@@4 $generated@@526) $generated@@44)))
 :pattern ( ($generated@@276 $generated@@526 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@527) 22))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@185) ($generated@@276 $generated@@528 $generated@@45)) (and (= ($generated@@257 ($generated@@395 $generated@@527 $generated@@528)) $generated@@528) ($generated@@163 ($generated@@395 $generated@@527 $generated@@528) $generated@@45)))
 :pattern ( ($generated@@276 $generated@@528 $generated@@45))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@76) (= ($generated@@276 ($generated@@257 $generated@@529) $generated@@530) ($generated@@163 $generated@@529 $generated@@530)))
 :pattern ( ($generated@@276 ($generated@@257 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@96 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@93 $generated@@532 $generated@@2)) (<= 0 ($generated@@337 $generated@@531))))
 :pattern ( ($generated@@337 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@315 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@314 $generated@@534)) (<= 0 ($generated@@313 $generated@@533))))
 :pattern ( ($generated@@313 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@76)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@76) (= (type $generated@@538) $generated@@76)) (= ($generated@@535 ($generated@@467 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@467 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@76)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@76) (= (type $generated@@542) $generated@@76)) (= ($generated@@539 ($generated@@467 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@467 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@76) (= (type $generated@@544) $generated@@76)) (= ($generated@@87 ($generated@@467 $generated@@543 $generated@@544)) $generated@@58))
 :pattern ( ($generated@@467 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@76)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@76) (= (type $generated@@548) $generated@@76)) (= ($generated@@545 ($generated@@475 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@475 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@76)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@76) (= (type $generated@@552) $generated@@76)) (= ($generated@@549 ($generated@@475 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@475 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@76) (= (type $generated@@554) $generated@@76)) (= ($generated@@87 ($generated@@475 $generated@@553 $generated@@554)) $generated@@59))
 :pattern ( ($generated@@475 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@185) (= (type $generated@@556) $generated@@185)) (= ($generated@@306 ($generated@@275 $generated@@555 $generated@@556)) $generated@@64))
 :pattern ( ($generated@@275 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@76)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@76) (= (type $generated@@560) $generated@@76)) (= ($generated@@557 ($generated@@175 $generated@@559 $generated@@560)) $generated@@559))
 :pattern ( ($generated@@175 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@76)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@76) (= (type $generated@@564) $generated@@76)) (= ($generated@@561 ($generated@@175 $generated@@563 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@175 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@185) (= (type $generated@@566) $generated@@185)) (= ($generated@@183 ($generated@@275 $generated@@565 $generated@@566)) $generated@@565))
 :pattern ( ($generated@@275 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@185) (= (type $generated@@568) $generated@@185)) (= ($generated@@184 ($generated@@275 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@275 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@94) ($generated@@163 $generated@@569 $generated@@153))
 :pattern ( ($generated@@163 $generated@@569 $generated@@153))
)))
(assert  (and (forall (($generated@@572 T@U) ) (! (= (type ($generated@@570 $generated@@572)) $generated@@76)
 :pattern ( ($generated@@570 $generated@@572))
)) (forall (($generated@@573 T@U) ($generated@@574 Int) ) (! (let (($generated@@575 ($generated@@315 (type $generated@@573))))
(= (type ($generated@@571 $generated@@573 $generated@@574)) $generated@@575))
 :pattern ( ($generated@@571 $generated@@573 $generated@@574))
))))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@314 $generated@@185)) (= (type $generated@@577) $generated@@76)) (= (type $generated@@578) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@576 ($generated@@570 $generated@@577) $generated@@578) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@313 $generated@@576))) ($generated@@300 ($generated@@571 $generated@@576 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@571 $generated@@576 $generated@@579))
))))
 :pattern ( ($generated@@91 $generated@@576 ($generated@@570 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (=> (= (type $generated@@580) ($generated@@93 $generated@@582 $generated@@4)) ($generated@@0 ($generated@@98 ($generated@@483 $generated@@580 $generated@@581) $generated@@581))))
 :pattern ( ($generated@@483 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@584 Int) ) (! (= ($generated@@583 ($generated@@92 $generated@@584)) $generated@@584)
 :pattern ( ($generated@@92 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@76)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@76) (= ($generated@@585 ($generated@@285 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@285 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@76) (= ($generated@@87 ($generated@@285 $generated@@588)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@76)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@76) (= ($generated@@589 ($generated@@290 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@290 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@76) (= ($generated@@87 ($generated@@290 $generated@@592)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@76)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@76) (= ($generated@@593 ($generated@@190 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@190 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@76) (= ($generated@@87 ($generated@@190 $generated@@596)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@76)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@76) (= ($generated@@597 ($generated@@570 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@570 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@76) (= ($generated@@87 ($generated@@570 $generated@@600)) $generated@@57))
 :pattern ( ($generated@@570 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@601)))
(= ($generated@@395 $generated@@602 ($generated@@257 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@257 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@345 $generated@@185 $generated@@185)) (= (type $generated@@604) $generated@@76)) (= (type $generated@@605) $generated@@76)) (= ($generated@@163 $generated@@603 ($generated@@467 $generated@@604 $generated@@605)) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@343 $generated@@603) $generated@@606))) (and ($generated@@276 ($generated@@98 ($generated@@442 $generated@@603) $generated@@606) $generated@@605) ($generated@@276 $generated@@606 $generated@@604)))
 :pattern ( ($generated@@98 ($generated@@442 $generated@@603) $generated@@606))
 :pattern ( ($generated@@98 ($generated@@343 $generated@@603) $generated@@606))
))))
 :pattern ( ($generated@@163 $generated@@603 ($generated@@467 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@363 $generated@@185 $generated@@185)) (= (type $generated@@608) $generated@@76)) (= (type $generated@@609) $generated@@76)) (= ($generated@@163 $generated@@607 ($generated@@475 $generated@@608 $generated@@609)) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@361 $generated@@607) $generated@@610))) (and ($generated@@276 ($generated@@98 ($generated@@450 $generated@@607) $generated@@610) $generated@@609) ($generated@@276 $generated@@610 $generated@@608)))
 :pattern ( ($generated@@98 ($generated@@450 $generated@@607) $generated@@610))
 :pattern ( ($generated@@98 ($generated@@361 $generated@@607) $generated@@610))
))))
 :pattern ( ($generated@@163 $generated@@607 ($generated@@475 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@185) (= (type $generated@@614) $generated@@185)) (< ($generated@@611 $generated@@613) ($generated@@612 ($generated@@275 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@275 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@185) (= (type $generated@@616) $generated@@185)) (< ($generated@@611 $generated@@616) ($generated@@612 ($generated@@275 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@275 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@185) (= (type $generated@@618) $generated@@76)) (= (type $generated@@619) $generated@@76)) ($generated@@276 $generated@@617 ($generated@@467 $generated@@618 $generated@@619))) (and (= ($generated@@257 ($generated@@395 ($generated@@345 $generated@@185 $generated@@185) $generated@@617)) $generated@@617) ($generated@@163 ($generated@@395 ($generated@@345 $generated@@185 $generated@@185) $generated@@617) ($generated@@467 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@276 $generated@@617 ($generated@@467 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@185) (= (type $generated@@621) $generated@@76)) (= (type $generated@@622) $generated@@76)) ($generated@@276 $generated@@620 ($generated@@475 $generated@@621 $generated@@622))) (and (= ($generated@@257 ($generated@@395 ($generated@@363 $generated@@185 $generated@@185) $generated@@620)) $generated@@620) ($generated@@163 ($generated@@395 ($generated@@363 $generated@@185 $generated@@185) $generated@@620) ($generated@@475 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@276 $generated@@620 ($generated@@475 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@76) (= (type $generated@@624) $generated@@76)) (= (type $generated@@625) $generated@@185)) ($generated@@276 $generated@@625 ($generated@@175 $generated@@623 $generated@@624))) (and (= ($generated@@257 ($generated@@395 $generated@@176 $generated@@625)) $generated@@625) ($generated@@163 ($generated@@395 $generated@@176 $generated@@625) ($generated@@175 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@276 $generated@@625 ($generated@@175 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@627 T@T) ) (! (= (type ($generated@@626 $generated@@627)) ($generated@@93 $generated@@627 $generated@@4))
 :pattern ( ($generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
 (not ($generated@@0 ($generated@@98 ($generated@@626 $generated@@629) $generated@@628))))
 :pattern ( (let (($generated@@629 (type $generated@@628)))
($generated@@98 ($generated@@626 $generated@@629) $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@630)))
 (not ($generated@@0 ($generated@@98 ($generated@@498 $generated@@631) $generated@@630))))
 :pattern ( (let (($generated@@631 (type $generated@@630)))
($generated@@98 ($generated@@498 $generated@@631) $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@83)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@76) (= (type $generated@@635) $generated@@76)) (and (= ($generated@@87 ($generated@@175 $generated@@634 $generated@@635)) $generated@@65) (= ($generated@@632 ($generated@@175 $generated@@634 $generated@@635)) $generated@@70)))
 :pattern ( ($generated@@175 $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 Int) ($generated@@637 Int) ) (! (= ($generated@@258 $generated@@636 $generated@@637) (* $generated@@636 $generated@@637))
 :pattern ( ($generated@@258 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@176) (= ($generated@@611 ($generated@@257 $generated@@638)) ($generated@@612 $generated@@638)))
 :pattern ( ($generated@@611 ($generated@@257 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@185) ($generated@@276 $generated@@639 ($generated@@92 0))) (and (= ($generated@@257 ($generated@@395 $generated@@2 $generated@@639)) $generated@@639) ($generated@@163 ($generated@@395 ($generated@@93 $generated@@185 $generated@@4) $generated@@639) ($generated@@92 0))))
 :pattern ( ($generated@@276 $generated@@639 ($generated@@92 0)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@185) (= (type $generated@@641) $generated@@76)) ($generated@@276 $generated@@640 ($generated@@285 $generated@@641))) (and (= ($generated@@257 ($generated@@395 ($generated@@93 $generated@@185 $generated@@4) $generated@@640)) $generated@@640) ($generated@@163 ($generated@@395 ($generated@@93 $generated@@185 $generated@@4) $generated@@640) ($generated@@285 $generated@@641))))
 :pattern ( ($generated@@276 $generated@@640 ($generated@@285 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@642) $generated@@185) (= (type $generated@@643) $generated@@76)) ($generated@@276 $generated@@642 ($generated@@290 $generated@@643))) (and (= ($generated@@257 ($generated@@395 ($generated@@93 $generated@@185 $generated@@4) $generated@@642)) $generated@@642) ($generated@@163 ($generated@@395 ($generated@@93 $generated@@185 $generated@@4) $generated@@642) ($generated@@290 $generated@@643))))
 :pattern ( ($generated@@276 $generated@@642 ($generated@@290 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@185) (= (type $generated@@645) $generated@@76)) ($generated@@276 $generated@@644 ($generated@@190 $generated@@645))) (and (= ($generated@@257 ($generated@@395 ($generated@@93 $generated@@185 $generated@@2) $generated@@644)) $generated@@644) ($generated@@163 ($generated@@395 ($generated@@93 $generated@@185 $generated@@2) $generated@@644) ($generated@@190 $generated@@645))))
 :pattern ( ($generated@@276 $generated@@644 ($generated@@190 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@185) (= (type $generated@@647) $generated@@76)) ($generated@@276 $generated@@646 ($generated@@570 $generated@@647))) (and (= ($generated@@257 ($generated@@395 ($generated@@314 $generated@@185) $generated@@646)) $generated@@646) ($generated@@163 ($generated@@395 ($generated@@314 $generated@@185) $generated@@646) ($generated@@570 $generated@@647))))
 :pattern ( ($generated@@276 $generated@@646 ($generated@@570 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@651)))
 (=> (and (and (and (= (type $generated@@648) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@649) $generated@@94)) (= (type $generated@@650) ($generated@@78 $generated@@652))) ($generated@@161 ($generated@@99 $generated@@648 $generated@@649 ($generated@@101 ($generated@@98 $generated@@648 $generated@@649) $generated@@650 $generated@@651)))) ($generated@@149 $generated@@648 ($generated@@99 $generated@@648 $generated@@649 ($generated@@101 ($generated@@98 $generated@@648 $generated@@649) $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@99 $generated@@648 $generated@@649 ($generated@@101 ($generated@@98 $generated@@648 $generated@@649) $generated@@650 $generated@@651)))
)))
(assert (= ($generated@@87 $generated@@153) $generated@@62))
(assert (= ($generated@@632 $generated@@153) $generated@@69))
(assert (= ($generated@@87 $generated@@263) $generated@@63))
(assert (= ($generated@@632 $generated@@263) $generated@@69))
(assert (= ($generated@@87 $generated@@157) $generated@@67))
(assert (= ($generated@@632 $generated@@157) $generated@@71))
(assert (= ($generated@@87 $generated@@255) $generated@@68))
(assert (= ($generated@@632 $generated@@255) $generated@@71))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@653) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@654) $generated@@76)) (= (type $generated@@655) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@653 ($generated@@190 $generated@@654) $generated@@655) (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@185) (< 0 ($generated ($generated@@98 $generated@@653 $generated@@656)))) ($generated@@300 $generated@@656 $generated@@654 $generated@@655))
 :pattern ( ($generated@@98 $generated@@653 $generated@@656))
))))
 :pattern ( ($generated@@91 $generated@@653 ($generated@@190 $generated@@654) $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) $generated@@176) (= (type $generated@@658) $generated@@76)) (= (type $generated@@659) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@161 $generated@@659) (and ($generated@@174 $generated@@657) (exists (($generated@@660 T@U) ) (!  (and (= (type $generated@@660) $generated@@76) ($generated@@91 $generated@@657 ($generated@@175 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@91 $generated@@657 ($generated@@175 $generated@@658 $generated@@660) $generated@@659))
))))) ($generated@@300 ($generated@@183 $generated@@657) $generated@@658 $generated@@659))
 :pattern ( ($generated@@300 ($generated@@183 $generated@@657) $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) $generated@@176) (= (type $generated@@662) $generated@@76)) (= (type $generated@@663) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@161 $generated@@663) (and ($generated@@174 $generated@@661) (exists (($generated@@664 T@U) ) (!  (and (= (type $generated@@664) $generated@@76) ($generated@@91 $generated@@661 ($generated@@175 $generated@@664 $generated@@662) $generated@@663))
 :pattern ( ($generated@@91 $generated@@661 ($generated@@175 $generated@@664 $generated@@662) $generated@@663))
))))) ($generated@@300 ($generated@@184 $generated@@661) $generated@@662 $generated@@663))
 :pattern ( ($generated@@300 ($generated@@184 $generated@@661) $generated@@662 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@666) $generated@@94)) (and ($generated@@161 $generated@@665) (and (not (= $generated@@666 $generated@@154)) (= ($generated@@162 $generated@@666) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@665 $generated@@666) $generated@@256) ($generated@@285 $generated@@263)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@665 $generated@@666) $generated@@256))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@185) (= (type $generated@@668) $generated@@185)) (= ($generated@@275 ($generated@@296 $generated@@667) ($generated@@296 $generated@@668)) ($generated@@296 ($generated@@275 $generated@@667 $generated@@668))))
 :pattern ( ($generated@@275 ($generated@@296 $generated@@667) ($generated@@296 $generated@@668)))
)))
(assert (forall (($generated@@669 Int) ) (! (= ($generated@@257 ($generated@@8 ($generated@@259 $generated@@669))) ($generated@@296 ($generated@@257 ($generated@@8 $generated@@669))))
 :pattern ( ($generated@@257 ($generated@@8 ($generated@@259 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ) (! (= ($generated@@257 ($generated@@296 $generated@@670)) ($generated@@296 ($generated@@257 $generated@@670)))
 :pattern ( ($generated@@257 ($generated@@296 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ) (! (let (($generated@@672 ($generated@@315 (type $generated@@671))))
 (=> (and (= (type $generated@@671) ($generated@@314 $generated@@672)) (= ($generated@@313 $generated@@671) 0)) (= $generated@@671 ($generated@@312 $generated@@672))))
 :pattern ( ($generated@@313 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (! (let (($generated@@676 (type $generated@@674)))
 (=> (and (and (= (type $generated@@673) ($generated@@93 $generated@@676 $generated@@2)) (= (type $generated@@675) $generated@@2)) (<= 0 ($generated $generated@@675))) (= ($generated@@337 ($generated@@99 $generated@@673 $generated@@674 $generated@@675)) (+ (- ($generated@@337 $generated@@673) ($generated ($generated@@98 $generated@@673 $generated@@674))) ($generated $generated@@675)))))
 :pattern ( ($generated@@337 ($generated@@99 $generated@@673 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@678) $generated@@2)) ($generated@@91 $generated@@678 $generated@@46 $generated@@677))
 :pattern ( ($generated@@91 $generated@@678 $generated@@46 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@680) $generated@@3)) ($generated@@91 $generated@@680 $generated@@47 $generated@@679))
 :pattern ( ($generated@@91 $generated@@680 $generated@@47 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@682) $generated@@4)) ($generated@@91 $generated@@682 $generated@@44 $generated@@681))
 :pattern ( ($generated@@91 $generated@@682 $generated@@44 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@684) $generated@@527)) ($generated@@91 $generated@@684 $generated@@45 $generated@@683))
 :pattern ( ($generated@@91 $generated@@684 $generated@@45 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@686) $generated@@185)) ($generated@@91 $generated@@686 $generated@@48 $generated@@685))
 :pattern ( ($generated@@91 $generated@@686 $generated@@48 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@314 $generated@@185)) (= (type $generated@@688) $generated@@76)) (= ($generated@@163 $generated@@687 ($generated@@570 $generated@@688)) (forall (($generated@@689 Int) ) (!  (=> (and (<= 0 $generated@@689) (< $generated@@689 ($generated@@313 $generated@@687))) ($generated@@276 ($generated@@571 $generated@@687 $generated@@689) $generated@@688))
 :pattern ( ($generated@@571 $generated@@687 $generated@@689))
))))
 :pattern ( ($generated@@163 $generated@@687 ($generated@@570 $generated@@688)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 Int) ) (!  (=> (= (type $generated@@691) ($generated@@314 $generated@@185)) (=> (and (<= 0 $generated@@692) (< $generated@@692 ($generated@@313 $generated@@691))) (< ($generated@@612 ($generated@@395 $generated@@176 ($generated@@571 $generated@@691 $generated@@692))) ($generated@@690 $generated@@691))))
 :pattern ( ($generated@@612 ($generated@@395 $generated@@176 ($generated@@571 $generated@@691 $generated@@692))))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) ($generated@@345 $generated@@185 $generated@@185)) (= (type $generated@@694) $generated@@76)) (= (type $generated@@695) $generated@@76)) ($generated@@163 $generated@@693 ($generated@@467 $generated@@694 $generated@@695))) (and (and ($generated@@163 ($generated@@343 $generated@@693) ($generated@@285 $generated@@694)) ($generated@@163 ($generated@@408 $generated@@693) ($generated@@285 $generated@@695))) ($generated@@163 ($generated@@441 $generated@@693) ($generated@@285 ($generated@@175 $generated@@694 $generated@@695)))))
 :pattern ( ($generated@@163 $generated@@693 ($generated@@467 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (and (= (type $generated@@696) ($generated@@363 $generated@@185 $generated@@185)) (= (type $generated@@697) $generated@@76)) (= (type $generated@@698) $generated@@76)) ($generated@@163 $generated@@696 ($generated@@475 $generated@@697 $generated@@698))) (and (and ($generated@@163 ($generated@@361 $generated@@696) ($generated@@290 $generated@@697)) ($generated@@163 ($generated@@419 $generated@@696) ($generated@@290 $generated@@698))) ($generated@@163 ($generated@@449 $generated@@696) ($generated@@290 ($generated@@175 $generated@@697 $generated@@698)))))
 :pattern ( ($generated@@163 $generated@@696 ($generated@@475 $generated@@697 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@2) ($generated@@163 $generated@@699 $generated@@46))
 :pattern ( ($generated@@163 $generated@@699 $generated@@46))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@3) ($generated@@163 $generated@@700 $generated@@47))
 :pattern ( ($generated@@163 $generated@@700 $generated@@47))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@4) ($generated@@163 $generated@@701 $generated@@44))
 :pattern ( ($generated@@163 $generated@@701 $generated@@44))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@527) ($generated@@163 $generated@@702 $generated@@45))
 :pattern ( ($generated@@163 $generated@@702 $generated@@45))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@185) ($generated@@163 $generated@@703 $generated@@48))
 :pattern ( ($generated@@163 $generated@@703 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () Int)
(declare-fun $generated@@710 () Int)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () Int)
(declare-fun $generated@@713 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@704) ($generated@@198 $generated@@94 $generated@@4)) (= (type $generated@@705) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@707) $generated@@94)) (= (type $generated@@708) ($generated@@93 $generated@@185 $generated@@4))) (= (type $generated@@711) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@713) ($generated@@93 $generated@@94 $generated@@95))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@714  (=> (and (and (= $generated@@704 ($generated@@197 $generated@@154 $generated@@705 $generated@@60 false)) (= $generated@@706 ($generated@@259 0))) (and ($generated@@163 ($generated@@483 ($generated@@626 $generated@@185) ($generated@@257 $generated@@707)) ($generated@@285 $generated@@263)) (= $generated@@708 ($generated@@483 ($generated@@626 $generated@@185) ($generated@@257 $generated@@707))))) (=> (and (and (and (not ($generated@@0 ($generated@@100 ($generated@@98 $generated@@705 $generated@@707) $generated@@60))) (= ($generated ($generated@@100 ($generated@@98 $generated@@705 $generated@@707) $generated@@160)) $generated@@709)) (and (= ($generated ($generated@@100 ($generated@@98 $generated@@705 $generated@@707) $generated@@167)) $generated@@710) (= ($generated ($generated@@100 ($generated@@98 $generated@@705 $generated@@707) $generated@@170)) $generated@@706))) (and (and (= ($generated@@100 ($generated@@98 $generated@@705 $generated@@707) $generated@@256) $generated@@708) (= $generated@@711 ($generated@@99 $generated@@705 $generated@@707 ($generated@@101 ($generated@@98 $generated@@705 $generated@@707) $generated@@60 ($generated@@11 true))))) (and ($generated@@161 $generated@@711) ($generated@@385 $generated@@711)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@0 ($generated@@196 $generated@@704 $generated@@707 $generated@@160))) (=> ($generated@@0 ($generated@@196 $generated@@704 $generated@@707 $generated@@160)) (=> (and (= $generated@@712 ($generated ($generated@@100 ($generated@@98 $generated@@711 $generated@@707) $generated@@167))) (= $generated@@713 ($generated@@99 $generated@@711 $generated@@707 ($generated@@101 ($generated@@98 $generated@@711 $generated@@707) $generated@@160 ($generated@@8 $generated@@712))))) (=> (and (and ($generated@@161 $generated@@713) ($generated@@91 $generated@@707 $generated@@157 $generated@@713)) (and ($generated@@254 $generated@@713 $generated@@707) ($generated@@254 $generated@@713 $generated@@707))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@253 $generated@@713 $generated@@707)) (=> ($generated@@253 $generated@@713 $generated@@707) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> false (= ($generated ($generated@@100 ($generated@@98 $generated@@713 $generated@@707) $generated@@170)) ($generated@@259 0)))) (=> (=> false (= ($generated ($generated@@100 ($generated@@98 $generated@@713 $generated@@707) $generated@@170)) ($generated@@259 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> false ($generated@@253 $generated@@713 $generated@@707))) (=> (=> false ($generated@@253 $generated@@713 $generated@@707)) (=> (= (ControlFlow 0 2) (- 0 1)) (=> false (forall (($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@715) $generated@@94) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@713 $generated@@707) $generated@@256) ($generated@@257 $generated@@715)))) (and (not (= $generated@@715 $generated@@154)) (not ($generated@@0 ($generated@@100 ($generated@@98 $generated@@705 $generated@@715) $generated@@60)))))
 :pattern ( ($generated@@98 ($generated@@100 ($generated@@98 $generated@@713 $generated@@707) $generated@@256) ($generated@@257 $generated@@715)))
))))))))))))))))))
(let (($generated@@716  (=> (and ($generated@@161 $generated@@705) ($generated@@385 $generated@@705)) (=> (and (and (not (= $generated@@707 $generated@@154)) ($generated@@163 $generated@@707 $generated@@255)) (and (= 1 $generated@@252) (= (ControlFlow 0 7) 2))) $generated@@714))))
$generated@@716)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U T@U) Bool)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (Int Int) Int)
(declare-fun $generated@@203 (Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@212 (T@T T@U T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@244 (T@U T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@257 (T@U) Int)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U T@U) Bool)
(declare-fun $generated@@329 (T@U) Bool)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 () T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@602 (T@U T@U T@U) T@U)
(declare-fun $generated@@603 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@604 (T@T T@T) T@T)
(declare-fun $generated@@605 (T@T) T@T)
(declare-fun $generated@@606 (T@T) T@T)
(declare-fun $generated@@607 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@671 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@78 $generated@@85))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@61) $generated@@80)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@64) $generated@@81)) (= (type $generated@@65) $generated@@77)) (= ($generated@@1 $generated@@82) 11)) (= (type $generated@@66) $generated@@82)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@83) 12)) (= (type $generated@@69) $generated@@83)) (= (type $generated@@70) $generated@@83)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)) (= (type $generated@@75) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (= ($generated@@86 $generated@@60) 0))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@77)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@44) $generated@@49))
(assert (= ($generated@@87 $generated@@45) $generated@@50))
(assert (= ($generated@@87 $generated@@46) $generated@@51))
(assert (= ($generated@@87 $generated@@47) $generated@@52))
(assert (= ($generated@@87 $generated@@48) $generated@@53))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@80)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 13)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@79 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 15)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@79 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@76)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@151) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@149 $generated@@150 $generated@@151)) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@94) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@150 $generated@@152) $generated@@60))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@151 $generated@@152) $generated@@60)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@151 $generated@@152) $generated@@60))
)))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert  (and (= (type $generated@@153) $generated@@76) (= (type $generated@@154) $generated@@94)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@94) (= (type $generated@@156) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@155 $generated@@153 $generated@@156)  (or (= $generated@@155 $generated@@154) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@155 $generated@@153 $generated@@156))
)))
(assert (= (type $generated@@157) $generated@@76))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@94) (= (type $generated@@159) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@158 $generated@@157 $generated@@159)  (or (= $generated@@158 $generated@@154) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@159 $generated@@158) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@158 $generated@@157 $generated@@159))
)))
(assert  (and (= (type $generated@@160) ($generated@@78 $generated@@2)) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@76)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@166) $generated@@94)) (and ($generated@@161 $generated@@165) (and (not (= $generated@@166 $generated@@154)) (= ($generated@@162 $generated@@166) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@165 $generated@@166) $generated@@160) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@165 $generated@@166) $generated@@160))
)))
(assert (= (type $generated@@167) ($generated@@78 $generated@@2)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@169) $generated@@94)) (and ($generated@@161 $generated@@168) (and (not (= $generated@@169 $generated@@154)) (= ($generated@@162 $generated@@169) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@168 $generated@@169) $generated@@167) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@168 $generated@@169) $generated@@167))
)))
(assert (= (type $generated@@170) ($generated@@78 $generated@@2)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@172) $generated@@94)) (and ($generated@@161 $generated@@171) (and (not (= $generated@@172 $generated@@154)) (= ($generated@@162 $generated@@172) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@171 $generated@@172) $generated@@170) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@171 $generated@@172) $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@2) ($generated@@163 $generated@@173 ($generated@@92 0)))
 :pattern ( ($generated@@163 $generated@@173 ($generated@@92 0)))
)))
(assert  (and (= ($generated@@1 $generated@@176) 16) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@76)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@76) (= (type $generated@@180) $generated@@76)) (= (type $generated@@181) $generated@@176)) ($generated@@163 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@163 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (and (= ($generated@@1 $generated@@185) 17) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@186))
))) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@185)
 :pattern ( ($generated@@184 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@176) (= (type $generated@@189) $generated@@176)) true) (= ($generated@@182 $generated@@188 $generated@@189)  (and (= ($generated@@183 $generated@@188) ($generated@@183 $generated@@189)) (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)))))
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@76)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@194) $generated@@76)) ($generated@@163 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@163 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= (type $generated@@195) $generated@@94) (= ($generated@@163 $generated@@195 $generated@@157)  (or (= $generated@@195 $generated@@154) (= ($generated@@162 $generated@@195) $generated@@157))))
 :pattern ( ($generated@@163 $generated@@195 $generated@@157))
)))
(assert  (and (and (= (type $generated@@199) $generated@@76) (= (type $generated@@200) ($generated@@78 ($generated@@93 $generated@@185 $generated@@4)))) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@201 $generated@@204)) $generated@@185)
 :pattern ( ($generated@@201 $generated@@204))
))))
(assert  (=> (<= 0 $generated@@196) (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (= (type $generated@@205) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@206) $generated@@94)) (or ($generated@@198 $generated@@205 $generated@@206) (and (not (= 0 $generated@@196)) (and ($generated@@161 $generated@@205) (and (not (= $generated@@206 $generated@@154)) (and ($generated@@163 $generated@@206 $generated@@199) ($generated@@91 $generated@@206 $generated@@199 $generated@@205))))))) (= ($generated@@197 $generated@@205 $generated@@206)  (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@205 $generated@@206) $generated@@200) ($generated@@201 $generated@@206))) (= ($generated ($generated@@100 ($generated@@98 $generated@@205 $generated@@206) $generated@@170)) (- ($generated@@202 ($generated@@203 2) ($generated ($generated@@100 ($generated@@98 $generated@@205 $generated@@206) $generated@@160))) ($generated ($generated@@100 ($generated@@98 $generated@@205 $generated@@206) $generated@@167)))))))
 :pattern ( ($generated@@197 $generated@@205 $generated@@206) ($generated@@161 $generated@@205))
))))
(assert (= (type $generated@@207) $generated@@76))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@94) (= (type $generated@@209) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@208 $generated@@207 $generated@@209) ($generated@@91 $generated@@208 $generated@@153 $generated@@209)))
 :pattern ( ($generated@@91 $generated@@208 $generated@@207 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@94) (= (type $generated@@211) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@210 $generated@@199 $generated@@211) ($generated@@91 $generated@@210 $generated@@157 $generated@@211)))
 :pattern ( ($generated@@91 $generated@@210 $generated@@199 $generated@@211))
)))
(assert (= ($generated@@86 $generated@@200) 0))
(assert (forall (($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (= (type ($generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@78 $generated@@213))
 :pattern ( ($generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (= ($generated@@212 ($generated@@93 $generated@@185 $generated@@4) $generated@@66 $generated@@74) $generated@@200))
(assert ($generated@@216 $generated@@200))
(assert (= ($generated@@86 $generated@@170) 0))
(assert (= ($generated@@212 $generated@@2 $generated@@66 $generated@@75) $generated@@170))
(assert ($generated@@216 $generated@@170))
(assert  (=> (<= 0 $generated@@196) (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@217) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@218) $generated@@94)) (or ($generated@@198 $generated@@217 $generated@@218) (and (not (= 0 $generated@@196)) (and ($generated@@161 $generated@@217) (and (not (= $generated@@218 $generated@@154)) (and ($generated@@163 $generated@@218 $generated@@199) ($generated@@91 $generated@@218 $generated@@199 $generated@@217))))))) ($generated@@197 $generated@@217 $generated@@218)) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@217 $generated@@218) $generated@@200) ($generated@@201 $generated@@218))))
 :pattern ( ($generated@@197 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@219 $generated@@221 $generated@@222)) $generated@@176)
 :pattern ( ($generated@@219 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@223) $generated@@76) (= (type $generated@@224) $generated@@76)) (= (type $generated@@225) $generated@@185)) (= (type $generated@@226) $generated@@185)) (= ($generated@@163 ($generated@@219 $generated@@225 $generated@@226) ($generated@@175 $generated@@223 $generated@@224))  (and ($generated@@220 $generated@@225 $generated@@223) ($generated@@220 $generated@@226 $generated@@224))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@225 $generated@@226) ($generated@@175 $generated@@223 $generated@@224)))
)))
(assert (= ($generated@@86 $generated@@160) 0))
(assert (= ($generated@@212 $generated@@2 $generated@@66 $generated@@72) $generated@@160))
(assert  (not ($generated@@216 $generated@@160)))
(assert (= ($generated@@86 $generated@@167) 0))
(assert (= ($generated@@212 $generated@@2 $generated@@66 $generated@@73) $generated@@167))
(assert  (not ($generated@@216 $generated@@167)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@176) (= (type $generated@@228) $generated@@176)) (= ($generated@@182 $generated@@227 $generated@@228) (= $generated@@227 $generated@@228)))
 :pattern ( ($generated@@182 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@229 $generated@@230)) $generated@@76)
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@232) $generated@@76)) (= ($generated@@163 $generated@@231 ($generated@@229 $generated@@232)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@185) ($generated@@0 ($generated@@98 $generated@@231 $generated@@233))) ($generated@@220 $generated@@233 $generated@@232))
 :pattern ( ($generated@@98 $generated@@231 $generated@@233))
))))
 :pattern ( ($generated@@163 $generated@@231 ($generated@@229 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@76)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@237) $generated@@76)) (= ($generated@@163 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@185) ($generated@@0 ($generated@@98 $generated@@236 $generated@@238))) ($generated@@220 $generated@@238 $generated@@237))
 :pattern ( ($generated@@98 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@163 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@239 Int) ) (! (= ($generated@@203 $generated@@239) $generated@@239)
 :pattern ( ($generated@@203 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (let (($generated@@242 (type $generated@@241)))
(= (type ($generated@@240 $generated@@241)) $generated@@242))
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@240 $generated@@243) $generated@@243)
 :pattern ( ($generated@@240 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) $generated@@76) (= (type $generated@@246) $generated@@76)) (= (type $generated@@247) $generated@@185)) (= (type $generated@@248) $generated@@185)) (= (type $generated@@249) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@161 $generated@@249)) (= ($generated@@91 ($generated@@219 $generated@@247 $generated@@248) ($generated@@175 $generated@@245 $generated@@246) $generated@@249)  (and ($generated@@244 $generated@@247 $generated@@245 $generated@@249) ($generated@@244 $generated@@248 $generated@@246 $generated@@249))))
 :pattern ( ($generated@@91 ($generated@@219 $generated@@247 $generated@@248) ($generated@@175 $generated@@245 $generated@@246) $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@81)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@176) (= ($generated@@174 $generated@@252) (= ($generated@@250 $generated@@252) $generated@@64)))
 :pattern ( ($generated@@174 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@176) ($generated@@174 $generated@@253)) (exists (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (and (and (= (type $generated@@254) $generated@@185) (= (type $generated@@255) $generated@@185)) (= $generated@@253 ($generated@@219 $generated@@254 $generated@@255)))
 :no-pattern (type $generated@@254)
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
)))
 :pattern ( ($generated@@174 $generated@@253))
)))
(assert  (and (and (forall (($generated@@260 T@T) ) (= ($generated@@1 ($generated@@258 $generated@@260)) 18)) (forall (($generated@@261 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
))) (forall (($generated@@262 T@T) ) (! (= (type ($generated@@256 $generated@@262)) ($generated@@258 $generated@@262))
 :pattern ( ($generated@@256 $generated@@262))
))))
(assert (forall (($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@263)) 0)
 :pattern ( ($generated@@256 $generated@@263))
)))
(assert ($generated@@216 $generated@@60))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@76) (= (type $generated@@266) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@244 ($generated@@201 $generated@@264) $generated@@265 $generated@@266) ($generated@@91 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@244 ($generated@@201 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@268) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@269) $generated@@185)) (= (type $generated@@270) $generated@@76)) ($generated@@149 $generated@@267 $generated@@268)) ($generated@@244 $generated@@269 $generated@@270 $generated@@267)) ($generated@@244 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@149 $generated@@267 $generated@@268) ($generated@@244 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@272) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@274) $generated@@76)) ($generated@@149 $generated@@271 $generated@@272)) ($generated@@91 $generated@@273 $generated@@274 $generated@@271)) ($generated@@91 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@149 $generated@@271 $generated@@272) ($generated@@91 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@276) $generated@@94)) (=> (and (and ($generated@@161 $generated@@275) (and (not (= $generated@@276 $generated@@154)) (= ($generated@@162 $generated@@276) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@275 $generated@@276) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@275 $generated@@276) $generated@@160) $generated@@46 $generated@@275)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@275 $generated@@276) $generated@@160))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@278) $generated@@94)) (=> (and (and ($generated@@161 $generated@@277) (and (not (= $generated@@278 $generated@@154)) (= ($generated@@162 $generated@@278) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@277 $generated@@278) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@277 $generated@@278) $generated@@167) $generated@@46 $generated@@277)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@277 $generated@@278) $generated@@167))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@280) $generated@@94)) (=> (and (and ($generated@@161 $generated@@279) (and (not (= $generated@@280 $generated@@154)) (= ($generated@@162 $generated@@280) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@279 $generated@@280) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@279 $generated@@280) $generated@@170) $generated@@46 $generated@@279)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@279 $generated@@280) $generated@@170))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@93 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@96 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@93 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@98 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@93 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@98 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@98 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 20)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@93 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@98 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@98 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@325) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@323 $generated@@324 $generated@@325)) (and ($generated@@149 $generated@@324 $generated@@325) (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (and (and (= (type $generated@@326) $generated@@94) (= (type $generated@@327) ($generated@@78 $generated@@328))) (not ($generated@@216 $generated@@327))) (= ($generated@@100 ($generated@@98 $generated@@324 $generated@@326) $generated@@327) ($generated@@100 ($generated@@98 $generated@@325 $generated@@326) $generated@@327))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@325 $generated@@326) $generated@@327))
))))
 :pattern ( ($generated@@323 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@330) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@331) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@332) $generated@@94)) (=> (and (and (and ($generated@@161 $generated@@330) ($generated@@161 $generated@@331)) (and (not (= $generated@@332 $generated@@154)) ($generated@@163 $generated@@332 $generated@@199))) (and ($generated@@329 $generated@@330) ($generated@@149 $generated@@330 $generated@@331))) (=> (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@79 (type $generated@@334))))
 (=> (and (and (= (type $generated@@333) $generated@@94) (= (type $generated@@334) ($generated@@78 $generated@@335))) (and (not (= $generated@@333 $generated@@154)) (or (= $generated@@333 $generated@@332) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@330 $generated@@332) $generated@@200) ($generated@@201 $generated@@333)))))) (= ($generated@@100 ($generated@@98 $generated@@330 $generated@@333) $generated@@334) ($generated@@100 ($generated@@98 $generated@@331 $generated@@333) $generated@@334))))
 :no-pattern (type $generated@@333)
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
)) (= ($generated@@197 $generated@@330 $generated@@332) ($generated@@197 $generated@@331 $generated@@332)))))
 :pattern ( ($generated@@329 $generated@@330) ($generated@@149 $generated@@330 $generated@@331) ($generated@@197 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@96 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@93 $generated@@337 $generated@@2)) (= ($generated@@191 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@98 $generated@@336 $generated@@338))) (<= ($generated ($generated@@98 $generated@@336 $generated@@338)) ($generated@@281 $generated@@336))))
 :pattern ( ($generated@@98 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@191 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@185) ($generated@@220 $generated@@342 $generated@@153)) (and (= ($generated@@201 ($generated@@339 $generated@@94 $generated@@342)) $generated@@342) ($generated@@163 ($generated@@339 $generated@@94 $generated@@342) $generated@@153)))
 :pattern ( ($generated@@220 $generated@@342 $generated@@153))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@185) ($generated@@220 $generated@@343 $generated@@207)) (and (= ($generated@@201 ($generated@@339 $generated@@94 $generated@@343)) $generated@@343) ($generated@@163 ($generated@@339 $generated@@94 $generated@@343) $generated@@207)))
 :pattern ( ($generated@@220 $generated@@343 $generated@@207))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@185) ($generated@@220 $generated@@344 $generated@@157)) (and (= ($generated@@201 ($generated@@339 $generated@@94 $generated@@344)) $generated@@344) ($generated@@163 ($generated@@339 $generated@@94 $generated@@344) $generated@@157)))
 :pattern ( ($generated@@220 $generated@@344 $generated@@157))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@185) ($generated@@220 $generated@@345 $generated@@199)) (and (= ($generated@@201 ($generated@@339 $generated@@94 $generated@@345)) $generated@@345) ($generated@@163 ($generated@@339 $generated@@94 $generated@@345) $generated@@199)))
 :pattern ( ($generated@@220 $generated@@345 $generated@@199))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@94) (= ($generated@@163 $generated@@346 $generated@@207)  (and ($generated@@163 $generated@@346 $generated@@153) (not (= $generated@@346 $generated@@154)))))
 :pattern ( ($generated@@163 $generated@@346 $generated@@207))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@94) (= ($generated@@163 $generated@@347 $generated@@199)  (and ($generated@@163 $generated@@347 $generated@@157) (not (= $generated@@347 $generated@@154)))))
 :pattern ( ($generated@@163 $generated@@347 $generated@@199))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@291 (type $generated@@348))))
(let (($generated@@350 ($generated@@290 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@289 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@288 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@98 ($generated@@287 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@287 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@291 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@93 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@291 (type $generated@@355))))
(let (($generated@@357 ($generated@@290 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@289 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@288 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@98 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@309 (type $generated@@359))))
(let (($generated@@361 ($generated@@308 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@307 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@306 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@98 ($generated@@305 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@305 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@309 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@93 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@309 (type $generated@@366))))
(let (($generated@@368 ($generated@@308 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@307 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@306 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@98 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@371) $generated@@76)) (= ($generated@@163 $generated@@370 ($generated@@190 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@185) (< 0 ($generated ($generated@@98 $generated@@370 $generated@@372)))) ($generated@@220 $generated@@372 $generated@@371))
 :pattern ( ($generated@@98 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@163 $generated@@370 ($generated@@190 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@374) $generated@@76)) (= (type $generated@@375) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@373 ($generated@@229 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@185) ($generated@@0 ($generated@@98 $generated@@373 $generated@@376))) ($generated@@244 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@98 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@91 $generated@@373 ($generated@@229 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@378) $generated@@76)) (= (type $generated@@379) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@377 ($generated@@234 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@185) ($generated@@0 ($generated@@98 $generated@@377 $generated@@380))) ($generated@@244 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@98 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@91 $generated@@377 ($generated@@234 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@98 ($generated@@282 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@98 ($generated@@282 $generated@@382) $generated@@381)))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@384) $generated@@94)) (=> (and (and ($generated@@161 $generated@@383) (and (not (= $generated@@384 $generated@@154)) (= ($generated@@162 $generated@@384) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@383 $generated@@384) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@383 $generated@@384) $generated@@200) ($generated@@229 $generated@@207) $generated@@383)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@383 $generated@@384) $generated@@200))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@93 $generated@@185 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@291 (type $generated@@388))))
(let (($generated@@390 ($generated@@290 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@93 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@289 $generated@@185 $generated@@185)) (= (type $generated@@392) $generated@@185)) (= ($generated@@0 ($generated@@98 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@98 ($generated@@287 $generated@@391) ($generated@@183 ($generated@@339 $generated@@176 $generated@@392)))) (= ($generated@@98 ($generated@@386 $generated@@391) ($generated@@183 ($generated@@339 $generated@@176 $generated@@392))) ($generated@@184 ($generated@@339 $generated@@176 $generated@@392))))))
 :pattern ( ($generated@@98 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@93 $generated@@185 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@309 (type $generated@@396))))
(let (($generated@@398 ($generated@@308 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@93 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@307 $generated@@185 $generated@@185)) (= (type $generated@@400) $generated@@185)) (= ($generated@@0 ($generated@@98 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@98 ($generated@@305 $generated@@399) ($generated@@183 ($generated@@339 $generated@@176 $generated@@400)))) (= ($generated@@98 ($generated@@394 $generated@@399) ($generated@@183 ($generated@@339 $generated@@176 $generated@@400))) ($generated@@184 ($generated@@339 $generated@@176 $generated@@400))))))
 :pattern ( ($generated@@98 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@290 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@289 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@98 ($generated@@352 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@98 ($generated@@287 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@98 ($generated@@386 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@98 ($generated@@287 $generated@@401) $generated@@405))
 :pattern ( ($generated@@98 ($generated@@386 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@98 ($generated@@352 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@308 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@307 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@98 ($generated@@363 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@98 ($generated@@305 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@98 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@98 ($generated@@305 $generated@@406) $generated@@410))
 :pattern ( ($generated@@98 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@98 ($generated@@363 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@76)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@289 $generated@@185 $generated@@185)) (= (type $generated@@415) $generated@@76)) (= (type $generated@@416) $generated@@76)) (= (type $generated@@417) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@287 $generated@@414) $generated@@418))) (and ($generated@@244 ($generated@@98 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@244 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@98 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@98 ($generated@@287 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@91 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@76)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@307 $generated@@185 $generated@@185)) (= (type $generated@@423) $generated@@76)) (= (type $generated@@424) $generated@@76)) (= (type $generated@@425) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@305 $generated@@422) $generated@@426))) (and ($generated@@244 ($generated@@98 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@244 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@98 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@98 ($generated@@305 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@91 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@427) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@428) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@429) ($generated@@93 $generated@@94 $generated@@95))) (not (= $generated@@427 $generated@@429))) (and ($generated@@149 $generated@@427 $generated@@428) ($generated@@149 $generated@@428 $generated@@429))) ($generated@@149 $generated@@427 $generated@@429))
 :pattern ( ($generated@@149 $generated@@427 $generated@@428) ($generated@@149 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@93 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@309 (type $generated@@432))))
(let (($generated@@434 ($generated@@308 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@307 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@306 $generated@@434 $generated@@433)) (= ($generated@@305 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@305 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@309 (type $generated@@435))))
(let (($generated@@437 ($generated@@308 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@307 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@306 $generated@@437 $generated@@436)) (= ($generated@@363 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@363 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@309 (type $generated@@438))))
(let (($generated@@440 ($generated@@308 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@307 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@306 $generated@@440 $generated@@439)) (= ($generated@@393 $generated@@438) ($generated@@430 $generated@@185))))))
 :pattern ( ($generated@@393 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@291 (type $generated@@441))))
(let (($generated@@443 ($generated@@290 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@289 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@288 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@185) (= (type $generated@@445) $generated@@185)) ($generated@@0 ($generated@@98 ($generated@@385 $generated@@441) ($generated@@201 ($generated@@219 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@385 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@309 (type $generated@@446))))
(let (($generated@@448 ($generated@@308 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@307 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@306 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@185) (= (type $generated@@450) $generated@@185)) ($generated@@0 ($generated@@98 ($generated@@393 $generated@@446) ($generated@@201 ($generated@@219 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@393 $generated@@446))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@82)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@T) ) (!  (=> (and (= (type $generated@@453) $generated@@82) (= (type $generated@@454) $generated@@80)) (and (= ($generated@@451 ($generated@@212 $generated@@455 $generated@@453 $generated@@454)) $generated@@453) (= ($generated@@89 ($generated@@212 $generated@@455 $generated@@453 $generated@@454)) $generated@@454)))
 :pattern ( ($generated@@212 $generated@@455 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@185) ($generated@@220 $generated@@456 $generated@@46)) (and (= ($generated@@201 ($generated@@339 $generated@@2 $generated@@456)) $generated@@456) ($generated@@163 ($generated@@339 $generated@@2 $generated@@456) $generated@@46)))
 :pattern ( ($generated@@220 $generated@@456 $generated@@46))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@185) ($generated@@220 $generated@@457 $generated@@47)) (and (= ($generated@@201 ($generated@@339 $generated@@3 $generated@@457)) $generated@@457) ($generated@@163 ($generated@@339 $generated@@3 $generated@@457) $generated@@47)))
 :pattern ( ($generated@@220 $generated@@457 $generated@@47))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@185) ($generated@@220 $generated@@458 $generated@@44)) (and (= ($generated@@201 ($generated@@339 $generated@@4 $generated@@458)) $generated@@458) ($generated@@163 ($generated@@339 $generated@@4 $generated@@458) $generated@@44)))
 :pattern ( ($generated@@220 $generated@@458 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@459) 21))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@185) ($generated@@220 $generated@@460 $generated@@45)) (and (= ($generated@@201 ($generated@@339 $generated@@459 $generated@@460)) $generated@@460) ($generated@@163 ($generated@@339 $generated@@459 $generated@@460) $generated@@45)))
 :pattern ( ($generated@@220 $generated@@460 $generated@@45))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@76) (= ($generated@@220 ($generated@@201 $generated@@461) $generated@@462) ($generated@@163 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@220 ($generated@@201 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@96 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@93 $generated@@464 $generated@@2)) (<= 0 ($generated@@281 $generated@@463))))
 :pattern ( ($generated@@281 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@259 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@258 $generated@@466)) (<= 0 ($generated@@257 $generated@@465))))
 :pattern ( ($generated@@257 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@76)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@76) (= (type $generated@@470) $generated@@76)) (= ($generated@@467 ($generated@@411 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@76)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@76) (= (type $generated@@474) $generated@@76)) (= ($generated@@471 ($generated@@411 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@411 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@76) (= (type $generated@@476) $generated@@76)) (= ($generated@@87 ($generated@@411 $generated@@475 $generated@@476)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@76)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@76) (= (type $generated@@480) $generated@@76)) (= ($generated@@477 ($generated@@419 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@419 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@76)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@76) (= (type $generated@@484) $generated@@76)) (= ($generated@@481 ($generated@@419 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@419 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@76) (= (type $generated@@486) $generated@@76)) (= ($generated@@87 ($generated@@419 $generated@@485 $generated@@486)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@185) (= (type $generated@@488) $generated@@185)) (= ($generated@@250 ($generated@@219 $generated@@487 $generated@@488)) $generated@@64))
 :pattern ( ($generated@@219 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@76)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@76) (= (type $generated@@492) $generated@@76)) (= ($generated@@489 ($generated@@175 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@175 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@76)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@76) (= (type $generated@@496) $generated@@76)) (= ($generated@@493 ($generated@@175 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@175 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@185) (= (type $generated@@498) $generated@@185)) (= ($generated@@183 ($generated@@219 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@219 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@185) (= (type $generated@@500) $generated@@185)) (= ($generated@@184 ($generated@@219 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@219 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@94) ($generated@@163 $generated@@501 $generated@@153))
 :pattern ( ($generated@@163 $generated@@501 $generated@@153))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) $generated@@76)
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ($generated@@506 Int) ) (! (let (($generated@@507 ($generated@@259 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@503 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@258 $generated@@185)) (= (type $generated@@509) $generated@@76)) (= (type $generated@@510) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@508 ($generated@@502 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@257 $generated@@508))) ($generated@@244 ($generated@@503 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@503 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@91 $generated@@508 ($generated@@502 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@92 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@92 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@76)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@76) (= ($generated@@514 ($generated@@229 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@229 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@76) (= ($generated@@87 ($generated@@229 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@229 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@76)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@76) (= ($generated@@518 ($generated@@234 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@234 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@76) (= ($generated@@87 ($generated@@234 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@234 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@76)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@76) (= ($generated@@522 ($generated@@190 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@190 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@76) (= ($generated@@87 ($generated@@190 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@76)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@76) (= ($generated@@526 ($generated@@502 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@502 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@76) (= ($generated@@87 ($generated@@502 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@502 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@339 $generated@@531 ($generated@@201 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@201 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@289 $generated@@185 $generated@@185)) (= (type $generated@@533) $generated@@76)) (= (type $generated@@534) $generated@@76)) (= ($generated@@163 $generated@@532 ($generated@@411 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@287 $generated@@532) $generated@@535))) (and ($generated@@220 ($generated@@98 ($generated@@386 $generated@@532) $generated@@535) $generated@@534) ($generated@@220 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@98 ($generated@@386 $generated@@532) $generated@@535))
 :pattern ( ($generated@@98 ($generated@@287 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@163 $generated@@532 ($generated@@411 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@307 $generated@@185 $generated@@185)) (= (type $generated@@537) $generated@@76)) (= (type $generated@@538) $generated@@76)) (= ($generated@@163 $generated@@536 ($generated@@419 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@305 $generated@@536) $generated@@539))) (and ($generated@@220 ($generated@@98 ($generated@@394 $generated@@536) $generated@@539) $generated@@538) ($generated@@220 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@98 ($generated@@394 $generated@@536) $generated@@539))
 :pattern ( ($generated@@98 ($generated@@305 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@163 $generated@@536 ($generated@@419 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@185) (= (type $generated@@543) $generated@@185)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@219 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@219 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@185) (= (type $generated@@545) $generated@@185)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@219 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@219 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@185) (= (type $generated@@547) $generated@@76)) (= (type $generated@@548) $generated@@76)) ($generated@@220 $generated@@546 ($generated@@411 $generated@@547 $generated@@548))) (and (= ($generated@@201 ($generated@@339 ($generated@@289 $generated@@185 $generated@@185) $generated@@546)) $generated@@546) ($generated@@163 ($generated@@339 ($generated@@289 $generated@@185 $generated@@185) $generated@@546) ($generated@@411 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@220 $generated@@546 ($generated@@411 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@185) (= (type $generated@@550) $generated@@76)) (= (type $generated@@551) $generated@@76)) ($generated@@220 $generated@@549 ($generated@@419 $generated@@550 $generated@@551))) (and (= ($generated@@201 ($generated@@339 ($generated@@307 $generated@@185 $generated@@185) $generated@@549)) $generated@@549) ($generated@@163 ($generated@@339 ($generated@@307 $generated@@185 $generated@@185) $generated@@549) ($generated@@419 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@220 $generated@@549 ($generated@@419 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@76) (= (type $generated@@553) $generated@@76)) (= (type $generated@@554) $generated@@185)) ($generated@@220 $generated@@554 ($generated@@175 $generated@@552 $generated@@553))) (and (= ($generated@@201 ($generated@@339 $generated@@176 $generated@@554)) $generated@@554) ($generated@@163 ($generated@@339 $generated@@176 $generated@@554) ($generated@@175 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@220 $generated@@554 ($generated@@175 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@98 ($generated@@430 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@98 ($generated@@430 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@83)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@76) (= (type $generated@@560) $generated@@76)) (and (= ($generated@@87 ($generated@@175 $generated@@559 $generated@@560)) $generated@@65) (= ($generated@@557 ($generated@@175 $generated@@559 $generated@@560)) $generated@@70)))
 :pattern ( ($generated@@175 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 Int) ($generated@@562 Int) ) (! (= ($generated@@202 $generated@@561 $generated@@562) (* $generated@@561 $generated@@562))
 :pattern ( ($generated@@202 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@176) (= ($generated@@540 ($generated@@201 $generated@@563)) ($generated@@541 $generated@@563)))
 :pattern ( ($generated@@540 ($generated@@201 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@185) ($generated@@220 $generated@@564 ($generated@@92 0))) (and (= ($generated@@201 ($generated@@339 $generated@@2 $generated@@564)) $generated@@564) ($generated@@163 ($generated@@339 ($generated@@93 $generated@@185 $generated@@4) $generated@@564) ($generated@@92 0))))
 :pattern ( ($generated@@220 $generated@@564 ($generated@@92 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@185) (= (type $generated@@566) $generated@@76)) ($generated@@220 $generated@@565 ($generated@@229 $generated@@566))) (and (= ($generated@@201 ($generated@@339 ($generated@@93 $generated@@185 $generated@@4) $generated@@565)) $generated@@565) ($generated@@163 ($generated@@339 ($generated@@93 $generated@@185 $generated@@4) $generated@@565) ($generated@@229 $generated@@566))))
 :pattern ( ($generated@@220 $generated@@565 ($generated@@229 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@185) (= (type $generated@@568) $generated@@76)) ($generated@@220 $generated@@567 ($generated@@234 $generated@@568))) (and (= ($generated@@201 ($generated@@339 ($generated@@93 $generated@@185 $generated@@4) $generated@@567)) $generated@@567) ($generated@@163 ($generated@@339 ($generated@@93 $generated@@185 $generated@@4) $generated@@567) ($generated@@234 $generated@@568))))
 :pattern ( ($generated@@220 $generated@@567 ($generated@@234 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@185) (= (type $generated@@570) $generated@@76)) ($generated@@220 $generated@@569 ($generated@@190 $generated@@570))) (and (= ($generated@@201 ($generated@@339 ($generated@@93 $generated@@185 $generated@@2) $generated@@569)) $generated@@569) ($generated@@163 ($generated@@339 ($generated@@93 $generated@@185 $generated@@2) $generated@@569) ($generated@@190 $generated@@570))))
 :pattern ( ($generated@@220 $generated@@569 ($generated@@190 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@185) (= (type $generated@@572) $generated@@76)) ($generated@@220 $generated@@571 ($generated@@502 $generated@@572))) (and (= ($generated@@201 ($generated@@339 ($generated@@258 $generated@@185) $generated@@571)) $generated@@571) ($generated@@163 ($generated@@339 ($generated@@258 $generated@@185) $generated@@571) ($generated@@502 $generated@@572))))
 :pattern ( ($generated@@220 $generated@@571 ($generated@@502 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (=> (and (and (and (= (type $generated@@573) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@574) $generated@@94)) (= (type $generated@@575) ($generated@@78 $generated@@577))) ($generated@@161 ($generated@@99 $generated@@573 $generated@@574 ($generated@@101 ($generated@@98 $generated@@573 $generated@@574) $generated@@575 $generated@@576)))) ($generated@@149 $generated@@573 ($generated@@99 $generated@@573 $generated@@574 ($generated@@101 ($generated@@98 $generated@@573 $generated@@574) $generated@@575 $generated@@576)))))
 :pattern ( ($generated@@99 $generated@@573 $generated@@574 ($generated@@101 ($generated@@98 $generated@@573 $generated@@574) $generated@@575 $generated@@576)))
)))
(assert (= ($generated@@87 $generated@@153) $generated@@62))
(assert (= ($generated@@557 $generated@@153) $generated@@69))
(assert (= ($generated@@87 $generated@@207) $generated@@63))
(assert (= ($generated@@557 $generated@@207) $generated@@69))
(assert (= ($generated@@87 $generated@@157) $generated@@67))
(assert (= ($generated@@557 $generated@@157) $generated@@71))
(assert (= ($generated@@87 $generated@@199) $generated@@68))
(assert (= ($generated@@557 $generated@@199) $generated@@71))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@579) $generated@@76)) (= (type $generated@@580) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@578 ($generated@@190 $generated@@579) $generated@@580) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@185) (< 0 ($generated ($generated@@98 $generated@@578 $generated@@581)))) ($generated@@244 $generated@@581 $generated@@579 $generated@@580))
 :pattern ( ($generated@@98 $generated@@578 $generated@@581))
))))
 :pattern ( ($generated@@91 $generated@@578 ($generated@@190 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@176) (= (type $generated@@583) $generated@@76)) (= (type $generated@@584) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@161 $generated@@584) (and ($generated@@174 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@76) ($generated@@91 $generated@@582 ($generated@@175 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@91 $generated@@582 ($generated@@175 $generated@@583 $generated@@585) $generated@@584))
))))) ($generated@@244 ($generated@@183 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@244 ($generated@@183 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@176) (= (type $generated@@587) $generated@@76)) (= (type $generated@@588) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@161 $generated@@588) (and ($generated@@174 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@76) ($generated@@91 $generated@@586 ($generated@@175 $generated@@589 $generated@@587) $generated@@588))
 :pattern ( ($generated@@91 $generated@@586 ($generated@@175 $generated@@589 $generated@@587) $generated@@588))
))))) ($generated@@244 ($generated@@184 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@244 ($generated@@184 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@591) $generated@@94)) (and ($generated@@161 $generated@@590) (and (not (= $generated@@591 $generated@@154)) (= ($generated@@162 $generated@@591) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@590 $generated@@591) $generated@@200) ($generated@@229 $generated@@207)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@590 $generated@@591) $generated@@200))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@185) (= (type $generated@@593) $generated@@185)) (= ($generated@@219 ($generated@@240 $generated@@592) ($generated@@240 $generated@@593)) ($generated@@240 ($generated@@219 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@219 ($generated@@240 $generated@@592) ($generated@@240 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@201 ($generated@@8 ($generated@@203 $generated@@594))) ($generated@@240 ($generated@@201 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@201 ($generated@@8 ($generated@@203 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@201 ($generated@@240 $generated@@595)) ($generated@@240 ($generated@@201 $generated@@595)))
 :pattern ( ($generated@@201 ($generated@@240 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@259 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@258 $generated@@597)) (= ($generated@@257 $generated@@596) 0)) (= $generated@@596 ($generated@@256 $generated@@597))))
 :pattern ( ($generated@@257 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@93 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@281 ($generated@@99 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@281 $generated@@598) ($generated ($generated@@98 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@281 ($generated@@99 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@608 T@T) ($generated@@609 T@T) ) (= ($generated@@1 ($generated@@604 $generated@@608 $generated@@609)) 22)) (forall (($generated@@610 T@T) ($generated@@611 T@T) ) (! (= ($generated@@605 ($generated@@604 $generated@@610 $generated@@611)) $generated@@610)
 :pattern ( ($generated@@604 $generated@@610 $generated@@611))
))) (forall (($generated@@612 T@T) ($generated@@613 T@T) ) (! (= ($generated@@606 ($generated@@604 $generated@@612 $generated@@613)) $generated@@613)
 :pattern ( ($generated@@604 $generated@@612 $generated@@613))
))) (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@606 (type $generated@@614))))
(= (type ($generated@@602 $generated@@614 $generated@@615 $generated@@616)) $generated@@617))
 :pattern ( ($generated@@602 $generated@@614 $generated@@615 $generated@@616))
))) (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
(let (($generated@@623 (type $generated@@619)))
(= (type ($generated@@607 $generated@@618 $generated@@619 $generated@@620 $generated@@621)) ($generated@@604 $generated@@623 $generated@@622))))
 :pattern ( ($generated@@607 $generated@@618 $generated@@619 $generated@@620 $generated@@621))
))) (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@606 (type $generated@@624))))
 (=> (= (type $generated@@627) $generated@@628) (= ($generated@@602 ($generated@@607 $generated@@624 $generated@@625 $generated@@626 $generated@@627) $generated@@625 $generated@@626) $generated@@627)))
 :weight 0
))) (and (and (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (or (= $generated@@631 $generated@@633) (= ($generated@@602 ($generated@@607 $generated@@630 $generated@@631 $generated@@632 $generated@@629) $generated@@633 $generated@@634) ($generated@@602 $generated@@630 $generated@@633 $generated@@634)))
 :weight 0
)) (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (or (= $generated@@638 $generated@@640) (= ($generated@@602 ($generated@@607 $generated@@636 $generated@@637 $generated@@638 $generated@@635) $generated@@639 $generated@@640) ($generated@@602 $generated@@636 $generated@@639 $generated@@640)))
 :weight 0
))) (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (or true (= ($generated@@602 ($generated@@607 $generated@@642 $generated@@643 $generated@@644 $generated@@641) $generated@@645 $generated@@646) ($generated@@602 $generated@@642 $generated@@645 $generated@@646)))
 :weight 0
)))) (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (! (= (type ($generated@@603 $generated@@647 $generated@@648 $generated@@649 $generated@@650)) ($generated@@604 $generated@@94 $generated@@4))
 :pattern ( ($generated@@603 $generated@@647 $generated@@648 $generated@@649 $generated@@650))
))))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (! (let (($generated@@657 ($generated@@79 (type $generated@@656))))
 (=> (and (and (and (and (and (= (type $generated@@651) $generated@@94) (= (type $generated@@652) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@653) ($generated@@78 $generated@@4))) (= (type $generated@@654) ($generated@@93 $generated@@185 $generated@@4))) (= (type $generated@@655) $generated@@94)) (= (type $generated@@656) ($generated@@78 $generated@@657))) (= ($generated@@0 ($generated@@602 ($generated@@603 $generated@@651 $generated@@652 $generated@@653 $generated@@654) $generated@@655 $generated@@656))  (=> (and (not (= $generated@@655 $generated@@651)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@652 $generated@@655) $generated@@653))) ($generated@@0 ($generated@@98 $generated@@654 ($generated@@201 $generated@@655)))))))
 :pattern ( ($generated@@602 ($generated@@603 $generated@@651 $generated@@652 $generated@@653 $generated@@654) $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@659) $generated@@2)) ($generated@@91 $generated@@659 $generated@@46 $generated@@658))
 :pattern ( ($generated@@91 $generated@@659 $generated@@46 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@661) $generated@@3)) ($generated@@91 $generated@@661 $generated@@47 $generated@@660))
 :pattern ( ($generated@@91 $generated@@661 $generated@@47 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@663) $generated@@4)) ($generated@@91 $generated@@663 $generated@@44 $generated@@662))
 :pattern ( ($generated@@91 $generated@@663 $generated@@44 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@665) $generated@@459)) ($generated@@91 $generated@@665 $generated@@45 $generated@@664))
 :pattern ( ($generated@@91 $generated@@665 $generated@@45 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@667) $generated@@185)) ($generated@@91 $generated@@667 $generated@@48 $generated@@666))
 :pattern ( ($generated@@91 $generated@@667 $generated@@48 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@258 $generated@@185)) (= (type $generated@@669) $generated@@76)) (= ($generated@@163 $generated@@668 ($generated@@502 $generated@@669)) (forall (($generated@@670 Int) ) (!  (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@257 $generated@@668))) ($generated@@220 ($generated@@503 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@503 $generated@@668 $generated@@670))
))))
 :pattern ( ($generated@@163 $generated@@668 ($generated@@502 $generated@@669)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@258 $generated@@185)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@257 $generated@@672))) (< ($generated@@541 ($generated@@339 $generated@@176 ($generated@@503 $generated@@672 $generated@@673))) ($generated@@671 $generated@@672))))
 :pattern ( ($generated@@541 ($generated@@339 $generated@@176 ($generated@@503 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@289 $generated@@185 $generated@@185)) (= (type $generated@@675) $generated@@76)) (= (type $generated@@676) $generated@@76)) ($generated@@163 $generated@@674 ($generated@@411 $generated@@675 $generated@@676))) (and (and ($generated@@163 ($generated@@287 $generated@@674) ($generated@@229 $generated@@675)) ($generated@@163 ($generated@@352 $generated@@674) ($generated@@229 $generated@@676))) ($generated@@163 ($generated@@385 $generated@@674) ($generated@@229 ($generated@@175 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@163 $generated@@674 ($generated@@411 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@307 $generated@@185 $generated@@185)) (= (type $generated@@678) $generated@@76)) (= (type $generated@@679) $generated@@76)) ($generated@@163 $generated@@677 ($generated@@419 $generated@@678 $generated@@679))) (and (and ($generated@@163 ($generated@@305 $generated@@677) ($generated@@234 $generated@@678)) ($generated@@163 ($generated@@363 $generated@@677) ($generated@@234 $generated@@679))) ($generated@@163 ($generated@@393 $generated@@677) ($generated@@234 ($generated@@175 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@163 $generated@@677 ($generated@@419 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@163 $generated@@680 $generated@@46))
 :pattern ( ($generated@@163 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@163 $generated@@681 $generated@@47))
 :pattern ( ($generated@@163 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@163 $generated@@682 $generated@@44))
 :pattern ( ($generated@@163 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@459) ($generated@@163 $generated@@683 $generated@@45))
 :pattern ( ($generated@@163 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@185) ($generated@@163 $generated@@684 $generated@@48))
 :pattern ( ($generated@@163 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@685) ($generated@@604 $generated@@94 $generated@@4)) (= (type $generated@@686) $generated@@94)) (= (type $generated@@688) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@689) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@690) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@694) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@692) ($generated@@93 $generated@@94 $generated@@95))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@695  (=> ($generated@@0 ($generated@@602 $generated@@685 $generated@@686 $generated@@170)) (=> (and (= $generated@@687 (+ ($generated ($generated@@100 ($generated@@98 $generated@@688 $generated@@686) $generated@@170)) 1)) (= $generated@@689 ($generated@@99 $generated@@688 $generated@@686 ($generated@@101 ($generated@@98 $generated@@688 $generated@@686) $generated@@170 ($generated@@8 $generated@@687))))) (=> (and (and ($generated@@161 $generated@@689) ($generated@@91 $generated@@686 $generated@@157 $generated@@689)) (and ($generated@@198 $generated@@689 $generated@@686) ($generated@@198 $generated@@689 $generated@@686))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@197 $generated@@689 $generated@@686)) (=> ($generated@@197 $generated@@689 $generated@@686) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> false (= ($generated ($generated@@100 ($generated@@98 $generated@@689 $generated@@686) $generated@@170)) (+ ($generated ($generated@@100 ($generated@@98 $generated@@690 $generated@@686) $generated@@170)) 1)))) (=> (=> false (= ($generated ($generated@@100 ($generated@@98 $generated@@689 $generated@@686) $generated@@170)) (+ ($generated ($generated@@100 ($generated@@98 $generated@@690 $generated@@686) $generated@@170)) 1))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> false ($generated@@197 $generated@@689 $generated@@686))) (=> (=> false ($generated@@197 $generated@@689 $generated@@686)) (=> (= (ControlFlow 0 2) (- 0 1)) (=> false (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@94) (=> (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@689 $generated@@686) $generated@@200) ($generated@@201 $generated@@696))) (not ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@690 $generated@@686) $generated@@200) ($generated@@201 $generated@@696))))) (and (not (= $generated@@696 $generated@@154)) (not ($generated@@0 ($generated@@100 ($generated@@98 $generated@@690 $generated@@696) $generated@@60))))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@690 $generated@@696) $generated@@60))
)))))))))))))))
(let (($generated@@697  (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@0 ($generated@@602 $generated@@685 $generated@@686 $generated@@167))) (=> ($generated@@0 ($generated@@602 $generated@@685 $generated@@686 $generated@@167)) (=> (= $generated@@691 (- ($generated ($generated@@100 ($generated@@98 $generated@@690 $generated@@686) $generated@@167)) 1)) (=> (and (and (= $generated@@692 ($generated@@99 $generated@@690 $generated@@686 ($generated@@101 ($generated@@98 $generated@@690 $generated@@686) $generated@@167 ($generated@@8 $generated@@691)))) ($generated@@161 $generated@@692)) (and (= $generated@@688 $generated@@692) (= (ControlFlow 0 8) 2))) $generated@@695))))))
(let (($generated@@698  (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@0 ($generated@@602 $generated@@685 $generated@@686 $generated@@160))) (=> ($generated@@0 ($generated@@602 $generated@@685 $generated@@686 $generated@@160)) (=> (= $generated@@693 (+ ($generated ($generated@@100 ($generated@@98 $generated@@690 $generated@@686) $generated@@160)) 1)) (=> (and (and (= $generated@@694 ($generated@@99 $generated@@690 $generated@@686 ($generated@@101 ($generated@@98 $generated@@690 $generated@@686) $generated@@160 ($generated@@8 $generated@@693)))) ($generated@@161 $generated@@694)) (and (= $generated@@688 $generated@@694) (= (ControlFlow 0 6) 2))) $generated@@695))))))
(let (($generated@@699  (=> (= $generated@@685 ($generated@@603 $generated@@154 $generated@@690 $generated@@60 ($generated@@100 ($generated@@98 $generated@@690 $generated@@686) $generated@@200))) (and (=> (= (ControlFlow 0 10) 6) $generated@@698) (=> (= (ControlFlow 0 10) 8) $generated@@697)))))
(let (($generated@@700  (=> (and ($generated@@161 $generated@@690) ($generated@@329 $generated@@690)) (=> (and (and (and (not (= $generated@@686 $generated@@154)) (and ($generated@@163 $generated@@686 $generated@@199) ($generated@@91 $generated@@686 $generated@@199 $generated@@690))) (= 1 $generated@@196)) (and ($generated@@197 $generated@@690 $generated@@686) (= (ControlFlow 0 11) 10))) $generated@@699))))
$generated@@700))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@258 (Int Int) Int)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@268 (T@T T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@379 (T@U T@U) Bool)
(declare-fun $generated@@385 (T@U) Bool)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@U T@U) T@U)
(declare-fun $generated@@486 (T@T) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@515 () T@T)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@559 (T@U Int) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@597 (T@U) Int)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@666 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@78 $generated@@85))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@61) $generated@@80)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@64) $generated@@81)) (= (type $generated@@65) $generated@@77)) (= ($generated@@1 $generated@@82) 11)) (= (type $generated@@66) $generated@@82)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@83) 12)) (= (type $generated@@69) $generated@@83)) (= (type $generated@@70) $generated@@83)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)) (= (type $generated@@75) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (= ($generated@@86 $generated@@60) 0))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@77)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@44) $generated@@49))
(assert (= ($generated@@87 $generated@@45) $generated@@50))
(assert (= ($generated@@87 $generated@@46) $generated@@51))
(assert (= ($generated@@87 $generated@@47) $generated@@52))
(assert (= ($generated@@87 $generated@@48) $generated@@53))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@80)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 13)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@79 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 15)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@79 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@76)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@151) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@149 $generated@@150 $generated@@151)) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@94) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@150 $generated@@152) $generated@@60))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@151 $generated@@152) $generated@@60)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@151 $generated@@152) $generated@@60))
)))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert  (and (= (type $generated@@153) $generated@@76) (= (type $generated@@154) $generated@@94)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@94) (= (type $generated@@156) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@155 $generated@@153 $generated@@156)  (or (= $generated@@155 $generated@@154) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@155 $generated@@153 $generated@@156))
)))
(assert (= (type $generated@@157) $generated@@76))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@94) (= (type $generated@@159) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@158 $generated@@157 $generated@@159)  (or (= $generated@@158 $generated@@154) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@159 $generated@@158) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@158 $generated@@157 $generated@@159))
)))
(assert  (and (= (type $generated@@160) ($generated@@78 $generated@@2)) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@76)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@166) $generated@@94)) (and ($generated@@161 $generated@@165) (and (not (= $generated@@166 $generated@@154)) (= ($generated@@162 $generated@@166) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@165 $generated@@166) $generated@@160) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@165 $generated@@166) $generated@@160))
)))
(assert (= (type $generated@@167) ($generated@@78 $generated@@2)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@169) $generated@@94)) (and ($generated@@161 $generated@@168) (and (not (= $generated@@169 $generated@@154)) (= ($generated@@162 $generated@@169) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@168 $generated@@169) $generated@@167) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@168 $generated@@169) $generated@@167))
)))
(assert (= (type $generated@@170) ($generated@@78 $generated@@2)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@172) $generated@@94)) (and ($generated@@161 $generated@@171) (and (not (= $generated@@172 $generated@@154)) (= ($generated@@162 $generated@@172) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@171 $generated@@172) $generated@@170) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@171 $generated@@172) $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@2) ($generated@@163 $generated@@173 ($generated@@92 0)))
 :pattern ( ($generated@@163 $generated@@173 ($generated@@92 0)))
)))
(assert  (and (= ($generated@@1 $generated@@176) 16) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@76)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@76) (= (type $generated@@180) $generated@@76)) (= (type $generated@@181) $generated@@176)) ($generated@@163 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@163 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (and (= ($generated@@1 $generated@@185) 17) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@186))
))) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@185)
 :pattern ( ($generated@@184 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@176) (= (type $generated@@189) $generated@@176)) true) (= ($generated@@182 $generated@@188 $generated@@189)  (and (= ($generated@@183 $generated@@188) ($generated@@183 $generated@@189)) (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)))))
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@76)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@194) $generated@@76)) ($generated@@163 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@163 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= (type $generated@@195) $generated@@94) (= ($generated@@163 $generated@@195 $generated@@157)  (or (= $generated@@195 $generated@@154) (= ($generated@@162 $generated@@195) $generated@@157))))
 :pattern ( ($generated@@163 $generated@@195 $generated@@157))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 18)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@94 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@79 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@94) (= (type $generated@@246) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@247) ($generated@@78 $generated@@4))) (= (type $generated@@249) $generated@@94)) (= (type $generated@@250) ($generated@@78 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert  (and (and (= (type $generated@@255) $generated@@76) (= (type $generated@@256) ($generated@@78 ($generated@@93 $generated@@185 $generated@@4)))) (forall (($generated@@260 T@U) ) (! (= (type ($generated@@257 $generated@@260)) $generated@@185)
 :pattern ( ($generated@@257 $generated@@260))
))))
(assert  (=> (<= 0 $generated@@252) (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@262) $generated@@94)) (or ($generated@@254 $generated@@261 $generated@@262) (and (not (= 0 $generated@@252)) (and ($generated@@161 $generated@@261) (and (not (= $generated@@262 $generated@@154)) (and ($generated@@163 $generated@@262 $generated@@255) ($generated@@91 $generated@@262 $generated@@255 $generated@@261))))))) (= ($generated@@253 $generated@@261 $generated@@262)  (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@261 $generated@@262) $generated@@256) ($generated@@257 $generated@@262))) (= ($generated ($generated@@100 ($generated@@98 $generated@@261 $generated@@262) $generated@@170)) (- ($generated@@258 ($generated@@259 2) ($generated ($generated@@100 ($generated@@98 $generated@@261 $generated@@262) $generated@@160))) ($generated ($generated@@100 ($generated@@98 $generated@@261 $generated@@262) $generated@@167)))))))
 :pattern ( ($generated@@253 $generated@@261 $generated@@262) ($generated@@161 $generated@@261))
))))
(assert (= (type $generated@@263) $generated@@76))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@94) (= (type $generated@@265) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@264 $generated@@263 $generated@@265) ($generated@@91 $generated@@264 $generated@@153 $generated@@265)))
 :pattern ( ($generated@@91 $generated@@264 $generated@@263 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@94) (= (type $generated@@267) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@266 $generated@@255 $generated@@267) ($generated@@91 $generated@@266 $generated@@157 $generated@@267)))
 :pattern ( ($generated@@91 $generated@@266 $generated@@255 $generated@@267))
)))
(assert (= ($generated@@86 $generated@@256) 0))
(assert (forall (($generated@@269 T@T) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (= (type ($generated@@268 $generated@@269 $generated@@270 $generated@@271)) ($generated@@78 $generated@@269))
 :pattern ( ($generated@@268 $generated@@269 $generated@@270 $generated@@271))
)))
(assert (= ($generated@@268 ($generated@@93 $generated@@185 $generated@@4) $generated@@66 $generated@@74) $generated@@256))
(assert ($generated@@272 $generated@@256))
(assert (= ($generated@@86 $generated@@170) 0))
(assert (= ($generated@@268 $generated@@2 $generated@@66 $generated@@75) $generated@@170))
(assert ($generated@@272 $generated@@170))
(assert  (=> (<= 0 $generated@@252) (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@274) $generated@@94)) (or ($generated@@254 $generated@@273 $generated@@274) (and (not (= 0 $generated@@252)) (and ($generated@@161 $generated@@273) (and (not (= $generated@@274 $generated@@154)) (and ($generated@@163 $generated@@274 $generated@@255) ($generated@@91 $generated@@274 $generated@@255 $generated@@273))))))) ($generated@@253 $generated@@273 $generated@@274)) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@273 $generated@@274) $generated@@256) ($generated@@257 $generated@@274))))
 :pattern ( ($generated@@253 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (= (type ($generated@@275 $generated@@277 $generated@@278)) $generated@@176)
 :pattern ( ($generated@@275 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) $generated@@76) (= (type $generated@@280) $generated@@76)) (= (type $generated@@281) $generated@@185)) (= (type $generated@@282) $generated@@185)) (= ($generated@@163 ($generated@@275 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280))  (and ($generated@@276 $generated@@281 $generated@@279) ($generated@@276 $generated@@282 $generated@@280))))
 :pattern ( ($generated@@163 ($generated@@275 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280)))
)))
(assert (= ($generated@@86 $generated@@160) 0))
(assert (= ($generated@@268 $generated@@2 $generated@@66 $generated@@72) $generated@@160))
(assert  (not ($generated@@272 $generated@@160)))
(assert (= ($generated@@86 $generated@@167) 0))
(assert (= ($generated@@268 $generated@@2 $generated@@66 $generated@@73) $generated@@167))
(assert  (not ($generated@@272 $generated@@167)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@176) (= (type $generated@@284) $generated@@176)) (= ($generated@@182 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@182 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@76)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@288) $generated@@76)) (= ($generated@@163 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@185) ($generated@@0 ($generated@@98 $generated@@287 $generated@@289))) ($generated@@276 $generated@@289 $generated@@288))
 :pattern ( ($generated@@98 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@163 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@76)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@293) $generated@@76)) (= ($generated@@163 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@185) ($generated@@0 ($generated@@98 $generated@@292 $generated@@294))) ($generated@@276 $generated@@294 $generated@@293))
 :pattern ( ($generated@@98 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@163 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@295 Int) ) (! (= ($generated@@259 $generated@@295) $generated@@295)
 :pattern ( ($generated@@259 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 (type $generated@@297)))
(= (type ($generated@@296 $generated@@297)) $generated@@298))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= ($generated@@296 $generated@@299) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@76) (= (type $generated@@302) $generated@@76)) (= (type $generated@@303) $generated@@185)) (= (type $generated@@304) $generated@@185)) (= (type $generated@@305) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@161 $generated@@305)) (= ($generated@@91 ($generated@@275 $generated@@303 $generated@@304) ($generated@@175 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@91 ($generated@@275 $generated@@303 $generated@@304) ($generated@@175 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@81)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@176) (= ($generated@@174 $generated@@308) (= ($generated@@306 $generated@@308) $generated@@64)))
 :pattern ( ($generated@@174 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@176) ($generated@@174 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@185) (= (type $generated@@311) $generated@@185)) (= $generated@@309 ($generated@@275 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@174 $generated@@309))
)))
(assert  (and (and (forall (($generated@@316 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@316)) 19)) (forall (($generated@@317 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@314 $generated@@317))
))) (forall (($generated@@318 T@T) ) (! (= (type ($generated@@312 $generated@@318)) ($generated@@314 $generated@@318))
 :pattern ( ($generated@@312 $generated@@318))
))))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@319)) 0)
 :pattern ( ($generated@@312 $generated@@319))
)))
(assert ($generated@@272 $generated@@60))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@76) (= (type $generated@@322) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@300 ($generated@@257 $generated@@320) $generated@@321 $generated@@322) ($generated@@91 $generated@@320 $generated@@321 $generated@@322)))
 :pattern ( ($generated@@300 ($generated@@257 $generated@@320) $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@323) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@324) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@325) $generated@@185)) (= (type $generated@@326) $generated@@76)) ($generated@@149 $generated@@323 $generated@@324)) ($generated@@300 $generated@@325 $generated@@326 $generated@@323)) ($generated@@300 $generated@@325 $generated@@326 $generated@@324))
 :pattern ( ($generated@@149 $generated@@323 $generated@@324) ($generated@@300 $generated@@325 $generated@@326 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@327) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@328) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@330) $generated@@76)) ($generated@@149 $generated@@327 $generated@@328)) ($generated@@91 $generated@@329 $generated@@330 $generated@@327)) ($generated@@91 $generated@@329 $generated@@330 $generated@@328))
 :pattern ( ($generated@@149 $generated@@327 $generated@@328) ($generated@@91 $generated@@329 $generated@@330 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@332) $generated@@94)) (=> (and (and ($generated@@161 $generated@@331) (and (not (= $generated@@332 $generated@@154)) (= ($generated@@162 $generated@@332) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@331 $generated@@332) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@331 $generated@@332) $generated@@160) $generated@@46 $generated@@331)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@331 $generated@@332) $generated@@160))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@334) $generated@@94)) (=> (and (and ($generated@@161 $generated@@333) (and (not (= $generated@@334 $generated@@154)) (= ($generated@@162 $generated@@334) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@333 $generated@@334) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@333 $generated@@334) $generated@@167) $generated@@46 $generated@@333)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@333 $generated@@334) $generated@@167))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@336) $generated@@94)) (=> (and (and ($generated@@161 $generated@@335) (and (not (= $generated@@336 $generated@@154)) (= ($generated@@162 $generated@@336) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@335 $generated@@336) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@335 $generated@@336) $generated@@170) $generated@@46 $generated@@335)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@335 $generated@@336) $generated@@170))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@93 $generated@@339 $generated@@2))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@96 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@93 $generated@@341 $generated@@2)) (and (= (= ($generated@@337 $generated@@340) 0) (= $generated@@340 ($generated@@338 $generated@@341))) (=> (not (= ($generated@@337 $generated@@340) 0)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) (< 0 ($generated ($generated@@98 $generated@@340 $generated@@342))))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 20)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@93 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@98 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@98 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 21)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@93 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@98 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@98 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@381) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@379 $generated@@380 $generated@@381)) (and ($generated@@149 $generated@@380 $generated@@381) (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@79 (type $generated@@383))))
 (=> (and (and (= (type $generated@@382) $generated@@94) (= (type $generated@@383) ($generated@@78 $generated@@384))) (not ($generated@@272 $generated@@383))) (= ($generated@@100 ($generated@@98 $generated@@380 $generated@@382) $generated@@383) ($generated@@100 ($generated@@98 $generated@@381 $generated@@382) $generated@@383))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@381 $generated@@382) $generated@@383))
))))
 :pattern ( ($generated@@379 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@387) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@388) $generated@@94)) (=> (and (and (and ($generated@@161 $generated@@386) ($generated@@161 $generated@@387)) (and (not (= $generated@@388 $generated@@154)) ($generated@@163 $generated@@388 $generated@@255))) (and ($generated@@385 $generated@@386) ($generated@@149 $generated@@386 $generated@@387))) (=> (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@79 (type $generated@@390))))
 (=> (and (and (= (type $generated@@389) $generated@@94) (= (type $generated@@390) ($generated@@78 $generated@@391))) (and (not (= $generated@@389 $generated@@154)) (or (= $generated@@389 $generated@@388) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@386 $generated@@388) $generated@@256) ($generated@@257 $generated@@389)))))) (= ($generated@@100 ($generated@@98 $generated@@386 $generated@@389) $generated@@390) ($generated@@100 ($generated@@98 $generated@@387 $generated@@389) $generated@@390))))
 :no-pattern (type $generated@@389)
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
)) (= ($generated@@253 $generated@@386 $generated@@388) ($generated@@253 $generated@@387 $generated@@388)))))
 :pattern ( ($generated@@385 $generated@@386) ($generated@@149 $generated@@386 $generated@@387) ($generated@@253 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@96 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@93 $generated@@393 $generated@@2)) (= ($generated@@191 $generated@@392) (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@393) (and (<= 0 ($generated ($generated@@98 $generated@@392 $generated@@394))) (<= ($generated ($generated@@98 $generated@@392 $generated@@394)) ($generated@@337 $generated@@392))))
 :pattern ( ($generated@@98 $generated@@392 $generated@@394))
)))))
 :pattern ( ($generated@@191 $generated@@392))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@185) ($generated@@276 $generated@@398 $generated@@153)) (and (= ($generated@@257 ($generated@@395 $generated@@94 $generated@@398)) $generated@@398) ($generated@@163 ($generated@@395 $generated@@94 $generated@@398) $generated@@153)))
 :pattern ( ($generated@@276 $generated@@398 $generated@@153))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@185) ($generated@@276 $generated@@399 $generated@@263)) (and (= ($generated@@257 ($generated@@395 $generated@@94 $generated@@399)) $generated@@399) ($generated@@163 ($generated@@395 $generated@@94 $generated@@399) $generated@@263)))
 :pattern ( ($generated@@276 $generated@@399 $generated@@263))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@185) ($generated@@276 $generated@@400 $generated@@157)) (and (= ($generated@@257 ($generated@@395 $generated@@94 $generated@@400)) $generated@@400) ($generated@@163 ($generated@@395 $generated@@94 $generated@@400) $generated@@157)))
 :pattern ( ($generated@@276 $generated@@400 $generated@@157))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@185) ($generated@@276 $generated@@401 $generated@@255)) (and (= ($generated@@257 ($generated@@395 $generated@@94 $generated@@401)) $generated@@401) ($generated@@163 ($generated@@395 $generated@@94 $generated@@401) $generated@@255)))
 :pattern ( ($generated@@276 $generated@@401 $generated@@255))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@94) (= ($generated@@163 $generated@@402 $generated@@263)  (and ($generated@@163 $generated@@402 $generated@@153) (not (= $generated@@402 $generated@@154)))))
 :pattern ( ($generated@@163 $generated@@402 $generated@@263))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@94) (= ($generated@@163 $generated@@403 $generated@@255)  (and ($generated@@163 $generated@@403 $generated@@157) (not (= $generated@@403 $generated@@154)))))
 :pattern ( ($generated@@163 $generated@@403 $generated@@255))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@347 (type $generated@@404))))
(let (($generated@@406 ($generated@@346 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@345 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@344 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) ($generated@@0 ($generated@@98 ($generated@@343 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@343 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@347 (type $generated@@409))))
(= (type ($generated@@408 $generated@@409)) ($generated@@93 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@347 (type $generated@@411))))
(let (($generated@@413 ($generated@@346 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@345 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@344 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@412) ($generated@@0 ($generated@@98 ($generated@@408 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@408 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@365 (type $generated@@415))))
(let (($generated@@417 ($generated@@364 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@363 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@362 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) ($generated@@0 ($generated@@98 ($generated@@361 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@361 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@365 (type $generated@@420))))
(= (type ($generated@@419 $generated@@420)) ($generated@@93 $generated@@421 $generated@@4)))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@365 (type $generated@@422))))
(let (($generated@@424 ($generated@@364 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@363 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@362 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@423) ($generated@@0 ($generated@@98 ($generated@@419 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@419 $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@427) $generated@@76)) (= ($generated@@163 $generated@@426 ($generated@@190 $generated@@427)) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@185) (< 0 ($generated ($generated@@98 $generated@@426 $generated@@428)))) ($generated@@276 $generated@@428 $generated@@427))
 :pattern ( ($generated@@98 $generated@@426 $generated@@428))
))))
 :pattern ( ($generated@@163 $generated@@426 ($generated@@190 $generated@@427)))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@430) $generated@@76)) (= (type $generated@@431) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@429 ($generated@@285 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@185) ($generated@@0 ($generated@@98 $generated@@429 $generated@@432))) ($generated@@300 $generated@@432 $generated@@430 $generated@@431))
 :pattern ( ($generated@@98 $generated@@429 $generated@@432))
))))
 :pattern ( ($generated@@91 $generated@@429 ($generated@@285 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (= (type $generated@@433) ($generated@@93 $generated@@185 $generated@@4)) (= (type $generated@@434) $generated@@76)) (= (type $generated@@435) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@433 ($generated@@290 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@185) ($generated@@0 ($generated@@98 $generated@@433 $generated@@436))) ($generated@@300 $generated@@436 $generated@@434 $generated@@435))
 :pattern ( ($generated@@98 $generated@@433 $generated@@436))
))))
 :pattern ( ($generated@@91 $generated@@433 ($generated@@290 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(= ($generated ($generated@@98 ($generated@@338 $generated@@438) $generated@@437)) 0))
 :pattern ( (let (($generated@@438 (type $generated@@437)))
($generated@@98 ($generated@@338 $generated@@438) $generated@@437)))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@440) $generated@@94)) (=> (and (and ($generated@@161 $generated@@439) (and (not (= $generated@@440 $generated@@154)) (= ($generated@@162 $generated@@440) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@439 $generated@@440) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@439 $generated@@440) $generated@@256) ($generated@@285 $generated@@263) $generated@@439)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@439 $generated@@440) $generated@@256))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@93 $generated@@185 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@347 (type $generated@@444))))
(let (($generated@@446 ($generated@@346 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@93 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@345 $generated@@185 $generated@@185)) (= (type $generated@@448) $generated@@185)) (= ($generated@@0 ($generated@@98 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@98 ($generated@@343 $generated@@447) ($generated@@183 ($generated@@395 $generated@@176 $generated@@448)))) (= ($generated@@98 ($generated@@442 $generated@@447) ($generated@@183 ($generated@@395 $generated@@176 $generated@@448))) ($generated@@184 ($generated@@395 $generated@@176 $generated@@448))))))
 :pattern ( ($generated@@98 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert  (and (forall (($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@451)) ($generated@@93 $generated@@185 $generated@@4))
 :pattern ( ($generated@@449 $generated@@451))
)) (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@365 (type $generated@@452))))
(let (($generated@@454 ($generated@@364 (type $generated@@452))))
(= (type ($generated@@450 $generated@@452)) ($generated@@93 $generated@@454 $generated@@453))))
 :pattern ( ($generated@@450 $generated@@452))
))))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) ($generated@@363 $generated@@185 $generated@@185)) (= (type $generated@@456) $generated@@185)) (= ($generated@@0 ($generated@@98 ($generated@@449 $generated@@455) $generated@@456))  (and ($generated@@0 ($generated@@98 ($generated@@361 $generated@@455) ($generated@@183 ($generated@@395 $generated@@176 $generated@@456)))) (= ($generated@@98 ($generated@@450 $generated@@455) ($generated@@183 ($generated@@395 $generated@@176 $generated@@456))) ($generated@@184 ($generated@@395 $generated@@176 $generated@@456))))))
 :pattern ( ($generated@@98 ($generated@@449 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@346 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@345 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@98 ($generated@@408 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@98 ($generated@@343 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@98 ($generated@@442 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@98 ($generated@@343 $generated@@457) $generated@@461))
 :pattern ( ($generated@@98 ($generated@@442 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@98 ($generated@@408 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(let (($generated@@465 ($generated@@364 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@363 $generated@@465 $generated@@464)) (= ($generated@@0 ($generated@@98 ($generated@@419 $generated@@462) $generated@@463)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) (and ($generated@@0 ($generated@@98 ($generated@@361 $generated@@462) $generated@@466)) (= $generated@@463 ($generated@@98 ($generated@@450 $generated@@462) $generated@@466))))
 :pattern ( ($generated@@98 ($generated@@361 $generated@@462) $generated@@466))
 :pattern ( ($generated@@98 ($generated@@450 $generated@@462) $generated@@466))
))))))
 :pattern ( ($generated@@98 ($generated@@419 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@76)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@345 $generated@@185 $generated@@185)) (= (type $generated@@471) $generated@@76)) (= (type $generated@@472) $generated@@76)) (= (type $generated@@473) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@343 $generated@@470) $generated@@474))) (and ($generated@@300 ($generated@@98 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@300 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@98 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@98 ($generated@@343 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@91 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@476 $generated@@477)) $generated@@76)
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (= (type $generated@@478) ($generated@@363 $generated@@185 $generated@@185)) (= (type $generated@@479) $generated@@76)) (= (type $generated@@480) $generated@@76)) (= (type $generated@@481) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@361 $generated@@478) $generated@@482))) (and ($generated@@300 ($generated@@98 ($generated@@450 $generated@@478) $generated@@482) $generated@@480 $generated@@481) ($generated@@300 $generated@@482 $generated@@479 $generated@@481)))
 :pattern ( ($generated@@98 ($generated@@450 $generated@@478) $generated@@482))
 :pattern ( ($generated@@98 ($generated@@361 $generated@@478) $generated@@482))
))))
 :pattern ( ($generated@@91 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@483) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@484) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@485) ($generated@@93 $generated@@94 $generated@@95))) (not (= $generated@@483 $generated@@485))) (and ($generated@@149 $generated@@483 $generated@@484) ($generated@@149 $generated@@484 $generated@@485))) ($generated@@149 $generated@@483 $generated@@485))
 :pattern ( ($generated@@149 $generated@@483 $generated@@484) ($generated@@149 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@T) ) (! (= (type ($generated@@486 $generated@@487)) ($generated@@93 $generated@@487 $generated@@4))
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@365 (type $generated@@488))))
(let (($generated@@490 ($generated@@364 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@363 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@362 $generated@@490 $generated@@489)) (= ($generated@@361 $generated@@488) ($generated@@486 $generated@@490))))))
 :pattern ( ($generated@@361 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@365 (type $generated@@491))))
(let (($generated@@493 ($generated@@364 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@363 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@362 $generated@@493 $generated@@492)) (= ($generated@@419 $generated@@491) ($generated@@486 $generated@@492))))))
 :pattern ( ($generated@@419 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@365 (type $generated@@494))))
(let (($generated@@496 ($generated@@364 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@363 $generated@@496 $generated@@495)) (= (= $generated@@494 ($generated@@362 $generated@@496 $generated@@495)) (= ($generated@@449 $generated@@494) ($generated@@486 $generated@@185))))))
 :pattern ( ($generated@@449 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@347 (type $generated@@497))))
(let (($generated@@499 ($generated@@346 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@345 $generated@@499 $generated@@498)) (or (= $generated@@497 ($generated@@344 $generated@@499 $generated@@498)) (exists (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (and (and (= (type $generated@@500) $generated@@185) (= (type $generated@@501) $generated@@185)) ($generated@@0 ($generated@@98 ($generated@@441 $generated@@497) ($generated@@257 ($generated@@275 $generated@@500 $generated@@501)))))
 :no-pattern (type $generated@@500)
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@441 $generated@@497))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@365 (type $generated@@502))))
(let (($generated@@504 ($generated@@364 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@363 $generated@@504 $generated@@503)) (or (= $generated@@502 ($generated@@362 $generated@@504 $generated@@503)) (exists (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (and (and (= (type $generated@@505) $generated@@185) (= (type $generated@@506) $generated@@185)) ($generated@@0 ($generated@@98 ($generated@@449 $generated@@502) ($generated@@257 ($generated@@275 $generated@@505 $generated@@506)))))
 :no-pattern (type $generated@@505)
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
))))))
 :pattern ( ($generated@@449 $generated@@502))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@82)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@T) ) (!  (=> (and (= (type $generated@@509) $generated@@82) (= (type $generated@@510) $generated@@80)) (and (= ($generated@@507 ($generated@@268 $generated@@511 $generated@@509 $generated@@510)) $generated@@509) (= ($generated@@89 ($generated@@268 $generated@@511 $generated@@509 $generated@@510)) $generated@@510)))
 :pattern ( ($generated@@268 $generated@@511 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@185) ($generated@@276 $generated@@512 $generated@@46)) (and (= ($generated@@257 ($generated@@395 $generated@@2 $generated@@512)) $generated@@512) ($generated@@163 ($generated@@395 $generated@@2 $generated@@512) $generated@@46)))
 :pattern ( ($generated@@276 $generated@@512 $generated@@46))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@185) ($generated@@276 $generated@@513 $generated@@47)) (and (= ($generated@@257 ($generated@@395 $generated@@3 $generated@@513)) $generated@@513) ($generated@@163 ($generated@@395 $generated@@3 $generated@@513) $generated@@47)))
 :pattern ( ($generated@@276 $generated@@513 $generated@@47))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@185) ($generated@@276 $generated@@514 $generated@@44)) (and (= ($generated@@257 ($generated@@395 $generated@@4 $generated@@514)) $generated@@514) ($generated@@163 ($generated@@395 $generated@@4 $generated@@514) $generated@@44)))
 :pattern ( ($generated@@276 $generated@@514 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@515) 22))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@185) ($generated@@276 $generated@@516 $generated@@45)) (and (= ($generated@@257 ($generated@@395 $generated@@515 $generated@@516)) $generated@@516) ($generated@@163 ($generated@@395 $generated@@515 $generated@@516) $generated@@45)))
 :pattern ( ($generated@@276 $generated@@516 $generated@@45))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@76) (= ($generated@@276 ($generated@@257 $generated@@517) $generated@@518) ($generated@@163 $generated@@517 $generated@@518)))
 :pattern ( ($generated@@276 ($generated@@257 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@96 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@93 $generated@@520 $generated@@2)) (<= 0 ($generated@@337 $generated@@519))))
 :pattern ( ($generated@@337 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@315 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@314 $generated@@522)) (<= 0 ($generated@@313 $generated@@521))))
 :pattern ( ($generated@@313 $generated@@521))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@76)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@76) (= (type $generated@@526) $generated@@76)) (= ($generated@@523 ($generated@@467 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@467 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@76)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@76) (= (type $generated@@530) $generated@@76)) (= ($generated@@527 ($generated@@467 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@467 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@76) (= (type $generated@@532) $generated@@76)) (= ($generated@@87 ($generated@@467 $generated@@531 $generated@@532)) $generated@@58))
 :pattern ( ($generated@@467 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@76)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@76) (= (type $generated@@536) $generated@@76)) (= ($generated@@533 ($generated@@475 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@475 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@76)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@76) (= (type $generated@@540) $generated@@76)) (= ($generated@@537 ($generated@@475 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@475 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@76) (= (type $generated@@542) $generated@@76)) (= ($generated@@87 ($generated@@475 $generated@@541 $generated@@542)) $generated@@59))
 :pattern ( ($generated@@475 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@185) (= (type $generated@@544) $generated@@185)) (= ($generated@@306 ($generated@@275 $generated@@543 $generated@@544)) $generated@@64))
 :pattern ( ($generated@@275 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@76)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@76) (= (type $generated@@548) $generated@@76)) (= ($generated@@545 ($generated@@175 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@175 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@76)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@76) (= (type $generated@@552) $generated@@76)) (= ($generated@@549 ($generated@@175 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@175 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@185) (= (type $generated@@554) $generated@@185)) (= ($generated@@183 ($generated@@275 $generated@@553 $generated@@554)) $generated@@553))
 :pattern ( ($generated@@275 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@185) (= (type $generated@@556) $generated@@185)) (= ($generated@@184 ($generated@@275 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@275 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@94) ($generated@@163 $generated@@557 $generated@@153))
 :pattern ( ($generated@@163 $generated@@557 $generated@@153))
)))
(assert  (and (forall (($generated@@560 T@U) ) (! (= (type ($generated@@558 $generated@@560)) $generated@@76)
 :pattern ( ($generated@@558 $generated@@560))
)) (forall (($generated@@561 T@U) ($generated@@562 Int) ) (! (let (($generated@@563 ($generated@@315 (type $generated@@561))))
(= (type ($generated@@559 $generated@@561 $generated@@562)) $generated@@563))
 :pattern ( ($generated@@559 $generated@@561 $generated@@562))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@314 $generated@@185)) (= (type $generated@@565) $generated@@76)) (= (type $generated@@566) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@564 ($generated@@558 $generated@@565) $generated@@566) (forall (($generated@@567 Int) ) (!  (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@313 $generated@@564))) ($generated@@300 ($generated@@559 $generated@@564 $generated@@567) $generated@@565 $generated@@566))
 :pattern ( ($generated@@559 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@91 $generated@@564 ($generated@@558 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@92 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@92 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@76)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@76) (= ($generated@@570 ($generated@@285 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@285 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@76) (= ($generated@@87 ($generated@@285 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@76)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@76) (= ($generated@@574 ($generated@@290 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@290 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@76) (= ($generated@@87 ($generated@@290 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@76)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@76) (= ($generated@@578 ($generated@@190 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@190 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@76) (= ($generated@@87 ($generated@@190 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@76)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@76) (= ($generated@@582 ($generated@@558 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@558 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@76) (= ($generated@@87 ($generated@@558 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@558 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(= ($generated@@395 $generated@@587 ($generated@@257 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@257 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@345 $generated@@185 $generated@@185)) (= (type $generated@@589) $generated@@76)) (= (type $generated@@590) $generated@@76)) (= ($generated@@163 $generated@@588 ($generated@@467 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@343 $generated@@588) $generated@@591))) (and ($generated@@276 ($generated@@98 ($generated@@442 $generated@@588) $generated@@591) $generated@@590) ($generated@@276 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@98 ($generated@@442 $generated@@588) $generated@@591))
 :pattern ( ($generated@@98 ($generated@@343 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@163 $generated@@588 ($generated@@467 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@363 $generated@@185 $generated@@185)) (= (type $generated@@593) $generated@@76)) (= (type $generated@@594) $generated@@76)) (= ($generated@@163 $generated@@592 ($generated@@475 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@185) ($generated@@0 ($generated@@98 ($generated@@361 $generated@@592) $generated@@595))) (and ($generated@@276 ($generated@@98 ($generated@@450 $generated@@592) $generated@@595) $generated@@594) ($generated@@276 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@98 ($generated@@450 $generated@@592) $generated@@595))
 :pattern ( ($generated@@98 ($generated@@361 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@163 $generated@@592 ($generated@@475 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@185) (= (type $generated@@599) $generated@@185)) (< ($generated@@596 $generated@@598) ($generated@@597 ($generated@@275 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@275 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@185) (= (type $generated@@601) $generated@@185)) (< ($generated@@596 $generated@@601) ($generated@@597 ($generated@@275 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@275 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@185) (= (type $generated@@603) $generated@@76)) (= (type $generated@@604) $generated@@76)) ($generated@@276 $generated@@602 ($generated@@467 $generated@@603 $generated@@604))) (and (= ($generated@@257 ($generated@@395 ($generated@@345 $generated@@185 $generated@@185) $generated@@602)) $generated@@602) ($generated@@163 ($generated@@395 ($generated@@345 $generated@@185 $generated@@185) $generated@@602) ($generated@@467 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@276 $generated@@602 ($generated@@467 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@185) (= (type $generated@@606) $generated@@76)) (= (type $generated@@607) $generated@@76)) ($generated@@276 $generated@@605 ($generated@@475 $generated@@606 $generated@@607))) (and (= ($generated@@257 ($generated@@395 ($generated@@363 $generated@@185 $generated@@185) $generated@@605)) $generated@@605) ($generated@@163 ($generated@@395 ($generated@@363 $generated@@185 $generated@@185) $generated@@605) ($generated@@475 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@276 $generated@@605 ($generated@@475 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@76) (= (type $generated@@609) $generated@@76)) (= (type $generated@@610) $generated@@185)) ($generated@@276 $generated@@610 ($generated@@175 $generated@@608 $generated@@609))) (and (= ($generated@@257 ($generated@@395 $generated@@176 $generated@@610)) $generated@@610) ($generated@@163 ($generated@@395 $generated@@176 $generated@@610) ($generated@@175 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@276 $generated@@610 ($generated@@175 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
 (not ($generated@@0 ($generated@@98 ($generated@@486 $generated@@612) $generated@@611))))
 :pattern ( (let (($generated@@612 (type $generated@@611)))
($generated@@98 ($generated@@486 $generated@@612) $generated@@611)))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@83)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@76) (= (type $generated@@616) $generated@@76)) (and (= ($generated@@87 ($generated@@175 $generated@@615 $generated@@616)) $generated@@65) (= ($generated@@613 ($generated@@175 $generated@@615 $generated@@616)) $generated@@70)))
 :pattern ( ($generated@@175 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 Int) ($generated@@618 Int) ) (! (= ($generated@@258 $generated@@617 $generated@@618) (* $generated@@617 $generated@@618))
 :pattern ( ($generated@@258 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@176) (= ($generated@@596 ($generated@@257 $generated@@619)) ($generated@@597 $generated@@619)))
 :pattern ( ($generated@@596 ($generated@@257 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@185) ($generated@@276 $generated@@620 ($generated@@92 0))) (and (= ($generated@@257 ($generated@@395 $generated@@2 $generated@@620)) $generated@@620) ($generated@@163 ($generated@@395 ($generated@@93 $generated@@185 $generated@@4) $generated@@620) ($generated@@92 0))))
 :pattern ( ($generated@@276 $generated@@620 ($generated@@92 0)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@185) (= (type $generated@@622) $generated@@76)) ($generated@@276 $generated@@621 ($generated@@285 $generated@@622))) (and (= ($generated@@257 ($generated@@395 ($generated@@93 $generated@@185 $generated@@4) $generated@@621)) $generated@@621) ($generated@@163 ($generated@@395 ($generated@@93 $generated@@185 $generated@@4) $generated@@621) ($generated@@285 $generated@@622))))
 :pattern ( ($generated@@276 $generated@@621 ($generated@@285 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@185) (= (type $generated@@624) $generated@@76)) ($generated@@276 $generated@@623 ($generated@@290 $generated@@624))) (and (= ($generated@@257 ($generated@@395 ($generated@@93 $generated@@185 $generated@@4) $generated@@623)) $generated@@623) ($generated@@163 ($generated@@395 ($generated@@93 $generated@@185 $generated@@4) $generated@@623) ($generated@@290 $generated@@624))))
 :pattern ( ($generated@@276 $generated@@623 ($generated@@290 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@185) (= (type $generated@@626) $generated@@76)) ($generated@@276 $generated@@625 ($generated@@190 $generated@@626))) (and (= ($generated@@257 ($generated@@395 ($generated@@93 $generated@@185 $generated@@2) $generated@@625)) $generated@@625) ($generated@@163 ($generated@@395 ($generated@@93 $generated@@185 $generated@@2) $generated@@625) ($generated@@190 $generated@@626))))
 :pattern ( ($generated@@276 $generated@@625 ($generated@@190 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@185) (= (type $generated@@628) $generated@@76)) ($generated@@276 $generated@@627 ($generated@@558 $generated@@628))) (and (= ($generated@@257 ($generated@@395 ($generated@@314 $generated@@185) $generated@@627)) $generated@@627) ($generated@@163 ($generated@@395 ($generated@@314 $generated@@185) $generated@@627) ($generated@@558 $generated@@628))))
 :pattern ( ($generated@@276 $generated@@627 ($generated@@558 $generated@@628)))
)))
(assert (= ($generated@@87 $generated@@153) $generated@@62))
(assert (= ($generated@@613 $generated@@153) $generated@@69))
(assert (= ($generated@@87 $generated@@263) $generated@@63))
(assert (= ($generated@@613 $generated@@263) $generated@@69))
(assert (= ($generated@@87 $generated@@157) $generated@@67))
(assert (= ($generated@@613 $generated@@157) $generated@@71))
(assert (= ($generated@@87 $generated@@255) $generated@@68))
(assert (= ($generated@@613 $generated@@255) $generated@@71))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@93 $generated@@185 $generated@@2)) (= (type $generated@@630) $generated@@76)) (= (type $generated@@631) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@629 ($generated@@190 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@185) (< 0 ($generated ($generated@@98 $generated@@629 $generated@@632)))) ($generated@@300 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@98 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@91 $generated@@629 ($generated@@190 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@176) (= (type $generated@@634) $generated@@76)) (= (type $generated@@635) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@161 $generated@@635) (and ($generated@@174 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@76) ($generated@@91 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@91 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@300 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@300 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@176) (= (type $generated@@638) $generated@@76)) (= (type $generated@@639) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@161 $generated@@639) (and ($generated@@174 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@76) ($generated@@91 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@91 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@300 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@300 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@642) $generated@@94)) (and ($generated@@161 $generated@@641) (and (not (= $generated@@642 $generated@@154)) (= ($generated@@162 $generated@@642) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@641 $generated@@642) $generated@@256) ($generated@@285 $generated@@263)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@641 $generated@@642) $generated@@256))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@185) (= (type $generated@@644) $generated@@185)) (= ($generated@@275 ($generated@@296 $generated@@643) ($generated@@296 $generated@@644)) ($generated@@296 ($generated@@275 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@275 ($generated@@296 $generated@@643) ($generated@@296 $generated@@644)))
)))
(assert (forall (($generated@@645 Int) ) (! (= ($generated@@257 ($generated@@8 ($generated@@259 $generated@@645))) ($generated@@296 ($generated@@257 ($generated@@8 $generated@@645))))
 :pattern ( ($generated@@257 ($generated@@8 ($generated@@259 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ) (! (= ($generated@@257 ($generated@@296 $generated@@646)) ($generated@@296 ($generated@@257 $generated@@646)))
 :pattern ( ($generated@@257 ($generated@@296 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@315 (type $generated@@647))))
 (=> (and (= (type $generated@@647) ($generated@@314 $generated@@648)) (= ($generated@@313 $generated@@647) 0)) (= $generated@@647 ($generated@@312 $generated@@648))))
 :pattern ( ($generated@@313 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@650)))
 (=> (and (and (= (type $generated@@649) ($generated@@93 $generated@@652 $generated@@2)) (= (type $generated@@651) $generated@@2)) (<= 0 ($generated $generated@@651))) (= ($generated@@337 ($generated@@99 $generated@@649 $generated@@650 $generated@@651)) (+ (- ($generated@@337 $generated@@649) ($generated ($generated@@98 $generated@@649 $generated@@650))) ($generated $generated@@651)))))
 :pattern ( ($generated@@337 ($generated@@99 $generated@@649 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@654) $generated@@2)) ($generated@@91 $generated@@654 $generated@@46 $generated@@653))
 :pattern ( ($generated@@91 $generated@@654 $generated@@46 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@656) $generated@@3)) ($generated@@91 $generated@@656 $generated@@47 $generated@@655))
 :pattern ( ($generated@@91 $generated@@656 $generated@@47 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@658) $generated@@4)) ($generated@@91 $generated@@658 $generated@@44 $generated@@657))
 :pattern ( ($generated@@91 $generated@@658 $generated@@44 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@660) $generated@@515)) ($generated@@91 $generated@@660 $generated@@45 $generated@@659))
 :pattern ( ($generated@@91 $generated@@660 $generated@@45 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@662) $generated@@185)) ($generated@@91 $generated@@662 $generated@@48 $generated@@661))
 :pattern ( ($generated@@91 $generated@@662 $generated@@48 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@314 $generated@@185)) (= (type $generated@@664) $generated@@76)) (= ($generated@@163 $generated@@663 ($generated@@558 $generated@@664)) (forall (($generated@@665 Int) ) (!  (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@313 $generated@@663))) ($generated@@276 ($generated@@559 $generated@@663 $generated@@665) $generated@@664))
 :pattern ( ($generated@@559 $generated@@663 $generated@@665))
))))
 :pattern ( ($generated@@163 $generated@@663 ($generated@@558 $generated@@664)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 Int) ) (!  (=> (= (type $generated@@667) ($generated@@314 $generated@@185)) (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@313 $generated@@667))) (< ($generated@@597 ($generated@@395 $generated@@176 ($generated@@559 $generated@@667 $generated@@668))) ($generated@@666 $generated@@667))))
 :pattern ( ($generated@@597 ($generated@@395 $generated@@176 ($generated@@559 $generated@@667 $generated@@668))))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@345 $generated@@185 $generated@@185)) (= (type $generated@@670) $generated@@76)) (= (type $generated@@671) $generated@@76)) ($generated@@163 $generated@@669 ($generated@@467 $generated@@670 $generated@@671))) (and (and ($generated@@163 ($generated@@343 $generated@@669) ($generated@@285 $generated@@670)) ($generated@@163 ($generated@@408 $generated@@669) ($generated@@285 $generated@@671))) ($generated@@163 ($generated@@441 $generated@@669) ($generated@@285 ($generated@@175 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@163 $generated@@669 ($generated@@467 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@363 $generated@@185 $generated@@185)) (= (type $generated@@673) $generated@@76)) (= (type $generated@@674) $generated@@76)) ($generated@@163 $generated@@672 ($generated@@475 $generated@@673 $generated@@674))) (and (and ($generated@@163 ($generated@@361 $generated@@672) ($generated@@290 $generated@@673)) ($generated@@163 ($generated@@419 $generated@@672) ($generated@@290 $generated@@674))) ($generated@@163 ($generated@@449 $generated@@672) ($generated@@290 ($generated@@175 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@163 $generated@@672 ($generated@@475 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@2) ($generated@@163 $generated@@675 $generated@@46))
 :pattern ( ($generated@@163 $generated@@675 $generated@@46))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@3) ($generated@@163 $generated@@676 $generated@@47))
 :pattern ( ($generated@@163 $generated@@676 $generated@@47))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@4) ($generated@@163 $generated@@677 $generated@@44))
 :pattern ( ($generated@@163 $generated@@677 $generated@@44))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@515) ($generated@@163 $generated@@678 $generated@@45))
 :pattern ( ($generated@@163 $generated@@678 $generated@@45))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@185) ($generated@@163 $generated@@679 $generated@@48))
 :pattern ( ($generated@@163 $generated@@679 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () T@U)
(assert  (and (and (= (type $generated@@680) ($generated@@198 $generated@@94 $generated@@4)) (= (type $generated@@681) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@683) $generated@@94)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@684  (=> (and (= $generated@@680 ($generated@@197 $generated@@154 $generated@@681 $generated@@60 false)) (= $generated@@682 (- ($generated ($generated@@100 ($generated@@98 $generated@@681 $generated@@683) $generated@@160)) ($generated ($generated@@100 ($generated@@98 $generated@@681 $generated@@683) $generated@@167))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@682 ($generated ($generated@@100 ($generated@@98 $generated@@681 $generated@@683) $generated@@170)))) (=> (= $generated@@682 ($generated ($generated@@100 ($generated@@98 $generated@@681 $generated@@683) $generated@@170))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> false (= $generated@@682 ($generated ($generated@@100 ($generated@@98 $generated@@681 $generated@@683) $generated@@170))))))))))
(let (($generated@@685  (=> (and ($generated@@161 $generated@@681) ($generated@@385 $generated@@681)) (=> (and (and (and (not (= $generated@@683 $generated@@154)) (and ($generated@@163 $generated@@683 $generated@@255) ($generated@@91 $generated@@683 $generated@@255 $generated@@681))) (= 1 $generated@@252)) (and ($generated@@253 $generated@@681 $generated@@683) (= (ControlFlow 0 4) 2))) $generated@@684))))
$generated@@685)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (Int) Int)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@215 (T@U T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@227 (T@T) T@U)
(declare-fun $generated@@228 (T@U) Int)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@251 (T@T) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@257 (T@T T@T) T@U)
(declare-fun $generated@@258 (T@T T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@368 (T@U T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@T) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@416 () T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@459 (T@U Int) T@U)
(declare-fun $generated@@468 (T@U) Int)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@513 (T@U T@U T@U) T@U)
(declare-fun $generated@@514 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@515 (T@T T@T) T@T)
(declare-fun $generated@@516 (T@T) T@T)
(declare-fun $generated@@517 (T@T) T@T)
(declare-fun $generated@@518 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@618 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@209 $generated@@210) $generated@@210)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@211 $generated@@214) $generated@@214)
 :pattern ( ($generated@@211 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@70) (= (type $generated@@217) $generated@@70)) (= (type $generated@@218) $generated@@170)) (= (type $generated@@219) $generated@@170)) (= (type $generated@@220) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@220)) (= ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220)  (and ($generated@@215 $generated@@218 $generated@@216 $generated@@220) ($generated@@215 $generated@@219 $generated@@217 $generated@@220))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@75)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@161) (= ($generated@@159 $generated@@223) (= ($generated@@221 $generated@@223) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@161) ($generated@@159 $generated@@224)) (exists (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (and (= (type $generated@@225) $generated@@170) (= (type $generated@@226) $generated@@170)) (= $generated@@224 ($generated@@184 $generated@@225 $generated@@226)))
 :no-pattern (type $generated@@225)
 :no-pattern (type $generated@@226)
 :no-pattern ($generated $generated@@225)
 :no-pattern ($generated@@0 $generated@@225)
 :no-pattern ($generated $generated@@226)
 :no-pattern ($generated@@0 $generated@@226)
)))
 :pattern ( ($generated@@159 $generated@@224))
)))
(assert  (and (and (forall (($generated@@231 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@231)) 18)) (forall (($generated@@232 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@229 $generated@@232))
))) (forall (($generated@@233 T@T) ) (! (= (type ($generated@@227 $generated@@233)) ($generated@@229 $generated@@233))
 :pattern ( ($generated@@227 $generated@@233))
))))
(assert (forall (($generated@@234 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@234)) 0)
 :pattern ( ($generated@@227 $generated@@234))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@170)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@70) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239) ($generated@@85 $generated@@237 $generated@@238 $generated@@239)))
 :pattern ( ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@240) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@241) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@242) $generated@@170)) (= (type $generated@@243) $generated@@70)) ($generated@@143 $generated@@240 $generated@@241)) ($generated@@215 $generated@@242 $generated@@243 $generated@@240)) ($generated@@215 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@143 $generated@@240 $generated@@241) ($generated@@215 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@247) $generated@@70)) ($generated@@143 $generated@@244 $generated@@245)) ($generated@@85 $generated@@246 $generated@@247 $generated@@244)) ($generated@@85 $generated@@246 $generated@@247 $generated@@245))
 :pattern ( ($generated@@143 $generated@@244 $generated@@245) ($generated@@85 $generated@@246 $generated@@247 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@249) $generated@@88)) (=> (and (and ($generated@@152 $generated@@248) (and (not (= $generated@@249 $generated@@148)) (= ($generated@@153 $generated@@249) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151) $generated@@46 $generated@@248)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151))
)))
(assert (forall (($generated@@252 T@T) ) (! (= (type ($generated@@251 $generated@@252)) ($generated@@87 $generated@@252 $generated@@2))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@90 (type $generated@@253))))
 (=> (= (type $generated@@253) ($generated@@87 $generated@@254 $generated@@2)) (and (= (= ($generated@@250 $generated@@253) 0) (= $generated@@253 ($generated@@251 $generated@@254))) (=> (not (= ($generated@@250 $generated@@253) 0)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@254) (< 0 ($generated ($generated@@92 $generated@@253 $generated@@255))))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))))
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (= ($generated@@1 ($generated@@258 $generated@@261 $generated@@262)) 19)) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@263 $generated@@264)) $generated@@263)
 :pattern ( ($generated@@258 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@258 $generated@@265 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@258 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@259 (type $generated@@267))))
(= (type ($generated@@256 $generated@@267)) ($generated@@87 $generated@@268 $generated@@4)))
 :pattern ( ($generated@@256 $generated@@267))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= (type ($generated@@257 $generated@@269 $generated@@270)) ($generated@@258 $generated@@269 $generated@@270))
 :pattern ( ($generated@@257 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@T) ) (! (let (($generated@@273 (type $generated@@271)))
 (not ($generated@@0 ($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271))))
 :pattern ( (let (($generated@@273 (type $generated@@271)))
($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271)))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 20)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@87 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@292 $generated@@293 $generated@@294)) (and ($generated@@143 $generated@@293 $generated@@294) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@73 (type $generated@@296))))
 (=> (and (and (= (type $generated@@295) $generated@@88) (= (type $generated@@296) ($generated@@72 $generated@@297))) (not ($generated@@196 $generated@@296))) (= ($generated@@94 ($generated@@92 $generated@@293 $generated@@295) $generated@@296) ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))
))))
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@90 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@87 $generated@@299 $generated@@2)) (= ($generated@@176 $generated@@298) (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@299) (and (<= 0 ($generated ($generated@@92 $generated@@298 $generated@@300))) (<= ($generated ($generated@@92 $generated@@298 $generated@@300)) ($generated@@250 $generated@@298))))
 :pattern ( ($generated@@92 $generated@@298 $generated@@300))
)))))
 :pattern ( ($generated@@176 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@170) ($generated@@185 $generated@@304 $generated@@147)) (and (= ($generated@@235 ($generated@@301 $generated@@88 $generated@@304)) $generated@@304) ($generated@@154 ($generated@@301 $generated@@88 $generated@@304) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@304 $generated@@147))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@170) ($generated@@185 $generated@@305 $generated@@181)) (and (= ($generated@@235 ($generated@@301 $generated@@88 $generated@@305)) $generated@@305) ($generated@@154 ($generated@@301 $generated@@88 $generated@@305) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@305 $generated@@181))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@88) (= ($generated@@154 $generated@@306 $generated@@181)  (and ($generated@@154 $generated@@306 $generated@@147) (not (= $generated@@306 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@306 $generated@@181))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@260 (type $generated@@307))))
(let (($generated@@309 ($generated@@259 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@258 $generated@@309 $generated@@308)) (or (= $generated@@307 ($generated@@257 $generated@@309 $generated@@308)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@307) $generated@@310)))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@256 $generated@@307))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@260 (type $generated@@312))))
(= (type ($generated@@311 $generated@@312)) ($generated@@87 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@260 (type $generated@@314))))
(let (($generated@@316 ($generated@@259 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@258 $generated@@316 $generated@@315)) (or (= $generated@@314 ($generated@@257 $generated@@316 $generated@@315)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@315) ($generated@@0 ($generated@@92 ($generated@@311 $generated@@314) $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@278 (type $generated@@318))))
(let (($generated@@320 ($generated@@277 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@276 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@275 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@274 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@278 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@87 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@278 (type $generated@@325))))
(let (($generated@@327 ($generated@@277 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@276 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@275 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@92 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@330) $generated@@70)) (= ($generated@@154 $generated@@329 ($generated@@175 $generated@@330)) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@329 $generated@@331)))) ($generated@@185 $generated@@331 $generated@@330))
 :pattern ( ($generated@@92 $generated@@329 $generated@@331))
))))
 :pattern ( ($generated@@154 $generated@@329 ($generated@@175 $generated@@330)))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@332) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@333) $generated@@70)) (= (type $generated@@334) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@332 ($generated@@199 $generated@@333) $generated@@334) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@170) ($generated@@0 ($generated@@92 $generated@@332 $generated@@335))) ($generated@@215 $generated@@335 $generated@@333 $generated@@334))
 :pattern ( ($generated@@92 $generated@@332 $generated@@335))
))))
 :pattern ( ($generated@@85 $generated@@332 ($generated@@199 $generated@@333) $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@337) $generated@@70)) (= (type $generated@@338) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@170) ($generated@@0 ($generated@@92 $generated@@336 $generated@@339))) ($generated@@215 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@92 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 (type $generated@@340)))
(= ($generated ($generated@@92 ($generated@@251 $generated@@341) $generated@@340)) 0))
 :pattern ( (let (($generated@@341 (type $generated@@340)))
($generated@@92 ($generated@@251 $generated@@341) $generated@@340)))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@260 (type $generated@@345))))
(let (($generated@@347 ($generated@@259 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345)) ($generated@@87 $generated@@347 $generated@@346))))
 :pattern ( ($generated@@343 $generated@@345))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@349) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@342 $generated@@348) $generated@@349))  (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@348) ($generated@@168 ($generated@@301 $generated@@161 $generated@@349)))) (= ($generated@@92 ($generated@@343 $generated@@348) ($generated@@168 ($generated@@301 $generated@@161 $generated@@349))) ($generated@@169 ($generated@@301 $generated@@161 $generated@@349))))))
 :pattern ( ($generated@@92 ($generated@@342 $generated@@348) $generated@@349))
)))
(assert  (and (forall (($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@352)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@350 $generated@@352))
)) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@278 (type $generated@@353))))
(let (($generated@@355 ($generated@@277 (type $generated@@353))))
(= (type ($generated@@351 $generated@@353)) ($generated@@87 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@351 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@357) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@350 $generated@@356) $generated@@357))  (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@356) ($generated@@168 ($generated@@301 $generated@@161 $generated@@357)))) (= ($generated@@92 ($generated@@351 $generated@@356) ($generated@@168 ($generated@@301 $generated@@161 $generated@@357))) ($generated@@169 ($generated@@301 $generated@@161 $generated@@357))))))
 :pattern ( ($generated@@92 ($generated@@350 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(let (($generated@@361 ($generated@@259 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@258 $generated@@361 $generated@@360)) (= ($generated@@0 ($generated@@92 ($generated@@311 $generated@@358) $generated@@359)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@358) $generated@@362)) (= $generated@@359 ($generated@@92 ($generated@@343 $generated@@358) $generated@@362))))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@358) $generated@@362))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@358) $generated@@362))
))))))
 :pattern ( ($generated@@92 ($generated@@311 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@277 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@276 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@92 ($generated@@322 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@92 ($generated@@351 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@363) $generated@@367))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@92 ($generated@@322 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@70)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (= (type $generated@@371) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@372) $generated@@70)) (= (type $generated@@373) $generated@@70)) (= (type $generated@@374) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))) (and ($generated@@215 ($generated@@92 ($generated@@343 $generated@@371) $generated@@375) $generated@@373 $generated@@374) ($generated@@215 $generated@@375 $generated@@372 $generated@@374)))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@371) $generated@@375))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))
))))
 :pattern ( ($generated@@85 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@377 $generated@@378)) $generated@@70)
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@379) $generated@@383))) (and ($generated@@215 ($generated@@92 ($generated@@351 $generated@@379) $generated@@383) $generated@@381 $generated@@382) ($generated@@215 $generated@@383 $generated@@380 $generated@@382)))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@379) $generated@@383))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@379) $generated@@383))
))))
 :pattern ( ($generated@@85 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@385) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@386) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@384 $generated@@386))) (and ($generated@@143 $generated@@384 $generated@@385) ($generated@@143 $generated@@385 $generated@@386))) ($generated@@143 $generated@@384 $generated@@386))
 :pattern ( ($generated@@143 $generated@@384 $generated@@385) ($generated@@143 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@T) ) (! (= (type ($generated@@387 $generated@@388)) ($generated@@87 $generated@@388 $generated@@4))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@278 (type $generated@@389))))
(let (($generated@@391 ($generated@@277 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@276 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@275 $generated@@391 $generated@@390)) (= ($generated@@274 $generated@@389) ($generated@@387 $generated@@391))))))
 :pattern ( ($generated@@274 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@278 (type $generated@@392))))
(let (($generated@@394 ($generated@@277 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@276 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@275 $generated@@394 $generated@@393)) (= ($generated@@322 $generated@@392) ($generated@@387 $generated@@393))))))
 :pattern ( ($generated@@322 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@278 (type $generated@@395))))
(let (($generated@@397 ($generated@@277 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@276 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@275 $generated@@397 $generated@@396)) (= ($generated@@350 $generated@@395) ($generated@@387 $generated@@170))))))
 :pattern ( ($generated@@350 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@260 (type $generated@@398))))
(let (($generated@@400 ($generated@@259 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@258 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@257 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (and (and (= (type $generated@@401) $generated@@170) (= (type $generated@@402) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@398) ($generated@@235 ($generated@@184 $generated@@401 $generated@@402)))))
 :no-pattern (type $generated@@401)
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@342 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@278 (type $generated@@403))))
(let (($generated@@405 ($generated@@277 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@276 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@275 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (and (and (= (type $generated@@406) $generated@@170) (= (type $generated@@407) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@350 $generated@@403) ($generated@@235 ($generated@@184 $generated@@406 $generated@@407)))))
 :no-pattern (type $generated@@406)
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@350 $generated@@403))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@76)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@T) ) (!  (=> (and (= (type $generated@@410) $generated@@76) (= (type $generated@@411) $generated@@74)) (and (= ($generated@@408 ($generated@@192 $generated@@412 $generated@@410 $generated@@411)) $generated@@410) (= ($generated@@83 ($generated@@192 $generated@@412 $generated@@410 $generated@@411)) $generated@@411)))
 :pattern ( ($generated@@192 $generated@@412 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@46)) (and (= ($generated@@235 ($generated@@301 $generated@@2 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@301 $generated@@2 $generated@@413) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@46))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@170) ($generated@@185 $generated@@414 $generated@@47)) (and (= ($generated@@235 ($generated@@301 $generated@@3 $generated@@414)) $generated@@414) ($generated@@154 ($generated@@301 $generated@@3 $generated@@414) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@414 $generated@@47))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@44)) (and (= ($generated@@235 ($generated@@301 $generated@@4 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@301 $generated@@4 $generated@@415) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@416) 21))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@170) ($generated@@185 $generated@@417 $generated@@45)) (and (= ($generated@@235 ($generated@@301 $generated@@416 $generated@@417)) $generated@@417) ($generated@@154 ($generated@@301 $generated@@416 $generated@@417) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@417 $generated@@45))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@70) (= ($generated@@185 ($generated@@235 $generated@@418) $generated@@419) ($generated@@154 $generated@@418 $generated@@419)))
 :pattern ( ($generated@@185 ($generated@@235 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@90 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@87 $generated@@421 $generated@@2)) (<= 0 ($generated@@250 $generated@@420))))
 :pattern ( ($generated@@250 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@230 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@229 $generated@@423)) (<= 0 ($generated@@228 $generated@@422))))
 :pattern ( ($generated@@228 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@70) (= (type $generated@@427) $generated@@70)) (= ($generated@@424 ($generated@@368 $generated@@426 $generated@@427)) $generated@@426))
 :pattern ( ($generated@@368 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@428 ($generated@@368 $generated@@430 $generated@@431)) $generated@@431))
 :pattern ( ($generated@@368 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@70) (= (type $generated@@433) $generated@@70)) (= ($generated@@81 ($generated@@368 $generated@@432 $generated@@433)) $generated@@58))
 :pattern ( ($generated@@368 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@70)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@70) (= (type $generated@@437) $generated@@70)) (= ($generated@@434 ($generated@@376 $generated@@436 $generated@@437)) $generated@@436))
 :pattern ( ($generated@@376 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@438 ($generated@@376 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@376 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@70) (= (type $generated@@443) $generated@@70)) (= ($generated@@81 ($generated@@376 $generated@@442 $generated@@443)) $generated@@59))
 :pattern ( ($generated@@376 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@170) (= (type $generated@@445) $generated@@170)) (= ($generated@@221 ($generated@@184 $generated@@444 $generated@@445)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@70)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@70) (= (type $generated@@449) $generated@@70)) (= ($generated@@446 ($generated@@160 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@160 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) $generated@@70)) (= ($generated@@450 ($generated@@160 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@160 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@170) (= (type $generated@@457) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@184 $generated@@456 $generated@@457))
)))
(assert  (and (forall (($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@460))
)) (forall (($generated@@461 T@U) ($generated@@462 Int) ) (! (let (($generated@@463 ($generated@@230 (type $generated@@461))))
(= (type ($generated@@459 $generated@@461 $generated@@462)) $generated@@463))
 :pattern ( ($generated@@459 $generated@@461 $generated@@462))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@229 $generated@@170)) (= (type $generated@@465) $generated@@70)) (= (type $generated@@466) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@464 ($generated@@458 $generated@@465) $generated@@466) (forall (($generated@@467 Int) ) (!  (=> (and (<= 0 $generated@@467) (< $generated@@467 ($generated@@228 $generated@@464))) ($generated@@215 ($generated@@459 $generated@@464 $generated@@467) $generated@@465 $generated@@466))
 :pattern ( ($generated@@459 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@85 $generated@@464 ($generated@@458 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@469 Int) ) (! (= ($generated@@468 ($generated@@86 $generated@@469)) $generated@@469)
 :pattern ( ($generated@@86 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@70) (= ($generated@@470 ($generated@@199 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@199 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@473)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@70) (= ($generated@@474 ($generated@@204 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@204 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@477)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@478 ($generated@@175 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@175 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@481)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@70) (= ($generated@@482 ($generated@@458 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@458 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@70) (= ($generated@@81 ($generated@@458 $generated@@485)) $generated@@57))
 :pattern ( ($generated@@458 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(= ($generated@@301 $generated@@487 ($generated@@235 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@235 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@489) $generated@@70)) (= (type $generated@@490) $generated@@70)) (= ($generated@@154 $generated@@488 ($generated@@368 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@488) $generated@@491))) (and ($generated@@185 ($generated@@92 ($generated@@343 $generated@@488) $generated@@491) $generated@@490) ($generated@@185 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@488) $generated@@491))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@154 $generated@@488 ($generated@@368 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@493) $generated@@70)) (= (type $generated@@494) $generated@@70)) (= ($generated@@154 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@492) $generated@@495))) (and ($generated@@185 ($generated@@92 ($generated@@351 $generated@@492) $generated@@495) $generated@@494) ($generated@@185 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@492) $generated@@495))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@154 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@496 $generated@@498) ($generated@@497 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@170)) (< ($generated@@496 $generated@@501) ($generated@@497 ($generated@@184 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@184 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@170) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) $generated@@70)) ($generated@@185 $generated@@502 ($generated@@368 $generated@@503 $generated@@504))) (and (= ($generated@@235 ($generated@@301 ($generated@@258 $generated@@170 $generated@@170) $generated@@502)) $generated@@502) ($generated@@154 ($generated@@301 ($generated@@258 $generated@@170 $generated@@170) $generated@@502) ($generated@@368 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@185 $generated@@502 ($generated@@368 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@170) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) $generated@@70)) ($generated@@185 $generated@@505 ($generated@@376 $generated@@506 $generated@@507))) (and (= ($generated@@235 ($generated@@301 ($generated@@276 $generated@@170 $generated@@170) $generated@@505)) $generated@@505) ($generated@@154 ($generated@@301 ($generated@@276 $generated@@170 $generated@@170) $generated@@505) ($generated@@376 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@505 ($generated@@376 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= (type $generated@@510) $generated@@170)) ($generated@@185 $generated@@510 ($generated@@160 $generated@@508 $generated@@509))) (and (= ($generated@@235 ($generated@@301 $generated@@161 $generated@@510)) $generated@@510) ($generated@@154 ($generated@@301 $generated@@161 $generated@@510) ($generated@@160 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@185 $generated@@510 ($generated@@160 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
 (not ($generated@@0 ($generated@@92 ($generated@@387 $generated@@512) $generated@@511))))
 :pattern ( (let (($generated@@512 (type $generated@@511)))
($generated@@92 ($generated@@387 $generated@@512) $generated@@511)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (= ($generated@@1 ($generated@@515 $generated@@519 $generated@@520)) 22)) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@516 ($generated@@515 $generated@@521 $generated@@522)) $generated@@521)
 :pattern ( ($generated@@515 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@T) ($generated@@524 T@T) ) (! (= ($generated@@517 ($generated@@515 $generated@@523 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@515 $generated@@523 $generated@@524))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@517 (type $generated@@525))))
(= (type ($generated@@513 $generated@@525 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@513 $generated@@525 $generated@@526 $generated@@527))
))) (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(let (($generated@@534 (type $generated@@530)))
(= (type ($generated@@518 $generated@@529 $generated@@530 $generated@@531 $generated@@532)) ($generated@@515 $generated@@534 $generated@@533))))
 :pattern ( ($generated@@518 $generated@@529 $generated@@530 $generated@@531 $generated@@532))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@517 (type $generated@@535))))
 (=> (= (type $generated@@538) $generated@@539) (= ($generated@@513 ($generated@@518 $generated@@535 $generated@@536 $generated@@537 $generated@@538) $generated@@536 $generated@@537) $generated@@538)))
 :weight 0
))) (and (and (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (or (= $generated@@542 $generated@@544) (= ($generated@@513 ($generated@@518 $generated@@541 $generated@@542 $generated@@543 $generated@@540) $generated@@544 $generated@@545) ($generated@@513 $generated@@541 $generated@@544 $generated@@545)))
 :weight 0
)) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@549 $generated@@551) (= ($generated@@513 ($generated@@518 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@513 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
))) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or true (= ($generated@@513 ($generated@@518 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@513 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
)))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (= (type ($generated@@514 $generated@@558 $generated@@559 $generated@@560 $generated@@561)) ($generated@@515 $generated@@88 $generated@@4))
 :pattern ( ($generated@@514 $generated@@558 $generated@@559 $generated@@560 $generated@@561))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@73 (type $generated@@567))))
 (=> (and (and (and (and (and (= (type $generated@@562) $generated@@88) (= (type $generated@@563) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@564) ($generated@@72 $generated@@4))) (= (type $generated@@565) $generated@@88)) (= (type $generated@@566) $generated@@88)) (= (type $generated@@567) ($generated@@72 $generated@@568))) (= ($generated@@0 ($generated@@513 ($generated@@514 $generated@@562 $generated@@563 $generated@@564 $generated@@565) $generated@@566 $generated@@567))  (=> (and (not (= $generated@@566 $generated@@562)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@563 $generated@@566) $generated@@564))) (= $generated@@566 $generated@@565)))))
 :pattern ( ($generated@@513 ($generated@@514 $generated@@562 $generated@@563 $generated@@564 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@70) (= (type $generated@@572) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@160 $generated@@571 $generated@@572)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@161) (= ($generated@@496 ($generated@@235 $generated@@573)) ($generated@@497 $generated@@573)))
 :pattern ( ($generated@@496 ($generated@@235 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@170) ($generated@@185 $generated@@574 ($generated@@86 0))) (and (= ($generated@@235 ($generated@@301 $generated@@2 $generated@@574)) $generated@@574) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@574) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@574 ($generated@@86 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@185 $generated@@575 ($generated@@199 $generated@@576))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@199 $generated@@576))))
 :pattern ( ($generated@@185 $generated@@575 ($generated@@199 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@185 $generated@@577 ($generated@@204 $generated@@578))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@577) ($generated@@204 $generated@@578))))
 :pattern ( ($generated@@185 $generated@@577 ($generated@@204 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@185 $generated@@579 ($generated@@175 $generated@@580))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@2) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@2) $generated@@579) ($generated@@175 $generated@@580))))
 :pattern ( ($generated@@185 $generated@@579 ($generated@@175 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@170) (= (type $generated@@582) $generated@@70)) ($generated@@185 $generated@@581 ($generated@@458 $generated@@582))) (and (= ($generated@@235 ($generated@@301 ($generated@@229 $generated@@170) $generated@@581)) $generated@@581) ($generated@@154 ($generated@@301 ($generated@@229 $generated@@170) $generated@@581) ($generated@@458 $generated@@582))))
 :pattern ( ($generated@@185 $generated@@581 ($generated@@458 $generated@@582)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@569 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@569 $generated@@181) $generated@@68))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@583 ($generated@@175 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@583 $generated@@586)))) ($generated@@215 $generated@@586 $generated@@584 $generated@@585))
 :pattern ( ($generated@@92 $generated@@583 $generated@@586))
))))
 :pattern ( ($generated@@85 $generated@@583 ($generated@@175 $generated@@584) $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@161) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@589) (and ($generated@@159 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@70) ($generated@@85 $generated@@587 ($generated@@160 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 ($generated@@160 $generated@@588 $generated@@590) $generated@@589))
))))) ($generated@@215 ($generated@@168 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@215 ($generated@@168 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@161) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@593) (and ($generated@@159 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@70) ($generated@@85 $generated@@591 ($generated@@160 $generated@@594 $generated@@592) $generated@@593))
 :pattern ( ($generated@@85 $generated@@591 ($generated@@160 $generated@@594 $generated@@592) $generated@@593))
))))) ($generated@@215 ($generated@@169 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@215 ($generated@@169 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@170) (= (type $generated@@596) $generated@@170)) (= ($generated@@184 ($generated@@211 $generated@@595) ($generated@@211 $generated@@596)) ($generated@@211 ($generated@@184 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@184 ($generated@@211 $generated@@595) ($generated@@211 $generated@@596)))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@235 ($generated@@8 ($generated@@209 $generated@@597))) ($generated@@211 ($generated@@235 ($generated@@8 $generated@@597))))
 :pattern ( ($generated@@235 ($generated@@8 ($generated@@209 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@235 ($generated@@211 $generated@@598)) ($generated@@211 ($generated@@235 $generated@@598)))
 :pattern ( ($generated@@235 ($generated@@211 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@230 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@229 $generated@@600)) (= ($generated@@228 $generated@@599) 0)) (= $generated@@599 ($generated@@227 $generated@@600))))
 :pattern ( ($generated@@228 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@87 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@250 ($generated@@93 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@250 $generated@@601) ($generated ($generated@@92 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@250 ($generated@@93 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@606) $generated@@2)) ($generated@@85 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@85 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@608) $generated@@3)) ($generated@@85 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@85 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@610) $generated@@4)) ($generated@@85 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@85 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@612) $generated@@416)) ($generated@@85 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@85 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@614) $generated@@170)) ($generated@@85 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@85 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@229 $generated@@170)) (= (type $generated@@616) $generated@@70)) (= ($generated@@154 $generated@@615 ($generated@@458 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@228 $generated@@615))) ($generated@@185 ($generated@@459 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@459 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@154 $generated@@615 ($generated@@458 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ) (!  (=> (= (type $generated@@619) ($generated@@229 $generated@@170)) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@228 $generated@@619))) (< ($generated@@497 ($generated@@301 $generated@@161 ($generated@@459 $generated@@619 $generated@@620))) ($generated@@618 $generated@@619))))
 :pattern ( ($generated@@497 ($generated@@301 $generated@@161 ($generated@@459 $generated@@619 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@154 $generated@@621 ($generated@@368 $generated@@622 $generated@@623))) (and (and ($generated@@154 ($generated@@256 $generated@@621) ($generated@@199 $generated@@622)) ($generated@@154 ($generated@@311 $generated@@621) ($generated@@199 $generated@@623))) ($generated@@154 ($generated@@342 $generated@@621) ($generated@@199 ($generated@@160 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@154 $generated@@621 ($generated@@368 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@625) $generated@@70)) (= (type $generated@@626) $generated@@70)) ($generated@@154 $generated@@624 ($generated@@376 $generated@@625 $generated@@626))) (and (and ($generated@@154 ($generated@@274 $generated@@624) ($generated@@204 $generated@@625)) ($generated@@154 ($generated@@322 $generated@@624) ($generated@@204 $generated@@626))) ($generated@@154 ($generated@@350 $generated@@624) ($generated@@204 ($generated@@160 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@154 $generated@@624 ($generated@@376 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) ($generated@@154 $generated@@627 $generated@@46))
 :pattern ( ($generated@@154 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@3) ($generated@@154 $generated@@628 $generated@@47))
 :pattern ( ($generated@@154 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@4) ($generated@@154 $generated@@629 $generated@@44))
 :pattern ( ($generated@@154 $generated@@629 $generated@@44))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@416) ($generated@@154 $generated@@630 $generated@@45))
 :pattern ( ($generated@@154 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@170) ($generated@@154 $generated@@631 $generated@@48))
 :pattern ( ($generated@@154 $generated@@631 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () Int)
(assert  (and (and (and (= (type $generated@@632) ($generated@@515 $generated@@88 $generated@@4)) (= (type $generated@@633) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@634) $generated@@88)) (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@638  (=> (= $generated@@632 ($generated@@514 $generated@@148 $generated@@633 $generated@@60 $generated@@634)) (=> (and (and (and ($generated@@152 $generated@@635) ($generated@@636 $generated@@635)) (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@88) (=> (and (not (= $generated@@639 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@633 $generated@@639) $generated@@60))) (or (= ($generated@@92 $generated@@635 $generated@@639) ($generated@@92 $generated@@633 $generated@@639)) (= $generated@@639 $generated@@634))))
 :pattern ( ($generated@@92 $generated@@635 $generated@@639))
))) (and ($generated@@143 $generated@@633 $generated@@635) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@634 $generated@@148))))))
(let (($generated@@640  (=> (and ($generated@@152 $generated@@633) ($generated@@636 $generated@@633)) (=> (and (and ($generated@@154 $generated@@634 $generated@@181) ($generated@@85 $generated@@634 $generated@@181 $generated@@633)) (and (= 1 $generated@@637) (= (ControlFlow 0 3) 2))) $generated@@638))))
$generated@@640)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (Int) Int)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@215 (T@U T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@227 (T@T) T@U)
(declare-fun $generated@@228 (T@U) Int)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@251 (T@T) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@257 (T@T T@T) T@U)
(declare-fun $generated@@258 (T@T T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@368 (T@U T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@T) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@416 () T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@459 (T@U Int) T@U)
(declare-fun $generated@@468 (T@U) Int)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@513 (T@U T@U T@U) T@U)
(declare-fun $generated@@514 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@515 (T@T T@T) T@T)
(declare-fun $generated@@516 (T@T) T@T)
(declare-fun $generated@@517 (T@T) T@T)
(declare-fun $generated@@518 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@569 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@635 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@209 $generated@@210) $generated@@210)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@211 $generated@@214) $generated@@214)
 :pattern ( ($generated@@211 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@70) (= (type $generated@@217) $generated@@70)) (= (type $generated@@218) $generated@@170)) (= (type $generated@@219) $generated@@170)) (= (type $generated@@220) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@220)) (= ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220)  (and ($generated@@215 $generated@@218 $generated@@216 $generated@@220) ($generated@@215 $generated@@219 $generated@@217 $generated@@220))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@75)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@161) (= ($generated@@159 $generated@@223) (= ($generated@@221 $generated@@223) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@161) ($generated@@159 $generated@@224)) (exists (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (and (= (type $generated@@225) $generated@@170) (= (type $generated@@226) $generated@@170)) (= $generated@@224 ($generated@@184 $generated@@225 $generated@@226)))
 :no-pattern (type $generated@@225)
 :no-pattern (type $generated@@226)
 :no-pattern ($generated $generated@@225)
 :no-pattern ($generated@@0 $generated@@225)
 :no-pattern ($generated $generated@@226)
 :no-pattern ($generated@@0 $generated@@226)
)))
 :pattern ( ($generated@@159 $generated@@224))
)))
(assert  (and (and (forall (($generated@@231 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@231)) 18)) (forall (($generated@@232 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@229 $generated@@232))
))) (forall (($generated@@233 T@T) ) (! (= (type ($generated@@227 $generated@@233)) ($generated@@229 $generated@@233))
 :pattern ( ($generated@@227 $generated@@233))
))))
(assert (forall (($generated@@234 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@234)) 0)
 :pattern ( ($generated@@227 $generated@@234))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@170)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@70) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239) ($generated@@85 $generated@@237 $generated@@238 $generated@@239)))
 :pattern ( ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@240) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@241) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@242) $generated@@170)) (= (type $generated@@243) $generated@@70)) ($generated@@143 $generated@@240 $generated@@241)) ($generated@@215 $generated@@242 $generated@@243 $generated@@240)) ($generated@@215 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@143 $generated@@240 $generated@@241) ($generated@@215 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@247) $generated@@70)) ($generated@@143 $generated@@244 $generated@@245)) ($generated@@85 $generated@@246 $generated@@247 $generated@@244)) ($generated@@85 $generated@@246 $generated@@247 $generated@@245))
 :pattern ( ($generated@@143 $generated@@244 $generated@@245) ($generated@@85 $generated@@246 $generated@@247 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@249) $generated@@88)) (=> (and (and ($generated@@152 $generated@@248) (and (not (= $generated@@249 $generated@@148)) (= ($generated@@153 $generated@@249) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151) $generated@@46 $generated@@248)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151))
)))
(assert (forall (($generated@@252 T@T) ) (! (= (type ($generated@@251 $generated@@252)) ($generated@@87 $generated@@252 $generated@@2))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@90 (type $generated@@253))))
 (=> (= (type $generated@@253) ($generated@@87 $generated@@254 $generated@@2)) (and (= (= ($generated@@250 $generated@@253) 0) (= $generated@@253 ($generated@@251 $generated@@254))) (=> (not (= ($generated@@250 $generated@@253) 0)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@254) (< 0 ($generated ($generated@@92 $generated@@253 $generated@@255))))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))))
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (= ($generated@@1 ($generated@@258 $generated@@261 $generated@@262)) 19)) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@263 $generated@@264)) $generated@@263)
 :pattern ( ($generated@@258 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@258 $generated@@265 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@258 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@259 (type $generated@@267))))
(= (type ($generated@@256 $generated@@267)) ($generated@@87 $generated@@268 $generated@@4)))
 :pattern ( ($generated@@256 $generated@@267))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= (type ($generated@@257 $generated@@269 $generated@@270)) ($generated@@258 $generated@@269 $generated@@270))
 :pattern ( ($generated@@257 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@T) ) (! (let (($generated@@273 (type $generated@@271)))
 (not ($generated@@0 ($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271))))
 :pattern ( (let (($generated@@273 (type $generated@@271)))
($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271)))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 20)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@87 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@292 $generated@@293 $generated@@294)) (and ($generated@@143 $generated@@293 $generated@@294) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@73 (type $generated@@296))))
 (=> (and (and (= (type $generated@@295) $generated@@88) (= (type $generated@@296) ($generated@@72 $generated@@297))) (not ($generated@@196 $generated@@296))) (= ($generated@@94 ($generated@@92 $generated@@293 $generated@@295) $generated@@296) ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))
))))
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@90 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@87 $generated@@299 $generated@@2)) (= ($generated@@176 $generated@@298) (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@299) (and (<= 0 ($generated ($generated@@92 $generated@@298 $generated@@300))) (<= ($generated ($generated@@92 $generated@@298 $generated@@300)) ($generated@@250 $generated@@298))))
 :pattern ( ($generated@@92 $generated@@298 $generated@@300))
)))))
 :pattern ( ($generated@@176 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@170) ($generated@@185 $generated@@304 $generated@@147)) (and (= ($generated@@235 ($generated@@301 $generated@@88 $generated@@304)) $generated@@304) ($generated@@154 ($generated@@301 $generated@@88 $generated@@304) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@304 $generated@@147))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@170) ($generated@@185 $generated@@305 $generated@@181)) (and (= ($generated@@235 ($generated@@301 $generated@@88 $generated@@305)) $generated@@305) ($generated@@154 ($generated@@301 $generated@@88 $generated@@305) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@305 $generated@@181))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@88) (= ($generated@@154 $generated@@306 $generated@@181)  (and ($generated@@154 $generated@@306 $generated@@147) (not (= $generated@@306 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@306 $generated@@181))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@260 (type $generated@@307))))
(let (($generated@@309 ($generated@@259 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@258 $generated@@309 $generated@@308)) (or (= $generated@@307 ($generated@@257 $generated@@309 $generated@@308)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@307) $generated@@310)))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@256 $generated@@307))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@260 (type $generated@@312))))
(= (type ($generated@@311 $generated@@312)) ($generated@@87 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@260 (type $generated@@314))))
(let (($generated@@316 ($generated@@259 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@258 $generated@@316 $generated@@315)) (or (= $generated@@314 ($generated@@257 $generated@@316 $generated@@315)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@315) ($generated@@0 ($generated@@92 ($generated@@311 $generated@@314) $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@278 (type $generated@@318))))
(let (($generated@@320 ($generated@@277 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@276 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@275 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@274 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@278 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@87 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@278 (type $generated@@325))))
(let (($generated@@327 ($generated@@277 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@276 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@275 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@92 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@330) $generated@@70)) (= ($generated@@154 $generated@@329 ($generated@@175 $generated@@330)) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@329 $generated@@331)))) ($generated@@185 $generated@@331 $generated@@330))
 :pattern ( ($generated@@92 $generated@@329 $generated@@331))
))))
 :pattern ( ($generated@@154 $generated@@329 ($generated@@175 $generated@@330)))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@332) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@333) $generated@@70)) (= (type $generated@@334) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@332 ($generated@@199 $generated@@333) $generated@@334) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@170) ($generated@@0 ($generated@@92 $generated@@332 $generated@@335))) ($generated@@215 $generated@@335 $generated@@333 $generated@@334))
 :pattern ( ($generated@@92 $generated@@332 $generated@@335))
))))
 :pattern ( ($generated@@85 $generated@@332 ($generated@@199 $generated@@333) $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@337) $generated@@70)) (= (type $generated@@338) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@170) ($generated@@0 ($generated@@92 $generated@@336 $generated@@339))) ($generated@@215 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@92 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 (type $generated@@340)))
(= ($generated ($generated@@92 ($generated@@251 $generated@@341) $generated@@340)) 0))
 :pattern ( (let (($generated@@341 (type $generated@@340)))
($generated@@92 ($generated@@251 $generated@@341) $generated@@340)))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@260 (type $generated@@345))))
(let (($generated@@347 ($generated@@259 (type $generated@@345))))
(= (type ($generated@@343 $generated@@345)) ($generated@@87 $generated@@347 $generated@@346))))
 :pattern ( ($generated@@343 $generated@@345))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@349) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@342 $generated@@348) $generated@@349))  (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@348) ($generated@@168 ($generated@@301 $generated@@161 $generated@@349)))) (= ($generated@@92 ($generated@@343 $generated@@348) ($generated@@168 ($generated@@301 $generated@@161 $generated@@349))) ($generated@@169 ($generated@@301 $generated@@161 $generated@@349))))))
 :pattern ( ($generated@@92 ($generated@@342 $generated@@348) $generated@@349))
)))
(assert  (and (forall (($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@352)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@350 $generated@@352))
)) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@278 (type $generated@@353))))
(let (($generated@@355 ($generated@@277 (type $generated@@353))))
(= (type ($generated@@351 $generated@@353)) ($generated@@87 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@351 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@357) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@350 $generated@@356) $generated@@357))  (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@356) ($generated@@168 ($generated@@301 $generated@@161 $generated@@357)))) (= ($generated@@92 ($generated@@351 $generated@@356) ($generated@@168 ($generated@@301 $generated@@161 $generated@@357))) ($generated@@169 ($generated@@301 $generated@@161 $generated@@357))))))
 :pattern ( ($generated@@92 ($generated@@350 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(let (($generated@@361 ($generated@@259 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@258 $generated@@361 $generated@@360)) (= ($generated@@0 ($generated@@92 ($generated@@311 $generated@@358) $generated@@359)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@358) $generated@@362)) (= $generated@@359 ($generated@@92 ($generated@@343 $generated@@358) $generated@@362))))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@358) $generated@@362))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@358) $generated@@362))
))))))
 :pattern ( ($generated@@92 ($generated@@311 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@277 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@276 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@92 ($generated@@322 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@92 ($generated@@351 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@363) $generated@@367))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@92 ($generated@@322 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@70)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (= (type $generated@@371) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@372) $generated@@70)) (= (type $generated@@373) $generated@@70)) (= (type $generated@@374) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))) (and ($generated@@215 ($generated@@92 ($generated@@343 $generated@@371) $generated@@375) $generated@@373 $generated@@374) ($generated@@215 $generated@@375 $generated@@372 $generated@@374)))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@371) $generated@@375))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))
))))
 :pattern ( ($generated@@85 $generated@@371 ($generated@@368 $generated@@372 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@377 $generated@@378)) $generated@@70)
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@379) $generated@@383))) (and ($generated@@215 ($generated@@92 ($generated@@351 $generated@@379) $generated@@383) $generated@@381 $generated@@382) ($generated@@215 $generated@@383 $generated@@380 $generated@@382)))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@379) $generated@@383))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@379) $generated@@383))
))))
 :pattern ( ($generated@@85 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@385) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@386) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@384 $generated@@386))) (and ($generated@@143 $generated@@384 $generated@@385) ($generated@@143 $generated@@385 $generated@@386))) ($generated@@143 $generated@@384 $generated@@386))
 :pattern ( ($generated@@143 $generated@@384 $generated@@385) ($generated@@143 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@T) ) (! (= (type ($generated@@387 $generated@@388)) ($generated@@87 $generated@@388 $generated@@4))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@278 (type $generated@@389))))
(let (($generated@@391 ($generated@@277 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@276 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@275 $generated@@391 $generated@@390)) (= ($generated@@274 $generated@@389) ($generated@@387 $generated@@391))))))
 :pattern ( ($generated@@274 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@278 (type $generated@@392))))
(let (($generated@@394 ($generated@@277 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@276 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@275 $generated@@394 $generated@@393)) (= ($generated@@322 $generated@@392) ($generated@@387 $generated@@393))))))
 :pattern ( ($generated@@322 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@278 (type $generated@@395))))
(let (($generated@@397 ($generated@@277 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@276 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@275 $generated@@397 $generated@@396)) (= ($generated@@350 $generated@@395) ($generated@@387 $generated@@170))))))
 :pattern ( ($generated@@350 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@260 (type $generated@@398))))
(let (($generated@@400 ($generated@@259 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@258 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@257 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (and (and (= (type $generated@@401) $generated@@170) (= (type $generated@@402) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@398) ($generated@@235 ($generated@@184 $generated@@401 $generated@@402)))))
 :no-pattern (type $generated@@401)
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@342 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@278 (type $generated@@403))))
(let (($generated@@405 ($generated@@277 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@276 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@275 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (and (and (= (type $generated@@406) $generated@@170) (= (type $generated@@407) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@350 $generated@@403) ($generated@@235 ($generated@@184 $generated@@406 $generated@@407)))))
 :no-pattern (type $generated@@406)
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@350 $generated@@403))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@76)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@T) ) (!  (=> (and (= (type $generated@@410) $generated@@76) (= (type $generated@@411) $generated@@74)) (and (= ($generated@@408 ($generated@@192 $generated@@412 $generated@@410 $generated@@411)) $generated@@410) (= ($generated@@83 ($generated@@192 $generated@@412 $generated@@410 $generated@@411)) $generated@@411)))
 :pattern ( ($generated@@192 $generated@@412 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@46)) (and (= ($generated@@235 ($generated@@301 $generated@@2 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@301 $generated@@2 $generated@@413) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@46))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@170) ($generated@@185 $generated@@414 $generated@@47)) (and (= ($generated@@235 ($generated@@301 $generated@@3 $generated@@414)) $generated@@414) ($generated@@154 ($generated@@301 $generated@@3 $generated@@414) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@414 $generated@@47))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@44)) (and (= ($generated@@235 ($generated@@301 $generated@@4 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@301 $generated@@4 $generated@@415) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@416) 21))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@170) ($generated@@185 $generated@@417 $generated@@45)) (and (= ($generated@@235 ($generated@@301 $generated@@416 $generated@@417)) $generated@@417) ($generated@@154 ($generated@@301 $generated@@416 $generated@@417) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@417 $generated@@45))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@70) (= ($generated@@185 ($generated@@235 $generated@@418) $generated@@419) ($generated@@154 $generated@@418 $generated@@419)))
 :pattern ( ($generated@@185 ($generated@@235 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@90 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@87 $generated@@421 $generated@@2)) (<= 0 ($generated@@250 $generated@@420))))
 :pattern ( ($generated@@250 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@230 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@229 $generated@@423)) (<= 0 ($generated@@228 $generated@@422))))
 :pattern ( ($generated@@228 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@70) (= (type $generated@@427) $generated@@70)) (= ($generated@@424 ($generated@@368 $generated@@426 $generated@@427)) $generated@@426))
 :pattern ( ($generated@@368 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@428 ($generated@@368 $generated@@430 $generated@@431)) $generated@@431))
 :pattern ( ($generated@@368 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@70) (= (type $generated@@433) $generated@@70)) (= ($generated@@81 ($generated@@368 $generated@@432 $generated@@433)) $generated@@58))
 :pattern ( ($generated@@368 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@70)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@70) (= (type $generated@@437) $generated@@70)) (= ($generated@@434 ($generated@@376 $generated@@436 $generated@@437)) $generated@@436))
 :pattern ( ($generated@@376 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@438 ($generated@@376 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@376 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@70) (= (type $generated@@443) $generated@@70)) (= ($generated@@81 ($generated@@376 $generated@@442 $generated@@443)) $generated@@59))
 :pattern ( ($generated@@376 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@170) (= (type $generated@@445) $generated@@170)) (= ($generated@@221 ($generated@@184 $generated@@444 $generated@@445)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@70)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@70) (= (type $generated@@449) $generated@@70)) (= ($generated@@446 ($generated@@160 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@160 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) $generated@@70)) (= ($generated@@450 ($generated@@160 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@160 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@170) (= (type $generated@@457) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@184 $generated@@456 $generated@@457))
)))
(assert  (and (forall (($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@460))
)) (forall (($generated@@461 T@U) ($generated@@462 Int) ) (! (let (($generated@@463 ($generated@@230 (type $generated@@461))))
(= (type ($generated@@459 $generated@@461 $generated@@462)) $generated@@463))
 :pattern ( ($generated@@459 $generated@@461 $generated@@462))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@229 $generated@@170)) (= (type $generated@@465) $generated@@70)) (= (type $generated@@466) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@464 ($generated@@458 $generated@@465) $generated@@466) (forall (($generated@@467 Int) ) (!  (=> (and (<= 0 $generated@@467) (< $generated@@467 ($generated@@228 $generated@@464))) ($generated@@215 ($generated@@459 $generated@@464 $generated@@467) $generated@@465 $generated@@466))
 :pattern ( ($generated@@459 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@85 $generated@@464 ($generated@@458 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@469 Int) ) (! (= ($generated@@468 ($generated@@86 $generated@@469)) $generated@@469)
 :pattern ( ($generated@@86 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@70) (= ($generated@@470 ($generated@@199 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@199 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@473)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@70) (= ($generated@@474 ($generated@@204 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@204 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@477)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@478 ($generated@@175 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@175 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@481)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@70) (= ($generated@@482 ($generated@@458 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@458 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@70) (= ($generated@@81 ($generated@@458 $generated@@485)) $generated@@57))
 :pattern ( ($generated@@458 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(= ($generated@@301 $generated@@487 ($generated@@235 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@235 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@489) $generated@@70)) (= (type $generated@@490) $generated@@70)) (= ($generated@@154 $generated@@488 ($generated@@368 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@488) $generated@@491))) (and ($generated@@185 ($generated@@92 ($generated@@343 $generated@@488) $generated@@491) $generated@@490) ($generated@@185 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@92 ($generated@@343 $generated@@488) $generated@@491))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@154 $generated@@488 ($generated@@368 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@493) $generated@@70)) (= (type $generated@@494) $generated@@70)) (= ($generated@@154 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@492) $generated@@495))) (and ($generated@@185 ($generated@@92 ($generated@@351 $generated@@492) $generated@@495) $generated@@494) ($generated@@185 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@92 ($generated@@351 $generated@@492) $generated@@495))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@154 $generated@@492 ($generated@@376 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@496 $generated@@498) ($generated@@497 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@170)) (< ($generated@@496 $generated@@501) ($generated@@497 ($generated@@184 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@184 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@170) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) $generated@@70)) ($generated@@185 $generated@@502 ($generated@@368 $generated@@503 $generated@@504))) (and (= ($generated@@235 ($generated@@301 ($generated@@258 $generated@@170 $generated@@170) $generated@@502)) $generated@@502) ($generated@@154 ($generated@@301 ($generated@@258 $generated@@170 $generated@@170) $generated@@502) ($generated@@368 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@185 $generated@@502 ($generated@@368 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@170) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) $generated@@70)) ($generated@@185 $generated@@505 ($generated@@376 $generated@@506 $generated@@507))) (and (= ($generated@@235 ($generated@@301 ($generated@@276 $generated@@170 $generated@@170) $generated@@505)) $generated@@505) ($generated@@154 ($generated@@301 ($generated@@276 $generated@@170 $generated@@170) $generated@@505) ($generated@@376 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@505 ($generated@@376 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= (type $generated@@510) $generated@@170)) ($generated@@185 $generated@@510 ($generated@@160 $generated@@508 $generated@@509))) (and (= ($generated@@235 ($generated@@301 $generated@@161 $generated@@510)) $generated@@510) ($generated@@154 ($generated@@301 $generated@@161 $generated@@510) ($generated@@160 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@185 $generated@@510 ($generated@@160 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
 (not ($generated@@0 ($generated@@92 ($generated@@387 $generated@@512) $generated@@511))))
 :pattern ( (let (($generated@@512 (type $generated@@511)))
($generated@@92 ($generated@@387 $generated@@512) $generated@@511)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (= ($generated@@1 ($generated@@515 $generated@@519 $generated@@520)) 22)) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@516 ($generated@@515 $generated@@521 $generated@@522)) $generated@@521)
 :pattern ( ($generated@@515 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@T) ($generated@@524 T@T) ) (! (= ($generated@@517 ($generated@@515 $generated@@523 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@515 $generated@@523 $generated@@524))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@517 (type $generated@@525))))
(= (type ($generated@@513 $generated@@525 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@513 $generated@@525 $generated@@526 $generated@@527))
))) (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(let (($generated@@534 (type $generated@@530)))
(= (type ($generated@@518 $generated@@529 $generated@@530 $generated@@531 $generated@@532)) ($generated@@515 $generated@@534 $generated@@533))))
 :pattern ( ($generated@@518 $generated@@529 $generated@@530 $generated@@531 $generated@@532))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@517 (type $generated@@535))))
 (=> (= (type $generated@@538) $generated@@539) (= ($generated@@513 ($generated@@518 $generated@@535 $generated@@536 $generated@@537 $generated@@538) $generated@@536 $generated@@537) $generated@@538)))
 :weight 0
))) (and (and (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (or (= $generated@@542 $generated@@544) (= ($generated@@513 ($generated@@518 $generated@@541 $generated@@542 $generated@@543 $generated@@540) $generated@@544 $generated@@545) ($generated@@513 $generated@@541 $generated@@544 $generated@@545)))
 :weight 0
)) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@549 $generated@@551) (= ($generated@@513 ($generated@@518 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@513 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
))) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or true (= ($generated@@513 ($generated@@518 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@513 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
)))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (= (type ($generated@@514 $generated@@558 $generated@@559 $generated@@560 $generated@@561)) ($generated@@515 $generated@@88 $generated@@4))
 :pattern ( ($generated@@514 $generated@@558 $generated@@559 $generated@@560 $generated@@561))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@73 (type $generated@@567))))
 (=> (and (and (and (and (and (= (type $generated@@562) $generated@@88) (= (type $generated@@563) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@564) ($generated@@72 $generated@@4))) (= (type $generated@@565) $generated@@88)) (= (type $generated@@566) $generated@@88)) (= (type $generated@@567) ($generated@@72 $generated@@568))) (= ($generated@@0 ($generated@@513 ($generated@@514 $generated@@562 $generated@@563 $generated@@564 $generated@@565) $generated@@566 $generated@@567))  (=> (and (not (= $generated@@566 $generated@@562)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@563 $generated@@566) $generated@@564))) (= $generated@@566 $generated@@565)))))
 :pattern ( ($generated@@513 ($generated@@514 $generated@@562 $generated@@563 $generated@@564 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (= (type ($generated@@569 $generated@@570 $generated@@571 $generated@@572 $generated@@573)) ($generated@@515 $generated@@88 $generated@@4))
 :pattern ( ($generated@@569 $generated@@570 $generated@@571 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@73 (type $generated@@579))))
 (=> (and (and (and (and (and (= (type $generated@@574) $generated@@88) (= (type $generated@@575) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@576) ($generated@@72 $generated@@4))) (= (type $generated@@577) $generated@@88)) (= (type $generated@@578) $generated@@88)) (= (type $generated@@579) ($generated@@72 $generated@@580))) (= ($generated@@0 ($generated@@513 ($generated@@569 $generated@@574 $generated@@575 $generated@@576 $generated@@577) $generated@@578 $generated@@579))  (=> (and (not (= $generated@@578 $generated@@574)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@575 $generated@@578) $generated@@576))) (= $generated@@578 $generated@@577)))))
 :pattern ( ($generated@@513 ($generated@@569 $generated@@574 $generated@@575 $generated@@576 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@77)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@70) (= (type $generated@@584) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@583 $generated@@584)) $generated@@63) (= ($generated@@581 ($generated@@160 $generated@@583 $generated@@584)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@161) (= ($generated@@496 ($generated@@235 $generated@@585)) ($generated@@497 $generated@@585)))
 :pattern ( ($generated@@496 ($generated@@235 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@170) ($generated@@185 $generated@@586 ($generated@@86 0))) (and (= ($generated@@235 ($generated@@301 $generated@@2 $generated@@586)) $generated@@586) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@586) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@586 ($generated@@86 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@170) (= (type $generated@@588) $generated@@70)) ($generated@@185 $generated@@587 ($generated@@199 $generated@@588))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@587)) $generated@@587) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@587) ($generated@@199 $generated@@588))))
 :pattern ( ($generated@@185 $generated@@587 ($generated@@199 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@170) (= (type $generated@@590) $generated@@70)) ($generated@@185 $generated@@589 ($generated@@204 $generated@@590))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@589)) $generated@@589) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@4) $generated@@589) ($generated@@204 $generated@@590))))
 :pattern ( ($generated@@185 $generated@@589 ($generated@@204 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@170) (= (type $generated@@592) $generated@@70)) ($generated@@185 $generated@@591 ($generated@@175 $generated@@592))) (and (= ($generated@@235 ($generated@@301 ($generated@@87 $generated@@170 $generated@@2) $generated@@591)) $generated@@591) ($generated@@154 ($generated@@301 ($generated@@87 $generated@@170 $generated@@2) $generated@@591) ($generated@@175 $generated@@592))))
 :pattern ( ($generated@@185 $generated@@591 ($generated@@175 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@170) (= (type $generated@@594) $generated@@70)) ($generated@@185 $generated@@593 ($generated@@458 $generated@@594))) (and (= ($generated@@235 ($generated@@301 ($generated@@229 $generated@@170) $generated@@593)) $generated@@593) ($generated@@154 ($generated@@301 ($generated@@229 $generated@@170) $generated@@593) ($generated@@458 $generated@@594))))
 :pattern ( ($generated@@185 $generated@@593 ($generated@@458 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
 (=> (and (and (and (= (type $generated@@595) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@596) $generated@@88)) (= (type $generated@@597) ($generated@@72 $generated@@599))) ($generated@@152 ($generated@@93 $generated@@595 $generated@@596 ($generated@@95 ($generated@@92 $generated@@595 $generated@@596) $generated@@597 $generated@@598)))) ($generated@@143 $generated@@595 ($generated@@93 $generated@@595 $generated@@596 ($generated@@95 ($generated@@92 $generated@@595 $generated@@596) $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@93 $generated@@595 $generated@@596 ($generated@@95 ($generated@@92 $generated@@595 $generated@@596) $generated@@597 $generated@@598)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@581 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@581 $generated@@181) $generated@@68))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@600 ($generated@@175 $generated@@601) $generated@@602) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@600 $generated@@603)))) ($generated@@215 $generated@@603 $generated@@601 $generated@@602))
 :pattern ( ($generated@@92 $generated@@600 $generated@@603))
))))
 :pattern ( ($generated@@85 $generated@@600 ($generated@@175 $generated@@601) $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@161) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@606) (and ($generated@@159 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@70) ($generated@@85 $generated@@604 ($generated@@160 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@85 $generated@@604 ($generated@@160 $generated@@605 $generated@@607) $generated@@606))
))))) ($generated@@215 ($generated@@168 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@215 ($generated@@168 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@161) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@610) (and ($generated@@159 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@70) ($generated@@85 $generated@@608 ($generated@@160 $generated@@611 $generated@@609) $generated@@610))
 :pattern ( ($generated@@85 $generated@@608 ($generated@@160 $generated@@611 $generated@@609) $generated@@610))
))))) ($generated@@215 ($generated@@169 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@215 ($generated@@169 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@170) (= (type $generated@@613) $generated@@170)) (= ($generated@@184 ($generated@@211 $generated@@612) ($generated@@211 $generated@@613)) ($generated@@211 ($generated@@184 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@184 ($generated@@211 $generated@@612) ($generated@@211 $generated@@613)))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@235 ($generated@@8 ($generated@@209 $generated@@614))) ($generated@@211 ($generated@@235 ($generated@@8 $generated@@614))))
 :pattern ( ($generated@@235 ($generated@@8 ($generated@@209 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@235 ($generated@@211 $generated@@615)) ($generated@@211 ($generated@@235 $generated@@615)))
 :pattern ( ($generated@@235 ($generated@@211 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@230 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@229 $generated@@617)) (= ($generated@@228 $generated@@616) 0)) (= $generated@@616 ($generated@@227 $generated@@617))))
 :pattern ( ($generated@@228 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@87 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@250 ($generated@@93 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@250 $generated@@618) ($generated ($generated@@92 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@250 ($generated@@93 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@623) $generated@@2)) ($generated@@85 $generated@@623 $generated@@46 $generated@@622))
 :pattern ( ($generated@@85 $generated@@623 $generated@@46 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@625) $generated@@3)) ($generated@@85 $generated@@625 $generated@@47 $generated@@624))
 :pattern ( ($generated@@85 $generated@@625 $generated@@47 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@627) $generated@@4)) ($generated@@85 $generated@@627 $generated@@44 $generated@@626))
 :pattern ( ($generated@@85 $generated@@627 $generated@@44 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@629) $generated@@416)) ($generated@@85 $generated@@629 $generated@@45 $generated@@628))
 :pattern ( ($generated@@85 $generated@@629 $generated@@45 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@631) $generated@@170)) ($generated@@85 $generated@@631 $generated@@48 $generated@@630))
 :pattern ( ($generated@@85 $generated@@631 $generated@@48 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@229 $generated@@170)) (= (type $generated@@633) $generated@@70)) (= ($generated@@154 $generated@@632 ($generated@@458 $generated@@633)) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@228 $generated@@632))) ($generated@@185 ($generated@@459 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@459 $generated@@632 $generated@@634))
))))
 :pattern ( ($generated@@154 $generated@@632 ($generated@@458 $generated@@633)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 Int) ) (!  (=> (= (type $generated@@636) ($generated@@229 $generated@@170)) (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@228 $generated@@636))) (< ($generated@@497 ($generated@@301 $generated@@161 ($generated@@459 $generated@@636 $generated@@637))) ($generated@@635 $generated@@636))))
 :pattern ( ($generated@@497 ($generated@@301 $generated@@161 ($generated@@459 $generated@@636 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@639) $generated@@70)) (= (type $generated@@640) $generated@@70)) ($generated@@154 $generated@@638 ($generated@@368 $generated@@639 $generated@@640))) (and (and ($generated@@154 ($generated@@256 $generated@@638) ($generated@@199 $generated@@639)) ($generated@@154 ($generated@@311 $generated@@638) ($generated@@199 $generated@@640))) ($generated@@154 ($generated@@342 $generated@@638) ($generated@@199 ($generated@@160 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@154 $generated@@638 ($generated@@368 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) $generated@@70)) ($generated@@154 $generated@@641 ($generated@@376 $generated@@642 $generated@@643))) (and (and ($generated@@154 ($generated@@274 $generated@@641) ($generated@@204 $generated@@642)) ($generated@@154 ($generated@@322 $generated@@641) ($generated@@204 $generated@@643))) ($generated@@154 ($generated@@350 $generated@@641) ($generated@@204 ($generated@@160 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@154 $generated@@641 ($generated@@376 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@2) ($generated@@154 $generated@@644 $generated@@46))
 :pattern ( ($generated@@154 $generated@@644 $generated@@46))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@3) ($generated@@154 $generated@@645 $generated@@47))
 :pattern ( ($generated@@154 $generated@@645 $generated@@47))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@4) ($generated@@154 $generated@@646 $generated@@44))
 :pattern ( ($generated@@154 $generated@@646 $generated@@44))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@416) ($generated@@154 $generated@@647 $generated@@45))
 :pattern ( ($generated@@154 $generated@@647 $generated@@45))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@170) ($generated@@154 $generated@@648 $generated@@48))
 :pattern ( ($generated@@154 $generated@@648 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 (T@U) Bool)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(assert  (and (and (and (and (and (= (type $generated@@649) ($generated@@515 $generated@@88 $generated@@4)) (= (type $generated@@650) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@651) $generated@@88)) (= (type $generated@@652) ($generated@@515 $generated@@88 $generated@@4))) (= (type $generated@@653) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@656) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@658  (=> (= $generated@@649 ($generated@@514 $generated@@148 $generated@@650 $generated@@60 $generated@@651)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (! (let (($generated@@661 ($generated@@73 (type $generated@@660))))
 (=> (and (= (type $generated@@659) $generated@@88) (= (type $generated@@660) ($generated@@72 $generated@@661))) (=> (and (and (not (= $generated@@659 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@650 $generated@@659) $generated@@60))) (= $generated@@659 $generated@@651)) ($generated@@0 ($generated@@513 $generated@@649 $generated@@659 $generated@@660)))))
 :no-pattern (type $generated@@659)
 :no-pattern (type $generated@@660)
 :no-pattern ($generated $generated@@659)
 :no-pattern ($generated@@0 $generated@@659)
 :no-pattern ($generated $generated@@660)
 :no-pattern ($generated@@0 $generated@@660)
))) (=> (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (! (let (($generated@@664 ($generated@@73 (type $generated@@663))))
 (=> (and (= (type $generated@@662) $generated@@88) (= (type $generated@@663) ($generated@@72 $generated@@664))) (=> (and (and (not (= $generated@@662 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@650 $generated@@662) $generated@@60))) (= $generated@@662 $generated@@651)) ($generated@@0 ($generated@@513 $generated@@649 $generated@@662 $generated@@663)))))
 :no-pattern (type $generated@@662)
 :no-pattern (type $generated@@663)
 :no-pattern ($generated $generated@@662)
 :no-pattern ($generated@@0 $generated@@662)
 :no-pattern ($generated $generated@@663)
 :no-pattern ($generated@@0 $generated@@663)
)) (=> (= $generated@@652 ($generated@@569 $generated@@148 $generated@@650 $generated@@60 $generated@@651)) (=> (and (and ($generated@@152 $generated@@653) ($generated@@654 $generated@@653)) (and ($generated@@143 $generated@@650 $generated@@653) (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (! (let (($generated@@667 ($generated@@73 (type $generated@@666))))
 (=> (and (and (= (type $generated@@665) $generated@@88) (= (type $generated@@666) ($generated@@72 $generated@@667))) (and (not (= $generated@@665 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@650 $generated@@665) $generated@@60)))) (or (= ($generated@@94 ($generated@@92 $generated@@653 $generated@@665) $generated@@666) ($generated@@94 ($generated@@92 $generated@@650 $generated@@665) $generated@@666)) ($generated@@0 ($generated@@513 $generated@@652 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@653 $generated@@665) $generated@@666))
)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@651 $generated@@148))) (=> (not (= $generated@@651 $generated@@148)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@513 $generated@@649 $generated@@651 $generated@@151))) (=> ($generated@@0 ($generated@@513 $generated@@649 $generated@@651 $generated@@151)) (=> (and (and (= $generated@@655 ($generated@@209 10)) (= $generated@@656 ($generated@@93 $generated@@653 $generated@@651 ($generated@@95 ($generated@@92 $generated@@653 $generated@@651) $generated@@151 ($generated@@8 $generated@@655))))) (and ($generated@@152 $generated@@656) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated ($generated@@94 ($generated@@92 $generated@@656 $generated@@651) $generated@@151)) ($generated@@209 10))))))))))))))
(let (($generated@@668  (=> (and ($generated@@152 $generated@@650) ($generated@@654 $generated@@650)) (=> (and (and ($generated@@154 $generated@@651 $generated@@181) ($generated@@85 $generated@@651 $generated@@181 $generated@@650)) (and (= 1 $generated@@657) (= (ControlFlow 0 6) 2))) $generated@@658))))
$generated@@668)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () Int)
(assert  (and (and (= (type $generated@@186) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@187) $generated@@46)) (= (type $generated@@188) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@193  (=> (= (ControlFlow 0 6) (- 0 5)) (= $generated@@181 ($generated@@162 10)))))
(let (($generated@@194  (=> (and (and (<= 10 $generated@@182) (= $generated@@183 ($generated@@162 10))) (and (= $generated@@181 $generated@@183) (= (ControlFlow 0 7) 6))) $generated@@193)))
(let (($generated@@195 true))
(let (($generated@@196  (=> (and (< $generated@@182 10) (= (ControlFlow 0 4) 3)) $generated@@195)))
(let (($generated@@197  (and (=> (= (ControlFlow 0 8) 7) $generated@@194) (=> (= (ControlFlow 0 8) 4) $generated@@196))))
(let (($generated@@198  (=> $generated@@184 (and (=> (= (ControlFlow 0 9) 8) $generated@@197) (=> (= (ControlFlow 0 9) 3) $generated@@195)))))
(let (($generated@@199 true))
(let (($generated@@200  (and (=> (= (ControlFlow 0 10) 2) $generated@@199) (=> (= (ControlFlow 0 10) 9) $generated@@198))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (and (and (and (not false) (= $generated@@185 10)) (forall (($generated@@203 T@U) ) (!  (=> (= (type $generated@@203) $generated@@46) (=> (and (not (= $generated@@203 $generated@@187)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@186 $generated@@203) $generated@@50))) (= ($generated@@49 $generated@@186 $generated@@203) ($generated@@49 $generated@@186 $generated@@203))))
 :pattern ( ($generated@@49 $generated@@186 $generated@@203))
))) (and (and ($generated@@44 $generated@@186 $generated@@186) (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@55 (type $generated@@205))))
 (=> (and (and (= (type $generated@@204) $generated@@46) (= (type $generated@@205) ($generated@@54 $generated@@206))) (and (not (= $generated@@204 $generated@@187)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@186 $generated@@204) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@186 $generated@@204) $generated@@205) ($generated@@48 ($generated@@49 $generated@@186 $generated@@204) $generated@@205)) ($generated@@0 ($generated@@106 $generated@@188 $generated@@204 $generated@@205)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@186 $generated@@204) $generated@@205))
))) (and (<= (- 10 $generated@@182) $generated@@185) (=> (= (- 10 $generated@@182) $generated@@185) true)))) (and (=> (= (ControlFlow 0 11) 1) $generated@@201) (=> (= (ControlFlow 0 11) 10) $generated@@200)))))
(let (($generated@@207  (=> (and (and (= $generated@@188 ($generated@@107 $generated@@187 $generated@@186 $generated@@50 false)) (= $generated@@189 ($generated@@162 0))) (and (= $generated@@185 (- 10 $generated@@189)) (= (ControlFlow 0 12) 11))) $generated@@202)))
(let (($generated@@208  (=> (and (and ($generated@@190 $generated@@186) ($generated@@191 $generated@@186)) (and (= 0 $generated@@192) (= (ControlFlow 0 13) 12))) $generated@@207)))
$generated@@208)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (=> (and (= $generated@@177 ($generated@@157 10)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@177 ($generated@@157 10))))))
(let (($generated@@182  (=> (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (= 0 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (=> (and (= $generated@@177 ($generated@@157 10)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@177 ($generated@@157 10))))))
(let (($generated@@182  (=> (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (= 0 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@T T@U T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 (T@U T@U) Bool)
(declare-fun $generated@@204 (T@U T@U) Bool)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@210 (T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) Bool)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@234 (T@U T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@246 (T@T) T@U)
(declare-fun $generated@@247 (T@U) Int)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@254 (T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@323 (T@U) Int)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U T@U) Bool)
(declare-fun $generated@@371 (T@U) Bool)
(declare-fun $generated@@381 (T@T T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) Bool)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@465 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@U T@U) T@U)
(declare-fun $generated@@481 (T@U T@U) T@U)
(declare-fun $generated@@508 (T@T) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@537 () T@T)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@581 (T@U Int) T@U)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(declare-fun $generated@@622 (T@U) Int)
(declare-fun $generated@@639 (T@T) T@U)
(declare-fun $generated@@645 (T@U) T@U)
(declare-fun $generated@@659 (T@U T@U) Bool)
(declare-fun $generated@@708 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@64) $generated@@78)) (= (type $generated@@65) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@66) $generated@@79)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 13)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@76 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 15)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@76 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@73)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@148) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@91) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert  (and (= (type $generated@@150) $generated@@73) (= (type $generated@@151) $generated@@91)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@91) (= (type $generated@@153) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@152 $generated@@150 $generated@@153)  (or (= $generated@@152 $generated@@151) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@152 $generated@@150 $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@73))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@91) (= (type $generated@@156) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@151) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@157 $generated@@158 ($generated@@89 0)))
 :pattern ( ($generated@@157 $generated@@158 ($generated@@89 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@73)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@73) (= (type $generated@@165) $generated@@73)) (= (type $generated@@166) $generated@@161)) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@73)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@90 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@73)) ($generated@@157 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@157 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@180 $generated@@181)) $generated@@73)
 :pattern ( ($generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@91) (= ($generated@@157 $generated@@182 $generated@@154)  (or (= $generated@@182 $generated@@151) (= ($generated@@180 $generated@@182) $generated@@154))))
 :pattern ( ($generated@@157 $generated@@182 $generated@@154))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@93 (type $generated@@184))))
(= (type ($generated@@183 $generated@@184 $generated@@185)) ($generated@@90 $generated@@186 $generated@@4)))
 :pattern ( ($generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@93 (type $generated@@187))))
 (=> (and (= (type $generated@@187) ($generated@@90 $generated@@189 $generated@@4)) (= (type $generated@@188) ($generated@@90 $generated@@189 $generated@@4))) (= ($generated@@183 ($generated@@183 $generated@@187 $generated@@188) $generated@@188) ($generated@@183 $generated@@187 $generated@@188))))
 :pattern ( ($generated@@183 ($generated@@183 $generated@@187 $generated@@188) $generated@@188))
)))
(assert (= (type $generated@@190) $generated@@73))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@91) (= (type $generated@@192) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@191 $generated@@190 $generated@@192) ($generated@@88 $generated@@191 $generated@@150 $generated@@192)))
 :pattern ( ($generated@@88 $generated@@191 $generated@@190 $generated@@192))
)))
(assert (= (type $generated@@193) $generated@@73))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@91) (= (type $generated@@195) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@194 $generated@@193 $generated@@195) ($generated@@88 $generated@@194 $generated@@154 $generated@@195)))
 :pattern ( ($generated@@88 $generated@@194 $generated@@193 $generated@@195))
)))
(assert (= (type $generated@@196) ($generated@@75 ($generated@@90 $generated@@170 $generated@@4))))
(assert (= ($generated@@83 $generated@@196) 0))
(assert (forall (($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= (type ($generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@75 $generated@@198))
 :pattern ( ($generated@@197 $generated@@198 $generated@@199 $generated@@200))
)))
(assert (= ($generated@@197 ($generated@@90 $generated@@170 $generated@@4) $generated@@66 $generated@@72) $generated@@196))
(assert ($generated@@201 $generated@@196))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@206 $generated@@207)) $generated@@170)
 :pattern ( ($generated@@206 $generated@@207))
)))
(assert  (=> (<= 0 $generated@@202) (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (and (= (type $generated@@208) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@209) $generated@@91)) (or ($generated@@204 $generated@@208 $generated@@209) (and (not (= 0 $generated@@202)) (and ($generated@@205 $generated@@208) (and (not (= $generated@@209 $generated@@151)) (and ($generated@@157 $generated@@209 $generated@@193) ($generated@@88 $generated@@209 $generated@@193 $generated@@208))))))) ($generated@@203 $generated@@208 $generated@@209)) ($generated@@0 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@208 $generated@@209) $generated@@196) ($generated@@206 $generated@@209))))
 :pattern ( ($generated@@203 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= (type ($generated@@210 $generated@@212 $generated@@213)) $generated@@161)
 :pattern ( ($generated@@210 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (and (and (= (type $generated@@214) $generated@@73) (= (type $generated@@215) $generated@@73)) (= (type $generated@@216) $generated@@170)) (= (type $generated@@217) $generated@@170)) (= ($generated@@157 ($generated@@210 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215))  (and ($generated@@211 $generated@@216 $generated@@214) ($generated@@211 $generated@@217 $generated@@215))))
 :pattern ( ($generated@@157 ($generated@@210 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@161) (= (type $generated@@219) $generated@@161)) (= ($generated@@167 $generated@@218 $generated@@219) (= $generated@@218 $generated@@219)))
 :pattern ( ($generated@@167 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (! (= (type ($generated@@220 $generated@@221)) $generated@@73)
 :pattern ( ($generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@223) $generated@@73)) (= ($generated@@157 $generated@@222 ($generated@@220 $generated@@223)) (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@170) ($generated@@0 ($generated@@95 $generated@@222 $generated@@224))) ($generated@@211 $generated@@224 $generated@@223))
 :pattern ( ($generated@@95 $generated@@222 $generated@@224))
))))
 :pattern ( ($generated@@157 $generated@@222 ($generated@@220 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@73)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@228) $generated@@73)) (= ($generated@@157 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@170) ($generated@@0 ($generated@@95 $generated@@227 $generated@@229))) ($generated@@211 $generated@@229 $generated@@228))
 :pattern ( ($generated@@95 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@157 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (let (($generated@@232 (type $generated@@231)))
(= (type ($generated@@230 $generated@@231)) $generated@@232))
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! (= ($generated@@230 $generated@@233) $generated@@233)
 :pattern ( ($generated@@230 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@235) $generated@@73) (= (type $generated@@236) $generated@@73)) (= (type $generated@@237) $generated@@170)) (= (type $generated@@238) $generated@@170)) (= (type $generated@@239) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@205 $generated@@239)) (= ($generated@@88 ($generated@@210 $generated@@237 $generated@@238) ($generated@@160 $generated@@235 $generated@@236) $generated@@239)  (and ($generated@@234 $generated@@237 $generated@@235 $generated@@239) ($generated@@234 $generated@@238 $generated@@236 $generated@@239))))
 :pattern ( ($generated@@88 ($generated@@210 $generated@@237 $generated@@238) ($generated@@160 $generated@@235 $generated@@236) $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@78)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (= (type $generated@@242) $generated@@161) (= ($generated@@159 $generated@@242) (= ($generated@@240 $generated@@242) $generated@@64)))
 :pattern ( ($generated@@159 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@161) ($generated@@159 $generated@@243)) (exists (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (and (and (= (type $generated@@244) $generated@@170) (= (type $generated@@245) $generated@@170)) (= $generated@@243 ($generated@@210 $generated@@244 $generated@@245)))
 :no-pattern (type $generated@@244)
 :no-pattern (type $generated@@245)
 :no-pattern ($generated $generated@@244)
 :no-pattern ($generated@@0 $generated@@244)
 :no-pattern ($generated $generated@@245)
 :no-pattern ($generated@@0 $generated@@245)
)))
 :pattern ( ($generated@@159 $generated@@243))
)))
(assert  (and (and (forall (($generated@@250 T@T) ) (= ($generated@@1 ($generated@@248 $generated@@250)) 18)) (forall (($generated@@251 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
))) (forall (($generated@@252 T@T) ) (! (= (type ($generated@@246 $generated@@252)) ($generated@@248 $generated@@252))
 :pattern ( ($generated@@246 $generated@@252))
))))
(assert (forall (($generated@@253 T@T) ) (! (= ($generated@@247 ($generated@@246 $generated@@253)) 0)
 :pattern ( ($generated@@246 $generated@@253))
)))
(assert ($generated@@201 $generated@@60))
(assert  (and (and (and (and (and (and (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@260 $generated@@261)) 19)) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@256 $generated@@264 $generated@@265))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@258 (type $generated@@266))))
(= (type ($generated@@254 $generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@254 $generated@@266 $generated@@267 $generated@@268))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(let (($generated@@275 (type $generated@@271)))
(= (type ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@256 $generated@@275 $generated@@274))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@258 (type $generated@@276))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@254 ($generated@@259 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or (= $generated@@283 $generated@@285) (= ($generated@@254 ($generated@@259 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@254 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (or (= $generated@@290 $generated@@292) (= ($generated@@254 ($generated@@259 $generated@@288 $generated@@289 $generated@@290 $generated@@287) $generated@@291 $generated@@292) ($generated@@254 $generated@@288 $generated@@291 $generated@@292)))
 :weight 0
))) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (or true (= ($generated@@254 ($generated@@259 $generated@@294 $generated@@295 $generated@@296 $generated@@293) $generated@@297 $generated@@298) ($generated@@254 $generated@@294 $generated@@297 $generated@@298)))
 :weight 0
)))) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (! (= (type ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302 $generated@@303)) ($generated@@256 $generated@@91 $generated@@4))
 :pattern ( ($generated@@255 $generated@@299 $generated@@300 $generated@@301 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@76 (type $generated@@310))))
 (=> (and (and (and (and (and (and (= (type $generated@@304) $generated@@91) (= (type $generated@@305) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@306) ($generated@@75 $generated@@4))) (= (type $generated@@307) $generated@@91)) (= (type $generated@@308) ($generated@@90 $generated@@170 $generated@@4))) (= (type $generated@@309) $generated@@91)) (= (type $generated@@310) ($generated@@75 $generated@@311))) (= ($generated@@0 ($generated@@254 ($generated@@255 $generated@@304 $generated@@305 $generated@@306 $generated@@307 $generated@@308) $generated@@309 $generated@@310))  (=> (and (not (= $generated@@309 $generated@@304)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@305 $generated@@309) $generated@@306))) (or (= $generated@@309 $generated@@307) ($generated@@0 ($generated@@95 $generated@@308 ($generated@@206 $generated@@309))))))))
 :pattern ( ($generated@@254 ($generated@@255 $generated@@304 $generated@@305 $generated@@306 $generated@@307 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@73) (= (type $generated@@314) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@234 ($generated@@206 $generated@@312) $generated@@313 $generated@@314) ($generated@@88 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@234 ($generated@@206 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@315) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@316) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@317) $generated@@170)) (= (type $generated@@318) $generated@@73)) ($generated@@146 $generated@@315 $generated@@316)) ($generated@@234 $generated@@317 $generated@@318 $generated@@315)) ($generated@@234 $generated@@317 $generated@@318 $generated@@316))
 :pattern ( ($generated@@146 $generated@@315 $generated@@316) ($generated@@234 $generated@@317 $generated@@318 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@319) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@320) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@322) $generated@@73)) ($generated@@146 $generated@@319 $generated@@320)) ($generated@@88 $generated@@321 $generated@@322 $generated@@319)) ($generated@@88 $generated@@321 $generated@@322 $generated@@320))
 :pattern ( ($generated@@146 $generated@@319 $generated@@320) ($generated@@88 $generated@@321 $generated@@322 $generated@@319))
)))
(assert (forall (($generated@@325 T@T) ) (! (= (type ($generated@@324 $generated@@325)) ($generated@@90 $generated@@325 $generated@@2))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@93 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@90 $generated@@327 $generated@@2)) (and (= (= ($generated@@323 $generated@@326) 0) (= $generated@@326 ($generated@@324 $generated@@327))) (=> (not (= ($generated@@323 $generated@@326) 0)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) (< 0 ($generated ($generated@@95 $generated@@326 $generated@@328))))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 20)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@90 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@95 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@95 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 21)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@90 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@95 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@95 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@367) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@365 $generated@@366 $generated@@367)) (and ($generated@@146 $generated@@366 $generated@@367) (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@76 (type $generated@@369))))
 (=> (and (and (= (type $generated@@368) $generated@@91) (= (type $generated@@369) ($generated@@75 $generated@@370))) (not ($generated@@201 $generated@@369))) (= ($generated@@97 ($generated@@95 $generated@@366 $generated@@368) $generated@@369) ($generated@@97 ($generated@@95 $generated@@367 $generated@@368) $generated@@369))))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@367 $generated@@368) $generated@@369))
))))
 :pattern ( ($generated@@365 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@373) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@374) $generated@@91)) (=> (and (and (and ($generated@@205 $generated@@372) ($generated@@205 $generated@@373)) (and (not (= $generated@@374 $generated@@151)) ($generated@@157 $generated@@374 $generated@@193))) (and ($generated@@371 $generated@@372) ($generated@@146 $generated@@372 $generated@@373))) (=> (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@76 (type $generated@@376))))
 (=> (and (and (= (type $generated@@375) $generated@@91) (= (type $generated@@376) ($generated@@75 $generated@@377))) (and (not (= $generated@@375 $generated@@151)) (or (= $generated@@375 $generated@@374) ($generated@@0 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@372 $generated@@374) $generated@@196) ($generated@@206 $generated@@375)))))) (= ($generated@@97 ($generated@@95 $generated@@372 $generated@@375) $generated@@376) ($generated@@97 ($generated@@95 $generated@@373 $generated@@375) $generated@@376))))
 :no-pattern (type $generated@@375)
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
)) (= ($generated@@203 $generated@@372 $generated@@374) ($generated@@203 $generated@@373 $generated@@374)))))
 :pattern ( ($generated@@371 $generated@@372) ($generated@@146 $generated@@372 $generated@@373) ($generated@@203 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@93 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@90 $generated@@379 $generated@@2)) (= ($generated@@176 $generated@@378) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@379) (and (<= 0 ($generated ($generated@@95 $generated@@378 $generated@@380))) (<= ($generated ($generated@@95 $generated@@378 $generated@@380)) ($generated@@323 $generated@@378))))
 :pattern ( ($generated@@95 $generated@@378 $generated@@380))
)))))
 :pattern ( ($generated@@176 $generated@@378))
)))
(assert (forall (($generated@@382 T@T) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@170) ($generated@@211 $generated@@384 $generated@@150)) (and (= ($generated@@206 ($generated@@381 $generated@@91 $generated@@384)) $generated@@384) ($generated@@157 ($generated@@381 $generated@@91 $generated@@384) $generated@@150)))
 :pattern ( ($generated@@211 $generated@@384 $generated@@150))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@170) ($generated@@211 $generated@@385 $generated@@190)) (and (= ($generated@@206 ($generated@@381 $generated@@91 $generated@@385)) $generated@@385) ($generated@@157 ($generated@@381 $generated@@91 $generated@@385) $generated@@190)))
 :pattern ( ($generated@@211 $generated@@385 $generated@@190))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@170) ($generated@@211 $generated@@386 $generated@@154)) (and (= ($generated@@206 ($generated@@381 $generated@@91 $generated@@386)) $generated@@386) ($generated@@157 ($generated@@381 $generated@@91 $generated@@386) $generated@@154)))
 :pattern ( ($generated@@211 $generated@@386 $generated@@154))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@170) ($generated@@211 $generated@@387 $generated@@193)) (and (= ($generated@@206 ($generated@@381 $generated@@91 $generated@@387)) $generated@@387) ($generated@@157 ($generated@@381 $generated@@91 $generated@@387) $generated@@193)))
 :pattern ( ($generated@@211 $generated@@387 $generated@@193))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@91) (= ($generated@@157 $generated@@388 $generated@@190)  (and ($generated@@157 $generated@@388 $generated@@150) (not (= $generated@@388 $generated@@151)))))
 :pattern ( ($generated@@157 $generated@@388 $generated@@190))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@91) (= ($generated@@157 $generated@@389 $generated@@193)  (and ($generated@@157 $generated@@389 $generated@@154) (not (= $generated@@389 $generated@@151)))))
 :pattern ( ($generated@@157 $generated@@389 $generated@@193))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@333 (type $generated@@390))))
(let (($generated@@392 ($generated@@332 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@331 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@330 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@95 ($generated@@329 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@329 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@333 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@90 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@333 (type $generated@@397))))
(let (($generated@@399 ($generated@@332 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@331 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@330 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@95 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@351 (type $generated@@401))))
(let (($generated@@403 ($generated@@350 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@349 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@348 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) ($generated@@0 ($generated@@95 ($generated@@347 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@347 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@351 (type $generated@@406))))
(= (type ($generated@@405 $generated@@406)) ($generated@@90 $generated@@407 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@351 (type $generated@@408))))
(let (($generated@@410 ($generated@@350 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@349 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@348 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@409) ($generated@@0 ($generated@@95 ($generated@@405 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@405 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@90 $generated@@170 $generated@@2)) (= (type $generated@@413) $generated@@73)) (= ($generated@@157 $generated@@412 ($generated@@175 $generated@@413)) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@170) (< 0 ($generated ($generated@@95 $generated@@412 $generated@@414)))) ($generated@@211 $generated@@414 $generated@@413))
 :pattern ( ($generated@@95 $generated@@412 $generated@@414))
))))
 :pattern ( ($generated@@157 $generated@@412 ($generated@@175 $generated@@413)))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@93 (type $generated@@417))))
(= (type ($generated@@416 $generated@@417 $generated@@418)) ($generated@@90 $generated@@419 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@93 (type $generated@@420))))
 (=> (and (and (= (type $generated@@420) ($generated@@90 $generated@@422 $generated@@4)) (= (type $generated@@421) ($generated@@90 $generated@@422 $generated@@4))) ($generated@@415 $generated@@420 $generated@@421)) (and (= ($generated@@416 ($generated@@183 $generated@@420 $generated@@421) $generated@@420) $generated@@421) (= ($generated@@416 ($generated@@183 $generated@@420 $generated@@421) $generated@@421) $generated@@420))))
 :pattern ( ($generated@@183 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
 (=> (and (= (type $generated@@423) ($generated@@90 $generated@@426 $generated@@4)) (= (type $generated@@424) ($generated@@90 $generated@@426 $generated@@4))) (= ($generated@@0 ($generated@@95 ($generated@@416 $generated@@423 $generated@@424) $generated@@425))  (and ($generated@@0 ($generated@@95 $generated@@423 $generated@@425)) (not ($generated@@0 ($generated@@95 $generated@@424 $generated@@425)))))))
 :pattern ( ($generated@@95 ($generated@@416 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@427) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@428) $generated@@73)) (= (type $generated@@429) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@427 ($generated@@220 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@170) ($generated@@0 ($generated@@95 $generated@@427 $generated@@430))) ($generated@@234 $generated@@430 $generated@@428 $generated@@429))
 :pattern ( ($generated@@95 $generated@@427 $generated@@430))
))))
 :pattern ( ($generated@@88 $generated@@427 ($generated@@220 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@431) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@432) $generated@@73)) (= (type $generated@@433) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@431 ($generated@@225 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@170) ($generated@@0 ($generated@@95 $generated@@431 $generated@@434))) ($generated@@234 $generated@@434 $generated@@432 $generated@@433))
 :pattern ( ($generated@@95 $generated@@431 $generated@@434))
))))
 :pattern ( ($generated@@88 $generated@@431 ($generated@@225 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(= ($generated ($generated@@95 ($generated@@324 $generated@@436) $generated@@435)) 0))
 :pattern ( (let (($generated@@436 (type $generated@@435)))
($generated@@95 ($generated@@324 $generated@@436) $generated@@435)))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@438) $generated@@91)) (=> (and (and ($generated@@205 $generated@@437) (and (not (= $generated@@438 $generated@@151)) (= ($generated@@180 $generated@@438) $generated@@154))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@437 $generated@@438) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@437 $generated@@438) $generated@@196) ($generated@@220 $generated@@190) $generated@@437)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@437 $generated@@438) $generated@@196))
)))
(assert  (and (forall (($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@441)) ($generated@@90 $generated@@170 $generated@@4))
 :pattern ( ($generated@@439 $generated@@441))
)) (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@333 (type $generated@@442))))
(let (($generated@@444 ($generated@@332 (type $generated@@442))))
(= (type ($generated@@440 $generated@@442)) ($generated@@90 $generated@@444 $generated@@443))))
 :pattern ( ($generated@@440 $generated@@442))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@331 $generated@@170 $generated@@170)) (= (type $generated@@446) $generated@@170)) (= ($generated@@0 ($generated@@95 ($generated@@439 $generated@@445) $generated@@446))  (and ($generated@@0 ($generated@@95 ($generated@@329 $generated@@445) ($generated@@168 ($generated@@381 $generated@@161 $generated@@446)))) (= ($generated@@95 ($generated@@440 $generated@@445) ($generated@@168 ($generated@@381 $generated@@161 $generated@@446))) ($generated@@169 ($generated@@381 $generated@@161 $generated@@446))))))
 :pattern ( ($generated@@95 ($generated@@439 $generated@@445) $generated@@446))
)))
(assert  (and (forall (($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@449)) ($generated@@90 $generated@@170 $generated@@4))
 :pattern ( ($generated@@447 $generated@@449))
)) (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@351 (type $generated@@450))))
(let (($generated@@452 ($generated@@350 (type $generated@@450))))
(= (type ($generated@@448 $generated@@450)) ($generated@@90 $generated@@452 $generated@@451))))
 :pattern ( ($generated@@448 $generated@@450))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) ($generated@@349 $generated@@170 $generated@@170)) (= (type $generated@@454) $generated@@170)) (= ($generated@@0 ($generated@@95 ($generated@@447 $generated@@453) $generated@@454))  (and ($generated@@0 ($generated@@95 ($generated@@347 $generated@@453) ($generated@@168 ($generated@@381 $generated@@161 $generated@@454)))) (= ($generated@@95 ($generated@@448 $generated@@453) ($generated@@168 ($generated@@381 $generated@@161 $generated@@454))) ($generated@@169 ($generated@@381 $generated@@161 $generated@@454))))))
 :pattern ( ($generated@@95 ($generated@@447 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@456)))
(let (($generated@@458 ($generated@@332 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@331 $generated@@458 $generated@@457)) (= ($generated@@0 ($generated@@95 ($generated@@394 $generated@@455) $generated@@456)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@458) (and ($generated@@0 ($generated@@95 ($generated@@329 $generated@@455) $generated@@459)) (= $generated@@456 ($generated@@95 ($generated@@440 $generated@@455) $generated@@459))))
 :pattern ( ($generated@@95 ($generated@@329 $generated@@455) $generated@@459))
 :pattern ( ($generated@@95 ($generated@@440 $generated@@455) $generated@@459))
))))))
 :pattern ( ($generated@@95 ($generated@@394 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(let (($generated@@463 ($generated@@350 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@349 $generated@@463 $generated@@462)) (= ($generated@@0 ($generated@@95 ($generated@@405 $generated@@460) $generated@@461)) (exists (($generated@@464 T@U) ) (!  (and (= (type $generated@@464) $generated@@463) (and ($generated@@0 ($generated@@95 ($generated@@347 $generated@@460) $generated@@464)) (= $generated@@461 ($generated@@95 ($generated@@448 $generated@@460) $generated@@464))))
 :pattern ( ($generated@@95 ($generated@@347 $generated@@460) $generated@@464))
 :pattern ( ($generated@@95 ($generated@@448 $generated@@460) $generated@@464))
))))))
 :pattern ( ($generated@@95 ($generated@@405 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@466 $generated@@467)) $generated@@73)
 :pattern ( ($generated@@465 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (= (type $generated@@468) ($generated@@331 $generated@@170 $generated@@170)) (= (type $generated@@469) $generated@@73)) (= (type $generated@@470) $generated@@73)) (= (type $generated@@471) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@329 $generated@@468) $generated@@472))) (and ($generated@@234 ($generated@@95 ($generated@@440 $generated@@468) $generated@@472) $generated@@470 $generated@@471) ($generated@@234 $generated@@472 $generated@@469 $generated@@471)))
 :pattern ( ($generated@@95 ($generated@@440 $generated@@468) $generated@@472))
 :pattern ( ($generated@@95 ($generated@@329 $generated@@468) $generated@@472))
))))
 :pattern ( ($generated@@88 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@474 $generated@@475)) $generated@@73)
 :pattern ( ($generated@@473 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (and (= (type $generated@@476) ($generated@@349 $generated@@170 $generated@@170)) (= (type $generated@@477) $generated@@73)) (= (type $generated@@478) $generated@@73)) (= (type $generated@@479) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479) (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@347 $generated@@476) $generated@@480))) (and ($generated@@234 ($generated@@95 ($generated@@448 $generated@@476) $generated@@480) $generated@@478 $generated@@479) ($generated@@234 $generated@@480 $generated@@477 $generated@@479)))
 :pattern ( ($generated@@95 ($generated@@448 $generated@@476) $generated@@480))
 :pattern ( ($generated@@95 ($generated@@347 $generated@@476) $generated@@480))
))))
 :pattern ( ($generated@@88 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (! (let (($generated@@484 (type $generated@@483)))
(= (type ($generated@@481 $generated@@482 $generated@@483)) ($generated@@90 $generated@@484 $generated@@4)))
 :pattern ( ($generated@@481 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@486)))
 (=> (and (and (= (type $generated@@485) ($generated@@90 $generated@@488 $generated@@4)) (= (type $generated@@487) $generated@@488)) ($generated@@0 ($generated@@95 $generated@@485 $generated@@487))) ($generated@@0 ($generated@@95 ($generated@@481 $generated@@485 $generated@@486) $generated@@487))))
 :pattern ( ($generated@@481 $generated@@485 $generated@@486) ($generated@@95 $generated@@485 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
 (=> (and (and (= (type $generated@@489) ($generated@@90 $generated@@492 $generated@@4)) (= (type $generated@@490) ($generated@@90 $generated@@492 $generated@@4))) ($generated@@0 ($generated@@95 $generated@@489 $generated@@491))) ($generated@@0 ($generated@@95 ($generated@@183 $generated@@489 $generated@@490) $generated@@491))))
 :pattern ( ($generated@@183 $generated@@489 $generated@@490) ($generated@@95 $generated@@489 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
 (=> (and (and (= (type $generated@@493) ($generated@@90 $generated@@496 $generated@@4)) (= (type $generated@@494) ($generated@@90 $generated@@496 $generated@@4))) ($generated@@0 ($generated@@95 $generated@@494 $generated@@495))) ($generated@@0 ($generated@@95 ($generated@@183 $generated@@493 $generated@@494) $generated@@495))))
 :pattern ( ($generated@@183 $generated@@493 $generated@@494) ($generated@@95 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@498)))
 (=> (and (= (type $generated@@497) ($generated@@90 $generated@@500 $generated@@4)) (= (type $generated@@499) $generated@@500)) (= ($generated@@0 ($generated@@95 ($generated@@481 $generated@@497 $generated@@498) $generated@@499))  (or (= $generated@@499 $generated@@498) ($generated@@0 ($generated@@95 $generated@@497 $generated@@499))))))
 :pattern ( ($generated@@95 ($generated@@481 $generated@@497 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@501) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@502) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@503) ($generated@@90 $generated@@91 $generated@@92))) (not (= $generated@@501 $generated@@503))) (and ($generated@@146 $generated@@501 $generated@@502) ($generated@@146 $generated@@502 $generated@@503))) ($generated@@146 $generated@@501 $generated@@503))
 :pattern ( ($generated@@146 $generated@@501 $generated@@502) ($generated@@146 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
 (=> (and (and (= (type $generated@@504) ($generated@@90 $generated@@507 $generated@@4)) (= (type $generated@@505) ($generated@@90 $generated@@507 $generated@@4))) ($generated@@0 ($generated@@95 $generated@@505 $generated@@506))) (not ($generated@@0 ($generated@@95 ($generated@@416 $generated@@504 $generated@@505) $generated@@506)))))
 :pattern ( ($generated@@416 $generated@@504 $generated@@505) ($generated@@95 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@509 T@T) ) (! (= (type ($generated@@508 $generated@@509)) ($generated@@90 $generated@@509 $generated@@4))
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@351 (type $generated@@510))))
(let (($generated@@512 ($generated@@350 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@349 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@348 $generated@@512 $generated@@511)) (= ($generated@@347 $generated@@510) ($generated@@508 $generated@@512))))))
 :pattern ( ($generated@@347 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@351 (type $generated@@513))))
(let (($generated@@515 ($generated@@350 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@349 $generated@@515 $generated@@514)) (= (= $generated@@513 ($generated@@348 $generated@@515 $generated@@514)) (= ($generated@@405 $generated@@513) ($generated@@508 $generated@@514))))))
 :pattern ( ($generated@@405 $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@351 (type $generated@@516))))
(let (($generated@@518 ($generated@@350 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@349 $generated@@518 $generated@@517)) (= (= $generated@@516 ($generated@@348 $generated@@518 $generated@@517)) (= ($generated@@447 $generated@@516) ($generated@@508 $generated@@170))))))
 :pattern ( ($generated@@447 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@333 (type $generated@@519))))
(let (($generated@@521 ($generated@@332 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@331 $generated@@521 $generated@@520)) (or (= $generated@@519 ($generated@@330 $generated@@521 $generated@@520)) (exists (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (and (and (= (type $generated@@522) $generated@@170) (= (type $generated@@523) $generated@@170)) ($generated@@0 ($generated@@95 ($generated@@439 $generated@@519) ($generated@@206 ($generated@@210 $generated@@522 $generated@@523)))))
 :no-pattern (type $generated@@522)
 :no-pattern (type $generated@@523)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
))))))
 :pattern ( ($generated@@439 $generated@@519))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 ($generated@@351 (type $generated@@524))))
(let (($generated@@526 ($generated@@350 (type $generated@@524))))
 (=> (= (type $generated@@524) ($generated@@349 $generated@@526 $generated@@525)) (or (= $generated@@524 ($generated@@348 $generated@@526 $generated@@525)) (exists (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (and (and (= (type $generated@@527) $generated@@170) (= (type $generated@@528) $generated@@170)) ($generated@@0 ($generated@@95 ($generated@@447 $generated@@524) ($generated@@206 ($generated@@210 $generated@@527 $generated@@528)))))
 :no-pattern (type $generated@@527)
 :no-pattern (type $generated@@528)
 :no-pattern ($generated $generated@@527)
 :no-pattern ($generated@@0 $generated@@527)
 :no-pattern ($generated $generated@@528)
 :no-pattern ($generated@@0 $generated@@528)
))))))
 :pattern ( ($generated@@447 $generated@@524))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@79)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@T) ) (!  (=> (and (= (type $generated@@531) $generated@@79) (= (type $generated@@532) $generated@@77)) (and (= ($generated@@529 ($generated@@197 $generated@@533 $generated@@531 $generated@@532)) $generated@@531) (= ($generated@@86 ($generated@@197 $generated@@533 $generated@@531 $generated@@532)) $generated@@532)))
 :pattern ( ($generated@@197 $generated@@533 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@170) ($generated@@211 $generated@@534 $generated@@46)) (and (= ($generated@@206 ($generated@@381 $generated@@2 $generated@@534)) $generated@@534) ($generated@@157 ($generated@@381 $generated@@2 $generated@@534) $generated@@46)))
 :pattern ( ($generated@@211 $generated@@534 $generated@@46))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@170) ($generated@@211 $generated@@535 $generated@@47)) (and (= ($generated@@206 ($generated@@381 $generated@@3 $generated@@535)) $generated@@535) ($generated@@157 ($generated@@381 $generated@@3 $generated@@535) $generated@@47)))
 :pattern ( ($generated@@211 $generated@@535 $generated@@47))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@170) ($generated@@211 $generated@@536 $generated@@44)) (and (= ($generated@@206 ($generated@@381 $generated@@4 $generated@@536)) $generated@@536) ($generated@@157 ($generated@@381 $generated@@4 $generated@@536) $generated@@44)))
 :pattern ( ($generated@@211 $generated@@536 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@537) 22))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@170) ($generated@@211 $generated@@538 $generated@@45)) (and (= ($generated@@206 ($generated@@381 $generated@@537 $generated@@538)) $generated@@538) ($generated@@157 ($generated@@381 $generated@@537 $generated@@538) $generated@@45)))
 :pattern ( ($generated@@211 $generated@@538 $generated@@45))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@73) (= ($generated@@211 ($generated@@206 $generated@@539) $generated@@540) ($generated@@157 $generated@@539 $generated@@540)))
 :pattern ( ($generated@@211 ($generated@@206 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@93 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@90 $generated@@542 $generated@@2)) (<= 0 ($generated@@323 $generated@@541))))
 :pattern ( ($generated@@323 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@249 (type $generated@@543))))
 (=> (= (type $generated@@543) ($generated@@248 $generated@@544)) (<= 0 ($generated@@247 $generated@@543))))
 :pattern ( ($generated@@247 $generated@@543))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@73)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@73) (= (type $generated@@548) $generated@@73)) (= ($generated@@545 ($generated@@465 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@465 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@73)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@73) (= (type $generated@@552) $generated@@73)) (= ($generated@@549 ($generated@@465 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@465 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@73) (= (type $generated@@554) $generated@@73)) (= ($generated@@84 ($generated@@465 $generated@@553 $generated@@554)) $generated@@58))
 :pattern ( ($generated@@465 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@73)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@73) (= (type $generated@@558) $generated@@73)) (= ($generated@@555 ($generated@@473 $generated@@557 $generated@@558)) $generated@@557))
 :pattern ( ($generated@@473 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@73)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@73) (= (type $generated@@562) $generated@@73)) (= ($generated@@559 ($generated@@473 $generated@@561 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@473 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@73) (= (type $generated@@564) $generated@@73)) (= ($generated@@84 ($generated@@473 $generated@@563 $generated@@564)) $generated@@59))
 :pattern ( ($generated@@473 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@170) (= (type $generated@@566) $generated@@170)) (= ($generated@@240 ($generated@@210 $generated@@565 $generated@@566)) $generated@@64))
 :pattern ( ($generated@@210 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@73)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@73) (= (type $generated@@570) $generated@@73)) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@569))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@73)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@73) (= (type $generated@@574) $generated@@73)) (= ($generated@@571 ($generated@@160 $generated@@573 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@160 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@170)) (= ($generated@@168 ($generated@@210 $generated@@575 $generated@@576)) $generated@@575))
 :pattern ( ($generated@@210 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@170)) (= ($generated@@169 ($generated@@210 $generated@@577 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@210 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@91) ($generated@@157 $generated@@579 $generated@@150))
 :pattern ( ($generated@@157 $generated@@579 $generated@@150))
)))
(assert  (and (forall (($generated@@582 T@U) ) (! (= (type ($generated@@580 $generated@@582)) $generated@@73)
 :pattern ( ($generated@@580 $generated@@582))
)) (forall (($generated@@583 T@U) ($generated@@584 Int) ) (! (let (($generated@@585 ($generated@@249 (type $generated@@583))))
(= (type ($generated@@581 $generated@@583 $generated@@584)) $generated@@585))
 :pattern ( ($generated@@581 $generated@@583 $generated@@584))
))))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@248 $generated@@170)) (= (type $generated@@587) $generated@@73)) (= (type $generated@@588) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@586 ($generated@@580 $generated@@587) $generated@@588) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@247 $generated@@586))) ($generated@@234 ($generated@@581 $generated@@586 $generated@@589) $generated@@587 $generated@@588))
 :pattern ( ($generated@@581 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@88 $generated@@586 ($generated@@580 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (=> (= (type $generated@@590) ($generated@@90 $generated@@592 $generated@@4)) ($generated@@0 ($generated@@95 ($generated@@481 $generated@@590 $generated@@591) $generated@@591))))
 :pattern ( ($generated@@481 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@593 ($generated@@89 $generated@@594)) $generated@@594)
 :pattern ( ($generated@@89 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@73)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@73) (= ($generated@@595 ($generated@@220 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@220 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@73) (= ($generated@@84 ($generated@@220 $generated@@598)) $generated@@54))
 :pattern ( ($generated@@220 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@73)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@73) (= ($generated@@599 ($generated@@225 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@225 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@73) (= ($generated@@84 ($generated@@225 $generated@@602)) $generated@@55))
 :pattern ( ($generated@@225 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (= (type ($generated@@603 $generated@@604)) $generated@@73)
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@73) (= ($generated@@603 ($generated@@175 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@175 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@73) (= ($generated@@84 ($generated@@175 $generated@@606)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@73)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@73) (= ($generated@@607 ($generated@@580 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@580 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@73) (= ($generated@@84 ($generated@@580 $generated@@610)) $generated@@57))
 :pattern ( ($generated@@580 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
(= ($generated@@381 $generated@@612 ($generated@@206 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@206 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@331 $generated@@170 $generated@@170)) (= (type $generated@@614) $generated@@73)) (= (type $generated@@615) $generated@@73)) (= ($generated@@157 $generated@@613 ($generated@@465 $generated@@614 $generated@@615)) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@329 $generated@@613) $generated@@616))) (and ($generated@@211 ($generated@@95 ($generated@@440 $generated@@613) $generated@@616) $generated@@615) ($generated@@211 $generated@@616 $generated@@614)))
 :pattern ( ($generated@@95 ($generated@@440 $generated@@613) $generated@@616))
 :pattern ( ($generated@@95 ($generated@@329 $generated@@613) $generated@@616))
))))
 :pattern ( ($generated@@157 $generated@@613 ($generated@@465 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@349 $generated@@170 $generated@@170)) (= (type $generated@@618) $generated@@73)) (= (type $generated@@619) $generated@@73)) (= ($generated@@157 $generated@@617 ($generated@@473 $generated@@618 $generated@@619)) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@347 $generated@@617) $generated@@620))) (and ($generated@@211 ($generated@@95 ($generated@@448 $generated@@617) $generated@@620) $generated@@619) ($generated@@211 $generated@@620 $generated@@618)))
 :pattern ( ($generated@@95 ($generated@@448 $generated@@617) $generated@@620))
 :pattern ( ($generated@@95 ($generated@@347 $generated@@617) $generated@@620))
))))
 :pattern ( ($generated@@157 $generated@@617 ($generated@@473 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@170) (= (type $generated@@624) $generated@@170)) (< ($generated@@621 $generated@@623) ($generated@@622 ($generated@@210 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@210 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@170) (= (type $generated@@626) $generated@@170)) (< ($generated@@621 $generated@@626) ($generated@@622 ($generated@@210 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@210 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@93 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@90 $generated@@629 $generated@@4)) (= (type $generated@@628) ($generated@@90 $generated@@629 $generated@@4))) (= ($generated@@183 $generated@@627 ($generated@@183 $generated@@627 $generated@@628)) ($generated@@183 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@183 $generated@@627 ($generated@@183 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@170) (= (type $generated@@631) $generated@@73)) (= (type $generated@@632) $generated@@73)) ($generated@@211 $generated@@630 ($generated@@465 $generated@@631 $generated@@632))) (and (= ($generated@@206 ($generated@@381 ($generated@@331 $generated@@170 $generated@@170) $generated@@630)) $generated@@630) ($generated@@157 ($generated@@381 ($generated@@331 $generated@@170 $generated@@170) $generated@@630) ($generated@@465 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@211 $generated@@630 ($generated@@465 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@170) (= (type $generated@@634) $generated@@73)) (= (type $generated@@635) $generated@@73)) ($generated@@211 $generated@@633 ($generated@@473 $generated@@634 $generated@@635))) (and (= ($generated@@206 ($generated@@381 ($generated@@349 $generated@@170 $generated@@170) $generated@@633)) $generated@@633) ($generated@@157 ($generated@@381 ($generated@@349 $generated@@170 $generated@@170) $generated@@633) ($generated@@473 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@211 $generated@@633 ($generated@@473 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@73) (= (type $generated@@637) $generated@@73)) (= (type $generated@@638) $generated@@170)) ($generated@@211 $generated@@638 ($generated@@160 $generated@@636 $generated@@637))) (and (= ($generated@@206 ($generated@@381 $generated@@161 $generated@@638)) $generated@@638) ($generated@@157 ($generated@@381 $generated@@161 $generated@@638) ($generated@@160 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@211 $generated@@638 ($generated@@160 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@640 T@T) ) (! (= (type ($generated@@639 $generated@@640)) ($generated@@90 $generated@@640 $generated@@4))
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 (type $generated@@641)))
 (not ($generated@@0 ($generated@@95 ($generated@@639 $generated@@642) $generated@@641))))
 :pattern ( (let (($generated@@642 (type $generated@@641)))
($generated@@95 ($generated@@639 $generated@@642) $generated@@641)))
)))
(assert (forall (($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@643)))
 (not ($generated@@0 ($generated@@95 ($generated@@508 $generated@@644) $generated@@643))))
 :pattern ( (let (($generated@@644 (type $generated@@643)))
($generated@@95 ($generated@@508 $generated@@644) $generated@@643)))
)))
(assert (forall (($generated@@646 T@U) ) (! (= (type ($generated@@645 $generated@@646)) $generated@@80)
 :pattern ( ($generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@73) (= (type $generated@@648) $generated@@73)) (and (= ($generated@@84 ($generated@@160 $generated@@647 $generated@@648)) $generated@@65) (= ($generated@@645 ($generated@@160 $generated@@647 $generated@@648)) $generated@@70)))
 :pattern ( ($generated@@160 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@161) (= ($generated@@621 ($generated@@206 $generated@@649)) ($generated@@622 $generated@@649)))
 :pattern ( ($generated@@621 ($generated@@206 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@170) ($generated@@211 $generated@@650 ($generated@@89 0))) (and (= ($generated@@206 ($generated@@381 $generated@@2 $generated@@650)) $generated@@650) ($generated@@157 ($generated@@381 ($generated@@90 $generated@@170 $generated@@4) $generated@@650) ($generated@@89 0))))
 :pattern ( ($generated@@211 $generated@@650 ($generated@@89 0)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@170) (= (type $generated@@652) $generated@@73)) ($generated@@211 $generated@@651 ($generated@@220 $generated@@652))) (and (= ($generated@@206 ($generated@@381 ($generated@@90 $generated@@170 $generated@@4) $generated@@651)) $generated@@651) ($generated@@157 ($generated@@381 ($generated@@90 $generated@@170 $generated@@4) $generated@@651) ($generated@@220 $generated@@652))))
 :pattern ( ($generated@@211 $generated@@651 ($generated@@220 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@170) (= (type $generated@@654) $generated@@73)) ($generated@@211 $generated@@653 ($generated@@225 $generated@@654))) (and (= ($generated@@206 ($generated@@381 ($generated@@90 $generated@@170 $generated@@4) $generated@@653)) $generated@@653) ($generated@@157 ($generated@@381 ($generated@@90 $generated@@170 $generated@@4) $generated@@653) ($generated@@225 $generated@@654))))
 :pattern ( ($generated@@211 $generated@@653 ($generated@@225 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) $generated@@170) (= (type $generated@@656) $generated@@73)) ($generated@@211 $generated@@655 ($generated@@175 $generated@@656))) (and (= ($generated@@206 ($generated@@381 ($generated@@90 $generated@@170 $generated@@2) $generated@@655)) $generated@@655) ($generated@@157 ($generated@@381 ($generated@@90 $generated@@170 $generated@@2) $generated@@655) ($generated@@175 $generated@@656))))
 :pattern ( ($generated@@211 $generated@@655 ($generated@@175 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@170) (= (type $generated@@658) $generated@@73)) ($generated@@211 $generated@@657 ($generated@@580 $generated@@658))) (and (= ($generated@@206 ($generated@@381 ($generated@@248 $generated@@170) $generated@@657)) $generated@@657) ($generated@@157 ($generated@@381 ($generated@@248 $generated@@170) $generated@@657) ($generated@@580 $generated@@658))))
 :pattern ( ($generated@@211 $generated@@657 ($generated@@580 $generated@@658)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (! (let (($generated@@662 ($generated@@93 (type $generated@@660))))
 (=> (and (= (type $generated@@660) ($generated@@90 $generated@@662 $generated@@4)) (= (type $generated@@661) ($generated@@90 $generated@@662 $generated@@4))) (= ($generated@@659 $generated@@660 $generated@@661) (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@662) ($generated@@0 ($generated@@95 $generated@@660 $generated@@663))) ($generated@@0 ($generated@@95 $generated@@661 $generated@@663)))
 :pattern ( ($generated@@95 $generated@@660 $generated@@663))
 :pattern ( ($generated@@95 $generated@@661 $generated@@663))
)))))
 :pattern ( ($generated@@659 $generated@@660 $generated@@661))
)))
(assert (= ($generated@@84 $generated@@150) $generated@@62))
(assert (= ($generated@@645 $generated@@150) $generated@@69))
(assert (= ($generated@@84 $generated@@190) $generated@@63))
(assert (= ($generated@@645 $generated@@190) $generated@@69))
(assert (= ($generated@@84 $generated@@154) $generated@@67))
(assert (= ($generated@@645 $generated@@154) $generated@@71))
(assert (= ($generated@@84 $generated@@193) $generated@@68))
(assert (= ($generated@@645 $generated@@193) $generated@@71))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@664) ($generated@@90 $generated@@170 $generated@@2)) (= (type $generated@@665) $generated@@73)) (= (type $generated@@666) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@664 ($generated@@175 $generated@@665) $generated@@666) (forall (($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@170) (< 0 ($generated ($generated@@95 $generated@@664 $generated@@667)))) ($generated@@234 $generated@@667 $generated@@665 $generated@@666))
 :pattern ( ($generated@@95 $generated@@664 $generated@@667))
))))
 :pattern ( ($generated@@88 $generated@@664 ($generated@@175 $generated@@665) $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (! (let (($generated@@670 ($generated@@93 (type $generated@@668))))
 (=> (and (= (type $generated@@668) ($generated@@90 $generated@@670 $generated@@4)) (= (type $generated@@669) ($generated@@90 $generated@@670 $generated@@4))) (= ($generated@@415 $generated@@668 $generated@@669) (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@670) (or (not ($generated@@0 ($generated@@95 $generated@@668 $generated@@671))) (not ($generated@@0 ($generated@@95 $generated@@669 $generated@@671)))))
 :pattern ( ($generated@@95 $generated@@668 $generated@@671))
 :pattern ( ($generated@@95 $generated@@669 $generated@@671))
)))))
 :pattern ( ($generated@@415 $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) $generated@@161) (= (type $generated@@673) $generated@@73)) (= (type $generated@@674) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@205 $generated@@674) (and ($generated@@159 $generated@@672) (exists (($generated@@675 T@U) ) (!  (and (= (type $generated@@675) $generated@@73) ($generated@@88 $generated@@672 ($generated@@160 $generated@@673 $generated@@675) $generated@@674))
 :pattern ( ($generated@@88 $generated@@672 ($generated@@160 $generated@@673 $generated@@675) $generated@@674))
))))) ($generated@@234 ($generated@@168 $generated@@672) $generated@@673 $generated@@674))
 :pattern ( ($generated@@234 ($generated@@168 $generated@@672) $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) $generated@@161) (= (type $generated@@677) $generated@@73)) (= (type $generated@@678) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@205 $generated@@678) (and ($generated@@159 $generated@@676) (exists (($generated@@679 T@U) ) (!  (and (= (type $generated@@679) $generated@@73) ($generated@@88 $generated@@676 ($generated@@160 $generated@@679 $generated@@677) $generated@@678))
 :pattern ( ($generated@@88 $generated@@676 ($generated@@160 $generated@@679 $generated@@677) $generated@@678))
))))) ($generated@@234 ($generated@@169 $generated@@676) $generated@@677 $generated@@678))
 :pattern ( ($generated@@234 ($generated@@169 $generated@@676) $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@680) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@681) $generated@@91)) (and ($generated@@205 $generated@@680) (and (not (= $generated@@681 $generated@@151)) (= ($generated@@180 $generated@@681) $generated@@154)))) ($generated@@157 ($generated@@97 ($generated@@95 $generated@@680 $generated@@681) $generated@@196) ($generated@@220 $generated@@190)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@680 $generated@@681) $generated@@196))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@170) (= (type $generated@@683) $generated@@170)) (= ($generated@@210 ($generated@@230 $generated@@682) ($generated@@230 $generated@@683)) ($generated@@230 ($generated@@210 $generated@@682 $generated@@683))))
 :pattern ( ($generated@@210 ($generated@@230 $generated@@682) ($generated@@230 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ) (! (= ($generated@@206 ($generated@@230 $generated@@684)) ($generated@@230 ($generated@@206 $generated@@684)))
 :pattern ( ($generated@@206 ($generated@@230 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ) (! (let (($generated@@686 ($generated@@249 (type $generated@@685))))
 (=> (and (= (type $generated@@685) ($generated@@248 $generated@@686)) (= ($generated@@247 $generated@@685) 0)) (= $generated@@685 ($generated@@246 $generated@@686))))
 :pattern ( ($generated@@247 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (! (let (($generated@@690 (type $generated@@688)))
 (=> (and (and (= (type $generated@@687) ($generated@@90 $generated@@690 $generated@@2)) (= (type $generated@@689) $generated@@2)) (<= 0 ($generated $generated@@689))) (= ($generated@@323 ($generated@@96 $generated@@687 $generated@@688 $generated@@689)) (+ (- ($generated@@323 $generated@@687) ($generated ($generated@@95 $generated@@687 $generated@@688))) ($generated $generated@@689)))))
 :pattern ( ($generated@@323 ($generated@@96 $generated@@687 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (! (let (($generated@@694 (type $generated@@693)))
 (=> (and (= (type $generated@@691) ($generated@@90 $generated@@694 $generated@@4)) (= (type $generated@@692) ($generated@@90 $generated@@694 $generated@@4))) (= ($generated@@0 ($generated@@95 ($generated@@183 $generated@@691 $generated@@692) $generated@@693))  (or ($generated@@0 ($generated@@95 $generated@@691 $generated@@693)) ($generated@@0 ($generated@@95 $generated@@692 $generated@@693))))))
 :pattern ( ($generated@@95 ($generated@@183 $generated@@691 $generated@@692) $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@696) $generated@@2)) ($generated@@88 $generated@@696 $generated@@46 $generated@@695))
 :pattern ( ($generated@@88 $generated@@696 $generated@@46 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@698) $generated@@3)) ($generated@@88 $generated@@698 $generated@@47 $generated@@697))
 :pattern ( ($generated@@88 $generated@@698 $generated@@47 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@700) $generated@@4)) ($generated@@88 $generated@@700 $generated@@44 $generated@@699))
 :pattern ( ($generated@@88 $generated@@700 $generated@@44 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@702) $generated@@537)) ($generated@@88 $generated@@702 $generated@@45 $generated@@701))
 :pattern ( ($generated@@88 $generated@@702 $generated@@45 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@704) $generated@@170)) ($generated@@88 $generated@@704 $generated@@48 $generated@@703))
 :pattern ( ($generated@@88 $generated@@704 $generated@@48 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) ($generated@@248 $generated@@170)) (= (type $generated@@706) $generated@@73)) (= ($generated@@157 $generated@@705 ($generated@@580 $generated@@706)) (forall (($generated@@707 Int) ) (!  (=> (and (<= 0 $generated@@707) (< $generated@@707 ($generated@@247 $generated@@705))) ($generated@@211 ($generated@@581 $generated@@705 $generated@@707) $generated@@706))
 :pattern ( ($generated@@581 $generated@@705 $generated@@707))
))))
 :pattern ( ($generated@@157 $generated@@705 ($generated@@580 $generated@@706)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 Int) ) (!  (=> (= (type $generated@@709) ($generated@@248 $generated@@170)) (=> (and (<= 0 $generated@@710) (< $generated@@710 ($generated@@247 $generated@@709))) (< ($generated@@622 ($generated@@381 $generated@@161 ($generated@@581 $generated@@709 $generated@@710))) ($generated@@708 $generated@@709))))
 :pattern ( ($generated@@622 ($generated@@381 $generated@@161 ($generated@@581 $generated@@709 $generated@@710))))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (and (= (type $generated@@711) ($generated@@331 $generated@@170 $generated@@170)) (= (type $generated@@712) $generated@@73)) (= (type $generated@@713) $generated@@73)) ($generated@@157 $generated@@711 ($generated@@465 $generated@@712 $generated@@713))) (and (and ($generated@@157 ($generated@@329 $generated@@711) ($generated@@220 $generated@@712)) ($generated@@157 ($generated@@394 $generated@@711) ($generated@@220 $generated@@713))) ($generated@@157 ($generated@@439 $generated@@711) ($generated@@220 ($generated@@160 $generated@@712 $generated@@713)))))
 :pattern ( ($generated@@157 $generated@@711 ($generated@@465 $generated@@712 $generated@@713)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (and (= (type $generated@@714) ($generated@@349 $generated@@170 $generated@@170)) (= (type $generated@@715) $generated@@73)) (= (type $generated@@716) $generated@@73)) ($generated@@157 $generated@@714 ($generated@@473 $generated@@715 $generated@@716))) (and (and ($generated@@157 ($generated@@347 $generated@@714) ($generated@@225 $generated@@715)) ($generated@@157 ($generated@@405 $generated@@714) ($generated@@225 $generated@@716))) ($generated@@157 ($generated@@447 $generated@@714) ($generated@@225 ($generated@@160 $generated@@715 $generated@@716)))))
 :pattern ( ($generated@@157 $generated@@714 ($generated@@473 $generated@@715 $generated@@716)))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@2) ($generated@@157 $generated@@717 $generated@@46))
 :pattern ( ($generated@@157 $generated@@717 $generated@@46))
)))
(assert (forall (($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@3) ($generated@@157 $generated@@718 $generated@@47))
 :pattern ( ($generated@@157 $generated@@718 $generated@@47))
)))
(assert (forall (($generated@@719 T@U) ) (!  (=> (= (type $generated@@719) $generated@@4) ($generated@@157 $generated@@719 $generated@@44))
 :pattern ( ($generated@@157 $generated@@719 $generated@@44))
)))
(assert (forall (($generated@@720 T@U) ) (!  (=> (= (type $generated@@720) $generated@@537) ($generated@@157 $generated@@720 $generated@@45))
 :pattern ( ($generated@@157 $generated@@720 $generated@@45))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@170) ($generated@@157 $generated@@721 $generated@@48))
 :pattern ( ($generated@@157 $generated@@721 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () Bool)
(assert  (and (and (= (type $generated@@723) $generated@@91) (= (type $generated@@722) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@724) ($generated@@256 $generated@@91 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@726 true))
(let (($generated@@727  (=> (and (=> ($generated@@203 $generated@@722 $generated@@723) ($generated@@0 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196) ($generated@@206 $generated@@723)))) (= (ControlFlow 0 5) 2)) $generated@@726)))
(let (($generated@@728  (=> ($generated@@88 $generated@@723 $generated@@154 $generated@@722) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (= $generated@@723 $generated@@723) (and ($generated@@659 ($generated@@183 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196) ($generated@@481 ($generated@@639 $generated@@170) ($generated@@206 $generated@@723))) ($generated@@183 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196) ($generated@@481 ($generated@@639 $generated@@170) ($generated@@206 $generated@@723)))) (not ($generated@@659 ($generated@@183 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196) ($generated@@481 ($generated@@639 $generated@@170) ($generated@@206 $generated@@723))) ($generated@@183 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196) ($generated@@481 ($generated@@639 $generated@@170) ($generated@@206 $generated@@723)))))))) (=> (or (= $generated@@723 $generated@@723) (and ($generated@@659 ($generated@@183 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196) ($generated@@481 ($generated@@639 $generated@@170) ($generated@@206 $generated@@723))) ($generated@@183 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196) ($generated@@481 ($generated@@639 $generated@@170) ($generated@@206 $generated@@723)))) (not ($generated@@659 ($generated@@183 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196) ($generated@@481 ($generated@@639 $generated@@170) ($generated@@206 $generated@@723))) ($generated@@183 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196) ($generated@@481 ($generated@@639 $generated@@170) ($generated@@206 $generated@@723))))))) (=> (and (and (or (= $generated@@723 $generated@@723) ($generated@@204 $generated@@722 $generated@@723)) ($generated@@203 $generated@@722 $generated@@723)) (and ($generated@@0 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196) ($generated@@206 $generated@@723))) (= (ControlFlow 0 3) 2))) $generated@@726))))))
(let (($generated@@729 true))
(let (($generated@@730  (=> (and (= $generated@@724 ($generated@@255 $generated@@151 $generated@@722 $generated@@60 $generated@@723 ($generated@@97 ($generated@@95 $generated@@722 $generated@@723) $generated@@196))) (= $generated@@725 ($generated@@0 ($generated@@254 $generated@@724 $generated@@723 $generated@@196)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) $generated@@725) (=> $generated@@725 (and (and (=> (= (ControlFlow 0 6) 1) $generated@@729) (=> (= (ControlFlow 0 6) 3) $generated@@728)) (=> (= (ControlFlow 0 6) 5) $generated@@727)))))))
(let (($generated@@731  (=> (and ($generated@@205 $generated@@722) ($generated@@371 $generated@@722)) (=> (and (and (not (= $generated@@723 $generated@@151)) (and ($generated@@157 $generated@@723 $generated@@193) ($generated@@88 $generated@@723 $generated@@193 $generated@@722))) (and (= 0 $generated@@202) (= (ControlFlow 0 8) 6))) $generated@@730))))
$generated@@731)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@250 (T@T T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () Int)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (Int) Int)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@364 (T@U T@U) Bool)
(declare-fun $generated@@370 (T@U) Bool)
(declare-fun $generated@@380 (T@T T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@468 (T@U T@U) T@U)
(declare-fun $generated@@483 (T@T) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 () T@T)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@556 (T@U Int) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@597 (T@U) Int)
(declare-fun $generated@@611 (T@T) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@673 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@74) 6) (= (type $generated@@44) $generated@@74)) (= (type $generated@@45) $generated@@74)) (= (type $generated@@46) $generated@@74)) (= (type $generated@@47) $generated@@74)) (= (type $generated@@48) $generated@@74)) (= ($generated@@1 $generated@@75) 7)) (= (type $generated@@49) $generated@@75)) (= (type $generated@@50) $generated@@75)) (= (type $generated@@51) $generated@@75)) (= (type $generated@@52) $generated@@75)) (= (type $generated@@53) $generated@@75)) (= (type $generated@@54) $generated@@75)) (= (type $generated@@55) $generated@@75)) (= (type $generated@@56) $generated@@75)) (= (type $generated@@57) $generated@@75)) (= (type $generated@@58) $generated@@75)) (= (type $generated@@59) $generated@@75)) (forall (($generated@@82 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@82)) 8))) (forall (($generated@@83 T@T) ) (! (= ($generated@@77 ($generated@@76 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@76 $generated@@83))
))) (= (type $generated@@60) ($generated@@76 $generated@@4))) (= ($generated@@1 $generated@@78) 9)) (= (type $generated@@61) $generated@@78)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@75)) (= ($generated@@1 $generated@@79) 10)) (= (type $generated@@64) $generated@@79)) (= (type $generated@@65) $generated@@75)) (= ($generated@@1 $generated@@80) 11)) (= (type $generated@@66) $generated@@80)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= ($generated@@1 $generated@@81) 12)) (= (type $generated@@69) $generated@@81)) (= (type $generated@@70) $generated@@81)) (= (type $generated@@71) $generated@@81)) (= (type $generated@@72) $generated@@78)) (= (type $generated@@73) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)
)
(assert (= ($generated@@84 $generated@@60) 0))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@75)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@44) $generated@@49))
(assert (= ($generated@@85 $generated@@45) $generated@@50))
(assert (= ($generated@@85 $generated@@46) $generated@@51))
(assert (= ($generated@@85 $generated@@47) $generated@@52))
(assert (= ($generated@@85 $generated@@48) $generated@@53))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@78)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@100 $generated@@101)) 13)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@91 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@95 (type $generated@@106))))
(= (type ($generated@@96 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@97 $generated@@109 $generated@@110 $generated@@111)) ($generated@@91 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@95 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@77 (type $generated@@127))))
(= (type ($generated@@98 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@93) 15)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@93)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@77 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@98 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)))) (forall (($generated@@144 Int) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@74)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@149) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@92) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert  (and (= (type $generated@@151) $generated@@74) (= (type $generated@@152) $generated@@92)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@92) (= (type $generated@@154) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@153 $generated@@151 $generated@@154)  (or (= $generated@@153 $generated@@152) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@153 $generated@@151 $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@74))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@92) (= (type $generated@@157) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@152) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@156 $generated@@155 $generated@@157))
)))
(assert  (and (= (type $generated@@158) ($generated@@76 $generated@@2)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@74)
 :pattern ( ($generated@@160 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@164) $generated@@92)) (and ($generated@@159 $generated@@163) (and (not (= $generated@@164 $generated@@152)) (= ($generated@@160 $generated@@164) $generated@@155)))) ($generated@@161 ($generated@@98 ($generated@@96 $generated@@163 $generated@@164) $generated@@158) $generated@@46))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@163 $generated@@164) $generated@@158))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@161 $generated@@165 ($generated@@90 0)))
 :pattern ( ($generated@@161 $generated@@165 ($generated@@90 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@74)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@74) (= (type $generated@@172) $generated@@74)) (= (type $generated@@173) $generated@@168)) ($generated@@161 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@161 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@74)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@74)) ($generated@@161 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@161 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@92) (= ($generated@@161 $generated@@187 $generated@@155)  (or (= $generated@@187 $generated@@152) (= ($generated@@160 $generated@@187) $generated@@155))))
 :pattern ( ($generated@@161 $generated@@187 $generated@@155))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 18)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@92 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@77 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@92) (= (type $generated@@238) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@239) ($generated@@76 $generated@@4))) (= (type $generated@@241) $generated@@92)) (= (type $generated@@242) ($generated@@76 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (= (type $generated@@244) $generated@@74))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@92) (= (type $generated@@246) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@245 $generated@@244 $generated@@246) ($generated@@89 $generated@@245 $generated@@151 $generated@@246)))
 :pattern ( ($generated@@89 $generated@@245 $generated@@244 $generated@@246))
)))
(assert (= (type $generated@@247) $generated@@74))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@92) (= (type $generated@@249) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@248 $generated@@247 $generated@@249) ($generated@@89 $generated@@248 $generated@@155 $generated@@249)))
 :pattern ( ($generated@@89 $generated@@248 $generated@@247 $generated@@249))
)))
(assert (= ($generated@@84 $generated@@158) 0))
(assert (forall (($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@76 $generated@@251))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (= ($generated@@250 $generated@@2 $generated@@66 $generated@@72) $generated@@158))
(assert ($generated@@254 $generated@@158))
(assert (= (type $generated@@255) ($generated@@76 ($generated@@91 $generated@@177 $generated@@4))))
(assert (= ($generated@@84 $generated@@255) 0))
(assert (= ($generated@@250 ($generated@@91 $generated@@177 $generated@@4) $generated@@66 $generated@@73) $generated@@255))
(assert ($generated@@254 $generated@@255))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@177)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert  (=> (<= 0 $generated@@256) (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@262) $generated@@92)) (or ($generated@@258 $generated@@261 $generated@@262) (and (not (= 0 $generated@@256)) (and ($generated@@159 $generated@@261) (and (not (= $generated@@262 $generated@@152)) (and ($generated@@161 $generated@@262 $generated@@247) ($generated@@89 $generated@@262 $generated@@247 $generated@@261))))))) ($generated@@257 $generated@@261 $generated@@262)) ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@261 $generated@@262) $generated@@255) ($generated@@259 $generated@@262))))
 :pattern ( ($generated@@257 $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@263 $generated@@265 $generated@@266)) $generated@@168)
 :pattern ( ($generated@@263 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@74) (= (type $generated@@268) $generated@@74)) (= (type $generated@@269) $generated@@177)) (= (type $generated@@270) $generated@@177)) (= ($generated@@161 ($generated@@263 $generated@@269 $generated@@270) ($generated@@167 $generated@@267 $generated@@268))  (and ($generated@@264 $generated@@269 $generated@@267) ($generated@@264 $generated@@270 $generated@@268))))
 :pattern ( ($generated@@161 ($generated@@263 $generated@@269 $generated@@270) ($generated@@167 $generated@@267 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@168) (= (type $generated@@272) $generated@@168)) (= ($generated@@174 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@174 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@276) $generated@@74)) (= ($generated@@161 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@177) ($generated@@0 ($generated@@96 $generated@@275 $generated@@277))) ($generated@@264 $generated@@277 $generated@@276))
 :pattern ( ($generated@@96 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@161 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@74)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@281) $generated@@74)) (= ($generated@@161 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@177) ($generated@@0 ($generated@@96 $generated@@280 $generated@@282))) ($generated@@264 $generated@@282 $generated@@281))
 :pattern ( ($generated@@96 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@161 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@283 $generated@@284) $generated@@284)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@285 $generated@@288) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@74) (= (type $generated@@291) $generated@@74)) (= (type $generated@@292) $generated@@177)) (= (type $generated@@293) $generated@@177)) (= (type $generated@@294) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@159 $generated@@294)) (= ($generated@@89 ($generated@@263 $generated@@292 $generated@@293) ($generated@@167 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@89 ($generated@@263 $generated@@292 $generated@@293) ($generated@@167 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@79)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@168) (= ($generated@@166 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@64)))
 :pattern ( ($generated@@166 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@168) ($generated@@166 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@177) (= (type $generated@@300) $generated@@177)) (= $generated@@298 ($generated@@263 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@166 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 19)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert ($generated@@254 $generated@@60))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@74) (= (type $generated@@311) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@289 ($generated@@259 $generated@@309) $generated@@310 $generated@@311) ($generated@@89 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@289 ($generated@@259 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@313) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@314) $generated@@177)) (= (type $generated@@315) $generated@@74)) ($generated@@147 $generated@@312 $generated@@313)) ($generated@@289 $generated@@314 $generated@@315 $generated@@312)) ($generated@@289 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@147 $generated@@312 $generated@@313) ($generated@@289 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@316) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@317) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@319) $generated@@74)) ($generated@@147 $generated@@316 $generated@@317)) ($generated@@89 $generated@@318 $generated@@319 $generated@@316)) ($generated@@89 $generated@@318 $generated@@319 $generated@@317))
 :pattern ( ($generated@@147 $generated@@316 $generated@@317) ($generated@@89 $generated@@318 $generated@@319 $generated@@316))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@321) $generated@@92)) (=> (and (and ($generated@@159 $generated@@320) (and (not (= $generated@@321 $generated@@152)) (= ($generated@@160 $generated@@321) $generated@@155))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@320 $generated@@321) $generated@@60))) ($generated@@89 ($generated@@98 ($generated@@96 $generated@@320 $generated@@321) $generated@@158) $generated@@46 $generated@@320)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@320 $generated@@321) $generated@@158))
)))
(assert (forall (($generated@@324 T@T) ) (! (= (type ($generated@@323 $generated@@324)) ($generated@@91 $generated@@324 $generated@@2))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@94 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@91 $generated@@326 $generated@@2)) (and (= (= ($generated@@322 $generated@@325) 0) (= $generated@@325 ($generated@@323 $generated@@326))) (=> (not (= ($generated@@322 $generated@@325) 0)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) (< 0 ($generated ($generated@@96 $generated@@325 $generated@@327))))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 20)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@91 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@96 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@96 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert  (and (and (and (and (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (= ($generated@@1 ($generated@@348 $generated@@351 $generated@@352)) 21)) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@349 ($generated@@348 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@348 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@348 $generated@@355 $generated@@356)) $generated@@356)
 :pattern ( ($generated@@348 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@349 (type $generated@@357))))
(= (type ($generated@@346 $generated@@357)) ($generated@@91 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@357))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= (type ($generated@@347 $generated@@359 $generated@@360)) ($generated@@348 $generated@@359 $generated@@360))
 :pattern ( ($generated@@347 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@T) ) (! (let (($generated@@363 (type $generated@@361)))
 (not ($generated@@0 ($generated@@96 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361))))
 :pattern ( (let (($generated@@363 (type $generated@@361)))
($generated@@96 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@366) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@364 $generated@@365 $generated@@366)) (and ($generated@@147 $generated@@365 $generated@@366) (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@77 (type $generated@@368))))
 (=> (and (and (= (type $generated@@367) $generated@@92) (= (type $generated@@368) ($generated@@76 $generated@@369))) (not ($generated@@254 $generated@@368))) (= ($generated@@98 ($generated@@96 $generated@@365 $generated@@367) $generated@@368) ($generated@@98 ($generated@@96 $generated@@366 $generated@@367) $generated@@368))))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@366 $generated@@367) $generated@@368))
))))
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@372) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@373) $generated@@92)) (=> (and (and (and ($generated@@159 $generated@@371) ($generated@@159 $generated@@372)) (and (not (= $generated@@373 $generated@@152)) ($generated@@161 $generated@@373 $generated@@247))) (and ($generated@@370 $generated@@371) ($generated@@147 $generated@@371 $generated@@372))) (=> (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@77 (type $generated@@375))))
 (=> (and (and (= (type $generated@@374) $generated@@92) (= (type $generated@@375) ($generated@@76 $generated@@376))) (and (not (= $generated@@374 $generated@@152)) (or (= $generated@@374 $generated@@373) ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@371 $generated@@373) $generated@@255) ($generated@@259 $generated@@374)))))) (= ($generated@@98 ($generated@@96 $generated@@371 $generated@@374) $generated@@375) ($generated@@98 ($generated@@96 $generated@@372 $generated@@374) $generated@@375))))
 :no-pattern (type $generated@@374)
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
)) (= ($generated@@257 $generated@@371 $generated@@373) ($generated@@257 $generated@@372 $generated@@373)))))
 :pattern ( ($generated@@370 $generated@@371) ($generated@@147 $generated@@371 $generated@@372) ($generated@@257 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@94 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@91 $generated@@378 $generated@@2)) (= ($generated@@183 $generated@@377) (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@378) (and (<= 0 ($generated ($generated@@96 $generated@@377 $generated@@379))) (<= ($generated ($generated@@96 $generated@@377 $generated@@379)) ($generated@@322 $generated@@377))))
 :pattern ( ($generated@@96 $generated@@377 $generated@@379))
)))))
 :pattern ( ($generated@@183 $generated@@377))
)))
(assert (forall (($generated@@381 T@T) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@381)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@177) ($generated@@264 $generated@@383 $generated@@151)) (and (= ($generated@@259 ($generated@@380 $generated@@92 $generated@@383)) $generated@@383) ($generated@@161 ($generated@@380 $generated@@92 $generated@@383) $generated@@151)))
 :pattern ( ($generated@@264 $generated@@383 $generated@@151))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@177) ($generated@@264 $generated@@384 $generated@@244)) (and (= ($generated@@259 ($generated@@380 $generated@@92 $generated@@384)) $generated@@384) ($generated@@161 ($generated@@380 $generated@@92 $generated@@384) $generated@@244)))
 :pattern ( ($generated@@264 $generated@@384 $generated@@244))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@177) ($generated@@264 $generated@@385 $generated@@155)) (and (= ($generated@@259 ($generated@@380 $generated@@92 $generated@@385)) $generated@@385) ($generated@@161 ($generated@@380 $generated@@92 $generated@@385) $generated@@155)))
 :pattern ( ($generated@@264 $generated@@385 $generated@@155))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@177) ($generated@@264 $generated@@386 $generated@@247)) (and (= ($generated@@259 ($generated@@380 $generated@@92 $generated@@386)) $generated@@386) ($generated@@161 ($generated@@380 $generated@@92 $generated@@386) $generated@@247)))
 :pattern ( ($generated@@264 $generated@@386 $generated@@247))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@92) (= ($generated@@161 $generated@@387 $generated@@244)  (and ($generated@@161 $generated@@387 $generated@@151) (not (= $generated@@387 $generated@@152)))))
 :pattern ( ($generated@@161 $generated@@387 $generated@@244))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@92) (= ($generated@@161 $generated@@388 $generated@@247)  (and ($generated@@161 $generated@@388 $generated@@155) (not (= $generated@@388 $generated@@152)))))
 :pattern ( ($generated@@161 $generated@@388 $generated@@247))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@332 (type $generated@@389))))
(let (($generated@@391 ($generated@@331 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@330 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@329 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) ($generated@@0 ($generated@@96 ($generated@@328 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@328 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@332 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394)) ($generated@@91 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@332 (type $generated@@396))))
(let (($generated@@398 ($generated@@331 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@330 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@329 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@397) ($generated@@0 ($generated@@96 ($generated@@393 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@350 (type $generated@@400))))
(let (($generated@@402 ($generated@@349 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@348 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@347 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) ($generated@@0 ($generated@@96 ($generated@@346 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@346 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@350 (type $generated@@405))))
(= (type ($generated@@404 $generated@@405)) ($generated@@91 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@350 (type $generated@@407))))
(let (($generated@@409 ($generated@@349 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@348 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@347 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@408) ($generated@@0 ($generated@@96 ($generated@@404 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@404 $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@412) $generated@@74)) (= ($generated@@161 $generated@@411 ($generated@@182 $generated@@412)) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@177) (< 0 ($generated ($generated@@96 $generated@@411 $generated@@413)))) ($generated@@264 $generated@@413 $generated@@412))
 :pattern ( ($generated@@96 $generated@@411 $generated@@413))
))))
 :pattern ( ($generated@@161 $generated@@411 ($generated@@182 $generated@@412)))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@415) $generated@@74)) (= (type $generated@@416) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@414 ($generated@@273 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@177) ($generated@@0 ($generated@@96 $generated@@414 $generated@@417))) ($generated@@289 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@96 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@89 $generated@@414 ($generated@@273 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@419) $generated@@74)) (= (type $generated@@420) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@418 ($generated@@278 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@177) ($generated@@0 ($generated@@96 $generated@@418 $generated@@421))) ($generated@@289 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@96 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@89 $generated@@418 ($generated@@278 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@96 ($generated@@323 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@96 ($generated@@323 $generated@@423) $generated@@422)))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@425) $generated@@92)) (=> (and (and ($generated@@159 $generated@@424) (and (not (= $generated@@425 $generated@@152)) (= ($generated@@160 $generated@@425) $generated@@155))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@424 $generated@@425) $generated@@60))) ($generated@@89 ($generated@@98 ($generated@@96 $generated@@424 $generated@@425) $generated@@255) ($generated@@273 $generated@@244) $generated@@424)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@424 $generated@@425) $generated@@255))
)))
(assert  (and (forall (($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@428)) ($generated@@91 $generated@@177 $generated@@4))
 :pattern ( ($generated@@426 $generated@@428))
)) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@332 (type $generated@@429))))
(let (($generated@@431 ($generated@@331 (type $generated@@429))))
(= (type ($generated@@427 $generated@@429)) ($generated@@91 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@427 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@330 $generated@@177 $generated@@177)) (= (type $generated@@433) $generated@@177)) (= ($generated@@0 ($generated@@96 ($generated@@426 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@96 ($generated@@328 $generated@@432) ($generated@@175 ($generated@@380 $generated@@168 $generated@@433)))) (= ($generated@@96 ($generated@@427 $generated@@432) ($generated@@175 ($generated@@380 $generated@@168 $generated@@433))) ($generated@@176 ($generated@@380 $generated@@168 $generated@@433))))))
 :pattern ( ($generated@@96 ($generated@@426 $generated@@432) $generated@@433))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) ($generated@@91 $generated@@177 $generated@@4))
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@350 (type $generated@@437))))
(let (($generated@@439 ($generated@@349 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437)) ($generated@@91 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@435 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@348 $generated@@177 $generated@@177)) (= (type $generated@@441) $generated@@177)) (= ($generated@@0 ($generated@@96 ($generated@@434 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@96 ($generated@@346 $generated@@440) ($generated@@175 ($generated@@380 $generated@@168 $generated@@441)))) (= ($generated@@96 ($generated@@435 $generated@@440) ($generated@@175 ($generated@@380 $generated@@168 $generated@@441))) ($generated@@176 ($generated@@380 $generated@@168 $generated@@441))))))
 :pattern ( ($generated@@96 ($generated@@434 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@96 ($generated@@393 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@96 ($generated@@328 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@96 ($generated@@427 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@96 ($generated@@328 $generated@@442) $generated@@446))
 :pattern ( ($generated@@96 ($generated@@427 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@96 ($generated@@393 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@349 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@348 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@96 ($generated@@404 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@96 ($generated@@346 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@96 ($generated@@435 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@96 ($generated@@346 $generated@@447) $generated@@451))
 :pattern ( ($generated@@96 ($generated@@435 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@96 ($generated@@404 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@74)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@330 $generated@@177 $generated@@177)) (= (type $generated@@456) $generated@@74)) (= (type $generated@@457) $generated@@74)) (= (type $generated@@458) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@328 $generated@@455) $generated@@459))) (and ($generated@@289 ($generated@@96 ($generated@@427 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@289 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@96 ($generated@@427 $generated@@455) $generated@@459))
 :pattern ( ($generated@@96 ($generated@@328 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@89 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@74)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@348 $generated@@177 $generated@@177)) (= (type $generated@@464) $generated@@74)) (= (type $generated@@465) $generated@@74)) (= (type $generated@@466) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@346 $generated@@463) $generated@@467))) (and ($generated@@289 ($generated@@96 ($generated@@435 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@289 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@96 ($generated@@435 $generated@@463) $generated@@467))
 :pattern ( ($generated@@96 ($generated@@346 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@89 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
(= (type ($generated@@468 $generated@@469 $generated@@470)) ($generated@@91 $generated@@471 $generated@@4)))
 :pattern ( ($generated@@468 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@473)))
 (=> (and (and (= (type $generated@@472) ($generated@@91 $generated@@475 $generated@@4)) (= (type $generated@@474) $generated@@475)) ($generated@@0 ($generated@@96 $generated@@472 $generated@@474))) ($generated@@0 ($generated@@96 ($generated@@468 $generated@@472 $generated@@473) $generated@@474))))
 :pattern ( ($generated@@468 $generated@@472 $generated@@473) ($generated@@96 $generated@@472 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (! (let (($generated@@479 (type $generated@@477)))
 (=> (and (= (type $generated@@476) ($generated@@91 $generated@@479 $generated@@4)) (= (type $generated@@478) $generated@@479)) (= ($generated@@0 ($generated@@96 ($generated@@468 $generated@@476 $generated@@477) $generated@@478))  (or (= $generated@@478 $generated@@477) ($generated@@0 ($generated@@96 $generated@@476 $generated@@478))))))
 :pattern ( ($generated@@96 ($generated@@468 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@480) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@481) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@482) ($generated@@91 $generated@@92 $generated@@93))) (not (= $generated@@480 $generated@@482))) (and ($generated@@147 $generated@@480 $generated@@481) ($generated@@147 $generated@@481 $generated@@482))) ($generated@@147 $generated@@480 $generated@@482))
 :pattern ( ($generated@@147 $generated@@480 $generated@@481) ($generated@@147 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@T) ) (! (= (type ($generated@@483 $generated@@484)) ($generated@@91 $generated@@484 $generated@@4))
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@350 (type $generated@@485))))
(let (($generated@@487 ($generated@@349 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@348 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@347 $generated@@487 $generated@@486)) (= ($generated@@346 $generated@@485) ($generated@@483 $generated@@487))))))
 :pattern ( ($generated@@346 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@350 (type $generated@@488))))
(let (($generated@@490 ($generated@@349 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@348 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@347 $generated@@490 $generated@@489)) (= ($generated@@404 $generated@@488) ($generated@@483 $generated@@489))))))
 :pattern ( ($generated@@404 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@350 (type $generated@@491))))
(let (($generated@@493 ($generated@@349 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@348 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@347 $generated@@493 $generated@@492)) (= ($generated@@434 $generated@@491) ($generated@@483 $generated@@177))))))
 :pattern ( ($generated@@434 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@332 (type $generated@@494))))
(let (($generated@@496 ($generated@@331 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@330 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@329 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@177) (= (type $generated@@498) $generated@@177)) ($generated@@0 ($generated@@96 ($generated@@426 $generated@@494) ($generated@@259 ($generated@@263 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@426 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@350 (type $generated@@499))))
(let (($generated@@501 ($generated@@349 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@348 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@347 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@177) (= (type $generated@@503) $generated@@177)) ($generated@@0 ($generated@@96 ($generated@@434 $generated@@499) ($generated@@259 ($generated@@263 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@434 $generated@@499))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@80)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@T) ) (!  (=> (and (= (type $generated@@506) $generated@@80) (= (type $generated@@507) $generated@@78)) (and (= ($generated@@504 ($generated@@250 $generated@@508 $generated@@506 $generated@@507)) $generated@@506) (= ($generated@@87 ($generated@@250 $generated@@508 $generated@@506 $generated@@507)) $generated@@507)))
 :pattern ( ($generated@@250 $generated@@508 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@177) ($generated@@264 $generated@@509 $generated@@46)) (and (= ($generated@@259 ($generated@@380 $generated@@2 $generated@@509)) $generated@@509) ($generated@@161 ($generated@@380 $generated@@2 $generated@@509) $generated@@46)))
 :pattern ( ($generated@@264 $generated@@509 $generated@@46))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@177) ($generated@@264 $generated@@510 $generated@@47)) (and (= ($generated@@259 ($generated@@380 $generated@@3 $generated@@510)) $generated@@510) ($generated@@161 ($generated@@380 $generated@@3 $generated@@510) $generated@@47)))
 :pattern ( ($generated@@264 $generated@@510 $generated@@47))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@177) ($generated@@264 $generated@@511 $generated@@44)) (and (= ($generated@@259 ($generated@@380 $generated@@4 $generated@@511)) $generated@@511) ($generated@@161 ($generated@@380 $generated@@4 $generated@@511) $generated@@44)))
 :pattern ( ($generated@@264 $generated@@511 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@512) 22))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@177) ($generated@@264 $generated@@513 $generated@@45)) (and (= ($generated@@259 ($generated@@380 $generated@@512 $generated@@513)) $generated@@513) ($generated@@161 ($generated@@380 $generated@@512 $generated@@513) $generated@@45)))
 :pattern ( ($generated@@264 $generated@@513 $generated@@45))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@74) (= ($generated@@264 ($generated@@259 $generated@@514) $generated@@515) ($generated@@161 $generated@@514 $generated@@515)))
 :pattern ( ($generated@@264 ($generated@@259 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@94 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@91 $generated@@517 $generated@@2)) (<= 0 ($generated@@322 $generated@@516))))
 :pattern ( ($generated@@322 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@304 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@303 $generated@@519)) (<= 0 ($generated@@302 $generated@@518))))
 :pattern ( ($generated@@302 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@74)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@74) (= (type $generated@@523) $generated@@74)) (= ($generated@@520 ($generated@@452 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@452 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@74)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@74) (= (type $generated@@527) $generated@@74)) (= ($generated@@524 ($generated@@452 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@452 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@74) (= (type $generated@@529) $generated@@74)) (= ($generated@@85 ($generated@@452 $generated@@528 $generated@@529)) $generated@@58))
 :pattern ( ($generated@@452 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@74)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@74) (= (type $generated@@533) $generated@@74)) (= ($generated@@530 ($generated@@460 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@460 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@74)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@74) (= (type $generated@@537) $generated@@74)) (= ($generated@@534 ($generated@@460 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@460 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@74) (= (type $generated@@539) $generated@@74)) (= ($generated@@85 ($generated@@460 $generated@@538 $generated@@539)) $generated@@59))
 :pattern ( ($generated@@460 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@177) (= (type $generated@@541) $generated@@177)) (= ($generated@@295 ($generated@@263 $generated@@540 $generated@@541)) $generated@@64))
 :pattern ( ($generated@@263 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@74)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@74) (= (type $generated@@545) $generated@@74)) (= ($generated@@542 ($generated@@167 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@167 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@74)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@74) (= (type $generated@@549) $generated@@74)) (= ($generated@@546 ($generated@@167 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@167 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@177) (= (type $generated@@551) $generated@@177)) (= ($generated@@175 ($generated@@263 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@263 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@177) (= (type $generated@@553) $generated@@177)) (= ($generated@@176 ($generated@@263 $generated@@552 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@263 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@92) ($generated@@161 $generated@@554 $generated@@151))
 :pattern ( ($generated@@161 $generated@@554 $generated@@151))
)))
(assert  (and (forall (($generated@@557 T@U) ) (! (= (type ($generated@@555 $generated@@557)) $generated@@74)
 :pattern ( ($generated@@555 $generated@@557))
)) (forall (($generated@@558 T@U) ($generated@@559 Int) ) (! (let (($generated@@560 ($generated@@304 (type $generated@@558))))
(= (type ($generated@@556 $generated@@558 $generated@@559)) $generated@@560))
 :pattern ( ($generated@@556 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@303 $generated@@177)) (= (type $generated@@562) $generated@@74)) (= (type $generated@@563) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@561 ($generated@@555 $generated@@562) $generated@@563) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@302 $generated@@561))) ($generated@@289 ($generated@@556 $generated@@561 $generated@@564) $generated@@562 $generated@@563))
 :pattern ( ($generated@@556 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@89 $generated@@561 ($generated@@555 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (=> (= (type $generated@@565) ($generated@@91 $generated@@567 $generated@@4)) ($generated@@0 ($generated@@96 ($generated@@468 $generated@@565 $generated@@566) $generated@@566))))
 :pattern ( ($generated@@468 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@90 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@90 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@74)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@74) (= ($generated@@570 ($generated@@273 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@273 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@74) (= ($generated@@85 ($generated@@273 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@273 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@74)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@74) (= ($generated@@574 ($generated@@278 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@278 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@74) (= ($generated@@85 ($generated@@278 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@278 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@74)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@74) (= ($generated@@578 ($generated@@182 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@182 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@74) (= ($generated@@85 ($generated@@182 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@74)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@74) (= ($generated@@582 ($generated@@555 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@555 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@74) (= ($generated@@85 ($generated@@555 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@555 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(= ($generated@@380 $generated@@587 ($generated@@259 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@259 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@330 $generated@@177 $generated@@177)) (= (type $generated@@589) $generated@@74)) (= (type $generated@@590) $generated@@74)) (= ($generated@@161 $generated@@588 ($generated@@452 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@328 $generated@@588) $generated@@591))) (and ($generated@@264 ($generated@@96 ($generated@@427 $generated@@588) $generated@@591) $generated@@590) ($generated@@264 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@96 ($generated@@427 $generated@@588) $generated@@591))
 :pattern ( ($generated@@96 ($generated@@328 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@161 $generated@@588 ($generated@@452 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@348 $generated@@177 $generated@@177)) (= (type $generated@@593) $generated@@74)) (= (type $generated@@594) $generated@@74)) (= ($generated@@161 $generated@@592 ($generated@@460 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@346 $generated@@592) $generated@@595))) (and ($generated@@264 ($generated@@96 ($generated@@435 $generated@@592) $generated@@595) $generated@@594) ($generated@@264 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@96 ($generated@@435 $generated@@592) $generated@@595))
 :pattern ( ($generated@@96 ($generated@@346 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@161 $generated@@592 ($generated@@460 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@177) (= (type $generated@@599) $generated@@177)) (< ($generated@@596 $generated@@598) ($generated@@597 ($generated@@263 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@263 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@177) (= (type $generated@@601) $generated@@177)) (< ($generated@@596 $generated@@601) ($generated@@597 ($generated@@263 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@263 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@177) (= (type $generated@@603) $generated@@74)) (= (type $generated@@604) $generated@@74)) ($generated@@264 $generated@@602 ($generated@@452 $generated@@603 $generated@@604))) (and (= ($generated@@259 ($generated@@380 ($generated@@330 $generated@@177 $generated@@177) $generated@@602)) $generated@@602) ($generated@@161 ($generated@@380 ($generated@@330 $generated@@177 $generated@@177) $generated@@602) ($generated@@452 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@264 $generated@@602 ($generated@@452 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@177) (= (type $generated@@606) $generated@@74)) (= (type $generated@@607) $generated@@74)) ($generated@@264 $generated@@605 ($generated@@460 $generated@@606 $generated@@607))) (and (= ($generated@@259 ($generated@@380 ($generated@@348 $generated@@177 $generated@@177) $generated@@605)) $generated@@605) ($generated@@161 ($generated@@380 ($generated@@348 $generated@@177 $generated@@177) $generated@@605) ($generated@@460 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@264 $generated@@605 ($generated@@460 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@74) (= (type $generated@@609) $generated@@74)) (= (type $generated@@610) $generated@@177)) ($generated@@264 $generated@@610 ($generated@@167 $generated@@608 $generated@@609))) (and (= ($generated@@259 ($generated@@380 $generated@@168 $generated@@610)) $generated@@610) ($generated@@161 ($generated@@380 $generated@@168 $generated@@610) ($generated@@167 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@264 $generated@@610 ($generated@@167 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@612 T@T) ) (! (= (type ($generated@@611 $generated@@612)) ($generated@@91 $generated@@612 $generated@@4))
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@613)))
 (not ($generated@@0 ($generated@@96 ($generated@@611 $generated@@614) $generated@@613))))
 :pattern ( (let (($generated@@614 (type $generated@@613)))
($generated@@96 ($generated@@611 $generated@@614) $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@615)))
 (not ($generated@@0 ($generated@@96 ($generated@@483 $generated@@616) $generated@@615))))
 :pattern ( (let (($generated@@616 (type $generated@@615)))
($generated@@96 ($generated@@483 $generated@@616) $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@81)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@74) (= (type $generated@@620) $generated@@74)) (and (= ($generated@@85 ($generated@@167 $generated@@619 $generated@@620)) $generated@@65) (= ($generated@@617 ($generated@@167 $generated@@619 $generated@@620)) $generated@@70)))
 :pattern ( ($generated@@167 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@168) (= ($generated@@596 ($generated@@259 $generated@@621)) ($generated@@597 $generated@@621)))
 :pattern ( ($generated@@596 ($generated@@259 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@177) ($generated@@264 $generated@@622 ($generated@@90 0))) (and (= ($generated@@259 ($generated@@380 $generated@@2 $generated@@622)) $generated@@622) ($generated@@161 ($generated@@380 ($generated@@91 $generated@@177 $generated@@4) $generated@@622) ($generated@@90 0))))
 :pattern ( ($generated@@264 $generated@@622 ($generated@@90 0)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@177) (= (type $generated@@624) $generated@@74)) ($generated@@264 $generated@@623 ($generated@@273 $generated@@624))) (and (= ($generated@@259 ($generated@@380 ($generated@@91 $generated@@177 $generated@@4) $generated@@623)) $generated@@623) ($generated@@161 ($generated@@380 ($generated@@91 $generated@@177 $generated@@4) $generated@@623) ($generated@@273 $generated@@624))))
 :pattern ( ($generated@@264 $generated@@623 ($generated@@273 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@177) (= (type $generated@@626) $generated@@74)) ($generated@@264 $generated@@625 ($generated@@278 $generated@@626))) (and (= ($generated@@259 ($generated@@380 ($generated@@91 $generated@@177 $generated@@4) $generated@@625)) $generated@@625) ($generated@@161 ($generated@@380 ($generated@@91 $generated@@177 $generated@@4) $generated@@625) ($generated@@278 $generated@@626))))
 :pattern ( ($generated@@264 $generated@@625 ($generated@@278 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@177) (= (type $generated@@628) $generated@@74)) ($generated@@264 $generated@@627 ($generated@@182 $generated@@628))) (and (= ($generated@@259 ($generated@@380 ($generated@@91 $generated@@177 $generated@@2) $generated@@627)) $generated@@627) ($generated@@161 ($generated@@380 ($generated@@91 $generated@@177 $generated@@2) $generated@@627) ($generated@@182 $generated@@628))))
 :pattern ( ($generated@@264 $generated@@627 ($generated@@182 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@177) (= (type $generated@@630) $generated@@74)) ($generated@@264 $generated@@629 ($generated@@555 $generated@@630))) (and (= ($generated@@259 ($generated@@380 ($generated@@303 $generated@@177) $generated@@629)) $generated@@629) ($generated@@161 ($generated@@380 ($generated@@303 $generated@@177) $generated@@629) ($generated@@555 $generated@@630))))
 :pattern ( ($generated@@264 $generated@@629 ($generated@@555 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@634)))
 (=> (and (and (and (= (type $generated@@631) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@632) $generated@@92)) (= (type $generated@@633) ($generated@@76 $generated@@635))) ($generated@@159 ($generated@@97 $generated@@631 $generated@@632 ($generated@@99 ($generated@@96 $generated@@631 $generated@@632) $generated@@633 $generated@@634)))) ($generated@@147 $generated@@631 ($generated@@97 $generated@@631 $generated@@632 ($generated@@99 ($generated@@96 $generated@@631 $generated@@632) $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@97 $generated@@631 $generated@@632 ($generated@@99 ($generated@@96 $generated@@631 $generated@@632) $generated@@633 $generated@@634)))
)))
(assert (= ($generated@@85 $generated@@151) $generated@@62))
(assert (= ($generated@@617 $generated@@151) $generated@@69))
(assert (= ($generated@@85 $generated@@244) $generated@@63))
(assert (= ($generated@@617 $generated@@244) $generated@@69))
(assert (= ($generated@@85 $generated@@155) $generated@@67))
(assert (= ($generated@@617 $generated@@155) $generated@@71))
(assert (= ($generated@@85 $generated@@247) $generated@@68))
(assert (= ($generated@@617 $generated@@247) $generated@@71))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@636) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@637) $generated@@74)) (= (type $generated@@638) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@636 ($generated@@182 $generated@@637) $generated@@638) (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@177) (< 0 ($generated ($generated@@96 $generated@@636 $generated@@639)))) ($generated@@289 $generated@@639 $generated@@637 $generated@@638))
 :pattern ( ($generated@@96 $generated@@636 $generated@@639))
))))
 :pattern ( ($generated@@89 $generated@@636 ($generated@@182 $generated@@637) $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@168) (= (type $generated@@641) $generated@@74)) (= (type $generated@@642) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@159 $generated@@642) (and ($generated@@166 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@74) ($generated@@89 $generated@@640 ($generated@@167 $generated@@641 $generated@@643) $generated@@642))
 :pattern ( ($generated@@89 $generated@@640 ($generated@@167 $generated@@641 $generated@@643) $generated@@642))
))))) ($generated@@289 ($generated@@175 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@289 ($generated@@175 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@168) (= (type $generated@@645) $generated@@74)) (= (type $generated@@646) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@159 $generated@@646) (and ($generated@@166 $generated@@644) (exists (($generated@@647 T@U) ) (!  (and (= (type $generated@@647) $generated@@74) ($generated@@89 $generated@@644 ($generated@@167 $generated@@647 $generated@@645) $generated@@646))
 :pattern ( ($generated@@89 $generated@@644 ($generated@@167 $generated@@647 $generated@@645) $generated@@646))
))))) ($generated@@289 ($generated@@176 $generated@@644) $generated@@645 $generated@@646))
 :pattern ( ($generated@@289 ($generated@@176 $generated@@644) $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@649) $generated@@92)) (and ($generated@@159 $generated@@648) (and (not (= $generated@@649 $generated@@152)) (= ($generated@@160 $generated@@649) $generated@@155)))) ($generated@@161 ($generated@@98 ($generated@@96 $generated@@648 $generated@@649) $generated@@255) ($generated@@273 $generated@@244)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@648 $generated@@649) $generated@@255))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@177) (= (type $generated@@651) $generated@@177)) (= ($generated@@263 ($generated@@285 $generated@@650) ($generated@@285 $generated@@651)) ($generated@@285 ($generated@@263 $generated@@650 $generated@@651))))
 :pattern ( ($generated@@263 ($generated@@285 $generated@@650) ($generated@@285 $generated@@651)))
)))
(assert (forall (($generated@@652 Int) ) (! (= ($generated@@259 ($generated@@8 ($generated@@283 $generated@@652))) ($generated@@285 ($generated@@259 ($generated@@8 $generated@@652))))
 :pattern ( ($generated@@259 ($generated@@8 ($generated@@283 $generated@@652))))
)))
(assert (forall (($generated@@653 T@U) ) (! (= ($generated@@259 ($generated@@285 $generated@@653)) ($generated@@285 ($generated@@259 $generated@@653)))
 :pattern ( ($generated@@259 ($generated@@285 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@304 (type $generated@@654))))
 (=> (and (= (type $generated@@654) ($generated@@303 $generated@@655)) (= ($generated@@302 $generated@@654) 0)) (= $generated@@654 ($generated@@301 $generated@@655))))
 :pattern ( ($generated@@302 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (! (let (($generated@@659 (type $generated@@657)))
 (=> (and (and (= (type $generated@@656) ($generated@@91 $generated@@659 $generated@@2)) (= (type $generated@@658) $generated@@2)) (<= 0 ($generated $generated@@658))) (= ($generated@@322 ($generated@@97 $generated@@656 $generated@@657 $generated@@658)) (+ (- ($generated@@322 $generated@@656) ($generated ($generated@@96 $generated@@656 $generated@@657))) ($generated $generated@@658)))))
 :pattern ( ($generated@@322 ($generated@@97 $generated@@656 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@661) $generated@@2)) ($generated@@89 $generated@@661 $generated@@46 $generated@@660))
 :pattern ( ($generated@@89 $generated@@661 $generated@@46 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@663) $generated@@3)) ($generated@@89 $generated@@663 $generated@@47 $generated@@662))
 :pattern ( ($generated@@89 $generated@@663 $generated@@47 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@665) $generated@@4)) ($generated@@89 $generated@@665 $generated@@44 $generated@@664))
 :pattern ( ($generated@@89 $generated@@665 $generated@@44 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@667) $generated@@512)) ($generated@@89 $generated@@667 $generated@@45 $generated@@666))
 :pattern ( ($generated@@89 $generated@@667 $generated@@45 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@669) $generated@@177)) ($generated@@89 $generated@@669 $generated@@48 $generated@@668))
 :pattern ( ($generated@@89 $generated@@669 $generated@@48 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@303 $generated@@177)) (= (type $generated@@671) $generated@@74)) (= ($generated@@161 $generated@@670 ($generated@@555 $generated@@671)) (forall (($generated@@672 Int) ) (!  (=> (and (<= 0 $generated@@672) (< $generated@@672 ($generated@@302 $generated@@670))) ($generated@@264 ($generated@@556 $generated@@670 $generated@@672) $generated@@671))
 :pattern ( ($generated@@556 $generated@@670 $generated@@672))
))))
 :pattern ( ($generated@@161 $generated@@670 ($generated@@555 $generated@@671)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 Int) ) (!  (=> (= (type $generated@@674) ($generated@@303 $generated@@177)) (=> (and (<= 0 $generated@@675) (< $generated@@675 ($generated@@302 $generated@@674))) (< ($generated@@597 ($generated@@380 $generated@@168 ($generated@@556 $generated@@674 $generated@@675))) ($generated@@673 $generated@@674))))
 :pattern ( ($generated@@597 ($generated@@380 $generated@@168 ($generated@@556 $generated@@674 $generated@@675))))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) ($generated@@330 $generated@@177 $generated@@177)) (= (type $generated@@677) $generated@@74)) (= (type $generated@@678) $generated@@74)) ($generated@@161 $generated@@676 ($generated@@452 $generated@@677 $generated@@678))) (and (and ($generated@@161 ($generated@@328 $generated@@676) ($generated@@273 $generated@@677)) ($generated@@161 ($generated@@393 $generated@@676) ($generated@@273 $generated@@678))) ($generated@@161 ($generated@@426 $generated@@676) ($generated@@273 ($generated@@167 $generated@@677 $generated@@678)))))
 :pattern ( ($generated@@161 $generated@@676 ($generated@@452 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (and (= (type $generated@@679) ($generated@@348 $generated@@177 $generated@@177)) (= (type $generated@@680) $generated@@74)) (= (type $generated@@681) $generated@@74)) ($generated@@161 $generated@@679 ($generated@@460 $generated@@680 $generated@@681))) (and (and ($generated@@161 ($generated@@346 $generated@@679) ($generated@@278 $generated@@680)) ($generated@@161 ($generated@@404 $generated@@679) ($generated@@278 $generated@@681))) ($generated@@161 ($generated@@434 $generated@@679) ($generated@@278 ($generated@@167 $generated@@680 $generated@@681)))))
 :pattern ( ($generated@@161 $generated@@679 ($generated@@460 $generated@@680 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@2) ($generated@@161 $generated@@682 $generated@@46))
 :pattern ( ($generated@@161 $generated@@682 $generated@@46))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@3) ($generated@@161 $generated@@683 $generated@@47))
 :pattern ( ($generated@@161 $generated@@683 $generated@@47))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@4) ($generated@@161 $generated@@684 $generated@@44))
 :pattern ( ($generated@@161 $generated@@684 $generated@@44))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@512) ($generated@@161 $generated@@685 $generated@@45))
 :pattern ( ($generated@@161 $generated@@685 $generated@@45))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@177) ($generated@@161 $generated@@686 $generated@@48))
 :pattern ( ($generated@@161 $generated@@686 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(assert  (and (and (and (and (= (type $generated@@687) ($generated@@190 $generated@@92 $generated@@4)) (= (type $generated@@688) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@690) $generated@@92)) (= (type $generated@@691) ($generated@@91 $generated@@177 $generated@@4))) (= (type $generated@@692) ($generated@@91 $generated@@92 $generated@@93))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@693  (=> (and (= $generated@@687 ($generated@@189 $generated@@152 $generated@@688 $generated@@60 false)) (= $generated@@689 ($generated@@283 0))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@161 ($generated@@468 ($generated@@611 $generated@@177) ($generated@@259 $generated@@690)) ($generated@@273 $generated@@244))) (=> ($generated@@161 ($generated@@468 ($generated@@611 $generated@@177) ($generated@@259 $generated@@690)) ($generated@@273 $generated@@244)) (=> (= $generated@@691 ($generated@@468 ($generated@@611 $generated@@177) ($generated@@259 $generated@@690))) (=> (and (not ($generated@@0 ($generated@@98 ($generated@@96 $generated@@688 $generated@@690) $generated@@60))) (= ($generated ($generated@@98 ($generated@@96 $generated@@688 $generated@@690) $generated@@158)) $generated@@689)) (=> (and (and (and (= ($generated@@98 ($generated@@96 $generated@@688 $generated@@690) $generated@@255) $generated@@691) (= $generated@@692 ($generated@@97 $generated@@688 $generated@@690 ($generated@@99 ($generated@@96 $generated@@688 $generated@@690) $generated@@60 ($generated@@11 true))))) (and ($generated@@159 $generated@@692) ($generated@@370 $generated@@692))) (and (and ($generated@@89 $generated@@690 $generated@@155 $generated@@692) ($generated@@258 $generated@@692 $generated@@690)) (and ($generated@@258 $generated@@692 $generated@@690) ($generated@@257 $generated@@692 $generated@@690)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated ($generated@@98 ($generated@@96 $generated@@692 $generated@@690) $generated@@158)) ($generated@@283 0))) (=> (= ($generated ($generated@@98 ($generated@@96 $generated@@692 $generated@@690) $generated@@158)) ($generated@@283 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@257 $generated@@692 $generated@@690)) (=> ($generated@@257 $generated@@692 $generated@@690) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@694) $generated@@92) ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@692 $generated@@690) $generated@@255) ($generated@@259 $generated@@694)))) (and (not (= $generated@@694 $generated@@152)) (not ($generated@@0 ($generated@@98 ($generated@@96 $generated@@688 $generated@@694) $generated@@60)))))
 :pattern ( ($generated@@96 ($generated@@98 ($generated@@96 $generated@@692 $generated@@690) $generated@@255) ($generated@@259 $generated@@694)))
)))))))))))))))
(let (($generated@@695  (=> (and ($generated@@159 $generated@@688) ($generated@@370 $generated@@688)) (=> (and (and (not (= $generated@@690 $generated@@152)) ($generated@@161 $generated@@690 $generated@@247)) (and (= 1 $generated@@256) (= (ControlFlow 0 6) 2))) $generated@@693))))
$generated@@695)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@194 (T@T T@U T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 (T@U T@U) Bool)
(declare-fun $generated@@202 (T@U T@U) Bool)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@207 (T@U T@U) T@U)
(declare-fun $generated@@208 (T@U T@U) Bool)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@231 (T@U T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@243 (T@T) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@271 (T@T T@T) T@U)
(declare-fun $generated@@272 (T@T T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U T@U) Bool)
(declare-fun $generated@@312 (T@U) Bool)
(declare-fun $generated@@322 (T@T T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@577 (T@U T@U T@U) T@U)
(declare-fun $generated@@578 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@579 (T@T T@T) T@T)
(declare-fun $generated@@580 (T@T) T@T)
(declare-fun $generated@@581 (T@T) T@T)
(declare-fun $generated@@582 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@74) 6) (= (type $generated@@44) $generated@@74)) (= (type $generated@@45) $generated@@74)) (= (type $generated@@46) $generated@@74)) (= (type $generated@@47) $generated@@74)) (= (type $generated@@48) $generated@@74)) (= ($generated@@1 $generated@@75) 7)) (= (type $generated@@49) $generated@@75)) (= (type $generated@@50) $generated@@75)) (= (type $generated@@51) $generated@@75)) (= (type $generated@@52) $generated@@75)) (= (type $generated@@53) $generated@@75)) (= (type $generated@@54) $generated@@75)) (= (type $generated@@55) $generated@@75)) (= (type $generated@@56) $generated@@75)) (= (type $generated@@57) $generated@@75)) (= (type $generated@@58) $generated@@75)) (= (type $generated@@59) $generated@@75)) (forall (($generated@@82 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@82)) 8))) (forall (($generated@@83 T@T) ) (! (= ($generated@@77 ($generated@@76 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@76 $generated@@83))
))) (= (type $generated@@60) ($generated@@76 $generated@@4))) (= ($generated@@1 $generated@@78) 9)) (= (type $generated@@61) $generated@@78)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@75)) (= ($generated@@1 $generated@@79) 10)) (= (type $generated@@64) $generated@@79)) (= (type $generated@@65) $generated@@75)) (= ($generated@@1 $generated@@80) 11)) (= (type $generated@@66) $generated@@80)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= ($generated@@1 $generated@@81) 12)) (= (type $generated@@69) $generated@@81)) (= (type $generated@@70) $generated@@81)) (= (type $generated@@71) $generated@@81)) (= (type $generated@@72) $generated@@78)) (= (type $generated@@73) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)
)
(assert (= ($generated@@84 $generated@@60) 0))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@75)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@44) $generated@@49))
(assert (= ($generated@@85 $generated@@45) $generated@@50))
(assert (= ($generated@@85 $generated@@46) $generated@@51))
(assert (= ($generated@@85 $generated@@47) $generated@@52))
(assert (= ($generated@@85 $generated@@48) $generated@@53))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@78)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@100 $generated@@101)) 13)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@91 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@95 (type $generated@@106))))
(= (type ($generated@@96 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@97 $generated@@109 $generated@@110 $generated@@111)) ($generated@@91 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@95 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@77 (type $generated@@127))))
(= (type ($generated@@98 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@93) 15)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@93)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@77 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@98 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)))) (forall (($generated@@144 Int) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@74)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@149) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@92) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert  (and (= (type $generated@@151) $generated@@74) (= (type $generated@@152) $generated@@92)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@92) (= (type $generated@@154) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@153 $generated@@151 $generated@@154)  (or (= $generated@@153 $generated@@152) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@153 $generated@@151 $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@74))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@92) (= (type $generated@@157) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@152) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@156 $generated@@155 $generated@@157))
)))
(assert  (and (= (type $generated@@158) ($generated@@76 $generated@@2)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@74)
 :pattern ( ($generated@@160 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@164) $generated@@92)) (and ($generated@@159 $generated@@163) (and (not (= $generated@@164 $generated@@152)) (= ($generated@@160 $generated@@164) $generated@@155)))) ($generated@@161 ($generated@@98 ($generated@@96 $generated@@163 $generated@@164) $generated@@158) $generated@@46))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@163 $generated@@164) $generated@@158))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@161 $generated@@165 ($generated@@90 0)))
 :pattern ( ($generated@@161 $generated@@165 ($generated@@90 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@74)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@74) (= (type $generated@@172) $generated@@74)) (= (type $generated@@173) $generated@@168)) ($generated@@161 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@161 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@74)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@74)) ($generated@@161 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@161 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@92) (= ($generated@@161 $generated@@187 $generated@@155)  (or (= $generated@@187 $generated@@152) (= ($generated@@160 $generated@@187) $generated@@155))))
 :pattern ( ($generated@@161 $generated@@187 $generated@@155))
)))
(assert (= (type $generated@@188) $generated@@74))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@92) (= (type $generated@@190) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@189 $generated@@188 $generated@@190) ($generated@@89 $generated@@189 $generated@@151 $generated@@190)))
 :pattern ( ($generated@@89 $generated@@189 $generated@@188 $generated@@190))
)))
(assert (= (type $generated@@191) $generated@@74))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (= (type $generated@@192) $generated@@92) (= (type $generated@@193) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@192 $generated@@191 $generated@@193) ($generated@@89 $generated@@192 $generated@@155 $generated@@193)))
 :pattern ( ($generated@@89 $generated@@192 $generated@@191 $generated@@193))
)))
(assert (= ($generated@@84 $generated@@158) 0))
(assert (forall (($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@76 $generated@@195))
 :pattern ( ($generated@@194 $generated@@195 $generated@@196 $generated@@197))
)))
(assert (= ($generated@@194 $generated@@2 $generated@@66 $generated@@72) $generated@@158))
(assert ($generated@@198 $generated@@158))
(assert (= (type $generated@@199) ($generated@@76 ($generated@@91 $generated@@177 $generated@@4))))
(assert (= ($generated@@84 $generated@@199) 0))
(assert (= ($generated@@194 ($generated@@91 $generated@@177 $generated@@4) $generated@@66 $generated@@73) $generated@@199))
(assert ($generated@@198 $generated@@199))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@203 $generated@@204)) $generated@@177)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert  (=> (<= 0 $generated@@200) (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (and (= (type $generated@@205) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@206) $generated@@92)) (or ($generated@@202 $generated@@205 $generated@@206) (and (not (= 0 $generated@@200)) (and ($generated@@159 $generated@@205) (and (not (= $generated@@206 $generated@@152)) (and ($generated@@161 $generated@@206 $generated@@191) ($generated@@89 $generated@@206 $generated@@191 $generated@@205))))))) ($generated@@201 $generated@@205 $generated@@206)) ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@205 $generated@@206) $generated@@199) ($generated@@203 $generated@@206))))
 :pattern ( ($generated@@201 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@209 $generated@@210)) $generated@@168)
 :pattern ( ($generated@@207 $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (= (type $generated@@211) $generated@@74) (= (type $generated@@212) $generated@@74)) (= (type $generated@@213) $generated@@177)) (= (type $generated@@214) $generated@@177)) (= ($generated@@161 ($generated@@207 $generated@@213 $generated@@214) ($generated@@167 $generated@@211 $generated@@212))  (and ($generated@@208 $generated@@213 $generated@@211) ($generated@@208 $generated@@214 $generated@@212))))
 :pattern ( ($generated@@161 ($generated@@207 $generated@@213 $generated@@214) ($generated@@167 $generated@@211 $generated@@212)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@168) (= (type $generated@@216) $generated@@168)) (= ($generated@@174 $generated@@215 $generated@@216) (= $generated@@215 $generated@@216)))
 :pattern ( ($generated@@174 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (= (type ($generated@@217 $generated@@218)) $generated@@74)
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@220) $generated@@74)) (= ($generated@@161 $generated@@219 ($generated@@217 $generated@@220)) (forall (($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@177) ($generated@@0 ($generated@@96 $generated@@219 $generated@@221))) ($generated@@208 $generated@@221 $generated@@220))
 :pattern ( ($generated@@96 $generated@@219 $generated@@221))
))))
 :pattern ( ($generated@@161 $generated@@219 ($generated@@217 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ) (! (= (type ($generated@@222 $generated@@223)) $generated@@74)
 :pattern ( ($generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@225) $generated@@74)) (= ($generated@@161 $generated@@224 ($generated@@222 $generated@@225)) (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@177) ($generated@@0 ($generated@@96 $generated@@224 $generated@@226))) ($generated@@208 $generated@@226 $generated@@225))
 :pattern ( ($generated@@96 $generated@@224 $generated@@226))
))))
 :pattern ( ($generated@@161 $generated@@224 ($generated@@222 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(= (type ($generated@@227 $generated@@228)) $generated@@229))
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ) (! (= ($generated@@227 $generated@@230) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@232) $generated@@74) (= (type $generated@@233) $generated@@74)) (= (type $generated@@234) $generated@@177)) (= (type $generated@@235) $generated@@177)) (= (type $generated@@236) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@159 $generated@@236)) (= ($generated@@89 ($generated@@207 $generated@@234 $generated@@235) ($generated@@167 $generated@@232 $generated@@233) $generated@@236)  (and ($generated@@231 $generated@@234 $generated@@232 $generated@@236) ($generated@@231 $generated@@235 $generated@@233 $generated@@236))))
 :pattern ( ($generated@@89 ($generated@@207 $generated@@234 $generated@@235) ($generated@@167 $generated@@232 $generated@@233) $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@79)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ) (!  (=> (= (type $generated@@239) $generated@@168) (= ($generated@@166 $generated@@239) (= ($generated@@237 $generated@@239) $generated@@64)))
 :pattern ( ($generated@@166 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@168) ($generated@@166 $generated@@240)) (exists (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (and (and (= (type $generated@@241) $generated@@177) (= (type $generated@@242) $generated@@177)) (= $generated@@240 ($generated@@207 $generated@@241 $generated@@242)))
 :no-pattern (type $generated@@241)
 :no-pattern (type $generated@@242)
 :no-pattern ($generated $generated@@241)
 :no-pattern ($generated@@0 $generated@@241)
 :no-pattern ($generated $generated@@242)
 :no-pattern ($generated@@0 $generated@@242)
)))
 :pattern ( ($generated@@166 $generated@@240))
)))
(assert  (and (and (forall (($generated@@247 T@T) ) (= ($generated@@1 ($generated@@245 $generated@@247)) 18)) (forall (($generated@@248 T@T) ) (! (= ($generated@@246 ($generated@@245 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
))) (forall (($generated@@249 T@T) ) (! (= (type ($generated@@243 $generated@@249)) ($generated@@245 $generated@@249))
 :pattern ( ($generated@@243 $generated@@249))
))))
(assert (forall (($generated@@250 T@T) ) (! (= ($generated@@244 ($generated@@243 $generated@@250)) 0)
 :pattern ( ($generated@@243 $generated@@250))
)))
(assert ($generated@@198 $generated@@60))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@74) (= (type $generated@@253) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@231 ($generated@@203 $generated@@251) $generated@@252 $generated@@253) ($generated@@89 $generated@@251 $generated@@252 $generated@@253)))
 :pattern ( ($generated@@231 ($generated@@203 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@255) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@256) $generated@@177)) (= (type $generated@@257) $generated@@74)) ($generated@@147 $generated@@254 $generated@@255)) ($generated@@231 $generated@@256 $generated@@257 $generated@@254)) ($generated@@231 $generated@@256 $generated@@257 $generated@@255))
 :pattern ( ($generated@@147 $generated@@254 $generated@@255) ($generated@@231 $generated@@256 $generated@@257 $generated@@254))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@258) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@259) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@261) $generated@@74)) ($generated@@147 $generated@@258 $generated@@259)) ($generated@@89 $generated@@260 $generated@@261 $generated@@258)) ($generated@@89 $generated@@260 $generated@@261 $generated@@259))
 :pattern ( ($generated@@147 $generated@@258 $generated@@259) ($generated@@89 $generated@@260 $generated@@261 $generated@@258))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@263) $generated@@92)) (=> (and (and ($generated@@159 $generated@@262) (and (not (= $generated@@263 $generated@@152)) (= ($generated@@160 $generated@@263) $generated@@155))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@262 $generated@@263) $generated@@60))) ($generated@@89 ($generated@@98 ($generated@@96 $generated@@262 $generated@@263) $generated@@158) $generated@@46 $generated@@262)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@262 $generated@@263) $generated@@158))
)))
(assert (forall (($generated@@266 T@T) ) (! (= (type ($generated@@265 $generated@@266)) ($generated@@91 $generated@@266 $generated@@2))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@94 (type $generated@@267))))
 (=> (= (type $generated@@267) ($generated@@91 $generated@@268 $generated@@2)) (and (= (= ($generated@@264 $generated@@267) 0) (= $generated@@267 ($generated@@265 $generated@@268))) (=> (not (= ($generated@@264 $generated@@267) 0)) (exists (($generated@@269 T@U) ) (!  (and (= (type $generated@@269) $generated@@268) (< 0 ($generated ($generated@@96 $generated@@267 $generated@@269))))
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
))))))
 :pattern ( ($generated@@264 $generated@@267))
)))
(assert  (and (and (and (and (forall (($generated@@275 T@T) ($generated@@276 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@275 $generated@@276)) 19)) (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@277 $generated@@278)) $generated@@277)
 :pattern ( ($generated@@272 $generated@@277 $generated@@278))
))) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@272 $generated@@279 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@272 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@273 (type $generated@@281))))
(= (type ($generated@@270 $generated@@281)) ($generated@@91 $generated@@282 $generated@@4)))
 :pattern ( ($generated@@270 $generated@@281))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= (type ($generated@@271 $generated@@283 $generated@@284)) ($generated@@272 $generated@@283 $generated@@284))
 :pattern ( ($generated@@271 $generated@@283 $generated@@284))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@T) ) (! (let (($generated@@287 (type $generated@@285)))
 (not ($generated@@0 ($generated@@96 ($generated@@270 ($generated@@271 $generated@@287 $generated@@286)) $generated@@285))))
 :pattern ( (let (($generated@@287 (type $generated@@285)))
($generated@@96 ($generated@@270 ($generated@@271 $generated@@287 $generated@@286)) $generated@@285)))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 20)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@91 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@96 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@96 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@307) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@308) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@306 $generated@@307 $generated@@308)) (and ($generated@@147 $generated@@307 $generated@@308) (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@77 (type $generated@@310))))
 (=> (and (and (= (type $generated@@309) $generated@@92) (= (type $generated@@310) ($generated@@76 $generated@@311))) (not ($generated@@198 $generated@@310))) (= ($generated@@98 ($generated@@96 $generated@@307 $generated@@309) $generated@@310) ($generated@@98 ($generated@@96 $generated@@308 $generated@@309) $generated@@310))))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@308 $generated@@309) $generated@@310))
))))
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (= (type $generated@@313) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@314) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@315) $generated@@92)) (=> (and (and (and ($generated@@159 $generated@@313) ($generated@@159 $generated@@314)) (and (not (= $generated@@315 $generated@@152)) ($generated@@161 $generated@@315 $generated@@191))) (and ($generated@@312 $generated@@313) ($generated@@147 $generated@@313 $generated@@314))) (=> (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@77 (type $generated@@317))))
 (=> (and (and (= (type $generated@@316) $generated@@92) (= (type $generated@@317) ($generated@@76 $generated@@318))) (and (not (= $generated@@316 $generated@@152)) (or (= $generated@@316 $generated@@315) ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@313 $generated@@315) $generated@@199) ($generated@@203 $generated@@316)))))) (= ($generated@@98 ($generated@@96 $generated@@313 $generated@@316) $generated@@317) ($generated@@98 ($generated@@96 $generated@@314 $generated@@316) $generated@@317))))
 :no-pattern (type $generated@@316)
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)) (= ($generated@@201 $generated@@313 $generated@@315) ($generated@@201 $generated@@314 $generated@@315)))))
 :pattern ( ($generated@@312 $generated@@313) ($generated@@147 $generated@@313 $generated@@314) ($generated@@201 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@94 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@91 $generated@@320 $generated@@2)) (= ($generated@@183 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (and (<= 0 ($generated ($generated@@96 $generated@@319 $generated@@321))) (<= ($generated ($generated@@96 $generated@@319 $generated@@321)) ($generated@@264 $generated@@319))))
 :pattern ( ($generated@@96 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@183 $generated@@319))
)))
(assert (forall (($generated@@323 T@T) ($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@322 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@177) ($generated@@208 $generated@@325 $generated@@151)) (and (= ($generated@@203 ($generated@@322 $generated@@92 $generated@@325)) $generated@@325) ($generated@@161 ($generated@@322 $generated@@92 $generated@@325) $generated@@151)))
 :pattern ( ($generated@@208 $generated@@325 $generated@@151))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@177) ($generated@@208 $generated@@326 $generated@@188)) (and (= ($generated@@203 ($generated@@322 $generated@@92 $generated@@326)) $generated@@326) ($generated@@161 ($generated@@322 $generated@@92 $generated@@326) $generated@@188)))
 :pattern ( ($generated@@208 $generated@@326 $generated@@188))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@177) ($generated@@208 $generated@@327 $generated@@155)) (and (= ($generated@@203 ($generated@@322 $generated@@92 $generated@@327)) $generated@@327) ($generated@@161 ($generated@@322 $generated@@92 $generated@@327) $generated@@155)))
 :pattern ( ($generated@@208 $generated@@327 $generated@@155))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@177) ($generated@@208 $generated@@328 $generated@@191)) (and (= ($generated@@203 ($generated@@322 $generated@@92 $generated@@328)) $generated@@328) ($generated@@161 ($generated@@322 $generated@@92 $generated@@328) $generated@@191)))
 :pattern ( ($generated@@208 $generated@@328 $generated@@191))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@92) (= ($generated@@161 $generated@@329 $generated@@188)  (and ($generated@@161 $generated@@329 $generated@@151) (not (= $generated@@329 $generated@@152)))))
 :pattern ( ($generated@@161 $generated@@329 $generated@@188))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@92) (= ($generated@@161 $generated@@330 $generated@@191)  (and ($generated@@161 $generated@@330 $generated@@155) (not (= $generated@@330 $generated@@152)))))
 :pattern ( ($generated@@161 $generated@@330 $generated@@191))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@274 (type $generated@@331))))
(let (($generated@@333 ($generated@@273 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@272 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@271 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@96 ($generated@@270 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@270 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@274 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@91 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@274 (type $generated@@338))))
(let (($generated@@340 ($generated@@273 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@272 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@271 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@96 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@96 ($generated@@288 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@288 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@292 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@91 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@292 (type $generated@@349))))
(let (($generated@@351 ($generated@@291 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@290 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@289 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@96 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@354) $generated@@74)) (= ($generated@@161 $generated@@353 ($generated@@182 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@177) (< 0 ($generated ($generated@@96 $generated@@353 $generated@@355)))) ($generated@@208 $generated@@355 $generated@@354))
 :pattern ( ($generated@@96 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@161 $generated@@353 ($generated@@182 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@357) $generated@@74)) (= (type $generated@@358) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@356 ($generated@@217 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@177) ($generated@@0 ($generated@@96 $generated@@356 $generated@@359))) ($generated@@231 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@96 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@89 $generated@@356 ($generated@@217 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@361) $generated@@74)) (= (type $generated@@362) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@360 ($generated@@222 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@177) ($generated@@0 ($generated@@96 $generated@@360 $generated@@363))) ($generated@@231 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@96 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@89 $generated@@360 ($generated@@222 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= ($generated ($generated@@96 ($generated@@265 $generated@@365) $generated@@364)) 0))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@96 ($generated@@265 $generated@@365) $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@367) $generated@@92)) (=> (and (and ($generated@@159 $generated@@366) (and (not (= $generated@@367 $generated@@152)) (= ($generated@@160 $generated@@367) $generated@@155))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@366 $generated@@367) $generated@@60))) ($generated@@89 ($generated@@98 ($generated@@96 $generated@@366 $generated@@367) $generated@@199) ($generated@@217 $generated@@188) $generated@@366)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@366 $generated@@367) $generated@@199))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@91 $generated@@177 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@274 (type $generated@@371))))
(let (($generated@@373 ($generated@@273 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@91 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@272 $generated@@177 $generated@@177)) (= (type $generated@@375) $generated@@177)) (= ($generated@@0 ($generated@@96 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@96 ($generated@@270 $generated@@374) ($generated@@175 ($generated@@322 $generated@@168 $generated@@375)))) (= ($generated@@96 ($generated@@369 $generated@@374) ($generated@@175 ($generated@@322 $generated@@168 $generated@@375))) ($generated@@176 ($generated@@322 $generated@@168 $generated@@375))))))
 :pattern ( ($generated@@96 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@91 $generated@@177 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@292 (type $generated@@379))))
(let (($generated@@381 ($generated@@291 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@91 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@290 $generated@@177 $generated@@177)) (= (type $generated@@383) $generated@@177)) (= ($generated@@0 ($generated@@96 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@96 ($generated@@288 $generated@@382) ($generated@@175 ($generated@@322 $generated@@168 $generated@@383)))) (= ($generated@@96 ($generated@@377 $generated@@382) ($generated@@175 ($generated@@322 $generated@@168 $generated@@383))) ($generated@@176 ($generated@@322 $generated@@168 $generated@@383))))))
 :pattern ( ($generated@@96 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@273 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@272 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@96 ($generated@@335 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@96 ($generated@@270 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@96 ($generated@@369 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@96 ($generated@@270 $generated@@384) $generated@@388))
 :pattern ( ($generated@@96 ($generated@@369 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@96 ($generated@@335 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@291 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@290 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@96 ($generated@@346 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@96 ($generated@@288 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@96 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@96 ($generated@@288 $generated@@389) $generated@@393))
 :pattern ( ($generated@@96 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@96 ($generated@@346 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@74)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@272 $generated@@177 $generated@@177)) (= (type $generated@@398) $generated@@74)) (= (type $generated@@399) $generated@@74)) (= (type $generated@@400) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@270 $generated@@397) $generated@@401))) (and ($generated@@231 ($generated@@96 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@231 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@96 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@96 ($generated@@270 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@89 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@74)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@290 $generated@@177 $generated@@177)) (= (type $generated@@406) $generated@@74)) (= (type $generated@@407) $generated@@74)) (= (type $generated@@408) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@288 $generated@@405) $generated@@409))) (and ($generated@@231 ($generated@@96 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@231 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@96 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@96 ($generated@@288 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@89 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@410) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@411) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@412) ($generated@@91 $generated@@92 $generated@@93))) (not (= $generated@@410 $generated@@412))) (and ($generated@@147 $generated@@410 $generated@@411) ($generated@@147 $generated@@411 $generated@@412))) ($generated@@147 $generated@@410 $generated@@412))
 :pattern ( ($generated@@147 $generated@@410 $generated@@411) ($generated@@147 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@91 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@292 (type $generated@@415))))
(let (($generated@@417 ($generated@@291 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@290 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@289 $generated@@417 $generated@@416)) (= ($generated@@288 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@288 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@292 (type $generated@@418))))
(let (($generated@@420 ($generated@@291 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@290 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@289 $generated@@420 $generated@@419)) (= ($generated@@346 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@346 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@292 (type $generated@@421))))
(let (($generated@@423 ($generated@@291 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@290 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@289 $generated@@423 $generated@@422)) (= ($generated@@376 $generated@@421) ($generated@@413 $generated@@177))))))
 :pattern ( ($generated@@376 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@274 (type $generated@@424))))
(let (($generated@@426 ($generated@@273 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@272 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@271 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@177) (= (type $generated@@428) $generated@@177)) ($generated@@0 ($generated@@96 ($generated@@368 $generated@@424) ($generated@@203 ($generated@@207 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@368 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@292 (type $generated@@429))))
(let (($generated@@431 ($generated@@291 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@290 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@289 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@177) (= (type $generated@@433) $generated@@177)) ($generated@@0 ($generated@@96 ($generated@@376 $generated@@429) ($generated@@203 ($generated@@207 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@376 $generated@@429))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@80)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@T) ) (!  (=> (and (= (type $generated@@436) $generated@@80) (= (type $generated@@437) $generated@@78)) (and (= ($generated@@434 ($generated@@194 $generated@@438 $generated@@436 $generated@@437)) $generated@@436) (= ($generated@@87 ($generated@@194 $generated@@438 $generated@@436 $generated@@437)) $generated@@437)))
 :pattern ( ($generated@@194 $generated@@438 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@177) ($generated@@208 $generated@@439 $generated@@46)) (and (= ($generated@@203 ($generated@@322 $generated@@2 $generated@@439)) $generated@@439) ($generated@@161 ($generated@@322 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@208 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@177) ($generated@@208 $generated@@440 $generated@@47)) (and (= ($generated@@203 ($generated@@322 $generated@@3 $generated@@440)) $generated@@440) ($generated@@161 ($generated@@322 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@208 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@177) ($generated@@208 $generated@@441 $generated@@44)) (and (= ($generated@@203 ($generated@@322 $generated@@4 $generated@@441)) $generated@@441) ($generated@@161 ($generated@@322 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@208 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 21))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@177) ($generated@@208 $generated@@443 $generated@@45)) (and (= ($generated@@203 ($generated@@322 $generated@@442 $generated@@443)) $generated@@443) ($generated@@161 ($generated@@322 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@208 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@74) (= ($generated@@208 ($generated@@203 $generated@@444) $generated@@445) ($generated@@161 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@208 ($generated@@203 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@94 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@91 $generated@@447 $generated@@2)) (<= 0 ($generated@@264 $generated@@446))))
 :pattern ( ($generated@@264 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@246 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@245 $generated@@449)) (<= 0 ($generated@@244 $generated@@448))))
 :pattern ( ($generated@@244 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@74)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@74) (= (type $generated@@453) $generated@@74)) (= ($generated@@450 ($generated@@394 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@74)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@74) (= (type $generated@@457) $generated@@74)) (= ($generated@@454 ($generated@@394 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@394 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@74) (= (type $generated@@459) $generated@@74)) (= ($generated@@85 ($generated@@394 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@74)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@74) (= (type $generated@@463) $generated@@74)) (= ($generated@@460 ($generated@@402 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@74)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@74) (= (type $generated@@467) $generated@@74)) (= ($generated@@464 ($generated@@402 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@402 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@74) (= (type $generated@@469) $generated@@74)) (= ($generated@@85 ($generated@@402 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@177) (= (type $generated@@471) $generated@@177)) (= ($generated@@237 ($generated@@207 $generated@@470 $generated@@471)) $generated@@64))
 :pattern ( ($generated@@207 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@74)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@74) (= (type $generated@@475) $generated@@74)) (= ($generated@@472 ($generated@@167 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@167 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@74)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@74) (= (type $generated@@479) $generated@@74)) (= ($generated@@476 ($generated@@167 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@167 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@177) (= (type $generated@@481) $generated@@177)) (= ($generated@@175 ($generated@@207 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@207 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@177) (= (type $generated@@483) $generated@@177)) (= ($generated@@176 ($generated@@207 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@207 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@92) ($generated@@161 $generated@@484 $generated@@151))
 :pattern ( ($generated@@161 $generated@@484 $generated@@151))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@74)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@246 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@245 $generated@@177)) (= (type $generated@@492) $generated@@74)) (= (type $generated@@493) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@244 $generated@@491))) ($generated@@231 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@89 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@90 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@90 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@74)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@74) (= ($generated@@497 ($generated@@217 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@217 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@74) (= ($generated@@85 ($generated@@217 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@217 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@74)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@74) (= ($generated@@501 ($generated@@222 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@222 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@74) (= ($generated@@85 ($generated@@222 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@222 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@74)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@74) (= ($generated@@505 ($generated@@182 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@182 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@74) (= ($generated@@85 ($generated@@182 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@74)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@74) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@74) (= ($generated@@85 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@322 $generated@@514 ($generated@@203 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@203 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@272 $generated@@177 $generated@@177)) (= (type $generated@@516) $generated@@74)) (= (type $generated@@517) $generated@@74)) (= ($generated@@161 $generated@@515 ($generated@@394 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@270 $generated@@515) $generated@@518))) (and ($generated@@208 ($generated@@96 ($generated@@369 $generated@@515) $generated@@518) $generated@@517) ($generated@@208 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@96 ($generated@@369 $generated@@515) $generated@@518))
 :pattern ( ($generated@@96 ($generated@@270 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@161 $generated@@515 ($generated@@394 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@290 $generated@@177 $generated@@177)) (= (type $generated@@520) $generated@@74)) (= (type $generated@@521) $generated@@74)) (= ($generated@@161 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@288 $generated@@519) $generated@@522))) (and ($generated@@208 ($generated@@96 ($generated@@377 $generated@@519) $generated@@522) $generated@@521) ($generated@@208 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@96 ($generated@@377 $generated@@519) $generated@@522))
 :pattern ( ($generated@@96 ($generated@@288 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@161 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@177) (= (type $generated@@526) $generated@@177)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@207 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@207 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@177) (= (type $generated@@528) $generated@@177)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@207 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@207 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@177) (= (type $generated@@530) $generated@@74)) (= (type $generated@@531) $generated@@74)) ($generated@@208 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@203 ($generated@@322 ($generated@@272 $generated@@177 $generated@@177) $generated@@529)) $generated@@529) ($generated@@161 ($generated@@322 ($generated@@272 $generated@@177 $generated@@177) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@208 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@177) (= (type $generated@@533) $generated@@74)) (= (type $generated@@534) $generated@@74)) ($generated@@208 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@203 ($generated@@322 ($generated@@290 $generated@@177 $generated@@177) $generated@@532)) $generated@@532) ($generated@@161 ($generated@@322 ($generated@@290 $generated@@177 $generated@@177) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@208 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@74) (= (type $generated@@536) $generated@@74)) (= (type $generated@@537) $generated@@177)) ($generated@@208 $generated@@537 ($generated@@167 $generated@@535 $generated@@536))) (and (= ($generated@@203 ($generated@@322 $generated@@168 $generated@@537)) $generated@@537) ($generated@@161 ($generated@@322 $generated@@168 $generated@@537) ($generated@@167 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@208 $generated@@537 ($generated@@167 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@96 ($generated@@413 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@96 ($generated@@413 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@81)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@74) (= (type $generated@@543) $generated@@74)) (and (= ($generated@@85 ($generated@@167 $generated@@542 $generated@@543)) $generated@@65) (= ($generated@@540 ($generated@@167 $generated@@542 $generated@@543)) $generated@@70)))
 :pattern ( ($generated@@167 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@168) (= ($generated@@523 ($generated@@203 $generated@@544)) ($generated@@524 $generated@@544)))
 :pattern ( ($generated@@523 ($generated@@203 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@177) ($generated@@208 $generated@@545 ($generated@@90 0))) (and (= ($generated@@203 ($generated@@322 $generated@@2 $generated@@545)) $generated@@545) ($generated@@161 ($generated@@322 ($generated@@91 $generated@@177 $generated@@4) $generated@@545) ($generated@@90 0))))
 :pattern ( ($generated@@208 $generated@@545 ($generated@@90 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@177) (= (type $generated@@547) $generated@@74)) ($generated@@208 $generated@@546 ($generated@@217 $generated@@547))) (and (= ($generated@@203 ($generated@@322 ($generated@@91 $generated@@177 $generated@@4) $generated@@546)) $generated@@546) ($generated@@161 ($generated@@322 ($generated@@91 $generated@@177 $generated@@4) $generated@@546) ($generated@@217 $generated@@547))))
 :pattern ( ($generated@@208 $generated@@546 ($generated@@217 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@177) (= (type $generated@@549) $generated@@74)) ($generated@@208 $generated@@548 ($generated@@222 $generated@@549))) (and (= ($generated@@203 ($generated@@322 ($generated@@91 $generated@@177 $generated@@4) $generated@@548)) $generated@@548) ($generated@@161 ($generated@@322 ($generated@@91 $generated@@177 $generated@@4) $generated@@548) ($generated@@222 $generated@@549))))
 :pattern ( ($generated@@208 $generated@@548 ($generated@@222 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@177) (= (type $generated@@551) $generated@@74)) ($generated@@208 $generated@@550 ($generated@@182 $generated@@551))) (and (= ($generated@@203 ($generated@@322 ($generated@@91 $generated@@177 $generated@@2) $generated@@550)) $generated@@550) ($generated@@161 ($generated@@322 ($generated@@91 $generated@@177 $generated@@2) $generated@@550) ($generated@@182 $generated@@551))))
 :pattern ( ($generated@@208 $generated@@550 ($generated@@182 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@177) (= (type $generated@@553) $generated@@74)) ($generated@@208 $generated@@552 ($generated@@485 $generated@@553))) (and (= ($generated@@203 ($generated@@322 ($generated@@245 $generated@@177) $generated@@552)) $generated@@552) ($generated@@161 ($generated@@322 ($generated@@245 $generated@@177) $generated@@552) ($generated@@485 $generated@@553))))
 :pattern ( ($generated@@208 $generated@@552 ($generated@@485 $generated@@553)))
)))
(assert (= ($generated@@85 $generated@@151) $generated@@62))
(assert (= ($generated@@540 $generated@@151) $generated@@69))
(assert (= ($generated@@85 $generated@@188) $generated@@63))
(assert (= ($generated@@540 $generated@@188) $generated@@69))
(assert (= ($generated@@85 $generated@@155) $generated@@67))
(assert (= ($generated@@540 $generated@@155) $generated@@71))
(assert (= ($generated@@85 $generated@@191) $generated@@68))
(assert (= ($generated@@540 $generated@@191) $generated@@71))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@555) $generated@@74)) (= (type $generated@@556) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@554 ($generated@@182 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@177) (< 0 ($generated ($generated@@96 $generated@@554 $generated@@557)))) ($generated@@231 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@96 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@89 $generated@@554 ($generated@@182 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@168) (= (type $generated@@559) $generated@@74)) (= (type $generated@@560) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@159 $generated@@560) (and ($generated@@166 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@74) ($generated@@89 $generated@@558 ($generated@@167 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@89 $generated@@558 ($generated@@167 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@231 ($generated@@175 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@231 ($generated@@175 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@168) (= (type $generated@@563) $generated@@74)) (= (type $generated@@564) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@159 $generated@@564) (and ($generated@@166 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@74) ($generated@@89 $generated@@562 ($generated@@167 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@89 $generated@@562 ($generated@@167 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@231 ($generated@@176 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@231 ($generated@@176 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@567) $generated@@92)) (and ($generated@@159 $generated@@566) (and (not (= $generated@@567 $generated@@152)) (= ($generated@@160 $generated@@567) $generated@@155)))) ($generated@@161 ($generated@@98 ($generated@@96 $generated@@566 $generated@@567) $generated@@199) ($generated@@217 $generated@@188)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@566 $generated@@567) $generated@@199))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@177) (= (type $generated@@569) $generated@@177)) (= ($generated@@207 ($generated@@227 $generated@@568) ($generated@@227 $generated@@569)) ($generated@@227 ($generated@@207 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@207 ($generated@@227 $generated@@568) ($generated@@227 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= ($generated@@203 ($generated@@227 $generated@@570)) ($generated@@227 ($generated@@203 $generated@@570)))
 :pattern ( ($generated@@203 ($generated@@227 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@246 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@245 $generated@@572)) (= ($generated@@244 $generated@@571) 0)) (= $generated@@571 ($generated@@243 $generated@@572))))
 :pattern ( ($generated@@244 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (and (and (= (type $generated@@573) ($generated@@91 $generated@@576 $generated@@2)) (= (type $generated@@575) $generated@@2)) (<= 0 ($generated $generated@@575))) (= ($generated@@264 ($generated@@97 $generated@@573 $generated@@574 $generated@@575)) (+ (- ($generated@@264 $generated@@573) ($generated ($generated@@96 $generated@@573 $generated@@574))) ($generated $generated@@575)))))
 :pattern ( ($generated@@264 ($generated@@97 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@583 T@T) ($generated@@584 T@T) ) (= ($generated@@1 ($generated@@579 $generated@@583 $generated@@584)) 22)) (forall (($generated@@585 T@T) ($generated@@586 T@T) ) (! (= ($generated@@580 ($generated@@579 $generated@@585 $generated@@586)) $generated@@585)
 :pattern ( ($generated@@579 $generated@@585 $generated@@586))
))) (forall (($generated@@587 T@T) ($generated@@588 T@T) ) (! (= ($generated@@581 ($generated@@579 $generated@@587 $generated@@588)) $generated@@588)
 :pattern ( ($generated@@579 $generated@@587 $generated@@588))
))) (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@581 (type $generated@@589))))
(= (type ($generated@@577 $generated@@589 $generated@@590 $generated@@591)) $generated@@592))
 :pattern ( ($generated@@577 $generated@@589 $generated@@590 $generated@@591))
))) (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(let (($generated@@598 (type $generated@@594)))
(= (type ($generated@@582 $generated@@593 $generated@@594 $generated@@595 $generated@@596)) ($generated@@579 $generated@@598 $generated@@597))))
 :pattern ( ($generated@@582 $generated@@593 $generated@@594 $generated@@595 $generated@@596))
))) (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@581 (type $generated@@599))))
 (=> (= (type $generated@@602) $generated@@603) (= ($generated@@577 ($generated@@582 $generated@@599 $generated@@600 $generated@@601 $generated@@602) $generated@@600 $generated@@601) $generated@@602)))
 :weight 0
))) (and (and (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (or (= $generated@@606 $generated@@608) (= ($generated@@577 ($generated@@582 $generated@@605 $generated@@606 $generated@@607 $generated@@604) $generated@@608 $generated@@609) ($generated@@577 $generated@@605 $generated@@608 $generated@@609)))
 :weight 0
)) (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (or (= $generated@@613 $generated@@615) (= ($generated@@577 ($generated@@582 $generated@@611 $generated@@612 $generated@@613 $generated@@610) $generated@@614 $generated@@615) ($generated@@577 $generated@@611 $generated@@614 $generated@@615)))
 :weight 0
))) (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (or true (= ($generated@@577 ($generated@@582 $generated@@617 $generated@@618 $generated@@619 $generated@@616) $generated@@620 $generated@@621) ($generated@@577 $generated@@617 $generated@@620 $generated@@621)))
 :weight 0
)))) (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (! (= (type ($generated@@578 $generated@@622 $generated@@623 $generated@@624 $generated@@625)) ($generated@@579 $generated@@92 $generated@@4))
 :pattern ( ($generated@@578 $generated@@622 $generated@@623 $generated@@624 $generated@@625))
))))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 ($generated@@77 (type $generated@@631))))
 (=> (and (and (and (and (and (= (type $generated@@626) $generated@@92) (= (type $generated@@627) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@628) ($generated@@76 $generated@@4))) (= (type $generated@@629) ($generated@@91 $generated@@177 $generated@@4))) (= (type $generated@@630) $generated@@92)) (= (type $generated@@631) ($generated@@76 $generated@@632))) (= ($generated@@0 ($generated@@577 ($generated@@578 $generated@@626 $generated@@627 $generated@@628 $generated@@629) $generated@@630 $generated@@631))  (=> (and (not (= $generated@@630 $generated@@626)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@627 $generated@@630) $generated@@628))) ($generated@@0 ($generated@@96 $generated@@629 ($generated@@203 $generated@@630)))))))
 :pattern ( ($generated@@577 ($generated@@578 $generated@@626 $generated@@627 $generated@@628 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@634) $generated@@2)) ($generated@@89 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@89 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@636) $generated@@3)) ($generated@@89 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@89 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@638) $generated@@4)) ($generated@@89 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@89 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@640) $generated@@442)) ($generated@@89 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@89 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@642) $generated@@177)) ($generated@@89 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@89 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@245 $generated@@177)) (= (type $generated@@644) $generated@@74)) (= ($generated@@161 $generated@@643 ($generated@@485 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@244 $generated@@643))) ($generated@@208 ($generated@@486 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@486 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@161 $generated@@643 ($generated@@485 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@245 $generated@@177)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@244 $generated@@647))) (< ($generated@@524 ($generated@@322 $generated@@168 ($generated@@486 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@524 ($generated@@322 $generated@@168 ($generated@@486 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@272 $generated@@177 $generated@@177)) (= (type $generated@@650) $generated@@74)) (= (type $generated@@651) $generated@@74)) ($generated@@161 $generated@@649 ($generated@@394 $generated@@650 $generated@@651))) (and (and ($generated@@161 ($generated@@270 $generated@@649) ($generated@@217 $generated@@650)) ($generated@@161 ($generated@@335 $generated@@649) ($generated@@217 $generated@@651))) ($generated@@161 ($generated@@368 $generated@@649) ($generated@@217 ($generated@@167 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@161 $generated@@649 ($generated@@394 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@290 $generated@@177 $generated@@177)) (= (type $generated@@653) $generated@@74)) (= (type $generated@@654) $generated@@74)) ($generated@@161 $generated@@652 ($generated@@402 $generated@@653 $generated@@654))) (and (and ($generated@@161 ($generated@@288 $generated@@652) ($generated@@222 $generated@@653)) ($generated@@161 ($generated@@346 $generated@@652) ($generated@@222 $generated@@654))) ($generated@@161 ($generated@@376 $generated@@652) ($generated@@222 ($generated@@167 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@161 $generated@@652 ($generated@@402 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@161 $generated@@655 $generated@@46))
 :pattern ( ($generated@@161 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@161 $generated@@656 $generated@@47))
 :pattern ( ($generated@@161 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@161 $generated@@657 $generated@@44))
 :pattern ( ($generated@@161 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@442) ($generated@@161 $generated@@658 $generated@@45))
 :pattern ( ($generated@@161 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@177) ($generated@@161 $generated@@659 $generated@@48))
 :pattern ( ($generated@@161 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(assert  (and (and (and (= (type $generated@@660) ($generated@@579 $generated@@92 $generated@@4)) (= (type $generated@@661) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@662) $generated@@92)) (= (type $generated@@663) ($generated@@91 $generated@@92 $generated@@93))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@664  (=> (and (and (and (= $generated@@660 ($generated@@578 $generated@@152 $generated@@661 $generated@@60 ($generated@@98 ($generated@@96 $generated@@661 $generated@@662) $generated@@199))) ($generated@@89 $generated@@662 $generated@@155 $generated@@661)) (and ($generated@@202 $generated@@661 $generated@@662) ($generated@@201 $generated@@661 $generated@@662))) (and (and ($generated@@159 $generated@@663) ($generated@@312 $generated@@663)) (and (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@92) (=> (and (not (= $generated@@665 $generated@@152)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@661 $generated@@665) $generated@@60))) (or (= ($generated@@96 $generated@@663 $generated@@665) ($generated@@96 $generated@@661 $generated@@665)) ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@661 $generated@@662) $generated@@199) ($generated@@203 $generated@@665))))))
 :pattern ( ($generated@@96 $generated@@663 $generated@@665))
)) ($generated@@147 $generated@@661 $generated@@663)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@89 $generated@@662 $generated@@191 $generated@@661)) (=> ($generated@@89 $generated@@662 $generated@@191 $generated@@661) (=> (= ($generated ($generated@@98 ($generated@@96 $generated@@663 $generated@@662) $generated@@158)) (+ ($generated ($generated@@98 ($generated@@96 $generated@@661 $generated@@662) $generated@@158)) 1)) (=> (and (and ($generated@@89 $generated@@662 $generated@@155 $generated@@663) ($generated@@202 $generated@@663 $generated@@662)) (and ($generated@@201 $generated@@663 $generated@@662) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@89 $generated@@662 $generated@@191 $generated@@661))))))))
(let (($generated@@666  (=> (and ($generated@@159 $generated@@661) ($generated@@312 $generated@@661)) (=> (and (and (not (= $generated@@662 $generated@@152)) (and ($generated@@161 $generated@@662 $generated@@191) ($generated@@89 $generated@@662 $generated@@191 $generated@@661))) (and (= 1 $generated@@200) (= (ControlFlow 0 4) 2))) $generated@@664))))
$generated@@666)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@194 (T@T T@U T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 (T@U T@U) Bool)
(declare-fun $generated@@202 (T@U T@U) Bool)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@207 (T@U T@U) T@U)
(declare-fun $generated@@208 (T@U T@U) Bool)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@231 (T@U T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@243 (T@T) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@271 (T@T T@T) T@U)
(declare-fun $generated@@272 (T@T T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U T@U) Bool)
(declare-fun $generated@@312 (T@U) Bool)
(declare-fun $generated@@322 (T@T T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@582 (T@U T@U T@U) T@U)
(declare-fun $generated@@583 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@584 (T@T T@T) T@T)
(declare-fun $generated@@585 (T@T) T@T)
(declare-fun $generated@@586 (T@T) T@T)
(declare-fun $generated@@587 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@651 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@74) 6) (= (type $generated@@44) $generated@@74)) (= (type $generated@@45) $generated@@74)) (= (type $generated@@46) $generated@@74)) (= (type $generated@@47) $generated@@74)) (= (type $generated@@48) $generated@@74)) (= ($generated@@1 $generated@@75) 7)) (= (type $generated@@49) $generated@@75)) (= (type $generated@@50) $generated@@75)) (= (type $generated@@51) $generated@@75)) (= (type $generated@@52) $generated@@75)) (= (type $generated@@53) $generated@@75)) (= (type $generated@@54) $generated@@75)) (= (type $generated@@55) $generated@@75)) (= (type $generated@@56) $generated@@75)) (= (type $generated@@57) $generated@@75)) (= (type $generated@@58) $generated@@75)) (= (type $generated@@59) $generated@@75)) (forall (($generated@@82 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@82)) 8))) (forall (($generated@@83 T@T) ) (! (= ($generated@@77 ($generated@@76 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@76 $generated@@83))
))) (= (type $generated@@60) ($generated@@76 $generated@@4))) (= ($generated@@1 $generated@@78) 9)) (= (type $generated@@61) $generated@@78)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@75)) (= ($generated@@1 $generated@@79) 10)) (= (type $generated@@64) $generated@@79)) (= (type $generated@@65) $generated@@75)) (= ($generated@@1 $generated@@80) 11)) (= (type $generated@@66) $generated@@80)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= ($generated@@1 $generated@@81) 12)) (= (type $generated@@69) $generated@@81)) (= (type $generated@@70) $generated@@81)) (= (type $generated@@71) $generated@@81)) (= (type $generated@@72) $generated@@78)) (= (type $generated@@73) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)
)
(assert (= ($generated@@84 $generated@@60) 0))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@75)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@44) $generated@@49))
(assert (= ($generated@@85 $generated@@45) $generated@@50))
(assert (= ($generated@@85 $generated@@46) $generated@@51))
(assert (= ($generated@@85 $generated@@47) $generated@@52))
(assert (= ($generated@@85 $generated@@48) $generated@@53))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@78)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@100 $generated@@101)) 13)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@91 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@95 (type $generated@@106))))
(= (type ($generated@@96 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@97 $generated@@109 $generated@@110 $generated@@111)) ($generated@@91 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@95 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@77 (type $generated@@127))))
(= (type ($generated@@98 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@93) 15)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@93)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@77 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@98 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)))) (forall (($generated@@144 Int) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@74)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@149) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@92) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert  (and (= (type $generated@@151) $generated@@74) (= (type $generated@@152) $generated@@92)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@92) (= (type $generated@@154) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@153 $generated@@151 $generated@@154)  (or (= $generated@@153 $generated@@152) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@153 $generated@@151 $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@74))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@92) (= (type $generated@@157) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@152) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@156 $generated@@155 $generated@@157))
)))
(assert  (and (= (type $generated@@158) ($generated@@76 $generated@@2)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@74)
 :pattern ( ($generated@@160 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@164) $generated@@92)) (and ($generated@@159 $generated@@163) (and (not (= $generated@@164 $generated@@152)) (= ($generated@@160 $generated@@164) $generated@@155)))) ($generated@@161 ($generated@@98 ($generated@@96 $generated@@163 $generated@@164) $generated@@158) $generated@@46))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@163 $generated@@164) $generated@@158))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@161 $generated@@165 ($generated@@90 0)))
 :pattern ( ($generated@@161 $generated@@165 ($generated@@90 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@74)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@74) (= (type $generated@@172) $generated@@74)) (= (type $generated@@173) $generated@@168)) ($generated@@161 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@161 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@74)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@74)) ($generated@@161 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@161 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@92) (= ($generated@@161 $generated@@187 $generated@@155)  (or (= $generated@@187 $generated@@152) (= ($generated@@160 $generated@@187) $generated@@155))))
 :pattern ( ($generated@@161 $generated@@187 $generated@@155))
)))
(assert (= (type $generated@@188) $generated@@74))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@92) (= (type $generated@@190) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@189 $generated@@188 $generated@@190) ($generated@@89 $generated@@189 $generated@@151 $generated@@190)))
 :pattern ( ($generated@@89 $generated@@189 $generated@@188 $generated@@190))
)))
(assert (= (type $generated@@191) $generated@@74))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (= (type $generated@@192) $generated@@92) (= (type $generated@@193) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@192 $generated@@191 $generated@@193) ($generated@@89 $generated@@192 $generated@@155 $generated@@193)))
 :pattern ( ($generated@@89 $generated@@192 $generated@@191 $generated@@193))
)))
(assert (= ($generated@@84 $generated@@158) 0))
(assert (forall (($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@76 $generated@@195))
 :pattern ( ($generated@@194 $generated@@195 $generated@@196 $generated@@197))
)))
(assert (= ($generated@@194 $generated@@2 $generated@@66 $generated@@72) $generated@@158))
(assert ($generated@@198 $generated@@158))
(assert (= (type $generated@@199) ($generated@@76 ($generated@@91 $generated@@177 $generated@@4))))
(assert (= ($generated@@84 $generated@@199) 0))
(assert (= ($generated@@194 ($generated@@91 $generated@@177 $generated@@4) $generated@@66 $generated@@73) $generated@@199))
(assert ($generated@@198 $generated@@199))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@203 $generated@@204)) $generated@@177)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert  (=> (<= 0 $generated@@200) (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (and (= (type $generated@@205) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@206) $generated@@92)) (or ($generated@@202 $generated@@205 $generated@@206) (and (not (= 0 $generated@@200)) (and ($generated@@159 $generated@@205) (and (not (= $generated@@206 $generated@@152)) (and ($generated@@161 $generated@@206 $generated@@191) ($generated@@89 $generated@@206 $generated@@191 $generated@@205))))))) ($generated@@201 $generated@@205 $generated@@206)) ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@205 $generated@@206) $generated@@199) ($generated@@203 $generated@@206))))
 :pattern ( ($generated@@201 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@209 $generated@@210)) $generated@@168)
 :pattern ( ($generated@@207 $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (= (type $generated@@211) $generated@@74) (= (type $generated@@212) $generated@@74)) (= (type $generated@@213) $generated@@177)) (= (type $generated@@214) $generated@@177)) (= ($generated@@161 ($generated@@207 $generated@@213 $generated@@214) ($generated@@167 $generated@@211 $generated@@212))  (and ($generated@@208 $generated@@213 $generated@@211) ($generated@@208 $generated@@214 $generated@@212))))
 :pattern ( ($generated@@161 ($generated@@207 $generated@@213 $generated@@214) ($generated@@167 $generated@@211 $generated@@212)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@168) (= (type $generated@@216) $generated@@168)) (= ($generated@@174 $generated@@215 $generated@@216) (= $generated@@215 $generated@@216)))
 :pattern ( ($generated@@174 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (= (type ($generated@@217 $generated@@218)) $generated@@74)
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@220) $generated@@74)) (= ($generated@@161 $generated@@219 ($generated@@217 $generated@@220)) (forall (($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@177) ($generated@@0 ($generated@@96 $generated@@219 $generated@@221))) ($generated@@208 $generated@@221 $generated@@220))
 :pattern ( ($generated@@96 $generated@@219 $generated@@221))
))))
 :pattern ( ($generated@@161 $generated@@219 ($generated@@217 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ) (! (= (type ($generated@@222 $generated@@223)) $generated@@74)
 :pattern ( ($generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@225) $generated@@74)) (= ($generated@@161 $generated@@224 ($generated@@222 $generated@@225)) (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@177) ($generated@@0 ($generated@@96 $generated@@224 $generated@@226))) ($generated@@208 $generated@@226 $generated@@225))
 :pattern ( ($generated@@96 $generated@@224 $generated@@226))
))))
 :pattern ( ($generated@@161 $generated@@224 ($generated@@222 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(= (type ($generated@@227 $generated@@228)) $generated@@229))
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ) (! (= ($generated@@227 $generated@@230) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@232) $generated@@74) (= (type $generated@@233) $generated@@74)) (= (type $generated@@234) $generated@@177)) (= (type $generated@@235) $generated@@177)) (= (type $generated@@236) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@159 $generated@@236)) (= ($generated@@89 ($generated@@207 $generated@@234 $generated@@235) ($generated@@167 $generated@@232 $generated@@233) $generated@@236)  (and ($generated@@231 $generated@@234 $generated@@232 $generated@@236) ($generated@@231 $generated@@235 $generated@@233 $generated@@236))))
 :pattern ( ($generated@@89 ($generated@@207 $generated@@234 $generated@@235) ($generated@@167 $generated@@232 $generated@@233) $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@79)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ) (!  (=> (= (type $generated@@239) $generated@@168) (= ($generated@@166 $generated@@239) (= ($generated@@237 $generated@@239) $generated@@64)))
 :pattern ( ($generated@@166 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@168) ($generated@@166 $generated@@240)) (exists (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (and (and (= (type $generated@@241) $generated@@177) (= (type $generated@@242) $generated@@177)) (= $generated@@240 ($generated@@207 $generated@@241 $generated@@242)))
 :no-pattern (type $generated@@241)
 :no-pattern (type $generated@@242)
 :no-pattern ($generated $generated@@241)
 :no-pattern ($generated@@0 $generated@@241)
 :no-pattern ($generated $generated@@242)
 :no-pattern ($generated@@0 $generated@@242)
)))
 :pattern ( ($generated@@166 $generated@@240))
)))
(assert  (and (and (forall (($generated@@247 T@T) ) (= ($generated@@1 ($generated@@245 $generated@@247)) 18)) (forall (($generated@@248 T@T) ) (! (= ($generated@@246 ($generated@@245 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
))) (forall (($generated@@249 T@T) ) (! (= (type ($generated@@243 $generated@@249)) ($generated@@245 $generated@@249))
 :pattern ( ($generated@@243 $generated@@249))
))))
(assert (forall (($generated@@250 T@T) ) (! (= ($generated@@244 ($generated@@243 $generated@@250)) 0)
 :pattern ( ($generated@@243 $generated@@250))
)))
(assert ($generated@@198 $generated@@60))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@74) (= (type $generated@@253) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@231 ($generated@@203 $generated@@251) $generated@@252 $generated@@253) ($generated@@89 $generated@@251 $generated@@252 $generated@@253)))
 :pattern ( ($generated@@231 ($generated@@203 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@255) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@256) $generated@@177)) (= (type $generated@@257) $generated@@74)) ($generated@@147 $generated@@254 $generated@@255)) ($generated@@231 $generated@@256 $generated@@257 $generated@@254)) ($generated@@231 $generated@@256 $generated@@257 $generated@@255))
 :pattern ( ($generated@@147 $generated@@254 $generated@@255) ($generated@@231 $generated@@256 $generated@@257 $generated@@254))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@258) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@259) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@261) $generated@@74)) ($generated@@147 $generated@@258 $generated@@259)) ($generated@@89 $generated@@260 $generated@@261 $generated@@258)) ($generated@@89 $generated@@260 $generated@@261 $generated@@259))
 :pattern ( ($generated@@147 $generated@@258 $generated@@259) ($generated@@89 $generated@@260 $generated@@261 $generated@@258))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@263) $generated@@92)) (=> (and (and ($generated@@159 $generated@@262) (and (not (= $generated@@263 $generated@@152)) (= ($generated@@160 $generated@@263) $generated@@155))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@262 $generated@@263) $generated@@60))) ($generated@@89 ($generated@@98 ($generated@@96 $generated@@262 $generated@@263) $generated@@158) $generated@@46 $generated@@262)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@262 $generated@@263) $generated@@158))
)))
(assert (forall (($generated@@266 T@T) ) (! (= (type ($generated@@265 $generated@@266)) ($generated@@91 $generated@@266 $generated@@2))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@94 (type $generated@@267))))
 (=> (= (type $generated@@267) ($generated@@91 $generated@@268 $generated@@2)) (and (= (= ($generated@@264 $generated@@267) 0) (= $generated@@267 ($generated@@265 $generated@@268))) (=> (not (= ($generated@@264 $generated@@267) 0)) (exists (($generated@@269 T@U) ) (!  (and (= (type $generated@@269) $generated@@268) (< 0 ($generated ($generated@@96 $generated@@267 $generated@@269))))
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
))))))
 :pattern ( ($generated@@264 $generated@@267))
)))
(assert  (and (and (and (and (forall (($generated@@275 T@T) ($generated@@276 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@275 $generated@@276)) 19)) (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@277 $generated@@278)) $generated@@277)
 :pattern ( ($generated@@272 $generated@@277 $generated@@278))
))) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@272 $generated@@279 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@272 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@273 (type $generated@@281))))
(= (type ($generated@@270 $generated@@281)) ($generated@@91 $generated@@282 $generated@@4)))
 :pattern ( ($generated@@270 $generated@@281))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= (type ($generated@@271 $generated@@283 $generated@@284)) ($generated@@272 $generated@@283 $generated@@284))
 :pattern ( ($generated@@271 $generated@@283 $generated@@284))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@T) ) (! (let (($generated@@287 (type $generated@@285)))
 (not ($generated@@0 ($generated@@96 ($generated@@270 ($generated@@271 $generated@@287 $generated@@286)) $generated@@285))))
 :pattern ( (let (($generated@@287 (type $generated@@285)))
($generated@@96 ($generated@@270 ($generated@@271 $generated@@287 $generated@@286)) $generated@@285)))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 20)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@91 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@96 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@96 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@307) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@308) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@306 $generated@@307 $generated@@308)) (and ($generated@@147 $generated@@307 $generated@@308) (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@77 (type $generated@@310))))
 (=> (and (and (= (type $generated@@309) $generated@@92) (= (type $generated@@310) ($generated@@76 $generated@@311))) (not ($generated@@198 $generated@@310))) (= ($generated@@98 ($generated@@96 $generated@@307 $generated@@309) $generated@@310) ($generated@@98 ($generated@@96 $generated@@308 $generated@@309) $generated@@310))))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@308 $generated@@309) $generated@@310))
))))
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (= (type $generated@@313) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@314) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@315) $generated@@92)) (=> (and (and (and ($generated@@159 $generated@@313) ($generated@@159 $generated@@314)) (and (not (= $generated@@315 $generated@@152)) ($generated@@161 $generated@@315 $generated@@191))) (and ($generated@@312 $generated@@313) ($generated@@147 $generated@@313 $generated@@314))) (=> (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@77 (type $generated@@317))))
 (=> (and (and (= (type $generated@@316) $generated@@92) (= (type $generated@@317) ($generated@@76 $generated@@318))) (and (not (= $generated@@316 $generated@@152)) (or (= $generated@@316 $generated@@315) ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@313 $generated@@315) $generated@@199) ($generated@@203 $generated@@316)))))) (= ($generated@@98 ($generated@@96 $generated@@313 $generated@@316) $generated@@317) ($generated@@98 ($generated@@96 $generated@@314 $generated@@316) $generated@@317))))
 :no-pattern (type $generated@@316)
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)) (= ($generated@@201 $generated@@313 $generated@@315) ($generated@@201 $generated@@314 $generated@@315)))))
 :pattern ( ($generated@@312 $generated@@313) ($generated@@147 $generated@@313 $generated@@314) ($generated@@201 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@94 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@91 $generated@@320 $generated@@2)) (= ($generated@@183 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (and (<= 0 ($generated ($generated@@96 $generated@@319 $generated@@321))) (<= ($generated ($generated@@96 $generated@@319 $generated@@321)) ($generated@@264 $generated@@319))))
 :pattern ( ($generated@@96 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@183 $generated@@319))
)))
(assert (forall (($generated@@323 T@T) ($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@322 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@177) ($generated@@208 $generated@@325 $generated@@151)) (and (= ($generated@@203 ($generated@@322 $generated@@92 $generated@@325)) $generated@@325) ($generated@@161 ($generated@@322 $generated@@92 $generated@@325) $generated@@151)))
 :pattern ( ($generated@@208 $generated@@325 $generated@@151))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@177) ($generated@@208 $generated@@326 $generated@@188)) (and (= ($generated@@203 ($generated@@322 $generated@@92 $generated@@326)) $generated@@326) ($generated@@161 ($generated@@322 $generated@@92 $generated@@326) $generated@@188)))
 :pattern ( ($generated@@208 $generated@@326 $generated@@188))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@177) ($generated@@208 $generated@@327 $generated@@155)) (and (= ($generated@@203 ($generated@@322 $generated@@92 $generated@@327)) $generated@@327) ($generated@@161 ($generated@@322 $generated@@92 $generated@@327) $generated@@155)))
 :pattern ( ($generated@@208 $generated@@327 $generated@@155))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@177) ($generated@@208 $generated@@328 $generated@@191)) (and (= ($generated@@203 ($generated@@322 $generated@@92 $generated@@328)) $generated@@328) ($generated@@161 ($generated@@322 $generated@@92 $generated@@328) $generated@@191)))
 :pattern ( ($generated@@208 $generated@@328 $generated@@191))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@92) (= ($generated@@161 $generated@@329 $generated@@188)  (and ($generated@@161 $generated@@329 $generated@@151) (not (= $generated@@329 $generated@@152)))))
 :pattern ( ($generated@@161 $generated@@329 $generated@@188))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@92) (= ($generated@@161 $generated@@330 $generated@@191)  (and ($generated@@161 $generated@@330 $generated@@155) (not (= $generated@@330 $generated@@152)))))
 :pattern ( ($generated@@161 $generated@@330 $generated@@191))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@274 (type $generated@@331))))
(let (($generated@@333 ($generated@@273 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@272 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@271 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@96 ($generated@@270 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@270 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@274 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@91 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@274 (type $generated@@338))))
(let (($generated@@340 ($generated@@273 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@272 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@271 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@96 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@96 ($generated@@288 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@288 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@292 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@91 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@292 (type $generated@@349))))
(let (($generated@@351 ($generated@@291 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@290 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@289 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@96 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@354) $generated@@74)) (= ($generated@@161 $generated@@353 ($generated@@182 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@177) (< 0 ($generated ($generated@@96 $generated@@353 $generated@@355)))) ($generated@@208 $generated@@355 $generated@@354))
 :pattern ( ($generated@@96 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@161 $generated@@353 ($generated@@182 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@357) $generated@@74)) (= (type $generated@@358) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@356 ($generated@@217 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@177) ($generated@@0 ($generated@@96 $generated@@356 $generated@@359))) ($generated@@231 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@96 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@89 $generated@@356 ($generated@@217 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@361) $generated@@74)) (= (type $generated@@362) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@360 ($generated@@222 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@177) ($generated@@0 ($generated@@96 $generated@@360 $generated@@363))) ($generated@@231 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@96 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@89 $generated@@360 ($generated@@222 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= ($generated ($generated@@96 ($generated@@265 $generated@@365) $generated@@364)) 0))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@96 ($generated@@265 $generated@@365) $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@367) $generated@@92)) (=> (and (and ($generated@@159 $generated@@366) (and (not (= $generated@@367 $generated@@152)) (= ($generated@@160 $generated@@367) $generated@@155))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@366 $generated@@367) $generated@@60))) ($generated@@89 ($generated@@98 ($generated@@96 $generated@@366 $generated@@367) $generated@@199) ($generated@@217 $generated@@188) $generated@@366)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@366 $generated@@367) $generated@@199))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@91 $generated@@177 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@274 (type $generated@@371))))
(let (($generated@@373 ($generated@@273 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@91 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@272 $generated@@177 $generated@@177)) (= (type $generated@@375) $generated@@177)) (= ($generated@@0 ($generated@@96 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@96 ($generated@@270 $generated@@374) ($generated@@175 ($generated@@322 $generated@@168 $generated@@375)))) (= ($generated@@96 ($generated@@369 $generated@@374) ($generated@@175 ($generated@@322 $generated@@168 $generated@@375))) ($generated@@176 ($generated@@322 $generated@@168 $generated@@375))))))
 :pattern ( ($generated@@96 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@91 $generated@@177 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@292 (type $generated@@379))))
(let (($generated@@381 ($generated@@291 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@91 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@290 $generated@@177 $generated@@177)) (= (type $generated@@383) $generated@@177)) (= ($generated@@0 ($generated@@96 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@96 ($generated@@288 $generated@@382) ($generated@@175 ($generated@@322 $generated@@168 $generated@@383)))) (= ($generated@@96 ($generated@@377 $generated@@382) ($generated@@175 ($generated@@322 $generated@@168 $generated@@383))) ($generated@@176 ($generated@@322 $generated@@168 $generated@@383))))))
 :pattern ( ($generated@@96 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@273 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@272 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@96 ($generated@@335 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@96 ($generated@@270 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@96 ($generated@@369 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@96 ($generated@@270 $generated@@384) $generated@@388))
 :pattern ( ($generated@@96 ($generated@@369 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@96 ($generated@@335 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@291 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@290 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@96 ($generated@@346 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@96 ($generated@@288 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@96 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@96 ($generated@@288 $generated@@389) $generated@@393))
 :pattern ( ($generated@@96 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@96 ($generated@@346 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@74)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@272 $generated@@177 $generated@@177)) (= (type $generated@@398) $generated@@74)) (= (type $generated@@399) $generated@@74)) (= (type $generated@@400) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@270 $generated@@397) $generated@@401))) (and ($generated@@231 ($generated@@96 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@231 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@96 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@96 ($generated@@270 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@89 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@74)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@290 $generated@@177 $generated@@177)) (= (type $generated@@406) $generated@@74)) (= (type $generated@@407) $generated@@74)) (= (type $generated@@408) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@288 $generated@@405) $generated@@409))) (and ($generated@@231 ($generated@@96 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@231 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@96 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@96 ($generated@@288 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@89 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@410) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@411) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@412) ($generated@@91 $generated@@92 $generated@@93))) (not (= $generated@@410 $generated@@412))) (and ($generated@@147 $generated@@410 $generated@@411) ($generated@@147 $generated@@411 $generated@@412))) ($generated@@147 $generated@@410 $generated@@412))
 :pattern ( ($generated@@147 $generated@@410 $generated@@411) ($generated@@147 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@91 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@292 (type $generated@@415))))
(let (($generated@@417 ($generated@@291 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@290 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@289 $generated@@417 $generated@@416)) (= ($generated@@288 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@288 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@292 (type $generated@@418))))
(let (($generated@@420 ($generated@@291 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@290 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@289 $generated@@420 $generated@@419)) (= ($generated@@346 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@346 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@292 (type $generated@@421))))
(let (($generated@@423 ($generated@@291 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@290 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@289 $generated@@423 $generated@@422)) (= ($generated@@376 $generated@@421) ($generated@@413 $generated@@177))))))
 :pattern ( ($generated@@376 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@274 (type $generated@@424))))
(let (($generated@@426 ($generated@@273 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@272 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@271 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@177) (= (type $generated@@428) $generated@@177)) ($generated@@0 ($generated@@96 ($generated@@368 $generated@@424) ($generated@@203 ($generated@@207 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@368 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@292 (type $generated@@429))))
(let (($generated@@431 ($generated@@291 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@290 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@289 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@177) (= (type $generated@@433) $generated@@177)) ($generated@@0 ($generated@@96 ($generated@@376 $generated@@429) ($generated@@203 ($generated@@207 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@376 $generated@@429))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@80)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@T) ) (!  (=> (and (= (type $generated@@436) $generated@@80) (= (type $generated@@437) $generated@@78)) (and (= ($generated@@434 ($generated@@194 $generated@@438 $generated@@436 $generated@@437)) $generated@@436) (= ($generated@@87 ($generated@@194 $generated@@438 $generated@@436 $generated@@437)) $generated@@437)))
 :pattern ( ($generated@@194 $generated@@438 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@177) ($generated@@208 $generated@@439 $generated@@46)) (and (= ($generated@@203 ($generated@@322 $generated@@2 $generated@@439)) $generated@@439) ($generated@@161 ($generated@@322 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@208 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@177) ($generated@@208 $generated@@440 $generated@@47)) (and (= ($generated@@203 ($generated@@322 $generated@@3 $generated@@440)) $generated@@440) ($generated@@161 ($generated@@322 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@208 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@177) ($generated@@208 $generated@@441 $generated@@44)) (and (= ($generated@@203 ($generated@@322 $generated@@4 $generated@@441)) $generated@@441) ($generated@@161 ($generated@@322 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@208 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 21))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@177) ($generated@@208 $generated@@443 $generated@@45)) (and (= ($generated@@203 ($generated@@322 $generated@@442 $generated@@443)) $generated@@443) ($generated@@161 ($generated@@322 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@208 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@74) (= ($generated@@208 ($generated@@203 $generated@@444) $generated@@445) ($generated@@161 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@208 ($generated@@203 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@94 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@91 $generated@@447 $generated@@2)) (<= 0 ($generated@@264 $generated@@446))))
 :pattern ( ($generated@@264 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@246 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@245 $generated@@449)) (<= 0 ($generated@@244 $generated@@448))))
 :pattern ( ($generated@@244 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@74)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@74) (= (type $generated@@453) $generated@@74)) (= ($generated@@450 ($generated@@394 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@74)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@74) (= (type $generated@@457) $generated@@74)) (= ($generated@@454 ($generated@@394 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@394 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@74) (= (type $generated@@459) $generated@@74)) (= ($generated@@85 ($generated@@394 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@74)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@74) (= (type $generated@@463) $generated@@74)) (= ($generated@@460 ($generated@@402 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@74)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@74) (= (type $generated@@467) $generated@@74)) (= ($generated@@464 ($generated@@402 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@402 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@74) (= (type $generated@@469) $generated@@74)) (= ($generated@@85 ($generated@@402 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@177) (= (type $generated@@471) $generated@@177)) (= ($generated@@237 ($generated@@207 $generated@@470 $generated@@471)) $generated@@64))
 :pattern ( ($generated@@207 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@74)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@74) (= (type $generated@@475) $generated@@74)) (= ($generated@@472 ($generated@@167 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@167 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@74)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@74) (= (type $generated@@479) $generated@@74)) (= ($generated@@476 ($generated@@167 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@167 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@177) (= (type $generated@@481) $generated@@177)) (= ($generated@@175 ($generated@@207 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@207 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@177) (= (type $generated@@483) $generated@@177)) (= ($generated@@176 ($generated@@207 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@207 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@92) ($generated@@161 $generated@@484 $generated@@151))
 :pattern ( ($generated@@161 $generated@@484 $generated@@151))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@74)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@246 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@245 $generated@@177)) (= (type $generated@@492) $generated@@74)) (= (type $generated@@493) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@244 $generated@@491))) ($generated@@231 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@89 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@90 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@90 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@74)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@74) (= ($generated@@497 ($generated@@217 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@217 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@74) (= ($generated@@85 ($generated@@217 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@217 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@74)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@74) (= ($generated@@501 ($generated@@222 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@222 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@74) (= ($generated@@85 ($generated@@222 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@222 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@74)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@74) (= ($generated@@505 ($generated@@182 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@182 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@74) (= ($generated@@85 ($generated@@182 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@74)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@74) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@74) (= ($generated@@85 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@322 $generated@@514 ($generated@@203 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@203 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@272 $generated@@177 $generated@@177)) (= (type $generated@@516) $generated@@74)) (= (type $generated@@517) $generated@@74)) (= ($generated@@161 $generated@@515 ($generated@@394 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@270 $generated@@515) $generated@@518))) (and ($generated@@208 ($generated@@96 ($generated@@369 $generated@@515) $generated@@518) $generated@@517) ($generated@@208 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@96 ($generated@@369 $generated@@515) $generated@@518))
 :pattern ( ($generated@@96 ($generated@@270 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@161 $generated@@515 ($generated@@394 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@290 $generated@@177 $generated@@177)) (= (type $generated@@520) $generated@@74)) (= (type $generated@@521) $generated@@74)) (= ($generated@@161 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@288 $generated@@519) $generated@@522))) (and ($generated@@208 ($generated@@96 ($generated@@377 $generated@@519) $generated@@522) $generated@@521) ($generated@@208 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@96 ($generated@@377 $generated@@519) $generated@@522))
 :pattern ( ($generated@@96 ($generated@@288 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@161 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@177) (= (type $generated@@526) $generated@@177)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@207 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@207 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@177) (= (type $generated@@528) $generated@@177)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@207 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@207 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@177) (= (type $generated@@530) $generated@@74)) (= (type $generated@@531) $generated@@74)) ($generated@@208 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@203 ($generated@@322 ($generated@@272 $generated@@177 $generated@@177) $generated@@529)) $generated@@529) ($generated@@161 ($generated@@322 ($generated@@272 $generated@@177 $generated@@177) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@208 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@177) (= (type $generated@@533) $generated@@74)) (= (type $generated@@534) $generated@@74)) ($generated@@208 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@203 ($generated@@322 ($generated@@290 $generated@@177 $generated@@177) $generated@@532)) $generated@@532) ($generated@@161 ($generated@@322 ($generated@@290 $generated@@177 $generated@@177) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@208 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@74) (= (type $generated@@536) $generated@@74)) (= (type $generated@@537) $generated@@177)) ($generated@@208 $generated@@537 ($generated@@167 $generated@@535 $generated@@536))) (and (= ($generated@@203 ($generated@@322 $generated@@168 $generated@@537)) $generated@@537) ($generated@@161 ($generated@@322 $generated@@168 $generated@@537) ($generated@@167 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@208 $generated@@537 ($generated@@167 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@96 ($generated@@413 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@96 ($generated@@413 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@81)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@74) (= (type $generated@@543) $generated@@74)) (and (= ($generated@@85 ($generated@@167 $generated@@542 $generated@@543)) $generated@@65) (= ($generated@@540 ($generated@@167 $generated@@542 $generated@@543)) $generated@@70)))
 :pattern ( ($generated@@167 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@168) (= ($generated@@523 ($generated@@203 $generated@@544)) ($generated@@524 $generated@@544)))
 :pattern ( ($generated@@523 ($generated@@203 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@177) ($generated@@208 $generated@@545 ($generated@@90 0))) (and (= ($generated@@203 ($generated@@322 $generated@@2 $generated@@545)) $generated@@545) ($generated@@161 ($generated@@322 ($generated@@91 $generated@@177 $generated@@4) $generated@@545) ($generated@@90 0))))
 :pattern ( ($generated@@208 $generated@@545 ($generated@@90 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@177) (= (type $generated@@547) $generated@@74)) ($generated@@208 $generated@@546 ($generated@@217 $generated@@547))) (and (= ($generated@@203 ($generated@@322 ($generated@@91 $generated@@177 $generated@@4) $generated@@546)) $generated@@546) ($generated@@161 ($generated@@322 ($generated@@91 $generated@@177 $generated@@4) $generated@@546) ($generated@@217 $generated@@547))))
 :pattern ( ($generated@@208 $generated@@546 ($generated@@217 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@177) (= (type $generated@@549) $generated@@74)) ($generated@@208 $generated@@548 ($generated@@222 $generated@@549))) (and (= ($generated@@203 ($generated@@322 ($generated@@91 $generated@@177 $generated@@4) $generated@@548)) $generated@@548) ($generated@@161 ($generated@@322 ($generated@@91 $generated@@177 $generated@@4) $generated@@548) ($generated@@222 $generated@@549))))
 :pattern ( ($generated@@208 $generated@@548 ($generated@@222 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@177) (= (type $generated@@551) $generated@@74)) ($generated@@208 $generated@@550 ($generated@@182 $generated@@551))) (and (= ($generated@@203 ($generated@@322 ($generated@@91 $generated@@177 $generated@@2) $generated@@550)) $generated@@550) ($generated@@161 ($generated@@322 ($generated@@91 $generated@@177 $generated@@2) $generated@@550) ($generated@@182 $generated@@551))))
 :pattern ( ($generated@@208 $generated@@550 ($generated@@182 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@177) (= (type $generated@@553) $generated@@74)) ($generated@@208 $generated@@552 ($generated@@485 $generated@@553))) (and (= ($generated@@203 ($generated@@322 ($generated@@245 $generated@@177) $generated@@552)) $generated@@552) ($generated@@161 ($generated@@322 ($generated@@245 $generated@@177) $generated@@552) ($generated@@485 $generated@@553))))
 :pattern ( ($generated@@208 $generated@@552 ($generated@@485 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (=> (and (and (and (= (type $generated@@554) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@555) $generated@@92)) (= (type $generated@@556) ($generated@@76 $generated@@558))) ($generated@@159 ($generated@@97 $generated@@554 $generated@@555 ($generated@@99 ($generated@@96 $generated@@554 $generated@@555) $generated@@556 $generated@@557)))) ($generated@@147 $generated@@554 ($generated@@97 $generated@@554 $generated@@555 ($generated@@99 ($generated@@96 $generated@@554 $generated@@555) $generated@@556 $generated@@557)))))
 :pattern ( ($generated@@97 $generated@@554 $generated@@555 ($generated@@99 ($generated@@96 $generated@@554 $generated@@555) $generated@@556 $generated@@557)))
)))
(assert (= ($generated@@85 $generated@@151) $generated@@62))
(assert (= ($generated@@540 $generated@@151) $generated@@69))
(assert (= ($generated@@85 $generated@@188) $generated@@63))
(assert (= ($generated@@540 $generated@@188) $generated@@69))
(assert (= ($generated@@85 $generated@@155) $generated@@67))
(assert (= ($generated@@540 $generated@@155) $generated@@71))
(assert (= ($generated@@85 $generated@@191) $generated@@68))
(assert (= ($generated@@540 $generated@@191) $generated@@71))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@560) $generated@@74)) (= (type $generated@@561) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@559 ($generated@@182 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@177) (< 0 ($generated ($generated@@96 $generated@@559 $generated@@562)))) ($generated@@231 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@96 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@89 $generated@@559 ($generated@@182 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@168) (= (type $generated@@564) $generated@@74)) (= (type $generated@@565) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@159 $generated@@565) (and ($generated@@166 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@74) ($generated@@89 $generated@@563 ($generated@@167 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@89 $generated@@563 ($generated@@167 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@231 ($generated@@175 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@231 ($generated@@175 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@168) (= (type $generated@@568) $generated@@74)) (= (type $generated@@569) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@159 $generated@@569) (and ($generated@@166 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@74) ($generated@@89 $generated@@567 ($generated@@167 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@89 $generated@@567 ($generated@@167 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@231 ($generated@@176 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@231 ($generated@@176 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@572) $generated@@92)) (and ($generated@@159 $generated@@571) (and (not (= $generated@@572 $generated@@152)) (= ($generated@@160 $generated@@572) $generated@@155)))) ($generated@@161 ($generated@@98 ($generated@@96 $generated@@571 $generated@@572) $generated@@199) ($generated@@217 $generated@@188)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@571 $generated@@572) $generated@@199))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@177) (= (type $generated@@574) $generated@@177)) (= ($generated@@207 ($generated@@227 $generated@@573) ($generated@@227 $generated@@574)) ($generated@@227 ($generated@@207 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@207 ($generated@@227 $generated@@573) ($generated@@227 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@203 ($generated@@227 $generated@@575)) ($generated@@227 ($generated@@203 $generated@@575)))
 :pattern ( ($generated@@203 ($generated@@227 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@246 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@245 $generated@@577)) (= ($generated@@244 $generated@@576) 0)) (= $generated@@576 ($generated@@243 $generated@@577))))
 :pattern ( ($generated@@244 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@91 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@264 ($generated@@97 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@264 $generated@@578) ($generated ($generated@@96 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@264 ($generated@@97 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@588 T@T) ($generated@@589 T@T) ) (= ($generated@@1 ($generated@@584 $generated@@588 $generated@@589)) 22)) (forall (($generated@@590 T@T) ($generated@@591 T@T) ) (! (= ($generated@@585 ($generated@@584 $generated@@590 $generated@@591)) $generated@@590)
 :pattern ( ($generated@@584 $generated@@590 $generated@@591))
))) (forall (($generated@@592 T@T) ($generated@@593 T@T) ) (! (= ($generated@@586 ($generated@@584 $generated@@592 $generated@@593)) $generated@@593)
 :pattern ( ($generated@@584 $generated@@592 $generated@@593))
))) (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@586 (type $generated@@594))))
(= (type ($generated@@582 $generated@@594 $generated@@595 $generated@@596)) $generated@@597))
 :pattern ( ($generated@@582 $generated@@594 $generated@@595 $generated@@596))
))) (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@601)))
(let (($generated@@603 (type $generated@@599)))
(= (type ($generated@@587 $generated@@598 $generated@@599 $generated@@600 $generated@@601)) ($generated@@584 $generated@@603 $generated@@602))))
 :pattern ( ($generated@@587 $generated@@598 $generated@@599 $generated@@600 $generated@@601))
))) (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@586 (type $generated@@604))))
 (=> (= (type $generated@@607) $generated@@608) (= ($generated@@582 ($generated@@587 $generated@@604 $generated@@605 $generated@@606 $generated@@607) $generated@@605 $generated@@606) $generated@@607)))
 :weight 0
))) (and (and (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (or (= $generated@@611 $generated@@613) (= ($generated@@582 ($generated@@587 $generated@@610 $generated@@611 $generated@@612 $generated@@609) $generated@@613 $generated@@614) ($generated@@582 $generated@@610 $generated@@613 $generated@@614)))
 :weight 0
)) (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (or (= $generated@@618 $generated@@620) (= ($generated@@582 ($generated@@587 $generated@@616 $generated@@617 $generated@@618 $generated@@615) $generated@@619 $generated@@620) ($generated@@582 $generated@@616 $generated@@619 $generated@@620)))
 :weight 0
))) (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (or true (= ($generated@@582 ($generated@@587 $generated@@622 $generated@@623 $generated@@624 $generated@@621) $generated@@625 $generated@@626) ($generated@@582 $generated@@622 $generated@@625 $generated@@626)))
 :weight 0
)))) (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (! (= (type ($generated@@583 $generated@@627 $generated@@628 $generated@@629 $generated@@630)) ($generated@@584 $generated@@92 $generated@@4))
 :pattern ( ($generated@@583 $generated@@627 $generated@@628 $generated@@629 $generated@@630))
))))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@77 (type $generated@@636))))
 (=> (and (and (and (and (and (= (type $generated@@631) $generated@@92) (= (type $generated@@632) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@633) ($generated@@76 $generated@@4))) (= (type $generated@@634) ($generated@@91 $generated@@177 $generated@@4))) (= (type $generated@@635) $generated@@92)) (= (type $generated@@636) ($generated@@76 $generated@@637))) (= ($generated@@0 ($generated@@582 ($generated@@583 $generated@@631 $generated@@632 $generated@@633 $generated@@634) $generated@@635 $generated@@636))  (=> (and (not (= $generated@@635 $generated@@631)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@632 $generated@@635) $generated@@633))) ($generated@@0 ($generated@@96 $generated@@634 ($generated@@203 $generated@@635)))))))
 :pattern ( ($generated@@582 ($generated@@583 $generated@@631 $generated@@632 $generated@@633 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@639) $generated@@2)) ($generated@@89 $generated@@639 $generated@@46 $generated@@638))
 :pattern ( ($generated@@89 $generated@@639 $generated@@46 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@641) $generated@@3)) ($generated@@89 $generated@@641 $generated@@47 $generated@@640))
 :pattern ( ($generated@@89 $generated@@641 $generated@@47 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@643) $generated@@4)) ($generated@@89 $generated@@643 $generated@@44 $generated@@642))
 :pattern ( ($generated@@89 $generated@@643 $generated@@44 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@645) $generated@@442)) ($generated@@89 $generated@@645 $generated@@45 $generated@@644))
 :pattern ( ($generated@@89 $generated@@645 $generated@@45 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@647) $generated@@177)) ($generated@@89 $generated@@647 $generated@@48 $generated@@646))
 :pattern ( ($generated@@89 $generated@@647 $generated@@48 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@245 $generated@@177)) (= (type $generated@@649) $generated@@74)) (= ($generated@@161 $generated@@648 ($generated@@485 $generated@@649)) (forall (($generated@@650 Int) ) (!  (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@244 $generated@@648))) ($generated@@208 ($generated@@486 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@486 $generated@@648 $generated@@650))
))))
 :pattern ( ($generated@@161 $generated@@648 ($generated@@485 $generated@@649)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 Int) ) (!  (=> (= (type $generated@@652) ($generated@@245 $generated@@177)) (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@244 $generated@@652))) (< ($generated@@524 ($generated@@322 $generated@@168 ($generated@@486 $generated@@652 $generated@@653))) ($generated@@651 $generated@@652))))
 :pattern ( ($generated@@524 ($generated@@322 $generated@@168 ($generated@@486 $generated@@652 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@272 $generated@@177 $generated@@177)) (= (type $generated@@655) $generated@@74)) (= (type $generated@@656) $generated@@74)) ($generated@@161 $generated@@654 ($generated@@394 $generated@@655 $generated@@656))) (and (and ($generated@@161 ($generated@@270 $generated@@654) ($generated@@217 $generated@@655)) ($generated@@161 ($generated@@335 $generated@@654) ($generated@@217 $generated@@656))) ($generated@@161 ($generated@@368 $generated@@654) ($generated@@217 ($generated@@167 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@161 $generated@@654 ($generated@@394 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) ($generated@@290 $generated@@177 $generated@@177)) (= (type $generated@@658) $generated@@74)) (= (type $generated@@659) $generated@@74)) ($generated@@161 $generated@@657 ($generated@@402 $generated@@658 $generated@@659))) (and (and ($generated@@161 ($generated@@288 $generated@@657) ($generated@@222 $generated@@658)) ($generated@@161 ($generated@@346 $generated@@657) ($generated@@222 $generated@@659))) ($generated@@161 ($generated@@376 $generated@@657) ($generated@@222 ($generated@@167 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@161 $generated@@657 ($generated@@402 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@2) ($generated@@161 $generated@@660 $generated@@46))
 :pattern ( ($generated@@161 $generated@@660 $generated@@46))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@3) ($generated@@161 $generated@@661 $generated@@47))
 :pattern ( ($generated@@161 $generated@@661 $generated@@47))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@4) ($generated@@161 $generated@@662 $generated@@44))
 :pattern ( ($generated@@161 $generated@@662 $generated@@44))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@442) ($generated@@161 $generated@@663 $generated@@45))
 :pattern ( ($generated@@161 $generated@@663 $generated@@45))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@177) ($generated@@161 $generated@@664 $generated@@48))
 :pattern ( ($generated@@161 $generated@@664 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(assert  (and (and (and (= (type $generated@@665) ($generated@@584 $generated@@92 $generated@@4)) (= (type $generated@@666) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@667) $generated@@92)) (= (type $generated@@669) ($generated@@91 $generated@@92 $generated@@93))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@670  (=> (= $generated@@665 ($generated@@583 $generated@@152 $generated@@666 $generated@@60 ($generated@@98 ($generated@@96 $generated@@666 $generated@@667) $generated@@199))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@0 ($generated@@582 $generated@@665 $generated@@667 $generated@@158))) (=> ($generated@@0 ($generated@@582 $generated@@665 $generated@@667 $generated@@158)) (=> (= $generated@@668 (+ ($generated ($generated@@98 ($generated@@96 $generated@@666 $generated@@667) $generated@@158)) 1)) (=> (and (= $generated@@669 ($generated@@97 $generated@@666 $generated@@667 ($generated@@99 ($generated@@96 $generated@@666 $generated@@667) $generated@@158 ($generated@@8 $generated@@668)))) ($generated@@159 $generated@@669)) (=> (and (and ($generated@@89 $generated@@667 $generated@@155 $generated@@669) ($generated@@202 $generated@@669 $generated@@667)) (and ($generated@@202 $generated@@669 $generated@@667) ($generated@@201 $generated@@669 $generated@@667))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated ($generated@@98 ($generated@@96 $generated@@669 $generated@@667) $generated@@158)) (+ ($generated ($generated@@98 ($generated@@96 $generated@@666 $generated@@667) $generated@@158)) 1))) (=> (= ($generated ($generated@@98 ($generated@@96 $generated@@669 $generated@@667) $generated@@158)) (+ ($generated ($generated@@98 ($generated@@96 $generated@@666 $generated@@667) $generated@@158)) 1)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@201 $generated@@669 $generated@@667)) (=> ($generated@@201 $generated@@669 $generated@@667) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@92) (=> (and ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@669 $generated@@667) $generated@@199) ($generated@@203 $generated@@671))) (not ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@666 $generated@@667) $generated@@199) ($generated@@203 $generated@@671))))) (and (not (= $generated@@671 $generated@@152)) (not ($generated@@0 ($generated@@98 ($generated@@96 $generated@@666 $generated@@671) $generated@@60))))))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@666 $generated@@671) $generated@@60))
)))))))))))))))
(let (($generated@@672  (=> (and ($generated@@159 $generated@@666) ($generated@@312 $generated@@666)) (=> (and (and (and (not (= $generated@@667 $generated@@152)) (and ($generated@@161 $generated@@667 $generated@@191) ($generated@@89 $generated@@667 $generated@@191 $generated@@666))) (= 1 $generated@@200)) (and ($generated@@201 $generated@@666 $generated@@667) (= (ControlFlow 0 6) 2))) $generated@@670))))
$generated@@672)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@250 (T@T T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () Int)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@287 (T@U T@U T@U) Bool)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@320 (T@U) Int)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@362 (T@U T@U) Bool)
(declare-fun $generated@@368 (T@U) Bool)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@T) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 () T@T)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@74) 6) (= (type $generated@@44) $generated@@74)) (= (type $generated@@45) $generated@@74)) (= (type $generated@@46) $generated@@74)) (= (type $generated@@47) $generated@@74)) (= (type $generated@@48) $generated@@74)) (= ($generated@@1 $generated@@75) 7)) (= (type $generated@@49) $generated@@75)) (= (type $generated@@50) $generated@@75)) (= (type $generated@@51) $generated@@75)) (= (type $generated@@52) $generated@@75)) (= (type $generated@@53) $generated@@75)) (= (type $generated@@54) $generated@@75)) (= (type $generated@@55) $generated@@75)) (= (type $generated@@56) $generated@@75)) (= (type $generated@@57) $generated@@75)) (= (type $generated@@58) $generated@@75)) (= (type $generated@@59) $generated@@75)) (forall (($generated@@82 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@82)) 8))) (forall (($generated@@83 T@T) ) (! (= ($generated@@77 ($generated@@76 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@76 $generated@@83))
))) (= (type $generated@@60) ($generated@@76 $generated@@4))) (= ($generated@@1 $generated@@78) 9)) (= (type $generated@@61) $generated@@78)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@75)) (= ($generated@@1 $generated@@79) 10)) (= (type $generated@@64) $generated@@79)) (= (type $generated@@65) $generated@@75)) (= ($generated@@1 $generated@@80) 11)) (= (type $generated@@66) $generated@@80)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= ($generated@@1 $generated@@81) 12)) (= (type $generated@@69) $generated@@81)) (= (type $generated@@70) $generated@@81)) (= (type $generated@@71) $generated@@81)) (= (type $generated@@72) $generated@@78)) (= (type $generated@@73) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)
)
(assert (= ($generated@@84 $generated@@60) 0))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@75)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@44) $generated@@49))
(assert (= ($generated@@85 $generated@@45) $generated@@50))
(assert (= ($generated@@85 $generated@@46) $generated@@51))
(assert (= ($generated@@85 $generated@@47) $generated@@52))
(assert (= ($generated@@85 $generated@@48) $generated@@53))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@78)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@100 $generated@@101)) 13)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@91 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@95 (type $generated@@106))))
(= (type ($generated@@96 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@97 $generated@@109 $generated@@110 $generated@@111)) ($generated@@91 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@95 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@77 (type $generated@@127))))
(= (type ($generated@@98 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@93) 15)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@93)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@77 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@98 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)))) (forall (($generated@@144 Int) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@74)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@149) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@92) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert  (and (= (type $generated@@151) $generated@@74) (= (type $generated@@152) $generated@@92)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@92) (= (type $generated@@154) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@153 $generated@@151 $generated@@154)  (or (= $generated@@153 $generated@@152) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@153 $generated@@151 $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@74))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@92) (= (type $generated@@157) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@152) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@156 $generated@@155 $generated@@157))
)))
(assert  (and (= (type $generated@@158) ($generated@@76 $generated@@2)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@74)
 :pattern ( ($generated@@160 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@164) $generated@@92)) (and ($generated@@159 $generated@@163) (and (not (= $generated@@164 $generated@@152)) (= ($generated@@160 $generated@@164) $generated@@155)))) ($generated@@161 ($generated@@98 ($generated@@96 $generated@@163 $generated@@164) $generated@@158) $generated@@46))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@163 $generated@@164) $generated@@158))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@161 $generated@@165 ($generated@@90 0)))
 :pattern ( ($generated@@161 $generated@@165 ($generated@@90 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@74)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@74) (= (type $generated@@172) $generated@@74)) (= (type $generated@@173) $generated@@168)) ($generated@@161 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@161 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@74)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@74)) ($generated@@161 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@161 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@92) (= ($generated@@161 $generated@@187 $generated@@155)  (or (= $generated@@187 $generated@@152) (= ($generated@@160 $generated@@187) $generated@@155))))
 :pattern ( ($generated@@161 $generated@@187 $generated@@155))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 18)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@92 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@77 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@92) (= (type $generated@@238) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@239) ($generated@@76 $generated@@4))) (= (type $generated@@241) $generated@@92)) (= (type $generated@@242) ($generated@@76 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (= (type $generated@@244) $generated@@74))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@92) (= (type $generated@@246) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@245 $generated@@244 $generated@@246) ($generated@@89 $generated@@245 $generated@@151 $generated@@246)))
 :pattern ( ($generated@@89 $generated@@245 $generated@@244 $generated@@246))
)))
(assert (= (type $generated@@247) $generated@@74))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@92) (= (type $generated@@249) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@248 $generated@@247 $generated@@249) ($generated@@89 $generated@@248 $generated@@155 $generated@@249)))
 :pattern ( ($generated@@89 $generated@@248 $generated@@247 $generated@@249))
)))
(assert (= ($generated@@84 $generated@@158) 0))
(assert (forall (($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@76 $generated@@251))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (= ($generated@@250 $generated@@2 $generated@@66 $generated@@72) $generated@@158))
(assert ($generated@@254 $generated@@158))
(assert (= (type $generated@@255) ($generated@@76 ($generated@@91 $generated@@177 $generated@@4))))
(assert (= ($generated@@84 $generated@@255) 0))
(assert (= ($generated@@250 ($generated@@91 $generated@@177 $generated@@4) $generated@@66 $generated@@73) $generated@@255))
(assert ($generated@@254 $generated@@255))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@177)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert  (=> (<= 0 $generated@@256) (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@262) $generated@@92)) (or ($generated@@258 $generated@@261 $generated@@262) (and (not (= 0 $generated@@256)) (and ($generated@@159 $generated@@261) (and (not (= $generated@@262 $generated@@152)) (and ($generated@@161 $generated@@262 $generated@@247) ($generated@@89 $generated@@262 $generated@@247 $generated@@261))))))) ($generated@@257 $generated@@261 $generated@@262)) ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@261 $generated@@262) $generated@@255) ($generated@@259 $generated@@262))))
 :pattern ( ($generated@@257 $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@263 $generated@@265 $generated@@266)) $generated@@168)
 :pattern ( ($generated@@263 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@74) (= (type $generated@@268) $generated@@74)) (= (type $generated@@269) $generated@@177)) (= (type $generated@@270) $generated@@177)) (= ($generated@@161 ($generated@@263 $generated@@269 $generated@@270) ($generated@@167 $generated@@267 $generated@@268))  (and ($generated@@264 $generated@@269 $generated@@267) ($generated@@264 $generated@@270 $generated@@268))))
 :pattern ( ($generated@@161 ($generated@@263 $generated@@269 $generated@@270) ($generated@@167 $generated@@267 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@168) (= (type $generated@@272) $generated@@168)) (= ($generated@@174 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@174 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@276) $generated@@74)) (= ($generated@@161 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@177) ($generated@@0 ($generated@@96 $generated@@275 $generated@@277))) ($generated@@264 $generated@@277 $generated@@276))
 :pattern ( ($generated@@96 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@161 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@74)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@281) $generated@@74)) (= ($generated@@161 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@177) ($generated@@0 ($generated@@96 $generated@@280 $generated@@282))) ($generated@@264 $generated@@282 $generated@@281))
 :pattern ( ($generated@@96 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@161 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 (type $generated@@284)))
(= (type ($generated@@283 $generated@@284)) $generated@@285))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= ($generated@@283 $generated@@286) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@74) (= (type $generated@@289) $generated@@74)) (= (type $generated@@290) $generated@@177)) (= (type $generated@@291) $generated@@177)) (= (type $generated@@292) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@159 $generated@@292)) (= ($generated@@89 ($generated@@263 $generated@@290 $generated@@291) ($generated@@167 $generated@@288 $generated@@289) $generated@@292)  (and ($generated@@287 $generated@@290 $generated@@288 $generated@@292) ($generated@@287 $generated@@291 $generated@@289 $generated@@292))))
 :pattern ( ($generated@@89 ($generated@@263 $generated@@290 $generated@@291) ($generated@@167 $generated@@288 $generated@@289) $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@79)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@168) (= ($generated@@166 $generated@@295) (= ($generated@@293 $generated@@295) $generated@@64)))
 :pattern ( ($generated@@166 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@168) ($generated@@166 $generated@@296)) (exists (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (and (and (= (type $generated@@297) $generated@@177) (= (type $generated@@298) $generated@@177)) (= $generated@@296 ($generated@@263 $generated@@297 $generated@@298)))
 :no-pattern (type $generated@@297)
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@166 $generated@@296))
)))
(assert  (and (and (forall (($generated@@303 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@303)) 19)) (forall (($generated@@304 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@301 $generated@@304))
))) (forall (($generated@@305 T@T) ) (! (= (type ($generated@@299 $generated@@305)) ($generated@@301 $generated@@305))
 :pattern ( ($generated@@299 $generated@@305))
))))
(assert (forall (($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@306)) 0)
 :pattern ( ($generated@@299 $generated@@306))
)))
(assert ($generated@@254 $generated@@60))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@74) (= (type $generated@@309) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@287 ($generated@@259 $generated@@307) $generated@@308 $generated@@309) ($generated@@89 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@287 ($generated@@259 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@311) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@312) $generated@@177)) (= (type $generated@@313) $generated@@74)) ($generated@@147 $generated@@310 $generated@@311)) ($generated@@287 $generated@@312 $generated@@313 $generated@@310)) ($generated@@287 $generated@@312 $generated@@313 $generated@@311))
 :pattern ( ($generated@@147 $generated@@310 $generated@@311) ($generated@@287 $generated@@312 $generated@@313 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@314) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@315) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@317) $generated@@74)) ($generated@@147 $generated@@314 $generated@@315)) ($generated@@89 $generated@@316 $generated@@317 $generated@@314)) ($generated@@89 $generated@@316 $generated@@317 $generated@@315))
 :pattern ( ($generated@@147 $generated@@314 $generated@@315) ($generated@@89 $generated@@316 $generated@@317 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@319) $generated@@92)) (=> (and (and ($generated@@159 $generated@@318) (and (not (= $generated@@319 $generated@@152)) (= ($generated@@160 $generated@@319) $generated@@155))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@318 $generated@@319) $generated@@60))) ($generated@@89 ($generated@@98 ($generated@@96 $generated@@318 $generated@@319) $generated@@158) $generated@@46 $generated@@318)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@318 $generated@@319) $generated@@158))
)))
(assert (forall (($generated@@322 T@T) ) (! (= (type ($generated@@321 $generated@@322)) ($generated@@91 $generated@@322 $generated@@2))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@94 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@91 $generated@@324 $generated@@2)) (and (= (= ($generated@@320 $generated@@323) 0) (= $generated@@323 ($generated@@321 $generated@@324))) (=> (not (= ($generated@@320 $generated@@323) 0)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) (< 0 ($generated ($generated@@96 $generated@@323 $generated@@325))))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 20)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@91 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@96 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@96 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 21)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@91 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@96 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@96 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@364) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@362 $generated@@363 $generated@@364)) (and ($generated@@147 $generated@@363 $generated@@364) (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@77 (type $generated@@366))))
 (=> (and (and (= (type $generated@@365) $generated@@92) (= (type $generated@@366) ($generated@@76 $generated@@367))) (not ($generated@@254 $generated@@366))) (= ($generated@@98 ($generated@@96 $generated@@363 $generated@@365) $generated@@366) ($generated@@98 ($generated@@96 $generated@@364 $generated@@365) $generated@@366))))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@364 $generated@@365) $generated@@366))
))))
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@370) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@371) $generated@@92)) (=> (and (and (and ($generated@@159 $generated@@369) ($generated@@159 $generated@@370)) (and (not (= $generated@@371 $generated@@152)) ($generated@@161 $generated@@371 $generated@@247))) (and ($generated@@368 $generated@@369) ($generated@@147 $generated@@369 $generated@@370))) (=> (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@77 (type $generated@@373))))
 (=> (and (and (= (type $generated@@372) $generated@@92) (= (type $generated@@373) ($generated@@76 $generated@@374))) (and (not (= $generated@@372 $generated@@152)) (or (= $generated@@372 $generated@@371) ($generated@@0 ($generated@@96 ($generated@@98 ($generated@@96 $generated@@369 $generated@@371) $generated@@255) ($generated@@259 $generated@@372)))))) (= ($generated@@98 ($generated@@96 $generated@@369 $generated@@372) $generated@@373) ($generated@@98 ($generated@@96 $generated@@370 $generated@@372) $generated@@373))))
 :no-pattern (type $generated@@372)
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
)) (= ($generated@@257 $generated@@369 $generated@@371) ($generated@@257 $generated@@370 $generated@@371)))))
 :pattern ( ($generated@@368 $generated@@369) ($generated@@147 $generated@@369 $generated@@370) ($generated@@257 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@94 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@91 $generated@@376 $generated@@2)) (= ($generated@@183 $generated@@375) (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@376) (and (<= 0 ($generated ($generated@@96 $generated@@375 $generated@@377))) (<= ($generated ($generated@@96 $generated@@375 $generated@@377)) ($generated@@320 $generated@@375))))
 :pattern ( ($generated@@96 $generated@@375 $generated@@377))
)))))
 :pattern ( ($generated@@183 $generated@@375))
)))
(assert (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@177) ($generated@@264 $generated@@381 $generated@@151)) (and (= ($generated@@259 ($generated@@378 $generated@@92 $generated@@381)) $generated@@381) ($generated@@161 ($generated@@378 $generated@@92 $generated@@381) $generated@@151)))
 :pattern ( ($generated@@264 $generated@@381 $generated@@151))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@177) ($generated@@264 $generated@@382 $generated@@244)) (and (= ($generated@@259 ($generated@@378 $generated@@92 $generated@@382)) $generated@@382) ($generated@@161 ($generated@@378 $generated@@92 $generated@@382) $generated@@244)))
 :pattern ( ($generated@@264 $generated@@382 $generated@@244))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@177) ($generated@@264 $generated@@383 $generated@@155)) (and (= ($generated@@259 ($generated@@378 $generated@@92 $generated@@383)) $generated@@383) ($generated@@161 ($generated@@378 $generated@@92 $generated@@383) $generated@@155)))
 :pattern ( ($generated@@264 $generated@@383 $generated@@155))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@177) ($generated@@264 $generated@@384 $generated@@247)) (and (= ($generated@@259 ($generated@@378 $generated@@92 $generated@@384)) $generated@@384) ($generated@@161 ($generated@@378 $generated@@92 $generated@@384) $generated@@247)))
 :pattern ( ($generated@@264 $generated@@384 $generated@@247))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@92) (= ($generated@@161 $generated@@385 $generated@@244)  (and ($generated@@161 $generated@@385 $generated@@151) (not (= $generated@@385 $generated@@152)))))
 :pattern ( ($generated@@161 $generated@@385 $generated@@244))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@92) (= ($generated@@161 $generated@@386 $generated@@247)  (and ($generated@@161 $generated@@386 $generated@@155) (not (= $generated@@386 $generated@@152)))))
 :pattern ( ($generated@@161 $generated@@386 $generated@@247))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@330 (type $generated@@387))))
(let (($generated@@389 ($generated@@329 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@328 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@327 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@326 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@330 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@91 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@330 (type $generated@@394))))
(let (($generated@@396 ($generated@@329 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@328 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@327 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@96 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@348 (type $generated@@398))))
(let (($generated@@400 ($generated@@347 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@346 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@345 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@344 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@348 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@91 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@348 (type $generated@@405))))
(let (($generated@@407 ($generated@@347 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@346 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@345 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@96 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@410) $generated@@74)) (= ($generated@@161 $generated@@409 ($generated@@182 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@177) (< 0 ($generated ($generated@@96 $generated@@409 $generated@@411)))) ($generated@@264 $generated@@411 $generated@@410))
 :pattern ( ($generated@@96 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@161 $generated@@409 ($generated@@182 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@413) $generated@@74)) (= (type $generated@@414) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@412 ($generated@@273 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@177) ($generated@@0 ($generated@@96 $generated@@412 $generated@@415))) ($generated@@287 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@96 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@89 $generated@@412 ($generated@@273 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@91 $generated@@177 $generated@@4)) (= (type $generated@@417) $generated@@74)) (= (type $generated@@418) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@416 ($generated@@278 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@177) ($generated@@0 ($generated@@96 $generated@@416 $generated@@419))) ($generated@@287 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@96 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@89 $generated@@416 ($generated@@278 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@96 ($generated@@321 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@96 ($generated@@321 $generated@@421) $generated@@420)))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@423) $generated@@92)) (=> (and (and ($generated@@159 $generated@@422) (and (not (= $generated@@423 $generated@@152)) (= ($generated@@160 $generated@@423) $generated@@155))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@422 $generated@@423) $generated@@60))) ($generated@@89 ($generated@@98 ($generated@@96 $generated@@422 $generated@@423) $generated@@255) ($generated@@273 $generated@@244) $generated@@422)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@422 $generated@@423) $generated@@255))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@91 $generated@@177 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@330 (type $generated@@427))))
(let (($generated@@429 ($generated@@329 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@91 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@328 $generated@@177 $generated@@177)) (= (type $generated@@431) $generated@@177)) (= ($generated@@0 ($generated@@96 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@96 ($generated@@326 $generated@@430) ($generated@@175 ($generated@@378 $generated@@168 $generated@@431)))) (= ($generated@@96 ($generated@@425 $generated@@430) ($generated@@175 ($generated@@378 $generated@@168 $generated@@431))) ($generated@@176 ($generated@@378 $generated@@168 $generated@@431))))))
 :pattern ( ($generated@@96 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert  (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@434)) ($generated@@91 $generated@@177 $generated@@4))
 :pattern ( ($generated@@432 $generated@@434))
)) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@348 (type $generated@@435))))
(let (($generated@@437 ($generated@@347 (type $generated@@435))))
(= (type ($generated@@433 $generated@@435)) ($generated@@91 $generated@@437 $generated@@436))))
 :pattern ( ($generated@@433 $generated@@435))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@346 $generated@@177 $generated@@177)) (= (type $generated@@439) $generated@@177)) (= ($generated@@0 ($generated@@96 ($generated@@432 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@96 ($generated@@344 $generated@@438) ($generated@@175 ($generated@@378 $generated@@168 $generated@@439)))) (= ($generated@@96 ($generated@@433 $generated@@438) ($generated@@175 ($generated@@378 $generated@@168 $generated@@439))) ($generated@@176 ($generated@@378 $generated@@168 $generated@@439))))))
 :pattern ( ($generated@@96 ($generated@@432 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@329 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@96 ($generated@@391 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@96 ($generated@@326 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@96 ($generated@@425 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@440) $generated@@444))
 :pattern ( ($generated@@96 ($generated@@425 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@96 ($generated@@391 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@347 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@346 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@96 ($generated@@402 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@96 ($generated@@344 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@96 ($generated@@433 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@445) $generated@@449))
 :pattern ( ($generated@@96 ($generated@@433 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@96 ($generated@@402 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@74)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@328 $generated@@177 $generated@@177)) (= (type $generated@@454) $generated@@74)) (= (type $generated@@455) $generated@@74)) (= (type $generated@@456) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@453) $generated@@457))) (and ($generated@@287 ($generated@@96 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@287 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@96 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@89 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@459 $generated@@460)) $generated@@74)
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@461) ($generated@@346 $generated@@177 $generated@@177)) (= (type $generated@@462) $generated@@74)) (= (type $generated@@463) $generated@@74)) (= (type $generated@@464) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@461) $generated@@465))) (and ($generated@@287 ($generated@@96 ($generated@@433 $generated@@461) $generated@@465) $generated@@463 $generated@@464) ($generated@@287 $generated@@465 $generated@@462 $generated@@464)))
 :pattern ( ($generated@@96 ($generated@@433 $generated@@461) $generated@@465))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@461) $generated@@465))
))))
 :pattern ( ($generated@@89 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@467) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@468) ($generated@@91 $generated@@92 $generated@@93))) (not (= $generated@@466 $generated@@468))) (and ($generated@@147 $generated@@466 $generated@@467) ($generated@@147 $generated@@467 $generated@@468))) ($generated@@147 $generated@@466 $generated@@468))
 :pattern ( ($generated@@147 $generated@@466 $generated@@467) ($generated@@147 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@T) ) (! (= (type ($generated@@469 $generated@@470)) ($generated@@91 $generated@@470 $generated@@4))
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@348 (type $generated@@471))))
(let (($generated@@473 ($generated@@347 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@346 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@345 $generated@@473 $generated@@472)) (= ($generated@@344 $generated@@471) ($generated@@469 $generated@@473))))))
 :pattern ( ($generated@@344 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@348 (type $generated@@474))))
(let (($generated@@476 ($generated@@347 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@346 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@345 $generated@@476 $generated@@475)) (= ($generated@@402 $generated@@474) ($generated@@469 $generated@@475))))))
 :pattern ( ($generated@@402 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@348 (type $generated@@477))))
(let (($generated@@479 ($generated@@347 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@346 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@345 $generated@@479 $generated@@478)) (= ($generated@@432 $generated@@477) ($generated@@469 $generated@@177))))))
 :pattern ( ($generated@@432 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@330 (type $generated@@480))))
(let (($generated@@482 ($generated@@329 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@328 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@327 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@177) (= (type $generated@@484) $generated@@177)) ($generated@@0 ($generated@@96 ($generated@@424 $generated@@480) ($generated@@259 ($generated@@263 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@424 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@348 (type $generated@@485))))
(let (($generated@@487 ($generated@@347 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@346 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@345 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@177) (= (type $generated@@489) $generated@@177)) ($generated@@0 ($generated@@96 ($generated@@432 $generated@@485) ($generated@@259 ($generated@@263 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@432 $generated@@485))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@80)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@T) ) (!  (=> (and (= (type $generated@@492) $generated@@80) (= (type $generated@@493) $generated@@78)) (and (= ($generated@@490 ($generated@@250 $generated@@494 $generated@@492 $generated@@493)) $generated@@492) (= ($generated@@87 ($generated@@250 $generated@@494 $generated@@492 $generated@@493)) $generated@@493)))
 :pattern ( ($generated@@250 $generated@@494 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@177) ($generated@@264 $generated@@495 $generated@@46)) (and (= ($generated@@259 ($generated@@378 $generated@@2 $generated@@495)) $generated@@495) ($generated@@161 ($generated@@378 $generated@@2 $generated@@495) $generated@@46)))
 :pattern ( ($generated@@264 $generated@@495 $generated@@46))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@177) ($generated@@264 $generated@@496 $generated@@47)) (and (= ($generated@@259 ($generated@@378 $generated@@3 $generated@@496)) $generated@@496) ($generated@@161 ($generated@@378 $generated@@3 $generated@@496) $generated@@47)))
 :pattern ( ($generated@@264 $generated@@496 $generated@@47))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@177) ($generated@@264 $generated@@497 $generated@@44)) (and (= ($generated@@259 ($generated@@378 $generated@@4 $generated@@497)) $generated@@497) ($generated@@161 ($generated@@378 $generated@@4 $generated@@497) $generated@@44)))
 :pattern ( ($generated@@264 $generated@@497 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@498) 22))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@177) ($generated@@264 $generated@@499 $generated@@45)) (and (= ($generated@@259 ($generated@@378 $generated@@498 $generated@@499)) $generated@@499) ($generated@@161 ($generated@@378 $generated@@498 $generated@@499) $generated@@45)))
 :pattern ( ($generated@@264 $generated@@499 $generated@@45))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@74) (= ($generated@@264 ($generated@@259 $generated@@500) $generated@@501) ($generated@@161 $generated@@500 $generated@@501)))
 :pattern ( ($generated@@264 ($generated@@259 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@94 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@91 $generated@@503 $generated@@2)) (<= 0 ($generated@@320 $generated@@502))))
 :pattern ( ($generated@@320 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@302 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@301 $generated@@505)) (<= 0 ($generated@@300 $generated@@504))))
 :pattern ( ($generated@@300 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@74)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@74) (= (type $generated@@509) $generated@@74)) (= ($generated@@506 ($generated@@450 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@450 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@74)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@74) (= (type $generated@@513) $generated@@74)) (= ($generated@@510 ($generated@@450 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@450 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@74) (= (type $generated@@515) $generated@@74)) (= ($generated@@85 ($generated@@450 $generated@@514 $generated@@515)) $generated@@58))
 :pattern ( ($generated@@450 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@74)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@74) (= (type $generated@@519) $generated@@74)) (= ($generated@@516 ($generated@@458 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@458 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@74)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@74) (= (type $generated@@523) $generated@@74)) (= ($generated@@520 ($generated@@458 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@458 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@74) (= (type $generated@@525) $generated@@74)) (= ($generated@@85 ($generated@@458 $generated@@524 $generated@@525)) $generated@@59))
 :pattern ( ($generated@@458 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@177) (= (type $generated@@527) $generated@@177)) (= ($generated@@293 ($generated@@263 $generated@@526 $generated@@527)) $generated@@64))
 :pattern ( ($generated@@263 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@74)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@74) (= (type $generated@@531) $generated@@74)) (= ($generated@@528 ($generated@@167 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@167 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@74)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@74) (= (type $generated@@535) $generated@@74)) (= ($generated@@532 ($generated@@167 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@167 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@177) (= (type $generated@@537) $generated@@177)) (= ($generated@@175 ($generated@@263 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@263 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@177) (= (type $generated@@539) $generated@@177)) (= ($generated@@176 ($generated@@263 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@263 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@92) ($generated@@161 $generated@@540 $generated@@151))
 :pattern ( ($generated@@161 $generated@@540 $generated@@151))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@74)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@302 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@301 $generated@@177)) (= (type $generated@@548) $generated@@74)) (= (type $generated@@549) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@300 $generated@@547))) ($generated@@287 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@89 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@90 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@90 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@74)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@74) (= ($generated@@553 ($generated@@273 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@273 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@74) (= ($generated@@85 ($generated@@273 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@273 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@74)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@74) (= ($generated@@557 ($generated@@278 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@278 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@74) (= ($generated@@85 ($generated@@278 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@278 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@74)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@74) (= ($generated@@561 ($generated@@182 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@182 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@74) (= ($generated@@85 ($generated@@182 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@74)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@74) (= ($generated@@565 ($generated@@541 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@541 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@74) (= ($generated@@85 ($generated@@541 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
(= ($generated@@378 $generated@@570 ($generated@@259 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@259 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@328 $generated@@177 $generated@@177)) (= (type $generated@@572) $generated@@74)) (= (type $generated@@573) $generated@@74)) (= ($generated@@161 $generated@@571 ($generated@@450 $generated@@572 $generated@@573)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@571) $generated@@574))) (and ($generated@@264 ($generated@@96 ($generated@@425 $generated@@571) $generated@@574) $generated@@573) ($generated@@264 $generated@@574 $generated@@572)))
 :pattern ( ($generated@@96 ($generated@@425 $generated@@571) $generated@@574))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@571) $generated@@574))
))))
 :pattern ( ($generated@@161 $generated@@571 ($generated@@450 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@346 $generated@@177 $generated@@177)) (= (type $generated@@576) $generated@@74)) (= (type $generated@@577) $generated@@74)) (= ($generated@@161 $generated@@575 ($generated@@458 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@177) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@575) $generated@@578))) (and ($generated@@264 ($generated@@96 ($generated@@433 $generated@@575) $generated@@578) $generated@@577) ($generated@@264 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@96 ($generated@@433 $generated@@575) $generated@@578))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@161 $generated@@575 ($generated@@458 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@177) (= (type $generated@@582) $generated@@177)) (< ($generated@@579 $generated@@581) ($generated@@580 ($generated@@263 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@263 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@177) (= (type $generated@@584) $generated@@177)) (< ($generated@@579 $generated@@584) ($generated@@580 ($generated@@263 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@263 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@177) (= (type $generated@@586) $generated@@74)) (= (type $generated@@587) $generated@@74)) ($generated@@264 $generated@@585 ($generated@@450 $generated@@586 $generated@@587))) (and (= ($generated@@259 ($generated@@378 ($generated@@328 $generated@@177 $generated@@177) $generated@@585)) $generated@@585) ($generated@@161 ($generated@@378 ($generated@@328 $generated@@177 $generated@@177) $generated@@585) ($generated@@450 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@264 $generated@@585 ($generated@@450 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@177) (= (type $generated@@589) $generated@@74)) (= (type $generated@@590) $generated@@74)) ($generated@@264 $generated@@588 ($generated@@458 $generated@@589 $generated@@590))) (and (= ($generated@@259 ($generated@@378 ($generated@@346 $generated@@177 $generated@@177) $generated@@588)) $generated@@588) ($generated@@161 ($generated@@378 ($generated@@346 $generated@@177 $generated@@177) $generated@@588) ($generated@@458 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@264 $generated@@588 ($generated@@458 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@74) (= (type $generated@@592) $generated@@74)) (= (type $generated@@593) $generated@@177)) ($generated@@264 $generated@@593 ($generated@@167 $generated@@591 $generated@@592))) (and (= ($generated@@259 ($generated@@378 $generated@@168 $generated@@593)) $generated@@593) ($generated@@161 ($generated@@378 $generated@@168 $generated@@593) ($generated@@167 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@264 $generated@@593 ($generated@@167 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (not ($generated@@0 ($generated@@96 ($generated@@469 $generated@@595) $generated@@594))))
 :pattern ( (let (($generated@@595 (type $generated@@594)))
($generated@@96 ($generated@@469 $generated@@595) $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@81)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@74) (= (type $generated@@599) $generated@@74)) (and (= ($generated@@85 ($generated@@167 $generated@@598 $generated@@599)) $generated@@65) (= ($generated@@596 ($generated@@167 $generated@@598 $generated@@599)) $generated@@70)))
 :pattern ( ($generated@@167 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@168) (= ($generated@@579 ($generated@@259 $generated@@600)) ($generated@@580 $generated@@600)))
 :pattern ( ($generated@@579 ($generated@@259 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@177) ($generated@@264 $generated@@601 ($generated@@90 0))) (and (= ($generated@@259 ($generated@@378 $generated@@2 $generated@@601)) $generated@@601) ($generated@@161 ($generated@@378 ($generated@@91 $generated@@177 $generated@@4) $generated@@601) ($generated@@90 0))))
 :pattern ( ($generated@@264 $generated@@601 ($generated@@90 0)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@177) (= (type $generated@@603) $generated@@74)) ($generated@@264 $generated@@602 ($generated@@273 $generated@@603))) (and (= ($generated@@259 ($generated@@378 ($generated@@91 $generated@@177 $generated@@4) $generated@@602)) $generated@@602) ($generated@@161 ($generated@@378 ($generated@@91 $generated@@177 $generated@@4) $generated@@602) ($generated@@273 $generated@@603))))
 :pattern ( ($generated@@264 $generated@@602 ($generated@@273 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@177) (= (type $generated@@605) $generated@@74)) ($generated@@264 $generated@@604 ($generated@@278 $generated@@605))) (and (= ($generated@@259 ($generated@@378 ($generated@@91 $generated@@177 $generated@@4) $generated@@604)) $generated@@604) ($generated@@161 ($generated@@378 ($generated@@91 $generated@@177 $generated@@4) $generated@@604) ($generated@@278 $generated@@605))))
 :pattern ( ($generated@@264 $generated@@604 ($generated@@278 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@177) (= (type $generated@@607) $generated@@74)) ($generated@@264 $generated@@606 ($generated@@182 $generated@@607))) (and (= ($generated@@259 ($generated@@378 ($generated@@91 $generated@@177 $generated@@2) $generated@@606)) $generated@@606) ($generated@@161 ($generated@@378 ($generated@@91 $generated@@177 $generated@@2) $generated@@606) ($generated@@182 $generated@@607))))
 :pattern ( ($generated@@264 $generated@@606 ($generated@@182 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@177) (= (type $generated@@609) $generated@@74)) ($generated@@264 $generated@@608 ($generated@@541 $generated@@609))) (and (= ($generated@@259 ($generated@@378 ($generated@@301 $generated@@177) $generated@@608)) $generated@@608) ($generated@@161 ($generated@@378 ($generated@@301 $generated@@177) $generated@@608) ($generated@@541 $generated@@609))))
 :pattern ( ($generated@@264 $generated@@608 ($generated@@541 $generated@@609)))
)))
(assert (= ($generated@@85 $generated@@151) $generated@@62))
(assert (= ($generated@@596 $generated@@151) $generated@@69))
(assert (= ($generated@@85 $generated@@244) $generated@@63))
(assert (= ($generated@@596 $generated@@244) $generated@@69))
(assert (= ($generated@@85 $generated@@155) $generated@@67))
(assert (= ($generated@@596 $generated@@155) $generated@@71))
(assert (= ($generated@@85 $generated@@247) $generated@@68))
(assert (= ($generated@@596 $generated@@247) $generated@@71))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@91 $generated@@177 $generated@@2)) (= (type $generated@@611) $generated@@74)) (= (type $generated@@612) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@610 ($generated@@182 $generated@@611) $generated@@612) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@177) (< 0 ($generated ($generated@@96 $generated@@610 $generated@@613)))) ($generated@@287 $generated@@613 $generated@@611 $generated@@612))
 :pattern ( ($generated@@96 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@89 $generated@@610 ($generated@@182 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@168) (= (type $generated@@615) $generated@@74)) (= (type $generated@@616) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@159 $generated@@616) (and ($generated@@166 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@74) ($generated@@89 $generated@@614 ($generated@@167 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@89 $generated@@614 ($generated@@167 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@287 ($generated@@175 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@287 ($generated@@175 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@168) (= (type $generated@@619) $generated@@74)) (= (type $generated@@620) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@159 $generated@@620) (and ($generated@@166 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@74) ($generated@@89 $generated@@618 ($generated@@167 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@89 $generated@@618 ($generated@@167 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@287 ($generated@@176 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@287 ($generated@@176 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@623) $generated@@92)) (and ($generated@@159 $generated@@622) (and (not (= $generated@@623 $generated@@152)) (= ($generated@@160 $generated@@623) $generated@@155)))) ($generated@@161 ($generated@@98 ($generated@@96 $generated@@622 $generated@@623) $generated@@255) ($generated@@273 $generated@@244)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@622 $generated@@623) $generated@@255))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@177) (= (type $generated@@625) $generated@@177)) (= ($generated@@263 ($generated@@283 $generated@@624) ($generated@@283 $generated@@625)) ($generated@@283 ($generated@@263 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@263 ($generated@@283 $generated@@624) ($generated@@283 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@259 ($generated@@283 $generated@@626)) ($generated@@283 ($generated@@259 $generated@@626)))
 :pattern ( ($generated@@259 ($generated@@283 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@302 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@301 $generated@@628)) (= ($generated@@300 $generated@@627) 0)) (= $generated@@627 ($generated@@299 $generated@@628))))
 :pattern ( ($generated@@300 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@91 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@320 ($generated@@97 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@320 $generated@@629) ($generated ($generated@@96 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@320 ($generated@@97 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@634) $generated@@2)) ($generated@@89 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@89 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@636) $generated@@3)) ($generated@@89 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@89 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@638) $generated@@4)) ($generated@@89 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@89 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@640) $generated@@498)) ($generated@@89 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@89 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@642) $generated@@177)) ($generated@@89 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@89 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@301 $generated@@177)) (= (type $generated@@644) $generated@@74)) (= ($generated@@161 $generated@@643 ($generated@@541 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@300 $generated@@643))) ($generated@@264 ($generated@@542 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@542 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@161 $generated@@643 ($generated@@541 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@301 $generated@@177)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@300 $generated@@647))) (< ($generated@@580 ($generated@@378 $generated@@168 ($generated@@542 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@580 ($generated@@378 $generated@@168 ($generated@@542 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@328 $generated@@177 $generated@@177)) (= (type $generated@@650) $generated@@74)) (= (type $generated@@651) $generated@@74)) ($generated@@161 $generated@@649 ($generated@@450 $generated@@650 $generated@@651))) (and (and ($generated@@161 ($generated@@326 $generated@@649) ($generated@@273 $generated@@650)) ($generated@@161 ($generated@@391 $generated@@649) ($generated@@273 $generated@@651))) ($generated@@161 ($generated@@424 $generated@@649) ($generated@@273 ($generated@@167 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@161 $generated@@649 ($generated@@450 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@346 $generated@@177 $generated@@177)) (= (type $generated@@653) $generated@@74)) (= (type $generated@@654) $generated@@74)) ($generated@@161 $generated@@652 ($generated@@458 $generated@@653 $generated@@654))) (and (and ($generated@@161 ($generated@@344 $generated@@652) ($generated@@278 $generated@@653)) ($generated@@161 ($generated@@402 $generated@@652) ($generated@@278 $generated@@654))) ($generated@@161 ($generated@@432 $generated@@652) ($generated@@278 ($generated@@167 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@161 $generated@@652 ($generated@@458 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@161 $generated@@655 $generated@@46))
 :pattern ( ($generated@@161 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@161 $generated@@656 $generated@@47))
 :pattern ( ($generated@@161 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@161 $generated@@657 $generated@@44))
 :pattern ( ($generated@@161 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@498) ($generated@@161 $generated@@658 $generated@@45))
 :pattern ( ($generated@@161 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@177) ($generated@@161 $generated@@659 $generated@@48))
 :pattern ( ($generated@@161 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(assert  (and (and (= (type $generated@@660) ($generated@@190 $generated@@92 $generated@@4)) (= (type $generated@@661) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@663) $generated@@92)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@664  (=> (= $generated@@660 ($generated@@189 $generated@@152 $generated@@661 $generated@@60 false)) (=> (and (= $generated@@662 ($generated ($generated@@98 ($generated@@96 $generated@@661 $generated@@663) $generated@@158))) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@662 ($generated ($generated@@98 ($generated@@96 $generated@@661 $generated@@663) $generated@@158)))))))
(let (($generated@@665  (=> (and ($generated@@159 $generated@@661) ($generated@@368 $generated@@661)) (=> (and (and (and (not (= $generated@@663 $generated@@152)) (and ($generated@@161 $generated@@663 $generated@@247) ($generated@@89 $generated@@663 $generated@@247 $generated@@661))) (= 1 $generated@@256)) (and ($generated@@257 $generated@@661 $generated@@663) (= (ControlFlow 0 3) 2))) $generated@@664))))
$generated@@665)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U) T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@217 (T@T T@U T@U) T@U)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U T@U T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@326 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@357 (T@U) Int)
(declare-fun $generated@@358 (T@T) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@T T@T) T@U)
(declare-fun $generated@@383 (T@T T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@385 (T@T) T@T)
(declare-fun $generated@@399 (T@U T@U) Bool)
(declare-fun $generated@@405 (T@U) Bool)
(declare-fun $generated@@415 (T@T T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) Bool)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@499 (T@U T@U) T@U)
(declare-fun $generated@@507 (T@U T@U) T@U)
(declare-fun $generated@@515 (T@U T@U) T@U)
(declare-fun $generated@@542 (T@T) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@571 () T@T)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@615 (T@U Int) T@U)
(declare-fun $generated@@627 (T@U) Int)
(declare-fun $generated@@629 (T@U) T@U)
(declare-fun $generated@@633 (T@U) T@U)
(declare-fun $generated@@637 (T@U) T@U)
(declare-fun $generated@@641 (T@U) T@U)
(declare-fun $generated@@655 (T@U) Int)
(declare-fun $generated@@656 (T@U) Int)
(declare-fun $generated@@673 (T@T) T@U)
(declare-fun $generated@@679 (T@U) T@U)
(declare-fun $generated@@693 (T@U T@U) Bool)
(declare-fun $generated@@742 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@78 $generated@@85))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@61) $generated@@80)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@64) $generated@@81)) (= (type $generated@@65) $generated@@77)) (= ($generated@@1 $generated@@82) 11)) (= (type $generated@@66) $generated@@82)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@83) 12)) (= (type $generated@@69) $generated@@83)) (= (type $generated@@70) $generated@@83)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)) (= (type $generated@@75) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (= ($generated@@86 $generated@@60) 0))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@77)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@44) $generated@@49))
(assert (= ($generated@@87 $generated@@45) $generated@@50))
(assert (= ($generated@@87 $generated@@46) $generated@@51))
(assert (= ($generated@@87 $generated@@47) $generated@@52))
(assert (= ($generated@@87 $generated@@48) $generated@@53))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@80)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 13)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@79 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 15)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@79 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@76)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (= (type $generated@@153) $generated@@94) (= (type $generated@@155) $generated@@76)) (= ($generated@@1 $generated@@161) 16)) (= (type $generated@@156) ($generated@@78 ($generated@@93 $generated@@161 $generated@@4)))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@157 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@157 $generated@@162))
))) (= (type $generated@@158) ($generated@@78 $generated@@2))) (= (type $generated@@159) ($generated@@78 $generated@@2))) (= (type $generated@@160) ($generated@@78 $generated@@2))))
(assert  (=> (<= 0 $generated@@149) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@164) $generated@@94)) (or ($generated@@152 $generated@@163 $generated@@164) (and (not (= 0 $generated@@149)) (and ($generated@@151 $generated@@163) (and (not (= $generated@@164 $generated@@153)) (and ($generated@@154 $generated@@164 $generated@@155) ($generated@@91 $generated@@164 $generated@@155 $generated@@163))))))) (= ($generated@@150 $generated@@163 $generated@@164)  (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@156) ($generated@@157 $generated@@164))) (= ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@158)) (- ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@159)) ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@160)))))))
 :pattern ( ($generated@@150 $generated@@163 $generated@@164) ($generated@@151 $generated@@163))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@167) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@165 $generated@@166 $generated@@167)) (forall (($generated@@168 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@94) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@166 $generated@@168) $generated@@60))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@167 $generated@@168) $generated@@60)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@167 $generated@@168) $generated@@60))
)))
 :pattern ( ($generated@@165 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@169) $generated@@76))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@94) (= (type $generated@@171) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@170 $generated@@169 $generated@@171)  (or (= $generated@@170 $generated@@153) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@171 $generated@@170) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@170 $generated@@169 $generated@@171))
)))
(assert (= (type $generated@@172) $generated@@76))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@94) (= (type $generated@@174) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@173 $generated@@172 $generated@@174)  (or (= $generated@@173 $generated@@153) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@174 $generated@@173) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@173 $generated@@172 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@76)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@178) $generated@@94)) (and ($generated@@151 $generated@@177) (and (not (= $generated@@178 $generated@@153)) (= ($generated@@175 $generated@@178) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@177 $generated@@178) $generated@@159) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@177 $generated@@178) $generated@@159))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@180) $generated@@94)) (and ($generated@@151 $generated@@179) (and (not (= $generated@@180 $generated@@153)) (= ($generated@@175 $generated@@180) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@179 $generated@@180) $generated@@160) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@179 $generated@@180) $generated@@160))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@182) $generated@@94)) (and ($generated@@151 $generated@@181) (and (not (= $generated@@182 $generated@@153)) (= ($generated@@175 $generated@@182) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@181 $generated@@182) $generated@@158) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@181 $generated@@182) $generated@@158))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@2) ($generated@@154 $generated@@183 ($generated@@92 0)))
 :pattern ( ($generated@@154 $generated@@183 ($generated@@92 0)))
)))
(assert  (and (= ($generated@@1 $generated@@186) 17) (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@187 $generated@@188)) $generated@@76)
 :pattern ( ($generated@@185 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@76) (= (type $generated@@190) $generated@@76)) (= (type $generated@@191) $generated@@186)) ($generated@@154 $generated@@191 ($generated@@185 $generated@@189 $generated@@190))) ($generated@@184 $generated@@191))
 :pattern ( ($generated@@184 $generated@@191) ($generated@@154 $generated@@191 ($generated@@185 $generated@@189 $generated@@190)))
)))
(assert  (and (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@161)
 :pattern ( ($generated@@193 $generated@@195))
)) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@161)
 :pattern ( ($generated@@194 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@186) (= (type $generated@@198) $generated@@186)) true) (= ($generated@@192 $generated@@197 $generated@@198)  (and (= ($generated@@193 $generated@@197) ($generated@@193 $generated@@198)) (= ($generated@@194 $generated@@197) ($generated@@194 $generated@@198)))))
 :pattern ( ($generated@@192 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@201 T@U) ) (! (= (type ($generated@@199 $generated@@201)) $generated@@76)
 :pattern ( ($generated@@199 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and (= (type $generated@@202) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@203) $generated@@76)) ($generated@@154 $generated@@202 ($generated@@199 $generated@@203))) ($generated@@200 $generated@@202))
 :pattern ( ($generated@@154 $generated@@202 ($generated@@199 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@94) (= ($generated@@154 $generated@@204 $generated@@172)  (or (= $generated@@204 $generated@@153) (= ($generated@@175 $generated@@204) $generated@@172))))
 :pattern ( ($generated@@154 $generated@@204 $generated@@172))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@96 (type $generated@@206))))
(= (type ($generated@@205 $generated@@206 $generated@@207)) ($generated@@93 $generated@@208 $generated@@4)))
 :pattern ( ($generated@@205 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@96 (type $generated@@209))))
 (=> (and (= (type $generated@@209) ($generated@@93 $generated@@211 $generated@@4)) (= (type $generated@@210) ($generated@@93 $generated@@211 $generated@@4))) (= ($generated@@205 ($generated@@205 $generated@@209 $generated@@210) $generated@@210) ($generated@@205 $generated@@209 $generated@@210))))
 :pattern ( ($generated@@205 ($generated@@205 $generated@@209 $generated@@210) $generated@@210))
)))
(assert (= (type $generated@@212) $generated@@76))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@94) (= (type $generated@@214) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@213 $generated@@212 $generated@@214) ($generated@@91 $generated@@213 $generated@@169 $generated@@214)))
 :pattern ( ($generated@@91 $generated@@213 $generated@@212 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@94) (= (type $generated@@216) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@215 $generated@@155 $generated@@216) ($generated@@91 $generated@@215 $generated@@172 $generated@@216)))
 :pattern ( ($generated@@91 $generated@@215 $generated@@155 $generated@@216))
)))
(assert (= ($generated@@86 $generated@@156) 0))
(assert (forall (($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@78 $generated@@218))
 :pattern ( ($generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (= ($generated@@217 ($generated@@93 $generated@@161 $generated@@4) $generated@@66 $generated@@74) $generated@@156))
(assert ($generated@@221 $generated@@156))
(assert (= ($generated@@86 $generated@@158) 0))
(assert (= ($generated@@217 $generated@@2 $generated@@66 $generated@@75) $generated@@158))
(assert ($generated@@221 $generated@@158))
(assert  (=> (<= 0 $generated@@149) (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@223) $generated@@94)) (or ($generated@@152 $generated@@222 $generated@@223) (and (not (= 0 $generated@@149)) (and ($generated@@151 $generated@@222) (and (not (= $generated@@223 $generated@@153)) (and ($generated@@154 $generated@@223 $generated@@155) ($generated@@91 $generated@@223 $generated@@155 $generated@@222))))))) ($generated@@150 $generated@@222 $generated@@223)) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@222 $generated@@223) $generated@@156) ($generated@@157 $generated@@223))))
 :pattern ( ($generated@@150 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@186)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@76) (= (type $generated@@229) $generated@@76)) (= (type $generated@@230) $generated@@161)) (= (type $generated@@231) $generated@@161)) (= ($generated@@154 ($generated@@224 $generated@@230 $generated@@231) ($generated@@185 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@154 ($generated@@224 $generated@@230 $generated@@231) ($generated@@185 $generated@@228 $generated@@229)))
)))
(assert (= ($generated@@86 $generated@@159) 0))
(assert (= ($generated@@217 $generated@@2 $generated@@66 $generated@@72) $generated@@159))
(assert  (not ($generated@@221 $generated@@159)))
(assert (= ($generated@@86 $generated@@160) 0))
(assert (= ($generated@@217 $generated@@2 $generated@@66 $generated@@73) $generated@@160))
(assert  (not ($generated@@221 $generated@@160)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@186) (= (type $generated@@233) $generated@@186)) (= ($generated@@192 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@192 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@76)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@237) $generated@@76)) (= ($generated@@154 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@161) ($generated@@0 ($generated@@98 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@98 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@154 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@76)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@242) $generated@@76)) (= ($generated@@154 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@161) ($generated@@0 ($generated@@98 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@98 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@154 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@76) (= (type $generated@@250) $generated@@76)) (= (type $generated@@251) $generated@@161)) (= (type $generated@@252) $generated@@161)) (= (type $generated@@253) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@151 $generated@@253)) (= ($generated@@91 ($generated@@224 $generated@@251 $generated@@252) ($generated@@185 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@91 ($generated@@224 $generated@@251 $generated@@252) ($generated@@185 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@81)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@186) (= ($generated@@184 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@64)))
 :pattern ( ($generated@@184 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@186) ($generated@@184 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@161) (= (type $generated@@259) $generated@@161)) (= $generated@@257 ($generated@@224 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@184 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 18)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert ($generated@@221 $generated@@60))
(assert  (and (and (and (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@274 $generated@@275)) 19)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@270 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@272 ($generated@@270 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@270 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@268 $generated@@280 $generated@@281 $generated@@282)) $generated@@283))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281 $generated@@282))
))) (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(let (($generated@@289 (type $generated@@285)))
(= (type ($generated@@273 $generated@@284 $generated@@285 $generated@@286 $generated@@287)) ($generated@@270 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@273 $generated@@284 $generated@@285 $generated@@286 $generated@@287))
))) (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@272 (type $generated@@290))))
 (=> (= (type $generated@@293) $generated@@294) (= ($generated@@268 ($generated@@273 $generated@@290 $generated@@291 $generated@@292 $generated@@293) $generated@@291 $generated@@292) $generated@@293)))
 :weight 0
))) (and (and (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (or (= $generated@@297 $generated@@299) (= ($generated@@268 ($generated@@273 $generated@@296 $generated@@297 $generated@@298 $generated@@295) $generated@@299 $generated@@300) ($generated@@268 $generated@@296 $generated@@299 $generated@@300)))
 :weight 0
)) (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (or (= $generated@@304 $generated@@306) (= ($generated@@268 ($generated@@273 $generated@@302 $generated@@303 $generated@@304 $generated@@301) $generated@@305 $generated@@306) ($generated@@268 $generated@@302 $generated@@305 $generated@@306)))
 :weight 0
))) (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (or true (= ($generated@@268 ($generated@@273 $generated@@308 $generated@@309 $generated@@310 $generated@@307) $generated@@311 $generated@@312) ($generated@@268 $generated@@308 $generated@@311 $generated@@312)))
 :weight 0
)))) (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@269 $generated@@313 $generated@@314 $generated@@315 $generated@@316 $generated@@317)) ($generated@@270 $generated@@94 $generated@@4))
 :pattern ( ($generated@@269 $generated@@313 $generated@@314 $generated@@315 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (and (and (and (and (and (and (= (type $generated@@318) $generated@@94) (= (type $generated@@319) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@320) ($generated@@78 $generated@@4))) (= (type $generated@@321) $generated@@94)) (= (type $generated@@322) ($generated@@93 $generated@@161 $generated@@4))) (= (type $generated@@323) $generated@@94)) (= (type $generated@@324) ($generated@@78 $generated@@325))) (= ($generated@@0 ($generated@@268 ($generated@@269 $generated@@318 $generated@@319 $generated@@320 $generated@@321 $generated@@322) $generated@@323 $generated@@324))  (=> (and (not (= $generated@@323 $generated@@318)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@319 $generated@@323) $generated@@320))) (or (= $generated@@323 $generated@@321) ($generated@@0 ($generated@@98 $generated@@322 ($generated@@157 $generated@@323))))))))
 :pattern ( ($generated@@268 ($generated@@269 $generated@@318 $generated@@319 $generated@@320 $generated@@321 $generated@@322) $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328 $generated@@329 $generated@@330 $generated@@331)) ($generated@@270 $generated@@94 $generated@@4))
 :pattern ( ($generated@@326 $generated@@327 $generated@@328 $generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@79 (type $generated@@338))))
 (=> (and (and (and (and (and (and (= (type $generated@@332) $generated@@94) (= (type $generated@@333) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@334) ($generated@@78 $generated@@4))) (= (type $generated@@335) $generated@@94)) (= (type $generated@@336) ($generated@@93 $generated@@161 $generated@@4))) (= (type $generated@@337) $generated@@94)) (= (type $generated@@338) ($generated@@78 $generated@@339))) (= ($generated@@0 ($generated@@268 ($generated@@326 $generated@@332 $generated@@333 $generated@@334 $generated@@335 $generated@@336) $generated@@337 $generated@@338))  (=> (and (not (= $generated@@337 $generated@@332)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@333 $generated@@337) $generated@@334))) (or (= $generated@@337 $generated@@335) ($generated@@0 ($generated@@98 $generated@@336 ($generated@@157 $generated@@337))))))))
 :pattern ( ($generated@@268 ($generated@@326 $generated@@332 $generated@@333 $generated@@334 $generated@@335 $generated@@336) $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@76) (= (type $generated@@342) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@248 ($generated@@157 $generated@@340) $generated@@341 $generated@@342) ($generated@@91 $generated@@340 $generated@@341 $generated@@342)))
 :pattern ( ($generated@@248 ($generated@@157 $generated@@340) $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@343) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@344) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@345) $generated@@161)) (= (type $generated@@346) $generated@@76)) ($generated@@165 $generated@@343 $generated@@344)) ($generated@@248 $generated@@345 $generated@@346 $generated@@343)) ($generated@@248 $generated@@345 $generated@@346 $generated@@344))
 :pattern ( ($generated@@165 $generated@@343 $generated@@344) ($generated@@248 $generated@@345 $generated@@346 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@347) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@348) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@350) $generated@@76)) ($generated@@165 $generated@@347 $generated@@348)) ($generated@@91 $generated@@349 $generated@@350 $generated@@347)) ($generated@@91 $generated@@349 $generated@@350 $generated@@348))
 :pattern ( ($generated@@165 $generated@@347 $generated@@348) ($generated@@91 $generated@@349 $generated@@350 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@352) $generated@@94)) (=> (and (and ($generated@@151 $generated@@351) (and (not (= $generated@@352 $generated@@153)) (= ($generated@@175 $generated@@352) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@351 $generated@@352) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@351 $generated@@352) $generated@@159) $generated@@46 $generated@@351)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@351 $generated@@352) $generated@@159))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@354) $generated@@94)) (=> (and (and ($generated@@151 $generated@@353) (and (not (= $generated@@354 $generated@@153)) (= ($generated@@175 $generated@@354) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@353 $generated@@354) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@353 $generated@@354) $generated@@160) $generated@@46 $generated@@353)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@353 $generated@@354) $generated@@160))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@356) $generated@@94)) (=> (and (and ($generated@@151 $generated@@355) (and (not (= $generated@@356 $generated@@153)) (= ($generated@@175 $generated@@356) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@355 $generated@@356) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@355 $generated@@356) $generated@@158) $generated@@46 $generated@@355)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@355 $generated@@356) $generated@@158))
)))
(assert (forall (($generated@@359 T@T) ) (! (= (type ($generated@@358 $generated@@359)) ($generated@@93 $generated@@359 $generated@@2))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@96 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@93 $generated@@361 $generated@@2)) (and (= (= ($generated@@357 $generated@@360) 0) (= $generated@@360 ($generated@@358 $generated@@361))) (=> (not (= ($generated@@357 $generated@@360) 0)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) (< 0 ($generated ($generated@@98 $generated@@360 $generated@@362))))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@93 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@98 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@98 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert  (and (and (and (and (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (= ($generated@@1 ($generated@@383 $generated@@386 $generated@@387)) 21)) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= ($generated@@384 ($generated@@383 $generated@@388 $generated@@389)) $generated@@388)
 :pattern ( ($generated@@383 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (! (= ($generated@@385 ($generated@@383 $generated@@390 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@383 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@384 (type $generated@@392))))
(= (type ($generated@@381 $generated@@392)) ($generated@@93 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@392))
))) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= (type ($generated@@382 $generated@@394 $generated@@395)) ($generated@@383 $generated@@394 $generated@@395))
 :pattern ( ($generated@@382 $generated@@394 $generated@@395))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@T) ) (! (let (($generated@@398 (type $generated@@396)))
 (not ($generated@@0 ($generated@@98 ($generated@@381 ($generated@@382 $generated@@398 $generated@@397)) $generated@@396))))
 :pattern ( (let (($generated@@398 (type $generated@@396)))
($generated@@98 ($generated@@381 ($generated@@382 $generated@@398 $generated@@397)) $generated@@396)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@401) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@399 $generated@@400 $generated@@401)) (and ($generated@@165 $generated@@400 $generated@@401) (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@79 (type $generated@@403))))
 (=> (and (and (= (type $generated@@402) $generated@@94) (= (type $generated@@403) ($generated@@78 $generated@@404))) (not ($generated@@221 $generated@@403))) (= ($generated@@100 ($generated@@98 $generated@@400 $generated@@402) $generated@@403) ($generated@@100 ($generated@@98 $generated@@401 $generated@@402) $generated@@403))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@401 $generated@@402) $generated@@403))
))))
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@407) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@408) $generated@@94)) (=> (and (and (and ($generated@@151 $generated@@406) ($generated@@151 $generated@@407)) (and (not (= $generated@@408 $generated@@153)) ($generated@@154 $generated@@408 $generated@@155))) (and ($generated@@405 $generated@@406) ($generated@@165 $generated@@406 $generated@@407))) (=> (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@79 (type $generated@@410))))
 (=> (and (and (= (type $generated@@409) $generated@@94) (= (type $generated@@410) ($generated@@78 $generated@@411))) (and (not (= $generated@@409 $generated@@153)) (or (= $generated@@409 $generated@@408) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@406 $generated@@408) $generated@@156) ($generated@@157 $generated@@409)))))) (= ($generated@@100 ($generated@@98 $generated@@406 $generated@@409) $generated@@410) ($generated@@100 ($generated@@98 $generated@@407 $generated@@409) $generated@@410))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
)) (= ($generated@@150 $generated@@406 $generated@@408) ($generated@@150 $generated@@407 $generated@@408)))))
 :pattern ( ($generated@@405 $generated@@406) ($generated@@165 $generated@@406 $generated@@407) ($generated@@150 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@96 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@93 $generated@@413 $generated@@2)) (= ($generated@@200 $generated@@412) (forall (($generated@@414 T@U) ) (!  (=> (= (type $generated@@414) $generated@@413) (and (<= 0 ($generated ($generated@@98 $generated@@412 $generated@@414))) (<= ($generated ($generated@@98 $generated@@412 $generated@@414)) ($generated@@357 $generated@@412))))
 :pattern ( ($generated@@98 $generated@@412 $generated@@414))
)))))
 :pattern ( ($generated@@200 $generated@@412))
)))
(assert (forall (($generated@@416 T@T) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@161) ($generated@@225 $generated@@418 $generated@@169)) (and (= ($generated@@157 ($generated@@415 $generated@@94 $generated@@418)) $generated@@418) ($generated@@154 ($generated@@415 $generated@@94 $generated@@418) $generated@@169)))
 :pattern ( ($generated@@225 $generated@@418 $generated@@169))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@161) ($generated@@225 $generated@@419 $generated@@212)) (and (= ($generated@@157 ($generated@@415 $generated@@94 $generated@@419)) $generated@@419) ($generated@@154 ($generated@@415 $generated@@94 $generated@@419) $generated@@212)))
 :pattern ( ($generated@@225 $generated@@419 $generated@@212))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@161) ($generated@@225 $generated@@420 $generated@@172)) (and (= ($generated@@157 ($generated@@415 $generated@@94 $generated@@420)) $generated@@420) ($generated@@154 ($generated@@415 $generated@@94 $generated@@420) $generated@@172)))
 :pattern ( ($generated@@225 $generated@@420 $generated@@172))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@161) ($generated@@225 $generated@@421 $generated@@155)) (and (= ($generated@@157 ($generated@@415 $generated@@94 $generated@@421)) $generated@@421) ($generated@@154 ($generated@@415 $generated@@94 $generated@@421) $generated@@155)))
 :pattern ( ($generated@@225 $generated@@421 $generated@@155))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (= (type $generated@@422) $generated@@94) (= ($generated@@154 $generated@@422 $generated@@212)  (and ($generated@@154 $generated@@422 $generated@@169) (not (= $generated@@422 $generated@@153)))))
 :pattern ( ($generated@@154 $generated@@422 $generated@@212))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@94) (= ($generated@@154 $generated@@423 $generated@@155)  (and ($generated@@154 $generated@@423 $generated@@172) (not (= $generated@@423 $generated@@153)))))
 :pattern ( ($generated@@154 $generated@@423 $generated@@155))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@367 (type $generated@@424))))
(let (($generated@@426 ($generated@@366 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@365 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@364 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) ($generated@@0 ($generated@@98 ($generated@@363 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@363 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@367 (type $generated@@429))))
(= (type ($generated@@428 $generated@@429)) ($generated@@93 $generated@@430 $generated@@4)))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@367 (type $generated@@431))))
(let (($generated@@433 ($generated@@366 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@365 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@364 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@432) ($generated@@0 ($generated@@98 ($generated@@428 $generated@@431) $generated@@434)))
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@428 $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@385 (type $generated@@435))))
(let (($generated@@437 ($generated@@384 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@383 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@382 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) ($generated@@0 ($generated@@98 ($generated@@381 $generated@@435) $generated@@438)))
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@385 (type $generated@@440))))
(= (type ($generated@@439 $generated@@440)) ($generated@@93 $generated@@441 $generated@@4)))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@385 (type $generated@@442))))
(let (($generated@@444 ($generated@@384 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@383 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@382 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@443) ($generated@@0 ($generated@@98 ($generated@@439 $generated@@442) $generated@@445)))
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@439 $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@447) $generated@@76)) (= ($generated@@154 $generated@@446 ($generated@@199 $generated@@447)) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@446 $generated@@448)))) ($generated@@225 $generated@@448 $generated@@447))
 :pattern ( ($generated@@98 $generated@@446 $generated@@448))
))))
 :pattern ( ($generated@@154 $generated@@446 ($generated@@199 $generated@@447)))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@96 (type $generated@@451))))
(= (type ($generated@@450 $generated@@451 $generated@@452)) ($generated@@93 $generated@@453 $generated@@4)))
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@96 (type $generated@@454))))
 (=> (and (and (= (type $generated@@454) ($generated@@93 $generated@@456 $generated@@4)) (= (type $generated@@455) ($generated@@93 $generated@@456 $generated@@4))) ($generated@@449 $generated@@454 $generated@@455)) (and (= ($generated@@450 ($generated@@205 $generated@@454 $generated@@455) $generated@@454) $generated@@455) (= ($generated@@450 ($generated@@205 $generated@@454 $generated@@455) $generated@@455) $generated@@454))))
 :pattern ( ($generated@@205 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 (type $generated@@459)))
 (=> (and (= (type $generated@@457) ($generated@@93 $generated@@460 $generated@@4)) (= (type $generated@@458) ($generated@@93 $generated@@460 $generated@@4))) (= ($generated@@0 ($generated@@98 ($generated@@450 $generated@@457 $generated@@458) $generated@@459))  (and ($generated@@0 ($generated@@98 $generated@@457 $generated@@459)) (not ($generated@@0 ($generated@@98 $generated@@458 $generated@@459)))))))
 :pattern ( ($generated@@98 ($generated@@450 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@461) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@462) $generated@@76)) (= (type $generated@@463) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@461 ($generated@@234 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@161) ($generated@@0 ($generated@@98 $generated@@461 $generated@@464))) ($generated@@248 $generated@@464 $generated@@462 $generated@@463))
 :pattern ( ($generated@@98 $generated@@461 $generated@@464))
))))
 :pattern ( ($generated@@91 $generated@@461 ($generated@@234 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (= (type $generated@@465) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@466) $generated@@76)) (= (type $generated@@467) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@465 ($generated@@239 $generated@@466) $generated@@467) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@161) ($generated@@0 ($generated@@98 $generated@@465 $generated@@468))) ($generated@@248 $generated@@468 $generated@@466 $generated@@467))
 :pattern ( ($generated@@98 $generated@@465 $generated@@468))
))))
 :pattern ( ($generated@@91 $generated@@465 ($generated@@239 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
(= ($generated ($generated@@98 ($generated@@358 $generated@@470) $generated@@469)) 0))
 :pattern ( (let (($generated@@470 (type $generated@@469)))
($generated@@98 ($generated@@358 $generated@@470) $generated@@469)))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@472) $generated@@94)) (=> (and (and ($generated@@151 $generated@@471) (and (not (= $generated@@472 $generated@@153)) (= ($generated@@175 $generated@@472) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@471 $generated@@472) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@471 $generated@@472) $generated@@156) ($generated@@234 $generated@@212) $generated@@471)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@471 $generated@@472) $generated@@156))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@367 (type $generated@@476))))
(let (($generated@@478 ($generated@@366 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476)) ($generated@@93 $generated@@478 $generated@@477))))
 :pattern ( ($generated@@474 $generated@@476))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) ($generated@@365 $generated@@161 $generated@@161)) (= (type $generated@@480) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@473 $generated@@479) $generated@@480))  (and ($generated@@0 ($generated@@98 ($generated@@363 $generated@@479) ($generated@@193 ($generated@@415 $generated@@186 $generated@@480)))) (= ($generated@@98 ($generated@@474 $generated@@479) ($generated@@193 ($generated@@415 $generated@@186 $generated@@480))) ($generated@@194 ($generated@@415 $generated@@186 $generated@@480))))))
 :pattern ( ($generated@@98 ($generated@@473 $generated@@479) $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@385 (type $generated@@484))))
(let (($generated@@486 ($generated@@384 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484)) ($generated@@93 $generated@@486 $generated@@485))))
 :pattern ( ($generated@@482 $generated@@484))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) ($generated@@383 $generated@@161 $generated@@161)) (= (type $generated@@488) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@481 $generated@@487) $generated@@488))  (and ($generated@@0 ($generated@@98 ($generated@@381 $generated@@487) ($generated@@193 ($generated@@415 $generated@@186 $generated@@488)))) (= ($generated@@98 ($generated@@482 $generated@@487) ($generated@@193 ($generated@@415 $generated@@186 $generated@@488))) ($generated@@194 ($generated@@415 $generated@@186 $generated@@488))))))
 :pattern ( ($generated@@98 ($generated@@481 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(let (($generated@@492 ($generated@@366 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@365 $generated@@492 $generated@@491)) (= ($generated@@0 ($generated@@98 ($generated@@428 $generated@@489) $generated@@490)) (exists (($generated@@493 T@U) ) (!  (and (= (type $generated@@493) $generated@@492) (and ($generated@@0 ($generated@@98 ($generated@@363 $generated@@489) $generated@@493)) (= $generated@@490 ($generated@@98 ($generated@@474 $generated@@489) $generated@@493))))
 :pattern ( ($generated@@98 ($generated@@363 $generated@@489) $generated@@493))
 :pattern ( ($generated@@98 ($generated@@474 $generated@@489) $generated@@493))
))))))
 :pattern ( ($generated@@98 ($generated@@428 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(let (($generated@@497 ($generated@@384 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@383 $generated@@497 $generated@@496)) (= ($generated@@0 ($generated@@98 ($generated@@439 $generated@@494) $generated@@495)) (exists (($generated@@498 T@U) ) (!  (and (= (type $generated@@498) $generated@@497) (and ($generated@@0 ($generated@@98 ($generated@@381 $generated@@494) $generated@@498)) (= $generated@@495 ($generated@@98 ($generated@@482 $generated@@494) $generated@@498))))
 :pattern ( ($generated@@98 ($generated@@381 $generated@@494) $generated@@498))
 :pattern ( ($generated@@98 ($generated@@482 $generated@@494) $generated@@498))
))))))
 :pattern ( ($generated@@98 ($generated@@439 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@500 $generated@@501)) $generated@@76)
 :pattern ( ($generated@@499 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) ($generated@@365 $generated@@161 $generated@@161)) (= (type $generated@@503) $generated@@76)) (= (type $generated@@504) $generated@@76)) (= (type $generated@@505) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@502 ($generated@@499 $generated@@503 $generated@@504) $generated@@505) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@363 $generated@@502) $generated@@506))) (and ($generated@@248 ($generated@@98 ($generated@@474 $generated@@502) $generated@@506) $generated@@504 $generated@@505) ($generated@@248 $generated@@506 $generated@@503 $generated@@505)))
 :pattern ( ($generated@@98 ($generated@@474 $generated@@502) $generated@@506))
 :pattern ( ($generated@@98 ($generated@@363 $generated@@502) $generated@@506))
))))
 :pattern ( ($generated@@91 $generated@@502 ($generated@@499 $generated@@503 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@508 $generated@@509)) $generated@@76)
 :pattern ( ($generated@@507 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) ($generated@@383 $generated@@161 $generated@@161)) (= (type $generated@@511) $generated@@76)) (= (type $generated@@512) $generated@@76)) (= (type $generated@@513) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@510 ($generated@@507 $generated@@511 $generated@@512) $generated@@513) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@381 $generated@@510) $generated@@514))) (and ($generated@@248 ($generated@@98 ($generated@@482 $generated@@510) $generated@@514) $generated@@512 $generated@@513) ($generated@@248 $generated@@514 $generated@@511 $generated@@513)))
 :pattern ( ($generated@@98 ($generated@@482 $generated@@510) $generated@@514))
 :pattern ( ($generated@@98 ($generated@@381 $generated@@510) $generated@@514))
))))
 :pattern ( ($generated@@91 $generated@@510 ($generated@@507 $generated@@511 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= (type ($generated@@515 $generated@@516 $generated@@517)) ($generated@@93 $generated@@518 $generated@@4)))
 :pattern ( ($generated@@515 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@520)))
 (=> (and (and (= (type $generated@@519) ($generated@@93 $generated@@522 $generated@@4)) (= (type $generated@@521) $generated@@522)) ($generated@@0 ($generated@@98 $generated@@519 $generated@@521))) ($generated@@0 ($generated@@98 ($generated@@515 $generated@@519 $generated@@520) $generated@@521))))
 :pattern ( ($generated@@515 $generated@@519 $generated@@520) ($generated@@98 $generated@@519 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
 (=> (and (and (= (type $generated@@523) ($generated@@93 $generated@@526 $generated@@4)) (= (type $generated@@524) ($generated@@93 $generated@@526 $generated@@4))) ($generated@@0 ($generated@@98 $generated@@523 $generated@@525))) ($generated@@0 ($generated@@98 ($generated@@205 $generated@@523 $generated@@524) $generated@@525))))
 :pattern ( ($generated@@205 $generated@@523 $generated@@524) ($generated@@98 $generated@@523 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (=> (and (and (= (type $generated@@527) ($generated@@93 $generated@@530 $generated@@4)) (= (type $generated@@528) ($generated@@93 $generated@@530 $generated@@4))) ($generated@@0 ($generated@@98 $generated@@528 $generated@@529))) ($generated@@0 ($generated@@98 ($generated@@205 $generated@@527 $generated@@528) $generated@@529))))
 :pattern ( ($generated@@205 $generated@@527 $generated@@528) ($generated@@98 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@532)))
 (=> (and (= (type $generated@@531) ($generated@@93 $generated@@534 $generated@@4)) (= (type $generated@@533) $generated@@534)) (= ($generated@@0 ($generated@@98 ($generated@@515 $generated@@531 $generated@@532) $generated@@533))  (or (= $generated@@533 $generated@@532) ($generated@@0 ($generated@@98 $generated@@531 $generated@@533))))))
 :pattern ( ($generated@@98 ($generated@@515 $generated@@531 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@535) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@536) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@537) ($generated@@93 $generated@@94 $generated@@95))) (not (= $generated@@535 $generated@@537))) (and ($generated@@165 $generated@@535 $generated@@536) ($generated@@165 $generated@@536 $generated@@537))) ($generated@@165 $generated@@535 $generated@@537))
 :pattern ( ($generated@@165 $generated@@535 $generated@@536) ($generated@@165 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (=> (and (and (= (type $generated@@538) ($generated@@93 $generated@@541 $generated@@4)) (= (type $generated@@539) ($generated@@93 $generated@@541 $generated@@4))) ($generated@@0 ($generated@@98 $generated@@539 $generated@@540))) (not ($generated@@0 ($generated@@98 ($generated@@450 $generated@@538 $generated@@539) $generated@@540)))))
 :pattern ( ($generated@@450 $generated@@538 $generated@@539) ($generated@@98 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@543 T@T) ) (! (= (type ($generated@@542 $generated@@543)) ($generated@@93 $generated@@543 $generated@@4))
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@385 (type $generated@@544))))
(let (($generated@@546 ($generated@@384 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@383 $generated@@546 $generated@@545)) (= (= $generated@@544 ($generated@@382 $generated@@546 $generated@@545)) (= ($generated@@381 $generated@@544) ($generated@@542 $generated@@546))))))
 :pattern ( ($generated@@381 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@385 (type $generated@@547))))
(let (($generated@@549 ($generated@@384 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@383 $generated@@549 $generated@@548)) (= (= $generated@@547 ($generated@@382 $generated@@549 $generated@@548)) (= ($generated@@439 $generated@@547) ($generated@@542 $generated@@548))))))
 :pattern ( ($generated@@439 $generated@@547))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@385 (type $generated@@550))))
(let (($generated@@552 ($generated@@384 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@383 $generated@@552 $generated@@551)) (= (= $generated@@550 ($generated@@382 $generated@@552 $generated@@551)) (= ($generated@@481 $generated@@550) ($generated@@542 $generated@@161))))))
 :pattern ( ($generated@@481 $generated@@550))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@367 (type $generated@@553))))
(let (($generated@@555 ($generated@@366 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@365 $generated@@555 $generated@@554)) (or (= $generated@@553 ($generated@@364 $generated@@555 $generated@@554)) (exists (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (and (and (= (type $generated@@556) $generated@@161) (= (type $generated@@557) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@473 $generated@@553) ($generated@@157 ($generated@@224 $generated@@556 $generated@@557)))))
 :no-pattern (type $generated@@556)
 :no-pattern (type $generated@@557)
 :no-pattern ($generated $generated@@556)
 :no-pattern ($generated@@0 $generated@@556)
 :no-pattern ($generated $generated@@557)
 :no-pattern ($generated@@0 $generated@@557)
))))))
 :pattern ( ($generated@@473 $generated@@553))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@385 (type $generated@@558))))
(let (($generated@@560 ($generated@@384 (type $generated@@558))))
 (=> (= (type $generated@@558) ($generated@@383 $generated@@560 $generated@@559)) (or (= $generated@@558 ($generated@@382 $generated@@560 $generated@@559)) (exists (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (and (and (= (type $generated@@561) $generated@@161) (= (type $generated@@562) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@481 $generated@@558) ($generated@@157 ($generated@@224 $generated@@561 $generated@@562)))))
 :no-pattern (type $generated@@561)
 :no-pattern (type $generated@@562)
 :no-pattern ($generated $generated@@561)
 :no-pattern ($generated@@0 $generated@@561)
 :no-pattern ($generated $generated@@562)
 :no-pattern ($generated@@0 $generated@@562)
))))))
 :pattern ( ($generated@@481 $generated@@558))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@82)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@T) ) (!  (=> (and (= (type $generated@@565) $generated@@82) (= (type $generated@@566) $generated@@80)) (and (= ($generated@@563 ($generated@@217 $generated@@567 $generated@@565 $generated@@566)) $generated@@565) (= ($generated@@89 ($generated@@217 $generated@@567 $generated@@565 $generated@@566)) $generated@@566)))
 :pattern ( ($generated@@217 $generated@@567 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@161) ($generated@@225 $generated@@568 $generated@@46)) (and (= ($generated@@157 ($generated@@415 $generated@@2 $generated@@568)) $generated@@568) ($generated@@154 ($generated@@415 $generated@@2 $generated@@568) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@568 $generated@@46))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@161) ($generated@@225 $generated@@569 $generated@@47)) (and (= ($generated@@157 ($generated@@415 $generated@@3 $generated@@569)) $generated@@569) ($generated@@154 ($generated@@415 $generated@@3 $generated@@569) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@569 $generated@@47))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@161) ($generated@@225 $generated@@570 $generated@@44)) (and (= ($generated@@157 ($generated@@415 $generated@@4 $generated@@570)) $generated@@570) ($generated@@154 ($generated@@415 $generated@@4 $generated@@570) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@570 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@571) 22))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@161) ($generated@@225 $generated@@572 $generated@@45)) (and (= ($generated@@157 ($generated@@415 $generated@@571 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@415 $generated@@571 $generated@@572) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@572 $generated@@45))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@76) (= ($generated@@225 ($generated@@157 $generated@@573) $generated@@574) ($generated@@154 $generated@@573 $generated@@574)))
 :pattern ( ($generated@@225 ($generated@@157 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@96 (type $generated@@575))))
 (=> (= (type $generated@@575) ($generated@@93 $generated@@576 $generated@@2)) (<= 0 ($generated@@357 $generated@@575))))
 :pattern ( ($generated@@357 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@263 (type $generated@@577))))
 (=> (= (type $generated@@577) ($generated@@262 $generated@@578)) (<= 0 ($generated@@261 $generated@@577))))
 :pattern ( ($generated@@261 $generated@@577))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@76)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@76) (= (type $generated@@582) $generated@@76)) (= ($generated@@579 ($generated@@499 $generated@@581 $generated@@582)) $generated@@581))
 :pattern ( ($generated@@499 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@76)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@76) (= (type $generated@@586) $generated@@76)) (= ($generated@@583 ($generated@@499 $generated@@585 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@499 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@76) (= (type $generated@@588) $generated@@76)) (= ($generated@@87 ($generated@@499 $generated@@587 $generated@@588)) $generated@@58))
 :pattern ( ($generated@@499 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@76)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@76) (= (type $generated@@592) $generated@@76)) (= ($generated@@589 ($generated@@507 $generated@@591 $generated@@592)) $generated@@591))
 :pattern ( ($generated@@507 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@76)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@76) (= (type $generated@@596) $generated@@76)) (= ($generated@@593 ($generated@@507 $generated@@595 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@507 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@76) (= (type $generated@@598) $generated@@76)) (= ($generated@@87 ($generated@@507 $generated@@597 $generated@@598)) $generated@@59))
 :pattern ( ($generated@@507 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@161) (= (type $generated@@600) $generated@@161)) (= ($generated@@254 ($generated@@224 $generated@@599 $generated@@600)) $generated@@64))
 :pattern ( ($generated@@224 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@76)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@76) (= (type $generated@@604) $generated@@76)) (= ($generated@@601 ($generated@@185 $generated@@603 $generated@@604)) $generated@@603))
 :pattern ( ($generated@@185 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@76)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@76) (= (type $generated@@608) $generated@@76)) (= ($generated@@605 ($generated@@185 $generated@@607 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@185 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@161) (= (type $generated@@610) $generated@@161)) (= ($generated@@193 ($generated@@224 $generated@@609 $generated@@610)) $generated@@609))
 :pattern ( ($generated@@224 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@161) (= (type $generated@@612) $generated@@161)) (= ($generated@@194 ($generated@@224 $generated@@611 $generated@@612)) $generated@@612))
 :pattern ( ($generated@@224 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@94) ($generated@@154 $generated@@613 $generated@@169))
 :pattern ( ($generated@@154 $generated@@613 $generated@@169))
)))
(assert  (and (forall (($generated@@616 T@U) ) (! (= (type ($generated@@614 $generated@@616)) $generated@@76)
 :pattern ( ($generated@@614 $generated@@616))
)) (forall (($generated@@617 T@U) ($generated@@618 Int) ) (! (let (($generated@@619 ($generated@@263 (type $generated@@617))))
(= (type ($generated@@615 $generated@@617 $generated@@618)) $generated@@619))
 :pattern ( ($generated@@615 $generated@@617 $generated@@618))
))))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@620) ($generated@@262 $generated@@161)) (= (type $generated@@621) $generated@@76)) (= (type $generated@@622) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@620 ($generated@@614 $generated@@621) $generated@@622) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@261 $generated@@620))) ($generated@@248 ($generated@@615 $generated@@620 $generated@@623) $generated@@621 $generated@@622))
 :pattern ( ($generated@@615 $generated@@620 $generated@@623))
))))
 :pattern ( ($generated@@91 $generated@@620 ($generated@@614 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@625)))
 (=> (= (type $generated@@624) ($generated@@93 $generated@@626 $generated@@4)) ($generated@@0 ($generated@@98 ($generated@@515 $generated@@624 $generated@@625) $generated@@625))))
 :pattern ( ($generated@@515 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@628 Int) ) (! (= ($generated@@627 ($generated@@92 $generated@@628)) $generated@@628)
 :pattern ( ($generated@@92 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ) (! (= (type ($generated@@629 $generated@@630)) $generated@@76)
 :pattern ( ($generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@76) (= ($generated@@629 ($generated@@234 $generated@@631)) $generated@@631))
 :pattern ( ($generated@@234 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@76) (= ($generated@@87 ($generated@@234 $generated@@632)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ) (! (= (type ($generated@@633 $generated@@634)) $generated@@76)
 :pattern ( ($generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@76) (= ($generated@@633 ($generated@@239 $generated@@635)) $generated@@635))
 :pattern ( ($generated@@239 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@76) (= ($generated@@87 ($generated@@239 $generated@@636)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ) (! (= (type ($generated@@637 $generated@@638)) $generated@@76)
 :pattern ( ($generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@76) (= ($generated@@637 ($generated@@199 $generated@@639)) $generated@@639))
 :pattern ( ($generated@@199 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@76) (= ($generated@@87 ($generated@@199 $generated@@640)) $generated@@56))
 :pattern ( ($generated@@199 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ) (! (= (type ($generated@@641 $generated@@642)) $generated@@76)
 :pattern ( ($generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@76) (= ($generated@@641 ($generated@@614 $generated@@643)) $generated@@643))
 :pattern ( ($generated@@614 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@76) (= ($generated@@87 ($generated@@614 $generated@@644)) $generated@@57))
 :pattern ( ($generated@@614 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@645)))
(= ($generated@@415 $generated@@646 ($generated@@157 $generated@@645)) $generated@@645))
 :pattern ( ($generated@@157 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@647) ($generated@@365 $generated@@161 $generated@@161)) (= (type $generated@@648) $generated@@76)) (= (type $generated@@649) $generated@@76)) (= ($generated@@154 $generated@@647 ($generated@@499 $generated@@648 $generated@@649)) (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@363 $generated@@647) $generated@@650))) (and ($generated@@225 ($generated@@98 ($generated@@474 $generated@@647) $generated@@650) $generated@@649) ($generated@@225 $generated@@650 $generated@@648)))
 :pattern ( ($generated@@98 ($generated@@474 $generated@@647) $generated@@650))
 :pattern ( ($generated@@98 ($generated@@363 $generated@@647) $generated@@650))
))))
 :pattern ( ($generated@@154 $generated@@647 ($generated@@499 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@651) ($generated@@383 $generated@@161 $generated@@161)) (= (type $generated@@652) $generated@@76)) (= (type $generated@@653) $generated@@76)) (= ($generated@@154 $generated@@651 ($generated@@507 $generated@@652 $generated@@653)) (forall (($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@381 $generated@@651) $generated@@654))) (and ($generated@@225 ($generated@@98 ($generated@@482 $generated@@651) $generated@@654) $generated@@653) ($generated@@225 $generated@@654 $generated@@652)))
 :pattern ( ($generated@@98 ($generated@@482 $generated@@651) $generated@@654))
 :pattern ( ($generated@@98 ($generated@@381 $generated@@651) $generated@@654))
))))
 :pattern ( ($generated@@154 $generated@@651 ($generated@@507 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@161) (= (type $generated@@658) $generated@@161)) (< ($generated@@655 $generated@@657) ($generated@@656 ($generated@@224 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@224 $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@161) (= (type $generated@@660) $generated@@161)) (< ($generated@@655 $generated@@660) ($generated@@656 ($generated@@224 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@224 $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (! (let (($generated@@663 ($generated@@96 (type $generated@@661))))
 (=> (and (= (type $generated@@661) ($generated@@93 $generated@@663 $generated@@4)) (= (type $generated@@662) ($generated@@93 $generated@@663 $generated@@4))) (= ($generated@@205 $generated@@661 ($generated@@205 $generated@@661 $generated@@662)) ($generated@@205 $generated@@661 $generated@@662))))
 :pattern ( ($generated@@205 $generated@@661 ($generated@@205 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) $generated@@161) (= (type $generated@@665) $generated@@76)) (= (type $generated@@666) $generated@@76)) ($generated@@225 $generated@@664 ($generated@@499 $generated@@665 $generated@@666))) (and (= ($generated@@157 ($generated@@415 ($generated@@365 $generated@@161 $generated@@161) $generated@@664)) $generated@@664) ($generated@@154 ($generated@@415 ($generated@@365 $generated@@161 $generated@@161) $generated@@664) ($generated@@499 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@225 $generated@@664 ($generated@@499 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@161) (= (type $generated@@668) $generated@@76)) (= (type $generated@@669) $generated@@76)) ($generated@@225 $generated@@667 ($generated@@507 $generated@@668 $generated@@669))) (and (= ($generated@@157 ($generated@@415 ($generated@@383 $generated@@161 $generated@@161) $generated@@667)) $generated@@667) ($generated@@154 ($generated@@415 ($generated@@383 $generated@@161 $generated@@161) $generated@@667) ($generated@@507 $generated@@668 $generated@@669))))
 :pattern ( ($generated@@225 $generated@@667 ($generated@@507 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) $generated@@76) (= (type $generated@@671) $generated@@76)) (= (type $generated@@672) $generated@@161)) ($generated@@225 $generated@@672 ($generated@@185 $generated@@670 $generated@@671))) (and (= ($generated@@157 ($generated@@415 $generated@@186 $generated@@672)) $generated@@672) ($generated@@154 ($generated@@415 $generated@@186 $generated@@672) ($generated@@185 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@225 $generated@@672 ($generated@@185 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@674 T@T) ) (! (= (type ($generated@@673 $generated@@674)) ($generated@@93 $generated@@674 $generated@@4))
 :pattern ( ($generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ) (! (let (($generated@@676 (type $generated@@675)))
 (not ($generated@@0 ($generated@@98 ($generated@@673 $generated@@676) $generated@@675))))
 :pattern ( (let (($generated@@676 (type $generated@@675)))
($generated@@98 ($generated@@673 $generated@@676) $generated@@675)))
)))
(assert (forall (($generated@@677 T@U) ) (! (let (($generated@@678 (type $generated@@677)))
 (not ($generated@@0 ($generated@@98 ($generated@@542 $generated@@678) $generated@@677))))
 :pattern ( (let (($generated@@678 (type $generated@@677)))
($generated@@98 ($generated@@542 $generated@@678) $generated@@677)))
)))
(assert (forall (($generated@@680 T@U) ) (! (= (type ($generated@@679 $generated@@680)) $generated@@83)
 :pattern ( ($generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@76) (= (type $generated@@682) $generated@@76)) (and (= ($generated@@87 ($generated@@185 $generated@@681 $generated@@682)) $generated@@65) (= ($generated@@679 ($generated@@185 $generated@@681 $generated@@682)) $generated@@70)))
 :pattern ( ($generated@@185 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@186) (= ($generated@@655 ($generated@@157 $generated@@683)) ($generated@@656 $generated@@683)))
 :pattern ( ($generated@@655 ($generated@@157 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@684) $generated@@161) ($generated@@225 $generated@@684 ($generated@@92 0))) (and (= ($generated@@157 ($generated@@415 $generated@@2 $generated@@684)) $generated@@684) ($generated@@154 ($generated@@415 ($generated@@93 $generated@@161 $generated@@4) $generated@@684) ($generated@@92 0))))
 :pattern ( ($generated@@225 $generated@@684 ($generated@@92 0)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@161) (= (type $generated@@686) $generated@@76)) ($generated@@225 $generated@@685 ($generated@@234 $generated@@686))) (and (= ($generated@@157 ($generated@@415 ($generated@@93 $generated@@161 $generated@@4) $generated@@685)) $generated@@685) ($generated@@154 ($generated@@415 ($generated@@93 $generated@@161 $generated@@4) $generated@@685) ($generated@@234 $generated@@686))))
 :pattern ( ($generated@@225 $generated@@685 ($generated@@234 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@161) (= (type $generated@@688) $generated@@76)) ($generated@@225 $generated@@687 ($generated@@239 $generated@@688))) (and (= ($generated@@157 ($generated@@415 ($generated@@93 $generated@@161 $generated@@4) $generated@@687)) $generated@@687) ($generated@@154 ($generated@@415 ($generated@@93 $generated@@161 $generated@@4) $generated@@687) ($generated@@239 $generated@@688))))
 :pattern ( ($generated@@225 $generated@@687 ($generated@@239 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@161) (= (type $generated@@690) $generated@@76)) ($generated@@225 $generated@@689 ($generated@@199 $generated@@690))) (and (= ($generated@@157 ($generated@@415 ($generated@@93 $generated@@161 $generated@@2) $generated@@689)) $generated@@689) ($generated@@154 ($generated@@415 ($generated@@93 $generated@@161 $generated@@2) $generated@@689) ($generated@@199 $generated@@690))))
 :pattern ( ($generated@@225 $generated@@689 ($generated@@199 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@161) (= (type $generated@@692) $generated@@76)) ($generated@@225 $generated@@691 ($generated@@614 $generated@@692))) (and (= ($generated@@157 ($generated@@415 ($generated@@262 $generated@@161) $generated@@691)) $generated@@691) ($generated@@154 ($generated@@415 ($generated@@262 $generated@@161) $generated@@691) ($generated@@614 $generated@@692))))
 :pattern ( ($generated@@225 $generated@@691 ($generated@@614 $generated@@692)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (! (let (($generated@@696 ($generated@@96 (type $generated@@694))))
 (=> (and (= (type $generated@@694) ($generated@@93 $generated@@696 $generated@@4)) (= (type $generated@@695) ($generated@@93 $generated@@696 $generated@@4))) (= ($generated@@693 $generated@@694 $generated@@695) (forall (($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@696) ($generated@@0 ($generated@@98 $generated@@694 $generated@@697))) ($generated@@0 ($generated@@98 $generated@@695 $generated@@697)))
 :pattern ( ($generated@@98 $generated@@694 $generated@@697))
 :pattern ( ($generated@@98 $generated@@695 $generated@@697))
)))))
 :pattern ( ($generated@@693 $generated@@694 $generated@@695))
)))
(assert (= ($generated@@87 $generated@@169) $generated@@62))
(assert (= ($generated@@679 $generated@@169) $generated@@69))
(assert (= ($generated@@87 $generated@@212) $generated@@63))
(assert (= ($generated@@679 $generated@@212) $generated@@69))
(assert (= ($generated@@87 $generated@@172) $generated@@67))
(assert (= ($generated@@679 $generated@@172) $generated@@71))
(assert (= ($generated@@87 $generated@@155) $generated@@68))
(assert (= ($generated@@679 $generated@@155) $generated@@71))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@698) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@699) $generated@@76)) (= (type $generated@@700) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@698 ($generated@@199 $generated@@699) $generated@@700) (forall (($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@698 $generated@@701)))) ($generated@@248 $generated@@701 $generated@@699 $generated@@700))
 :pattern ( ($generated@@98 $generated@@698 $generated@@701))
))))
 :pattern ( ($generated@@91 $generated@@698 ($generated@@199 $generated@@699) $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (! (let (($generated@@704 ($generated@@96 (type $generated@@702))))
 (=> (and (= (type $generated@@702) ($generated@@93 $generated@@704 $generated@@4)) (= (type $generated@@703) ($generated@@93 $generated@@704 $generated@@4))) (= ($generated@@449 $generated@@702 $generated@@703) (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@704) (or (not ($generated@@0 ($generated@@98 $generated@@702 $generated@@705))) (not ($generated@@0 ($generated@@98 $generated@@703 $generated@@705)))))
 :pattern ( ($generated@@98 $generated@@702 $generated@@705))
 :pattern ( ($generated@@98 $generated@@703 $generated@@705))
)))))
 :pattern ( ($generated@@449 $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) $generated@@186) (= (type $generated@@707) $generated@@76)) (= (type $generated@@708) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@151 $generated@@708) (and ($generated@@184 $generated@@706) (exists (($generated@@709 T@U) ) (!  (and (= (type $generated@@709) $generated@@76) ($generated@@91 $generated@@706 ($generated@@185 $generated@@707 $generated@@709) $generated@@708))
 :pattern ( ($generated@@91 $generated@@706 ($generated@@185 $generated@@707 $generated@@709) $generated@@708))
))))) ($generated@@248 ($generated@@193 $generated@@706) $generated@@707 $generated@@708))
 :pattern ( ($generated@@248 ($generated@@193 $generated@@706) $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (and (= (type $generated@@710) $generated@@186) (= (type $generated@@711) $generated@@76)) (= (type $generated@@712) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@151 $generated@@712) (and ($generated@@184 $generated@@710) (exists (($generated@@713 T@U) ) (!  (and (= (type $generated@@713) $generated@@76) ($generated@@91 $generated@@710 ($generated@@185 $generated@@713 $generated@@711) $generated@@712))
 :pattern ( ($generated@@91 $generated@@710 ($generated@@185 $generated@@713 $generated@@711) $generated@@712))
))))) ($generated@@248 ($generated@@194 $generated@@710) $generated@@711 $generated@@712))
 :pattern ( ($generated@@248 ($generated@@194 $generated@@710) $generated@@711 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (= (type $generated@@714) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@715) $generated@@94)) (and ($generated@@151 $generated@@714) (and (not (= $generated@@715 $generated@@153)) (= ($generated@@175 $generated@@715) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@714 $generated@@715) $generated@@156) ($generated@@234 $generated@@212)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@714 $generated@@715) $generated@@156))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) $generated@@161) (= (type $generated@@717) $generated@@161)) (= ($generated@@224 ($generated@@244 $generated@@716) ($generated@@244 $generated@@717)) ($generated@@244 ($generated@@224 $generated@@716 $generated@@717))))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@716) ($generated@@244 $generated@@717)))
)))
(assert (forall (($generated@@718 T@U) ) (! (= ($generated@@157 ($generated@@244 $generated@@718)) ($generated@@244 ($generated@@157 $generated@@718)))
 :pattern ( ($generated@@157 ($generated@@244 $generated@@718)))
)))
(assert (forall (($generated@@719 T@U) ) (! (let (($generated@@720 ($generated@@263 (type $generated@@719))))
 (=> (and (= (type $generated@@719) ($generated@@262 $generated@@720)) (= ($generated@@261 $generated@@719) 0)) (= $generated@@719 ($generated@@260 $generated@@720))))
 :pattern ( ($generated@@261 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (! (let (($generated@@724 (type $generated@@722)))
 (=> (and (and (= (type $generated@@721) ($generated@@93 $generated@@724 $generated@@2)) (= (type $generated@@723) $generated@@2)) (<= 0 ($generated $generated@@723))) (= ($generated@@357 ($generated@@99 $generated@@721 $generated@@722 $generated@@723)) (+ (- ($generated@@357 $generated@@721) ($generated ($generated@@98 $generated@@721 $generated@@722))) ($generated $generated@@723)))))
 :pattern ( ($generated@@357 ($generated@@99 $generated@@721 $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ($generated@@727 T@U) ) (! (let (($generated@@728 (type $generated@@727)))
 (=> (and (= (type $generated@@725) ($generated@@93 $generated@@728 $generated@@4)) (= (type $generated@@726) ($generated@@93 $generated@@728 $generated@@4))) (= ($generated@@0 ($generated@@98 ($generated@@205 $generated@@725 $generated@@726) $generated@@727))  (or ($generated@@0 ($generated@@98 $generated@@725 $generated@@727)) ($generated@@0 ($generated@@98 $generated@@726 $generated@@727))))))
 :pattern ( ($generated@@98 ($generated@@205 $generated@@725 $generated@@726) $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@729) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@730) $generated@@2)) ($generated@@91 $generated@@730 $generated@@46 $generated@@729))
 :pattern ( ($generated@@91 $generated@@730 $generated@@46 $generated@@729))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@732) $generated@@3)) ($generated@@91 $generated@@732 $generated@@47 $generated@@731))
 :pattern ( ($generated@@91 $generated@@732 $generated@@47 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@734) $generated@@4)) ($generated@@91 $generated@@734 $generated@@44 $generated@@733))
 :pattern ( ($generated@@91 $generated@@734 $generated@@44 $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@735) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@736) $generated@@571)) ($generated@@91 $generated@@736 $generated@@45 $generated@@735))
 :pattern ( ($generated@@91 $generated@@736 $generated@@45 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (= (type $generated@@737) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@738) $generated@@161)) ($generated@@91 $generated@@738 $generated@@48 $generated@@737))
 :pattern ( ($generated@@91 $generated@@738 $generated@@48 $generated@@737))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@739) ($generated@@262 $generated@@161)) (= (type $generated@@740) $generated@@76)) (= ($generated@@154 $generated@@739 ($generated@@614 $generated@@740)) (forall (($generated@@741 Int) ) (!  (=> (and (<= 0 $generated@@741) (< $generated@@741 ($generated@@261 $generated@@739))) ($generated@@225 ($generated@@615 $generated@@739 $generated@@741) $generated@@740))
 :pattern ( ($generated@@615 $generated@@739 $generated@@741))
))))
 :pattern ( ($generated@@154 $generated@@739 ($generated@@614 $generated@@740)))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 Int) ) (!  (=> (= (type $generated@@743) ($generated@@262 $generated@@161)) (=> (and (<= 0 $generated@@744) (< $generated@@744 ($generated@@261 $generated@@743))) (< ($generated@@656 ($generated@@415 $generated@@186 ($generated@@615 $generated@@743 $generated@@744))) ($generated@@742 $generated@@743))))
 :pattern ( ($generated@@656 ($generated@@415 $generated@@186 ($generated@@615 $generated@@743 $generated@@744))))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (and (and (= (type $generated@@745) ($generated@@365 $generated@@161 $generated@@161)) (= (type $generated@@746) $generated@@76)) (= (type $generated@@747) $generated@@76)) ($generated@@154 $generated@@745 ($generated@@499 $generated@@746 $generated@@747))) (and (and ($generated@@154 ($generated@@363 $generated@@745) ($generated@@234 $generated@@746)) ($generated@@154 ($generated@@428 $generated@@745) ($generated@@234 $generated@@747))) ($generated@@154 ($generated@@473 $generated@@745) ($generated@@234 ($generated@@185 $generated@@746 $generated@@747)))))
 :pattern ( ($generated@@154 $generated@@745 ($generated@@499 $generated@@746 $generated@@747)))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (and (and (= (type $generated@@748) ($generated@@383 $generated@@161 $generated@@161)) (= (type $generated@@749) $generated@@76)) (= (type $generated@@750) $generated@@76)) ($generated@@154 $generated@@748 ($generated@@507 $generated@@749 $generated@@750))) (and (and ($generated@@154 ($generated@@381 $generated@@748) ($generated@@239 $generated@@749)) ($generated@@154 ($generated@@439 $generated@@748) ($generated@@239 $generated@@750))) ($generated@@154 ($generated@@481 $generated@@748) ($generated@@239 ($generated@@185 $generated@@749 $generated@@750)))))
 :pattern ( ($generated@@154 $generated@@748 ($generated@@507 $generated@@749 $generated@@750)))
)))
(assert (forall (($generated@@751 T@U) ) (!  (=> (= (type $generated@@751) $generated@@2) ($generated@@154 $generated@@751 $generated@@46))
 :pattern ( ($generated@@154 $generated@@751 $generated@@46))
)))
(assert (forall (($generated@@752 T@U) ) (!  (=> (= (type $generated@@752) $generated@@3) ($generated@@154 $generated@@752 $generated@@47))
 :pattern ( ($generated@@154 $generated@@752 $generated@@47))
)))
(assert (forall (($generated@@753 T@U) ) (!  (=> (= (type $generated@@753) $generated@@4) ($generated@@154 $generated@@753 $generated@@44))
 :pattern ( ($generated@@154 $generated@@753 $generated@@44))
)))
(assert (forall (($generated@@754 T@U) ) (!  (=> (= (type $generated@@754) $generated@@571) ($generated@@154 $generated@@754 $generated@@45))
 :pattern ( ($generated@@154 $generated@@754 $generated@@45))
)))
(assert (forall (($generated@@755 T@U) ) (!  (=> (= (type $generated@@755) $generated@@161) ($generated@@154 $generated@@755 $generated@@48))
 :pattern ( ($generated@@154 $generated@@755 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@756 () T@U)
(declare-fun $generated@@757 () T@U)
(declare-fun $generated@@758 () Bool)
(declare-fun $generated@@759 () Bool)
(declare-fun $generated@@760 () Bool)
(declare-fun $generated@@761 () Bool)
(declare-fun $generated@@762 () Bool)
(declare-fun $generated@@763 () T@U)
(declare-fun $generated@@764 () Bool)
(declare-fun $generated@@765 () Bool)
(declare-fun $generated@@766 () T@U)
(declare-fun $generated@@767 () Bool)
(assert  (and (and (and (= (type $generated@@757) $generated@@94) (= (type $generated@@756) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@763) ($generated@@270 $generated@@94 $generated@@4))) (= (type $generated@@766) ($generated@@270 $generated@@94 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@768  (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@150 $generated@@756 $generated@@757) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@157 $generated@@757)))))))
(let (($generated@@769  (=> (and (= ($generated@@150 $generated@@756 $generated@@757)  (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@157 $generated@@757))) (= ($generated ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@158)) (- ($generated ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@159)) ($generated ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@160)))))) ($generated@@154 ($generated@@11 ($generated@@150 $generated@@756 $generated@@757)) $generated@@44)) (and (=> (= (ControlFlow 0 7) (- 0 11)) $generated@@758) (=> $generated@@758 (and (=> (= (ControlFlow 0 7) (- 0 10)) $generated@@759) (=> $generated@@759 (and (=> (= (ControlFlow 0 7) (- 0 9)) $generated@@760) (=> $generated@@760 (and (=> (= (ControlFlow 0 7) (- 0 8)) $generated@@761) (=> $generated@@761 (=> (= (ControlFlow 0 7) 6) $generated@@768))))))))))))
(let (($generated@@770  (=> (not ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@157 $generated@@757)))) (=> (and (and (= $generated@@759 true) (= $generated@@760 true)) (and (= $generated@@761 true) (= (ControlFlow 0 13) 7))) $generated@@769))))
(let (($generated@@771  (=> (and (and (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@157 $generated@@757))) (= $generated@@762 ($generated@@0 ($generated@@268 $generated@@763 $generated@@757 $generated@@158)))) (and (= $generated@@764 ($generated@@0 ($generated@@268 $generated@@763 $generated@@757 $generated@@159))) (= $generated@@765 ($generated@@0 ($generated@@268 $generated@@763 $generated@@757 $generated@@160))))) (and (and (= $generated@@759 $generated@@762) (= $generated@@760 $generated@@764)) (and (= $generated@@761 $generated@@765) (= (ControlFlow 0 12) 7)))) $generated@@769)))
(let (($generated@@772  (=> (and (= $generated@@766 ($generated@@326 $generated@@153 $generated@@756 $generated@@60 $generated@@757 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156))) (= $generated@@758 ($generated@@0 ($generated@@268 $generated@@763 $generated@@757 $generated@@156)))) (and (=> (= (ControlFlow 0 14) 12) $generated@@771) (=> (= (ControlFlow 0 14) 13) $generated@@770)))))
(let (($generated@@773 true))
(let (($generated@@774  (=> (and (=> ($generated@@150 $generated@@756 $generated@@757) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@157 $generated@@757)))) (= (ControlFlow 0 4) 1)) $generated@@773)))
(let (($generated@@775  (=> ($generated@@91 $generated@@757 $generated@@172 $generated@@756) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@757 $generated@@757) (and ($generated@@693 ($generated@@205 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@515 ($generated@@673 $generated@@161) ($generated@@157 $generated@@757))) ($generated@@205 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@515 ($generated@@673 $generated@@161) ($generated@@157 $generated@@757)))) (not ($generated@@693 ($generated@@205 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@515 ($generated@@673 $generated@@161) ($generated@@157 $generated@@757))) ($generated@@205 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@515 ($generated@@673 $generated@@161) ($generated@@157 $generated@@757)))))))) (=> (or (= $generated@@757 $generated@@757) (and ($generated@@693 ($generated@@205 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@515 ($generated@@673 $generated@@161) ($generated@@157 $generated@@757))) ($generated@@205 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@515 ($generated@@673 $generated@@161) ($generated@@157 $generated@@757)))) (not ($generated@@693 ($generated@@205 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@515 ($generated@@673 $generated@@161) ($generated@@157 $generated@@757))) ($generated@@205 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@515 ($generated@@673 $generated@@161) ($generated@@157 $generated@@757))))))) (=> (and (and (or (= $generated@@757 $generated@@757) ($generated@@152 $generated@@756 $generated@@757)) ($generated@@150 $generated@@756 $generated@@757)) (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156) ($generated@@157 $generated@@757))) (= (ControlFlow 0 2) 1))) $generated@@773))))))
(let (($generated@@776  (=> (= $generated@@763 ($generated@@269 $generated@@153 $generated@@756 $generated@@60 $generated@@757 ($generated@@100 ($generated@@98 $generated@@756 $generated@@757) $generated@@156))) (=> (and (= $generated@@767 ($generated@@0 ($generated@@268 $generated@@763 $generated@@757 $generated@@156))) $generated@@767) (and (and (=> (= (ControlFlow 0 15) 14) $generated@@772) (=> (= (ControlFlow 0 15) 2) $generated@@775)) (=> (= (ControlFlow 0 15) 4) $generated@@774))))))
(let (($generated@@777  (=> (and ($generated@@151 $generated@@756) ($generated@@405 $generated@@756)) (=> (and (and (not (= $generated@@757 $generated@@153)) (and ($generated@@154 $generated@@757 $generated@@155) ($generated@@91 $generated@@757 $generated@@155 $generated@@756))) (and (= 0 $generated@@149) (= (ControlFlow 0 16) 15))) $generated@@776))))
$generated@@777)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@266 (T@T T@U T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (Int) Int)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@337 (T@T) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@T) T@U)
(declare-fun $generated@@362 (T@T T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@378 (T@U T@U) Bool)
(declare-fun $generated@@384 (T@U) Bool)
(declare-fun $generated@@394 (T@T T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@466 (T@U T@U) T@U)
(declare-fun $generated@@474 (T@U T@U) T@U)
(declare-fun $generated@@482 (T@U T@U) T@U)
(declare-fun $generated@@497 (T@T) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 () T@T)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@570 (T@U Int) T@U)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@610 (T@U) Int)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@625 (T@T) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@687 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@78 $generated@@85))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@61) $generated@@80)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@64) $generated@@81)) (= (type $generated@@65) $generated@@77)) (= ($generated@@1 $generated@@82) 11)) (= (type $generated@@66) $generated@@82)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@83) 12)) (= (type $generated@@69) $generated@@83)) (= (type $generated@@70) $generated@@83)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)) (= (type $generated@@75) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (= ($generated@@86 $generated@@60) 0))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@77)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@44) $generated@@49))
(assert (= ($generated@@87 $generated@@45) $generated@@50))
(assert (= ($generated@@87 $generated@@46) $generated@@51))
(assert (= ($generated@@87 $generated@@47) $generated@@52))
(assert (= ($generated@@87 $generated@@48) $generated@@53))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@80)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 13)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@79 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 15)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@79 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@76)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (= (type $generated@@153) $generated@@94) (= (type $generated@@155) $generated@@76)) (= ($generated@@1 $generated@@161) 16)) (= (type $generated@@156) ($generated@@78 ($generated@@93 $generated@@161 $generated@@4)))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@157 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@157 $generated@@162))
))) (= (type $generated@@158) ($generated@@78 $generated@@2))) (= (type $generated@@159) ($generated@@78 $generated@@2))) (= (type $generated@@160) ($generated@@78 $generated@@2))))
(assert  (=> (<= 0 $generated@@149) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@164) $generated@@94)) (or ($generated@@152 $generated@@163 $generated@@164) (and (not (= 0 $generated@@149)) (and ($generated@@151 $generated@@163) (and (not (= $generated@@164 $generated@@153)) (and ($generated@@154 $generated@@164 $generated@@155) ($generated@@91 $generated@@164 $generated@@155 $generated@@163))))))) (= ($generated@@150 $generated@@163 $generated@@164)  (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@156) ($generated@@157 $generated@@164))) (= ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@158)) (- ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@159)) ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@160)))))))
 :pattern ( ($generated@@150 $generated@@163 $generated@@164) ($generated@@151 $generated@@163))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@167) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@165 $generated@@166 $generated@@167)) (forall (($generated@@168 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@94) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@166 $generated@@168) $generated@@60))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@167 $generated@@168) $generated@@60)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@167 $generated@@168) $generated@@60))
)))
 :pattern ( ($generated@@165 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@169) $generated@@76))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@94) (= (type $generated@@171) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@170 $generated@@169 $generated@@171)  (or (= $generated@@170 $generated@@153) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@171 $generated@@170) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@170 $generated@@169 $generated@@171))
)))
(assert (= (type $generated@@172) $generated@@76))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@94) (= (type $generated@@174) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@173 $generated@@172 $generated@@174)  (or (= $generated@@173 $generated@@153) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@174 $generated@@173) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@173 $generated@@172 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@76)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@178) $generated@@94)) (and ($generated@@151 $generated@@177) (and (not (= $generated@@178 $generated@@153)) (= ($generated@@175 $generated@@178) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@177 $generated@@178) $generated@@159) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@177 $generated@@178) $generated@@159))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@180) $generated@@94)) (and ($generated@@151 $generated@@179) (and (not (= $generated@@180 $generated@@153)) (= ($generated@@175 $generated@@180) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@179 $generated@@180) $generated@@160) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@179 $generated@@180) $generated@@160))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@182) $generated@@94)) (and ($generated@@151 $generated@@181) (and (not (= $generated@@182 $generated@@153)) (= ($generated@@175 $generated@@182) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@181 $generated@@182) $generated@@158) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@181 $generated@@182) $generated@@158))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@2) ($generated@@154 $generated@@183 ($generated@@92 0)))
 :pattern ( ($generated@@154 $generated@@183 ($generated@@92 0)))
)))
(assert  (and (= ($generated@@1 $generated@@186) 17) (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@187 $generated@@188)) $generated@@76)
 :pattern ( ($generated@@185 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@76) (= (type $generated@@190) $generated@@76)) (= (type $generated@@191) $generated@@186)) ($generated@@154 $generated@@191 ($generated@@185 $generated@@189 $generated@@190))) ($generated@@184 $generated@@191))
 :pattern ( ($generated@@184 $generated@@191) ($generated@@154 $generated@@191 ($generated@@185 $generated@@189 $generated@@190)))
)))
(assert  (and (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@161)
 :pattern ( ($generated@@193 $generated@@195))
)) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@161)
 :pattern ( ($generated@@194 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@186) (= (type $generated@@198) $generated@@186)) true) (= ($generated@@192 $generated@@197 $generated@@198)  (and (= ($generated@@193 $generated@@197) ($generated@@193 $generated@@198)) (= ($generated@@194 $generated@@197) ($generated@@194 $generated@@198)))))
 :pattern ( ($generated@@192 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@201 T@U) ) (! (= (type ($generated@@199 $generated@@201)) $generated@@76)
 :pattern ( ($generated@@199 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and (= (type $generated@@202) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@203) $generated@@76)) ($generated@@154 $generated@@202 ($generated@@199 $generated@@203))) ($generated@@200 $generated@@202))
 :pattern ( ($generated@@154 $generated@@202 ($generated@@199 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@94) (= ($generated@@154 $generated@@204 $generated@@172)  (or (= $generated@@204 $generated@@153) (= ($generated@@175 $generated@@204) $generated@@172))))
 :pattern ( ($generated@@154 $generated@@204 $generated@@172))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 18)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@94 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@79 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@94) (= (type $generated@@255) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@256) ($generated@@78 $generated@@4))) (= (type $generated@@258) $generated@@94)) (= (type $generated@@259) ($generated@@78 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (= (type $generated@@261) $generated@@76))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@94) (= (type $generated@@263) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@262 $generated@@261 $generated@@263) ($generated@@91 $generated@@262 $generated@@169 $generated@@263)))
 :pattern ( ($generated@@91 $generated@@262 $generated@@261 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@94) (= (type $generated@@265) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@264 $generated@@155 $generated@@265) ($generated@@91 $generated@@264 $generated@@172 $generated@@265)))
 :pattern ( ($generated@@91 $generated@@264 $generated@@155 $generated@@265))
)))
(assert (= ($generated@@86 $generated@@156) 0))
(assert (forall (($generated@@267 T@T) ($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@267 $generated@@268 $generated@@269)) ($generated@@78 $generated@@267))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268 $generated@@269))
)))
(assert (= ($generated@@266 ($generated@@93 $generated@@161 $generated@@4) $generated@@66 $generated@@74) $generated@@156))
(assert ($generated@@270 $generated@@156))
(assert (= ($generated@@86 $generated@@158) 0))
(assert (= ($generated@@266 $generated@@2 $generated@@66 $generated@@75) $generated@@158))
(assert ($generated@@270 $generated@@158))
(assert  (=> (<= 0 $generated@@149) (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@272) $generated@@94)) (or ($generated@@152 $generated@@271 $generated@@272) (and (not (= 0 $generated@@149)) (and ($generated@@151 $generated@@271) (and (not (= $generated@@272 $generated@@153)) (and ($generated@@154 $generated@@272 $generated@@155) ($generated@@91 $generated@@272 $generated@@155 $generated@@271))))))) ($generated@@150 $generated@@271 $generated@@272)) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@271 $generated@@272) $generated@@156) ($generated@@157 $generated@@272))))
 :pattern ( ($generated@@150 $generated@@271 $generated@@272))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (! (= (type ($generated@@273 $generated@@275 $generated@@276)) $generated@@186)
 :pattern ( ($generated@@273 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) $generated@@76) (= (type $generated@@278) $generated@@76)) (= (type $generated@@279) $generated@@161)) (= (type $generated@@280) $generated@@161)) (= ($generated@@154 ($generated@@273 $generated@@279 $generated@@280) ($generated@@185 $generated@@277 $generated@@278))  (and ($generated@@274 $generated@@279 $generated@@277) ($generated@@274 $generated@@280 $generated@@278))))
 :pattern ( ($generated@@154 ($generated@@273 $generated@@279 $generated@@280) ($generated@@185 $generated@@277 $generated@@278)))
)))
(assert (= ($generated@@86 $generated@@159) 0))
(assert (= ($generated@@266 $generated@@2 $generated@@66 $generated@@72) $generated@@159))
(assert  (not ($generated@@270 $generated@@159)))
(assert (= ($generated@@86 $generated@@160) 0))
(assert (= ($generated@@266 $generated@@2 $generated@@66 $generated@@73) $generated@@160))
(assert  (not ($generated@@270 $generated@@160)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@186) (= (type $generated@@282) $generated@@186)) (= ($generated@@192 $generated@@281 $generated@@282) (= $generated@@281 $generated@@282)))
 :pattern ( ($generated@@192 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@76)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@286) $generated@@76)) (= ($generated@@154 $generated@@285 ($generated@@283 $generated@@286)) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@161) ($generated@@0 ($generated@@98 $generated@@285 $generated@@287))) ($generated@@274 $generated@@287 $generated@@286))
 :pattern ( ($generated@@98 $generated@@285 $generated@@287))
))))
 :pattern ( ($generated@@154 $generated@@285 ($generated@@283 $generated@@286)))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@76)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@291) $generated@@76)) (= ($generated@@154 $generated@@290 ($generated@@288 $generated@@291)) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@161) ($generated@@0 ($generated@@98 $generated@@290 $generated@@292))) ($generated@@274 $generated@@292 $generated@@291))
 :pattern ( ($generated@@98 $generated@@290 $generated@@292))
))))
 :pattern ( ($generated@@154 $generated@@290 ($generated@@288 $generated@@291)))
)))
(assert (forall (($generated@@294 Int) ) (! (= ($generated@@293 $generated@@294) $generated@@294)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 (type $generated@@296)))
(= (type ($generated@@295 $generated@@296)) $generated@@297))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= ($generated@@295 $generated@@298) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@76) (= (type $generated@@301) $generated@@76)) (= (type $generated@@302) $generated@@161)) (= (type $generated@@303) $generated@@161)) (= (type $generated@@304) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@151 $generated@@304)) (= ($generated@@91 ($generated@@273 $generated@@302 $generated@@303) ($generated@@185 $generated@@300 $generated@@301) $generated@@304)  (and ($generated@@299 $generated@@302 $generated@@300 $generated@@304) ($generated@@299 $generated@@303 $generated@@301 $generated@@304))))
 :pattern ( ($generated@@91 ($generated@@273 $generated@@302 $generated@@303) ($generated@@185 $generated@@300 $generated@@301) $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@81)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@186) (= ($generated@@184 $generated@@307) (= ($generated@@305 $generated@@307) $generated@@64)))
 :pattern ( ($generated@@184 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@186) ($generated@@184 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@161) (= (type $generated@@310) $generated@@161)) (= $generated@@308 ($generated@@273 $generated@@309 $generated@@310)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@184 $generated@@308))
)))
(assert  (and (and (forall (($generated@@315 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@315)) 19)) (forall (($generated@@316 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@313 $generated@@316))
))) (forall (($generated@@317 T@T) ) (! (= (type ($generated@@311 $generated@@317)) ($generated@@313 $generated@@317))
 :pattern ( ($generated@@311 $generated@@317))
))))
(assert (forall (($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@318)) 0)
 :pattern ( ($generated@@311 $generated@@318))
)))
(assert ($generated@@270 $generated@@60))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@76) (= (type $generated@@321) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@299 ($generated@@157 $generated@@319) $generated@@320 $generated@@321) ($generated@@91 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@299 ($generated@@157 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@322) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@323) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@324) $generated@@161)) (= (type $generated@@325) $generated@@76)) ($generated@@165 $generated@@322 $generated@@323)) ($generated@@299 $generated@@324 $generated@@325 $generated@@322)) ($generated@@299 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@165 $generated@@322 $generated@@323) ($generated@@299 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@326) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@327) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@329) $generated@@76)) ($generated@@165 $generated@@326 $generated@@327)) ($generated@@91 $generated@@328 $generated@@329 $generated@@326)) ($generated@@91 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@165 $generated@@326 $generated@@327) ($generated@@91 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@331) $generated@@94)) (=> (and (and ($generated@@151 $generated@@330) (and (not (= $generated@@331 $generated@@153)) (= ($generated@@175 $generated@@331) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@330 $generated@@331) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@330 $generated@@331) $generated@@159) $generated@@46 $generated@@330)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@330 $generated@@331) $generated@@159))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@333) $generated@@94)) (=> (and (and ($generated@@151 $generated@@332) (and (not (= $generated@@333 $generated@@153)) (= ($generated@@175 $generated@@333) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@332 $generated@@333) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@332 $generated@@333) $generated@@160) $generated@@46 $generated@@332)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@332 $generated@@333) $generated@@160))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@335) $generated@@94)) (=> (and (and ($generated@@151 $generated@@334) (and (not (= $generated@@335 $generated@@153)) (= ($generated@@175 $generated@@335) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@334 $generated@@335) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@334 $generated@@335) $generated@@158) $generated@@46 $generated@@334)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@334 $generated@@335) $generated@@158))
)))
(assert (forall (($generated@@338 T@T) ) (! (= (type ($generated@@337 $generated@@338)) ($generated@@93 $generated@@338 $generated@@2))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@96 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@93 $generated@@340 $generated@@2)) (and (= (= ($generated@@336 $generated@@339) 0) (= $generated@@339 ($generated@@337 $generated@@340))) (=> (not (= ($generated@@336 $generated@@339) 0)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) (< 0 ($generated ($generated@@98 $generated@@339 $generated@@341))))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 20)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@93 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@98 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@98 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert  (and (and (and (and (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (= ($generated@@1 ($generated@@362 $generated@@365 $generated@@366)) 21)) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@363 ($generated@@362 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@362 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@364 ($generated@@362 $generated@@369 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@362 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@363 (type $generated@@371))))
(= (type ($generated@@360 $generated@@371)) ($generated@@93 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@371))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= (type ($generated@@361 $generated@@373 $generated@@374)) ($generated@@362 $generated@@373 $generated@@374))
 :pattern ( ($generated@@361 $generated@@373 $generated@@374))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@T) ) (! (let (($generated@@377 (type $generated@@375)))
 (not ($generated@@0 ($generated@@98 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375))))
 :pattern ( (let (($generated@@377 (type $generated@@375)))
($generated@@98 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@380) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@378 $generated@@379 $generated@@380)) (and ($generated@@165 $generated@@379 $generated@@380) (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@79 (type $generated@@382))))
 (=> (and (and (= (type $generated@@381) $generated@@94) (= (type $generated@@382) ($generated@@78 $generated@@383))) (not ($generated@@270 $generated@@382))) (= ($generated@@100 ($generated@@98 $generated@@379 $generated@@381) $generated@@382) ($generated@@100 ($generated@@98 $generated@@380 $generated@@381) $generated@@382))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@380 $generated@@381) $generated@@382))
))))
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@386) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@387) $generated@@94)) (=> (and (and (and ($generated@@151 $generated@@385) ($generated@@151 $generated@@386)) (and (not (= $generated@@387 $generated@@153)) ($generated@@154 $generated@@387 $generated@@155))) (and ($generated@@384 $generated@@385) ($generated@@165 $generated@@385 $generated@@386))) (=> (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@79 (type $generated@@389))))
 (=> (and (and (= (type $generated@@388) $generated@@94) (= (type $generated@@389) ($generated@@78 $generated@@390))) (and (not (= $generated@@388 $generated@@153)) (or (= $generated@@388 $generated@@387) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@385 $generated@@387) $generated@@156) ($generated@@157 $generated@@388)))))) (= ($generated@@100 ($generated@@98 $generated@@385 $generated@@388) $generated@@389) ($generated@@100 ($generated@@98 $generated@@386 $generated@@388) $generated@@389))))
 :no-pattern (type $generated@@388)
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
)) (= ($generated@@150 $generated@@385 $generated@@387) ($generated@@150 $generated@@386 $generated@@387)))))
 :pattern ( ($generated@@384 $generated@@385) ($generated@@165 $generated@@385 $generated@@386) ($generated@@150 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@96 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@93 $generated@@392 $generated@@2)) (= ($generated@@200 $generated@@391) (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@392) (and (<= 0 ($generated ($generated@@98 $generated@@391 $generated@@393))) (<= ($generated ($generated@@98 $generated@@391 $generated@@393)) ($generated@@336 $generated@@391))))
 :pattern ( ($generated@@98 $generated@@391 $generated@@393))
)))))
 :pattern ( ($generated@@200 $generated@@391))
)))
(assert (forall (($generated@@395 T@T) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@395)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@161) ($generated@@274 $generated@@397 $generated@@169)) (and (= ($generated@@157 ($generated@@394 $generated@@94 $generated@@397)) $generated@@397) ($generated@@154 ($generated@@394 $generated@@94 $generated@@397) $generated@@169)))
 :pattern ( ($generated@@274 $generated@@397 $generated@@169))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@161) ($generated@@274 $generated@@398 $generated@@261)) (and (= ($generated@@157 ($generated@@394 $generated@@94 $generated@@398)) $generated@@398) ($generated@@154 ($generated@@394 $generated@@94 $generated@@398) $generated@@261)))
 :pattern ( ($generated@@274 $generated@@398 $generated@@261))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@161) ($generated@@274 $generated@@399 $generated@@172)) (and (= ($generated@@157 ($generated@@394 $generated@@94 $generated@@399)) $generated@@399) ($generated@@154 ($generated@@394 $generated@@94 $generated@@399) $generated@@172)))
 :pattern ( ($generated@@274 $generated@@399 $generated@@172))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@161) ($generated@@274 $generated@@400 $generated@@155)) (and (= ($generated@@157 ($generated@@394 $generated@@94 $generated@@400)) $generated@@400) ($generated@@154 ($generated@@394 $generated@@94 $generated@@400) $generated@@155)))
 :pattern ( ($generated@@274 $generated@@400 $generated@@155))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (= (type $generated@@401) $generated@@94) (= ($generated@@154 $generated@@401 $generated@@261)  (and ($generated@@154 $generated@@401 $generated@@169) (not (= $generated@@401 $generated@@153)))))
 :pattern ( ($generated@@154 $generated@@401 $generated@@261))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@94) (= ($generated@@154 $generated@@402 $generated@@155)  (and ($generated@@154 $generated@@402 $generated@@172) (not (= $generated@@402 $generated@@153)))))
 :pattern ( ($generated@@154 $generated@@402 $generated@@155))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@346 (type $generated@@403))))
(let (($generated@@405 ($generated@@345 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@344 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@343 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) ($generated@@0 ($generated@@98 ($generated@@342 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@342 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@346 (type $generated@@408))))
(= (type ($generated@@407 $generated@@408)) ($generated@@93 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@346 (type $generated@@410))))
(let (($generated@@412 ($generated@@345 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@344 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@343 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@411) ($generated@@0 ($generated@@98 ($generated@@407 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@364 (type $generated@@414))))
(let (($generated@@416 ($generated@@363 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@362 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@361 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) ($generated@@0 ($generated@@98 ($generated@@360 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@360 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@364 (type $generated@@419))))
(= (type ($generated@@418 $generated@@419)) ($generated@@93 $generated@@420 $generated@@4)))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@364 (type $generated@@421))))
(let (($generated@@423 ($generated@@363 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@362 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@361 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@422) ($generated@@0 ($generated@@98 ($generated@@418 $generated@@421) $generated@@424)))
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@418 $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@426) $generated@@76)) (= ($generated@@154 $generated@@425 ($generated@@199 $generated@@426)) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@425 $generated@@427)))) ($generated@@274 $generated@@427 $generated@@426))
 :pattern ( ($generated@@98 $generated@@425 $generated@@427))
))))
 :pattern ( ($generated@@154 $generated@@425 ($generated@@199 $generated@@426)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@429) $generated@@76)) (= (type $generated@@430) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@428 ($generated@@283 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@161) ($generated@@0 ($generated@@98 $generated@@428 $generated@@431))) ($generated@@299 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@98 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@91 $generated@@428 ($generated@@283 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@433) $generated@@76)) (= (type $generated@@434) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@432 ($generated@@288 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@161) ($generated@@0 ($generated@@98 $generated@@432 $generated@@435))) ($generated@@299 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@98 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@91 $generated@@432 ($generated@@288 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(= ($generated ($generated@@98 ($generated@@337 $generated@@437) $generated@@436)) 0))
 :pattern ( (let (($generated@@437 (type $generated@@436)))
($generated@@98 ($generated@@337 $generated@@437) $generated@@436)))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@439) $generated@@94)) (=> (and (and ($generated@@151 $generated@@438) (and (not (= $generated@@439 $generated@@153)) (= ($generated@@175 $generated@@439) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@438 $generated@@439) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@438 $generated@@439) $generated@@156) ($generated@@283 $generated@@261) $generated@@438)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@438 $generated@@439) $generated@@156))
)))
(assert  (and (forall (($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@442)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@440 $generated@@442))
)) (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@346 (type $generated@@443))))
(let (($generated@@445 ($generated@@345 (type $generated@@443))))
(= (type ($generated@@441 $generated@@443)) ($generated@@93 $generated@@445 $generated@@444))))
 :pattern ( ($generated@@441 $generated@@443))
))))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) ($generated@@344 $generated@@161 $generated@@161)) (= (type $generated@@447) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@440 $generated@@446) $generated@@447))  (and ($generated@@0 ($generated@@98 ($generated@@342 $generated@@446) ($generated@@193 ($generated@@394 $generated@@186 $generated@@447)))) (= ($generated@@98 ($generated@@441 $generated@@446) ($generated@@193 ($generated@@394 $generated@@186 $generated@@447))) ($generated@@194 ($generated@@394 $generated@@186 $generated@@447))))))
 :pattern ( ($generated@@98 ($generated@@440 $generated@@446) $generated@@447))
)))
(assert  (and (forall (($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@450)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@448 $generated@@450))
)) (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@364 (type $generated@@451))))
(let (($generated@@453 ($generated@@363 (type $generated@@451))))
(= (type ($generated@@449 $generated@@451)) ($generated@@93 $generated@@453 $generated@@452))))
 :pattern ( ($generated@@449 $generated@@451))
))))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) ($generated@@362 $generated@@161 $generated@@161)) (= (type $generated@@455) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@448 $generated@@454) $generated@@455))  (and ($generated@@0 ($generated@@98 ($generated@@360 $generated@@454) ($generated@@193 ($generated@@394 $generated@@186 $generated@@455)))) (= ($generated@@98 ($generated@@449 $generated@@454) ($generated@@193 ($generated@@394 $generated@@186 $generated@@455))) ($generated@@194 ($generated@@394 $generated@@186 $generated@@455))))))
 :pattern ( ($generated@@98 ($generated@@448 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(let (($generated@@459 ($generated@@345 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@344 $generated@@459 $generated@@458)) (= ($generated@@0 ($generated@@98 ($generated@@407 $generated@@456) $generated@@457)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) (and ($generated@@0 ($generated@@98 ($generated@@342 $generated@@456) $generated@@460)) (= $generated@@457 ($generated@@98 ($generated@@441 $generated@@456) $generated@@460))))
 :pattern ( ($generated@@98 ($generated@@342 $generated@@456) $generated@@460))
 :pattern ( ($generated@@98 ($generated@@441 $generated@@456) $generated@@460))
))))))
 :pattern ( ($generated@@98 ($generated@@407 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@363 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@362 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@98 ($generated@@418 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@98 ($generated@@360 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@98 ($generated@@449 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@98 ($generated@@360 $generated@@461) $generated@@465))
 :pattern ( ($generated@@98 ($generated@@449 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@98 ($generated@@418 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@467 $generated@@468)) $generated@@76)
 :pattern ( ($generated@@466 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (and (= (type $generated@@469) ($generated@@344 $generated@@161 $generated@@161)) (= (type $generated@@470) $generated@@76)) (= (type $generated@@471) $generated@@76)) (= (type $generated@@472) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@469 ($generated@@466 $generated@@470 $generated@@471) $generated@@472) (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@342 $generated@@469) $generated@@473))) (and ($generated@@299 ($generated@@98 ($generated@@441 $generated@@469) $generated@@473) $generated@@471 $generated@@472) ($generated@@299 $generated@@473 $generated@@470 $generated@@472)))
 :pattern ( ($generated@@98 ($generated@@441 $generated@@469) $generated@@473))
 :pattern ( ($generated@@98 ($generated@@342 $generated@@469) $generated@@473))
))))
 :pattern ( ($generated@@91 $generated@@469 ($generated@@466 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@475 $generated@@476)) $generated@@76)
 :pattern ( ($generated@@474 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (and (= (type $generated@@477) ($generated@@362 $generated@@161 $generated@@161)) (= (type $generated@@478) $generated@@76)) (= (type $generated@@479) $generated@@76)) (= (type $generated@@480) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@477 ($generated@@474 $generated@@478 $generated@@479) $generated@@480) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@360 $generated@@477) $generated@@481))) (and ($generated@@299 ($generated@@98 ($generated@@449 $generated@@477) $generated@@481) $generated@@479 $generated@@480) ($generated@@299 $generated@@481 $generated@@478 $generated@@480)))
 :pattern ( ($generated@@98 ($generated@@449 $generated@@477) $generated@@481))
 :pattern ( ($generated@@98 ($generated@@360 $generated@@477) $generated@@481))
))))
 :pattern ( ($generated@@91 $generated@@477 ($generated@@474 $generated@@478 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= (type ($generated@@482 $generated@@483 $generated@@484)) ($generated@@93 $generated@@485 $generated@@4)))
 :pattern ( ($generated@@482 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@487)))
 (=> (and (and (= (type $generated@@486) ($generated@@93 $generated@@489 $generated@@4)) (= (type $generated@@488) $generated@@489)) ($generated@@0 ($generated@@98 $generated@@486 $generated@@488))) ($generated@@0 ($generated@@98 ($generated@@482 $generated@@486 $generated@@487) $generated@@488))))
 :pattern ( ($generated@@482 $generated@@486 $generated@@487) ($generated@@98 $generated@@486 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@491)))
 (=> (and (= (type $generated@@490) ($generated@@93 $generated@@493 $generated@@4)) (= (type $generated@@492) $generated@@493)) (= ($generated@@0 ($generated@@98 ($generated@@482 $generated@@490 $generated@@491) $generated@@492))  (or (= $generated@@492 $generated@@491) ($generated@@0 ($generated@@98 $generated@@490 $generated@@492))))))
 :pattern ( ($generated@@98 ($generated@@482 $generated@@490 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@494) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@495) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@496) ($generated@@93 $generated@@94 $generated@@95))) (not (= $generated@@494 $generated@@496))) (and ($generated@@165 $generated@@494 $generated@@495) ($generated@@165 $generated@@495 $generated@@496))) ($generated@@165 $generated@@494 $generated@@496))
 :pattern ( ($generated@@165 $generated@@494 $generated@@495) ($generated@@165 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@T) ) (! (= (type ($generated@@497 $generated@@498)) ($generated@@93 $generated@@498 $generated@@4))
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@364 (type $generated@@499))))
(let (($generated@@501 ($generated@@363 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@362 $generated@@501 $generated@@500)) (= (= $generated@@499 ($generated@@361 $generated@@501 $generated@@500)) (= ($generated@@360 $generated@@499) ($generated@@497 $generated@@501))))))
 :pattern ( ($generated@@360 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@364 (type $generated@@502))))
(let (($generated@@504 ($generated@@363 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@362 $generated@@504 $generated@@503)) (= (= $generated@@502 ($generated@@361 $generated@@504 $generated@@503)) (= ($generated@@418 $generated@@502) ($generated@@497 $generated@@503))))))
 :pattern ( ($generated@@418 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@364 (type $generated@@505))))
(let (($generated@@507 ($generated@@363 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@362 $generated@@507 $generated@@506)) (= (= $generated@@505 ($generated@@361 $generated@@507 $generated@@506)) (= ($generated@@448 $generated@@505) ($generated@@497 $generated@@161))))))
 :pattern ( ($generated@@448 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@346 (type $generated@@508))))
(let (($generated@@510 ($generated@@345 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@344 $generated@@510 $generated@@509)) (or (= $generated@@508 ($generated@@343 $generated@@510 $generated@@509)) (exists (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (and (and (= (type $generated@@511) $generated@@161) (= (type $generated@@512) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@440 $generated@@508) ($generated@@157 ($generated@@273 $generated@@511 $generated@@512)))))
 :no-pattern (type $generated@@511)
 :no-pattern (type $generated@@512)
 :no-pattern ($generated $generated@@511)
 :no-pattern ($generated@@0 $generated@@511)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
))))))
 :pattern ( ($generated@@440 $generated@@508))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@364 (type $generated@@513))))
(let (($generated@@515 ($generated@@363 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@362 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@361 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@161) (= (type $generated@@517) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@448 $generated@@513) ($generated@@157 ($generated@@273 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@448 $generated@@513))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@82)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@T) ) (!  (=> (and (= (type $generated@@520) $generated@@82) (= (type $generated@@521) $generated@@80)) (and (= ($generated@@518 ($generated@@266 $generated@@522 $generated@@520 $generated@@521)) $generated@@520) (= ($generated@@89 ($generated@@266 $generated@@522 $generated@@520 $generated@@521)) $generated@@521)))
 :pattern ( ($generated@@266 $generated@@522 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@161) ($generated@@274 $generated@@523 $generated@@46)) (and (= ($generated@@157 ($generated@@394 $generated@@2 $generated@@523)) $generated@@523) ($generated@@154 ($generated@@394 $generated@@2 $generated@@523) $generated@@46)))
 :pattern ( ($generated@@274 $generated@@523 $generated@@46))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@161) ($generated@@274 $generated@@524 $generated@@47)) (and (= ($generated@@157 ($generated@@394 $generated@@3 $generated@@524)) $generated@@524) ($generated@@154 ($generated@@394 $generated@@3 $generated@@524) $generated@@47)))
 :pattern ( ($generated@@274 $generated@@524 $generated@@47))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@161) ($generated@@274 $generated@@525 $generated@@44)) (and (= ($generated@@157 ($generated@@394 $generated@@4 $generated@@525)) $generated@@525) ($generated@@154 ($generated@@394 $generated@@4 $generated@@525) $generated@@44)))
 :pattern ( ($generated@@274 $generated@@525 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@526) 22))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@161) ($generated@@274 $generated@@527 $generated@@45)) (and (= ($generated@@157 ($generated@@394 $generated@@526 $generated@@527)) $generated@@527) ($generated@@154 ($generated@@394 $generated@@526 $generated@@527) $generated@@45)))
 :pattern ( ($generated@@274 $generated@@527 $generated@@45))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@76) (= ($generated@@274 ($generated@@157 $generated@@528) $generated@@529) ($generated@@154 $generated@@528 $generated@@529)))
 :pattern ( ($generated@@274 ($generated@@157 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@96 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@93 $generated@@531 $generated@@2)) (<= 0 ($generated@@336 $generated@@530))))
 :pattern ( ($generated@@336 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@314 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@313 $generated@@533)) (<= 0 ($generated@@312 $generated@@532))))
 :pattern ( ($generated@@312 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@76)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@76) (= (type $generated@@537) $generated@@76)) (= ($generated@@534 ($generated@@466 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@466 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@76)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@76) (= (type $generated@@541) $generated@@76)) (= ($generated@@538 ($generated@@466 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@466 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@76) (= (type $generated@@543) $generated@@76)) (= ($generated@@87 ($generated@@466 $generated@@542 $generated@@543)) $generated@@58))
 :pattern ( ($generated@@466 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@76)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@76) (= (type $generated@@547) $generated@@76)) (= ($generated@@544 ($generated@@474 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@474 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@76)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@76) (= (type $generated@@551) $generated@@76)) (= ($generated@@548 ($generated@@474 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@474 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@76) (= (type $generated@@553) $generated@@76)) (= ($generated@@87 ($generated@@474 $generated@@552 $generated@@553)) $generated@@59))
 :pattern ( ($generated@@474 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@161) (= (type $generated@@555) $generated@@161)) (= ($generated@@305 ($generated@@273 $generated@@554 $generated@@555)) $generated@@64))
 :pattern ( ($generated@@273 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@76)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@76) (= (type $generated@@559) $generated@@76)) (= ($generated@@556 ($generated@@185 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@185 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@76)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@76) (= (type $generated@@563) $generated@@76)) (= ($generated@@560 ($generated@@185 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@185 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@161) (= (type $generated@@565) $generated@@161)) (= ($generated@@193 ($generated@@273 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@273 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@161) (= (type $generated@@567) $generated@@161)) (= ($generated@@194 ($generated@@273 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@273 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@94) ($generated@@154 $generated@@568 $generated@@169))
 :pattern ( ($generated@@154 $generated@@568 $generated@@169))
)))
(assert  (and (forall (($generated@@571 T@U) ) (! (= (type ($generated@@569 $generated@@571)) $generated@@76)
 :pattern ( ($generated@@569 $generated@@571))
)) (forall (($generated@@572 T@U) ($generated@@573 Int) ) (! (let (($generated@@574 ($generated@@314 (type $generated@@572))))
(= (type ($generated@@570 $generated@@572 $generated@@573)) $generated@@574))
 :pattern ( ($generated@@570 $generated@@572 $generated@@573))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@313 $generated@@161)) (= (type $generated@@576) $generated@@76)) (= (type $generated@@577) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@575 ($generated@@569 $generated@@576) $generated@@577) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@312 $generated@@575))) ($generated@@299 ($generated@@570 $generated@@575 $generated@@578) $generated@@576 $generated@@577))
 :pattern ( ($generated@@570 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@91 $generated@@575 ($generated@@569 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (=> (= (type $generated@@579) ($generated@@93 $generated@@581 $generated@@4)) ($generated@@0 ($generated@@98 ($generated@@482 $generated@@579 $generated@@580) $generated@@580))))
 :pattern ( ($generated@@482 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@582 ($generated@@92 $generated@@583)) $generated@@583)
 :pattern ( ($generated@@92 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@76)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@76) (= ($generated@@584 ($generated@@283 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@283 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@76) (= ($generated@@87 ($generated@@283 $generated@@587)) $generated@@54))
 :pattern ( ($generated@@283 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@76)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@76) (= ($generated@@588 ($generated@@288 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@288 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@76) (= ($generated@@87 ($generated@@288 $generated@@591)) $generated@@55))
 :pattern ( ($generated@@288 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@76)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@76) (= ($generated@@592 ($generated@@199 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@199 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@76) (= ($generated@@87 ($generated@@199 $generated@@595)) $generated@@56))
 :pattern ( ($generated@@199 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@76)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@76) (= ($generated@@596 ($generated@@569 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@569 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@76) (= ($generated@@87 ($generated@@569 $generated@@599)) $generated@@57))
 :pattern ( ($generated@@569 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
(= ($generated@@394 $generated@@601 ($generated@@157 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@157 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@344 $generated@@161 $generated@@161)) (= (type $generated@@603) $generated@@76)) (= (type $generated@@604) $generated@@76)) (= ($generated@@154 $generated@@602 ($generated@@466 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@342 $generated@@602) $generated@@605))) (and ($generated@@274 ($generated@@98 ($generated@@441 $generated@@602) $generated@@605) $generated@@604) ($generated@@274 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@98 ($generated@@441 $generated@@602) $generated@@605))
 :pattern ( ($generated@@98 ($generated@@342 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@154 $generated@@602 ($generated@@466 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@362 $generated@@161 $generated@@161)) (= (type $generated@@607) $generated@@76)) (= (type $generated@@608) $generated@@76)) (= ($generated@@154 $generated@@606 ($generated@@474 $generated@@607 $generated@@608)) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@360 $generated@@606) $generated@@609))) (and ($generated@@274 ($generated@@98 ($generated@@449 $generated@@606) $generated@@609) $generated@@608) ($generated@@274 $generated@@609 $generated@@607)))
 :pattern ( ($generated@@98 ($generated@@449 $generated@@606) $generated@@609))
 :pattern ( ($generated@@98 ($generated@@360 $generated@@606) $generated@@609))
))))
 :pattern ( ($generated@@154 $generated@@606 ($generated@@474 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@161) (= (type $generated@@613) $generated@@161)) (< ($generated@@610 $generated@@612) ($generated@@611 ($generated@@273 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@273 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@161) (= (type $generated@@615) $generated@@161)) (< ($generated@@610 $generated@@615) ($generated@@611 ($generated@@273 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@273 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@161) (= (type $generated@@617) $generated@@76)) (= (type $generated@@618) $generated@@76)) ($generated@@274 $generated@@616 ($generated@@466 $generated@@617 $generated@@618))) (and (= ($generated@@157 ($generated@@394 ($generated@@344 $generated@@161 $generated@@161) $generated@@616)) $generated@@616) ($generated@@154 ($generated@@394 ($generated@@344 $generated@@161 $generated@@161) $generated@@616) ($generated@@466 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@274 $generated@@616 ($generated@@466 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@161) (= (type $generated@@620) $generated@@76)) (= (type $generated@@621) $generated@@76)) ($generated@@274 $generated@@619 ($generated@@474 $generated@@620 $generated@@621))) (and (= ($generated@@157 ($generated@@394 ($generated@@362 $generated@@161 $generated@@161) $generated@@619)) $generated@@619) ($generated@@154 ($generated@@394 ($generated@@362 $generated@@161 $generated@@161) $generated@@619) ($generated@@474 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@274 $generated@@619 ($generated@@474 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@76) (= (type $generated@@623) $generated@@76)) (= (type $generated@@624) $generated@@161)) ($generated@@274 $generated@@624 ($generated@@185 $generated@@622 $generated@@623))) (and (= ($generated@@157 ($generated@@394 $generated@@186 $generated@@624)) $generated@@624) ($generated@@154 ($generated@@394 $generated@@186 $generated@@624) ($generated@@185 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@274 $generated@@624 ($generated@@185 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@626 T@T) ) (! (= (type ($generated@@625 $generated@@626)) ($generated@@93 $generated@@626 $generated@@4))
 :pattern ( ($generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (not ($generated@@0 ($generated@@98 ($generated@@625 $generated@@628) $generated@@627))))
 :pattern ( (let (($generated@@628 (type $generated@@627)))
($generated@@98 ($generated@@625 $generated@@628) $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@629)))
 (not ($generated@@0 ($generated@@98 ($generated@@497 $generated@@630) $generated@@629))))
 :pattern ( (let (($generated@@630 (type $generated@@629)))
($generated@@98 ($generated@@497 $generated@@630) $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@83)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@76) (= (type $generated@@634) $generated@@76)) (and (= ($generated@@87 ($generated@@185 $generated@@633 $generated@@634)) $generated@@65) (= ($generated@@631 ($generated@@185 $generated@@633 $generated@@634)) $generated@@70)))
 :pattern ( ($generated@@185 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@186) (= ($generated@@610 ($generated@@157 $generated@@635)) ($generated@@611 $generated@@635)))
 :pattern ( ($generated@@610 ($generated@@157 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@161) ($generated@@274 $generated@@636 ($generated@@92 0))) (and (= ($generated@@157 ($generated@@394 $generated@@2 $generated@@636)) $generated@@636) ($generated@@154 ($generated@@394 ($generated@@93 $generated@@161 $generated@@4) $generated@@636) ($generated@@92 0))))
 :pattern ( ($generated@@274 $generated@@636 ($generated@@92 0)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@161) (= (type $generated@@638) $generated@@76)) ($generated@@274 $generated@@637 ($generated@@283 $generated@@638))) (and (= ($generated@@157 ($generated@@394 ($generated@@93 $generated@@161 $generated@@4) $generated@@637)) $generated@@637) ($generated@@154 ($generated@@394 ($generated@@93 $generated@@161 $generated@@4) $generated@@637) ($generated@@283 $generated@@638))))
 :pattern ( ($generated@@274 $generated@@637 ($generated@@283 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@161) (= (type $generated@@640) $generated@@76)) ($generated@@274 $generated@@639 ($generated@@288 $generated@@640))) (and (= ($generated@@157 ($generated@@394 ($generated@@93 $generated@@161 $generated@@4) $generated@@639)) $generated@@639) ($generated@@154 ($generated@@394 ($generated@@93 $generated@@161 $generated@@4) $generated@@639) ($generated@@288 $generated@@640))))
 :pattern ( ($generated@@274 $generated@@639 ($generated@@288 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@161) (= (type $generated@@642) $generated@@76)) ($generated@@274 $generated@@641 ($generated@@199 $generated@@642))) (and (= ($generated@@157 ($generated@@394 ($generated@@93 $generated@@161 $generated@@2) $generated@@641)) $generated@@641) ($generated@@154 ($generated@@394 ($generated@@93 $generated@@161 $generated@@2) $generated@@641) ($generated@@199 $generated@@642))))
 :pattern ( ($generated@@274 $generated@@641 ($generated@@199 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@161) (= (type $generated@@644) $generated@@76)) ($generated@@274 $generated@@643 ($generated@@569 $generated@@644))) (and (= ($generated@@157 ($generated@@394 ($generated@@313 $generated@@161) $generated@@643)) $generated@@643) ($generated@@154 ($generated@@394 ($generated@@313 $generated@@161) $generated@@643) ($generated@@569 $generated@@644))))
 :pattern ( ($generated@@274 $generated@@643 ($generated@@569 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@648)))
 (=> (and (and (and (= (type $generated@@645) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@646) $generated@@94)) (= (type $generated@@647) ($generated@@78 $generated@@649))) ($generated@@151 ($generated@@99 $generated@@645 $generated@@646 ($generated@@101 ($generated@@98 $generated@@645 $generated@@646) $generated@@647 $generated@@648)))) ($generated@@165 $generated@@645 ($generated@@99 $generated@@645 $generated@@646 ($generated@@101 ($generated@@98 $generated@@645 $generated@@646) $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@99 $generated@@645 $generated@@646 ($generated@@101 ($generated@@98 $generated@@645 $generated@@646) $generated@@647 $generated@@648)))
)))
(assert (= ($generated@@87 $generated@@169) $generated@@62))
(assert (= ($generated@@631 $generated@@169) $generated@@69))
(assert (= ($generated@@87 $generated@@261) $generated@@63))
(assert (= ($generated@@631 $generated@@261) $generated@@69))
(assert (= ($generated@@87 $generated@@172) $generated@@67))
(assert (= ($generated@@631 $generated@@172) $generated@@71))
(assert (= ($generated@@87 $generated@@155) $generated@@68))
(assert (= ($generated@@631 $generated@@155) $generated@@71))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@650) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@651) $generated@@76)) (= (type $generated@@652) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@650 ($generated@@199 $generated@@651) $generated@@652) (forall (($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@650 $generated@@653)))) ($generated@@299 $generated@@653 $generated@@651 $generated@@652))
 :pattern ( ($generated@@98 $generated@@650 $generated@@653))
))))
 :pattern ( ($generated@@91 $generated@@650 ($generated@@199 $generated@@651) $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) $generated@@186) (= (type $generated@@655) $generated@@76)) (= (type $generated@@656) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@151 $generated@@656) (and ($generated@@184 $generated@@654) (exists (($generated@@657 T@U) ) (!  (and (= (type $generated@@657) $generated@@76) ($generated@@91 $generated@@654 ($generated@@185 $generated@@655 $generated@@657) $generated@@656))
 :pattern ( ($generated@@91 $generated@@654 ($generated@@185 $generated@@655 $generated@@657) $generated@@656))
))))) ($generated@@299 ($generated@@193 $generated@@654) $generated@@655 $generated@@656))
 :pattern ( ($generated@@299 ($generated@@193 $generated@@654) $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) $generated@@186) (= (type $generated@@659) $generated@@76)) (= (type $generated@@660) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@151 $generated@@660) (and ($generated@@184 $generated@@658) (exists (($generated@@661 T@U) ) (!  (and (= (type $generated@@661) $generated@@76) ($generated@@91 $generated@@658 ($generated@@185 $generated@@661 $generated@@659) $generated@@660))
 :pattern ( ($generated@@91 $generated@@658 ($generated@@185 $generated@@661 $generated@@659) $generated@@660))
))))) ($generated@@299 ($generated@@194 $generated@@658) $generated@@659 $generated@@660))
 :pattern ( ($generated@@299 ($generated@@194 $generated@@658) $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@663) $generated@@94)) (and ($generated@@151 $generated@@662) (and (not (= $generated@@663 $generated@@153)) (= ($generated@@175 $generated@@663) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@662 $generated@@663) $generated@@156) ($generated@@283 $generated@@261)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@662 $generated@@663) $generated@@156))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@161) (= (type $generated@@665) $generated@@161)) (= ($generated@@273 ($generated@@295 $generated@@664) ($generated@@295 $generated@@665)) ($generated@@295 ($generated@@273 $generated@@664 $generated@@665))))
 :pattern ( ($generated@@273 ($generated@@295 $generated@@664) ($generated@@295 $generated@@665)))
)))
(assert (forall (($generated@@666 Int) ) (! (= ($generated@@157 ($generated@@8 ($generated@@293 $generated@@666))) ($generated@@295 ($generated@@157 ($generated@@8 $generated@@666))))
 :pattern ( ($generated@@157 ($generated@@8 ($generated@@293 $generated@@666))))
)))
(assert (forall (($generated@@667 T@U) ) (! (= ($generated@@157 ($generated@@295 $generated@@667)) ($generated@@295 ($generated@@157 $generated@@667)))
 :pattern ( ($generated@@157 ($generated@@295 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 ($generated@@314 (type $generated@@668))))
 (=> (and (= (type $generated@@668) ($generated@@313 $generated@@669)) (= ($generated@@312 $generated@@668) 0)) (= $generated@@668 ($generated@@311 $generated@@669))))
 :pattern ( ($generated@@312 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (! (let (($generated@@673 (type $generated@@671)))
 (=> (and (and (= (type $generated@@670) ($generated@@93 $generated@@673 $generated@@2)) (= (type $generated@@672) $generated@@2)) (<= 0 ($generated $generated@@672))) (= ($generated@@336 ($generated@@99 $generated@@670 $generated@@671 $generated@@672)) (+ (- ($generated@@336 $generated@@670) ($generated ($generated@@98 $generated@@670 $generated@@671))) ($generated $generated@@672)))))
 :pattern ( ($generated@@336 ($generated@@99 $generated@@670 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@675) $generated@@2)) ($generated@@91 $generated@@675 $generated@@46 $generated@@674))
 :pattern ( ($generated@@91 $generated@@675 $generated@@46 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@677) $generated@@3)) ($generated@@91 $generated@@677 $generated@@47 $generated@@676))
 :pattern ( ($generated@@91 $generated@@677 $generated@@47 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@679) $generated@@4)) ($generated@@91 $generated@@679 $generated@@44 $generated@@678))
 :pattern ( ($generated@@91 $generated@@679 $generated@@44 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@681) $generated@@526)) ($generated@@91 $generated@@681 $generated@@45 $generated@@680))
 :pattern ( ($generated@@91 $generated@@681 $generated@@45 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@683) $generated@@161)) ($generated@@91 $generated@@683 $generated@@48 $generated@@682))
 :pattern ( ($generated@@91 $generated@@683 $generated@@48 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@313 $generated@@161)) (= (type $generated@@685) $generated@@76)) (= ($generated@@154 $generated@@684 ($generated@@569 $generated@@685)) (forall (($generated@@686 Int) ) (!  (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@312 $generated@@684))) ($generated@@274 ($generated@@570 $generated@@684 $generated@@686) $generated@@685))
 :pattern ( ($generated@@570 $generated@@684 $generated@@686))
))))
 :pattern ( ($generated@@154 $generated@@684 ($generated@@569 $generated@@685)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 Int) ) (!  (=> (= (type $generated@@688) ($generated@@313 $generated@@161)) (=> (and (<= 0 $generated@@689) (< $generated@@689 ($generated@@312 $generated@@688))) (< ($generated@@611 ($generated@@394 $generated@@186 ($generated@@570 $generated@@688 $generated@@689))) ($generated@@687 $generated@@688))))
 :pattern ( ($generated@@611 ($generated@@394 $generated@@186 ($generated@@570 $generated@@688 $generated@@689))))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@344 $generated@@161 $generated@@161)) (= (type $generated@@691) $generated@@76)) (= (type $generated@@692) $generated@@76)) ($generated@@154 $generated@@690 ($generated@@466 $generated@@691 $generated@@692))) (and (and ($generated@@154 ($generated@@342 $generated@@690) ($generated@@283 $generated@@691)) ($generated@@154 ($generated@@407 $generated@@690) ($generated@@283 $generated@@692))) ($generated@@154 ($generated@@440 $generated@@690) ($generated@@283 ($generated@@185 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@154 $generated@@690 ($generated@@466 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) ($generated@@362 $generated@@161 $generated@@161)) (= (type $generated@@694) $generated@@76)) (= (type $generated@@695) $generated@@76)) ($generated@@154 $generated@@693 ($generated@@474 $generated@@694 $generated@@695))) (and (and ($generated@@154 ($generated@@360 $generated@@693) ($generated@@288 $generated@@694)) ($generated@@154 ($generated@@418 $generated@@693) ($generated@@288 $generated@@695))) ($generated@@154 ($generated@@448 $generated@@693) ($generated@@288 ($generated@@185 $generated@@694 $generated@@695)))))
 :pattern ( ($generated@@154 $generated@@693 ($generated@@474 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@2) ($generated@@154 $generated@@696 $generated@@46))
 :pattern ( ($generated@@154 $generated@@696 $generated@@46))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@3) ($generated@@154 $generated@@697 $generated@@47))
 :pattern ( ($generated@@154 $generated@@697 $generated@@47))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@4) ($generated@@154 $generated@@698 $generated@@44))
 :pattern ( ($generated@@154 $generated@@698 $generated@@44))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@526) ($generated@@154 $generated@@699 $generated@@45))
 :pattern ( ($generated@@154 $generated@@699 $generated@@45))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@161) ($generated@@154 $generated@@700 $generated@@48))
 :pattern ( ($generated@@154 $generated@@700 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () Int)
(declare-fun $generated@@710 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@701) ($generated@@207 $generated@@94 $generated@@4)) (= (type $generated@@702) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@704) $generated@@94)) (= (type $generated@@705) ($generated@@93 $generated@@161 $generated@@4))) (= (type $generated@@708) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@710) ($generated@@93 $generated@@94 $generated@@95))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@711  (=> (and (and (= $generated@@701 ($generated@@206 $generated@@153 $generated@@702 $generated@@60 false)) (= $generated@@703 ($generated@@293 0))) (and ($generated@@154 ($generated@@482 ($generated@@625 $generated@@161) ($generated@@157 $generated@@704)) ($generated@@283 $generated@@261)) (= $generated@@705 ($generated@@482 ($generated@@625 $generated@@161) ($generated@@157 $generated@@704))))) (=> (and (and (and (not ($generated@@0 ($generated@@100 ($generated@@98 $generated@@702 $generated@@704) $generated@@60))) (= ($generated ($generated@@100 ($generated@@98 $generated@@702 $generated@@704) $generated@@159)) $generated@@706)) (and (= ($generated ($generated@@100 ($generated@@98 $generated@@702 $generated@@704) $generated@@160)) $generated@@707) (= ($generated ($generated@@100 ($generated@@98 $generated@@702 $generated@@704) $generated@@158)) $generated@@703))) (and (and (= ($generated@@100 ($generated@@98 $generated@@702 $generated@@704) $generated@@156) $generated@@705) (= $generated@@708 ($generated@@99 $generated@@702 $generated@@704 ($generated@@101 ($generated@@98 $generated@@702 $generated@@704) $generated@@60 ($generated@@11 true))))) (and ($generated@@151 $generated@@708) ($generated@@384 $generated@@708)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@0 ($generated@@205 $generated@@701 $generated@@704 $generated@@159))) (=> ($generated@@0 ($generated@@205 $generated@@701 $generated@@704 $generated@@159)) (=> (and (= $generated@@709 ($generated ($generated@@100 ($generated@@98 $generated@@708 $generated@@704) $generated@@160))) (= $generated@@710 ($generated@@99 $generated@@708 $generated@@704 ($generated@@101 ($generated@@98 $generated@@708 $generated@@704) $generated@@159 ($generated@@8 $generated@@709))))) (=> (and (and ($generated@@151 $generated@@710) ($generated@@91 $generated@@704 $generated@@172 $generated@@710)) (and ($generated@@152 $generated@@710 $generated@@704) ($generated@@152 $generated@@710 $generated@@704))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@150 $generated@@710 $generated@@704)) (=> ($generated@@150 $generated@@710 $generated@@704) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> false (= ($generated ($generated@@100 ($generated@@98 $generated@@710 $generated@@704) $generated@@158)) ($generated@@293 0)))) (=> (=> false (= ($generated ($generated@@100 ($generated@@98 $generated@@710 $generated@@704) $generated@@158)) ($generated@@293 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> false ($generated@@150 $generated@@710 $generated@@704))) (=> (=> false ($generated@@150 $generated@@710 $generated@@704)) (=> (= (ControlFlow 0 2) (- 0 1)) (=> false (forall (($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@712) $generated@@94) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@710 $generated@@704) $generated@@156) ($generated@@157 $generated@@712)))) (and (not (= $generated@@712 $generated@@153)) (not ($generated@@0 ($generated@@100 ($generated@@98 $generated@@702 $generated@@712) $generated@@60)))))
 :pattern ( ($generated@@98 ($generated@@100 ($generated@@98 $generated@@710 $generated@@704) $generated@@156) ($generated@@157 $generated@@712)))
))))))))))))))))))
(let (($generated@@713  (=> (and ($generated@@151 $generated@@702) ($generated@@384 $generated@@702)) (=> (and (and (not (= $generated@@704 $generated@@153)) ($generated@@154 $generated@@704 $generated@@155)) (and (= 1 $generated@@149) (= (ControlFlow 0 7) 2))) $generated@@711))))
$generated@@713)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@210 (T@T T@U T@U) T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@217 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@253 (T@T) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@T T@T) T@U)
(declare-fun $generated@@286 (T@T T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U T@U) Bool)
(declare-fun $generated@@326 (T@U) Bool)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@596 (T@U T@U T@U) T@U)
(declare-fun $generated@@597 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@598 (T@T T@T) T@T)
(declare-fun $generated@@599 (T@T) T@T)
(declare-fun $generated@@600 (T@T) T@T)
(declare-fun $generated@@601 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@665 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@78 $generated@@85))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@61) $generated@@80)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@64) $generated@@81)) (= (type $generated@@65) $generated@@77)) (= ($generated@@1 $generated@@82) 11)) (= (type $generated@@66) $generated@@82)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@83) 12)) (= (type $generated@@69) $generated@@83)) (= (type $generated@@70) $generated@@83)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)) (= (type $generated@@75) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (= ($generated@@86 $generated@@60) 0))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@77)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@44) $generated@@49))
(assert (= ($generated@@87 $generated@@45) $generated@@50))
(assert (= ($generated@@87 $generated@@46) $generated@@51))
(assert (= ($generated@@87 $generated@@47) $generated@@52))
(assert (= ($generated@@87 $generated@@48) $generated@@53))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@80)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 13)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@79 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 15)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@79 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@76)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (= (type $generated@@153) $generated@@94) (= (type $generated@@155) $generated@@76)) (= ($generated@@1 $generated@@161) 16)) (= (type $generated@@156) ($generated@@78 ($generated@@93 $generated@@161 $generated@@4)))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@157 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@157 $generated@@162))
))) (= (type $generated@@158) ($generated@@78 $generated@@2))) (= (type $generated@@159) ($generated@@78 $generated@@2))) (= (type $generated@@160) ($generated@@78 $generated@@2))))
(assert  (=> (<= 0 $generated@@149) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@164) $generated@@94)) (or ($generated@@152 $generated@@163 $generated@@164) (and (not (= 0 $generated@@149)) (and ($generated@@151 $generated@@163) (and (not (= $generated@@164 $generated@@153)) (and ($generated@@154 $generated@@164 $generated@@155) ($generated@@91 $generated@@164 $generated@@155 $generated@@163))))))) (= ($generated@@150 $generated@@163 $generated@@164)  (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@156) ($generated@@157 $generated@@164))) (= ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@158)) (- ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@159)) ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@160)))))))
 :pattern ( ($generated@@150 $generated@@163 $generated@@164) ($generated@@151 $generated@@163))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@167) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@165 $generated@@166 $generated@@167)) (forall (($generated@@168 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@94) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@166 $generated@@168) $generated@@60))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@167 $generated@@168) $generated@@60)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@167 $generated@@168) $generated@@60))
)))
 :pattern ( ($generated@@165 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@169) $generated@@76))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@94) (= (type $generated@@171) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@170 $generated@@169 $generated@@171)  (or (= $generated@@170 $generated@@153) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@171 $generated@@170) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@170 $generated@@169 $generated@@171))
)))
(assert (= (type $generated@@172) $generated@@76))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@94) (= (type $generated@@174) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@173 $generated@@172 $generated@@174)  (or (= $generated@@173 $generated@@153) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@174 $generated@@173) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@173 $generated@@172 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@76)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@178) $generated@@94)) (and ($generated@@151 $generated@@177) (and (not (= $generated@@178 $generated@@153)) (= ($generated@@175 $generated@@178) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@177 $generated@@178) $generated@@159) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@177 $generated@@178) $generated@@159))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@180) $generated@@94)) (and ($generated@@151 $generated@@179) (and (not (= $generated@@180 $generated@@153)) (= ($generated@@175 $generated@@180) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@179 $generated@@180) $generated@@160) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@179 $generated@@180) $generated@@160))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@182) $generated@@94)) (and ($generated@@151 $generated@@181) (and (not (= $generated@@182 $generated@@153)) (= ($generated@@175 $generated@@182) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@181 $generated@@182) $generated@@158) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@181 $generated@@182) $generated@@158))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@2) ($generated@@154 $generated@@183 ($generated@@92 0)))
 :pattern ( ($generated@@154 $generated@@183 ($generated@@92 0)))
)))
(assert  (and (= ($generated@@1 $generated@@186) 17) (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@187 $generated@@188)) $generated@@76)
 :pattern ( ($generated@@185 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@76) (= (type $generated@@190) $generated@@76)) (= (type $generated@@191) $generated@@186)) ($generated@@154 $generated@@191 ($generated@@185 $generated@@189 $generated@@190))) ($generated@@184 $generated@@191))
 :pattern ( ($generated@@184 $generated@@191) ($generated@@154 $generated@@191 ($generated@@185 $generated@@189 $generated@@190)))
)))
(assert  (and (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@161)
 :pattern ( ($generated@@193 $generated@@195))
)) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@161)
 :pattern ( ($generated@@194 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@186) (= (type $generated@@198) $generated@@186)) true) (= ($generated@@192 $generated@@197 $generated@@198)  (and (= ($generated@@193 $generated@@197) ($generated@@193 $generated@@198)) (= ($generated@@194 $generated@@197) ($generated@@194 $generated@@198)))))
 :pattern ( ($generated@@192 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@201 T@U) ) (! (= (type ($generated@@199 $generated@@201)) $generated@@76)
 :pattern ( ($generated@@199 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and (= (type $generated@@202) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@203) $generated@@76)) ($generated@@154 $generated@@202 ($generated@@199 $generated@@203))) ($generated@@200 $generated@@202))
 :pattern ( ($generated@@154 $generated@@202 ($generated@@199 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@94) (= ($generated@@154 $generated@@204 $generated@@172)  (or (= $generated@@204 $generated@@153) (= ($generated@@175 $generated@@204) $generated@@172))))
 :pattern ( ($generated@@154 $generated@@204 $generated@@172))
)))
(assert (= (type $generated@@205) $generated@@76))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@94) (= (type $generated@@207) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@206 $generated@@205 $generated@@207) ($generated@@91 $generated@@206 $generated@@169 $generated@@207)))
 :pattern ( ($generated@@91 $generated@@206 $generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@94) (= (type $generated@@209) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@208 $generated@@155 $generated@@209) ($generated@@91 $generated@@208 $generated@@172 $generated@@209)))
 :pattern ( ($generated@@91 $generated@@208 $generated@@155 $generated@@209))
)))
(assert (= ($generated@@86 $generated@@156) 0))
(assert (forall (($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (= (type ($generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@78 $generated@@211))
 :pattern ( ($generated@@210 $generated@@211 $generated@@212 $generated@@213))
)))
(assert (= ($generated@@210 ($generated@@93 $generated@@161 $generated@@4) $generated@@66 $generated@@74) $generated@@156))
(assert ($generated@@214 $generated@@156))
(assert (= ($generated@@86 $generated@@158) 0))
(assert (= ($generated@@210 $generated@@2 $generated@@66 $generated@@75) $generated@@158))
(assert ($generated@@214 $generated@@158))
(assert  (=> (<= 0 $generated@@149) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@216) $generated@@94)) (or ($generated@@152 $generated@@215 $generated@@216) (and (not (= 0 $generated@@149)) (and ($generated@@151 $generated@@215) (and (not (= $generated@@216 $generated@@153)) (and ($generated@@154 $generated@@216 $generated@@155) ($generated@@91 $generated@@216 $generated@@155 $generated@@215))))))) ($generated@@150 $generated@@215 $generated@@216)) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@215 $generated@@216) $generated@@156) ($generated@@157 $generated@@216))))
 :pattern ( ($generated@@150 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@217 $generated@@219 $generated@@220)) $generated@@186)
 :pattern ( ($generated@@217 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@76) (= (type $generated@@222) $generated@@76)) (= (type $generated@@223) $generated@@161)) (= (type $generated@@224) $generated@@161)) (= ($generated@@154 ($generated@@217 $generated@@223 $generated@@224) ($generated@@185 $generated@@221 $generated@@222))  (and ($generated@@218 $generated@@223 $generated@@221) ($generated@@218 $generated@@224 $generated@@222))))
 :pattern ( ($generated@@154 ($generated@@217 $generated@@223 $generated@@224) ($generated@@185 $generated@@221 $generated@@222)))
)))
(assert (= ($generated@@86 $generated@@159) 0))
(assert (= ($generated@@210 $generated@@2 $generated@@66 $generated@@72) $generated@@159))
(assert  (not ($generated@@214 $generated@@159)))
(assert (= ($generated@@86 $generated@@160) 0))
(assert (= ($generated@@210 $generated@@2 $generated@@66 $generated@@73) $generated@@160))
(assert  (not ($generated@@214 $generated@@160)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@186) (= (type $generated@@226) $generated@@186)) (= ($generated@@192 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@192 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@76)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@230) $generated@@76)) (= ($generated@@154 $generated@@229 ($generated@@227 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@161) ($generated@@0 ($generated@@98 $generated@@229 $generated@@231))) ($generated@@218 $generated@@231 $generated@@230))
 :pattern ( ($generated@@98 $generated@@229 $generated@@231))
))))
 :pattern ( ($generated@@154 $generated@@229 ($generated@@227 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@76)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@235) $generated@@76)) (= ($generated@@154 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@161) ($generated@@0 ($generated@@98 $generated@@234 $generated@@236))) ($generated@@218 $generated@@236 $generated@@235))
 :pattern ( ($generated@@98 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@154 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@242) $generated@@76) (= (type $generated@@243) $generated@@76)) (= (type $generated@@244) $generated@@161)) (= (type $generated@@245) $generated@@161)) (= (type $generated@@246) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@151 $generated@@246)) (= ($generated@@91 ($generated@@217 $generated@@244 $generated@@245) ($generated@@185 $generated@@242 $generated@@243) $generated@@246)  (and ($generated@@241 $generated@@244 $generated@@242 $generated@@246) ($generated@@241 $generated@@245 $generated@@243 $generated@@246))))
 :pattern ( ($generated@@91 ($generated@@217 $generated@@244 $generated@@245) ($generated@@185 $generated@@242 $generated@@243) $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@81)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@186) (= ($generated@@184 $generated@@249) (= ($generated@@247 $generated@@249) $generated@@64)))
 :pattern ( ($generated@@184 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@186) ($generated@@184 $generated@@250)) (exists (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (and (and (= (type $generated@@251) $generated@@161) (= (type $generated@@252) $generated@@161)) (= $generated@@250 ($generated@@217 $generated@@251 $generated@@252)))
 :no-pattern (type $generated@@251)
 :no-pattern (type $generated@@252)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
)))
 :pattern ( ($generated@@184 $generated@@250))
)))
(assert  (and (and (forall (($generated@@257 T@T) ) (= ($generated@@1 ($generated@@255 $generated@@257)) 18)) (forall (($generated@@258 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@258)) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
))) (forall (($generated@@259 T@T) ) (! (= (type ($generated@@253 $generated@@259)) ($generated@@255 $generated@@259))
 :pattern ( ($generated@@253 $generated@@259))
))))
(assert (forall (($generated@@260 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@260)) 0)
 :pattern ( ($generated@@253 $generated@@260))
)))
(assert ($generated@@214 $generated@@60))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@76) (= (type $generated@@263) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@241 ($generated@@157 $generated@@261) $generated@@262 $generated@@263) ($generated@@91 $generated@@261 $generated@@262 $generated@@263)))
 :pattern ( ($generated@@241 ($generated@@157 $generated@@261) $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@265) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@266) $generated@@161)) (= (type $generated@@267) $generated@@76)) ($generated@@165 $generated@@264 $generated@@265)) ($generated@@241 $generated@@266 $generated@@267 $generated@@264)) ($generated@@241 $generated@@266 $generated@@267 $generated@@265))
 :pattern ( ($generated@@165 $generated@@264 $generated@@265) ($generated@@241 $generated@@266 $generated@@267 $generated@@264))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@268) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@269) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@271) $generated@@76)) ($generated@@165 $generated@@268 $generated@@269)) ($generated@@91 $generated@@270 $generated@@271 $generated@@268)) ($generated@@91 $generated@@270 $generated@@271 $generated@@269))
 :pattern ( ($generated@@165 $generated@@268 $generated@@269) ($generated@@91 $generated@@270 $generated@@271 $generated@@268))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@273) $generated@@94)) (=> (and (and ($generated@@151 $generated@@272) (and (not (= $generated@@273 $generated@@153)) (= ($generated@@175 $generated@@273) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@272 $generated@@273) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@272 $generated@@273) $generated@@159) $generated@@46 $generated@@272)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@272 $generated@@273) $generated@@159))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@275) $generated@@94)) (=> (and (and ($generated@@151 $generated@@274) (and (not (= $generated@@275 $generated@@153)) (= ($generated@@175 $generated@@275) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@274 $generated@@275) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@274 $generated@@275) $generated@@160) $generated@@46 $generated@@274)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@274 $generated@@275) $generated@@160))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@277) $generated@@94)) (=> (and (and ($generated@@151 $generated@@276) (and (not (= $generated@@277 $generated@@153)) (= ($generated@@175 $generated@@277) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@276 $generated@@277) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@276 $generated@@277) $generated@@158) $generated@@46 $generated@@276)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@276 $generated@@277) $generated@@158))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@93 $generated@@280 $generated@@2))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@96 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@93 $generated@@282 $generated@@2)) (and (= (= ($generated@@278 $generated@@281) 0) (= $generated@@281 ($generated@@279 $generated@@282))) (=> (not (= ($generated@@278 $generated@@281) 0)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@282) (< 0 ($generated ($generated@@98 $generated@@281 $generated@@283))))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
))))))
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (and (and (and (and (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@289 $generated@@290)) 19)) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@286 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@286 $generated@@293 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@286 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@287 (type $generated@@295))))
(= (type ($generated@@284 $generated@@295)) ($generated@@93 $generated@@296 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@295))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= (type ($generated@@285 $generated@@297 $generated@@298)) ($generated@@286 $generated@@297 $generated@@298))
 :pattern ( ($generated@@285 $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@T) ) (! (let (($generated@@301 (type $generated@@299)))
 (not ($generated@@0 ($generated@@98 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299))))
 :pattern ( (let (($generated@@301 (type $generated@@299)))
($generated@@98 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299)))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 20)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@93 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@98 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@98 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@322) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@320 $generated@@321 $generated@@322)) (and ($generated@@165 $generated@@321 $generated@@322) (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (and (and (= (type $generated@@323) $generated@@94) (= (type $generated@@324) ($generated@@78 $generated@@325))) (not ($generated@@214 $generated@@324))) (= ($generated@@100 ($generated@@98 $generated@@321 $generated@@323) $generated@@324) ($generated@@100 ($generated@@98 $generated@@322 $generated@@323) $generated@@324))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@322 $generated@@323) $generated@@324))
))))
 :pattern ( ($generated@@320 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@327) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@328) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@329) $generated@@94)) (=> (and (and (and ($generated@@151 $generated@@327) ($generated@@151 $generated@@328)) (and (not (= $generated@@329 $generated@@153)) ($generated@@154 $generated@@329 $generated@@155))) (and ($generated@@326 $generated@@327) ($generated@@165 $generated@@327 $generated@@328))) (=> (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@79 (type $generated@@331))))
 (=> (and (and (= (type $generated@@330) $generated@@94) (= (type $generated@@331) ($generated@@78 $generated@@332))) (and (not (= $generated@@330 $generated@@153)) (or (= $generated@@330 $generated@@329) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@327 $generated@@329) $generated@@156) ($generated@@157 $generated@@330)))))) (= ($generated@@100 ($generated@@98 $generated@@327 $generated@@330) $generated@@331) ($generated@@100 ($generated@@98 $generated@@328 $generated@@330) $generated@@331))))
 :no-pattern (type $generated@@330)
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
)) (= ($generated@@150 $generated@@327 $generated@@329) ($generated@@150 $generated@@328 $generated@@329)))))
 :pattern ( ($generated@@326 $generated@@327) ($generated@@165 $generated@@327 $generated@@328) ($generated@@150 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@96 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@93 $generated@@334 $generated@@2)) (= ($generated@@200 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@98 $generated@@333 $generated@@335))) (<= ($generated ($generated@@98 $generated@@333 $generated@@335)) ($generated@@278 $generated@@333))))
 :pattern ( ($generated@@98 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@200 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@161) ($generated@@218 $generated@@339 $generated@@169)) (and (= ($generated@@157 ($generated@@336 $generated@@94 $generated@@339)) $generated@@339) ($generated@@154 ($generated@@336 $generated@@94 $generated@@339) $generated@@169)))
 :pattern ( ($generated@@218 $generated@@339 $generated@@169))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@161) ($generated@@218 $generated@@340 $generated@@205)) (and (= ($generated@@157 ($generated@@336 $generated@@94 $generated@@340)) $generated@@340) ($generated@@154 ($generated@@336 $generated@@94 $generated@@340) $generated@@205)))
 :pattern ( ($generated@@218 $generated@@340 $generated@@205))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@161) ($generated@@218 $generated@@341 $generated@@172)) (and (= ($generated@@157 ($generated@@336 $generated@@94 $generated@@341)) $generated@@341) ($generated@@154 ($generated@@336 $generated@@94 $generated@@341) $generated@@172)))
 :pattern ( ($generated@@218 $generated@@341 $generated@@172))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@161) ($generated@@218 $generated@@342 $generated@@155)) (and (= ($generated@@157 ($generated@@336 $generated@@94 $generated@@342)) $generated@@342) ($generated@@154 ($generated@@336 $generated@@94 $generated@@342) $generated@@155)))
 :pattern ( ($generated@@218 $generated@@342 $generated@@155))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@94) (= ($generated@@154 $generated@@343 $generated@@205)  (and ($generated@@154 $generated@@343 $generated@@169) (not (= $generated@@343 $generated@@153)))))
 :pattern ( ($generated@@154 $generated@@343 $generated@@205))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@94) (= ($generated@@154 $generated@@344 $generated@@155)  (and ($generated@@154 $generated@@344 $generated@@172) (not (= $generated@@344 $generated@@153)))))
 :pattern ( ($generated@@154 $generated@@344 $generated@@155))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@288 (type $generated@@345))))
(let (($generated@@347 ($generated@@287 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@286 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@285 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@98 ($generated@@284 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@284 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@288 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@93 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@288 (type $generated@@352))))
(let (($generated@@354 ($generated@@287 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@286 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@285 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@98 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@306 (type $generated@@356))))
(let (($generated@@358 ($generated@@305 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@304 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@303 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@98 ($generated@@302 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@302 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@306 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@93 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@306 (type $generated@@363))))
(let (($generated@@365 ($generated@@305 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@304 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@303 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@98 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@368) $generated@@76)) (= ($generated@@154 $generated@@367 ($generated@@199 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@367 $generated@@369)))) ($generated@@218 $generated@@369 $generated@@368))
 :pattern ( ($generated@@98 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@154 $generated@@367 ($generated@@199 $generated@@368)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@371) $generated@@76)) (= (type $generated@@372) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@370 ($generated@@227 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@161) ($generated@@0 ($generated@@98 $generated@@370 $generated@@373))) ($generated@@241 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@98 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@91 $generated@@370 ($generated@@227 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@375) $generated@@76)) (= (type $generated@@376) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@374 ($generated@@232 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@161) ($generated@@0 ($generated@@98 $generated@@374 $generated@@377))) ($generated@@241 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@98 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@91 $generated@@374 ($generated@@232 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@98 ($generated@@279 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@98 ($generated@@279 $generated@@379) $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@381) $generated@@94)) (=> (and (and ($generated@@151 $generated@@380) (and (not (= $generated@@381 $generated@@153)) (= ($generated@@175 $generated@@381) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@380 $generated@@381) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@380 $generated@@381) $generated@@156) ($generated@@227 $generated@@205) $generated@@380)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@380 $generated@@381) $generated@@156))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@288 (type $generated@@385))))
(let (($generated@@387 ($generated@@287 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@93 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@286 $generated@@161 $generated@@161)) (= (type $generated@@389) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@98 ($generated@@284 $generated@@388) ($generated@@193 ($generated@@336 $generated@@186 $generated@@389)))) (= ($generated@@98 ($generated@@383 $generated@@388) ($generated@@193 ($generated@@336 $generated@@186 $generated@@389))) ($generated@@194 ($generated@@336 $generated@@186 $generated@@389))))))
 :pattern ( ($generated@@98 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@306 (type $generated@@393))))
(let (($generated@@395 ($generated@@305 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@93 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@304 $generated@@161 $generated@@161)) (= (type $generated@@397) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@98 ($generated@@302 $generated@@396) ($generated@@193 ($generated@@336 $generated@@186 $generated@@397)))) (= ($generated@@98 ($generated@@391 $generated@@396) ($generated@@193 ($generated@@336 $generated@@186 $generated@@397))) ($generated@@194 ($generated@@336 $generated@@186 $generated@@397))))))
 :pattern ( ($generated@@98 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@287 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@286 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@98 ($generated@@349 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@98 ($generated@@284 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@98 ($generated@@383 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@98 ($generated@@284 $generated@@398) $generated@@402))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@98 ($generated@@349 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@305 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@304 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@98 ($generated@@360 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@98 ($generated@@302 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@98 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@98 ($generated@@302 $generated@@403) $generated@@407))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@98 ($generated@@360 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@76)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@286 $generated@@161 $generated@@161)) (= (type $generated@@412) $generated@@76)) (= (type $generated@@413) $generated@@76)) (= (type $generated@@414) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@284 $generated@@411) $generated@@415))) (and ($generated@@241 ($generated@@98 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@241 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@98 ($generated@@284 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@91 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@76)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@304 $generated@@161 $generated@@161)) (= (type $generated@@420) $generated@@76)) (= (type $generated@@421) $generated@@76)) (= (type $generated@@422) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@302 $generated@@419) $generated@@423))) (and ($generated@@241 ($generated@@98 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@241 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@98 ($generated@@302 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@91 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@424) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@425) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@426) ($generated@@93 $generated@@94 $generated@@95))) (not (= $generated@@424 $generated@@426))) (and ($generated@@165 $generated@@424 $generated@@425) ($generated@@165 $generated@@425 $generated@@426))) ($generated@@165 $generated@@424 $generated@@426))
 :pattern ( ($generated@@165 $generated@@424 $generated@@425) ($generated@@165 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@T) ) (! (= (type ($generated@@427 $generated@@428)) ($generated@@93 $generated@@428 $generated@@4))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@306 (type $generated@@429))))
(let (($generated@@431 ($generated@@305 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@304 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@303 $generated@@431 $generated@@430)) (= ($generated@@302 $generated@@429) ($generated@@427 $generated@@431))))))
 :pattern ( ($generated@@302 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@306 (type $generated@@432))))
(let (($generated@@434 ($generated@@305 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@304 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@303 $generated@@434 $generated@@433)) (= ($generated@@360 $generated@@432) ($generated@@427 $generated@@433))))))
 :pattern ( ($generated@@360 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@306 (type $generated@@435))))
(let (($generated@@437 ($generated@@305 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@304 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@303 $generated@@437 $generated@@436)) (= ($generated@@390 $generated@@435) ($generated@@427 $generated@@161))))))
 :pattern ( ($generated@@390 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@288 (type $generated@@438))))
(let (($generated@@440 ($generated@@287 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@286 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@285 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@161) (= (type $generated@@442) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@382 $generated@@438) ($generated@@157 ($generated@@217 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@382 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@306 (type $generated@@443))))
(let (($generated@@445 ($generated@@305 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@304 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@303 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@161) (= (type $generated@@447) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@390 $generated@@443) ($generated@@157 ($generated@@217 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@390 $generated@@443))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@82)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@T) ) (!  (=> (and (= (type $generated@@450) $generated@@82) (= (type $generated@@451) $generated@@80)) (and (= ($generated@@448 ($generated@@210 $generated@@452 $generated@@450 $generated@@451)) $generated@@450) (= ($generated@@89 ($generated@@210 $generated@@452 $generated@@450 $generated@@451)) $generated@@451)))
 :pattern ( ($generated@@210 $generated@@452 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@161) ($generated@@218 $generated@@453 $generated@@46)) (and (= ($generated@@157 ($generated@@336 $generated@@2 $generated@@453)) $generated@@453) ($generated@@154 ($generated@@336 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@218 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@161) ($generated@@218 $generated@@454 $generated@@47)) (and (= ($generated@@157 ($generated@@336 $generated@@3 $generated@@454)) $generated@@454) ($generated@@154 ($generated@@336 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@218 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@161) ($generated@@218 $generated@@455 $generated@@44)) (and (= ($generated@@157 ($generated@@336 $generated@@4 $generated@@455)) $generated@@455) ($generated@@154 ($generated@@336 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@218 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 21))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@161) ($generated@@218 $generated@@457 $generated@@45)) (and (= ($generated@@157 ($generated@@336 $generated@@456 $generated@@457)) $generated@@457) ($generated@@154 ($generated@@336 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@218 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@76) (= ($generated@@218 ($generated@@157 $generated@@458) $generated@@459) ($generated@@154 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@218 ($generated@@157 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@96 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@93 $generated@@461 $generated@@2)) (<= 0 ($generated@@278 $generated@@460))))
 :pattern ( ($generated@@278 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@256 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@255 $generated@@463)) (<= 0 ($generated@@254 $generated@@462))))
 :pattern ( ($generated@@254 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@76)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@76) (= (type $generated@@467) $generated@@76)) (= ($generated@@464 ($generated@@408 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@408 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@76)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@76) (= (type $generated@@471) $generated@@76)) (= ($generated@@468 ($generated@@408 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@408 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@76) (= (type $generated@@473) $generated@@76)) (= ($generated@@87 ($generated@@408 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@76)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@76) (= (type $generated@@477) $generated@@76)) (= ($generated@@474 ($generated@@416 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@416 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@76)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@76) (= (type $generated@@481) $generated@@76)) (= ($generated@@478 ($generated@@416 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@416 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@76) (= (type $generated@@483) $generated@@76)) (= ($generated@@87 ($generated@@416 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@161) (= (type $generated@@485) $generated@@161)) (= ($generated@@247 ($generated@@217 $generated@@484 $generated@@485)) $generated@@64))
 :pattern ( ($generated@@217 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@76)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@76) (= (type $generated@@489) $generated@@76)) (= ($generated@@486 ($generated@@185 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@185 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@76)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@76) (= (type $generated@@493) $generated@@76)) (= ($generated@@490 ($generated@@185 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@185 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@161) (= (type $generated@@495) $generated@@161)) (= ($generated@@193 ($generated@@217 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@217 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@161) (= (type $generated@@497) $generated@@161)) (= ($generated@@194 ($generated@@217 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@217 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@94) ($generated@@154 $generated@@498 $generated@@169))
 :pattern ( ($generated@@154 $generated@@498 $generated@@169))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@76)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@256 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@255 $generated@@161)) (= (type $generated@@506) $generated@@76)) (= (type $generated@@507) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@254 $generated@@505))) ($generated@@241 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@91 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@92 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@92 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@76)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@76) (= ($generated@@511 ($generated@@227 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@227 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@76) (= ($generated@@87 ($generated@@227 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@227 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@76)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@76) (= ($generated@@515 ($generated@@232 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@232 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@76) (= ($generated@@87 ($generated@@232 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@232 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@76)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@76) (= ($generated@@519 ($generated@@199 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@199 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@76) (= ($generated@@87 ($generated@@199 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@199 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@76)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@76) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@76) (= ($generated@@87 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@336 $generated@@528 ($generated@@157 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@157 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@286 $generated@@161 $generated@@161)) (= (type $generated@@530) $generated@@76)) (= (type $generated@@531) $generated@@76)) (= ($generated@@154 $generated@@529 ($generated@@408 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@284 $generated@@529) $generated@@532))) (and ($generated@@218 ($generated@@98 ($generated@@383 $generated@@529) $generated@@532) $generated@@531) ($generated@@218 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@529) $generated@@532))
 :pattern ( ($generated@@98 ($generated@@284 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@154 $generated@@529 ($generated@@408 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@304 $generated@@161 $generated@@161)) (= (type $generated@@534) $generated@@76)) (= (type $generated@@535) $generated@@76)) (= ($generated@@154 $generated@@533 ($generated@@416 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@302 $generated@@533) $generated@@536))) (and ($generated@@218 ($generated@@98 ($generated@@391 $generated@@533) $generated@@536) $generated@@535) ($generated@@218 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@533) $generated@@536))
 :pattern ( ($generated@@98 ($generated@@302 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@154 $generated@@533 ($generated@@416 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@161) (= (type $generated@@540) $generated@@161)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@217 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@217 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@161) (= (type $generated@@542) $generated@@161)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@217 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@217 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@161) (= (type $generated@@544) $generated@@76)) (= (type $generated@@545) $generated@@76)) ($generated@@218 $generated@@543 ($generated@@408 $generated@@544 $generated@@545))) (and (= ($generated@@157 ($generated@@336 ($generated@@286 $generated@@161 $generated@@161) $generated@@543)) $generated@@543) ($generated@@154 ($generated@@336 ($generated@@286 $generated@@161 $generated@@161) $generated@@543) ($generated@@408 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@218 $generated@@543 ($generated@@408 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@161) (= (type $generated@@547) $generated@@76)) (= (type $generated@@548) $generated@@76)) ($generated@@218 $generated@@546 ($generated@@416 $generated@@547 $generated@@548))) (and (= ($generated@@157 ($generated@@336 ($generated@@304 $generated@@161 $generated@@161) $generated@@546)) $generated@@546) ($generated@@154 ($generated@@336 ($generated@@304 $generated@@161 $generated@@161) $generated@@546) ($generated@@416 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@218 $generated@@546 ($generated@@416 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@76) (= (type $generated@@550) $generated@@76)) (= (type $generated@@551) $generated@@161)) ($generated@@218 $generated@@551 ($generated@@185 $generated@@549 $generated@@550))) (and (= ($generated@@157 ($generated@@336 $generated@@186 $generated@@551)) $generated@@551) ($generated@@154 ($generated@@336 $generated@@186 $generated@@551) ($generated@@185 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@218 $generated@@551 ($generated@@185 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@98 ($generated@@427 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@98 ($generated@@427 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@83)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@76) (= (type $generated@@557) $generated@@76)) (and (= ($generated@@87 ($generated@@185 $generated@@556 $generated@@557)) $generated@@65) (= ($generated@@554 ($generated@@185 $generated@@556 $generated@@557)) $generated@@70)))
 :pattern ( ($generated@@185 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@186) (= ($generated@@537 ($generated@@157 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@157 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@161) ($generated@@218 $generated@@559 ($generated@@92 0))) (and (= ($generated@@157 ($generated@@336 $generated@@2 $generated@@559)) $generated@@559) ($generated@@154 ($generated@@336 ($generated@@93 $generated@@161 $generated@@4) $generated@@559) ($generated@@92 0))))
 :pattern ( ($generated@@218 $generated@@559 ($generated@@92 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@161) (= (type $generated@@561) $generated@@76)) ($generated@@218 $generated@@560 ($generated@@227 $generated@@561))) (and (= ($generated@@157 ($generated@@336 ($generated@@93 $generated@@161 $generated@@4) $generated@@560)) $generated@@560) ($generated@@154 ($generated@@336 ($generated@@93 $generated@@161 $generated@@4) $generated@@560) ($generated@@227 $generated@@561))))
 :pattern ( ($generated@@218 $generated@@560 ($generated@@227 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@161) (= (type $generated@@563) $generated@@76)) ($generated@@218 $generated@@562 ($generated@@232 $generated@@563))) (and (= ($generated@@157 ($generated@@336 ($generated@@93 $generated@@161 $generated@@4) $generated@@562)) $generated@@562) ($generated@@154 ($generated@@336 ($generated@@93 $generated@@161 $generated@@4) $generated@@562) ($generated@@232 $generated@@563))))
 :pattern ( ($generated@@218 $generated@@562 ($generated@@232 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@161) (= (type $generated@@565) $generated@@76)) ($generated@@218 $generated@@564 ($generated@@199 $generated@@565))) (and (= ($generated@@157 ($generated@@336 ($generated@@93 $generated@@161 $generated@@2) $generated@@564)) $generated@@564) ($generated@@154 ($generated@@336 ($generated@@93 $generated@@161 $generated@@2) $generated@@564) ($generated@@199 $generated@@565))))
 :pattern ( ($generated@@218 $generated@@564 ($generated@@199 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@161) (= (type $generated@@567) $generated@@76)) ($generated@@218 $generated@@566 ($generated@@499 $generated@@567))) (and (= ($generated@@157 ($generated@@336 ($generated@@255 $generated@@161) $generated@@566)) $generated@@566) ($generated@@154 ($generated@@336 ($generated@@255 $generated@@161) $generated@@566) ($generated@@499 $generated@@567))))
 :pattern ( ($generated@@218 $generated@@566 ($generated@@499 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
 (=> (and (and (and (= (type $generated@@568) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@569) $generated@@94)) (= (type $generated@@570) ($generated@@78 $generated@@572))) ($generated@@151 ($generated@@99 $generated@@568 $generated@@569 ($generated@@101 ($generated@@98 $generated@@568 $generated@@569) $generated@@570 $generated@@571)))) ($generated@@165 $generated@@568 ($generated@@99 $generated@@568 $generated@@569 ($generated@@101 ($generated@@98 $generated@@568 $generated@@569) $generated@@570 $generated@@571)))))
 :pattern ( ($generated@@99 $generated@@568 $generated@@569 ($generated@@101 ($generated@@98 $generated@@568 $generated@@569) $generated@@570 $generated@@571)))
)))
(assert (= ($generated@@87 $generated@@169) $generated@@62))
(assert (= ($generated@@554 $generated@@169) $generated@@69))
(assert (= ($generated@@87 $generated@@205) $generated@@63))
(assert (= ($generated@@554 $generated@@205) $generated@@69))
(assert (= ($generated@@87 $generated@@172) $generated@@67))
(assert (= ($generated@@554 $generated@@172) $generated@@71))
(assert (= ($generated@@87 $generated@@155) $generated@@68))
(assert (= ($generated@@554 $generated@@155) $generated@@71))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@574) $generated@@76)) (= (type $generated@@575) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@573 ($generated@@199 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@573 $generated@@576)))) ($generated@@241 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@98 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@91 $generated@@573 ($generated@@199 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@186) (= (type $generated@@578) $generated@@76)) (= (type $generated@@579) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@151 $generated@@579) (and ($generated@@184 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@76) ($generated@@91 $generated@@577 ($generated@@185 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@91 $generated@@577 ($generated@@185 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@241 ($generated@@193 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@241 ($generated@@193 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@186) (= (type $generated@@582) $generated@@76)) (= (type $generated@@583) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@151 $generated@@583) (and ($generated@@184 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@76) ($generated@@91 $generated@@581 ($generated@@185 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@91 $generated@@581 ($generated@@185 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@241 ($generated@@194 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@241 ($generated@@194 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@586) $generated@@94)) (and ($generated@@151 $generated@@585) (and (not (= $generated@@586 $generated@@153)) (= ($generated@@175 $generated@@586) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@585 $generated@@586) $generated@@156) ($generated@@227 $generated@@205)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@585 $generated@@586) $generated@@156))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@161) (= (type $generated@@588) $generated@@161)) (= ($generated@@217 ($generated@@237 $generated@@587) ($generated@@237 $generated@@588)) ($generated@@237 ($generated@@217 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@217 ($generated@@237 $generated@@587) ($generated@@237 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@157 ($generated@@237 $generated@@589)) ($generated@@237 ($generated@@157 $generated@@589)))
 :pattern ( ($generated@@157 ($generated@@237 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@256 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@255 $generated@@591)) (= ($generated@@254 $generated@@590) 0)) (= $generated@@590 ($generated@@253 $generated@@591))))
 :pattern ( ($generated@@254 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@93 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@278 ($generated@@99 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@278 $generated@@592) ($generated ($generated@@98 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@278 ($generated@@99 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@602 T@T) ($generated@@603 T@T) ) (= ($generated@@1 ($generated@@598 $generated@@602 $generated@@603)) 22)) (forall (($generated@@604 T@T) ($generated@@605 T@T) ) (! (= ($generated@@599 ($generated@@598 $generated@@604 $generated@@605)) $generated@@604)
 :pattern ( ($generated@@598 $generated@@604 $generated@@605))
))) (forall (($generated@@606 T@T) ($generated@@607 T@T) ) (! (= ($generated@@600 ($generated@@598 $generated@@606 $generated@@607)) $generated@@607)
 :pattern ( ($generated@@598 $generated@@606 $generated@@607))
))) (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (! (let (($generated@@611 ($generated@@600 (type $generated@@608))))
(= (type ($generated@@596 $generated@@608 $generated@@609 $generated@@610)) $generated@@611))
 :pattern ( ($generated@@596 $generated@@608 $generated@@609 $generated@@610))
))) (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@615)))
(let (($generated@@617 (type $generated@@613)))
(= (type ($generated@@601 $generated@@612 $generated@@613 $generated@@614 $generated@@615)) ($generated@@598 $generated@@617 $generated@@616))))
 :pattern ( ($generated@@601 $generated@@612 $generated@@613 $generated@@614 $generated@@615))
))) (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@600 (type $generated@@618))))
 (=> (= (type $generated@@621) $generated@@622) (= ($generated@@596 ($generated@@601 $generated@@618 $generated@@619 $generated@@620 $generated@@621) $generated@@619 $generated@@620) $generated@@621)))
 :weight 0
))) (and (and (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (or (= $generated@@625 $generated@@627) (= ($generated@@596 ($generated@@601 $generated@@624 $generated@@625 $generated@@626 $generated@@623) $generated@@627 $generated@@628) ($generated@@596 $generated@@624 $generated@@627 $generated@@628)))
 :weight 0
)) (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (or (= $generated@@632 $generated@@634) (= ($generated@@596 ($generated@@601 $generated@@630 $generated@@631 $generated@@632 $generated@@629) $generated@@633 $generated@@634) ($generated@@596 $generated@@630 $generated@@633 $generated@@634)))
 :weight 0
))) (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (or true (= ($generated@@596 ($generated@@601 $generated@@636 $generated@@637 $generated@@638 $generated@@635) $generated@@639 $generated@@640) ($generated@@596 $generated@@636 $generated@@639 $generated@@640)))
 :weight 0
)))) (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (! (= (type ($generated@@597 $generated@@641 $generated@@642 $generated@@643 $generated@@644)) ($generated@@598 $generated@@94 $generated@@4))
 :pattern ( ($generated@@597 $generated@@641 $generated@@642 $generated@@643 $generated@@644))
))))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@79 (type $generated@@650))))
 (=> (and (and (and (and (and (= (type $generated@@645) $generated@@94) (= (type $generated@@646) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@647) ($generated@@78 $generated@@4))) (= (type $generated@@648) ($generated@@93 $generated@@161 $generated@@4))) (= (type $generated@@649) $generated@@94)) (= (type $generated@@650) ($generated@@78 $generated@@651))) (= ($generated@@0 ($generated@@596 ($generated@@597 $generated@@645 $generated@@646 $generated@@647 $generated@@648) $generated@@649 $generated@@650))  (=> (and (not (= $generated@@649 $generated@@645)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@646 $generated@@649) $generated@@647))) ($generated@@0 ($generated@@98 $generated@@648 ($generated@@157 $generated@@649)))))))
 :pattern ( ($generated@@596 ($generated@@597 $generated@@645 $generated@@646 $generated@@647 $generated@@648) $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@653) $generated@@2)) ($generated@@91 $generated@@653 $generated@@46 $generated@@652))
 :pattern ( ($generated@@91 $generated@@653 $generated@@46 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@655) $generated@@3)) ($generated@@91 $generated@@655 $generated@@47 $generated@@654))
 :pattern ( ($generated@@91 $generated@@655 $generated@@47 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@657) $generated@@4)) ($generated@@91 $generated@@657 $generated@@44 $generated@@656))
 :pattern ( ($generated@@91 $generated@@657 $generated@@44 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@659) $generated@@456)) ($generated@@91 $generated@@659 $generated@@45 $generated@@658))
 :pattern ( ($generated@@91 $generated@@659 $generated@@45 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@661) $generated@@161)) ($generated@@91 $generated@@661 $generated@@48 $generated@@660))
 :pattern ( ($generated@@91 $generated@@661 $generated@@48 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@255 $generated@@161)) (= (type $generated@@663) $generated@@76)) (= ($generated@@154 $generated@@662 ($generated@@499 $generated@@663)) (forall (($generated@@664 Int) ) (!  (=> (and (<= 0 $generated@@664) (< $generated@@664 ($generated@@254 $generated@@662))) ($generated@@218 ($generated@@500 $generated@@662 $generated@@664) $generated@@663))
 :pattern ( ($generated@@500 $generated@@662 $generated@@664))
))))
 :pattern ( ($generated@@154 $generated@@662 ($generated@@499 $generated@@663)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 Int) ) (!  (=> (= (type $generated@@666) ($generated@@255 $generated@@161)) (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@254 $generated@@666))) (< ($generated@@538 ($generated@@336 $generated@@186 ($generated@@500 $generated@@666 $generated@@667))) ($generated@@665 $generated@@666))))
 :pattern ( ($generated@@538 ($generated@@336 $generated@@186 ($generated@@500 $generated@@666 $generated@@667))))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (and (= (type $generated@@668) ($generated@@286 $generated@@161 $generated@@161)) (= (type $generated@@669) $generated@@76)) (= (type $generated@@670) $generated@@76)) ($generated@@154 $generated@@668 ($generated@@408 $generated@@669 $generated@@670))) (and (and ($generated@@154 ($generated@@284 $generated@@668) ($generated@@227 $generated@@669)) ($generated@@154 ($generated@@349 $generated@@668) ($generated@@227 $generated@@670))) ($generated@@154 ($generated@@382 $generated@@668) ($generated@@227 ($generated@@185 $generated@@669 $generated@@670)))))
 :pattern ( ($generated@@154 $generated@@668 ($generated@@408 $generated@@669 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) ($generated@@304 $generated@@161 $generated@@161)) (= (type $generated@@672) $generated@@76)) (= (type $generated@@673) $generated@@76)) ($generated@@154 $generated@@671 ($generated@@416 $generated@@672 $generated@@673))) (and (and ($generated@@154 ($generated@@302 $generated@@671) ($generated@@232 $generated@@672)) ($generated@@154 ($generated@@360 $generated@@671) ($generated@@232 $generated@@673))) ($generated@@154 ($generated@@390 $generated@@671) ($generated@@232 ($generated@@185 $generated@@672 $generated@@673)))))
 :pattern ( ($generated@@154 $generated@@671 ($generated@@416 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@2) ($generated@@154 $generated@@674 $generated@@46))
 :pattern ( ($generated@@154 $generated@@674 $generated@@46))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@3) ($generated@@154 $generated@@675 $generated@@47))
 :pattern ( ($generated@@154 $generated@@675 $generated@@47))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@4) ($generated@@154 $generated@@676 $generated@@44))
 :pattern ( ($generated@@154 $generated@@676 $generated@@44))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@456) ($generated@@154 $generated@@677 $generated@@45))
 :pattern ( ($generated@@154 $generated@@677 $generated@@45))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@161) ($generated@@154 $generated@@678 $generated@@48))
 :pattern ( ($generated@@154 $generated@@678 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@679) ($generated@@598 $generated@@94 $generated@@4)) (= (type $generated@@680) $generated@@94)) (= (type $generated@@682) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@683) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@684) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@688) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@686) ($generated@@93 $generated@@94 $generated@@95))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@689  (=> ($generated@@0 ($generated@@596 $generated@@679 $generated@@680 $generated@@158)) (=> (and (= $generated@@681 (+ ($generated ($generated@@100 ($generated@@98 $generated@@682 $generated@@680) $generated@@158)) 1)) (= $generated@@683 ($generated@@99 $generated@@682 $generated@@680 ($generated@@101 ($generated@@98 $generated@@682 $generated@@680) $generated@@158 ($generated@@8 $generated@@681))))) (=> (and (and ($generated@@151 $generated@@683) ($generated@@91 $generated@@680 $generated@@172 $generated@@683)) (and ($generated@@152 $generated@@683 $generated@@680) ($generated@@152 $generated@@683 $generated@@680))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@150 $generated@@683 $generated@@680)) (=> ($generated@@150 $generated@@683 $generated@@680) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> false (= ($generated ($generated@@100 ($generated@@98 $generated@@683 $generated@@680) $generated@@158)) (+ ($generated ($generated@@100 ($generated@@98 $generated@@684 $generated@@680) $generated@@158)) 1)))) (=> (=> false (= ($generated ($generated@@100 ($generated@@98 $generated@@683 $generated@@680) $generated@@158)) (+ ($generated ($generated@@100 ($generated@@98 $generated@@684 $generated@@680) $generated@@158)) 1))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> false ($generated@@150 $generated@@683 $generated@@680))) (=> (=> false ($generated@@150 $generated@@683 $generated@@680)) (=> (= (ControlFlow 0 2) (- 0 1)) (=> false (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@94) (=> (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@683 $generated@@680) $generated@@156) ($generated@@157 $generated@@690))) (not ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@684 $generated@@680) $generated@@156) ($generated@@157 $generated@@690))))) (and (not (= $generated@@690 $generated@@153)) (not ($generated@@0 ($generated@@100 ($generated@@98 $generated@@684 $generated@@690) $generated@@60))))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@684 $generated@@690) $generated@@60))
)))))))))))))))
(let (($generated@@691  (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@0 ($generated@@596 $generated@@679 $generated@@680 $generated@@160))) (=> ($generated@@0 ($generated@@596 $generated@@679 $generated@@680 $generated@@160)) (=> (= $generated@@685 (- ($generated ($generated@@100 ($generated@@98 $generated@@684 $generated@@680) $generated@@160)) 1)) (=> (and (and (= $generated@@686 ($generated@@99 $generated@@684 $generated@@680 ($generated@@101 ($generated@@98 $generated@@684 $generated@@680) $generated@@160 ($generated@@8 $generated@@685)))) ($generated@@151 $generated@@686)) (and (= $generated@@682 $generated@@686) (= (ControlFlow 0 8) 2))) $generated@@689))))))
(let (($generated@@692  (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@0 ($generated@@596 $generated@@679 $generated@@680 $generated@@159))) (=> ($generated@@0 ($generated@@596 $generated@@679 $generated@@680 $generated@@159)) (=> (= $generated@@687 (+ ($generated ($generated@@100 ($generated@@98 $generated@@684 $generated@@680) $generated@@159)) 1)) (=> (and (and (= $generated@@688 ($generated@@99 $generated@@684 $generated@@680 ($generated@@101 ($generated@@98 $generated@@684 $generated@@680) $generated@@159 ($generated@@8 $generated@@687)))) ($generated@@151 $generated@@688)) (and (= $generated@@682 $generated@@688) (= (ControlFlow 0 6) 2))) $generated@@689))))))
(let (($generated@@693  (=> (= $generated@@679 ($generated@@597 $generated@@153 $generated@@684 $generated@@60 ($generated@@100 ($generated@@98 $generated@@684 $generated@@680) $generated@@156))) (and (=> (= (ControlFlow 0 10) 6) $generated@@692) (=> (= (ControlFlow 0 10) 8) $generated@@691)))))
(let (($generated@@694  (=> (and ($generated@@151 $generated@@684) ($generated@@326 $generated@@684)) (=> (and (and (and (not (= $generated@@680 $generated@@153)) (and ($generated@@154 $generated@@680 $generated@@155) ($generated@@91 $generated@@680 $generated@@155 $generated@@684))) (= 1 $generated@@149)) (and ($generated@@150 $generated@@684 $generated@@680) (= (ControlFlow 0 11) 10))) $generated@@693))))
$generated@@694))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@266 (T@T T@U T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@297 (T@U T@U T@U) Bool)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@334 (T@U) Int)
(declare-fun $generated@@335 (T@T) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U T@U) Bool)
(declare-fun $generated@@382 (T@U) Bool)
(declare-fun $generated@@392 (T@T T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@U T@U) T@U)
(declare-fun $generated@@483 (T@T) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 () T@T)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@556 (T@U Int) T@U)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@660 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@78 $generated@@85))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@61) $generated@@80)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@64) $generated@@81)) (= (type $generated@@65) $generated@@77)) (= ($generated@@1 $generated@@82) 11)) (= (type $generated@@66) $generated@@82)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@83) 12)) (= (type $generated@@69) $generated@@83)) (= (type $generated@@70) $generated@@83)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)) (= (type $generated@@75) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (= ($generated@@86 $generated@@60) 0))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@77)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@44) $generated@@49))
(assert (= ($generated@@87 $generated@@45) $generated@@50))
(assert (= ($generated@@87 $generated@@46) $generated@@51))
(assert (= ($generated@@87 $generated@@47) $generated@@52))
(assert (= ($generated@@87 $generated@@48) $generated@@53))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@80)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 13)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@79 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 15)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@79 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@76)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (= (type $generated@@153) $generated@@94) (= (type $generated@@155) $generated@@76)) (= ($generated@@1 $generated@@161) 16)) (= (type $generated@@156) ($generated@@78 ($generated@@93 $generated@@161 $generated@@4)))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@157 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@157 $generated@@162))
))) (= (type $generated@@158) ($generated@@78 $generated@@2))) (= (type $generated@@159) ($generated@@78 $generated@@2))) (= (type $generated@@160) ($generated@@78 $generated@@2))))
(assert  (=> (<= 0 $generated@@149) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@164) $generated@@94)) (or ($generated@@152 $generated@@163 $generated@@164) (and (not (= 0 $generated@@149)) (and ($generated@@151 $generated@@163) (and (not (= $generated@@164 $generated@@153)) (and ($generated@@154 $generated@@164 $generated@@155) ($generated@@91 $generated@@164 $generated@@155 $generated@@163))))))) (= ($generated@@150 $generated@@163 $generated@@164)  (and ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@156) ($generated@@157 $generated@@164))) (= ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@158)) (- ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@159)) ($generated ($generated@@100 ($generated@@98 $generated@@163 $generated@@164) $generated@@160)))))))
 :pattern ( ($generated@@150 $generated@@163 $generated@@164) ($generated@@151 $generated@@163))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@167) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@165 $generated@@166 $generated@@167)) (forall (($generated@@168 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@94) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@166 $generated@@168) $generated@@60))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@167 $generated@@168) $generated@@60)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@167 $generated@@168) $generated@@60))
)))
 :pattern ( ($generated@@165 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@169) $generated@@76))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@94) (= (type $generated@@171) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@170 $generated@@169 $generated@@171)  (or (= $generated@@170 $generated@@153) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@171 $generated@@170) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@170 $generated@@169 $generated@@171))
)))
(assert (= (type $generated@@172) $generated@@76))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@94) (= (type $generated@@174) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@173 $generated@@172 $generated@@174)  (or (= $generated@@173 $generated@@153) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@174 $generated@@173) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@173 $generated@@172 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@76)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@178) $generated@@94)) (and ($generated@@151 $generated@@177) (and (not (= $generated@@178 $generated@@153)) (= ($generated@@175 $generated@@178) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@177 $generated@@178) $generated@@159) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@177 $generated@@178) $generated@@159))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@180) $generated@@94)) (and ($generated@@151 $generated@@179) (and (not (= $generated@@180 $generated@@153)) (= ($generated@@175 $generated@@180) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@179 $generated@@180) $generated@@160) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@179 $generated@@180) $generated@@160))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@182) $generated@@94)) (and ($generated@@151 $generated@@181) (and (not (= $generated@@182 $generated@@153)) (= ($generated@@175 $generated@@182) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@181 $generated@@182) $generated@@158) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@181 $generated@@182) $generated@@158))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@2) ($generated@@154 $generated@@183 ($generated@@92 0)))
 :pattern ( ($generated@@154 $generated@@183 ($generated@@92 0)))
)))
(assert  (and (= ($generated@@1 $generated@@186) 17) (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@187 $generated@@188)) $generated@@76)
 :pattern ( ($generated@@185 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@76) (= (type $generated@@190) $generated@@76)) (= (type $generated@@191) $generated@@186)) ($generated@@154 $generated@@191 ($generated@@185 $generated@@189 $generated@@190))) ($generated@@184 $generated@@191))
 :pattern ( ($generated@@184 $generated@@191) ($generated@@154 $generated@@191 ($generated@@185 $generated@@189 $generated@@190)))
)))
(assert  (and (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@161)
 :pattern ( ($generated@@193 $generated@@195))
)) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@161)
 :pattern ( ($generated@@194 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@186) (= (type $generated@@198) $generated@@186)) true) (= ($generated@@192 $generated@@197 $generated@@198)  (and (= ($generated@@193 $generated@@197) ($generated@@193 $generated@@198)) (= ($generated@@194 $generated@@197) ($generated@@194 $generated@@198)))))
 :pattern ( ($generated@@192 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@201 T@U) ) (! (= (type ($generated@@199 $generated@@201)) $generated@@76)
 :pattern ( ($generated@@199 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and (= (type $generated@@202) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@203) $generated@@76)) ($generated@@154 $generated@@202 ($generated@@199 $generated@@203))) ($generated@@200 $generated@@202))
 :pattern ( ($generated@@154 $generated@@202 ($generated@@199 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@94) (= ($generated@@154 $generated@@204 $generated@@172)  (or (= $generated@@204 $generated@@153) (= ($generated@@175 $generated@@204) $generated@@172))))
 :pattern ( ($generated@@154 $generated@@204 $generated@@172))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 18)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@94 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@79 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@94) (= (type $generated@@255) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@256) ($generated@@78 $generated@@4))) (= (type $generated@@258) $generated@@94)) (= (type $generated@@259) ($generated@@78 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (= (type $generated@@261) $generated@@76))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@94) (= (type $generated@@263) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@262 $generated@@261 $generated@@263) ($generated@@91 $generated@@262 $generated@@169 $generated@@263)))
 :pattern ( ($generated@@91 $generated@@262 $generated@@261 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@94) (= (type $generated@@265) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@264 $generated@@155 $generated@@265) ($generated@@91 $generated@@264 $generated@@172 $generated@@265)))
 :pattern ( ($generated@@91 $generated@@264 $generated@@155 $generated@@265))
)))
(assert (= ($generated@@86 $generated@@156) 0))
(assert (forall (($generated@@267 T@T) ($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@267 $generated@@268 $generated@@269)) ($generated@@78 $generated@@267))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268 $generated@@269))
)))
(assert (= ($generated@@266 ($generated@@93 $generated@@161 $generated@@4) $generated@@66 $generated@@74) $generated@@156))
(assert ($generated@@270 $generated@@156))
(assert (= ($generated@@86 $generated@@158) 0))
(assert (= ($generated@@266 $generated@@2 $generated@@66 $generated@@75) $generated@@158))
(assert ($generated@@270 $generated@@158))
(assert  (=> (<= 0 $generated@@149) (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@272) $generated@@94)) (or ($generated@@152 $generated@@271 $generated@@272) (and (not (= 0 $generated@@149)) (and ($generated@@151 $generated@@271) (and (not (= $generated@@272 $generated@@153)) (and ($generated@@154 $generated@@272 $generated@@155) ($generated@@91 $generated@@272 $generated@@155 $generated@@271))))))) ($generated@@150 $generated@@271 $generated@@272)) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@271 $generated@@272) $generated@@156) ($generated@@157 $generated@@272))))
 :pattern ( ($generated@@150 $generated@@271 $generated@@272))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (! (= (type ($generated@@273 $generated@@275 $generated@@276)) $generated@@186)
 :pattern ( ($generated@@273 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) $generated@@76) (= (type $generated@@278) $generated@@76)) (= (type $generated@@279) $generated@@161)) (= (type $generated@@280) $generated@@161)) (= ($generated@@154 ($generated@@273 $generated@@279 $generated@@280) ($generated@@185 $generated@@277 $generated@@278))  (and ($generated@@274 $generated@@279 $generated@@277) ($generated@@274 $generated@@280 $generated@@278))))
 :pattern ( ($generated@@154 ($generated@@273 $generated@@279 $generated@@280) ($generated@@185 $generated@@277 $generated@@278)))
)))
(assert (= ($generated@@86 $generated@@159) 0))
(assert (= ($generated@@266 $generated@@2 $generated@@66 $generated@@72) $generated@@159))
(assert  (not ($generated@@270 $generated@@159)))
(assert (= ($generated@@86 $generated@@160) 0))
(assert (= ($generated@@266 $generated@@2 $generated@@66 $generated@@73) $generated@@160))
(assert  (not ($generated@@270 $generated@@160)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@186) (= (type $generated@@282) $generated@@186)) (= ($generated@@192 $generated@@281 $generated@@282) (= $generated@@281 $generated@@282)))
 :pattern ( ($generated@@192 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@76)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@286) $generated@@76)) (= ($generated@@154 $generated@@285 ($generated@@283 $generated@@286)) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@161) ($generated@@0 ($generated@@98 $generated@@285 $generated@@287))) ($generated@@274 $generated@@287 $generated@@286))
 :pattern ( ($generated@@98 $generated@@285 $generated@@287))
))))
 :pattern ( ($generated@@154 $generated@@285 ($generated@@283 $generated@@286)))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@76)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@291) $generated@@76)) (= ($generated@@154 $generated@@290 ($generated@@288 $generated@@291)) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@161) ($generated@@0 ($generated@@98 $generated@@290 $generated@@292))) ($generated@@274 $generated@@292 $generated@@291))
 :pattern ( ($generated@@98 $generated@@290 $generated@@292))
))))
 :pattern ( ($generated@@154 $generated@@290 ($generated@@288 $generated@@291)))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 (type $generated@@294)))
(= (type ($generated@@293 $generated@@294)) $generated@@295))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= ($generated@@293 $generated@@296) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@298) $generated@@76) (= (type $generated@@299) $generated@@76)) (= (type $generated@@300) $generated@@161)) (= (type $generated@@301) $generated@@161)) (= (type $generated@@302) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@151 $generated@@302)) (= ($generated@@91 ($generated@@273 $generated@@300 $generated@@301) ($generated@@185 $generated@@298 $generated@@299) $generated@@302)  (and ($generated@@297 $generated@@300 $generated@@298 $generated@@302) ($generated@@297 $generated@@301 $generated@@299 $generated@@302))))
 :pattern ( ($generated@@91 ($generated@@273 $generated@@300 $generated@@301) ($generated@@185 $generated@@298 $generated@@299) $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@81)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@186) (= ($generated@@184 $generated@@305) (= ($generated@@303 $generated@@305) $generated@@64)))
 :pattern ( ($generated@@184 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@186) ($generated@@184 $generated@@306)) (exists (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (and (and (= (type $generated@@307) $generated@@161) (= (type $generated@@308) $generated@@161)) (= $generated@@306 ($generated@@273 $generated@@307 $generated@@308)))
 :no-pattern (type $generated@@307)
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
)))
 :pattern ( ($generated@@184 $generated@@306))
)))
(assert  (and (and (forall (($generated@@313 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@313)) 19)) (forall (($generated@@314 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@311 $generated@@314))
))) (forall (($generated@@315 T@T) ) (! (= (type ($generated@@309 $generated@@315)) ($generated@@311 $generated@@315))
 :pattern ( ($generated@@309 $generated@@315))
))))
(assert (forall (($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@316)) 0)
 :pattern ( ($generated@@309 $generated@@316))
)))
(assert ($generated@@270 $generated@@60))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@76) (= (type $generated@@319) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@297 ($generated@@157 $generated@@317) $generated@@318 $generated@@319) ($generated@@91 $generated@@317 $generated@@318 $generated@@319)))
 :pattern ( ($generated@@297 ($generated@@157 $generated@@317) $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@320) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@321) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@322) $generated@@161)) (= (type $generated@@323) $generated@@76)) ($generated@@165 $generated@@320 $generated@@321)) ($generated@@297 $generated@@322 $generated@@323 $generated@@320)) ($generated@@297 $generated@@322 $generated@@323 $generated@@321))
 :pattern ( ($generated@@165 $generated@@320 $generated@@321) ($generated@@297 $generated@@322 $generated@@323 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@324) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@325) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@327) $generated@@76)) ($generated@@165 $generated@@324 $generated@@325)) ($generated@@91 $generated@@326 $generated@@327 $generated@@324)) ($generated@@91 $generated@@326 $generated@@327 $generated@@325))
 :pattern ( ($generated@@165 $generated@@324 $generated@@325) ($generated@@91 $generated@@326 $generated@@327 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@329) $generated@@94)) (=> (and (and ($generated@@151 $generated@@328) (and (not (= $generated@@329 $generated@@153)) (= ($generated@@175 $generated@@329) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@328 $generated@@329) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@328 $generated@@329) $generated@@159) $generated@@46 $generated@@328)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@328 $generated@@329) $generated@@159))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@331) $generated@@94)) (=> (and (and ($generated@@151 $generated@@330) (and (not (= $generated@@331 $generated@@153)) (= ($generated@@175 $generated@@331) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@330 $generated@@331) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@330 $generated@@331) $generated@@160) $generated@@46 $generated@@330)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@330 $generated@@331) $generated@@160))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@333) $generated@@94)) (=> (and (and ($generated@@151 $generated@@332) (and (not (= $generated@@333 $generated@@153)) (= ($generated@@175 $generated@@333) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@332 $generated@@333) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@332 $generated@@333) $generated@@158) $generated@@46 $generated@@332)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@332 $generated@@333) $generated@@158))
)))
(assert (forall (($generated@@336 T@T) ) (! (= (type ($generated@@335 $generated@@336)) ($generated@@93 $generated@@336 $generated@@2))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@96 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@93 $generated@@338 $generated@@2)) (and (= (= ($generated@@334 $generated@@337) 0) (= $generated@@337 ($generated@@335 $generated@@338))) (=> (not (= ($generated@@334 $generated@@337) 0)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) (< 0 ($generated ($generated@@98 $generated@@337 $generated@@339))))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@93 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@98 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@98 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 21)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@93 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@98 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@98 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@378) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@376 $generated@@377 $generated@@378)) (and ($generated@@165 $generated@@377 $generated@@378) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@79 (type $generated@@380))))
 (=> (and (and (= (type $generated@@379) $generated@@94) (= (type $generated@@380) ($generated@@78 $generated@@381))) (not ($generated@@270 $generated@@380))) (= ($generated@@100 ($generated@@98 $generated@@377 $generated@@379) $generated@@380) ($generated@@100 ($generated@@98 $generated@@378 $generated@@379) $generated@@380))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@378 $generated@@379) $generated@@380))
))))
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@384) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@385) $generated@@94)) (=> (and (and (and ($generated@@151 $generated@@383) ($generated@@151 $generated@@384)) (and (not (= $generated@@385 $generated@@153)) ($generated@@154 $generated@@385 $generated@@155))) (and ($generated@@382 $generated@@383) ($generated@@165 $generated@@383 $generated@@384))) (=> (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@79 (type $generated@@387))))
 (=> (and (and (= (type $generated@@386) $generated@@94) (= (type $generated@@387) ($generated@@78 $generated@@388))) (and (not (= $generated@@386 $generated@@153)) (or (= $generated@@386 $generated@@385) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@383 $generated@@385) $generated@@156) ($generated@@157 $generated@@386)))))) (= ($generated@@100 ($generated@@98 $generated@@383 $generated@@386) $generated@@387) ($generated@@100 ($generated@@98 $generated@@384 $generated@@386) $generated@@387))))
 :no-pattern (type $generated@@386)
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
)) (= ($generated@@150 $generated@@383 $generated@@385) ($generated@@150 $generated@@384 $generated@@385)))))
 :pattern ( ($generated@@382 $generated@@383) ($generated@@165 $generated@@383 $generated@@384) ($generated@@150 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@96 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@93 $generated@@390 $generated@@2)) (= ($generated@@200 $generated@@389) (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@390) (and (<= 0 ($generated ($generated@@98 $generated@@389 $generated@@391))) (<= ($generated ($generated@@98 $generated@@389 $generated@@391)) ($generated@@334 $generated@@389))))
 :pattern ( ($generated@@98 $generated@@389 $generated@@391))
)))))
 :pattern ( ($generated@@200 $generated@@389))
)))
(assert (forall (($generated@@393 T@T) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@161) ($generated@@274 $generated@@395 $generated@@169)) (and (= ($generated@@157 ($generated@@392 $generated@@94 $generated@@395)) $generated@@395) ($generated@@154 ($generated@@392 $generated@@94 $generated@@395) $generated@@169)))
 :pattern ( ($generated@@274 $generated@@395 $generated@@169))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@161) ($generated@@274 $generated@@396 $generated@@261)) (and (= ($generated@@157 ($generated@@392 $generated@@94 $generated@@396)) $generated@@396) ($generated@@154 ($generated@@392 $generated@@94 $generated@@396) $generated@@261)))
 :pattern ( ($generated@@274 $generated@@396 $generated@@261))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@161) ($generated@@274 $generated@@397 $generated@@172)) (and (= ($generated@@157 ($generated@@392 $generated@@94 $generated@@397)) $generated@@397) ($generated@@154 ($generated@@392 $generated@@94 $generated@@397) $generated@@172)))
 :pattern ( ($generated@@274 $generated@@397 $generated@@172))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@161) ($generated@@274 $generated@@398 $generated@@155)) (and (= ($generated@@157 ($generated@@392 $generated@@94 $generated@@398)) $generated@@398) ($generated@@154 ($generated@@392 $generated@@94 $generated@@398) $generated@@155)))
 :pattern ( ($generated@@274 $generated@@398 $generated@@155))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@94) (= ($generated@@154 $generated@@399 $generated@@261)  (and ($generated@@154 $generated@@399 $generated@@169) (not (= $generated@@399 $generated@@153)))))
 :pattern ( ($generated@@154 $generated@@399 $generated@@261))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@94) (= ($generated@@154 $generated@@400 $generated@@155)  (and ($generated@@154 $generated@@400 $generated@@172) (not (= $generated@@400 $generated@@153)))))
 :pattern ( ($generated@@154 $generated@@400 $generated@@155))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@344 (type $generated@@401))))
(let (($generated@@403 ($generated@@343 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@342 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@341 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) ($generated@@0 ($generated@@98 ($generated@@340 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@340 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@344 (type $generated@@406))))
(= (type ($generated@@405 $generated@@406)) ($generated@@93 $generated@@407 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@344 (type $generated@@408))))
(let (($generated@@410 ($generated@@343 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@342 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@341 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@409) ($generated@@0 ($generated@@98 ($generated@@405 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@405 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@362 (type $generated@@412))))
(let (($generated@@414 ($generated@@361 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@360 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@359 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) ($generated@@0 ($generated@@98 ($generated@@358 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@358 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@362 (type $generated@@417))))
(= (type ($generated@@416 $generated@@417)) ($generated@@93 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@362 (type $generated@@419))))
(let (($generated@@421 ($generated@@361 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@360 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@359 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@420) ($generated@@0 ($generated@@98 ($generated@@416 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@416 $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@424) $generated@@76)) (= ($generated@@154 $generated@@423 ($generated@@199 $generated@@424)) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@423 $generated@@425)))) ($generated@@274 $generated@@425 $generated@@424))
 :pattern ( ($generated@@98 $generated@@423 $generated@@425))
))))
 :pattern ( ($generated@@154 $generated@@423 ($generated@@199 $generated@@424)))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@427) $generated@@76)) (= (type $generated@@428) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@426 ($generated@@283 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@161) ($generated@@0 ($generated@@98 $generated@@426 $generated@@429))) ($generated@@297 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@98 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@91 $generated@@426 ($generated@@283 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@431) $generated@@76)) (= (type $generated@@432) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@430 ($generated@@288 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@161) ($generated@@0 ($generated@@98 $generated@@430 $generated@@433))) ($generated@@297 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@98 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@91 $generated@@430 ($generated@@288 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(= ($generated ($generated@@98 ($generated@@335 $generated@@435) $generated@@434)) 0))
 :pattern ( (let (($generated@@435 (type $generated@@434)))
($generated@@98 ($generated@@335 $generated@@435) $generated@@434)))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@437) $generated@@94)) (=> (and (and ($generated@@151 $generated@@436) (and (not (= $generated@@437 $generated@@153)) (= ($generated@@175 $generated@@437) $generated@@172))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@436 $generated@@437) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@436 $generated@@437) $generated@@156) ($generated@@283 $generated@@261) $generated@@436)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@436 $generated@@437) $generated@@156))
)))
(assert  (and (forall (($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@440)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@438 $generated@@440))
)) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@344 (type $generated@@441))))
(let (($generated@@443 ($generated@@343 (type $generated@@441))))
(= (type ($generated@@439 $generated@@441)) ($generated@@93 $generated@@443 $generated@@442))))
 :pattern ( ($generated@@439 $generated@@441))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@342 $generated@@161 $generated@@161)) (= (type $generated@@445) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@438 $generated@@444) $generated@@445))  (and ($generated@@0 ($generated@@98 ($generated@@340 $generated@@444) ($generated@@193 ($generated@@392 $generated@@186 $generated@@445)))) (= ($generated@@98 ($generated@@439 $generated@@444) ($generated@@193 ($generated@@392 $generated@@186 $generated@@445))) ($generated@@194 ($generated@@392 $generated@@186 $generated@@445))))))
 :pattern ( ($generated@@98 ($generated@@438 $generated@@444) $generated@@445))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@446 $generated@@448))
)) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@362 (type $generated@@449))))
(let (($generated@@451 ($generated@@361 (type $generated@@449))))
(= (type ($generated@@447 $generated@@449)) ($generated@@93 $generated@@451 $generated@@450))))
 :pattern ( ($generated@@447 $generated@@449))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@360 $generated@@161 $generated@@161)) (= (type $generated@@453) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@446 $generated@@452) $generated@@453))  (and ($generated@@0 ($generated@@98 ($generated@@358 $generated@@452) ($generated@@193 ($generated@@392 $generated@@186 $generated@@453)))) (= ($generated@@98 ($generated@@447 $generated@@452) ($generated@@193 ($generated@@392 $generated@@186 $generated@@453))) ($generated@@194 ($generated@@392 $generated@@186 $generated@@453))))))
 :pattern ( ($generated@@98 ($generated@@446 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@343 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@342 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@98 ($generated@@405 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@98 ($generated@@340 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@98 ($generated@@439 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@98 ($generated@@340 $generated@@454) $generated@@458))
 :pattern ( ($generated@@98 ($generated@@439 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@98 ($generated@@405 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@361 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@360 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@98 ($generated@@416 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@98 ($generated@@358 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@98 ($generated@@447 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@98 ($generated@@358 $generated@@459) $generated@@463))
 :pattern ( ($generated@@98 ($generated@@447 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@98 ($generated@@416 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@76)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) ($generated@@342 $generated@@161 $generated@@161)) (= (type $generated@@468) $generated@@76)) (= (type $generated@@469) $generated@@76)) (= (type $generated@@470) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@340 $generated@@467) $generated@@471))) (and ($generated@@297 ($generated@@98 ($generated@@439 $generated@@467) $generated@@471) $generated@@469 $generated@@470) ($generated@@297 $generated@@471 $generated@@468 $generated@@470)))
 :pattern ( ($generated@@98 ($generated@@439 $generated@@467) $generated@@471))
 :pattern ( ($generated@@98 ($generated@@340 $generated@@467) $generated@@471))
))))
 :pattern ( ($generated@@91 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@473 $generated@@474)) $generated@@76)
 :pattern ( ($generated@@472 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) ($generated@@360 $generated@@161 $generated@@161)) (= (type $generated@@476) $generated@@76)) (= (type $generated@@477) $generated@@76)) (= (type $generated@@478) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@358 $generated@@475) $generated@@479))) (and ($generated@@297 ($generated@@98 ($generated@@447 $generated@@475) $generated@@479) $generated@@477 $generated@@478) ($generated@@297 $generated@@479 $generated@@476 $generated@@478)))
 :pattern ( ($generated@@98 ($generated@@447 $generated@@475) $generated@@479))
 :pattern ( ($generated@@98 ($generated@@358 $generated@@475) $generated@@479))
))))
 :pattern ( ($generated@@91 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@480) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@481) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@482) ($generated@@93 $generated@@94 $generated@@95))) (not (= $generated@@480 $generated@@482))) (and ($generated@@165 $generated@@480 $generated@@481) ($generated@@165 $generated@@481 $generated@@482))) ($generated@@165 $generated@@480 $generated@@482))
 :pattern ( ($generated@@165 $generated@@480 $generated@@481) ($generated@@165 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@T) ) (! (= (type ($generated@@483 $generated@@484)) ($generated@@93 $generated@@484 $generated@@4))
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@362 (type $generated@@485))))
(let (($generated@@487 ($generated@@361 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@360 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@359 $generated@@487 $generated@@486)) (= ($generated@@358 $generated@@485) ($generated@@483 $generated@@487))))))
 :pattern ( ($generated@@358 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@362 (type $generated@@488))))
(let (($generated@@490 ($generated@@361 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@360 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@359 $generated@@490 $generated@@489)) (= ($generated@@416 $generated@@488) ($generated@@483 $generated@@489))))))
 :pattern ( ($generated@@416 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@362 (type $generated@@491))))
(let (($generated@@493 ($generated@@361 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@360 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@359 $generated@@493 $generated@@492)) (= ($generated@@446 $generated@@491) ($generated@@483 $generated@@161))))))
 :pattern ( ($generated@@446 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@344 (type $generated@@494))))
(let (($generated@@496 ($generated@@343 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@342 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@341 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@161) (= (type $generated@@498) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@438 $generated@@494) ($generated@@157 ($generated@@273 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@438 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@362 (type $generated@@499))))
(let (($generated@@501 ($generated@@361 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@360 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@359 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@161) (= (type $generated@@503) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@446 $generated@@499) ($generated@@157 ($generated@@273 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@446 $generated@@499))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@82)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@T) ) (!  (=> (and (= (type $generated@@506) $generated@@82) (= (type $generated@@507) $generated@@80)) (and (= ($generated@@504 ($generated@@266 $generated@@508 $generated@@506 $generated@@507)) $generated@@506) (= ($generated@@89 ($generated@@266 $generated@@508 $generated@@506 $generated@@507)) $generated@@507)))
 :pattern ( ($generated@@266 $generated@@508 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@161) ($generated@@274 $generated@@509 $generated@@46)) (and (= ($generated@@157 ($generated@@392 $generated@@2 $generated@@509)) $generated@@509) ($generated@@154 ($generated@@392 $generated@@2 $generated@@509) $generated@@46)))
 :pattern ( ($generated@@274 $generated@@509 $generated@@46))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@161) ($generated@@274 $generated@@510 $generated@@47)) (and (= ($generated@@157 ($generated@@392 $generated@@3 $generated@@510)) $generated@@510) ($generated@@154 ($generated@@392 $generated@@3 $generated@@510) $generated@@47)))
 :pattern ( ($generated@@274 $generated@@510 $generated@@47))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@161) ($generated@@274 $generated@@511 $generated@@44)) (and (= ($generated@@157 ($generated@@392 $generated@@4 $generated@@511)) $generated@@511) ($generated@@154 ($generated@@392 $generated@@4 $generated@@511) $generated@@44)))
 :pattern ( ($generated@@274 $generated@@511 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@512) 22))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@161) ($generated@@274 $generated@@513 $generated@@45)) (and (= ($generated@@157 ($generated@@392 $generated@@512 $generated@@513)) $generated@@513) ($generated@@154 ($generated@@392 $generated@@512 $generated@@513) $generated@@45)))
 :pattern ( ($generated@@274 $generated@@513 $generated@@45))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@76) (= ($generated@@274 ($generated@@157 $generated@@514) $generated@@515) ($generated@@154 $generated@@514 $generated@@515)))
 :pattern ( ($generated@@274 ($generated@@157 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@96 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@93 $generated@@517 $generated@@2)) (<= 0 ($generated@@334 $generated@@516))))
 :pattern ( ($generated@@334 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@312 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@311 $generated@@519)) (<= 0 ($generated@@310 $generated@@518))))
 :pattern ( ($generated@@310 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@76)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@76) (= (type $generated@@523) $generated@@76)) (= ($generated@@520 ($generated@@464 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@464 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@76)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@76) (= (type $generated@@527) $generated@@76)) (= ($generated@@524 ($generated@@464 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@464 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@76) (= (type $generated@@529) $generated@@76)) (= ($generated@@87 ($generated@@464 $generated@@528 $generated@@529)) $generated@@58))
 :pattern ( ($generated@@464 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@76)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@76) (= (type $generated@@533) $generated@@76)) (= ($generated@@530 ($generated@@472 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@472 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@76)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@76) (= (type $generated@@537) $generated@@76)) (= ($generated@@534 ($generated@@472 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@472 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@76) (= (type $generated@@539) $generated@@76)) (= ($generated@@87 ($generated@@472 $generated@@538 $generated@@539)) $generated@@59))
 :pattern ( ($generated@@472 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@161) (= (type $generated@@541) $generated@@161)) (= ($generated@@303 ($generated@@273 $generated@@540 $generated@@541)) $generated@@64))
 :pattern ( ($generated@@273 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@76)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@76) (= (type $generated@@545) $generated@@76)) (= ($generated@@542 ($generated@@185 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@185 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@76)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@76) (= (type $generated@@549) $generated@@76)) (= ($generated@@546 ($generated@@185 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@185 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@161) (= (type $generated@@551) $generated@@161)) (= ($generated@@193 ($generated@@273 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@273 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@161) (= (type $generated@@553) $generated@@161)) (= ($generated@@194 ($generated@@273 $generated@@552 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@273 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@94) ($generated@@154 $generated@@554 $generated@@169))
 :pattern ( ($generated@@154 $generated@@554 $generated@@169))
)))
(assert  (and (forall (($generated@@557 T@U) ) (! (= (type ($generated@@555 $generated@@557)) $generated@@76)
 :pattern ( ($generated@@555 $generated@@557))
)) (forall (($generated@@558 T@U) ($generated@@559 Int) ) (! (let (($generated@@560 ($generated@@312 (type $generated@@558))))
(= (type ($generated@@556 $generated@@558 $generated@@559)) $generated@@560))
 :pattern ( ($generated@@556 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@311 $generated@@161)) (= (type $generated@@562) $generated@@76)) (= (type $generated@@563) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@561 ($generated@@555 $generated@@562) $generated@@563) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@310 $generated@@561))) ($generated@@297 ($generated@@556 $generated@@561 $generated@@564) $generated@@562 $generated@@563))
 :pattern ( ($generated@@556 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@91 $generated@@561 ($generated@@555 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@565 ($generated@@92 $generated@@566)) $generated@@566)
 :pattern ( ($generated@@92 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@76)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@76) (= ($generated@@567 ($generated@@283 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@283 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@76) (= ($generated@@87 ($generated@@283 $generated@@570)) $generated@@54))
 :pattern ( ($generated@@283 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@76)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@76) (= ($generated@@571 ($generated@@288 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@288 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@76) (= ($generated@@87 ($generated@@288 $generated@@574)) $generated@@55))
 :pattern ( ($generated@@288 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@76)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@76) (= ($generated@@575 ($generated@@199 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@199 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@76) (= ($generated@@87 ($generated@@199 $generated@@578)) $generated@@56))
 :pattern ( ($generated@@199 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@76)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@76) (= ($generated@@579 ($generated@@555 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@555 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@76) (= ($generated@@87 ($generated@@555 $generated@@582)) $generated@@57))
 :pattern ( ($generated@@555 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
(= ($generated@@392 $generated@@584 ($generated@@157 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@157 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@342 $generated@@161 $generated@@161)) (= (type $generated@@586) $generated@@76)) (= (type $generated@@587) $generated@@76)) (= ($generated@@154 $generated@@585 ($generated@@464 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@340 $generated@@585) $generated@@588))) (and ($generated@@274 ($generated@@98 ($generated@@439 $generated@@585) $generated@@588) $generated@@587) ($generated@@274 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@98 ($generated@@439 $generated@@585) $generated@@588))
 :pattern ( ($generated@@98 ($generated@@340 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@154 $generated@@585 ($generated@@464 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@360 $generated@@161 $generated@@161)) (= (type $generated@@590) $generated@@76)) (= (type $generated@@591) $generated@@76)) (= ($generated@@154 $generated@@589 ($generated@@472 $generated@@590 $generated@@591)) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@358 $generated@@589) $generated@@592))) (and ($generated@@274 ($generated@@98 ($generated@@447 $generated@@589) $generated@@592) $generated@@591) ($generated@@274 $generated@@592 $generated@@590)))
 :pattern ( ($generated@@98 ($generated@@447 $generated@@589) $generated@@592))
 :pattern ( ($generated@@98 ($generated@@358 $generated@@589) $generated@@592))
))))
 :pattern ( ($generated@@154 $generated@@589 ($generated@@472 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@161) (= (type $generated@@596) $generated@@161)) (< ($generated@@593 $generated@@595) ($generated@@594 ($generated@@273 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@273 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@161) (= (type $generated@@598) $generated@@161)) (< ($generated@@593 $generated@@598) ($generated@@594 ($generated@@273 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@273 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@161) (= (type $generated@@600) $generated@@76)) (= (type $generated@@601) $generated@@76)) ($generated@@274 $generated@@599 ($generated@@464 $generated@@600 $generated@@601))) (and (= ($generated@@157 ($generated@@392 ($generated@@342 $generated@@161 $generated@@161) $generated@@599)) $generated@@599) ($generated@@154 ($generated@@392 ($generated@@342 $generated@@161 $generated@@161) $generated@@599) ($generated@@464 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@274 $generated@@599 ($generated@@464 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@161) (= (type $generated@@603) $generated@@76)) (= (type $generated@@604) $generated@@76)) ($generated@@274 $generated@@602 ($generated@@472 $generated@@603 $generated@@604))) (and (= ($generated@@157 ($generated@@392 ($generated@@360 $generated@@161 $generated@@161) $generated@@602)) $generated@@602) ($generated@@154 ($generated@@392 ($generated@@360 $generated@@161 $generated@@161) $generated@@602) ($generated@@472 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@274 $generated@@602 ($generated@@472 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@76) (= (type $generated@@606) $generated@@76)) (= (type $generated@@607) $generated@@161)) ($generated@@274 $generated@@607 ($generated@@185 $generated@@605 $generated@@606))) (and (= ($generated@@157 ($generated@@392 $generated@@186 $generated@@607)) $generated@@607) ($generated@@154 ($generated@@392 $generated@@186 $generated@@607) ($generated@@185 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@274 $generated@@607 ($generated@@185 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@98 ($generated@@483 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@98 ($generated@@483 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@83)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@76) (= (type $generated@@613) $generated@@76)) (and (= ($generated@@87 ($generated@@185 $generated@@612 $generated@@613)) $generated@@65) (= ($generated@@610 ($generated@@185 $generated@@612 $generated@@613)) $generated@@70)))
 :pattern ( ($generated@@185 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@186) (= ($generated@@593 ($generated@@157 $generated@@614)) ($generated@@594 $generated@@614)))
 :pattern ( ($generated@@593 ($generated@@157 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@161) ($generated@@274 $generated@@615 ($generated@@92 0))) (and (= ($generated@@157 ($generated@@392 $generated@@2 $generated@@615)) $generated@@615) ($generated@@154 ($generated@@392 ($generated@@93 $generated@@161 $generated@@4) $generated@@615) ($generated@@92 0))))
 :pattern ( ($generated@@274 $generated@@615 ($generated@@92 0)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@161) (= (type $generated@@617) $generated@@76)) ($generated@@274 $generated@@616 ($generated@@283 $generated@@617))) (and (= ($generated@@157 ($generated@@392 ($generated@@93 $generated@@161 $generated@@4) $generated@@616)) $generated@@616) ($generated@@154 ($generated@@392 ($generated@@93 $generated@@161 $generated@@4) $generated@@616) ($generated@@283 $generated@@617))))
 :pattern ( ($generated@@274 $generated@@616 ($generated@@283 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@161) (= (type $generated@@619) $generated@@76)) ($generated@@274 $generated@@618 ($generated@@288 $generated@@619))) (and (= ($generated@@157 ($generated@@392 ($generated@@93 $generated@@161 $generated@@4) $generated@@618)) $generated@@618) ($generated@@154 ($generated@@392 ($generated@@93 $generated@@161 $generated@@4) $generated@@618) ($generated@@288 $generated@@619))))
 :pattern ( ($generated@@274 $generated@@618 ($generated@@288 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@161) (= (type $generated@@621) $generated@@76)) ($generated@@274 $generated@@620 ($generated@@199 $generated@@621))) (and (= ($generated@@157 ($generated@@392 ($generated@@93 $generated@@161 $generated@@2) $generated@@620)) $generated@@620) ($generated@@154 ($generated@@392 ($generated@@93 $generated@@161 $generated@@2) $generated@@620) ($generated@@199 $generated@@621))))
 :pattern ( ($generated@@274 $generated@@620 ($generated@@199 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@161) (= (type $generated@@623) $generated@@76)) ($generated@@274 $generated@@622 ($generated@@555 $generated@@623))) (and (= ($generated@@157 ($generated@@392 ($generated@@311 $generated@@161) $generated@@622)) $generated@@622) ($generated@@154 ($generated@@392 ($generated@@311 $generated@@161) $generated@@622) ($generated@@555 $generated@@623))))
 :pattern ( ($generated@@274 $generated@@622 ($generated@@555 $generated@@623)))
)))
(assert (= ($generated@@87 $generated@@169) $generated@@62))
(assert (= ($generated@@610 $generated@@169) $generated@@69))
(assert (= ($generated@@87 $generated@@261) $generated@@63))
(assert (= ($generated@@610 $generated@@261) $generated@@69))
(assert (= ($generated@@87 $generated@@172) $generated@@67))
(assert (= ($generated@@610 $generated@@172) $generated@@71))
(assert (= ($generated@@87 $generated@@155) $generated@@68))
(assert (= ($generated@@610 $generated@@155) $generated@@71))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@624) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@625) $generated@@76)) (= (type $generated@@626) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@624 ($generated@@199 $generated@@625) $generated@@626) (forall (($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@624 $generated@@627)))) ($generated@@297 $generated@@627 $generated@@625 $generated@@626))
 :pattern ( ($generated@@98 $generated@@624 $generated@@627))
))))
 :pattern ( ($generated@@91 $generated@@624 ($generated@@199 $generated@@625) $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@186) (= (type $generated@@629) $generated@@76)) (= (type $generated@@630) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@151 $generated@@630) (and ($generated@@184 $generated@@628) (exists (($generated@@631 T@U) ) (!  (and (= (type $generated@@631) $generated@@76) ($generated@@91 $generated@@628 ($generated@@185 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@91 $generated@@628 ($generated@@185 $generated@@629 $generated@@631) $generated@@630))
))))) ($generated@@297 ($generated@@193 $generated@@628) $generated@@629 $generated@@630))
 :pattern ( ($generated@@297 ($generated@@193 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@186) (= (type $generated@@633) $generated@@76)) (= (type $generated@@634) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@151 $generated@@634) (and ($generated@@184 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@76) ($generated@@91 $generated@@632 ($generated@@185 $generated@@635 $generated@@633) $generated@@634))
 :pattern ( ($generated@@91 $generated@@632 ($generated@@185 $generated@@635 $generated@@633) $generated@@634))
))))) ($generated@@297 ($generated@@194 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@297 ($generated@@194 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@637) $generated@@94)) (and ($generated@@151 $generated@@636) (and (not (= $generated@@637 $generated@@153)) (= ($generated@@175 $generated@@637) $generated@@172)))) ($generated@@154 ($generated@@100 ($generated@@98 $generated@@636 $generated@@637) $generated@@156) ($generated@@283 $generated@@261)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@636 $generated@@637) $generated@@156))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@161) (= (type $generated@@639) $generated@@161)) (= ($generated@@273 ($generated@@293 $generated@@638) ($generated@@293 $generated@@639)) ($generated@@293 ($generated@@273 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@273 ($generated@@293 $generated@@638) ($generated@@293 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (! (= ($generated@@157 ($generated@@293 $generated@@640)) ($generated@@293 ($generated@@157 $generated@@640)))
 :pattern ( ($generated@@157 ($generated@@293 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 ($generated@@312 (type $generated@@641))))
 (=> (and (= (type $generated@@641) ($generated@@311 $generated@@642)) (= ($generated@@310 $generated@@641) 0)) (= $generated@@641 ($generated@@309 $generated@@642))))
 :pattern ( ($generated@@310 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@644)))
 (=> (and (and (= (type $generated@@643) ($generated@@93 $generated@@646 $generated@@2)) (= (type $generated@@645) $generated@@2)) (<= 0 ($generated $generated@@645))) (= ($generated@@334 ($generated@@99 $generated@@643 $generated@@644 $generated@@645)) (+ (- ($generated@@334 $generated@@643) ($generated ($generated@@98 $generated@@643 $generated@@644))) ($generated $generated@@645)))))
 :pattern ( ($generated@@334 ($generated@@99 $generated@@643 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@648) $generated@@2)) ($generated@@91 $generated@@648 $generated@@46 $generated@@647))
 :pattern ( ($generated@@91 $generated@@648 $generated@@46 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@650) $generated@@3)) ($generated@@91 $generated@@650 $generated@@47 $generated@@649))
 :pattern ( ($generated@@91 $generated@@650 $generated@@47 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@652) $generated@@4)) ($generated@@91 $generated@@652 $generated@@44 $generated@@651))
 :pattern ( ($generated@@91 $generated@@652 $generated@@44 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@654) $generated@@512)) ($generated@@91 $generated@@654 $generated@@45 $generated@@653))
 :pattern ( ($generated@@91 $generated@@654 $generated@@45 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@656) $generated@@161)) ($generated@@91 $generated@@656 $generated@@48 $generated@@655))
 :pattern ( ($generated@@91 $generated@@656 $generated@@48 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@311 $generated@@161)) (= (type $generated@@658) $generated@@76)) (= ($generated@@154 $generated@@657 ($generated@@555 $generated@@658)) (forall (($generated@@659 Int) ) (!  (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@310 $generated@@657))) ($generated@@274 ($generated@@556 $generated@@657 $generated@@659) $generated@@658))
 :pattern ( ($generated@@556 $generated@@657 $generated@@659))
))))
 :pattern ( ($generated@@154 $generated@@657 ($generated@@555 $generated@@658)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 Int) ) (!  (=> (= (type $generated@@661) ($generated@@311 $generated@@161)) (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@310 $generated@@661))) (< ($generated@@594 ($generated@@392 $generated@@186 ($generated@@556 $generated@@661 $generated@@662))) ($generated@@660 $generated@@661))))
 :pattern ( ($generated@@594 ($generated@@392 $generated@@186 ($generated@@556 $generated@@661 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@342 $generated@@161 $generated@@161)) (= (type $generated@@664) $generated@@76)) (= (type $generated@@665) $generated@@76)) ($generated@@154 $generated@@663 ($generated@@464 $generated@@664 $generated@@665))) (and (and ($generated@@154 ($generated@@340 $generated@@663) ($generated@@283 $generated@@664)) ($generated@@154 ($generated@@405 $generated@@663) ($generated@@283 $generated@@665))) ($generated@@154 ($generated@@438 $generated@@663) ($generated@@283 ($generated@@185 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@154 $generated@@663 ($generated@@464 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@360 $generated@@161 $generated@@161)) (= (type $generated@@667) $generated@@76)) (= (type $generated@@668) $generated@@76)) ($generated@@154 $generated@@666 ($generated@@472 $generated@@667 $generated@@668))) (and (and ($generated@@154 ($generated@@358 $generated@@666) ($generated@@288 $generated@@667)) ($generated@@154 ($generated@@416 $generated@@666) ($generated@@288 $generated@@668))) ($generated@@154 ($generated@@446 $generated@@666) ($generated@@288 ($generated@@185 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@154 $generated@@666 ($generated@@472 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@2) ($generated@@154 $generated@@669 $generated@@46))
 :pattern ( ($generated@@154 $generated@@669 $generated@@46))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@3) ($generated@@154 $generated@@670 $generated@@47))
 :pattern ( ($generated@@154 $generated@@670 $generated@@47))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@4) ($generated@@154 $generated@@671 $generated@@44))
 :pattern ( ($generated@@154 $generated@@671 $generated@@44))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@512) ($generated@@154 $generated@@672 $generated@@45))
 :pattern ( ($generated@@154 $generated@@672 $generated@@45))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@161) ($generated@@154 $generated@@673 $generated@@48))
 :pattern ( ($generated@@154 $generated@@673 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(assert  (and (and (= (type $generated@@674) ($generated@@207 $generated@@94 $generated@@4)) (= (type $generated@@675) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@677) $generated@@94)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@678  (=> (and (= $generated@@674 ($generated@@206 $generated@@153 $generated@@675 $generated@@60 false)) (= $generated@@676 (- ($generated ($generated@@100 ($generated@@98 $generated@@675 $generated@@677) $generated@@159)) ($generated ($generated@@100 ($generated@@98 $generated@@675 $generated@@677) $generated@@160))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@676 ($generated ($generated@@100 ($generated@@98 $generated@@675 $generated@@677) $generated@@158)))) (=> (= $generated@@676 ($generated ($generated@@100 ($generated@@98 $generated@@675 $generated@@677) $generated@@158))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> false (= $generated@@676 ($generated ($generated@@100 ($generated@@98 $generated@@675 $generated@@677) $generated@@158))))))))))
(let (($generated@@679  (=> (and ($generated@@151 $generated@@675) ($generated@@382 $generated@@675)) (=> (and (and (and (not (= $generated@@677 $generated@@153)) (and ($generated@@154 $generated@@677 $generated@@155) ($generated@@91 $generated@@677 $generated@@155 $generated@@675))) (= 1 $generated@@149)) (and ($generated@@150 $generated@@675 $generated@@677) (= (ControlFlow 0 4) 2))) $generated@@678))))
$generated@@679)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
