(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@180  (=> (= (ControlFlow 0 3) (- 0 2)) (<= ($generated@@157 6) ($generated@@157 6)))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@181) (=> (= (ControlFlow 0 4) 3) $generated@@180)))))
(let (($generated@@183  (=> (and (and ($generated@@177 $generated@@175) ($generated@@178 $generated@@175)) (and (= 0 $generated@@179) (= (ControlFlow 0 5) 4))) $generated@@182)))
$generated@@183)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@183  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@157 ($generated@@171 0 ($generated@@157 2))) ($generated@@157 0)))))
(let (($generated@@184  (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@157 2) 0)))))
(let (($generated@@185  (=> (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@184) (=> (= (ControlFlow 0 5) 4) $generated@@183)))))
(let (($generated@@186  (=> (and (and ($generated@@180 $generated@@178) ($generated@@181 $generated@@178)) (and (= 0 $generated@@182) (= (ControlFlow 0 6) 5))) $generated@@185)))
$generated@@186)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@180  (=> (= (ControlFlow 0 3) (- 0 2)) (<= ($generated@@157 6) ($generated@@157 12)))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@181) (=> (= (ControlFlow 0 4) 3) $generated@@180)))))
(let (($generated@@183  (=> (and (and ($generated@@177 $generated@@175) ($generated@@178 $generated@@175)) (and (= 0 $generated@@179) (= (ControlFlow 0 5) 4))) $generated@@182)))
$generated@@183)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (Int) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@70 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@69 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@69 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@164)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@173)) (= (type $generated@@246) $generated@@173)) (= ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@164) (= (type $generated@@248) $generated@@164)) (= ($generated@@170 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@170 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@173) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@67)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@257) $generated@@67)) (= ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@173) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@67) (= (type $generated@@267) $generated@@67)) (= (type $generated@@268) $generated@@173)) (= (type $generated@@269) $generated@@173)) (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@270)) (= ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@71)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@164) (= ($generated@@162 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@164) ($generated@@162 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@173) (= (type $generated@@276) $generated@@173)) (= $generated@@274 ($generated@@239 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@162 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@67) (= (type $generated@@286) $generated@@81)) (= ($generated@@140 $generated@@286 ($generated@@157 $generated@@285))  (and ($generated@@140 $generated@@286 ($generated@@137 $generated@@285)) (not (= $generated@@286 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@286 ($generated@@157 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@173)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@78 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@173)) (= (type $generated@@295) $generated@@67)) ($generated@@145 $generated@@292 $generated@@293)) ($generated@@265 $generated@@294 $generated@@295 $generated@@292)) ($generated@@265 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@145 $generated@@292 $generated@@293) ($generated@@265 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@299) $generated@@67)) ($generated@@145 $generated@@296 $generated@@297)) ($generated@@78 $generated@@298 $generated@@299 $generated@@296)) ($generated@@78 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@145 $generated@@296 $generated@@297) ($generated@@78 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@80 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@83 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@80 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@85 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@72)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@308)) $generated@@61) (= ($generated@@306 ($generated@@137 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@309)) $generated@@62) (= ($generated@@306 ($generated@@157 $generated@@309)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@83 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@80 $generated@@347 $generated@@2)) (= ($generated@@179 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@85 $generated@@346 $generated@@348))) (<= ($generated ($generated@@85 $generated@@346 $generated@@348)) ($generated@@300 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@179 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@81)) (= ($generated@@140 $generated@@350 ($generated@@137 $generated@@349))  (or (= $generated@@350 $generated@@138) (= ($generated@@139 $generated@@350) ($generated@@137 $generated@@349)))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@137 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(let (($generated@@353 ($generated@@313 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@312 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@311 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@310 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(let (($generated@@360 ($generated@@313 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@312 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@311 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@332 (type $generated@@362))))
(let (($generated@@364 ($generated@@331 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@330 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@329 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@328 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(let (($generated@@371 ($generated@@331 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@330 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@329 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@85 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@173) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@265 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@173) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@265 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@301 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@301 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@314 (type $generated@@392))))
(let (($generated@@394 ($generated@@313 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@396) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396)))) (= ($generated@@85 ($generated@@388 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@332 (type $generated@@400))))
(let (($generated@@402 ($generated@@331 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@404) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@313 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@312 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@331 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@330 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))) (and ($generated@@265 ($generated@@85 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@265 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))) (and ($generated@@265 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@265 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@431 $generated@@433))) (and ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))) ($generated@@145 $generated@@431 $generated@@433))
 :pattern ( ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 Int) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@438) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@437) (and (not (= $generated@@438 $generated@@138)) (= ($generated@@139 $generated@@438) ($generated@@137 $generated@@436)))) (and (<= 0 $generated@@439) (< $generated@@439 ($generated@@136 $generated@@438)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) $generated@@60))) ($generated@@265 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) $generated@@436 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) ($generated@@137 $generated@@436))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@80 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@328 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@328 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@366 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@366 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@332 (type $generated@@448))))
(let (($generated@@450 ($generated@@331 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@330 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@329 $generated@@450 $generated@@449)) (= ($generated@@397 $generated@@448) ($generated@@440 $generated@@173))))))
 :pattern ( ($generated@@397 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@314 (type $generated@@451))))
(let (($generated@@453 ($generated@@313 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@312 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@311 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@173) (= (type $generated@@455) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@451) ($generated@@287 ($generated@@239 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@386 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@332 (type $generated@@456))))
(let (($generated@@458 ($generated@@331 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@330 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@329 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@173) (= (type $generated@@460) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@456) ($generated@@287 ($generated@@239 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@397 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) ($generated@@240 $generated@@461 $generated@@46)) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@461)) $generated@@461) ($generated@@140 ($generated@@387 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@173) ($generated@@240 $generated@@462 $generated@@47)) (and (= ($generated@@287 ($generated@@387 $generated@@3 $generated@@462)) $generated@@462) ($generated@@140 ($generated@@387 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@240 $generated@@463 $generated@@44)) (and (= ($generated@@287 ($generated@@387 $generated@@4 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@387 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@240 $generated@@465 $generated@@45)) (and (= ($generated@@287 ($generated@@387 $generated@@464 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@387 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@67) (= ($generated@@240 ($generated@@287 $generated@@466) $generated@@467) ($generated@@140 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@81) (<= 0 ($generated@@136 $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@83 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@80 $generated@@470 $generated@@2)) (<= 0 ($generated@@300 $generated@@469))))
 :pattern ( ($generated@@300 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@280 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@279 $generated@@472)) (<= 0 ($generated@@278 $generated@@471))))
 :pattern ( ($generated@@278 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@415 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@415 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@76 ($generated@@415 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@423 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@423 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@76 ($generated@@423 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) (= (type $generated@@494) $generated@@173)) (= ($generated@@271 ($generated@@239 $generated@@493 $generated@@494)) $generated@@63))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@163 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@163 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@163 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@173) (= (type $generated@@504) $generated@@173)) (= ($generated@@171 ($generated@@239 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@172 ($generated@@239 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@239 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@280 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@279 $generated@@173)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@278 $generated@@513))) ($generated@@265 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@79 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@79 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@249 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@76 ($generated@@249 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@254 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@254 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@76 ($generated@@254 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@178 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@178 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@76 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@75 ($generated@@434 $generated@@535)) 1)
 :pattern ( ($generated@@434 $generated@@535))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@434 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@434 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@137 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@137 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@541 ($generated@@157 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@157 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@387 $generated@@545 ($generated@@287 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@287 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (= ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))) (and ($generated@@240 ($generated@@85 ($generated@@388 $generated@@546) $generated@@549) $generated@@548) ($generated@@240 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) (= ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))) (and ($generated@@240 ($generated@@85 ($generated@@398 $generated@@550) $generated@@553) $generated@@552) ($generated@@240 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@556) $generated@@81)) (and (and ($generated@@152 $generated@@555) (and (not (= $generated@@556 $generated@@138)) (= ($generated@@139 $generated@@556) ($generated@@137 $generated@@554)))) (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@136 $generated@@556))))) ($generated@@240 ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) $generated@@554))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) ($generated@@137 $generated@@554))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@173) (= (type $generated@@561) $generated@@173)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@239 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@239 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566))) (and (= ($generated@@287 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564) ($generated@@415 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@173) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569))) (and (= ($generated@@287 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567) ($generated@@423 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@173)) ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571))) (and (= ($generated@@287 ($generated@@387 $generated@@164 $generated@@572)) $generated@@572) ($generated@@140 ($generated@@387 $generated@@164 $generated@@572) ($generated@@163 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@85 ($generated@@440 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@85 ($generated@@440 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@306 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@164) (= ($generated@@558 ($generated@@287 $generated@@577)) ($generated@@559 $generated@@577)))
 :pattern ( ($generated@@558 ($generated@@287 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@173) ($generated@@240 $generated@@578 ($generated@@79 0))) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) ($generated@@240 $generated@@579 ($generated@@249 $generated@@580))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579) ($generated@@249 $generated@@580))))
 :pattern ( ($generated@@240 $generated@@579 ($generated@@249 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@67)) ($generated@@240 $generated@@581 ($generated@@254 $generated@@582))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@254 $generated@@582))))
 :pattern ( ($generated@@240 $generated@@581 ($generated@@254 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@67)) ($generated@@240 $generated@@583 ($generated@@178 $generated@@584))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583) ($generated@@178 $generated@@584))))
 :pattern ( ($generated@@240 $generated@@583 ($generated@@178 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@240 $generated@@585 ($generated@@507 $generated@@586))) (and (= ($generated@@287 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585) ($generated@@507 $generated@@586))))
 :pattern ( ($generated@@240 $generated@@585 ($generated@@507 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@173)) ($generated@@240 $generated@@588 ($generated@@137 $generated@@587))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@387 $generated@@81 $generated@@588) ($generated@@137 $generated@@587))))
 :pattern ( ($generated@@240 $generated@@588 ($generated@@137 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@173)) ($generated@@240 $generated@@590 ($generated@@157 $generated@@589))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@387 $generated@@81 $generated@@590) ($generated@@157 $generated@@589))))
 :pattern ( ($generated@@240 $generated@@590 ($generated@@157 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (=> (and (and (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= (type $generated@@593) ($generated@@69 $generated@@595))) ($generated@@152 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))) ($generated@@145 $generated@@591 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@596 $generated@@599)))) ($generated@@265 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@602) (and ($generated@@162 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@265 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@265 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@164) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@606) (and ($generated@@162 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@67) ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@265 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@265 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@173)) (= ($generated@@239 ($generated@@261 $generated@@608) ($generated@@261 $generated@@609)) ($generated@@261 ($generated@@239 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@608) ($generated@@261 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@259 $generated@@610))) ($generated@@261 ($generated@@287 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@259 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@287 ($generated@@261 $generated@@611)) ($generated@@261 ($generated@@287 $generated@@611)))
 :pattern ( ($generated@@287 ($generated@@261 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@280 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@279 $generated@@613)) (= ($generated@@278 $generated@@612) 0)) (= $generated@@612 ($generated@@277 $generated@@613))))
 :pattern ( ($generated@@278 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@80 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@300 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@300 $generated@@614) ($generated ($generated@@85 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@300 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@2)) ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@3)) ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@4)) ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@464)) ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@173)) ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@279 $generated@@173)) (= (type $generated@@629) $generated@@67)) (= ($generated@@140 $generated@@628 ($generated@@507 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@278 $generated@@628))) ($generated@@240 ($generated@@508 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@508 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@140 $generated@@628 ($generated@@507 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@279 $generated@@173)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@278 $generated@@632))) (< ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@140 $generated@@634 ($generated@@415 $generated@@635 $generated@@636))) (and (and ($generated@@140 ($generated@@310 $generated@@634) ($generated@@249 $generated@@635)) ($generated@@140 ($generated@@355 $generated@@634) ($generated@@249 $generated@@636))) ($generated@@140 ($generated@@386 $generated@@634) ($generated@@249 ($generated@@163 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@140 $generated@@634 ($generated@@415 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@67)) ($generated@@140 $generated@@637 ($generated@@423 $generated@@638 $generated@@639))) (and (and ($generated@@140 ($generated@@328 $generated@@637) ($generated@@254 $generated@@638)) ($generated@@140 ($generated@@366 $generated@@637) ($generated@@254 $generated@@639))) ($generated@@140 ($generated@@397 $generated@@637) ($generated@@254 ($generated@@163 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@140 $generated@@637 ($generated@@423 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@140 $generated@@640 $generated@@46))
 :pattern ( ($generated@@140 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@140 $generated@@641 $generated@@47))
 :pattern ( ($generated@@140 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@140 $generated@@642 $generated@@44))
 :pattern ( ($generated@@140 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@464) ($generated@@140 $generated@@643 $generated@@45))
 :pattern ( ($generated@@140 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@173) ($generated@@140 $generated@@644 $generated@@48))
 :pattern ( ($generated@@140 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 (T@U) Bool)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@645) ($generated@@185 $generated@@81 $generated@@4)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@647) $generated@@81)) (= (type $generated@@648) $generated@@67)) (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@651) $generated@@173)) (= (type $generated@@652) $generated@@173)) (= (type $generated@@653) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@655  (=> (= $generated@@645 ($generated@@184 $generated@@138 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= 0 ($generated@@259 8))) (=> (<= 0 ($generated@@259 8)) (=> (and (and (and (not (= $generated@@647 $generated@@138)) (= ($generated@@139 $generated@@647) ($generated@@137 $generated@@648))) (not ($generated@@0 ($generated@@87 ($generated@@85 $generated@@646 $generated@@647) $generated@@60)))) (and (and (= ($generated@@136 $generated@@647) ($generated@@259 8)) (= $generated@@649 ($generated@@86 $generated@@646 $generated@@647 ($generated@@88 ($generated@@85 $generated@@646 $generated@@647) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@649) ($generated@@650 $generated@@649)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 ($generated@@259 3)) (< ($generated@@259 3) ($generated@@136 $generated@@647))))))))))))
(let (($generated@@656  (=> (and ($generated@@152 $generated@@646) ($generated@@650 $generated@@646)) (=> (and (and ($generated@@240 $generated@@651 $generated@@648) ($generated@@265 $generated@@651 $generated@@648 $generated@@646)) (and ($generated@@240 $generated@@652 $generated@@648) ($generated@@265 $generated@@652 $generated@@648 $generated@@646))) (=> (and (and (and ($generated@@140 $generated@@653 ($generated@@157 $generated@@648)) ($generated@@78 $generated@@653 ($generated@@157 $generated@@648) $generated@@646)) true) (and (= 1 $generated@@654) (= (ControlFlow 0 5) 2))) $generated@@655)))))
$generated@@656)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 32768))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 32768)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 32768)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 32768))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@400 $generated@@402))) (and ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))) ($generated@@132 $generated@@400 $generated@@402))
 :pattern ( ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@299 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@299 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@366 $generated@@411) ($generated@@403 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@285 (type $generated@@414))))
(let (($generated@@416 ($generated@@284 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@283 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@282 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@149) (= (type $generated@@418) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@414) ($generated@@262 ($generated@@215 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@355 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@149) (= (type $generated@@423) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@419) ($generated@@262 ($generated@@215 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@149) ($generated@@216 $generated@@424 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@424)) $generated@@424) ($generated@@136 ($generated@@356 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@149) ($generated@@216 $generated@@425 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@425)) $generated@@425) ($generated@@136 ($generated@@356 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@149) ($generated@@216 $generated@@426 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@426)) $generated@@426) ($generated@@136 ($generated@@356 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@149) ($generated@@216 $generated@@428 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@427 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@356 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@429) $generated@@430) ($generated@@136 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@275 $generated@@431))))
 :pattern ( ($generated@@275 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@257 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@256 $generated@@434)) (<= 0 ($generated@@255 $generated@@433))))
 :pattern ( ($generated@@255 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@384 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@384 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@384 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@384 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@392 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@392 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@392 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) (= (type $generated@@456) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@139 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@139 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@139 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@139 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@149) (= (type $generated@@466) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@215 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) (= (type $generated@@468) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@215 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@257 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@256 $generated@@149)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@255 $generated@@475))) ($generated@@242 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@225 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@225 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@230 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@154 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@154 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@356 $generated@@498 ($generated@@262 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@262 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@499) $generated@@502) $generated@@501) ($generated@@216 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@503) $generated@@506) $generated@@505) ($generated@@216 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@149) (= (type $generated@@510) $generated@@149)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@215 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@215 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) (= (type $generated@@512) $generated@@149)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@215 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@215 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@149) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513)) $generated@@513) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513) ($generated@@384 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@149) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516) ($generated@@392 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@149)) ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@356 $generated@@140 $generated@@521) ($generated@@139 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@526 $generated@@527)) $generated@@62) (= ($generated@@524 ($generated@@139 $generated@@526 $generated@@527)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@140) (= ($generated@@507 ($generated@@262 $generated@@528)) ($generated@@508 $generated@@528)))
 :pattern ( ($generated@@507 ($generated@@262 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@149) ($generated@@216 $generated@@529 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@149) (= (type $generated@@531) $generated@@64)) ($generated@@216 $generated@@530 ($generated@@225 $generated@@531))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@530)) $generated@@530) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@530) ($generated@@225 $generated@@531))))
 :pattern ( ($generated@@216 $generated@@530 ($generated@@225 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@149) (= (type $generated@@533) $generated@@64)) ($generated@@216 $generated@@532 ($generated@@230 $generated@@533))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532)) $generated@@532) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532) ($generated@@230 $generated@@533))))
 :pattern ( ($generated@@216 $generated@@532 ($generated@@230 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@149) (= (type $generated@@535) $generated@@64)) ($generated@@216 $generated@@534 ($generated@@154 $generated@@535))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@534)) $generated@@534) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@534) ($generated@@154 $generated@@535))))
 :pattern ( ($generated@@216 $generated@@534 ($generated@@154 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@149) (= (type $generated@@537) $generated@@64)) ($generated@@216 $generated@@536 ($generated@@469 $generated@@537))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@536)) $generated@@536) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@536) ($generated@@469 $generated@@537))))
 :pattern ( ($generated@@216 $generated@@536 ($generated@@469 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@154 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@242 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@154 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@140) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@544) (and ($generated@@138 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@139 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@139 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@242 ($generated@@147 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@140) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@548) (and ($generated@@138 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@139 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@139 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@242 ($generated@@148 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@149) (= (type $generated@@551) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@550) ($generated@@237 $generated@@551)) ($generated@@237 ($generated@@215 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@550) ($generated@@237 $generated@@551)))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@552))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@552))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@552))))
)))
(assert (forall (($generated@@553 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@553)) ($generated@@237 ($generated@@262 $generated@@553)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@257 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@256 $generated@@555)) (= ($generated@@255 $generated@@554) 0)) (= $generated@@554 ($generated@@254 $generated@@555))))
 :pattern ( ($generated@@255 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@275 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@275 $generated@@556) ($generated ($generated@@81 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@2)) ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@3)) ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@4)) ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@427)) ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@149)) ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@256 $generated@@149)) (= (type $generated@@571) $generated@@64)) (= ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@255 $generated@@570))) ($generated@@216 ($generated@@470 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@470 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@255 $generated@@574))) (< ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@136 $generated@@576 ($generated@@384 $generated@@577 $generated@@578))) (and (and ($generated@@136 ($generated@@281 $generated@@576) ($generated@@225 $generated@@577)) ($generated@@136 ($generated@@324 $generated@@576) ($generated@@225 $generated@@578))) ($generated@@136 ($generated@@355 $generated@@576) ($generated@@225 ($generated@@139 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@136 $generated@@576 ($generated@@384 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@392 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@299 $generated@@579) ($generated@@230 $generated@@580)) ($generated@@136 ($generated@@335 $generated@@579) ($generated@@230 $generated@@581))) ($generated@@136 ($generated@@366 $generated@@579) ($generated@@230 ($generated@@139 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@392 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@136 $generated@@582 $generated@@46))
 :pattern ( ($generated@@136 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@136 $generated@@583 $generated@@47))
 :pattern ( ($generated@@136 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@136 $generated@@584 $generated@@44))
 :pattern ( ($generated@@136 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@427) ($generated@@136 $generated@@585 $generated@@45))
 :pattern ( ($generated@@136 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@149) ($generated@@136 $generated@@586 $generated@@48))
 :pattern ( ($generated@@136 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 (T@U) Bool)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Int)
(assert  (and (and (and (and (and (= (type $generated@@588) ($generated@@161 $generated@@77 $generated@@4)) (= (type $generated@@589) $generated@@77)) (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@592) $generated@@149)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@149)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@596  (=> (and (and (not (= $generated@@587 ($generated@@235 0))) (not (= $generated@@587 ($generated@@235 1)))) (= (ControlFlow 0 4) (- 0 3))) false)))
(let (($generated@@597 true))
(let (($generated@@598 true))
(let (($generated@@599  (=> (= $generated@@588 ($generated@@160 $generated@@589 $generated@@590 $generated@@60 false)) (and (and (=> (= (ControlFlow 0 5) 1) $generated@@598) (=> (= (ControlFlow 0 5) 2) $generated@@597)) (=> (= (ControlFlow 0 5) 4) $generated@@596)))))
(let (($generated@@600  (=> (and (and ($generated@@241 $generated@@590) ($generated@@591 $generated@@590)) (and ($generated@@216 $generated@@592 $generated@@593) ($generated@@242 $generated@@592 $generated@@593 $generated@@590))) (=> (and (and (and ($generated@@216 $generated@@594 $generated@@593) ($generated@@242 $generated@@594 $generated@@593 $generated@@590)) (= 2 $generated@@595)) (and (or (= $generated@@587 ($generated@@235 0)) (= $generated@@587 ($generated@@235 1))) (= (ControlFlow 0 6) 5))) $generated@@599))))
$generated@@600))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 32768))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 32768)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 32768)) ($generated@@157 (- 0 35)))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< (- 0 35) 32768))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@334 () T@U)
(declare-fun $generated@@335 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@365 (Int Int) Int)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@66) $generated@@75)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 14) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@70) (= (type $generated@@153) $generated@@70)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@70)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@82 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@70)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@83 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@73 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@83) (= (type $generated@@218) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@219) ($generated@@72 $generated@@4))) (= (type $generated@@221) $generated@@83)) (= (type $generated@@222) ($generated@@72 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@149)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@70) (= (type $generated@@229) $generated@@70)) (= (type $generated@@230) $generated@@158)) (= (type $generated@@231) $generated@@158)) (= ($generated@@145 ($generated@@224 $generated@@230 $generated@@231) ($generated@@148 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@145 ($generated@@224 $generated@@230 $generated@@231) ($generated@@148 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@149) (= (type $generated@@233) $generated@@149)) (= ($generated@@155 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@155 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@70)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@237) $generated@@70)) (= ($generated@@145 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@158) ($generated@@0 ($generated@@87 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@87 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@145 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@70)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@242) $generated@@70)) (= ($generated@@145 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@158) ($generated@@0 ($generated@@87 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@87 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@145 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@70) (= (type $generated@@253) $generated@@70)) (= (type $generated@@254) $generated@@158)) (= (type $generated@@255) $generated@@158)) (= (type $generated@@256) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@250 $generated@@256)) (= ($generated@@80 ($generated@@224 $generated@@254 $generated@@255) ($generated@@148 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@80 ($generated@@224 $generated@@254 $generated@@255) ($generated@@148 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@74)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@149) (= ($generated@@147 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@149) ($generated@@147 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@158) (= (type $generated@@262) $generated@@158)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@147 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@158)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@70) (= (type $generated@@275) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@80 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@277) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@278) $generated@@158)) (= (type $generated@@279) $generated@@70)) ($generated@@138 $generated@@276 $generated@@277)) ($generated@@251 $generated@@278 $generated@@279 $generated@@276)) ($generated@@251 $generated@@278 $generated@@279 $generated@@277))
 :pattern ( ($generated@@138 $generated@@276 $generated@@277) ($generated@@251 $generated@@278 $generated@@279 $generated@@276))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@280) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@281) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@283) $generated@@70)) ($generated@@138 $generated@@280 $generated@@281)) ($generated@@80 $generated@@282 $generated@@283 $generated@@280)) ($generated@@80 $generated@@282 $generated@@283 $generated@@281))
 :pattern ( ($generated@@138 $generated@@280 $generated@@281) ($generated@@80 $generated@@282 $generated@@283 $generated@@280))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@82 $generated@@286 $generated@@2))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@85 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@82 $generated@@288 $generated@@2)) (and (= (= ($generated@@284 $generated@@287) 0) (= $generated@@287 ($generated@@285 $generated@@288))) (=> (not (= ($generated@@284 $generated@@287) 0)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) $generated@@288) (< 0 ($generated ($generated@@87 $generated@@287 $generated@@289))))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert  (and (forall (($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@292)) $generated@@70)
 :pattern ( ($generated@@290 $generated@@292))
)) (forall (($generated@@293 T@U) ) (! (= (type ($generated@@291 $generated@@293)) $generated@@75)
 :pattern ( ($generated@@291 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@70) (and (= ($generated@@78 ($generated@@290 $generated@@294)) $generated@@64) (= ($generated@@291 ($generated@@290 $generated@@294)) $generated@@68)))
 :pattern ( ($generated@@290 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@82 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@87 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@87 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@82 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@85 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@82 $generated@@332 $generated@@2)) (= ($generated@@164 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@87 $generated@@331 $generated@@333))) (<= ($generated ($generated@@87 $generated@@331 $generated@@333)) ($generated@@284 $generated@@331))))
 :pattern ( ($generated@@87 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@164 $generated@@331))
)))
(assert  (and (= (type $generated@@334) $generated@@70) (forall (($generated@@336 T@T) ($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@158) ($generated@@225 $generated@@338 $generated@@334)) (and (= ($generated@@271 ($generated@@335 $generated@@149 $generated@@338)) $generated@@338) ($generated@@145 ($generated@@335 $generated@@149 $generated@@338) $generated@@334)))
 :pattern ( ($generated@@225 $generated@@338 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@158) ($generated@@225 $generated@@339 $generated@@142)) (and (= ($generated@@271 ($generated@@335 $generated@@2 $generated@@339)) $generated@@339) ($generated@@145 ($generated@@335 $generated@@2 $generated@@339) $generated@@142)))
 :pattern ( ($generated@@225 $generated@@339 $generated@@142))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@299 (type $generated@@340))))
(let (($generated@@342 ($generated@@298 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@297 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@296 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@295 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@299 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@82 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@299 (type $generated@@347))))
(let (($generated@@349 ($generated@@298 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@297 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@296 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@87 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@317 (type $generated@@351))))
(let (($generated@@353 ($generated@@316 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@315 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@314 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@313 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@317 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@82 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@317 (type $generated@@358))))
(let (($generated@@360 ($generated@@316 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@315 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@314 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@82 $generated@@158 $generated@@2)) (= (type $generated@@363) $generated@@70)) (= ($generated@@145 $generated@@362 ($generated@@163 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@158) (< 0 ($generated ($generated@@87 $generated@@362 $generated@@364)))) ($generated@@225 $generated@@364 $generated@@363))
 :pattern ( ($generated@@87 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@145 $generated@@362 ($generated@@163 $generated@@363)))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@2) (= ($generated@@145 $generated@@366 $generated@@142) (= ($generated@@365 ($generated $generated@@366) ($generated@@244 2)) ($generated@@244 0))))
 :pattern ( ($generated@@145 $generated@@366 $generated@@142))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@368) $generated@@70)) (= (type $generated@@369) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@367 ($generated@@234 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@158) ($generated@@0 ($generated@@87 $generated@@367 $generated@@370))) ($generated@@251 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@87 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@80 $generated@@367 ($generated@@234 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@372) $generated@@70)) (= (type $generated@@373) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@371 ($generated@@239 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@158) ($generated@@0 ($generated@@87 $generated@@371 $generated@@374))) ($generated@@251 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@87 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@80 $generated@@371 ($generated@@239 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated ($generated@@87 ($generated@@285 $generated@@376) $generated@@375)) 0))
 :pattern ( (let (($generated@@376 (type $generated@@375)))
($generated@@87 ($generated@@285 $generated@@376) $generated@@375)))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@82 $generated@@158 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@299 (type $generated@@380))))
(let (($generated@@382 ($generated@@298 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@82 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@297 $generated@@158 $generated@@158)) (= (type $generated@@384) $generated@@158)) (= ($generated@@0 ($generated@@87 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@87 ($generated@@295 $generated@@383) ($generated@@156 ($generated@@335 $generated@@149 $generated@@384)))) (= ($generated@@87 ($generated@@378 $generated@@383) ($generated@@156 ($generated@@335 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@335 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@317 (type $generated@@388))))
(let (($generated@@390 ($generated@@316 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@158)) (= ($generated@@0 ($generated@@87 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@391) ($generated@@156 ($generated@@335 $generated@@149 $generated@@392)))) (= ($generated@@87 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@335 $generated@@149 $generated@@392))) ($generated@@157 ($generated@@335 $generated@@149 $generated@@392))))))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@298 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@297 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@87 ($generated@@344 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@87 ($generated@@295 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@87 ($generated@@378 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@393) $generated@@397))
 :pattern ( ($generated@@87 ($generated@@378 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@87 ($generated@@344 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@316 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@315 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@87 ($generated@@355 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@87 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@398) $generated@@402))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@87 ($generated@@355 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@70)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@297 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@70)) (= (type $generated@@408) $generated@@70)) (= (type $generated@@409) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@406) $generated@@410))) (and ($generated@@251 ($generated@@87 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@251 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@87 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@80 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@70)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@414) $generated@@418))) (and ($generated@@251 ($generated@@87 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@251 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@80 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@419) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@419 $generated@@421))) (and ($generated@@138 $generated@@419 $generated@@420) ($generated@@138 $generated@@420 $generated@@421))) ($generated@@138 $generated@@419 $generated@@421))
 :pattern ( ($generated@@138 $generated@@419 $generated@@420) ($generated@@138 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@82 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@317 (type $generated@@424))))
(let (($generated@@426 ($generated@@316 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@315 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@314 $generated@@426 $generated@@425)) (= ($generated@@313 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@313 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@317 (type $generated@@427))))
(let (($generated@@429 ($generated@@316 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@315 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@314 $generated@@429 $generated@@428)) (= ($generated@@355 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@355 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@317 (type $generated@@430))))
(let (($generated@@432 ($generated@@316 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@315 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@314 $generated@@432 $generated@@431)) (= ($generated@@385 $generated@@430) ($generated@@422 $generated@@158))))))
 :pattern ( ($generated@@385 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@299 (type $generated@@433))))
(let (($generated@@435 ($generated@@298 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@297 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@296 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@158) (= (type $generated@@437) $generated@@158)) ($generated@@0 ($generated@@87 ($generated@@377 $generated@@433) ($generated@@271 ($generated@@224 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@377 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@317 (type $generated@@438))))
(let (($generated@@440 ($generated@@316 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@315 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@314 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@158) (= (type $generated@@442) $generated@@158)) ($generated@@0 ($generated@@87 ($generated@@385 $generated@@438) ($generated@@271 ($generated@@224 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@158) ($generated@@225 $generated@@443 $generated@@46)) (and (= ($generated@@271 ($generated@@335 $generated@@2 $generated@@443)) $generated@@443) ($generated@@145 ($generated@@335 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@225 $generated@@444 $generated@@47)) (and (= ($generated@@271 ($generated@@335 $generated@@3 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@335 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@158) ($generated@@225 $generated@@445 $generated@@44)) (and (= ($generated@@271 ($generated@@335 $generated@@4 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@335 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@158) ($generated@@225 $generated@@447 $generated@@45)) (and (= ($generated@@271 ($generated@@335 $generated@@446 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@335 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@70) (= ($generated@@225 ($generated@@271 $generated@@448) $generated@@449) ($generated@@145 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@85 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@82 $generated@@451 $generated@@2)) (<= 0 ($generated@@284 $generated@@450))))
 :pattern ( ($generated@@284 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@266 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@265 $generated@@453)) (<= 0 ($generated@@264 $generated@@452))))
 :pattern ( ($generated@@264 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@70) (= (type $generated@@457) $generated@@70)) (= ($generated@@454 ($generated@@403 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@403 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@70) (= (type $generated@@461) $generated@@70)) (= ($generated@@458 ($generated@@403 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@403 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@78 ($generated@@403 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@464 ($generated@@411 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@411 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@468 ($generated@@411 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@411 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@78 ($generated@@411 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@158) (= (type $generated@@475) $generated@@158)) (= ($generated@@257 ($generated@@224 $generated@@474 $generated@@475)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@148 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@148 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@148 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@148 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@158) (= (type $generated@@485) $generated@@158)) (= ($generated@@156 ($generated@@224 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@224 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@158) (= (type $generated@@487) $generated@@158)) (= ($generated@@157 ($generated@@224 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@224 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@266 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@265 $generated@@158)) (= (type $generated@@495) $generated@@70)) (= (type $generated@@496) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@264 $generated@@494))) ($generated@@251 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@80 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@81 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@81 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@70) (= ($generated@@500 ($generated@@234 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@234 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@78 ($generated@@234 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@504 ($generated@@239 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@239 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@78 ($generated@@239 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@163 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@163 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@163 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@290 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@290 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@335 $generated@@520 ($generated@@271 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@271 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@297 $generated@@158 $generated@@158)) (= (type $generated@@522) $generated@@70)) (= (type $generated@@523) $generated@@70)) (= ($generated@@145 $generated@@521 ($generated@@403 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@521) $generated@@524))) (and ($generated@@225 ($generated@@87 ($generated@@378 $generated@@521) $generated@@524) $generated@@523) ($generated@@225 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@87 ($generated@@378 $generated@@521) $generated@@524))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@145 $generated@@521 ($generated@@403 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) $generated@@70)) (= ($generated@@145 $generated@@525 ($generated@@411 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@525) $generated@@528))) (and ($generated@@225 ($generated@@87 ($generated@@386 $generated@@525) $generated@@528) $generated@@527) ($generated@@225 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@525) $generated@@528))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@145 $generated@@525 ($generated@@411 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@158) (= (type $generated@@532) $generated@@158)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@224 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@224 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@158) (= (type $generated@@534) $generated@@158)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@224 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@224 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@158) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) ($generated@@225 $generated@@535 ($generated@@403 $generated@@536 $generated@@537))) (and (= ($generated@@271 ($generated@@335 ($generated@@297 $generated@@158 $generated@@158) $generated@@535)) $generated@@535) ($generated@@145 ($generated@@335 ($generated@@297 $generated@@158 $generated@@158) $generated@@535) ($generated@@403 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@225 $generated@@535 ($generated@@403 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@158) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) ($generated@@225 $generated@@538 ($generated@@411 $generated@@539 $generated@@540))) (and (= ($generated@@271 ($generated@@335 ($generated@@315 $generated@@158 $generated@@158) $generated@@538)) $generated@@538) ($generated@@145 ($generated@@335 ($generated@@315 $generated@@158 $generated@@158) $generated@@538) ($generated@@411 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@225 $generated@@538 ($generated@@411 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@158)) ($generated@@225 $generated@@543 ($generated@@148 $generated@@541 $generated@@542))) (and (= ($generated@@271 ($generated@@335 $generated@@149 $generated@@543)) $generated@@543) ($generated@@145 ($generated@@335 $generated@@149 $generated@@543) ($generated@@148 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@225 $generated@@543 ($generated@@148 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@87 ($generated@@422 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@87 ($generated@@422 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@546 Int) ($generated@@547 Int) ) (! (= ($generated@@365 $generated@@546 $generated@@547) (mod $generated@@546 $generated@@547))
 :pattern ( ($generated@@365 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@70) (= (type $generated@@549) $generated@@70)) (and (= ($generated@@78 ($generated@@148 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@291 ($generated@@148 $generated@@548 $generated@@549)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@149) (= ($generated@@529 ($generated@@271 $generated@@550)) ($generated@@530 $generated@@550)))
 :pattern ( ($generated@@529 ($generated@@271 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@158) ($generated@@225 $generated@@551 ($generated@@81 0))) (and (= ($generated@@271 ($generated@@335 $generated@@2 $generated@@551)) $generated@@551) ($generated@@145 ($generated@@335 ($generated@@82 $generated@@158 $generated@@4) $generated@@551) ($generated@@81 0))))
 :pattern ( ($generated@@225 $generated@@551 ($generated@@81 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@158) (= (type $generated@@553) $generated@@70)) ($generated@@225 $generated@@552 ($generated@@234 $generated@@553))) (and (= ($generated@@271 ($generated@@335 ($generated@@82 $generated@@158 $generated@@4) $generated@@552)) $generated@@552) ($generated@@145 ($generated@@335 ($generated@@82 $generated@@158 $generated@@4) $generated@@552) ($generated@@234 $generated@@553))))
 :pattern ( ($generated@@225 $generated@@552 ($generated@@234 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@158) (= (type $generated@@555) $generated@@70)) ($generated@@225 $generated@@554 ($generated@@239 $generated@@555))) (and (= ($generated@@271 ($generated@@335 ($generated@@82 $generated@@158 $generated@@4) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@335 ($generated@@82 $generated@@158 $generated@@4) $generated@@554) ($generated@@239 $generated@@555))))
 :pattern ( ($generated@@225 $generated@@554 ($generated@@239 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@158) (= (type $generated@@557) $generated@@70)) ($generated@@225 $generated@@556 ($generated@@163 $generated@@557))) (and (= ($generated@@271 ($generated@@335 ($generated@@82 $generated@@158 $generated@@2) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@335 ($generated@@82 $generated@@158 $generated@@2) $generated@@556) ($generated@@163 $generated@@557))))
 :pattern ( ($generated@@225 $generated@@556 ($generated@@163 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@158) (= (type $generated@@559) $generated@@70)) ($generated@@225 $generated@@558 ($generated@@488 $generated@@559))) (and (= ($generated@@271 ($generated@@335 ($generated@@265 $generated@@158) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@335 ($generated@@265 $generated@@158) $generated@@558) ($generated@@488 $generated@@559))))
 :pattern ( ($generated@@225 $generated@@558 ($generated@@488 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@70) (= (type $generated@@561) $generated@@158)) ($generated@@225 $generated@@561 ($generated@@290 $generated@@560))) (and (= ($generated@@271 ($generated@@335 $generated@@149 $generated@@561)) $generated@@561) ($generated@@145 ($generated@@335 $generated@@149 $generated@@561) ($generated@@290 $generated@@560))))
 :pattern ( ($generated@@225 $generated@@561 ($generated@@290 $generated@@560)))
)))
(assert (= ($generated@@78 $generated@@334) $generated@@63))
(assert (= ($generated@@291 $generated@@334) $generated@@67))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@291 $generated@@142) $generated@@69))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@82 $generated@@158 $generated@@2)) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@562 ($generated@@163 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@158) (< 0 ($generated ($generated@@87 $generated@@562 $generated@@565)))) ($generated@@251 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@87 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@80 $generated@@562 ($generated@@163 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@149) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@250 $generated@@568) (and ($generated@@147 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@70) ($generated@@80 $generated@@566 ($generated@@148 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@148 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@251 ($generated@@156 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@251 ($generated@@156 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@149) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@250 $generated@@572) (and ($generated@@147 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@70) ($generated@@80 $generated@@570 ($generated@@148 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@148 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@251 ($generated@@157 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@251 ($generated@@157 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@158) (= (type $generated@@575) $generated@@158)) (= ($generated@@224 ($generated@@246 $generated@@574) ($generated@@246 $generated@@575)) ($generated@@246 ($generated@@224 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@574) ($generated@@246 $generated@@575)))
)))
(assert (forall (($generated@@576 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@576))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@576))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@577)) ($generated@@246 ($generated@@271 $generated@@577)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@266 (type $generated@@578))))
 (=> (and (= (type $generated@@578) ($generated@@265 $generated@@579)) (= ($generated@@264 $generated@@578) 0)) (= $generated@@578 ($generated@@263 $generated@@579))))
 :pattern ( ($generated@@264 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@581)))
 (=> (and (and (= (type $generated@@580) ($generated@@82 $generated@@583 $generated@@2)) (= (type $generated@@582) $generated@@2)) (<= 0 ($generated $generated@@582))) (= ($generated@@284 ($generated@@88 $generated@@580 $generated@@581 $generated@@582)) (+ (- ($generated@@284 $generated@@580) ($generated ($generated@@87 $generated@@580 $generated@@581))) ($generated $generated@@582)))))
 :pattern ( ($generated@@284 ($generated@@88 $generated@@580 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@2)) ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@3)) ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@4)) ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@446)) ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@158)) ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@265 $generated@@158)) (= (type $generated@@595) $generated@@70)) (= ($generated@@145 $generated@@594 ($generated@@488 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@264 $generated@@594))) ($generated@@225 ($generated@@489 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@489 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@145 $generated@@594 ($generated@@488 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@265 $generated@@158)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@264 $generated@@598))) (< ($generated@@530 ($generated@@335 $generated@@149 ($generated@@489 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@530 ($generated@@335 $generated@@149 ($generated@@489 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@297 $generated@@158 $generated@@158)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@145 $generated@@600 ($generated@@403 $generated@@601 $generated@@602))) (and (and ($generated@@145 ($generated@@295 $generated@@600) ($generated@@234 $generated@@601)) ($generated@@145 ($generated@@344 $generated@@600) ($generated@@234 $generated@@602))) ($generated@@145 ($generated@@377 $generated@@600) ($generated@@234 ($generated@@148 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@145 $generated@@600 ($generated@@403 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@145 $generated@@603 ($generated@@411 $generated@@604 $generated@@605))) (and (and ($generated@@145 ($generated@@313 $generated@@603) ($generated@@239 $generated@@604)) ($generated@@145 ($generated@@355 $generated@@603) ($generated@@239 $generated@@605))) ($generated@@145 ($generated@@385 $generated@@603) ($generated@@239 ($generated@@148 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@145 $generated@@603 ($generated@@411 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@145 $generated@@606 $generated@@46))
 :pattern ( ($generated@@145 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@145 $generated@@607 $generated@@47))
 :pattern ( ($generated@@145 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@145 $generated@@608 $generated@@44))
 :pattern ( ($generated@@145 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@446) ($generated@@145 $generated@@609 $generated@@45))
 :pattern ( ($generated@@145 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@158) ($generated@@145 $generated@@610 $generated@@48))
 :pattern ( ($generated@@145 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () Real)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () Real)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@611) ($generated@@170 $generated@@83 $generated@@4)) (= (type $generated@@612) $generated@@83)) (= (type $generated@@613) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@614) $generated@@158)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@158)) (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@621) $generated@@158)) (= (type $generated@@623) $generated@@446)) (= (type $generated@@624) $generated@@158)) (= (type $generated@@625) $generated@@70)) (= (type $generated@@626) $generated@@158)) (= (type $generated@@627) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@628) $generated@@158)) (= (type $generated@@629) $generated@@446)) (= (type $generated@@630) ($generated@@82 $generated@@158 $generated@@4))) (= (type $generated@@631) $generated@@158)) (= (type $generated@@632) $generated@@70)) (= (type $generated@@633) $generated@@70)) (= (type $generated@@634) $generated@@158)) (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@636) $generated@@158)) (= (type $generated@@637) ($generated@@82 $generated@@158 $generated@@4))) (= (type $generated@@638) $generated@@149)) (= (type $generated@@639) $generated@@158)) (= (type $generated@@640) $generated@@70)) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) $generated@@158)) (= (type $generated@@643) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@644) $generated@@158)) (= (type $generated@@645) $generated@@149)) (= (type $generated@@646) $generated@@149)) (= (type $generated@@647) $generated@@158)) (= (type $generated@@648) $generated@@70)) (= (type $generated@@649) $generated@@70)) (= (type $generated@@650) $generated@@158)) (= (type $generated@@651) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@652) $generated@@158)) (= (type $generated@@653) $generated@@149)) (= (type $generated@@654) $generated@@149)) (= (type $generated@@655) $generated@@158)) (= (type $generated@@656) $generated@@70)) (= (type $generated@@657) $generated@@70)) (= (type $generated@@658) $generated@@158)) (= (type $generated@@659) $generated@@446)) (= (type $generated@@660) $generated@@446)) (= (type $generated@@661) ($generated@@82 $generated@@158 $generated@@4))) (= (type $generated@@662) ($generated@@82 $generated@@158 $generated@@4))) (= (type $generated@@663) $generated@@149)) (= (type $generated@@664) $generated@@149)) (= (type $generated@@665) $generated@@149)) (= (type $generated@@666) $generated@@149)) (= (type $generated@@667) $generated@@149)) (= (type $generated@@668) $generated@@149)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@670  (=> (= $generated@@611 ($generated@@169 $generated@@612 $generated@@613 $generated@@60 false)) (=> (and (and ($generated@@225 $generated@@614 $generated@@615) ($generated@@251 $generated@@614 $generated@@615 $generated@@613)) (= $generated@@616 ($generated@@271 ($generated@@9 $generated@@617)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1)))) (=> (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1))) (=> (and (and ($generated@@250 $generated@@619) ($generated@@620 $generated@@619)) (and ($generated@@225 $generated@@621 $generated@@47) ($generated@@251 $generated@@621 $generated@@47 $generated@@619))) (=> (and (and (and (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@83) (=> (and (not (= $generated@@671 $generated@@612)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@613 $generated@@671) $generated@@60))) (= ($generated@@87 $generated@@619 $generated@@671) ($generated@@87 $generated@@613 $generated@@671))))
 :pattern ( ($generated@@87 $generated@@619 $generated@@671))
)) ($generated@@138 $generated@@613 $generated@@619)) (and (= $generated@@622 ($generated@@10 ($generated@@335 $generated@@3 $generated@@621))) ($generated@@145 $generated@@623 $generated@@45))) (and (and ($generated@@225 $generated@@624 $generated@@625) ($generated@@251 $generated@@624 $generated@@625 $generated@@613)) (= $generated@@626 ($generated@@271 $generated@@623)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1)))) (=> (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1))) (=> (and ($generated@@250 $generated@@627) ($generated@@620 $generated@@627)) (=> (and (and ($generated@@225 $generated@@628 $generated@@45) ($generated@@251 $generated@@628 $generated@@45 $generated@@627)) (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@83) (=> (and (not (= $generated@@672 $generated@@612)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@619 $generated@@672) $generated@@60))) (= ($generated@@87 $generated@@627 $generated@@672) ($generated@@87 $generated@@619 $generated@@672))))
 :pattern ( ($generated@@87 $generated@@627 $generated@@672))
))) (=> (and (and (and ($generated@@138 $generated@@619 $generated@@627) (= $generated@@629 ($generated@@335 $generated@@446 $generated@@628))) (and ($generated@@145 $generated@@630 ($generated@@234 $generated@@47)) ($generated@@80 $generated@@630 ($generated@@234 $generated@@47) $generated@@627))) (and (and ($generated@@225 $generated@@631 $generated@@632) ($generated@@251 $generated@@631 $generated@@632 $generated@@613)) (and (= $generated@@633 ($generated@@234 $generated@@47)) (= $generated@@634 ($generated@@271 $generated@@630))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1)))) (=> (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1))) (=> (and ($generated@@250 $generated@@635) ($generated@@620 $generated@@635)) (=> (and (and ($generated@@225 $generated@@636 $generated@@633) ($generated@@251 $generated@@636 $generated@@633 $generated@@635)) (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@83) (=> (and (not (= $generated@@673 $generated@@612)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@627 $generated@@673) $generated@@60))) (= ($generated@@87 $generated@@635 $generated@@673) ($generated@@87 $generated@@627 $generated@@673))))
 :pattern ( ($generated@@87 $generated@@635 $generated@@673))
))) (=> (and (and (and ($generated@@138 $generated@@627 $generated@@635) (= $generated@@637 ($generated@@335 ($generated@@82 $generated@@158 $generated@@4) $generated@@636))) (and ($generated@@145 $generated@@638 $generated@@334) ($generated@@80 $generated@@638 $generated@@334 $generated@@635))) (and (and ($generated@@225 $generated@@639 $generated@@640) ($generated@@251 $generated@@639 $generated@@640 $generated@@613)) (and (= $generated@@641 $generated@@334) (= $generated@@642 ($generated@@271 $generated@@638))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1)))) (=> (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1))) (=> (and ($generated@@250 $generated@@643) ($generated@@620 $generated@@643)) (=> (and (and ($generated@@225 $generated@@644 $generated@@641) ($generated@@251 $generated@@644 $generated@@641 $generated@@643)) (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@83) (=> (and (not (= $generated@@674 $generated@@612)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@635 $generated@@674) $generated@@60))) (= ($generated@@87 $generated@@643 $generated@@674) ($generated@@87 $generated@@635 $generated@@674))))
 :pattern ( ($generated@@87 $generated@@643 $generated@@674))
))) (=> (and (and (and ($generated@@138 $generated@@635 $generated@@643) (= $generated@@645 ($generated@@335 $generated@@149 $generated@@644))) (and ($generated@@145 $generated@@646 ($generated@@290 ($generated@@488 $generated@@46))) ($generated@@80 $generated@@646 ($generated@@290 ($generated@@488 $generated@@46)) $generated@@643))) (and (and ($generated@@225 $generated@@647 $generated@@648) ($generated@@251 $generated@@647 $generated@@648 $generated@@613)) (and (= $generated@@649 ($generated@@290 ($generated@@488 $generated@@46))) (= $generated@@650 ($generated@@271 $generated@@646))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1)))) (=> (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1))) (=> (and ($generated@@250 $generated@@651) ($generated@@620 $generated@@651)) (=> (and (and (and (and ($generated@@225 $generated@@652 $generated@@649) ($generated@@251 $generated@@652 $generated@@649 $generated@@651)) (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@83) (=> (and (not (= $generated@@675 $generated@@612)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@643 $generated@@675) $generated@@60))) (= ($generated@@87 $generated@@651 $generated@@675) ($generated@@87 $generated@@643 $generated@@675))))
 :pattern ( ($generated@@87 $generated@@651 $generated@@675))
))) (and (and ($generated@@138 $generated@@643 $generated@@651) (= $generated@@653 ($generated@@335 $generated@@149 $generated@@652))) (and ($generated@@145 $generated@@654 ($generated@@290 $generated@@142)) ($generated@@80 $generated@@654 ($generated@@290 $generated@@142) $generated@@651)))) (and (and (and ($generated@@225 $generated@@655 $generated@@656) ($generated@@251 $generated@@655 $generated@@656 $generated@@613)) (= $generated@@657 ($generated@@290 $generated@@142))) (and (= $generated@@658 ($generated@@271 $generated@@654)) (= (ControlFlow 0 2) (- 0 1))))) (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1))))))))))))))))))))))))))))))
(let (($generated@@676  (=> (and ($generated@@250 $generated@@613) ($generated@@620 $generated@@613)) (=> (and (and (and (and ($generated@@145 $generated@@659 $generated@@45) true) (and ($generated@@145 $generated@@660 $generated@@45) true)) (and (and ($generated@@145 $generated@@661 ($generated@@234 $generated@@47)) ($generated@@80 $generated@@661 ($generated@@234 $generated@@47) $generated@@613)) true)) (and (and (and ($generated@@145 $generated@@662 ($generated@@234 $generated@@47)) ($generated@@80 $generated@@662 ($generated@@234 $generated@@47) $generated@@613)) true) (and (and ($generated@@145 $generated@@663 $generated@@334) ($generated@@80 $generated@@663 $generated@@334 $generated@@613)) true))) (=> (and (and (and (and (and ($generated@@145 $generated@@664 $generated@@334) ($generated@@80 $generated@@664 $generated@@334 $generated@@613)) true) (and (and ($generated@@145 $generated@@665 ($generated@@290 ($generated@@488 $generated@@46))) ($generated@@80 $generated@@665 ($generated@@290 ($generated@@488 $generated@@46)) $generated@@613)) true)) (and (and (and ($generated@@145 $generated@@666 ($generated@@290 ($generated@@488 $generated@@46))) ($generated@@80 $generated@@666 ($generated@@290 ($generated@@488 $generated@@46)) $generated@@613)) true) (and (and ($generated@@145 $generated@@667 ($generated@@290 $generated@@142)) ($generated@@80 $generated@@667 ($generated@@290 $generated@@142) $generated@@613)) true))) (and (and (and (and ($generated@@145 $generated@@668 ($generated@@290 $generated@@142)) ($generated@@80 $generated@@668 ($generated@@290 $generated@@142) $generated@@613)) true) (= 3 $generated@@669)) (and (or (= $generated@@618 ($generated@@244 0)) (= $generated@@618 ($generated@@244 1))) (= (ControlFlow 0 8) 2)))) $generated@@670)))))
$generated@@676)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Real) Real)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Real) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Real) ) (! (= ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@9 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@180 true))
(let (($generated@@181 true))
(let (($generated@@182  (=> (= (ControlFlow 0 2) (- 0 1)) (or (= ($generated@@157 3.14) ($generated@@157 3.14)) (= ($generated@@157 3.14) ($generated@@157 2.7))))))
(let (($generated@@183  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (and (and (=> (= (ControlFlow 0 5) 2) $generated@@182) (=> (= (ControlFlow 0 5) 3) $generated@@181)) (=> (= (ControlFlow 0 5) 4) $generated@@180)))))
(let (($generated@@184  (=> (and (and ($generated@@177 $generated@@175) ($generated@@178 $generated@@175)) (and (= 0 $generated@@179) (= (ControlFlow 0 6) 5))) $generated@@183)))
$generated@@184))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@432 (T@U) Int)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@535 (T@T) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@605 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@273 (type $generated@@334))))
(let (($generated@@336 ($generated@@272 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@271 $generated@@336 $generated@@335)) (= (= ($generated@@333 $generated@@334) 0) (= $generated@@334 ($generated@@270 $generated@@336 $generated@@335))))))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@221 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@221 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@342) $generated@@64)) (= (type $generated@@343) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@341 ($generated@@226 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) ($generated@@0 ($generated@@81 $generated@@341 $generated@@344))) ($generated@@238 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@81 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@74 $generated@@341 ($generated@@226 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@81 ($generated@@264 $generated@@346) $generated@@345)))
)))
(assert  (and (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@347 $generated@@350)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@347 $generated@@350))
)) (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@348 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@348 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@273 (type $generated@@353))))
(let (($generated@@355 ($generated@@272 (type $generated@@353))))
(= (type ($generated@@349 $generated@@353)) ($generated@@76 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@349 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@357) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@356) $generated@@357))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@356) ($generated@@143 ($generated@@348 $generated@@136 $generated@@357)))) (= ($generated@@81 ($generated@@349 $generated@@356) ($generated@@143 ($generated@@348 $generated@@136 $generated@@357))) ($generated@@144 ($generated@@348 $generated@@136 $generated@@357))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@356) $generated@@357))
)))
(assert  (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@360)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@358 $generated@@360))
)) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@291 (type $generated@@361))))
(let (($generated@@363 ($generated@@290 (type $generated@@361))))
(= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@359 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@365) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@364) ($generated@@143 ($generated@@348 $generated@@136 $generated@@365)))) (= ($generated@@81 ($generated@@359 $generated@@364) ($generated@@143 ($generated@@348 $generated@@136 $generated@@365))) ($generated@@144 ($generated@@348 $generated@@136 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(let (($generated@@369 ($generated@@272 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@271 $generated@@369 $generated@@368)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@366) $generated@@367)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@366) $generated@@370)) (= $generated@@367 ($generated@@81 ($generated@@349 $generated@@366) $generated@@370))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@366) $generated@@370))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@366) $generated@@370))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(let (($generated@@374 ($generated@@290 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@289 $generated@@374 $generated@@373)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@371) $generated@@372)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@371) $generated@@375)) (= $generated@@372 ($generated@@81 ($generated@@359 $generated@@371) $generated@@375))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@371) $generated@@375))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@371) $generated@@375))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@377 $generated@@378)) $generated@@64)
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@379) $generated@@383))) (and ($generated@@238 ($generated@@81 ($generated@@349 $generated@@379) $generated@@383) $generated@@381 $generated@@382) ($generated@@238 $generated@@383 $generated@@380 $generated@@382)))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@379) $generated@@383))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@387) $generated@@391))) (and ($generated@@238 ($generated@@81 ($generated@@359 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@238 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= (type ($generated@@392 $generated@@393 $generated@@394)) ($generated@@76 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@397)))
 (=> (and (and (= (type $generated@@396) ($generated@@76 $generated@@399 $generated@@4)) (= (type $generated@@398) $generated@@399)) ($generated@@0 ($generated@@81 $generated@@396 $generated@@398))) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))))
 :pattern ( ($generated@@392 $generated@@396 $generated@@397) ($generated@@81 $generated@@396 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@401)))
 (=> (and (= (type $generated@@400) ($generated@@76 $generated@@403 $generated@@4)) (= (type $generated@@402) $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@400 $generated@@401) $generated@@402))  (or (= $generated@@402 $generated@@401) ($generated@@0 ($generated@@81 $generated@@400 $generated@@402))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@76 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@291 (type $generated@@406))))
(let (($generated@@408 ($generated@@290 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@289 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@288 $generated@@408 $generated@@407)) (= ($generated@@287 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@287 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@291 (type $generated@@409))))
(let (($generated@@411 ($generated@@290 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@289 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@288 $generated@@411 $generated@@410)) (= ($generated@@323 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@323 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@291 (type $generated@@412))))
(let (($generated@@414 ($generated@@290 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@289 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@288 $generated@@414 $generated@@413)) (= ($generated@@358 $generated@@412) ($generated@@404 $generated@@145))))))
 :pattern ( ($generated@@358 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@273 (type $generated@@415))))
(let (($generated@@417 ($generated@@272 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@271 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@270 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@415) ($generated@@258 ($generated@@211 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@347 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@291 (type $generated@@420))))
(let (($generated@@422 ($generated@@290 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@289 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@288 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@145) (= (type $generated@@424) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@420) ($generated@@258 ($generated@@211 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@358 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@212 $generated@@425 $generated@@46)) (and (= ($generated@@258 ($generated@@348 $generated@@2 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@348 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@212 $generated@@426 $generated@@47)) (and (= ($generated@@258 ($generated@@348 $generated@@3 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@348 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@212 $generated@@427 $generated@@44)) (and (= ($generated@@258 ($generated@@348 $generated@@4 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@348 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@212 $generated@@429 $generated@@45)) (and (= ($generated@@258 ($generated@@348 $generated@@428 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@348 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@430) $generated@@431) ($generated@@132 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@79 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@76 $generated@@434 $generated@@4)) (<= 0 ($generated@@432 $generated@@433))))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@79 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@76 $generated@@436 $generated@@2)) (<= 0 ($generated@@263 $generated@@435))))
 :pattern ( ($generated@@263 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@253 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@252 $generated@@438)) (<= 0 ($generated@@251 $generated@@437))))
 :pattern ( ($generated@@251 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@273 (type $generated@@439))))
(let (($generated@@441 ($generated@@272 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@271 $generated@@441 $generated@@440)) (<= 0 ($generated@@333 $generated@@439)))))
 :pattern ( ($generated@@333 $generated@@439))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@376 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@376 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@376 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@376 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@376 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@376 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@384 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@384 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@384 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@384 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@384 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) (= (type $generated@@463) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@135 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@135 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@135 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@135 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@145) (= (type $generated@@473) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@211 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@145) (= (type $generated@@475) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@211 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@253 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@252 $generated@@145)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@251 $generated@@482))) ($generated@@238 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
 (=> (= (type $generated@@486) ($generated@@76 $generated@@488 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@486 $generated@@487) $generated@@487))))
 :pattern ( ($generated@@392 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
 (=> (and (= (type $generated@@489) ($generated@@76 $generated@@491 $generated@@4)) ($generated@@0 ($generated@@81 $generated@@489 $generated@@490))) (= ($generated@@432 ($generated@@392 $generated@@489 $generated@@490)) ($generated@@432 $generated@@489))))
 :pattern ( ($generated@@432 ($generated@@392 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@75 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@75 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@221 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@221 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@226 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@226 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@150 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@150 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@476 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@476 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@476 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@348 $generated@@511 ($generated@@258 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@258 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@132 $generated@@512 ($generated@@376 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@512) $generated@@515))) (and ($generated@@212 ($generated@@81 ($generated@@349 $generated@@512) $generated@@515) $generated@@514) ($generated@@212 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@132 $generated@@512 ($generated@@376 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@132 $generated@@516 ($generated@@384 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@516) $generated@@519))) (and ($generated@@212 ($generated@@81 ($generated@@359 $generated@@516) $generated@@519) $generated@@518) ($generated@@212 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@132 $generated@@516 ($generated@@384 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@145)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@211 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@211 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@145)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@211 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@211 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@526 ($generated@@376 $generated@@527 $generated@@528))) (and (= ($generated@@258 ($generated@@348 ($generated@@271 $generated@@145 $generated@@145) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@348 ($generated@@271 $generated@@145 $generated@@145) $generated@@526) ($generated@@376 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@526 ($generated@@376 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@384 $generated@@530 $generated@@531))) (and (= ($generated@@258 ($generated@@348 ($generated@@289 $generated@@145 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@348 ($generated@@289 $generated@@145 $generated@@145) $generated@@529) ($generated@@384 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@384 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@145)) ($generated@@212 $generated@@534 ($generated@@135 $generated@@532 $generated@@533))) (and (= ($generated@@258 ($generated@@348 $generated@@136 $generated@@534)) $generated@@534) ($generated@@132 ($generated@@348 $generated@@136 $generated@@534) ($generated@@135 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@212 $generated@@534 ($generated@@135 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@536 T@T) ) (! (= (type ($generated@@535 $generated@@536)) ($generated@@76 $generated@@536 $generated@@4))
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@535 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@535 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@81 ($generated@@404 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@81 ($generated@@404 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@69)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@135 $generated@@543 $generated@@544)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@136) (= ($generated@@520 ($generated@@258 $generated@@545)) ($generated@@521 $generated@@545)))
 :pattern ( ($generated@@520 ($generated@@258 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@273 (type $generated@@546))))
(let (($generated@@548 ($generated@@272 (type $generated@@546))))
 (=> (= (type $generated@@546) ($generated@@271 $generated@@548 $generated@@547)) (= ($generated@@432 ($generated@@269 $generated@@546)) ($generated@@333 $generated@@546)))))
 :pattern ( ($generated@@432 ($generated@@269 $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@273 (type $generated@@549))))
(let (($generated@@551 ($generated@@272 (type $generated@@549))))
 (=> (= (type $generated@@549) ($generated@@271 $generated@@551 $generated@@550)) (= ($generated@@432 ($generated@@347 $generated@@549)) ($generated@@333 $generated@@549)))))
 :pattern ( ($generated@@432 ($generated@@347 $generated@@549)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@273 (type $generated@@552))))
(let (($generated@@554 ($generated@@272 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@271 $generated@@554 $generated@@553)) (<= ($generated@@432 ($generated@@312 $generated@@552)) ($generated@@333 $generated@@552)))))
 :pattern ( ($generated@@432 ($generated@@312 $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) ($generated@@212 $generated@@555 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@348 $generated@@2 $generated@@555)) $generated@@555) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@555) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@555 ($generated@@75 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@64)) ($generated@@212 $generated@@556 ($generated@@221 $generated@@557))) (and (= ($generated@@258 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@556)) $generated@@556) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@556) ($generated@@221 $generated@@557))))
 :pattern ( ($generated@@212 $generated@@556 ($generated@@221 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@64)) ($generated@@212 $generated@@558 ($generated@@226 $generated@@559))) (and (= ($generated@@258 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@558)) $generated@@558) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@558) ($generated@@226 $generated@@559))))
 :pattern ( ($generated@@212 $generated@@558 ($generated@@226 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@145) (= (type $generated@@561) $generated@@64)) ($generated@@212 $generated@@560 ($generated@@150 $generated@@561))) (and (= ($generated@@258 ($generated@@348 ($generated@@76 $generated@@145 $generated@@2) $generated@@560)) $generated@@560) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@2) $generated@@560) ($generated@@150 $generated@@561))))
 :pattern ( ($generated@@212 $generated@@560 ($generated@@150 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@145) (= (type $generated@@563) $generated@@64)) ($generated@@212 $generated@@562 ($generated@@476 $generated@@563))) (and (= ($generated@@258 ($generated@@348 ($generated@@252 $generated@@145) $generated@@562)) $generated@@562) ($generated@@132 ($generated@@348 ($generated@@252 $generated@@145) $generated@@562) ($generated@@476 $generated@@563))))
 :pattern ( ($generated@@212 $generated@@562 ($generated@@476 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@79 (type $generated@@564))))
 (=> (= (type $generated@@564) ($generated@@76 $generated@@565 $generated@@4)) (and (= (= ($generated@@432 $generated@@564) 0) (= $generated@@564 ($generated@@535 $generated@@565))) (=> (not (= ($generated@@432 $generated@@564) 0)) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@565) ($generated@@0 ($generated@@81 $generated@@564 $generated@@566)))
 :no-pattern (type $generated@@566)
 :no-pattern ($generated $generated@@566)
 :no-pattern ($generated@@0 $generated@@566)
))))))
 :pattern ( ($generated@@432 $generated@@564))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@567 ($generated@@150 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@567 $generated@@570)))) ($generated@@238 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@81 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@150 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (=> (and (= (type $generated@@571) ($generated@@76 $generated@@573 $generated@@4)) (not ($generated@@0 ($generated@@81 $generated@@571 $generated@@572)))) (= ($generated@@432 ($generated@@392 $generated@@571 $generated@@572)) (+ ($generated@@432 $generated@@571) 1))))
 :pattern ( ($generated@@432 ($generated@@392 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@136) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@576) (and ($generated@@134 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@64) ($generated@@74 $generated@@574 ($generated@@135 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@135 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@238 ($generated@@143 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@136) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@580) (and ($generated@@134 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@64) ($generated@@74 $generated@@578 ($generated@@135 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@74 $generated@@578 ($generated@@135 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@238 ($generated@@144 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@145) (= (type $generated@@583) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@582) ($generated@@233 $generated@@583)) ($generated@@233 ($generated@@211 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@582) ($generated@@233 $generated@@583)))
)))
(assert (forall (($generated@@584 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@584))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@584))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@585)) ($generated@@233 ($generated@@258 $generated@@585)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@253 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@252 $generated@@587)) (= ($generated@@251 $generated@@586) 0)) (= $generated@@586 ($generated@@250 $generated@@587))))
 :pattern ( ($generated@@251 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@589)))
 (=> (and (and (= (type $generated@@588) ($generated@@76 $generated@@591 $generated@@2)) (= (type $generated@@590) $generated@@2)) (<= 0 ($generated $generated@@590))) (= ($generated@@263 ($generated@@82 $generated@@588 $generated@@589 $generated@@590)) (+ (- ($generated@@263 $generated@@588) ($generated ($generated@@81 $generated@@588 $generated@@589))) ($generated $generated@@590)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@588 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@2)) ($generated@@74 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@3)) ($generated@@74 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@4)) ($generated@@74 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@428)) ($generated@@74 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@601) $generated@@145)) ($generated@@74 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@74 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@252 $generated@@145)) (= (type $generated@@603) $generated@@64)) (= ($generated@@132 $generated@@602 ($generated@@476 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@251 $generated@@602))) ($generated@@212 ($generated@@477 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@477 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@132 $generated@@602 ($generated@@476 $generated@@603)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ) (!  (=> (= (type $generated@@606) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@251 $generated@@606))) (< ($generated@@521 ($generated@@348 $generated@@136 ($generated@@477 $generated@@606 $generated@@607))) ($generated@@605 $generated@@606))))
 :pattern ( ($generated@@521 ($generated@@348 $generated@@136 ($generated@@477 $generated@@606 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@609) $generated@@64)) (= (type $generated@@610) $generated@@64)) ($generated@@132 $generated@@608 ($generated@@376 $generated@@609 $generated@@610))) (and (and ($generated@@132 ($generated@@269 $generated@@608) ($generated@@221 $generated@@609)) ($generated@@132 ($generated@@312 $generated@@608) ($generated@@221 $generated@@610))) ($generated@@132 ($generated@@347 $generated@@608) ($generated@@221 ($generated@@135 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@132 $generated@@608 ($generated@@376 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) $generated@@64)) ($generated@@132 $generated@@611 ($generated@@384 $generated@@612 $generated@@613))) (and (and ($generated@@132 ($generated@@287 $generated@@611) ($generated@@226 $generated@@612)) ($generated@@132 ($generated@@323 $generated@@611) ($generated@@226 $generated@@613))) ($generated@@132 ($generated@@358 $generated@@611) ($generated@@226 ($generated@@135 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@132 $generated@@611 ($generated@@384 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@2) ($generated@@132 $generated@@614 $generated@@46))
 :pattern ( ($generated@@132 $generated@@614 $generated@@46))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@3) ($generated@@132 $generated@@615 $generated@@47))
 :pattern ( ($generated@@132 $generated@@615 $generated@@47))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@4) ($generated@@132 $generated@@616 $generated@@44))
 :pattern ( ($generated@@132 $generated@@616 $generated@@44))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@428) ($generated@@132 $generated@@617 $generated@@45))
 :pattern ( ($generated@@132 $generated@@617 $generated@@45))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@145) ($generated@@132 $generated@@618 $generated@@48))
 :pattern ( ($generated@@132 $generated@@618 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(assert  (and (and (and (= (type $generated@@619) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@620) $generated@@77)) (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@623) ($generated@@76 $generated@@145 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@625  (=> (= (ControlFlow 0 3) (- 0 2)) (not (= ($generated@@432 ($generated@@233 ($generated@@392 ($generated@@535 $generated@@145) ($generated@@258 ($generated@@8 ($generated@@231 57)))))) 0)))))
(let (($generated@@626 true))
(let (($generated@@627  (=> (= $generated@@619 ($generated@@156 $generated@@620 $generated@@621 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@626) (=> (= (ControlFlow 0 4) 3) $generated@@625)))))
(let (($generated@@628  (=> (and (and (and ($generated@@237 $generated@@621) ($generated@@622 $generated@@621)) ($generated@@132 $generated@@623 ($generated@@221 $generated@@46))) (and (= 0 $generated@@624) (= (ControlFlow 0 5) 4))) $generated@@627)))
$generated@@628)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U Int) T@U)
(declare-fun $generated@@469 (T@U) Int)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@271 (type $generated@@332))))
(let (($generated@@334 ($generated@@270 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@269 $generated@@334 $generated@@333)) (= (= ($generated@@331 $generated@@332) 0) (= $generated@@332 ($generated@@268 $generated@@334 $generated@@333))))))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@221 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@221 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@340) $generated@@64)) (= (type $generated@@341) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@339 ($generated@@226 $generated@@340) $generated@@341) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@145) ($generated@@0 ($generated@@81 $generated@@339 $generated@@342))) ($generated@@236 $generated@@342 $generated@@340 $generated@@341))
 :pattern ( ($generated@@81 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@74 $generated@@339 ($generated@@226 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@344) $generated@@343)) 0))
 :pattern ( (let (($generated@@344 (type $generated@@343)))
($generated@@81 ($generated@@262 $generated@@344) $generated@@343)))
)))
(assert  (and (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@345 $generated@@348)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@345 $generated@@348))
)) (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@346 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@346 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@271 (type $generated@@351))))
(let (($generated@@353 ($generated@@270 (type $generated@@351))))
(= (type ($generated@@347 $generated@@351)) ($generated@@76 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@347 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@355) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@354) ($generated@@143 ($generated@@346 $generated@@136 $generated@@355)))) (= ($generated@@81 ($generated@@347 $generated@@354) ($generated@@143 ($generated@@346 $generated@@136 $generated@@355))) ($generated@@144 ($generated@@346 $generated@@136 $generated@@355))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))
)))
(assert  (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@358)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@356 $generated@@358))
)) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@289 (type $generated@@359))))
(let (($generated@@361 ($generated@@288 (type $generated@@359))))
(= (type ($generated@@357 $generated@@359)) ($generated@@76 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@363) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@362) ($generated@@143 ($generated@@346 $generated@@136 $generated@@363)))) (= ($generated@@81 ($generated@@357 $generated@@362) ($generated@@143 ($generated@@346 $generated@@136 $generated@@363))) ($generated@@144 ($generated@@346 $generated@@136 $generated@@363))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(let (($generated@@367 ($generated@@270 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@269 $generated@@367 $generated@@366)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@364) $generated@@365)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@364) $generated@@368)) (= $generated@@365 ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@364) $generated@@368))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@288 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@287 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@369) $generated@@373))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@64)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@377) $generated@@381))) (and ($generated@@236 ($generated@@81 ($generated@@347 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@236 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@64)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@385) $generated@@389))) (and ($generated@@236 ($generated@@81 ($generated@@357 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@236 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@76 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@289 (type $generated@@392))))
(let (($generated@@394 ($generated@@288 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@287 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@286 $generated@@394 $generated@@393)) (= ($generated@@285 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@285 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@289 (type $generated@@395))))
(let (($generated@@397 ($generated@@288 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@287 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@286 $generated@@397 $generated@@396)) (= ($generated@@321 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@321 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@289 (type $generated@@398))))
(let (($generated@@400 ($generated@@288 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@287 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@286 $generated@@400 $generated@@399)) (= ($generated@@356 $generated@@398) ($generated@@390 $generated@@145))))))
 :pattern ( ($generated@@356 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@271 (type $generated@@401))))
(let (($generated@@403 ($generated@@270 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@269 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@268 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@145) (= (type $generated@@405) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) ($generated@@256 ($generated@@211 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@345 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@289 (type $generated@@406))))
(let (($generated@@408 ($generated@@288 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@287 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@286 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@145) (= (type $generated@@410) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) ($generated@@256 ($generated@@211 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@356 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@46)) (and (= ($generated@@256 ($generated@@346 $generated@@2 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@346 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@212 $generated@@412 $generated@@47)) (and (= ($generated@@256 ($generated@@346 $generated@@3 $generated@@412)) $generated@@412) ($generated@@132 ($generated@@346 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@44)) (and (= ($generated@@256 ($generated@@346 $generated@@4 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@346 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 20))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@212 $generated@@415 $generated@@45)) (and (= ($generated@@256 ($generated@@346 $generated@@414 $generated@@415)) $generated@@415) ($generated@@132 ($generated@@346 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@416) $generated@@417) ($generated@@132 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@79 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@76 $generated@@419 $generated@@2)) (<= 0 ($generated@@261 $generated@@418))))
 :pattern ( ($generated@@261 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@251 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@250 $generated@@421)) (<= 0 ($generated@@249 $generated@@420))))
 :pattern ( ($generated@@249 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@271 (type $generated@@422))))
(let (($generated@@424 ($generated@@270 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@269 $generated@@424 $generated@@423)) (<= 0 ($generated@@331 $generated@@422)))))
 :pattern ( ($generated@@331 $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@64)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@64) (= (type $generated@@428) $generated@@64)) (= ($generated@@425 ($generated@@374 $generated@@427 $generated@@428)) $generated@@427))
 :pattern ( ($generated@@374 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (= (type ($generated@@429 $generated@@430)) $generated@@64)
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@64) (= (type $generated@@432) $generated@@64)) (= ($generated@@429 ($generated@@374 $generated@@431 $generated@@432)) $generated@@432))
 :pattern ( ($generated@@374 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@72 ($generated@@374 $generated@@433 $generated@@434)) $generated@@58))
 :pattern ( ($generated@@374 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@382 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@382 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@382 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@382 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@382 $generated@@443 $generated@@444)) $generated@@59))
 :pattern ( ($generated@@382 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@145) (= (type $generated@@446) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@445 $generated@@446)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@135 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@135 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@135 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) (= (type $generated@@456) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@211 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) (= (type $generated@@458) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@211 $generated@@457 $generated@@458))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ($generated@@463 Int) ) (! (let (($generated@@464 ($generated@@251 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462 $generated@@463)) $generated@@464))
 :pattern ( ($generated@@460 $generated@@462 $generated@@463))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (= (type $generated@@465) ($generated@@250 $generated@@145)) (= (type $generated@@466) $generated@@64)) (= (type $generated@@467) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@465 ($generated@@459 $generated@@466) $generated@@467) (forall (($generated@@468 Int) ) (!  (=> (and (<= 0 $generated@@468) (< $generated@@468 ($generated@@249 $generated@@465))) ($generated@@236 ($generated@@460 $generated@@465 $generated@@468) $generated@@466 $generated@@467))
 :pattern ( ($generated@@460 $generated@@465 $generated@@468))
))))
 :pattern ( ($generated@@74 $generated@@465 ($generated@@459 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@470 Int) ) (! (= ($generated@@469 ($generated@@75 $generated@@470)) $generated@@470)
 :pattern ( ($generated@@75 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@471 ($generated@@221 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@221 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@474)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@475 ($generated@@226 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@226 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@478)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@479 ($generated@@150 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@150 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@482)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@459 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@459 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@459 $generated@@486)) $generated@@57))
 :pattern ( ($generated@@459 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
(= ($generated@@346 $generated@@488 ($generated@@256 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@256 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) $generated@@64)) (= ($generated@@132 $generated@@489 ($generated@@374 $generated@@490 $generated@@491)) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@489) $generated@@492))) (and ($generated@@212 ($generated@@81 ($generated@@347 $generated@@489) $generated@@492) $generated@@491) ($generated@@212 $generated@@492 $generated@@490)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@489) $generated@@492))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@489) $generated@@492))
))))
 :pattern ( ($generated@@132 $generated@@489 ($generated@@374 $generated@@490 $generated@@491)))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@494) $generated@@64)) (= (type $generated@@495) $generated@@64)) (= ($generated@@132 $generated@@493 ($generated@@382 $generated@@494 $generated@@495)) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@493) $generated@@496))) (and ($generated@@212 ($generated@@81 ($generated@@357 $generated@@493) $generated@@496) $generated@@495) ($generated@@212 $generated@@496 $generated@@494)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@493) $generated@@496))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@493) $generated@@496))
))))
 :pattern ( ($generated@@132 $generated@@493 ($generated@@382 $generated@@494 $generated@@495)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@145)) (< ($generated@@497 $generated@@499) ($generated@@498 ($generated@@211 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@211 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (< ($generated@@497 $generated@@502) ($generated@@498 ($generated@@211 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@211 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) ($generated@@212 $generated@@503 ($generated@@374 $generated@@504 $generated@@505))) (and (= ($generated@@256 ($generated@@346 ($generated@@269 $generated@@145 $generated@@145) $generated@@503)) $generated@@503) ($generated@@132 ($generated@@346 ($generated@@269 $generated@@145 $generated@@145) $generated@@503) ($generated@@374 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@503 ($generated@@374 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@212 $generated@@506 ($generated@@382 $generated@@507 $generated@@508))) (and (= ($generated@@256 ($generated@@346 ($generated@@287 $generated@@145 $generated@@145) $generated@@506)) $generated@@506) ($generated@@132 ($generated@@346 ($generated@@287 $generated@@145 $generated@@145) $generated@@506) ($generated@@382 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@382 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@145)) ($generated@@212 $generated@@511 ($generated@@135 $generated@@509 $generated@@510))) (and (= ($generated@@256 ($generated@@346 $generated@@136 $generated@@511)) $generated@@511) ($generated@@132 ($generated@@346 $generated@@136 $generated@@511) ($generated@@135 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@212 $generated@@511 ($generated@@135 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
 (not ($generated@@0 ($generated@@81 ($generated@@390 $generated@@513) $generated@@512))))
 :pattern ( (let (($generated@@513 (type $generated@@512)))
($generated@@81 ($generated@@390 $generated@@513) $generated@@512)))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@516 $generated@@517)) $generated@@62) (= ($generated@@514 ($generated@@135 $generated@@516 $generated@@517)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@136) (= ($generated@@497 ($generated@@256 $generated@@518)) ($generated@@498 $generated@@518)))
 :pattern ( ($generated@@497 ($generated@@256 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) ($generated@@212 $generated@@519 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@346 $generated@@2 $generated@@519)) $generated@@519) ($generated@@132 ($generated@@346 ($generated@@76 $generated@@145 $generated@@4) $generated@@519) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@75 0)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) ($generated@@212 $generated@@520 ($generated@@221 $generated@@521))) (and (= ($generated@@256 ($generated@@346 ($generated@@76 $generated@@145 $generated@@4) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@346 ($generated@@76 $generated@@145 $generated@@4) $generated@@520) ($generated@@221 $generated@@521))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@221 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@212 $generated@@522 ($generated@@226 $generated@@523))) (and (= ($generated@@256 ($generated@@346 ($generated@@76 $generated@@145 $generated@@4) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@346 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@226 $generated@@523))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@226 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@212 $generated@@524 ($generated@@150 $generated@@525))) (and (= ($generated@@256 ($generated@@346 ($generated@@76 $generated@@145 $generated@@2) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@346 ($generated@@76 $generated@@145 $generated@@2) $generated@@524) ($generated@@150 $generated@@525))))
 :pattern ( ($generated@@212 $generated@@524 ($generated@@150 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) ($generated@@212 $generated@@526 ($generated@@459 $generated@@527))) (and (= ($generated@@256 ($generated@@346 ($generated@@250 $generated@@145) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@346 ($generated@@250 $generated@@145) $generated@@526) ($generated@@459 $generated@@527))))
 :pattern ( ($generated@@212 $generated@@526 ($generated@@459 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@528 ($generated@@150 $generated@@529) $generated@@530) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@528 $generated@@531)))) ($generated@@236 $generated@@531 $generated@@529 $generated@@530))
 :pattern ( ($generated@@81 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@74 $generated@@528 ($generated@@150 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@136) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@534) (and ($generated@@134 $generated@@532) (exists (($generated@@535 T@U) ) (!  (and (= (type $generated@@535) $generated@@64) ($generated@@74 $generated@@532 ($generated@@135 $generated@@533 $generated@@535) $generated@@534))
 :pattern ( ($generated@@74 $generated@@532 ($generated@@135 $generated@@533 $generated@@535) $generated@@534))
))))) ($generated@@236 ($generated@@143 $generated@@532) $generated@@533 $generated@@534))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@532) $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@136) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@538) (and ($generated@@134 $generated@@536) (exists (($generated@@539 T@U) ) (!  (and (= (type $generated@@539) $generated@@64) ($generated@@74 $generated@@536 ($generated@@135 $generated@@539 $generated@@537) $generated@@538))
 :pattern ( ($generated@@74 $generated@@536 ($generated@@135 $generated@@539 $generated@@537) $generated@@538))
))))) ($generated@@236 ($generated@@144 $generated@@536) $generated@@537 $generated@@538))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@536) $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@540) ($generated@@231 $generated@@541)) ($generated@@231 ($generated@@211 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@540) ($generated@@231 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@542)) ($generated@@231 ($generated@@256 $generated@@542)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@251 (type $generated@@543))))
 (=> (and (= (type $generated@@543) ($generated@@250 $generated@@544)) (= ($generated@@249 $generated@@543) 0)) (= $generated@@543 ($generated@@248 $generated@@544))))
 :pattern ( ($generated@@249 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@546)))
 (=> (and (and (= (type $generated@@545) ($generated@@76 $generated@@548 $generated@@2)) (= (type $generated@@547) $generated@@2)) (<= 0 ($generated $generated@@547))) (= ($generated@@261 ($generated@@82 $generated@@545 $generated@@546 $generated@@547)) (+ (- ($generated@@261 $generated@@545) ($generated ($generated@@81 $generated@@545 $generated@@546))) ($generated $generated@@547)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@545 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@2)) ($generated@@74 $generated@@550 $generated@@46 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@46 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@3)) ($generated@@74 $generated@@552 $generated@@47 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@47 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@4)) ($generated@@74 $generated@@554 $generated@@44 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@44 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@414)) ($generated@@74 $generated@@556 $generated@@45 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@45 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@145)) ($generated@@74 $generated@@558 $generated@@48 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@48 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@250 $generated@@145)) (= (type $generated@@560) $generated@@64)) (= ($generated@@132 $generated@@559 ($generated@@459 $generated@@560)) (forall (($generated@@561 Int) ) (!  (=> (and (<= 0 $generated@@561) (< $generated@@561 ($generated@@249 $generated@@559))) ($generated@@212 ($generated@@460 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@460 $generated@@559 $generated@@561))
))))
 :pattern ( ($generated@@132 $generated@@559 ($generated@@459 $generated@@560)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 Int) ) (!  (=> (= (type $generated@@563) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@249 $generated@@563))) (< ($generated@@498 ($generated@@346 $generated@@136 ($generated@@460 $generated@@563 $generated@@564))) ($generated@@562 $generated@@563))))
 :pattern ( ($generated@@498 ($generated@@346 $generated@@136 ($generated@@460 $generated@@563 $generated@@564))))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) $generated@@64)) ($generated@@132 $generated@@565 ($generated@@374 $generated@@566 $generated@@567))) (and (and ($generated@@132 ($generated@@267 $generated@@565) ($generated@@221 $generated@@566)) ($generated@@132 ($generated@@310 $generated@@565) ($generated@@221 $generated@@567))) ($generated@@132 ($generated@@345 $generated@@565) ($generated@@221 ($generated@@135 $generated@@566 $generated@@567)))))
 :pattern ( ($generated@@132 $generated@@565 ($generated@@374 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@64)) ($generated@@132 $generated@@568 ($generated@@382 $generated@@569 $generated@@570))) (and (and ($generated@@132 ($generated@@285 $generated@@568) ($generated@@226 $generated@@569)) ($generated@@132 ($generated@@321 $generated@@568) ($generated@@226 $generated@@570))) ($generated@@132 ($generated@@356 $generated@@568) ($generated@@226 ($generated@@135 $generated@@569 $generated@@570)))))
 :pattern ( ($generated@@132 $generated@@568 ($generated@@382 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@2) ($generated@@132 $generated@@571 $generated@@46))
 :pattern ( ($generated@@132 $generated@@571 $generated@@46))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@3) ($generated@@132 $generated@@572 $generated@@47))
 :pattern ( ($generated@@132 $generated@@572 $generated@@47))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@4) ($generated@@132 $generated@@573 $generated@@44))
 :pattern ( ($generated@@132 $generated@@573 $generated@@44))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@414) ($generated@@132 $generated@@574 $generated@@45))
 :pattern ( ($generated@@132 $generated@@574 $generated@@45))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@145) ($generated@@132 $generated@@575 $generated@@48))
 :pattern ( ($generated@@132 $generated@@575 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () T@U)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 (T@U) Bool)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@576) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@580) ($generated@@269 $generated@@145 $generated@@145))) (= (type $generated@@581) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@582) $generated@@77)) (= (type $generated@@584) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@586  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@231 ($generated@@11 true))))))
(let (($generated@@587  (=> (and (not (let (($generated@@588 ($generated@@231 ($generated@@268 $generated@@145 $generated@@145))))
(> ($generated@@331 $generated@@588) 0))) (= (ControlFlow 0 5) 3)) $generated@@586)))
(let (($generated@@589  (=> (and (let (($generated@@590 ($generated@@231 ($generated@@268 $generated@@145 $generated@@145))))
(> ($generated@@331 $generated@@590) 0)) (= (ControlFlow 0 4) 3)) $generated@@586)))
(let (($generated@@591  (=> (and (and (and ($generated@@132 $generated@@576 ($generated@@374 $generated@@577 $generated@@578)) ($generated@@74 $generated@@576 ($generated@@374 $generated@@577 $generated@@578) $generated@@579)) (= $generated@@580 ($generated@@231 ($generated@@268 $generated@@145 $generated@@145)))) (and ($generated@@132 $generated@@580 ($generated@@374 $generated@@577 $generated@@578)) (= $generated@@576 $generated@@580))) (and (=> (= (ControlFlow 0 6) 4) $generated@@589) (=> (= (ControlFlow 0 6) 5) $generated@@587)))))
(let (($generated@@592 true))
(let (($generated@@593  (=> (= $generated@@581 ($generated@@156 $generated@@582 $generated@@579 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@592) (=> (= (ControlFlow 0 7) 6) $generated@@591)))))
(let (($generated@@594  (=> (and (and (and ($generated@@235 $generated@@579) ($generated@@583 $generated@@579)) ($generated@@132 $generated@@584 ($generated@@135 $generated@@46 $generated@@44))) (and (= 1 $generated@@585) (= (ControlFlow 0 8) 7))) $generated@@593)))
$generated@@594))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (Int) T@U)
(declare-fun $generated@@100 (T@T T@T) T@T)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@104 (T@T) T@T)
(declare-fun $generated@@105 (T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@190 (T@U T@U) Bool)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 () T@T)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@211 (T@U T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@213 (T@T T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@T) T@T)
(declare-fun $generated@@216 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@286 (T@U T@U) T@U)
(declare-fun $generated@@287 (T@U T@U) Bool)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 (T@T T@U T@U) T@U)
(declare-fun $generated@@299 (T@U) Bool)
(declare-fun $generated@@300 () T@U)
(declare-fun $generated@@301 () T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@318 (Int) Int)
(declare-fun $generated@@320 (Real) Real)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U T@U) Bool)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@339 (T@U) Int)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@404 (T@U T@U) Bool)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@456 (T@U T@U) Bool)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@512 (T@U T@U) T@U)
(declare-fun $generated@@520 (T@U T@U) T@U)
(declare-fun $generated@@528 (T@U T@U) T@U)
(declare-fun $generated@@555 (T@T) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@584 () T@T)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@622 (T@U) T@U)
(declare-fun $generated@@626 (T@U) T@U)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@635 (T@U Int) T@U)
(declare-fun $generated@@650 (T@U) Int)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@660 (T@U) T@U)
(declare-fun $generated@@664 (T@U) T@U)
(declare-fun $generated@@678 (T@U) Int)
(declare-fun $generated@@679 (T@U) Int)
(declare-fun $generated@@699 (T@T) T@U)
(declare-fun $generated@@709 (T@U) T@U)
(declare-fun $generated@@792 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@83) 6) (= (type $generated@@44) $generated@@83)) (= (type $generated@@45) $generated@@83)) (= (type $generated@@46) $generated@@83)) (= (type $generated@@47) $generated@@83)) (= (type $generated@@48) $generated@@83)) (= ($generated@@1 $generated@@84) 7)) (= (type $generated@@49) $generated@@84)) (= (type $generated@@50) $generated@@84)) (= (type $generated@@51) $generated@@84)) (= (type $generated@@52) $generated@@84)) (= (type $generated@@53) $generated@@84)) (= (type $generated@@54) $generated@@84)) (= (type $generated@@55) $generated@@84)) (= (type $generated@@56) $generated@@84)) (= (type $generated@@57) $generated@@84)) (= (type $generated@@58) $generated@@84)) (= (type $generated@@59) $generated@@84)) (forall (($generated@@91 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@91)) 8))) (forall (($generated@@92 T@T) ) (! (= ($generated@@86 ($generated@@85 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@85 $generated@@92))
))) (= (type $generated@@60) ($generated@@85 $generated@@4))) (= ($generated@@1 $generated@@87) 9)) (= (type $generated@@61) $generated@@87)) (= ($generated@@1 $generated@@88) 10)) (= (type $generated@@62) $generated@@88)) (= (type $generated@@63) $generated@@84)) (= (type $generated@@64) $generated@@84)) (= (type $generated@@65) $generated@@84)) (= (type $generated@@66) $generated@@84)) (= ($generated@@1 $generated@@89) 11)) (= (type $generated@@67) $generated@@89)) (= (type $generated@@68) $generated@@84)) (= (type $generated@@69) $generated@@84)) (= (type $generated@@70) $generated@@89)) (= (type $generated@@71) $generated@@84)) (= (type $generated@@72) $generated@@84)) (= ($generated@@1 $generated@@90) 12)) (= (type $generated@@73) $generated@@90)) (= (type $generated@@74) $generated@@90)) (= (type $generated@@75) $generated@@90)) (= (type $generated@@76) $generated@@90)) (= (type $generated@@77) $generated@@90)) (= (type $generated@@78) $generated@@90)) (= (type $generated@@79) $generated@@87)) (= (type $generated@@80) $generated@@87)) (= (type $generated@@81) $generated@@87)) (= (type $generated@@82) $generated@@87)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80 $generated@@81 $generated@@82)
)
(assert (= ($generated@@93 $generated@@60) 0))
(assert (forall (($generated@@95 T@U) ) (! (= (type ($generated@@94 $generated@@95)) $generated@@84)
 :pattern ( ($generated@@94 $generated@@95))
)))
(assert (= ($generated@@94 $generated@@44) $generated@@49))
(assert (= ($generated@@94 $generated@@45) $generated@@50))
(assert (= ($generated@@94 $generated@@46) $generated@@51))
(assert (= ($generated@@94 $generated@@47) $generated@@52))
(assert (= ($generated@@94 $generated@@48) $generated@@53))
(assert (forall (($generated@@97 T@U) ) (! (= (type ($generated@@96 $generated@@97)) $generated@@87)
 :pattern ( ($generated@@96 $generated@@97))
)))
(assert (= ($generated@@96 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (= ($generated@@1 ($generated@@100 $generated@@109 $generated@@110)) 13)) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@103 ($generated@@100 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@100 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@104 ($generated@@100 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@100 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@104 (type $generated@@115))))
(= (type ($generated@@105 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@105 $generated@@115 $generated@@116))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@119)))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) ($generated@@100 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@104 (type $generated@@123))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@105 ($generated@@106 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@105 ($generated@@106 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@105 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@105 ($generated@@106 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@105 $generated@@132 $generated@@134)))
 :weight 0
)))) (= ($generated@@1 $generated@@101) 14)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@86 (type $generated@@136))))
(= (type ($generated@@107 $generated@@135 $generated@@136)) $generated@@137))
 :pattern ( ($generated@@107 $generated@@135 $generated@@136))
))) (= ($generated@@1 $generated@@102) 15)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@108 $generated@@138 $generated@@139 $generated@@140)) $generated@@102)
 :pattern ( ($generated@@108 $generated@@138 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@86 (type $generated@@142))))
 (=> (= (type $generated@@143) $generated@@144) (= ($generated@@107 ($generated@@108 $generated@@141 $generated@@142 $generated@@143) $generated@@142) $generated@@143)))
 :weight 0
))) (and (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@147 $generated@@148) (= ($generated@@107 ($generated@@108 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@107 $generated@@146 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or true (= ($generated@@107 ($generated@@108 $generated@@150 $generated@@151 $generated@@149) $generated@@152) ($generated@@107 $generated@@150 $generated@@152)))
 :weight 0
)))) (forall (($generated@@153 Int) ) (! (= (type ($generated@@99 $generated@@153)) $generated@@83)
 :pattern ( ($generated@@99 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@100 $generated@@101 $generated@@102))) ($generated@@98 $generated@@154 ($generated@@99 0) $generated@@155))
 :pattern ( ($generated@@98 $generated@@154 ($generated@@99 0) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@158) ($generated@@100 $generated@@101 $generated@@102))) ($generated@@156 $generated@@157 $generated@@158)) (forall (($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@101) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@157 $generated@@159) $generated@@60))) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@158 $generated@@159) $generated@@60)))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@158 $generated@@159) $generated@@60))
)))
 :pattern ( ($generated@@156 $generated@@157 $generated@@158))
)))
(assert (= (type $generated@@160) $generated@@83))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@2) (= (type $generated@@162) ($generated@@100 $generated@@101 $generated@@102))) ($generated@@98 $generated@@161 $generated@@160 $generated@@162))
 :pattern ( ($generated@@98 $generated@@161 $generated@@160 $generated@@162))
)))
(assert (= (type $generated@@163) $generated@@83))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@3) (= (type $generated@@165) ($generated@@100 $generated@@101 $generated@@102))) ($generated@@98 $generated@@164 $generated@@163 $generated@@165))
 :pattern ( ($generated@@98 $generated@@164 $generated@@163 $generated@@165))
)))
(assert  (and (= (type $generated@@166) $generated@@83) (= (type $generated@@167) $generated@@101)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@101) (= (type $generated@@169) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@168 $generated@@166 $generated@@169)  (or (= $generated@@168 $generated@@167) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@169 $generated@@168) $generated@@60)))))
 :pattern ( ($generated@@98 $generated@@168 $generated@@166 $generated@@169))
)))
(assert (= (type $generated@@170) $generated@@83))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@101) (= (type $generated@@172) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@171 $generated@@170 $generated@@172)  (or (= $generated@@171 $generated@@167) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@172 $generated@@171) $generated@@60)))))
 :pattern ( ($generated@@98 $generated@@171 $generated@@170 $generated@@172))
)))
(assert  (and (= (type $generated@@173) ($generated@@85 $generated@@2)) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@83)
 :pattern ( ($generated@@175 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@179) $generated@@101)) (and ($generated@@174 $generated@@178) (and (not (= $generated@@179 $generated@@167)) (= ($generated@@175 $generated@@179) $generated@@170)))) ($generated@@176 ($generated@@107 ($generated@@105 $generated@@178 $generated@@179) $generated@@173) $generated@@46))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@178 $generated@@179) $generated@@173))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@176 $generated@@180 ($generated@@99 0)))
 :pattern ( ($generated@@176 $generated@@180 ($generated@@99 0)))
)))
(assert ($generated@@181 $generated@@170))
(assert  (and (= ($generated@@1 $generated@@184) 16) (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@83)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@83) (= (type $generated@@188) $generated@@83)) (= (type $generated@@189) $generated@@184)) ($generated@@176 $generated@@189 ($generated@@183 $generated@@187 $generated@@188))) ($generated@@182 $generated@@189))
 :pattern ( ($generated@@182 $generated@@189) ($generated@@176 $generated@@189 ($generated@@183 $generated@@187 $generated@@188)))
)))
(assert  (and (and (= ($generated@@1 $generated@@193) 17) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@191 $generated@@194))
))) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@195)) $generated@@193)
 :pattern ( ($generated@@192 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@184) (= (type $generated@@197) $generated@@184)) true) (= ($generated@@190 $generated@@196 $generated@@197)  (and (= ($generated@@191 $generated@@196) ($generated@@191 $generated@@197)) (= ($generated@@192 $generated@@196) ($generated@@192 $generated@@197)))))
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
)))
(assert (= (type $generated@@198) $generated@@83))
(assert (forall (($generated@@199 T@U) ) (!  (=> (= (type $generated@@199) $generated@@101) (=> (and (not (= $generated@@199 $generated@@167)) ($generated@@176 $generated@@199 $generated@@170)) ($generated@@176 $generated@@199 $generated@@198)))
 :pattern ( ($generated@@176 $generated@@199 $generated@@170))
)))
(assert  (and (= (type $generated@@200) $generated@@83) (forall (($generated@@202 T@U) ) (! (= (type ($generated@@201 $generated@@202)) $generated@@83)
 :pattern ( ($generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) ($generated@@100 $generated@@193 $generated@@4)) (= (type $generated@@204) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@203 $generated@@200 $generated@@204) ($generated@@98 $generated@@203 ($generated@@201 $generated@@46) $generated@@204)))
 :pattern ( ($generated@@98 $generated@@203 $generated@@200 $generated@@204))
)))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@83)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@100 $generated@@193 $generated@@2)) (= (type $generated@@209) $generated@@83)) ($generated@@176 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@176 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ) (!  (=> (= (type $generated@@210) $generated@@101) (= ($generated@@176 $generated@@210 $generated@@170)  (or (= $generated@@210 $generated@@167) (= ($generated@@175 $generated@@210) $generated@@170))))
 :pattern ( ($generated@@176 $generated@@210 $generated@@170))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@217 $generated@@218)) 18)) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@219 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@213 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@215 ($generated@@213 $generated@@221 $generated@@222)) $generated@@222)
 :pattern ( ($generated@@213 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@215 (type $generated@@223))))
(= (type ($generated@@211 $generated@@223 $generated@@224 $generated@@225)) $generated@@226))
 :pattern ( ($generated@@211 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 (type $generated@@230)))
(let (($generated@@232 (type $generated@@228)))
(= (type ($generated@@216 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@213 $generated@@232 $generated@@231))))
 :pattern ( ($generated@@216 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@215 (type $generated@@233))))
 (=> (= (type $generated@@236) $generated@@237) (= ($generated@@211 ($generated@@216 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@234 $generated@@235) $generated@@236)))
 :weight 0
))) (and (and (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@240 $generated@@242) (= ($generated@@211 ($generated@@216 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@211 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or (= $generated@@247 $generated@@249) (= ($generated@@211 ($generated@@216 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@211 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (or true (= ($generated@@211 ($generated@@216 $generated@@251 $generated@@252 $generated@@253 $generated@@250) $generated@@254 $generated@@255) ($generated@@211 $generated@@251 $generated@@254 $generated@@255)))
 :weight 0
)))) (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Bool) ) (! (= (type ($generated@@212 $generated@@256 $generated@@257 $generated@@258 $generated@@259)) ($generated@@213 $generated@@101 $generated@@4))
 :pattern ( ($generated@@212 $generated@@256 $generated@@257 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 Bool) ($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@86 (type $generated@@265))))
 (=> (and (and (and (and (= (type $generated@@260) $generated@@101) (= (type $generated@@261) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@262) ($generated@@85 $generated@@4))) (= (type $generated@@264) $generated@@101)) (= (type $generated@@265) ($generated@@85 $generated@@266))) (= ($generated@@0 ($generated@@211 ($generated@@212 $generated@@260 $generated@@261 $generated@@262 $generated@@263) $generated@@264 $generated@@265))  (=> (and (not (= $generated@@264 $generated@@260)) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@261 $generated@@264) $generated@@262))) $generated@@263))))
 :pattern ( ($generated@@211 ($generated@@212 $generated@@260 $generated@@261 $generated@@262 $generated@@263) $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@103 (type $generated@@268))))
(= (type ($generated@@267 $generated@@268 $generated@@269)) ($generated@@100 $generated@@270 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@103 (type $generated@@271))))
 (=> (and (= (type $generated@@271) ($generated@@100 $generated@@273 $generated@@4)) (= (type $generated@@272) ($generated@@100 $generated@@273 $generated@@4))) (= ($generated@@267 ($generated@@267 $generated@@271 $generated@@272) $generated@@272) ($generated@@267 $generated@@271 $generated@@272))))
 :pattern ( ($generated@@267 ($generated@@267 $generated@@271 $generated@@272) $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@103 (type $generated@@275))))
(= (type ($generated@@274 $generated@@275 $generated@@276)) ($generated@@100 $generated@@277 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@103 (type $generated@@278))))
 (=> (and (= (type $generated@@278) ($generated@@100 $generated@@280 $generated@@4)) (= (type $generated@@279) ($generated@@100 $generated@@280 $generated@@4))) (= ($generated@@274 ($generated@@274 $generated@@278 $generated@@279) $generated@@279) ($generated@@274 $generated@@278 $generated@@279))))
 :pattern ( ($generated@@274 ($generated@@274 $generated@@278 $generated@@279) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@101) (= (type $generated@@282) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@281 $generated@@198 $generated@@282) ($generated@@98 $generated@@281 $generated@@166 $generated@@282)))
 :pattern ( ($generated@@98 $generated@@281 $generated@@198 $generated@@282))
)))
(assert (= (type $generated@@283) $generated@@83))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@101) (= (type $generated@@285) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@284 $generated@@283 $generated@@285) ($generated@@98 $generated@@284 $generated@@170 $generated@@285)))
 :pattern ( ($generated@@98 $generated@@284 $generated@@283 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (= (type ($generated@@286 $generated@@288 $generated@@289)) $generated@@184)
 :pattern ( ($generated@@286 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) $generated@@83) (= (type $generated@@291) $generated@@83)) (= (type $generated@@292) $generated@@193)) (= (type $generated@@293) $generated@@193)) (= ($generated@@176 ($generated@@286 $generated@@292 $generated@@293) ($generated@@183 $generated@@290 $generated@@291))  (and ($generated@@287 $generated@@292 $generated@@290) ($generated@@287 $generated@@293 $generated@@291))))
 :pattern ( ($generated@@176 ($generated@@286 $generated@@292 $generated@@293) ($generated@@183 $generated@@290 $generated@@291)))
)))
(assert (= (type $generated@@294) ($generated@@85 $generated@@2)))
(assert (= ($generated@@93 $generated@@294) 0))
(assert (forall (($generated@@296 T@T) ($generated@@297 T@U) ($generated@@298 T@U) ) (! (= (type ($generated@@295 $generated@@296 $generated@@297 $generated@@298)) ($generated@@85 $generated@@296))
 :pattern ( ($generated@@295 $generated@@296 $generated@@297 $generated@@298))
)))
(assert (= ($generated@@295 $generated@@2 $generated@@67 $generated@@79) $generated@@294))
(assert  (not ($generated@@299 $generated@@294)))
(assert (= ($generated@@93 $generated@@173) 0))
(assert (= ($generated@@295 $generated@@2 $generated@@70 $generated@@80) $generated@@173))
(assert  (not ($generated@@299 $generated@@173)))
(assert (= (type $generated@@300) ($generated@@85 $generated@@3)))
(assert (= ($generated@@93 $generated@@300) 0))
(assert (= ($generated@@295 $generated@@3 $generated@@70 $generated@@81) $generated@@300))
(assert  (not ($generated@@299 $generated@@300)))
(assert (= (type $generated@@301) ($generated@@85 ($generated@@100 $generated@@193 $generated@@4))))
(assert (= ($generated@@93 $generated@@301) 0))
(assert (= ($generated@@295 ($generated@@100 $generated@@193 $generated@@4) $generated@@70 $generated@@82) $generated@@301))
(assert  (not ($generated@@299 $generated@@301)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@302) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@303) $generated@@101)) (and ($generated@@174 $generated@@302) (and (not (= $generated@@303 $generated@@167)) ($generated@@176 $generated@@303 $generated@@166)))) ($generated@@176 ($generated@@107 ($generated@@105 $generated@@302 $generated@@303) $generated@@294) $generated@@160))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@302 $generated@@303) $generated@@294))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@103 (type $generated@@305))))
 (=> (and (= (type $generated@@305) ($generated@@100 $generated@@307 $generated@@4)) (= (type $generated@@306) ($generated@@100 $generated@@307 $generated@@4))) (= (+ ($generated@@304 ($generated@@267 $generated@@305 $generated@@306)) ($generated@@304 ($generated@@274 $generated@@305 $generated@@306))) (+ ($generated@@304 $generated@@305) ($generated@@304 $generated@@306)))))
 :pattern ( ($generated@@304 ($generated@@267 $generated@@305 $generated@@306)))
 :pattern ( ($generated@@304 ($generated@@274 $generated@@305 $generated@@306)))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@184) (= (type $generated@@309) $generated@@184)) (= ($generated@@190 $generated@@308 $generated@@309) (= $generated@@308 $generated@@309)))
 :pattern ( ($generated@@190 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@100 $generated@@193 $generated@@4)) (= (type $generated@@311) $generated@@83)) (= ($generated@@176 $generated@@310 ($generated@@201 $generated@@311)) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@193) ($generated@@0 ($generated@@105 $generated@@310 $generated@@312))) ($generated@@287 $generated@@312 $generated@@311))
 :pattern ( ($generated@@105 $generated@@310 $generated@@312))
))))
 :pattern ( ($generated@@176 $generated@@310 ($generated@@201 $generated@@311)))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@83)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@100 $generated@@193 $generated@@4)) (= (type $generated@@316) $generated@@83)) (= ($generated@@176 $generated@@315 ($generated@@313 $generated@@316)) (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@193) ($generated@@0 ($generated@@105 $generated@@315 $generated@@317))) ($generated@@287 $generated@@317 $generated@@316))
 :pattern ( ($generated@@105 $generated@@315 $generated@@317))
))))
 :pattern ( ($generated@@176 $generated@@315 ($generated@@313 $generated@@316)))
)))
(assert (forall (($generated@@319 Int) ) (! (= ($generated@@318 $generated@@319) $generated@@319)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 Real) ) (! (= ($generated@@320 $generated@@321) $generated@@321)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 (type $generated@@323)))
(= (type ($generated@@322 $generated@@323)) $generated@@324))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= ($generated@@322 $generated@@325) $generated@@325)
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@327) $generated@@83) (= (type $generated@@328) $generated@@83)) (= (type $generated@@329) $generated@@193)) (= (type $generated@@330) $generated@@193)) (= (type $generated@@331) ($generated@@100 $generated@@101 $generated@@102))) ($generated@@174 $generated@@331)) (= ($generated@@98 ($generated@@286 $generated@@329 $generated@@330) ($generated@@183 $generated@@327 $generated@@328) $generated@@331)  (and ($generated@@326 $generated@@329 $generated@@327 $generated@@331) ($generated@@326 $generated@@330 $generated@@328 $generated@@331))))
 :pattern ( ($generated@@98 ($generated@@286 $generated@@329 $generated@@330) ($generated@@183 $generated@@327 $generated@@328) $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@88)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@184) (= ($generated@@182 $generated@@334) (= ($generated@@332 $generated@@334) $generated@@62)))
 :pattern ( ($generated@@182 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@184) ($generated@@182 $generated@@335)) (exists (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (and (and (= (type $generated@@336) $generated@@193) (= (type $generated@@337) $generated@@193)) (= $generated@@335 ($generated@@286 $generated@@336 $generated@@337)))
 :no-pattern (type $generated@@336)
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
)))
 :pattern ( ($generated@@182 $generated@@335))
)))
(assert  (and (and (forall (($generated@@342 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@342)) 19)) (forall (($generated@@343 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@340 $generated@@343))
))) (forall (($generated@@344 T@T) ) (! (= (type ($generated@@338 $generated@@344)) ($generated@@340 $generated@@344))
 :pattern ( ($generated@@338 $generated@@344))
))))
(assert (forall (($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@345)) 0)
 :pattern ( ($generated@@338 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@2) (= ($generated@@176 $generated@@346 $generated@@160) (<= ($generated@@318 6) ($generated $generated@@346))))
 :pattern ( ($generated@@176 $generated@@346 $generated@@160))
)))
(assert ($generated@@299 $generated@@60))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@193)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@83) (= (type $generated@@351) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@326 ($generated@@347 $generated@@349) $generated@@350 $generated@@351) ($generated@@98 $generated@@349 $generated@@350 $generated@@351)))
 :pattern ( ($generated@@326 ($generated@@347 $generated@@349) $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@352) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@353) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@354) $generated@@193)) (= (type $generated@@355) $generated@@83)) ($generated@@156 $generated@@352 $generated@@353)) ($generated@@326 $generated@@354 $generated@@355 $generated@@352)) ($generated@@326 $generated@@354 $generated@@355 $generated@@353))
 :pattern ( ($generated@@156 $generated@@352 $generated@@353) ($generated@@326 $generated@@354 $generated@@355 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@356) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@357) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@359) $generated@@83)) ($generated@@156 $generated@@356 $generated@@357)) ($generated@@98 $generated@@358 $generated@@359 $generated@@356)) ($generated@@98 $generated@@358 $generated@@359 $generated@@357))
 :pattern ( ($generated@@156 $generated@@356 $generated@@357) ($generated@@98 $generated@@358 $generated@@359 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@361) $generated@@101)) (=> (and (and ($generated@@174 $generated@@360) (and (not (= $generated@@361 $generated@@167)) (= ($generated@@175 $generated@@361) $generated@@170))) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@360 $generated@@361) $generated@@60))) ($generated@@98 ($generated@@107 ($generated@@105 $generated@@360 $generated@@361) $generated@@173) $generated@@46 $generated@@360)))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@360 $generated@@361) $generated@@173))
)))
(assert (forall (($generated@@364 T@T) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@100 $generated@@364 $generated@@2))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@103 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@100 $generated@@366 $generated@@2)) (and (= (= ($generated@@362 $generated@@365) 0) (= $generated@@365 ($generated@@363 $generated@@366))) (=> (not (= ($generated@@362 $generated@@365) 0)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (< 0 ($generated ($generated@@105 $generated@@365 $generated@@367))))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 20)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@100 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@105 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@105 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 21)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@100 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@105 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@105 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@406) ($generated@@100 $generated@@101 $generated@@102))) ($generated@@404 $generated@@405 $generated@@406)) (and ($generated@@156 $generated@@405 $generated@@406) (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@86 (type $generated@@408))))
 (=> (and (and (= (type $generated@@407) $generated@@101) (= (type $generated@@408) ($generated@@85 $generated@@409))) (not ($generated@@299 $generated@@408))) (= ($generated@@107 ($generated@@105 $generated@@405 $generated@@407) $generated@@408) ($generated@@107 ($generated@@105 $generated@@406 $generated@@407) $generated@@408))))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@406 $generated@@407) $generated@@408))
))))
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@103 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@100 $generated@@411 $generated@@2)) (= ($generated@@206 $generated@@410) (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@411) (and (<= 0 ($generated ($generated@@105 $generated@@410 $generated@@412))) (<= ($generated ($generated@@105 $generated@@410 $generated@@412)) ($generated@@362 $generated@@410))))
 :pattern ( ($generated@@105 $generated@@410 $generated@@412))
)))))
 :pattern ( ($generated@@206 $generated@@410))
)))
(assert (forall (($generated@@414 T@T) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@414)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@193) ($generated@@287 $generated@@416 $generated@@160)) (and (= ($generated@@347 ($generated@@413 $generated@@2 $generated@@416)) $generated@@416) ($generated@@176 ($generated@@413 $generated@@2 $generated@@416) $generated@@160)))
 :pattern ( ($generated@@287 $generated@@416 $generated@@160))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@193) ($generated@@287 $generated@@417 $generated@@163)) (and (= ($generated@@347 ($generated@@413 $generated@@3 $generated@@417)) $generated@@417) ($generated@@176 ($generated@@413 $generated@@3 $generated@@417) $generated@@163)))
 :pattern ( ($generated@@287 $generated@@417 $generated@@163))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@193) ($generated@@287 $generated@@418 $generated@@200)) (and (= ($generated@@347 ($generated@@413 ($generated@@100 $generated@@193 $generated@@4) $generated@@418)) $generated@@418) ($generated@@176 ($generated@@413 ($generated@@100 $generated@@193 $generated@@4) $generated@@418) $generated@@200)))
 :pattern ( ($generated@@287 $generated@@418 $generated@@200))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@193) ($generated@@287 $generated@@419 $generated@@166)) (and (= ($generated@@347 ($generated@@413 $generated@@101 $generated@@419)) $generated@@419) ($generated@@176 ($generated@@413 $generated@@101 $generated@@419) $generated@@166)))
 :pattern ( ($generated@@287 $generated@@419 $generated@@166))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@193) ($generated@@287 $generated@@420 $generated@@198)) (and (= ($generated@@347 ($generated@@413 $generated@@101 $generated@@420)) $generated@@420) ($generated@@176 ($generated@@413 $generated@@101 $generated@@420) $generated@@198)))
 :pattern ( ($generated@@287 $generated@@420 $generated@@198))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@193) ($generated@@287 $generated@@421 $generated@@170)) (and (= ($generated@@347 ($generated@@413 $generated@@101 $generated@@421)) $generated@@421) ($generated@@176 ($generated@@413 $generated@@101 $generated@@421) $generated@@170)))
 :pattern ( ($generated@@287 $generated@@421 $generated@@170))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@193) ($generated@@287 $generated@@422 $generated@@283)) (and (= ($generated@@347 ($generated@@413 $generated@@101 $generated@@422)) $generated@@422) ($generated@@176 ($generated@@413 $generated@@101 $generated@@422) $generated@@283)))
 :pattern ( ($generated@@287 $generated@@422 $generated@@283))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@101) (= ($generated@@176 $generated@@423 $generated@@198)  (and ($generated@@176 $generated@@423 $generated@@166) (not (= $generated@@423 $generated@@167)))))
 :pattern ( ($generated@@176 $generated@@423 $generated@@198))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@101) (= ($generated@@176 $generated@@424 $generated@@283)  (and ($generated@@176 $generated@@424 $generated@@170) (not (= $generated@@424 $generated@@167)))))
 :pattern ( ($generated@@176 $generated@@424 $generated@@283))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@372 (type $generated@@425))))
(let (($generated@@427 ($generated@@371 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@370 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@369 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) ($generated@@0 ($generated@@105 ($generated@@368 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@368 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@372 (type $generated@@430))))
(= (type ($generated@@429 $generated@@430)) ($generated@@100 $generated@@431 $generated@@4)))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@372 (type $generated@@432))))
(let (($generated@@434 ($generated@@371 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@370 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@369 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@433) ($generated@@0 ($generated@@105 ($generated@@429 $generated@@432) $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@429 $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@390 (type $generated@@436))))
(let (($generated@@438 ($generated@@389 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@388 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@387 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) ($generated@@0 ($generated@@105 ($generated@@386 $generated@@436) $generated@@439)))
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@386 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@390 (type $generated@@441))))
(= (type ($generated@@440 $generated@@441)) ($generated@@100 $generated@@442 $generated@@4)))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@390 (type $generated@@443))))
(let (($generated@@445 ($generated@@389 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@388 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@387 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@444) ($generated@@0 ($generated@@105 ($generated@@440 $generated@@443) $generated@@446)))
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@440 $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (= (type $generated@@447) $generated@@3) (= ($generated@@176 $generated@@447 $generated@@163)  (or (= ($generated@@10 $generated@@447) ($generated@@320 3.14)) (= ($generated@@10 $generated@@447) ($generated@@320 2.7)))))
 :pattern ( ($generated@@176 $generated@@447 $generated@@163))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@100 $generated@@193 $generated@@2)) (= (type $generated@@449) $generated@@83)) (= ($generated@@176 $generated@@448 ($generated@@205 $generated@@449)) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@193) (< 0 ($generated ($generated@@105 $generated@@448 $generated@@450)))) ($generated@@287 $generated@@450 $generated@@449))
 :pattern ( ($generated@@105 $generated@@448 $generated@@450))
))))
 :pattern ( ($generated@@176 $generated@@448 ($generated@@205 $generated@@449)))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) ($generated@@100 $generated@@193 $generated@@4)) (= ($generated@@176 $generated@@451 $generated@@200)  (and ($generated@@176 $generated@@451 ($generated@@201 $generated@@46)) (not (= ($generated@@304 $generated@@451) 0)))))
 :pattern ( ($generated@@176 $generated@@451 $generated@@200))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@453) $generated@@101)) (=> (and (and ($generated@@174 $generated@@452) (and (not (= $generated@@453 $generated@@167)) (= ($generated@@175 $generated@@453) $generated@@170))) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@452 $generated@@453) $generated@@60))) ($generated@@98 ($generated@@107 ($generated@@105 $generated@@452 $generated@@453) $generated@@300) $generated@@163 $generated@@452)))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@452 $generated@@453) $generated@@300))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@455) $generated@@101)) (=> (and (and ($generated@@174 $generated@@454) (and (not (= $generated@@455 $generated@@167)) (= ($generated@@175 $generated@@455) $generated@@170))) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@454 $generated@@455) $generated@@60))) ($generated@@98 ($generated@@107 ($generated@@105 $generated@@454 $generated@@455) $generated@@301) $generated@@200 $generated@@454)))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@454 $generated@@455) $generated@@301))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@103 (type $generated@@458))))
(= (type ($generated@@457 $generated@@458 $generated@@459)) ($generated@@100 $generated@@460 $generated@@4)))
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@103 (type $generated@@461))))
 (=> (and (and (= (type $generated@@461) ($generated@@100 $generated@@463 $generated@@4)) (= (type $generated@@462) ($generated@@100 $generated@@463 $generated@@4))) ($generated@@456 $generated@@461 $generated@@462)) (and (= ($generated@@457 ($generated@@267 $generated@@461 $generated@@462) $generated@@461) $generated@@462) (= ($generated@@457 ($generated@@267 $generated@@461 $generated@@462) $generated@@462) $generated@@461))))
 :pattern ( ($generated@@267 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@372 (type $generated@@465))))
(let (($generated@@467 ($generated@@371 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@370 $generated@@467 $generated@@466)) (= (= ($generated@@464 $generated@@465) 0) (= $generated@@465 ($generated@@369 $generated@@467 $generated@@466))))))
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
 (=> (and (= (type $generated@@468) ($generated@@100 $generated@@471 $generated@@4)) (= (type $generated@@469) ($generated@@100 $generated@@471 $generated@@4))) (= ($generated@@0 ($generated@@105 ($generated@@274 $generated@@468 $generated@@469) $generated@@470))  (and ($generated@@0 ($generated@@105 $generated@@468 $generated@@470)) ($generated@@0 ($generated@@105 $generated@@469 $generated@@470))))))
 :pattern ( ($generated@@105 ($generated@@274 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
 (=> (and (= (type $generated@@472) ($generated@@100 $generated@@475 $generated@@4)) (= (type $generated@@473) ($generated@@100 $generated@@475 $generated@@4))) (= ($generated@@0 ($generated@@105 ($generated@@457 $generated@@472 $generated@@473) $generated@@474))  (and ($generated@@0 ($generated@@105 $generated@@472 $generated@@474)) (not ($generated@@0 ($generated@@105 $generated@@473 $generated@@474)))))))
 :pattern ( ($generated@@105 ($generated@@457 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@100 $generated@@193 $generated@@4)) (= (type $generated@@477) $generated@@83)) (= (type $generated@@478) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@476 ($generated@@201 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@193) ($generated@@0 ($generated@@105 $generated@@476 $generated@@479))) ($generated@@326 $generated@@479 $generated@@477 $generated@@478))
 :pattern ( ($generated@@105 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@98 $generated@@476 ($generated@@201 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@100 $generated@@193 $generated@@4)) (= (type $generated@@481) $generated@@83)) (= (type $generated@@482) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@480 ($generated@@313 $generated@@481) $generated@@482) (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@193) ($generated@@0 ($generated@@105 $generated@@480 $generated@@483))) ($generated@@326 $generated@@483 $generated@@481 $generated@@482))
 :pattern ( ($generated@@105 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@98 $generated@@480 ($generated@@313 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated ($generated@@105 ($generated@@363 $generated@@485) $generated@@484)) 0))
 :pattern ( (let (($generated@@485 (type $generated@@484)))
($generated@@105 ($generated@@363 $generated@@485) $generated@@484)))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) ($generated@@100 $generated@@193 $generated@@4))
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@372 (type $generated@@489))))
(let (($generated@@491 ($generated@@371 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489)) ($generated@@100 $generated@@491 $generated@@490))))
 :pattern ( ($generated@@487 $generated@@489))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) ($generated@@370 $generated@@193 $generated@@193)) (= (type $generated@@493) $generated@@193)) (= ($generated@@0 ($generated@@105 ($generated@@486 $generated@@492) $generated@@493))  (and ($generated@@0 ($generated@@105 ($generated@@368 $generated@@492) ($generated@@191 ($generated@@413 $generated@@184 $generated@@493)))) (= ($generated@@105 ($generated@@487 $generated@@492) ($generated@@191 ($generated@@413 $generated@@184 $generated@@493))) ($generated@@192 ($generated@@413 $generated@@184 $generated@@493))))))
 :pattern ( ($generated@@105 ($generated@@486 $generated@@492) $generated@@493))
)))
(assert  (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@496)) ($generated@@100 $generated@@193 $generated@@4))
 :pattern ( ($generated@@494 $generated@@496))
)) (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@390 (type $generated@@497))))
(let (($generated@@499 ($generated@@389 (type $generated@@497))))
(= (type ($generated@@495 $generated@@497)) ($generated@@100 $generated@@499 $generated@@498))))
 :pattern ( ($generated@@495 $generated@@497))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) ($generated@@388 $generated@@193 $generated@@193)) (= (type $generated@@501) $generated@@193)) (= ($generated@@0 ($generated@@105 ($generated@@494 $generated@@500) $generated@@501))  (and ($generated@@0 ($generated@@105 ($generated@@386 $generated@@500) ($generated@@191 ($generated@@413 $generated@@184 $generated@@501)))) (= ($generated@@105 ($generated@@495 $generated@@500) ($generated@@191 ($generated@@413 $generated@@184 $generated@@501))) ($generated@@192 ($generated@@413 $generated@@184 $generated@@501))))))
 :pattern ( ($generated@@105 ($generated@@494 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(let (($generated@@505 ($generated@@371 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@370 $generated@@505 $generated@@504)) (= ($generated@@0 ($generated@@105 ($generated@@429 $generated@@502) $generated@@503)) (exists (($generated@@506 T@U) ) (!  (and (= (type $generated@@506) $generated@@505) (and ($generated@@0 ($generated@@105 ($generated@@368 $generated@@502) $generated@@506)) (= $generated@@503 ($generated@@105 ($generated@@487 $generated@@502) $generated@@506))))
 :pattern ( ($generated@@105 ($generated@@368 $generated@@502) $generated@@506))
 :pattern ( ($generated@@105 ($generated@@487 $generated@@502) $generated@@506))
))))))
 :pattern ( ($generated@@105 ($generated@@429 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(let (($generated@@510 ($generated@@389 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@388 $generated@@510 $generated@@509)) (= ($generated@@0 ($generated@@105 ($generated@@440 $generated@@507) $generated@@508)) (exists (($generated@@511 T@U) ) (!  (and (= (type $generated@@511) $generated@@510) (and ($generated@@0 ($generated@@105 ($generated@@386 $generated@@507) $generated@@511)) (= $generated@@508 ($generated@@105 ($generated@@495 $generated@@507) $generated@@511))))
 :pattern ( ($generated@@105 ($generated@@386 $generated@@507) $generated@@511))
 :pattern ( ($generated@@105 ($generated@@495 $generated@@507) $generated@@511))
))))))
 :pattern ( ($generated@@105 ($generated@@440 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@513 $generated@@514)) $generated@@83)
 :pattern ( ($generated@@512 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) ($generated@@370 $generated@@193 $generated@@193)) (= (type $generated@@516) $generated@@83)) (= (type $generated@@517) $generated@@83)) (= (type $generated@@518) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@515 ($generated@@512 $generated@@516 $generated@@517) $generated@@518) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@193) ($generated@@0 ($generated@@105 ($generated@@368 $generated@@515) $generated@@519))) (and ($generated@@326 ($generated@@105 ($generated@@487 $generated@@515) $generated@@519) $generated@@517 $generated@@518) ($generated@@326 $generated@@519 $generated@@516 $generated@@518)))
 :pattern ( ($generated@@105 ($generated@@487 $generated@@515) $generated@@519))
 :pattern ( ($generated@@105 ($generated@@368 $generated@@515) $generated@@519))
))))
 :pattern ( ($generated@@98 $generated@@515 ($generated@@512 $generated@@516 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (! (= (type ($generated@@520 $generated@@521 $generated@@522)) $generated@@83)
 :pattern ( ($generated@@520 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) ($generated@@388 $generated@@193 $generated@@193)) (= (type $generated@@524) $generated@@83)) (= (type $generated@@525) $generated@@83)) (= (type $generated@@526) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@523 ($generated@@520 $generated@@524 $generated@@525) $generated@@526) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@193) ($generated@@0 ($generated@@105 ($generated@@386 $generated@@523) $generated@@527))) (and ($generated@@326 ($generated@@105 ($generated@@495 $generated@@523) $generated@@527) $generated@@525 $generated@@526) ($generated@@326 $generated@@527 $generated@@524 $generated@@526)))
 :pattern ( ($generated@@105 ($generated@@495 $generated@@523) $generated@@527))
 :pattern ( ($generated@@105 ($generated@@386 $generated@@523) $generated@@527))
))))
 :pattern ( ($generated@@98 $generated@@523 ($generated@@520 $generated@@524 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= (type ($generated@@528 $generated@@529 $generated@@530)) ($generated@@100 $generated@@531 $generated@@4)))
 :pattern ( ($generated@@528 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@533)))
 (=> (and (and (= (type $generated@@532) ($generated@@100 $generated@@535 $generated@@4)) (= (type $generated@@534) $generated@@535)) ($generated@@0 ($generated@@105 $generated@@532 $generated@@534))) ($generated@@0 ($generated@@105 ($generated@@528 $generated@@532 $generated@@533) $generated@@534))))
 :pattern ( ($generated@@528 $generated@@532 $generated@@533) ($generated@@105 $generated@@532 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (=> (and (and (= (type $generated@@536) ($generated@@100 $generated@@539 $generated@@4)) (= (type $generated@@537) ($generated@@100 $generated@@539 $generated@@4))) ($generated@@0 ($generated@@105 $generated@@536 $generated@@538))) ($generated@@0 ($generated@@105 ($generated@@267 $generated@@536 $generated@@537) $generated@@538))))
 :pattern ( ($generated@@267 $generated@@536 $generated@@537) ($generated@@105 $generated@@536 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (=> (and (and (= (type $generated@@540) ($generated@@100 $generated@@543 $generated@@4)) (= (type $generated@@541) ($generated@@100 $generated@@543 $generated@@4))) ($generated@@0 ($generated@@105 $generated@@541 $generated@@542))) ($generated@@0 ($generated@@105 ($generated@@267 $generated@@540 $generated@@541) $generated@@542))))
 :pattern ( ($generated@@267 $generated@@540 $generated@@541) ($generated@@105 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@545)))
 (=> (and (= (type $generated@@544) ($generated@@100 $generated@@547 $generated@@4)) (= (type $generated@@546) $generated@@547)) (= ($generated@@0 ($generated@@105 ($generated@@528 $generated@@544 $generated@@545) $generated@@546))  (or (= $generated@@546 $generated@@545) ($generated@@0 ($generated@@105 $generated@@544 $generated@@546))))))
 :pattern ( ($generated@@105 ($generated@@528 $generated@@544 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@548) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@549) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@550) ($generated@@100 $generated@@101 $generated@@102))) (not (= $generated@@548 $generated@@550))) (and ($generated@@156 $generated@@548 $generated@@549) ($generated@@156 $generated@@549 $generated@@550))) ($generated@@156 $generated@@548 $generated@@550))
 :pattern ( ($generated@@156 $generated@@548 $generated@@549) ($generated@@156 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
 (=> (and (and (= (type $generated@@551) ($generated@@100 $generated@@554 $generated@@4)) (= (type $generated@@552) ($generated@@100 $generated@@554 $generated@@4))) ($generated@@0 ($generated@@105 $generated@@552 $generated@@553))) (not ($generated@@0 ($generated@@105 ($generated@@457 $generated@@551 $generated@@552) $generated@@553)))))
 :pattern ( ($generated@@457 $generated@@551 $generated@@552) ($generated@@105 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@556 T@T) ) (! (= (type ($generated@@555 $generated@@556)) ($generated@@100 $generated@@556 $generated@@4))
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@390 (type $generated@@557))))
(let (($generated@@559 ($generated@@389 (type $generated@@557))))
 (=> (= (type $generated@@557) ($generated@@388 $generated@@559 $generated@@558)) (= (= $generated@@557 ($generated@@387 $generated@@559 $generated@@558)) (= ($generated@@386 $generated@@557) ($generated@@555 $generated@@559))))))
 :pattern ( ($generated@@386 $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@390 (type $generated@@560))))
(let (($generated@@562 ($generated@@389 (type $generated@@560))))
 (=> (= (type $generated@@560) ($generated@@388 $generated@@562 $generated@@561)) (= (= $generated@@560 ($generated@@387 $generated@@562 $generated@@561)) (= ($generated@@440 $generated@@560) ($generated@@555 $generated@@561))))))
 :pattern ( ($generated@@440 $generated@@560))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@390 (type $generated@@563))))
(let (($generated@@565 ($generated@@389 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@388 $generated@@565 $generated@@564)) (= (= $generated@@563 ($generated@@387 $generated@@565 $generated@@564)) (= ($generated@@494 $generated@@563) ($generated@@555 $generated@@193))))))
 :pattern ( ($generated@@494 $generated@@563))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@372 (type $generated@@566))))
(let (($generated@@568 ($generated@@371 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@370 $generated@@568 $generated@@567)) (or (= $generated@@566 ($generated@@369 $generated@@568 $generated@@567)) (exists (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (and (and (= (type $generated@@569) $generated@@193) (= (type $generated@@570) $generated@@193)) ($generated@@0 ($generated@@105 ($generated@@486 $generated@@566) ($generated@@347 ($generated@@286 $generated@@569 $generated@@570)))))
 :no-pattern (type $generated@@569)
 :no-pattern (type $generated@@570)
 :no-pattern ($generated $generated@@569)
 :no-pattern ($generated@@0 $generated@@569)
 :no-pattern ($generated $generated@@570)
 :no-pattern ($generated@@0 $generated@@570)
))))))
 :pattern ( ($generated@@486 $generated@@566))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@390 (type $generated@@571))))
(let (($generated@@573 ($generated@@389 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@388 $generated@@573 $generated@@572)) (or (= $generated@@571 ($generated@@387 $generated@@573 $generated@@572)) (exists (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (and (and (= (type $generated@@574) $generated@@193) (= (type $generated@@575) $generated@@193)) ($generated@@0 ($generated@@105 ($generated@@494 $generated@@571) ($generated@@347 ($generated@@286 $generated@@574 $generated@@575)))))
 :no-pattern (type $generated@@574)
 :no-pattern (type $generated@@575)
 :no-pattern ($generated $generated@@574)
 :no-pattern ($generated@@0 $generated@@574)
 :no-pattern ($generated $generated@@575)
 :no-pattern ($generated@@0 $generated@@575)
))))))
 :pattern ( ($generated@@494 $generated@@571))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@89)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@T) ) (!  (=> (and (= (type $generated@@578) $generated@@89) (= (type $generated@@579) $generated@@87)) (and (= ($generated@@576 ($generated@@295 $generated@@580 $generated@@578 $generated@@579)) $generated@@578) (= ($generated@@96 ($generated@@295 $generated@@580 $generated@@578 $generated@@579)) $generated@@579)))
 :pattern ( ($generated@@295 $generated@@580 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@193) ($generated@@287 $generated@@581 $generated@@46)) (and (= ($generated@@347 ($generated@@413 $generated@@2 $generated@@581)) $generated@@581) ($generated@@176 ($generated@@413 $generated@@2 $generated@@581) $generated@@46)))
 :pattern ( ($generated@@287 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@193) ($generated@@287 $generated@@582 $generated@@47)) (and (= ($generated@@347 ($generated@@413 $generated@@3 $generated@@582)) $generated@@582) ($generated@@176 ($generated@@413 $generated@@3 $generated@@582) $generated@@47)))
 :pattern ( ($generated@@287 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@193) ($generated@@287 $generated@@583 $generated@@44)) (and (= ($generated@@347 ($generated@@413 $generated@@4 $generated@@583)) $generated@@583) ($generated@@176 ($generated@@413 $generated@@4 $generated@@583) $generated@@44)))
 :pattern ( ($generated@@287 $generated@@583 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@584) 22))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@193) ($generated@@287 $generated@@585 $generated@@45)) (and (= ($generated@@347 ($generated@@413 $generated@@584 $generated@@585)) $generated@@585) ($generated@@176 ($generated@@413 $generated@@584 $generated@@585) $generated@@45)))
 :pattern ( ($generated@@287 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@103 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@100 $generated@@588 $generated@@4)) (= (type $generated@@587) ($generated@@100 $generated@@588 $generated@@4))) (and (= (+ (+ ($generated@@304 ($generated@@457 $generated@@586 $generated@@587)) ($generated@@304 ($generated@@457 $generated@@587 $generated@@586))) ($generated@@304 ($generated@@274 $generated@@586 $generated@@587))) ($generated@@304 ($generated@@267 $generated@@586 $generated@@587))) (= ($generated@@304 ($generated@@457 $generated@@586 $generated@@587)) (- ($generated@@304 $generated@@586) ($generated@@304 ($generated@@274 $generated@@586 $generated@@587)))))))
 :pattern ( ($generated@@304 ($generated@@457 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@83) (= ($generated@@287 ($generated@@347 $generated@@589) $generated@@590) ($generated@@176 $generated@@589 $generated@@590)))
 :pattern ( ($generated@@287 ($generated@@347 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@103 (type $generated@@591))))
 (=> (= (type $generated@@591) ($generated@@100 $generated@@592 $generated@@4)) (<= 0 ($generated@@304 $generated@@591))))
 :pattern ( ($generated@@304 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@103 (type $generated@@593))))
 (=> (= (type $generated@@593) ($generated@@100 $generated@@594 $generated@@2)) (<= 0 ($generated@@362 $generated@@593))))
 :pattern ( ($generated@@362 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@341 (type $generated@@595))))
 (=> (= (type $generated@@595) ($generated@@340 $generated@@596)) (<= 0 ($generated@@339 $generated@@595))))
 :pattern ( ($generated@@339 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@372 (type $generated@@597))))
(let (($generated@@599 ($generated@@371 (type $generated@@597))))
 (=> (= (type $generated@@597) ($generated@@370 $generated@@599 $generated@@598)) (<= 0 ($generated@@464 $generated@@597)))))
 :pattern ( ($generated@@464 $generated@@597))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@83)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@83) (= (type $generated@@603) $generated@@83)) (= ($generated@@600 ($generated@@512 $generated@@602 $generated@@603)) $generated@@602))
 :pattern ( ($generated@@512 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@83)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@83) (= (type $generated@@607) $generated@@83)) (= ($generated@@604 ($generated@@512 $generated@@606 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@512 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@83) (= (type $generated@@609) $generated@@83)) (= ($generated@@94 ($generated@@512 $generated@@608 $generated@@609)) $generated@@58))
 :pattern ( ($generated@@512 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@83)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@83) (= (type $generated@@613) $generated@@83)) (= ($generated@@610 ($generated@@520 $generated@@612 $generated@@613)) $generated@@612))
 :pattern ( ($generated@@520 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@83)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@83) (= (type $generated@@617) $generated@@83)) (= ($generated@@614 ($generated@@520 $generated@@616 $generated@@617)) $generated@@617))
 :pattern ( ($generated@@520 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@83) (= (type $generated@@619) $generated@@83)) (= ($generated@@94 ($generated@@520 $generated@@618 $generated@@619)) $generated@@59))
 :pattern ( ($generated@@520 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@193) (= (type $generated@@621) $generated@@193)) (= ($generated@@332 ($generated@@286 $generated@@620 $generated@@621)) $generated@@62))
 :pattern ( ($generated@@286 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ) (! (= (type ($generated@@622 $generated@@623)) $generated@@83)
 :pattern ( ($generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@83) (= (type $generated@@625) $generated@@83)) (= ($generated@@622 ($generated@@183 $generated@@624 $generated@@625)) $generated@@624))
 :pattern ( ($generated@@183 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (! (= (type ($generated@@626 $generated@@627)) $generated@@83)
 :pattern ( ($generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@83) (= (type $generated@@629) $generated@@83)) (= ($generated@@626 ($generated@@183 $generated@@628 $generated@@629)) $generated@@629))
 :pattern ( ($generated@@183 $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@193) (= (type $generated@@631) $generated@@193)) (= ($generated@@191 ($generated@@286 $generated@@630 $generated@@631)) $generated@@630))
 :pattern ( ($generated@@286 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@193) (= (type $generated@@633) $generated@@193)) (= ($generated@@192 ($generated@@286 $generated@@632 $generated@@633)) $generated@@633))
 :pattern ( ($generated@@286 $generated@@632 $generated@@633))
)))
(assert  (and (forall (($generated@@636 T@U) ) (! (= (type ($generated@@634 $generated@@636)) $generated@@83)
 :pattern ( ($generated@@634 $generated@@636))
)) (forall (($generated@@637 T@U) ($generated@@638 Int) ) (! (let (($generated@@639 ($generated@@341 (type $generated@@637))))
(= (type ($generated@@635 $generated@@637 $generated@@638)) $generated@@639))
 :pattern ( ($generated@@635 $generated@@637 $generated@@638))
))))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@340 $generated@@193)) (= (type $generated@@641) $generated@@83)) (= (type $generated@@642) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@640 ($generated@@634 $generated@@641) $generated@@642) (forall (($generated@@643 Int) ) (!  (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@339 $generated@@640))) ($generated@@326 ($generated@@635 $generated@@640 $generated@@643) $generated@@641 $generated@@642))
 :pattern ( ($generated@@635 $generated@@640 $generated@@643))
))))
 :pattern ( ($generated@@98 $generated@@640 ($generated@@634 $generated@@641) $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@645)))
 (=> (= (type $generated@@644) ($generated@@100 $generated@@646 $generated@@4)) ($generated@@0 ($generated@@105 ($generated@@528 $generated@@644 $generated@@645) $generated@@645))))
 :pattern ( ($generated@@528 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@648)))
 (=> (and (= (type $generated@@647) ($generated@@100 $generated@@649 $generated@@4)) ($generated@@0 ($generated@@105 $generated@@647 $generated@@648))) (= ($generated@@304 ($generated@@528 $generated@@647 $generated@@648)) ($generated@@304 $generated@@647))))
 :pattern ( ($generated@@304 ($generated@@528 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@651 Int) ) (! (= ($generated@@650 ($generated@@99 $generated@@651)) $generated@@651)
 :pattern ( ($generated@@99 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@83)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@83) (= ($generated@@652 ($generated@@201 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@201 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@83) (= ($generated@@94 ($generated@@201 $generated@@655)) $generated@@54))
 :pattern ( ($generated@@201 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@83)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@83) (= ($generated@@656 ($generated@@313 $generated@@658)) $generated@@658))
 :pattern ( ($generated@@313 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@83) (= ($generated@@94 ($generated@@313 $generated@@659)) $generated@@55))
 :pattern ( ($generated@@313 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ) (! (= (type ($generated@@660 $generated@@661)) $generated@@83)
 :pattern ( ($generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@83) (= ($generated@@660 ($generated@@205 $generated@@662)) $generated@@662))
 :pattern ( ($generated@@205 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@83) (= ($generated@@94 ($generated@@205 $generated@@663)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ) (! (= (type ($generated@@664 $generated@@665)) $generated@@83)
 :pattern ( ($generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@83) (= ($generated@@664 ($generated@@634 $generated@@666)) $generated@@666))
 :pattern ( ($generated@@634 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@83) (= ($generated@@94 ($generated@@634 $generated@@667)) $generated@@57))
 :pattern ( ($generated@@634 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@668)))
(= ($generated@@413 $generated@@669 ($generated@@347 $generated@@668)) $generated@@668))
 :pattern ( ($generated@@347 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@670) ($generated@@370 $generated@@193 $generated@@193)) (= (type $generated@@671) $generated@@83)) (= (type $generated@@672) $generated@@83)) (= ($generated@@176 $generated@@670 ($generated@@512 $generated@@671 $generated@@672)) (forall (($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@193) ($generated@@0 ($generated@@105 ($generated@@368 $generated@@670) $generated@@673))) (and ($generated@@287 ($generated@@105 ($generated@@487 $generated@@670) $generated@@673) $generated@@672) ($generated@@287 $generated@@673 $generated@@671)))
 :pattern ( ($generated@@105 ($generated@@487 $generated@@670) $generated@@673))
 :pattern ( ($generated@@105 ($generated@@368 $generated@@670) $generated@@673))
))))
 :pattern ( ($generated@@176 $generated@@670 ($generated@@512 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@674) ($generated@@388 $generated@@193 $generated@@193)) (= (type $generated@@675) $generated@@83)) (= (type $generated@@676) $generated@@83)) (= ($generated@@176 $generated@@674 ($generated@@520 $generated@@675 $generated@@676)) (forall (($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@193) ($generated@@0 ($generated@@105 ($generated@@386 $generated@@674) $generated@@677))) (and ($generated@@287 ($generated@@105 ($generated@@495 $generated@@674) $generated@@677) $generated@@676) ($generated@@287 $generated@@677 $generated@@675)))
 :pattern ( ($generated@@105 ($generated@@495 $generated@@674) $generated@@677))
 :pattern ( ($generated@@105 ($generated@@386 $generated@@674) $generated@@677))
))))
 :pattern ( ($generated@@176 $generated@@674 ($generated@@520 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) $generated@@193) (= (type $generated@@681) $generated@@193)) (< ($generated@@678 $generated@@680) ($generated@@679 ($generated@@286 $generated@@680 $generated@@681))))
 :pattern ( ($generated@@286 $generated@@680 $generated@@681))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@193) (= (type $generated@@683) $generated@@193)) (< ($generated@@678 $generated@@683) ($generated@@679 ($generated@@286 $generated@@682 $generated@@683))))
 :pattern ( ($generated@@286 $generated@@682 $generated@@683))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (! (let (($generated@@686 ($generated@@103 (type $generated@@684))))
 (=> (and (= (type $generated@@684) ($generated@@100 $generated@@686 $generated@@4)) (= (type $generated@@685) ($generated@@100 $generated@@686 $generated@@4))) (= ($generated@@267 $generated@@684 ($generated@@267 $generated@@684 $generated@@685)) ($generated@@267 $generated@@684 $generated@@685))))
 :pattern ( ($generated@@267 $generated@@684 ($generated@@267 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (! (let (($generated@@689 ($generated@@103 (type $generated@@687))))
 (=> (and (= (type $generated@@687) ($generated@@100 $generated@@689 $generated@@4)) (= (type $generated@@688) ($generated@@100 $generated@@689 $generated@@4))) (= ($generated@@274 $generated@@687 ($generated@@274 $generated@@687 $generated@@688)) ($generated@@274 $generated@@687 $generated@@688))))
 :pattern ( ($generated@@274 $generated@@687 ($generated@@274 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) $generated@@193) (= (type $generated@@691) $generated@@83)) (= (type $generated@@692) $generated@@83)) ($generated@@287 $generated@@690 ($generated@@512 $generated@@691 $generated@@692))) (and (= ($generated@@347 ($generated@@413 ($generated@@370 $generated@@193 $generated@@193) $generated@@690)) $generated@@690) ($generated@@176 ($generated@@413 ($generated@@370 $generated@@193 $generated@@193) $generated@@690) ($generated@@512 $generated@@691 $generated@@692))))
 :pattern ( ($generated@@287 $generated@@690 ($generated@@512 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) $generated@@193) (= (type $generated@@694) $generated@@83)) (= (type $generated@@695) $generated@@83)) ($generated@@287 $generated@@693 ($generated@@520 $generated@@694 $generated@@695))) (and (= ($generated@@347 ($generated@@413 ($generated@@388 $generated@@193 $generated@@193) $generated@@693)) $generated@@693) ($generated@@176 ($generated@@413 ($generated@@388 $generated@@193 $generated@@193) $generated@@693) ($generated@@520 $generated@@694 $generated@@695))))
 :pattern ( ($generated@@287 $generated@@693 ($generated@@520 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (and (= (type $generated@@696) $generated@@83) (= (type $generated@@697) $generated@@83)) (= (type $generated@@698) $generated@@193)) ($generated@@287 $generated@@698 ($generated@@183 $generated@@696 $generated@@697))) (and (= ($generated@@347 ($generated@@413 $generated@@184 $generated@@698)) $generated@@698) ($generated@@176 ($generated@@413 $generated@@184 $generated@@698) ($generated@@183 $generated@@696 $generated@@697))))
 :pattern ( ($generated@@287 $generated@@698 ($generated@@183 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@700 T@T) ) (! (= (type ($generated@@699 $generated@@700)) ($generated@@100 $generated@@700 $generated@@4))
 :pattern ( ($generated@@699 $generated@@700))
)))
(assert (forall (($generated@@701 T@U) ) (! (let (($generated@@702 (type $generated@@701)))
 (not ($generated@@0 ($generated@@105 ($generated@@699 $generated@@702) $generated@@701))))
 :pattern ( (let (($generated@@702 (type $generated@@701)))
($generated@@105 ($generated@@699 $generated@@702) $generated@@701)))
)))
(assert (forall (($generated@@703 T@U) ) (! (let (($generated@@704 (type $generated@@703)))
 (not ($generated@@0 ($generated@@105 ($generated@@555 $generated@@704) $generated@@703))))
 :pattern ( (let (($generated@@704 (type $generated@@703)))
($generated@@105 ($generated@@555 $generated@@704) $generated@@703)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (= (type $generated@@705) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@706) $generated@@101)) (and ($generated@@174 $generated@@705) (and (not (= $generated@@706 $generated@@167)) (= ($generated@@175 $generated@@706) $generated@@170)))) ($generated@@176 ($generated@@107 ($generated@@105 $generated@@705 $generated@@706) $generated@@300) $generated@@163))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@705 $generated@@706) $generated@@300))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@707) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@708) $generated@@101)) (and ($generated@@174 $generated@@707) (and (not (= $generated@@708 $generated@@167)) (= ($generated@@175 $generated@@708) $generated@@170)))) ($generated@@176 ($generated@@107 ($generated@@105 $generated@@707 $generated@@708) $generated@@301) $generated@@200))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@707 $generated@@708) $generated@@301))
)))
(assert (forall (($generated@@710 T@U) ) (! (= (type ($generated@@709 $generated@@710)) $generated@@90)
 :pattern ( ($generated@@709 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@83) (= (type $generated@@712) $generated@@83)) (and (= ($generated@@94 ($generated@@183 $generated@@711 $generated@@712)) $generated@@63) (= ($generated@@709 ($generated@@183 $generated@@711 $generated@@712)) $generated@@73)))
 :pattern ( ($generated@@183 $generated@@711 $generated@@712))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@184) (= ($generated@@678 ($generated@@347 $generated@@713)) ($generated@@679 $generated@@713)))
 :pattern ( ($generated@@678 ($generated@@347 $generated@@713)))
)))
(assert (forall (($generated@@714 T@U) ) (! (let (($generated@@715 ($generated@@372 (type $generated@@714))))
(let (($generated@@716 ($generated@@371 (type $generated@@714))))
 (=> (= (type $generated@@714) ($generated@@370 $generated@@716 $generated@@715)) (= ($generated@@304 ($generated@@368 $generated@@714)) ($generated@@464 $generated@@714)))))
 :pattern ( ($generated@@304 ($generated@@368 $generated@@714)))
)))
(assert (forall (($generated@@717 T@U) ) (! (let (($generated@@718 ($generated@@372 (type $generated@@717))))
(let (($generated@@719 ($generated@@371 (type $generated@@717))))
 (=> (= (type $generated@@717) ($generated@@370 $generated@@719 $generated@@718)) (= ($generated@@304 ($generated@@486 $generated@@717)) ($generated@@464 $generated@@717)))))
 :pattern ( ($generated@@304 ($generated@@486 $generated@@717)))
)))
(assert (forall (($generated@@720 T@U) ) (! (let (($generated@@721 ($generated@@372 (type $generated@@720))))
(let (($generated@@722 ($generated@@371 (type $generated@@720))))
 (=> (= (type $generated@@720) ($generated@@370 $generated@@722 $generated@@721)) (<= ($generated@@304 ($generated@@429 $generated@@720)) ($generated@@464 $generated@@720)))))
 :pattern ( ($generated@@304 ($generated@@429 $generated@@720)))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@723) $generated@@193) ($generated@@287 $generated@@723 ($generated@@99 0))) (and (= ($generated@@347 ($generated@@413 $generated@@2 $generated@@723)) $generated@@723) ($generated@@176 ($generated@@413 ($generated@@100 $generated@@193 $generated@@4) $generated@@723) ($generated@@99 0))))
 :pattern ( ($generated@@287 $generated@@723 ($generated@@99 0)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@193) (= (type $generated@@725) $generated@@83)) ($generated@@287 $generated@@724 ($generated@@201 $generated@@725))) (and (= ($generated@@347 ($generated@@413 ($generated@@100 $generated@@193 $generated@@4) $generated@@724)) $generated@@724) ($generated@@176 ($generated@@413 ($generated@@100 $generated@@193 $generated@@4) $generated@@724) ($generated@@201 $generated@@725))))
 :pattern ( ($generated@@287 $generated@@724 ($generated@@201 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@193) (= (type $generated@@727) $generated@@83)) ($generated@@287 $generated@@726 ($generated@@313 $generated@@727))) (and (= ($generated@@347 ($generated@@413 ($generated@@100 $generated@@193 $generated@@4) $generated@@726)) $generated@@726) ($generated@@176 ($generated@@413 ($generated@@100 $generated@@193 $generated@@4) $generated@@726) ($generated@@313 $generated@@727))))
 :pattern ( ($generated@@287 $generated@@726 ($generated@@313 $generated@@727)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (= (type $generated@@728) $generated@@193) (= (type $generated@@729) $generated@@83)) ($generated@@287 $generated@@728 ($generated@@205 $generated@@729))) (and (= ($generated@@347 ($generated@@413 ($generated@@100 $generated@@193 $generated@@2) $generated@@728)) $generated@@728) ($generated@@176 ($generated@@413 ($generated@@100 $generated@@193 $generated@@2) $generated@@728) ($generated@@205 $generated@@729))))
 :pattern ( ($generated@@287 $generated@@728 ($generated@@205 $generated@@729)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (= (type $generated@@730) $generated@@193) (= (type $generated@@731) $generated@@83)) ($generated@@287 $generated@@730 ($generated@@634 $generated@@731))) (and (= ($generated@@347 ($generated@@413 ($generated@@340 $generated@@193) $generated@@730)) $generated@@730) ($generated@@176 ($generated@@413 ($generated@@340 $generated@@193) $generated@@730) ($generated@@634 $generated@@731))))
 :pattern ( ($generated@@287 $generated@@730 ($generated@@634 $generated@@731)))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (= (type $generated@@732) $generated@@101) (= (type $generated@@733) ($generated@@100 $generated@@101 $generated@@102))) (and (not (= $generated@@732 $generated@@167)) ($generated@@98 $generated@@732 $generated@@170 $generated@@733))) ($generated@@98 $generated@@732 $generated@@198 $generated@@733))
 :pattern ( ($generated@@98 $generated@@732 $generated@@170 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ) (! (let (($generated@@735 ($generated@@103 (type $generated@@734))))
 (=> (= (type $generated@@734) ($generated@@100 $generated@@735 $generated@@4)) (and (= (= ($generated@@304 $generated@@734) 0) (= $generated@@734 ($generated@@699 $generated@@735))) (=> (not (= ($generated@@304 $generated@@734) 0)) (exists (($generated@@736 T@U) ) (!  (and (= (type $generated@@736) $generated@@735) ($generated@@0 ($generated@@105 $generated@@734 $generated@@736)))
 :no-pattern (type $generated@@736)
 :no-pattern ($generated $generated@@736)
 :no-pattern ($generated@@0 $generated@@736)
))))))
 :pattern ( ($generated@@304 $generated@@734))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (= (type $generated@@737) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@738) $generated@@101)) (=> (and (and ($generated@@174 $generated@@737) (and (not (= $generated@@738 $generated@@167)) ($generated@@176 $generated@@738 $generated@@166))) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@737 $generated@@738) $generated@@60))) ($generated@@98 ($generated@@107 ($generated@@105 $generated@@737 $generated@@738) $generated@@294) $generated@@160 $generated@@737)))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@737 $generated@@738) $generated@@294))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (! (let (($generated@@743 (type $generated@@742)))
 (=> (and (and (and (= (type $generated@@739) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@740) $generated@@101)) (= (type $generated@@741) ($generated@@85 $generated@@743))) ($generated@@174 ($generated@@106 $generated@@739 $generated@@740 ($generated@@108 ($generated@@105 $generated@@739 $generated@@740) $generated@@741 $generated@@742)))) ($generated@@156 $generated@@739 ($generated@@106 $generated@@739 $generated@@740 ($generated@@108 ($generated@@105 $generated@@739 $generated@@740) $generated@@741 $generated@@742)))))
 :pattern ( ($generated@@106 $generated@@739 $generated@@740 ($generated@@108 ($generated@@105 $generated@@739 $generated@@740) $generated@@741 $generated@@742)))
)))
(assert (= ($generated@@94 $generated@@160) $generated@@64))
(assert (= ($generated@@709 $generated@@160) $generated@@74))
(assert (= ($generated@@94 $generated@@163) $generated@@65))
(assert (= ($generated@@709 $generated@@163) $generated@@75))
(assert (= ($generated@@94 $generated@@200) $generated@@66))
(assert (= ($generated@@709 $generated@@200) $generated@@76))
(assert (= ($generated@@94 $generated@@166) $generated@@68))
(assert (= ($generated@@709 $generated@@166) $generated@@77))
(assert (= ($generated@@94 $generated@@198) $generated@@69))
(assert (= ($generated@@709 $generated@@198) $generated@@77))
(assert (= ($generated@@94 $generated@@170) $generated@@71))
(assert (= ($generated@@709 $generated@@170) $generated@@78))
(assert (= ($generated@@94 $generated@@283) $generated@@72))
(assert (= ($generated@@709 $generated@@283) $generated@@78))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (and (= (type $generated@@744) ($generated@@100 $generated@@193 $generated@@2)) (= (type $generated@@745) $generated@@83)) (= (type $generated@@746) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@744 ($generated@@205 $generated@@745) $generated@@746) (forall (($generated@@747 T@U) ) (!  (=> (and (= (type $generated@@747) $generated@@193) (< 0 ($generated ($generated@@105 $generated@@744 $generated@@747)))) ($generated@@326 $generated@@747 $generated@@745 $generated@@746))
 :pattern ( ($generated@@105 $generated@@744 $generated@@747))
))))
 :pattern ( ($generated@@98 $generated@@744 ($generated@@205 $generated@@745) $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (! (let (($generated@@750 (type $generated@@749)))
 (=> (and (= (type $generated@@748) ($generated@@100 $generated@@750 $generated@@4)) (not ($generated@@0 ($generated@@105 $generated@@748 $generated@@749)))) (= ($generated@@304 ($generated@@528 $generated@@748 $generated@@749)) (+ ($generated@@304 $generated@@748) 1))))
 :pattern ( ($generated@@304 ($generated@@528 $generated@@748 $generated@@749)))
)))
(assert (forall (($generated@@751 T@U) ) (!  (=> (= (type $generated@@751) $generated@@101) (= ($generated@@176 $generated@@751 $generated@@166)  (or (= $generated@@751 $generated@@167) ($generated@@181 ($generated@@175 $generated@@751)))))
 :pattern ( ($generated@@176 $generated@@751 $generated@@166))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (! (let (($generated@@754 ($generated@@103 (type $generated@@752))))
 (=> (and (= (type $generated@@752) ($generated@@100 $generated@@754 $generated@@4)) (= (type $generated@@753) ($generated@@100 $generated@@754 $generated@@4))) (= ($generated@@456 $generated@@752 $generated@@753) (forall (($generated@@755 T@U) ) (!  (=> (= (type $generated@@755) $generated@@754) (or (not ($generated@@0 ($generated@@105 $generated@@752 $generated@@755))) (not ($generated@@0 ($generated@@105 $generated@@753 $generated@@755)))))
 :pattern ( ($generated@@105 $generated@@752 $generated@@755))
 :pattern ( ($generated@@105 $generated@@753 $generated@@755))
)))))
 :pattern ( ($generated@@456 $generated@@752 $generated@@753))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (and (= (type $generated@@756) $generated@@184) (= (type $generated@@757) $generated@@83)) (= (type $generated@@758) ($generated@@100 $generated@@101 $generated@@102))) (and ($generated@@174 $generated@@758) (and ($generated@@182 $generated@@756) (exists (($generated@@759 T@U) ) (!  (and (= (type $generated@@759) $generated@@83) ($generated@@98 $generated@@756 ($generated@@183 $generated@@757 $generated@@759) $generated@@758))
 :pattern ( ($generated@@98 $generated@@756 ($generated@@183 $generated@@757 $generated@@759) $generated@@758))
))))) ($generated@@326 ($generated@@191 $generated@@756) $generated@@757 $generated@@758))
 :pattern ( ($generated@@326 ($generated@@191 $generated@@756) $generated@@757 $generated@@758))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (and (= (type $generated@@760) $generated@@184) (= (type $generated@@761) $generated@@83)) (= (type $generated@@762) ($generated@@100 $generated@@101 $generated@@102))) (and ($generated@@174 $generated@@762) (and ($generated@@182 $generated@@760) (exists (($generated@@763 T@U) ) (!  (and (= (type $generated@@763) $generated@@83) ($generated@@98 $generated@@760 ($generated@@183 $generated@@763 $generated@@761) $generated@@762))
 :pattern ( ($generated@@98 $generated@@760 ($generated@@183 $generated@@763 $generated@@761) $generated@@762))
))))) ($generated@@326 ($generated@@192 $generated@@760) $generated@@761 $generated@@762))
 :pattern ( ($generated@@326 ($generated@@192 $generated@@760) $generated@@761 $generated@@762))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 T@U) ) (!  (=> (and (= (type $generated@@764) $generated@@193) (= (type $generated@@765) $generated@@193)) (= ($generated@@286 ($generated@@322 $generated@@764) ($generated@@322 $generated@@765)) ($generated@@322 ($generated@@286 $generated@@764 $generated@@765))))
 :pattern ( ($generated@@286 ($generated@@322 $generated@@764) ($generated@@322 $generated@@765)))
)))
(assert (forall (($generated@@766 Int) ) (! (= ($generated@@347 ($generated@@8 ($generated@@318 $generated@@766))) ($generated@@322 ($generated@@347 ($generated@@8 $generated@@766))))
 :pattern ( ($generated@@347 ($generated@@8 ($generated@@318 $generated@@766))))
)))
(assert (forall (($generated@@767 Real) ) (! (= ($generated@@347 ($generated@@9 ($generated@@320 $generated@@767))) ($generated@@322 ($generated@@347 ($generated@@9 $generated@@767))))
 :pattern ( ($generated@@347 ($generated@@9 ($generated@@320 $generated@@767))))
)))
(assert (forall (($generated@@768 T@U) ) (! (= ($generated@@347 ($generated@@322 $generated@@768)) ($generated@@322 ($generated@@347 $generated@@768)))
 :pattern ( ($generated@@347 ($generated@@322 $generated@@768)))
)))
(assert (forall (($generated@@769 T@U) ) (! (let (($generated@@770 ($generated@@341 (type $generated@@769))))
 (=> (and (= (type $generated@@769) ($generated@@340 $generated@@770)) (= ($generated@@339 $generated@@769) 0)) (= $generated@@769 ($generated@@338 $generated@@770))))
 :pattern ( ($generated@@339 $generated@@769))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (! (let (($generated@@774 (type $generated@@772)))
 (=> (and (and (= (type $generated@@771) ($generated@@100 $generated@@774 $generated@@2)) (= (type $generated@@773) $generated@@2)) (<= 0 ($generated $generated@@773))) (= ($generated@@362 ($generated@@106 $generated@@771 $generated@@772 $generated@@773)) (+ (- ($generated@@362 $generated@@771) ($generated ($generated@@105 $generated@@771 $generated@@772))) ($generated $generated@@773)))))
 :pattern ( ($generated@@362 ($generated@@106 $generated@@771 $generated@@772 $generated@@773)))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ) (! (let (($generated@@778 (type $generated@@777)))
 (=> (and (= (type $generated@@775) ($generated@@100 $generated@@778 $generated@@4)) (= (type $generated@@776) ($generated@@100 $generated@@778 $generated@@4))) (= ($generated@@0 ($generated@@105 ($generated@@267 $generated@@775 $generated@@776) $generated@@777))  (or ($generated@@0 ($generated@@105 $generated@@775 $generated@@777)) ($generated@@0 ($generated@@105 $generated@@776 $generated@@777))))))
 :pattern ( ($generated@@105 ($generated@@267 $generated@@775 $generated@@776) $generated@@777))
)))
(assert (forall (($generated@@779 T@U) ($generated@@780 T@U) ) (!  (=> (and (= (type $generated@@779) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@780) $generated@@2)) ($generated@@98 $generated@@780 $generated@@46 $generated@@779))
 :pattern ( ($generated@@98 $generated@@780 $generated@@46 $generated@@779))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (= (type $generated@@781) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@782) $generated@@3)) ($generated@@98 $generated@@782 $generated@@47 $generated@@781))
 :pattern ( ($generated@@98 $generated@@782 $generated@@47 $generated@@781))
)))
(assert (forall (($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (= (type $generated@@783) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@784) $generated@@4)) ($generated@@98 $generated@@784 $generated@@44 $generated@@783))
 :pattern ( ($generated@@98 $generated@@784 $generated@@44 $generated@@783))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ) (!  (=> (and (= (type $generated@@785) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@786) $generated@@584)) ($generated@@98 $generated@@786 $generated@@45 $generated@@785))
 :pattern ( ($generated@@98 $generated@@786 $generated@@45 $generated@@785))
)))
(assert (forall (($generated@@787 T@U) ($generated@@788 T@U) ) (!  (=> (and (= (type $generated@@787) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@788) $generated@@193)) ($generated@@98 $generated@@788 $generated@@48 $generated@@787))
 :pattern ( ($generated@@98 $generated@@788 $generated@@48 $generated@@787))
)))
(assert (forall (($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (= (type $generated@@789) ($generated@@340 $generated@@193)) (= (type $generated@@790) $generated@@83)) (= ($generated@@176 $generated@@789 ($generated@@634 $generated@@790)) (forall (($generated@@791 Int) ) (!  (=> (and (<= 0 $generated@@791) (< $generated@@791 ($generated@@339 $generated@@789))) ($generated@@287 ($generated@@635 $generated@@789 $generated@@791) $generated@@790))
 :pattern ( ($generated@@635 $generated@@789 $generated@@791))
))))
 :pattern ( ($generated@@176 $generated@@789 ($generated@@634 $generated@@790)))
)))
(assert (forall (($generated@@793 T@U) ($generated@@794 Int) ) (!  (=> (= (type $generated@@793) ($generated@@340 $generated@@193)) (=> (and (<= 0 $generated@@794) (< $generated@@794 ($generated@@339 $generated@@793))) (< ($generated@@679 ($generated@@413 $generated@@184 ($generated@@635 $generated@@793 $generated@@794))) ($generated@@792 $generated@@793))))
 :pattern ( ($generated@@679 ($generated@@413 $generated@@184 ($generated@@635 $generated@@793 $generated@@794))))
)))
(assert (forall (($generated@@795 T@U) ($generated@@796 T@U) ($generated@@797 T@U) ) (!  (=> (and (and (and (= (type $generated@@795) ($generated@@370 $generated@@193 $generated@@193)) (= (type $generated@@796) $generated@@83)) (= (type $generated@@797) $generated@@83)) ($generated@@176 $generated@@795 ($generated@@512 $generated@@796 $generated@@797))) (and (and ($generated@@176 ($generated@@368 $generated@@795) ($generated@@201 $generated@@796)) ($generated@@176 ($generated@@429 $generated@@795) ($generated@@201 $generated@@797))) ($generated@@176 ($generated@@486 $generated@@795) ($generated@@201 ($generated@@183 $generated@@796 $generated@@797)))))
 :pattern ( ($generated@@176 $generated@@795 ($generated@@512 $generated@@796 $generated@@797)))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (and (and (= (type $generated@@798) ($generated@@388 $generated@@193 $generated@@193)) (= (type $generated@@799) $generated@@83)) (= (type $generated@@800) $generated@@83)) ($generated@@176 $generated@@798 ($generated@@520 $generated@@799 $generated@@800))) (and (and ($generated@@176 ($generated@@386 $generated@@798) ($generated@@313 $generated@@799)) ($generated@@176 ($generated@@440 $generated@@798) ($generated@@313 $generated@@800))) ($generated@@176 ($generated@@494 $generated@@798) ($generated@@313 ($generated@@183 $generated@@799 $generated@@800)))))
 :pattern ( ($generated@@176 $generated@@798 ($generated@@520 $generated@@799 $generated@@800)))
)))
(assert (forall (($generated@@801 T@U) ) (!  (=> (= (type $generated@@801) $generated@@2) ($generated@@176 $generated@@801 $generated@@46))
 :pattern ( ($generated@@176 $generated@@801 $generated@@46))
)))
(assert (forall (($generated@@802 T@U) ) (!  (=> (= (type $generated@@802) $generated@@3) ($generated@@176 $generated@@802 $generated@@47))
 :pattern ( ($generated@@176 $generated@@802 $generated@@47))
)))
(assert (forall (($generated@@803 T@U) ) (!  (=> (= (type $generated@@803) $generated@@4) ($generated@@176 $generated@@803 $generated@@44))
 :pattern ( ($generated@@176 $generated@@803 $generated@@44))
)))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@584) ($generated@@176 $generated@@804 $generated@@45))
 :pattern ( ($generated@@176 $generated@@804 $generated@@45))
)))
(assert (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@193) ($generated@@176 $generated@@805 $generated@@48))
 :pattern ( ($generated@@176 $generated@@805 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@806 () T@U)
(declare-fun $generated@@807 () T@U)
(declare-fun $generated@@808 () T@U)
(declare-fun $generated@@809 () Int)
(declare-fun $generated@@810 () Int)
(declare-fun $generated@@811 () Real)
(declare-fun $generated@@812 () T@U)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 (T@U) Bool)
(declare-fun $generated@@815 () Int)
(declare-fun $generated@@816 () Int)
(assert  (and (and (and (and (= (type $generated@@806) ($generated@@213 $generated@@101 $generated@@4)) (= (type $generated@@807) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@808) $generated@@101)) (= (type $generated@@812) ($generated@@100 $generated@@193 $generated@@4))) (= (type $generated@@813) ($generated@@100 $generated@@101 $generated@@102))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@817  (=> (= $generated@@806 ($generated@@212 $generated@@167 $generated@@807 $generated@@60 false)) (=> (and (and (and (not ($generated@@0 ($generated@@107 ($generated@@105 $generated@@807 $generated@@808) $generated@@60))) (= ($generated ($generated@@107 ($generated@@105 $generated@@807 $generated@@808) $generated@@294)) $generated@@809)) (and (= ($generated ($generated@@107 ($generated@@105 $generated@@807 $generated@@808) $generated@@173)) $generated@@810) (= ($generated@@10 ($generated@@107 ($generated@@105 $generated@@807 $generated@@808) $generated@@300)) $generated@@811))) (and (and (= ($generated@@107 ($generated@@105 $generated@@807 $generated@@808) $generated@@301) $generated@@812) (= $generated@@813 ($generated@@106 $generated@@807 $generated@@808 ($generated@@108 ($generated@@105 $generated@@807 $generated@@808) $generated@@60 ($generated@@11 true))))) (and ($generated@@174 $generated@@813) ($generated@@814 $generated@@813)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@211 $generated@@806 $generated@@808 $generated@@301))) (=> ($generated@@0 ($generated@@211 $generated@@806 $generated@@808 $generated@@301)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@176 ($generated@@267 ($generated@@107 ($generated@@105 $generated@@813 $generated@@808) $generated@@301) ($generated@@528 ($generated@@699 $generated@@193) ($generated@@347 ($generated@@8 $generated@@815)))) $generated@@200))))))))
(let (($generated@@818  (=> (and ($generated@@174 $generated@@807) ($generated@@814 $generated@@807)) (=> (and (and (not (= $generated@@808 $generated@@167)) ($generated@@176 $generated@@808 $generated@@283)) (and (= 0 $generated@@816) (= (ControlFlow 0 4) 2))) $generated@@817))))
$generated@@818)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (Int) T@U)
(declare-fun $generated@@100 (T@T T@T) T@T)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@104 (T@T) T@T)
(declare-fun $generated@@105 (T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) Bool)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 (T@T T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (Int) Int)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Bool)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@336 (T@T) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@T) T@U)
(declare-fun $generated@@343 (T@T T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@T) T@U)
(declare-fun $generated@@361 (T@T T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@377 (T@U T@U) Bool)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@T T@U) T@U)
(declare-fun $generated@@397 () T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@433 (T@U) Int)
(declare-fun $generated@@439 (T@U) Int)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (T@U T@U) T@U)
(declare-fun $generated@@498 (T@T) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@527 () T@T)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@583 (T@U Int) T@U)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@620 (T@U) Int)
(declare-fun $generated@@621 (T@U) Int)
(declare-fun $generated@@638 (T@T) T@U)
(declare-fun $generated@@648 (T@U) T@U)
(declare-fun $generated@@724 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@83) 6) (= (type $generated@@44) $generated@@83)) (= (type $generated@@45) $generated@@83)) (= (type $generated@@46) $generated@@83)) (= (type $generated@@47) $generated@@83)) (= (type $generated@@48) $generated@@83)) (= ($generated@@1 $generated@@84) 7)) (= (type $generated@@49) $generated@@84)) (= (type $generated@@50) $generated@@84)) (= (type $generated@@51) $generated@@84)) (= (type $generated@@52) $generated@@84)) (= (type $generated@@53) $generated@@84)) (= (type $generated@@54) $generated@@84)) (= (type $generated@@55) $generated@@84)) (= (type $generated@@56) $generated@@84)) (= (type $generated@@57) $generated@@84)) (= (type $generated@@58) $generated@@84)) (= (type $generated@@59) $generated@@84)) (forall (($generated@@91 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@91)) 8))) (forall (($generated@@92 T@T) ) (! (= ($generated@@86 ($generated@@85 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@85 $generated@@92))
))) (= (type $generated@@60) ($generated@@85 $generated@@4))) (= ($generated@@1 $generated@@87) 9)) (= (type $generated@@61) $generated@@87)) (= ($generated@@1 $generated@@88) 10)) (= (type $generated@@62) $generated@@88)) (= (type $generated@@63) $generated@@84)) (= (type $generated@@64) $generated@@84)) (= (type $generated@@65) $generated@@84)) (= (type $generated@@66) $generated@@84)) (= (type $generated@@67) $generated@@84)) (= (type $generated@@68) $generated@@84)) (= ($generated@@1 $generated@@89) 11)) (= (type $generated@@69) $generated@@89)) (= (type $generated@@70) $generated@@84)) (= (type $generated@@71) $generated@@84)) (= (type $generated@@72) $generated@@89)) (= (type $generated@@73) $generated@@84)) (= (type $generated@@74) $generated@@84)) (= ($generated@@1 $generated@@90) 12)) (= (type $generated@@75) $generated@@90)) (= (type $generated@@76) $generated@@90)) (= (type $generated@@77) $generated@@90)) (= (type $generated@@78) $generated@@90)) (= (type $generated@@79) $generated@@90)) (= (type $generated@@80) $generated@@90)) (= (type $generated@@81) $generated@@90)) (= (type $generated@@82) $generated@@87)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80 $generated@@81 $generated@@82)
)
(assert (= ($generated@@93 $generated@@60) 0))
(assert (forall (($generated@@95 T@U) ) (! (= (type ($generated@@94 $generated@@95)) $generated@@84)
 :pattern ( ($generated@@94 $generated@@95))
)))
(assert (= ($generated@@94 $generated@@44) $generated@@49))
(assert (= ($generated@@94 $generated@@45) $generated@@50))
(assert (= ($generated@@94 $generated@@46) $generated@@51))
(assert (= ($generated@@94 $generated@@47) $generated@@52))
(assert (= ($generated@@94 $generated@@48) $generated@@53))
(assert (forall (($generated@@97 T@U) ) (! (= (type ($generated@@96 $generated@@97)) $generated@@87)
 :pattern ( ($generated@@96 $generated@@97))
)))
(assert (= ($generated@@96 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (= ($generated@@1 ($generated@@100 $generated@@109 $generated@@110)) 13)) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@103 ($generated@@100 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@100 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@104 ($generated@@100 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@100 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@104 (type $generated@@115))))
(= (type ($generated@@105 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@105 $generated@@115 $generated@@116))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@119)))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) ($generated@@100 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@104 (type $generated@@123))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@105 ($generated@@106 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@105 ($generated@@106 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@105 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@105 ($generated@@106 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@105 $generated@@132 $generated@@134)))
 :weight 0
)))) (= ($generated@@1 $generated@@101) 14)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@86 (type $generated@@136))))
(= (type ($generated@@107 $generated@@135 $generated@@136)) $generated@@137))
 :pattern ( ($generated@@107 $generated@@135 $generated@@136))
))) (= ($generated@@1 $generated@@102) 15)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@108 $generated@@138 $generated@@139 $generated@@140)) $generated@@102)
 :pattern ( ($generated@@108 $generated@@138 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@86 (type $generated@@142))))
 (=> (= (type $generated@@143) $generated@@144) (= ($generated@@107 ($generated@@108 $generated@@141 $generated@@142 $generated@@143) $generated@@142) $generated@@143)))
 :weight 0
))) (and (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@147 $generated@@148) (= ($generated@@107 ($generated@@108 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@107 $generated@@146 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or true (= ($generated@@107 ($generated@@108 $generated@@150 $generated@@151 $generated@@149) $generated@@152) ($generated@@107 $generated@@150 $generated@@152)))
 :weight 0
)))) (forall (($generated@@153 Int) ) (! (= (type ($generated@@99 $generated@@153)) $generated@@83)
 :pattern ( ($generated@@99 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@100 $generated@@101 $generated@@102))) ($generated@@98 $generated@@154 ($generated@@99 0) $generated@@155))
 :pattern ( ($generated@@98 $generated@@154 ($generated@@99 0) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@158) ($generated@@100 $generated@@101 $generated@@102))) ($generated@@156 $generated@@157 $generated@@158)) (forall (($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@101) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@157 $generated@@159) $generated@@60))) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@158 $generated@@159) $generated@@60)))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@158 $generated@@159) $generated@@60))
)))
 :pattern ( ($generated@@156 $generated@@157 $generated@@158))
)))
(assert  (and (= (type $generated@@160) $generated@@83) (= (type $generated@@161) $generated@@101)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@101) (= (type $generated@@163) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@162 $generated@@160 $generated@@163)  (or (= $generated@@162 $generated@@161) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@163 $generated@@162) $generated@@60)))))
 :pattern ( ($generated@@98 $generated@@162 $generated@@160 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@83))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@101) (= (type $generated@@166) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@165 $generated@@164 $generated@@166)  (or (= $generated@@165 $generated@@161) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@98 $generated@@165 $generated@@164 $generated@@166))
)))
(assert (= (type $generated@@167) $generated@@83))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@101) (= (type $generated@@169) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@168 $generated@@167 $generated@@169)  (or (= $generated@@168 $generated@@161) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@169 $generated@@168) $generated@@60)))))
 :pattern ( ($generated@@98 $generated@@168 $generated@@167 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> (= (type $generated@@171) $generated@@2) ($generated@@170 $generated@@171 ($generated@@99 0)))
 :pattern ( ($generated@@170 $generated@@171 ($generated@@99 0)))
)))
(assert ($generated@@172 $generated@@164))
(assert ($generated@@172 $generated@@167))
(assert  (and (= ($generated@@1 $generated@@175) 16) (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@176 $generated@@177)) $generated@@83)
 :pattern ( ($generated@@174 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@83) (= (type $generated@@179) $generated@@83)) (= (type $generated@@180) $generated@@175)) ($generated@@170 $generated@@180 ($generated@@174 $generated@@178 $generated@@179))) ($generated@@173 $generated@@180))
 :pattern ( ($generated@@173 $generated@@180) ($generated@@170 $generated@@180 ($generated@@174 $generated@@178 $generated@@179)))
)))
(assert  (and (and (= ($generated@@1 $generated@@184) 17) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@182 $generated@@185))
))) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@184)
 :pattern ( ($generated@@183 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@175) (= (type $generated@@188) $generated@@175)) true) (= ($generated@@181 $generated@@187 $generated@@188)  (and (= ($generated@@182 $generated@@187) ($generated@@182 $generated@@188)) (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)))))
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
)))
(assert (= (type $generated@@189) $generated@@83))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= (type $generated@@190) $generated@@101) (=> (and (not (= $generated@@190 $generated@@161)) ($generated@@170 $generated@@190 $generated@@164)) ($generated@@170 $generated@@190 $generated@@189)))
 :pattern ( ($generated@@170 $generated@@190 $generated@@164))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@101) (=> (and (not (= $generated@@191 $generated@@161)) ($generated@@170 $generated@@191 $generated@@167)) ($generated@@170 $generated@@191 $generated@@189)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@167))
)))
(assert  (and (= (type $generated@@192) $generated@@83) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@83)
 :pattern ( ($generated@@193 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) ($generated@@100 $generated@@184 $generated@@4)) (= (type $generated@@196) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@195 $generated@@192 $generated@@196) ($generated@@98 $generated@@195 ($generated@@193 $generated@@46) $generated@@196)))
 :pattern ( ($generated@@98 $generated@@195 $generated@@192 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@83)
 :pattern ( ($generated@@197 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) ($generated@@100 $generated@@184 $generated@@2)) (= (type $generated@@201) $generated@@83)) ($generated@@170 $generated@@200 ($generated@@197 $generated@@201))) ($generated@@198 $generated@@200))
 :pattern ( ($generated@@170 $generated@@200 ($generated@@197 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@202 $generated@@203)) $generated@@83)
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@101) (= ($generated@@170 $generated@@204 $generated@@164)  (or (= $generated@@204 $generated@@161) (= ($generated@@202 $generated@@204) $generated@@164))))
 :pattern ( ($generated@@170 $generated@@204 $generated@@164))
)))
(assert (forall (($generated@@205 T@U) ) (!  (=> (= (type $generated@@205) $generated@@101) (= ($generated@@170 $generated@@205 $generated@@167)  (or (= $generated@@205 $generated@@161) (= ($generated@@202 $generated@@205) $generated@@167))))
 :pattern ( ($generated@@170 $generated@@205 $generated@@167))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 18)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@101 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@86 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@101) (= (type $generated@@256) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@257) ($generated@@85 $generated@@4))) (= (type $generated@@259) $generated@@101)) (= (type $generated@@260) ($generated@@85 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@101) (= (type $generated@@263) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@262 $generated@@189 $generated@@263) ($generated@@98 $generated@@262 $generated@@160 $generated@@263)))
 :pattern ( ($generated@@98 $generated@@262 $generated@@189 $generated@@263))
)))
(assert (= (type $generated@@264) $generated@@83))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@101) (= (type $generated@@266) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@265 $generated@@264 $generated@@266) ($generated@@98 $generated@@265 $generated@@164 $generated@@266)))
 :pattern ( ($generated@@98 $generated@@265 $generated@@264 $generated@@266))
)))
(assert (= (type $generated@@267) $generated@@83))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@101) (= (type $generated@@269) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@268 $generated@@267 $generated@@269) ($generated@@98 $generated@@268 $generated@@167 $generated@@269)))
 :pattern ( ($generated@@98 $generated@@268 $generated@@267 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@175)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) $generated@@83) (= (type $generated@@275) $generated@@83)) (= (type $generated@@276) $generated@@184)) (= (type $generated@@277) $generated@@184)) (= ($generated@@170 ($generated@@270 $generated@@276 $generated@@277) ($generated@@174 $generated@@274 $generated@@275))  (and ($generated@@271 $generated@@276 $generated@@274) ($generated@@271 $generated@@277 $generated@@275))))
 :pattern ( ($generated@@170 ($generated@@270 $generated@@276 $generated@@277) ($generated@@174 $generated@@274 $generated@@275)))
)))
(assert (= (type $generated@@278) ($generated@@85 ($generated@@100 $generated@@184 $generated@@4))))
(assert (= ($generated@@93 $generated@@278) 0))
(assert (forall (($generated@@280 T@T) ($generated@@281 T@U) ($generated@@282 T@U) ) (! (= (type ($generated@@279 $generated@@280 $generated@@281 $generated@@282)) ($generated@@85 $generated@@280))
 :pattern ( ($generated@@279 $generated@@280 $generated@@281 $generated@@282))
)))
(assert (= ($generated@@279 ($generated@@100 $generated@@184 $generated@@4) $generated@@69 $generated@@82) $generated@@278))
(assert  (not ($generated@@283 $generated@@278)))
(assert (= (type $generated@@284) ($generated@@85 ($generated@@100 $generated@@184 $generated@@4))))
(assert (= ($generated@@93 $generated@@284) 0))
(assert (= ($generated@@279 ($generated@@100 $generated@@184 $generated@@4) $generated@@72 $generated@@82) $generated@@284))
(assert  (not ($generated@@283 $generated@@284)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@175) (= (type $generated@@286) $generated@@175)) (= ($generated@@181 $generated@@285 $generated@@286) (= $generated@@285 $generated@@286)))
 :pattern ( ($generated@@181 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@100 $generated@@184 $generated@@4)) (= (type $generated@@288) $generated@@83)) (= ($generated@@170 $generated@@287 ($generated@@193 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@184) ($generated@@0 ($generated@@105 $generated@@287 $generated@@289))) ($generated@@271 $generated@@289 $generated@@288))
 :pattern ( ($generated@@105 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@170 $generated@@287 ($generated@@193 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@83)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@100 $generated@@184 $generated@@4)) (= (type $generated@@293) $generated@@83)) (= ($generated@@170 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@184) ($generated@@0 ($generated@@105 $generated@@292 $generated@@294))) ($generated@@271 $generated@@294 $generated@@293))
 :pattern ( ($generated@@105 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@170 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@296 Int) ) (! (= ($generated@@295 $generated@@296) $generated@@296)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 (type $generated@@298)))
(= (type ($generated@@297 $generated@@298)) $generated@@299))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@297 $generated@@300) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@83) (= (type $generated@@304) $generated@@83)) (= (type $generated@@305) $generated@@184)) (= (type $generated@@306) $generated@@184)) (= (type $generated@@307) ($generated@@100 $generated@@101 $generated@@102))) ($generated@@301 $generated@@307)) (= ($generated@@98 ($generated@@270 $generated@@305 $generated@@306) ($generated@@174 $generated@@303 $generated@@304) $generated@@307)  (and ($generated@@302 $generated@@305 $generated@@303 $generated@@307) ($generated@@302 $generated@@306 $generated@@304 $generated@@307))))
 :pattern ( ($generated@@98 ($generated@@270 $generated@@305 $generated@@306) ($generated@@174 $generated@@303 $generated@@304) $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@88)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@175) (= ($generated@@173 $generated@@310) (= ($generated@@308 $generated@@310) $generated@@62)))
 :pattern ( ($generated@@173 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@175) ($generated@@173 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@184) (= (type $generated@@313) $generated@@184)) (= $generated@@311 ($generated@@270 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@173 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 19)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert ($generated@@283 $generated@@60))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@184)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@83) (= (type $generated@@326) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@302 ($generated@@322 $generated@@324) $generated@@325 $generated@@326) ($generated@@98 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@302 ($generated@@322 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@327) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@328) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@329) $generated@@184)) (= (type $generated@@330) $generated@@83)) ($generated@@156 $generated@@327 $generated@@328)) ($generated@@302 $generated@@329 $generated@@330 $generated@@327)) ($generated@@302 $generated@@329 $generated@@330 $generated@@328))
 :pattern ( ($generated@@156 $generated@@327 $generated@@328) ($generated@@302 $generated@@329 $generated@@330 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@331) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@332) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@334) $generated@@83)) ($generated@@156 $generated@@331 $generated@@332)) ($generated@@98 $generated@@333 $generated@@334 $generated@@331)) ($generated@@98 $generated@@333 $generated@@334 $generated@@332))
 :pattern ( ($generated@@156 $generated@@331 $generated@@332) ($generated@@98 $generated@@333 $generated@@334 $generated@@331))
)))
(assert (forall (($generated@@337 T@T) ) (! (= (type ($generated@@336 $generated@@337)) ($generated@@100 $generated@@337 $generated@@2))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@103 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@100 $generated@@339 $generated@@2)) (and (= (= ($generated@@335 $generated@@338) 0) (= $generated@@338 ($generated@@336 $generated@@339))) (=> (not (= ($generated@@335 $generated@@338) 0)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) (< 0 ($generated ($generated@@105 $generated@@338 $generated@@340))))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert  (and (and (and (and (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (= ($generated@@1 ($generated@@343 $generated@@346 $generated@@347)) 20)) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@344 ($generated@@343 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@343 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@345 ($generated@@343 $generated@@350 $generated@@351)) $generated@@351)
 :pattern ( ($generated@@343 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@344 (type $generated@@352))))
(= (type ($generated@@341 $generated@@352)) ($generated@@100 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@352))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@342 $generated@@354 $generated@@355)) ($generated@@343 $generated@@354 $generated@@355))
 :pattern ( ($generated@@342 $generated@@354 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@105 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@105 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert  (and (and (and (and (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (= ($generated@@1 ($generated@@361 $generated@@364 $generated@@365)) 21)) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@362 ($generated@@361 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@361 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@363 ($generated@@361 $generated@@368 $generated@@369)) $generated@@369)
 :pattern ( ($generated@@361 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@362 (type $generated@@370))))
(= (type ($generated@@359 $generated@@370)) ($generated@@100 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@370))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= (type ($generated@@360 $generated@@372 $generated@@373)) ($generated@@361 $generated@@372 $generated@@373))
 :pattern ( ($generated@@360 $generated@@372 $generated@@373))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@T) ) (! (let (($generated@@376 (type $generated@@374)))
 (not ($generated@@0 ($generated@@105 ($generated@@359 ($generated@@360 $generated@@376 $generated@@375)) $generated@@374))))
 :pattern ( (let (($generated@@376 (type $generated@@374)))
($generated@@105 ($generated@@359 ($generated@@360 $generated@@376 $generated@@375)) $generated@@374)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@379) ($generated@@100 $generated@@101 $generated@@102))) ($generated@@377 $generated@@378 $generated@@379)) (and ($generated@@156 $generated@@378 $generated@@379) (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@86 (type $generated@@381))))
 (=> (and (and (= (type $generated@@380) $generated@@101) (= (type $generated@@381) ($generated@@85 $generated@@382))) (not ($generated@@283 $generated@@381))) (= ($generated@@107 ($generated@@105 $generated@@378 $generated@@380) $generated@@381) ($generated@@107 ($generated@@105 $generated@@379 $generated@@380) $generated@@381))))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@379 $generated@@380) $generated@@381))
))))
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@83)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) $generated@@83) (= (type $generated@@387) $generated@@83)) (= (type $generated@@388) $generated@@175)) (= (type $generated@@389) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@388 ($generated@@383 $generated@@386 $generated@@387) $generated@@389) ($generated@@98 $generated@@388 ($generated@@174 $generated@@46 $generated@@44) $generated@@389)))
 :pattern ( ($generated@@98 $generated@@388 ($generated@@383 $generated@@386 $generated@@387) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@103 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@100 $generated@@391 $generated@@2)) (= ($generated@@198 $generated@@390) (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@391) (and (<= 0 ($generated ($generated@@105 $generated@@390 $generated@@392))) (<= ($generated ($generated@@105 $generated@@390 $generated@@392)) ($generated@@335 $generated@@390))))
 :pattern ( ($generated@@105 $generated@@390 $generated@@392))
)))))
 :pattern ( ($generated@@198 $generated@@390))
)))
(assert (forall (($generated@@394 T@T) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@394)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@184) ($generated@@271 $generated@@396 $generated@@192)) (and (= ($generated@@322 ($generated@@393 ($generated@@100 $generated@@184 $generated@@4) $generated@@396)) $generated@@396) ($generated@@170 ($generated@@393 ($generated@@100 $generated@@184 $generated@@4) $generated@@396) $generated@@192)))
 :pattern ( ($generated@@271 $generated@@396 $generated@@192))
)))
(assert (= (type $generated@@397) $generated@@83))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@184) ($generated@@271 $generated@@398 $generated@@397)) (and (= ($generated@@322 ($generated@@393 $generated@@175 $generated@@398)) $generated@@398) ($generated@@170 ($generated@@393 $generated@@175 $generated@@398) $generated@@397)))
 :pattern ( ($generated@@271 $generated@@398 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@184) ($generated@@271 $generated@@399 $generated@@160)) (and (= ($generated@@322 ($generated@@393 $generated@@101 $generated@@399)) $generated@@399) ($generated@@170 ($generated@@393 $generated@@101 $generated@@399) $generated@@160)))
 :pattern ( ($generated@@271 $generated@@399 $generated@@160))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@184) ($generated@@271 $generated@@400 $generated@@189)) (and (= ($generated@@322 ($generated@@393 $generated@@101 $generated@@400)) $generated@@400) ($generated@@170 ($generated@@393 $generated@@101 $generated@@400) $generated@@189)))
 :pattern ( ($generated@@271 $generated@@400 $generated@@189))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@184) ($generated@@271 $generated@@401 $generated@@164)) (and (= ($generated@@322 ($generated@@393 $generated@@101 $generated@@401)) $generated@@401) ($generated@@170 ($generated@@393 $generated@@101 $generated@@401) $generated@@164)))
 :pattern ( ($generated@@271 $generated@@401 $generated@@164))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@184) ($generated@@271 $generated@@402 $generated@@264)) (and (= ($generated@@322 ($generated@@393 $generated@@101 $generated@@402)) $generated@@402) ($generated@@170 ($generated@@393 $generated@@101 $generated@@402) $generated@@264)))
 :pattern ( ($generated@@271 $generated@@402 $generated@@264))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@184) ($generated@@271 $generated@@403 $generated@@167)) (and (= ($generated@@322 ($generated@@393 $generated@@101 $generated@@403)) $generated@@403) ($generated@@170 ($generated@@393 $generated@@101 $generated@@403) $generated@@167)))
 :pattern ( ($generated@@271 $generated@@403 $generated@@167))
)))
(assert (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@184) ($generated@@271 $generated@@404 $generated@@267)) (and (= ($generated@@322 ($generated@@393 $generated@@101 $generated@@404)) $generated@@404) ($generated@@170 ($generated@@393 $generated@@101 $generated@@404) $generated@@267)))
 :pattern ( ($generated@@271 $generated@@404 $generated@@267))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@101) (= ($generated@@170 $generated@@405 $generated@@189)  (and ($generated@@170 $generated@@405 $generated@@160) (not (= $generated@@405 $generated@@161)))))
 :pattern ( ($generated@@170 $generated@@405 $generated@@189))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@101) (= ($generated@@170 $generated@@406 $generated@@264)  (and ($generated@@170 $generated@@406 $generated@@164) (not (= $generated@@406 $generated@@161)))))
 :pattern ( ($generated@@170 $generated@@406 $generated@@264))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (= (type $generated@@407) $generated@@101) (= ($generated@@170 $generated@@407 $generated@@267)  (and ($generated@@170 $generated@@407 $generated@@167) (not (= $generated@@407 $generated@@161)))))
 :pattern ( ($generated@@170 $generated@@407 $generated@@267))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@345 (type $generated@@408))))
(let (($generated@@410 ($generated@@344 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@343 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@342 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) ($generated@@0 ($generated@@105 ($generated@@341 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@341 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@345 (type $generated@@413))))
(= (type ($generated@@412 $generated@@413)) ($generated@@100 $generated@@414 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@345 (type $generated@@415))))
(let (($generated@@417 ($generated@@344 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@343 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@342 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@416) ($generated@@0 ($generated@@105 ($generated@@412 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@412 $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@363 (type $generated@@419))))
(let (($generated@@421 ($generated@@362 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@361 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@360 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@105 ($generated@@359 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@359 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@363 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@100 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@363 (type $generated@@426))))
(let (($generated@@428 ($generated@@362 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@361 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@360 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@105 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@100 $generated@@184 $generated@@2)) (= (type $generated@@431) $generated@@83)) (= ($generated@@170 $generated@@430 ($generated@@197 $generated@@431)) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@184) (< 0 ($generated ($generated@@105 $generated@@430 $generated@@432)))) ($generated@@271 $generated@@432 $generated@@431))
 :pattern ( ($generated@@105 $generated@@430 $generated@@432))
))))
 :pattern ( ($generated@@170 $generated@@430 ($generated@@197 $generated@@431)))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) ($generated@@100 $generated@@184 $generated@@4)) (= ($generated@@170 $generated@@434 $generated@@192)  (and ($generated@@170 $generated@@434 ($generated@@193 $generated@@46)) (not (= ($generated@@433 $generated@@434) 0)))))
 :pattern ( ($generated@@170 $generated@@434 $generated@@192))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@436) $generated@@101)) (=> (and (and ($generated@@301 $generated@@435) (and (not (= $generated@@436 $generated@@161)) (= ($generated@@202 $generated@@436) $generated@@164))) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@435 $generated@@436) $generated@@60))) ($generated@@98 ($generated@@107 ($generated@@105 $generated@@435 $generated@@436) $generated@@278) $generated@@192 $generated@@435)))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@435 $generated@@436) $generated@@278))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@438) $generated@@101)) (=> (and (and ($generated@@301 $generated@@437) (and (not (= $generated@@438 $generated@@161)) (= ($generated@@202 $generated@@438) $generated@@167))) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@437 $generated@@438) $generated@@60))) ($generated@@98 ($generated@@107 ($generated@@105 $generated@@437 $generated@@438) $generated@@284) $generated@@192 $generated@@437)))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@437 $generated@@438) $generated@@284))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@345 (type $generated@@440))))
(let (($generated@@442 ($generated@@344 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@343 $generated@@442 $generated@@441)) (= (= ($generated@@439 $generated@@440) 0) (= $generated@@440 ($generated@@342 $generated@@442 $generated@@441))))))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (= (type $generated@@443) ($generated@@100 $generated@@184 $generated@@4)) (= (type $generated@@444) $generated@@83)) (= (type $generated@@445) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@443 ($generated@@193 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@184) ($generated@@0 ($generated@@105 $generated@@443 $generated@@446))) ($generated@@302 $generated@@446 $generated@@444 $generated@@445))
 :pattern ( ($generated@@105 $generated@@443 $generated@@446))
))))
 :pattern ( ($generated@@98 $generated@@443 ($generated@@193 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@447) ($generated@@100 $generated@@184 $generated@@4)) (= (type $generated@@448) $generated@@83)) (= (type $generated@@449) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@447 ($generated@@290 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@184) ($generated@@0 ($generated@@105 $generated@@447 $generated@@450))) ($generated@@302 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@105 $generated@@447 $generated@@450))
))))
 :pattern ( ($generated@@98 $generated@@447 ($generated@@290 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(= ($generated ($generated@@105 ($generated@@336 $generated@@452) $generated@@451)) 0))
 :pattern ( (let (($generated@@452 (type $generated@@451)))
($generated@@105 ($generated@@336 $generated@@452) $generated@@451)))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@100 $generated@@184 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@345 (type $generated@@456))))
(let (($generated@@458 ($generated@@344 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@100 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@343 $generated@@184 $generated@@184)) (= (type $generated@@460) $generated@@184)) (= ($generated@@0 ($generated@@105 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@105 ($generated@@341 $generated@@459) ($generated@@182 ($generated@@393 $generated@@175 $generated@@460)))) (= ($generated@@105 ($generated@@454 $generated@@459) ($generated@@182 ($generated@@393 $generated@@175 $generated@@460))) ($generated@@183 ($generated@@393 $generated@@175 $generated@@460))))))
 :pattern ( ($generated@@105 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert  (and (forall (($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@463)) ($generated@@100 $generated@@184 $generated@@4))
 :pattern ( ($generated@@461 $generated@@463))
)) (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@363 (type $generated@@464))))
(let (($generated@@466 ($generated@@362 (type $generated@@464))))
(= (type ($generated@@462 $generated@@464)) ($generated@@100 $generated@@466 $generated@@465))))
 :pattern ( ($generated@@462 $generated@@464))
))))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) ($generated@@361 $generated@@184 $generated@@184)) (= (type $generated@@468) $generated@@184)) (= ($generated@@0 ($generated@@105 ($generated@@461 $generated@@467) $generated@@468))  (and ($generated@@0 ($generated@@105 ($generated@@359 $generated@@467) ($generated@@182 ($generated@@393 $generated@@175 $generated@@468)))) (= ($generated@@105 ($generated@@462 $generated@@467) ($generated@@182 ($generated@@393 $generated@@175 $generated@@468))) ($generated@@183 ($generated@@393 $generated@@175 $generated@@468))))))
 :pattern ( ($generated@@105 ($generated@@461 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
(let (($generated@@472 ($generated@@344 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@343 $generated@@472 $generated@@471)) (= ($generated@@0 ($generated@@105 ($generated@@412 $generated@@469) $generated@@470)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@472) (and ($generated@@0 ($generated@@105 ($generated@@341 $generated@@469) $generated@@473)) (= $generated@@470 ($generated@@105 ($generated@@454 $generated@@469) $generated@@473))))
 :pattern ( ($generated@@105 ($generated@@341 $generated@@469) $generated@@473))
 :pattern ( ($generated@@105 ($generated@@454 $generated@@469) $generated@@473))
))))))
 :pattern ( ($generated@@105 ($generated@@412 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
(let (($generated@@477 ($generated@@362 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@361 $generated@@477 $generated@@476)) (= ($generated@@0 ($generated@@105 ($generated@@423 $generated@@474) $generated@@475)) (exists (($generated@@478 T@U) ) (!  (and (= (type $generated@@478) $generated@@477) (and ($generated@@0 ($generated@@105 ($generated@@359 $generated@@474) $generated@@478)) (= $generated@@475 ($generated@@105 ($generated@@462 $generated@@474) $generated@@478))))
 :pattern ( ($generated@@105 ($generated@@359 $generated@@474) $generated@@478))
 :pattern ( ($generated@@105 ($generated@@462 $generated@@474) $generated@@478))
))))))
 :pattern ( ($generated@@105 ($generated@@423 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@83)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@343 $generated@@184 $generated@@184)) (= (type $generated@@483) $generated@@83)) (= (type $generated@@484) $generated@@83)) (= (type $generated@@485) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@184) ($generated@@0 ($generated@@105 ($generated@@341 $generated@@482) $generated@@486))) (and ($generated@@302 ($generated@@105 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@302 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@105 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@105 ($generated@@341 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@98 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@488 $generated@@489)) $generated@@83)
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (and (= (type $generated@@490) ($generated@@361 $generated@@184 $generated@@184)) (= (type $generated@@491) $generated@@83)) (= (type $generated@@492) $generated@@83)) (= (type $generated@@493) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@490 ($generated@@487 $generated@@491 $generated@@492) $generated@@493) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@184) ($generated@@0 ($generated@@105 ($generated@@359 $generated@@490) $generated@@494))) (and ($generated@@302 ($generated@@105 ($generated@@462 $generated@@490) $generated@@494) $generated@@492 $generated@@493) ($generated@@302 $generated@@494 $generated@@491 $generated@@493)))
 :pattern ( ($generated@@105 ($generated@@462 $generated@@490) $generated@@494))
 :pattern ( ($generated@@105 ($generated@@359 $generated@@490) $generated@@494))
))))
 :pattern ( ($generated@@98 $generated@@490 ($generated@@487 $generated@@491 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@495) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@496) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@497) ($generated@@100 $generated@@101 $generated@@102))) (not (= $generated@@495 $generated@@497))) (and ($generated@@156 $generated@@495 $generated@@496) ($generated@@156 $generated@@496 $generated@@497))) ($generated@@156 $generated@@495 $generated@@497))
 :pattern ( ($generated@@156 $generated@@495 $generated@@496) ($generated@@156 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@T) ) (! (= (type ($generated@@498 $generated@@499)) ($generated@@100 $generated@@499 $generated@@4))
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@363 (type $generated@@500))))
(let (($generated@@502 ($generated@@362 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@361 $generated@@502 $generated@@501)) (= (= $generated@@500 ($generated@@360 $generated@@502 $generated@@501)) (= ($generated@@359 $generated@@500) ($generated@@498 $generated@@502))))))
 :pattern ( ($generated@@359 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@363 (type $generated@@503))))
(let (($generated@@505 ($generated@@362 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@361 $generated@@505 $generated@@504)) (= (= $generated@@503 ($generated@@360 $generated@@505 $generated@@504)) (= ($generated@@423 $generated@@503) ($generated@@498 $generated@@504))))))
 :pattern ( ($generated@@423 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@363 (type $generated@@506))))
(let (($generated@@508 ($generated@@362 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@361 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@360 $generated@@508 $generated@@507)) (= ($generated@@461 $generated@@506) ($generated@@498 $generated@@184))))))
 :pattern ( ($generated@@461 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@345 (type $generated@@509))))
(let (($generated@@511 ($generated@@344 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@343 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@342 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@184) (= (type $generated@@513) $generated@@184)) ($generated@@0 ($generated@@105 ($generated@@453 $generated@@509) ($generated@@322 ($generated@@270 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@453 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@363 (type $generated@@514))))
(let (($generated@@516 ($generated@@362 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@361 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@360 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (and (and (= (type $generated@@517) $generated@@184) (= (type $generated@@518) $generated@@184)) ($generated@@0 ($generated@@105 ($generated@@461 $generated@@514) ($generated@@322 ($generated@@270 $generated@@517 $generated@@518)))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
))))))
 :pattern ( ($generated@@461 $generated@@514))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@89)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@T) ) (!  (=> (and (= (type $generated@@521) $generated@@89) (= (type $generated@@522) $generated@@87)) (and (= ($generated@@519 ($generated@@279 $generated@@523 $generated@@521 $generated@@522)) $generated@@521) (= ($generated@@96 ($generated@@279 $generated@@523 $generated@@521 $generated@@522)) $generated@@522)))
 :pattern ( ($generated@@279 $generated@@523 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@184) ($generated@@271 $generated@@524 $generated@@46)) (and (= ($generated@@322 ($generated@@393 $generated@@2 $generated@@524)) $generated@@524) ($generated@@170 ($generated@@393 $generated@@2 $generated@@524) $generated@@46)))
 :pattern ( ($generated@@271 $generated@@524 $generated@@46))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@184) ($generated@@271 $generated@@525 $generated@@47)) (and (= ($generated@@322 ($generated@@393 $generated@@3 $generated@@525)) $generated@@525) ($generated@@170 ($generated@@393 $generated@@3 $generated@@525) $generated@@47)))
 :pattern ( ($generated@@271 $generated@@525 $generated@@47))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@184) ($generated@@271 $generated@@526 $generated@@44)) (and (= ($generated@@322 ($generated@@393 $generated@@4 $generated@@526)) $generated@@526) ($generated@@170 ($generated@@393 $generated@@4 $generated@@526) $generated@@44)))
 :pattern ( ($generated@@271 $generated@@526 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@527) 22))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@184) ($generated@@271 $generated@@528 $generated@@45)) (and (= ($generated@@322 ($generated@@393 $generated@@527 $generated@@528)) $generated@@528) ($generated@@170 ($generated@@393 $generated@@527 $generated@@528) $generated@@45)))
 :pattern ( ($generated@@271 $generated@@528 $generated@@45))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@83) (= ($generated@@271 ($generated@@322 $generated@@529) $generated@@530) ($generated@@170 $generated@@529 $generated@@530)))
 :pattern ( ($generated@@271 ($generated@@322 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@103 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@100 $generated@@532 $generated@@4)) (<= 0 ($generated@@433 $generated@@531))))
 :pattern ( ($generated@@433 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@103 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@100 $generated@@534 $generated@@2)) (<= 0 ($generated@@335 $generated@@533))))
 :pattern ( ($generated@@335 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@317 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@316 $generated@@536)) (<= 0 ($generated@@315 $generated@@535))))
 :pattern ( ($generated@@315 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@345 (type $generated@@537))))
(let (($generated@@539 ($generated@@344 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@343 $generated@@539 $generated@@538)) (<= 0 ($generated@@439 $generated@@537)))))
 :pattern ( ($generated@@439 $generated@@537))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@83)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@83) (= (type $generated@@543) $generated@@83)) (= ($generated@@540 ($generated@@479 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@479 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@83)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@83) (= (type $generated@@547) $generated@@83)) (= ($generated@@544 ($generated@@479 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@479 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@83) (= (type $generated@@549) $generated@@83)) (= ($generated@@94 ($generated@@479 $generated@@548 $generated@@549)) $generated@@58))
 :pattern ( ($generated@@479 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@83)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (= (type $generated@@553) $generated@@83)) (= ($generated@@550 ($generated@@487 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@487 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@83)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@83) (= (type $generated@@557) $generated@@83)) (= ($generated@@554 ($generated@@487 $generated@@556 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@487 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@83) (= (type $generated@@559) $generated@@83)) (= ($generated@@94 ($generated@@487 $generated@@558 $generated@@559)) $generated@@59))
 :pattern ( ($generated@@487 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@184) (= (type $generated@@561) $generated@@184)) (= ($generated@@308 ($generated@@270 $generated@@560 $generated@@561)) $generated@@62))
 :pattern ( ($generated@@270 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@83)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@83) (= (type $generated@@565) $generated@@83)) (= ($generated@@562 ($generated@@174 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@174 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@83)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) $generated@@83)) (= ($generated@@566 ($generated@@174 $generated@@568 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@174 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@184) (= (type $generated@@571) $generated@@184)) (= ($generated@@182 ($generated@@270 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@270 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@184) (= (type $generated@@573) $generated@@184)) (= ($generated@@183 ($generated@@270 $generated@@572 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@270 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@83)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@83) (= (type $generated@@577) $generated@@83)) (= ($generated@@574 ($generated@@383 $generated@@576 $generated@@577)) $generated@@576))
 :pattern ( ($generated@@383 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@83)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@83) (= (type $generated@@581) $generated@@83)) (= ($generated@@578 ($generated@@383 $generated@@580 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@383 $generated@@580 $generated@@581))
)))
(assert  (and (forall (($generated@@584 T@U) ) (! (= (type ($generated@@582 $generated@@584)) $generated@@83)
 :pattern ( ($generated@@582 $generated@@584))
)) (forall (($generated@@585 T@U) ($generated@@586 Int) ) (! (let (($generated@@587 ($generated@@317 (type $generated@@585))))
(= (type ($generated@@583 $generated@@585 $generated@@586)) $generated@@587))
 :pattern ( ($generated@@583 $generated@@585 $generated@@586))
))))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@316 $generated@@184)) (= (type $generated@@589) $generated@@83)) (= (type $generated@@590) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@588 ($generated@@582 $generated@@589) $generated@@590) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@315 $generated@@588))) ($generated@@302 ($generated@@583 $generated@@588 $generated@@591) $generated@@589 $generated@@590))
 :pattern ( ($generated@@583 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@98 $generated@@588 ($generated@@582 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@592 ($generated@@99 $generated@@593)) $generated@@593)
 :pattern ( ($generated@@99 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@83)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@83) (= ($generated@@594 ($generated@@193 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@193 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@83) (= ($generated@@94 ($generated@@193 $generated@@597)) $generated@@54))
 :pattern ( ($generated@@193 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@83)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@83) (= ($generated@@598 ($generated@@290 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@290 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@83) (= ($generated@@94 ($generated@@290 $generated@@601)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@83)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@83) (= ($generated@@602 ($generated@@197 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@197 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@83) (= ($generated@@94 ($generated@@197 $generated@@605)) $generated@@56))
 :pattern ( ($generated@@197 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@83)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@83) (= ($generated@@606 ($generated@@582 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@582 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@83) (= ($generated@@94 ($generated@@582 $generated@@609)) $generated@@57))
 :pattern ( ($generated@@582 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@610)))
(= ($generated@@393 $generated@@611 ($generated@@322 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@322 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@343 $generated@@184 $generated@@184)) (= (type $generated@@613) $generated@@83)) (= (type $generated@@614) $generated@@83)) (= ($generated@@170 $generated@@612 ($generated@@479 $generated@@613 $generated@@614)) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@184) ($generated@@0 ($generated@@105 ($generated@@341 $generated@@612) $generated@@615))) (and ($generated@@271 ($generated@@105 ($generated@@454 $generated@@612) $generated@@615) $generated@@614) ($generated@@271 $generated@@615 $generated@@613)))
 :pattern ( ($generated@@105 ($generated@@454 $generated@@612) $generated@@615))
 :pattern ( ($generated@@105 ($generated@@341 $generated@@612) $generated@@615))
))))
 :pattern ( ($generated@@170 $generated@@612 ($generated@@479 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@616) ($generated@@361 $generated@@184 $generated@@184)) (= (type $generated@@617) $generated@@83)) (= (type $generated@@618) $generated@@83)) (= ($generated@@170 $generated@@616 ($generated@@487 $generated@@617 $generated@@618)) (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@184) ($generated@@0 ($generated@@105 ($generated@@359 $generated@@616) $generated@@619))) (and ($generated@@271 ($generated@@105 ($generated@@462 $generated@@616) $generated@@619) $generated@@618) ($generated@@271 $generated@@619 $generated@@617)))
 :pattern ( ($generated@@105 ($generated@@462 $generated@@616) $generated@@619))
 :pattern ( ($generated@@105 ($generated@@359 $generated@@616) $generated@@619))
))))
 :pattern ( ($generated@@170 $generated@@616 ($generated@@487 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@184) (= (type $generated@@623) $generated@@184)) (< ($generated@@620 $generated@@622) ($generated@@621 ($generated@@270 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@270 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@184) (= (type $generated@@625) $generated@@184)) (< ($generated@@620 $generated@@625) ($generated@@621 ($generated@@270 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@270 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@184) (= (type $generated@@627) $generated@@83)) (= (type $generated@@628) $generated@@83)) ($generated@@271 $generated@@626 ($generated@@479 $generated@@627 $generated@@628))) (and (= ($generated@@322 ($generated@@393 ($generated@@343 $generated@@184 $generated@@184) $generated@@626)) $generated@@626) ($generated@@170 ($generated@@393 ($generated@@343 $generated@@184 $generated@@184) $generated@@626) ($generated@@479 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@271 $generated@@626 ($generated@@479 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@184) (= (type $generated@@630) $generated@@83)) (= (type $generated@@631) $generated@@83)) ($generated@@271 $generated@@629 ($generated@@487 $generated@@630 $generated@@631))) (and (= ($generated@@322 ($generated@@393 ($generated@@361 $generated@@184 $generated@@184) $generated@@629)) $generated@@629) ($generated@@170 ($generated@@393 ($generated@@361 $generated@@184 $generated@@184) $generated@@629) ($generated@@487 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@271 $generated@@629 ($generated@@487 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@83) (= (type $generated@@633) $generated@@83)) (= (type $generated@@634) $generated@@184)) ($generated@@271 $generated@@634 ($generated@@174 $generated@@632 $generated@@633))) (and (= ($generated@@322 ($generated@@393 $generated@@175 $generated@@634)) $generated@@634) ($generated@@170 ($generated@@393 $generated@@175 $generated@@634) ($generated@@174 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@271 $generated@@634 ($generated@@174 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@83) (= (type $generated@@636) $generated@@83)) (= (type $generated@@637) $generated@@184)) ($generated@@271 $generated@@637 ($generated@@383 $generated@@635 $generated@@636))) (and (= ($generated@@322 ($generated@@393 $generated@@175 $generated@@637)) $generated@@637) ($generated@@170 ($generated@@393 $generated@@175 $generated@@637) ($generated@@383 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@271 $generated@@637 ($generated@@383 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@639 T@T) ) (! (= (type ($generated@@638 $generated@@639)) ($generated@@100 $generated@@639 $generated@@4))
 :pattern ( ($generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@640)))
 (not ($generated@@0 ($generated@@105 ($generated@@638 $generated@@641) $generated@@640))))
 :pattern ( (let (($generated@@641 (type $generated@@640)))
($generated@@105 ($generated@@638 $generated@@641) $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 (type $generated@@642)))
 (not ($generated@@0 ($generated@@105 ($generated@@498 $generated@@643) $generated@@642))))
 :pattern ( (let (($generated@@643 (type $generated@@642)))
($generated@@105 ($generated@@498 $generated@@643) $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@645) $generated@@101)) (and ($generated@@301 $generated@@644) (and (not (= $generated@@645 $generated@@161)) (= ($generated@@202 $generated@@645) $generated@@164)))) ($generated@@170 ($generated@@107 ($generated@@105 $generated@@644 $generated@@645) $generated@@278) $generated@@192))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@644 $generated@@645) $generated@@278))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@647) $generated@@101)) (and ($generated@@301 $generated@@646) (and (not (= $generated@@647 $generated@@161)) (= ($generated@@202 $generated@@647) $generated@@167)))) ($generated@@170 ($generated@@107 ($generated@@105 $generated@@646 $generated@@647) $generated@@284) $generated@@192))
 :pattern ( ($generated@@107 ($generated@@105 $generated@@646 $generated@@647) $generated@@284))
)))
(assert (forall (($generated@@649 T@U) ) (! (= (type ($generated@@648 $generated@@649)) $generated@@90)
 :pattern ( ($generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@83) (= (type $generated@@651) $generated@@83)) (and (= ($generated@@94 ($generated@@174 $generated@@650 $generated@@651)) $generated@@63) (= ($generated@@648 ($generated@@174 $generated@@650 $generated@@651)) $generated@@75)))
 :pattern ( ($generated@@174 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@83) (= (type $generated@@653) $generated@@83)) (and (= ($generated@@94 ($generated@@383 $generated@@652 $generated@@653)) $generated@@65) (= ($generated@@648 ($generated@@383 $generated@@652 $generated@@653)) $generated@@77)))
 :pattern ( ($generated@@383 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@83) (= (type $generated@@655) $generated@@83)) (= (type $generated@@656) $generated@@175)) (= ($generated@@170 $generated@@656 ($generated@@383 $generated@@654 $generated@@655))  (and ($generated@@170 $generated@@656 ($generated@@174 $generated@@46 $generated@@44)) ($generated@@0 ($generated@@297 ($generated@@11 true))))))
 :pattern ( ($generated@@170 $generated@@656 ($generated@@383 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@175) (= ($generated@@620 ($generated@@322 $generated@@657)) ($generated@@621 $generated@@657)))
 :pattern ( ($generated@@620 ($generated@@322 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ) (! (let (($generated@@659 ($generated@@345 (type $generated@@658))))
(let (($generated@@660 ($generated@@344 (type $generated@@658))))
 (=> (= (type $generated@@658) ($generated@@343 $generated@@660 $generated@@659)) (= ($generated@@433 ($generated@@341 $generated@@658)) ($generated@@439 $generated@@658)))))
 :pattern ( ($generated@@433 ($generated@@341 $generated@@658)))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 ($generated@@345 (type $generated@@661))))
(let (($generated@@663 ($generated@@344 (type $generated@@661))))
 (=> (= (type $generated@@661) ($generated@@343 $generated@@663 $generated@@662)) (= ($generated@@433 ($generated@@453 $generated@@661)) ($generated@@439 $generated@@661)))))
 :pattern ( ($generated@@433 ($generated@@453 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@345 (type $generated@@664))))
(let (($generated@@666 ($generated@@344 (type $generated@@664))))
 (=> (= (type $generated@@664) ($generated@@343 $generated@@666 $generated@@665)) (<= ($generated@@433 ($generated@@412 $generated@@664)) ($generated@@439 $generated@@664)))))
 :pattern ( ($generated@@433 ($generated@@412 $generated@@664)))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@184) ($generated@@271 $generated@@667 ($generated@@99 0))) (and (= ($generated@@322 ($generated@@393 $generated@@2 $generated@@667)) $generated@@667) ($generated@@170 ($generated@@393 ($generated@@100 $generated@@184 $generated@@4) $generated@@667) ($generated@@99 0))))
 :pattern ( ($generated@@271 $generated@@667 ($generated@@99 0)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@184) (= (type $generated@@669) $generated@@83)) ($generated@@271 $generated@@668 ($generated@@193 $generated@@669))) (and (= ($generated@@322 ($generated@@393 ($generated@@100 $generated@@184 $generated@@4) $generated@@668)) $generated@@668) ($generated@@170 ($generated@@393 ($generated@@100 $generated@@184 $generated@@4) $generated@@668) ($generated@@193 $generated@@669))))
 :pattern ( ($generated@@271 $generated@@668 ($generated@@193 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@670) $generated@@184) (= (type $generated@@671) $generated@@83)) ($generated@@271 $generated@@670 ($generated@@290 $generated@@671))) (and (= ($generated@@322 ($generated@@393 ($generated@@100 $generated@@184 $generated@@4) $generated@@670)) $generated@@670) ($generated@@170 ($generated@@393 ($generated@@100 $generated@@184 $generated@@4) $generated@@670) ($generated@@290 $generated@@671))))
 :pattern ( ($generated@@271 $generated@@670 ($generated@@290 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (= (type $generated@@672) $generated@@184) (= (type $generated@@673) $generated@@83)) ($generated@@271 $generated@@672 ($generated@@197 $generated@@673))) (and (= ($generated@@322 ($generated@@393 ($generated@@100 $generated@@184 $generated@@2) $generated@@672)) $generated@@672) ($generated@@170 ($generated@@393 ($generated@@100 $generated@@184 $generated@@2) $generated@@672) ($generated@@197 $generated@@673))))
 :pattern ( ($generated@@271 $generated@@672 ($generated@@197 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (= (type $generated@@674) $generated@@184) (= (type $generated@@675) $generated@@83)) ($generated@@271 $generated@@674 ($generated@@582 $generated@@675))) (and (= ($generated@@322 ($generated@@393 ($generated@@316 $generated@@184) $generated@@674)) $generated@@674) ($generated@@170 ($generated@@393 ($generated@@316 $generated@@184) $generated@@674) ($generated@@582 $generated@@675))))
 :pattern ( ($generated@@271 $generated@@674 ($generated@@582 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (= (type $generated@@676) $generated@@101) (= (type $generated@@677) ($generated@@100 $generated@@101 $generated@@102))) (and (not (= $generated@@676 $generated@@161)) ($generated@@98 $generated@@676 $generated@@164 $generated@@677))) ($generated@@98 $generated@@676 $generated@@189 $generated@@677))
 :pattern ( ($generated@@98 $generated@@676 $generated@@164 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (= (type $generated@@678) $generated@@101) (= (type $generated@@679) ($generated@@100 $generated@@101 $generated@@102))) (and (not (= $generated@@678 $generated@@161)) ($generated@@98 $generated@@678 $generated@@167 $generated@@679))) ($generated@@98 $generated@@678 $generated@@189 $generated@@679))
 :pattern ( ($generated@@98 $generated@@678 $generated@@167 $generated@@679))
)))
(assert (forall (($generated@@680 T@U) ) (! (let (($generated@@681 ($generated@@103 (type $generated@@680))))
 (=> (= (type $generated@@680) ($generated@@100 $generated@@681 $generated@@4)) (and (= (= ($generated@@433 $generated@@680) 0) (= $generated@@680 ($generated@@638 $generated@@681))) (=> (not (= ($generated@@433 $generated@@680) 0)) (exists (($generated@@682 T@U) ) (!  (and (= (type $generated@@682) $generated@@681) ($generated@@0 ($generated@@105 $generated@@680 $generated@@682)))
 :no-pattern (type $generated@@682)
 :no-pattern ($generated $generated@@682)
 :no-pattern ($generated@@0 $generated@@682)
))))))
 :pattern ( ($generated@@433 $generated@@680))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (! (let (($generated@@687 (type $generated@@686)))
 (=> (and (and (and (= (type $generated@@683) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@684) $generated@@101)) (= (type $generated@@685) ($generated@@85 $generated@@687))) ($generated@@301 ($generated@@106 $generated@@683 $generated@@684 ($generated@@108 ($generated@@105 $generated@@683 $generated@@684) $generated@@685 $generated@@686)))) ($generated@@156 $generated@@683 ($generated@@106 $generated@@683 $generated@@684 ($generated@@108 ($generated@@105 $generated@@683 $generated@@684) $generated@@685 $generated@@686)))))
 :pattern ( ($generated@@106 $generated@@683 $generated@@684 ($generated@@108 ($generated@@105 $generated@@683 $generated@@684) $generated@@685 $generated@@686)))
)))
(assert (= ($generated@@94 $generated@@192) $generated@@64))
(assert (= ($generated@@648 $generated@@192) $generated@@76))
(assert (= ($generated@@94 $generated@@397) $generated@@66))
(assert (= ($generated@@648 $generated@@397) $generated@@78))
(assert (= ($generated@@94 $generated@@160) $generated@@67))
(assert (= ($generated@@648 $generated@@160) $generated@@79))
(assert (= ($generated@@94 $generated@@189) $generated@@68))
(assert (= ($generated@@648 $generated@@189) $generated@@79))
(assert (= ($generated@@94 $generated@@164) $generated@@70))
(assert (= ($generated@@648 $generated@@164) $generated@@80))
(assert (= ($generated@@94 $generated@@264) $generated@@71))
(assert (= ($generated@@648 $generated@@264) $generated@@80))
(assert (= ($generated@@94 $generated@@167) $generated@@73))
(assert (= ($generated@@648 $generated@@167) $generated@@81))
(assert (= ($generated@@94 $generated@@267) $generated@@74))
(assert (= ($generated@@648 $generated@@267) $generated@@81))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@688) ($generated@@100 $generated@@184 $generated@@2)) (= (type $generated@@689) $generated@@83)) (= (type $generated@@690) ($generated@@100 $generated@@101 $generated@@102))) (= ($generated@@98 $generated@@688 ($generated@@197 $generated@@689) $generated@@690) (forall (($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@184) (< 0 ($generated ($generated@@105 $generated@@688 $generated@@691)))) ($generated@@302 $generated@@691 $generated@@689 $generated@@690))
 :pattern ( ($generated@@105 $generated@@688 $generated@@691))
))))
 :pattern ( ($generated@@98 $generated@@688 ($generated@@197 $generated@@689) $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@101) (= ($generated@@170 $generated@@692 $generated@@160)  (or (= $generated@@692 $generated@@161) ($generated@@172 ($generated@@202 $generated@@692)))))
 :pattern ( ($generated@@170 $generated@@692 $generated@@160))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) $generated@@175) (= (type $generated@@694) $generated@@83)) (= (type $generated@@695) ($generated@@100 $generated@@101 $generated@@102))) (and ($generated@@301 $generated@@695) (and ($generated@@173 $generated@@693) (exists (($generated@@696 T@U) ) (!  (and (= (type $generated@@696) $generated@@83) ($generated@@98 $generated@@693 ($generated@@174 $generated@@694 $generated@@696) $generated@@695))
 :pattern ( ($generated@@98 $generated@@693 ($generated@@174 $generated@@694 $generated@@696) $generated@@695))
))))) ($generated@@302 ($generated@@182 $generated@@693) $generated@@694 $generated@@695))
 :pattern ( ($generated@@302 ($generated@@182 $generated@@693) $generated@@694 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (and (= (type $generated@@697) $generated@@175) (= (type $generated@@698) $generated@@83)) (= (type $generated@@699) ($generated@@100 $generated@@101 $generated@@102))) (and ($generated@@301 $generated@@699) (and ($generated@@173 $generated@@697) (exists (($generated@@700 T@U) ) (!  (and (= (type $generated@@700) $generated@@83) ($generated@@98 $generated@@697 ($generated@@174 $generated@@700 $generated@@698) $generated@@699))
 :pattern ( ($generated@@98 $generated@@697 ($generated@@174 $generated@@700 $generated@@698) $generated@@699))
))))) ($generated@@302 ($generated@@183 $generated@@697) $generated@@698 $generated@@699))
 :pattern ( ($generated@@302 ($generated@@183 $generated@@697) $generated@@698 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@184) (= (type $generated@@702) $generated@@184)) (= ($generated@@270 ($generated@@297 $generated@@701) ($generated@@297 $generated@@702)) ($generated@@297 ($generated@@270 $generated@@701 $generated@@702))))
 :pattern ( ($generated@@270 ($generated@@297 $generated@@701) ($generated@@297 $generated@@702)))
)))
(assert (forall (($generated@@703 Int) ) (! (= ($generated@@322 ($generated@@8 ($generated@@295 $generated@@703))) ($generated@@297 ($generated@@322 ($generated@@8 $generated@@703))))
 :pattern ( ($generated@@322 ($generated@@8 ($generated@@295 $generated@@703))))
)))
(assert (forall (($generated@@704 T@U) ) (! (= ($generated@@322 ($generated@@297 $generated@@704)) ($generated@@297 ($generated@@322 $generated@@704)))
 :pattern ( ($generated@@322 ($generated@@297 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ) (! (let (($generated@@706 ($generated@@317 (type $generated@@705))))
 (=> (and (= (type $generated@@705) ($generated@@316 $generated@@706)) (= ($generated@@315 $generated@@705) 0)) (= $generated@@705 ($generated@@314 $generated@@706))))
 :pattern ( ($generated@@315 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (! (let (($generated@@710 (type $generated@@708)))
 (=> (and (and (= (type $generated@@707) ($generated@@100 $generated@@710 $generated@@2)) (= (type $generated@@709) $generated@@2)) (<= 0 ($generated $generated@@709))) (= ($generated@@335 ($generated@@106 $generated@@707 $generated@@708 $generated@@709)) (+ (- ($generated@@335 $generated@@707) ($generated ($generated@@105 $generated@@707 $generated@@708))) ($generated $generated@@709)))))
 :pattern ( ($generated@@335 ($generated@@106 $generated@@707 $generated@@708 $generated@@709)))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@712) $generated@@2)) ($generated@@98 $generated@@712 $generated@@46 $generated@@711))
 :pattern ( ($generated@@98 $generated@@712 $generated@@46 $generated@@711))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@713) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@714) $generated@@3)) ($generated@@98 $generated@@714 $generated@@47 $generated@@713))
 :pattern ( ($generated@@98 $generated@@714 $generated@@47 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@716) $generated@@4)) ($generated@@98 $generated@@716 $generated@@44 $generated@@715))
 :pattern ( ($generated@@98 $generated@@716 $generated@@44 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@718) $generated@@527)) ($generated@@98 $generated@@718 $generated@@45 $generated@@717))
 :pattern ( ($generated@@98 $generated@@718 $generated@@45 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@100 $generated@@101 $generated@@102)) (= (type $generated@@720) $generated@@184)) ($generated@@98 $generated@@720 $generated@@48 $generated@@719))
 :pattern ( ($generated@@98 $generated@@720 $generated@@48 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) ($generated@@316 $generated@@184)) (= (type $generated@@722) $generated@@83)) (= ($generated@@170 $generated@@721 ($generated@@582 $generated@@722)) (forall (($generated@@723 Int) ) (!  (=> (and (<= 0 $generated@@723) (< $generated@@723 ($generated@@315 $generated@@721))) ($generated@@271 ($generated@@583 $generated@@721 $generated@@723) $generated@@722))
 :pattern ( ($generated@@583 $generated@@721 $generated@@723))
))))
 :pattern ( ($generated@@170 $generated@@721 ($generated@@582 $generated@@722)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 Int) ) (!  (=> (= (type $generated@@725) ($generated@@316 $generated@@184)) (=> (and (<= 0 $generated@@726) (< $generated@@726 ($generated@@315 $generated@@725))) (< ($generated@@621 ($generated@@393 $generated@@175 ($generated@@583 $generated@@725 $generated@@726))) ($generated@@724 $generated@@725))))
 :pattern ( ($generated@@621 ($generated@@393 $generated@@175 ($generated@@583 $generated@@725 $generated@@726))))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (and (= (type $generated@@727) ($generated@@343 $generated@@184 $generated@@184)) (= (type $generated@@728) $generated@@83)) (= (type $generated@@729) $generated@@83)) ($generated@@170 $generated@@727 ($generated@@479 $generated@@728 $generated@@729))) (and (and ($generated@@170 ($generated@@341 $generated@@727) ($generated@@193 $generated@@728)) ($generated@@170 ($generated@@412 $generated@@727) ($generated@@193 $generated@@729))) ($generated@@170 ($generated@@453 $generated@@727) ($generated@@193 ($generated@@174 $generated@@728 $generated@@729)))))
 :pattern ( ($generated@@170 $generated@@727 ($generated@@479 $generated@@728 $generated@@729)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (and (= (type $generated@@730) ($generated@@361 $generated@@184 $generated@@184)) (= (type $generated@@731) $generated@@83)) (= (type $generated@@732) $generated@@83)) ($generated@@170 $generated@@730 ($generated@@487 $generated@@731 $generated@@732))) (and (and ($generated@@170 ($generated@@359 $generated@@730) ($generated@@290 $generated@@731)) ($generated@@170 ($generated@@423 $generated@@730) ($generated@@290 $generated@@732))) ($generated@@170 ($generated@@461 $generated@@730) ($generated@@290 ($generated@@174 $generated@@731 $generated@@732)))))
 :pattern ( ($generated@@170 $generated@@730 ($generated@@487 $generated@@731 $generated@@732)))
)))
(assert (forall (($generated@@733 T@U) ) (!  (=> (= (type $generated@@733) $generated@@2) ($generated@@170 $generated@@733 $generated@@46))
 :pattern ( ($generated@@170 $generated@@733 $generated@@46))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@3) ($generated@@170 $generated@@734 $generated@@47))
 :pattern ( ($generated@@170 $generated@@734 $generated@@47))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@4) ($generated@@170 $generated@@735 $generated@@44))
 :pattern ( ($generated@@170 $generated@@735 $generated@@44))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@527) ($generated@@170 $generated@@736 $generated@@45))
 :pattern ( ($generated@@170 $generated@@736 $generated@@45))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (= (type $generated@@737) $generated@@184) ($generated@@170 $generated@@737 $generated@@48))
 :pattern ( ($generated@@170 $generated@@737 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@738 () Int)
(declare-fun $generated@@739 () Int)
(declare-fun $generated@@740 () Int)
(declare-fun $generated@@741 () Int)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 (T@U) Bool)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () Int)
(declare-fun $generated@@754 () T@U)
(declare-fun $generated@@755 () T@U)
(declare-fun $generated@@756 () T@U)
(declare-fun $generated@@757 () T@U)
(declare-fun $generated@@758 () T@U)
(declare-fun $generated@@759 () Int)
(declare-fun $generated@@760 () T@U)
(declare-fun $generated@@761 () Int)
(declare-fun $generated@@762 () Int)
(declare-fun $generated@@763 () T@U)
(declare-fun $generated@@764 () Int)
(declare-fun $generated@@765 () Int)
(declare-fun $generated@@766 () Int)
(declare-fun $generated@@767 () Int)
(declare-fun $generated@@768 () T@U)
(declare-fun $generated@@769 () T@U)
(declare-fun $generated@@770 () T@U)
(declare-fun $generated@@771 () T@U)
(declare-fun $generated@@772 () Bool)
(declare-fun $generated@@773 () T@U)
(declare-fun $generated@@774 () Bool)
(declare-fun $generated@@775 () T@U)
(declare-fun $generated@@776 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@742) ($generated@@100 $generated@@184 $generated@@4)) (= (type $generated@@743) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@744) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@746) $generated@@175)) (= (type $generated@@747) $generated@@175)) (= (type $generated@@748) $generated@@175)) (= (type $generated@@749) $generated@@101)) (= (type $generated@@750) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@751) ($generated@@100 $generated@@184 $generated@@4))) (= (type $generated@@752) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@754) $generated@@101)) (= (type $generated@@755) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@756) $generated@@101)) (= (type $generated@@757) ($generated@@100 $generated@@184 $generated@@4))) (= (type $generated@@758) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@760) ($generated@@100 $generated@@101 $generated@@102))) (= (type $generated@@763) ($generated@@208 $generated@@101 $generated@@4))) (= (type $generated@@768) ($generated@@100 $generated@@184 $generated@@4))) (= (type $generated@@769) $generated@@175)) (= (type $generated@@770) $generated@@175)) (= (type $generated@@771) $generated@@175)) (= (type $generated@@773) $generated@@101)) (= (type $generated@@775) $generated@@101)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@777  (and (=> (= (ControlFlow 0 2) (- 0 21)) (<= ($generated@@295 6) $generated@@738)) (and (=> (= (ControlFlow 0 2) (- 0 20)) (<= ($generated@@295 6) $generated@@739)) (=> (and (and (and (<= ($generated@@295 6) $generated@@738) (<= ($generated@@295 6) $generated@@739)) (and (<= ($generated@@295 (- 0 32768)) $generated@@740) (< $generated@@740 32768))) (and (and (<= ($generated@@295 (- 0 32768)) $generated@@741) (< $generated@@741 32768)) (and ($generated@@170 $generated@@742 $generated@@192) ($generated@@98 $generated@@742 $generated@@192 $generated@@743)))) (=> (and (and (and (and ($generated@@301 $generated@@744) ($generated@@745 $generated@@744)) (and (forall (($generated@@778 T@U) ) (!  (=> (= (type $generated@@778) $generated@@101) (=> (and (not (= $generated@@778 $generated@@161)) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@743 $generated@@778) $generated@@60))) (= ($generated@@105 $generated@@744 $generated@@778) ($generated@@105 $generated@@743 $generated@@778))))
 :pattern ( ($generated@@105 $generated@@744 $generated@@778))
)) ($generated@@156 $generated@@743 $generated@@744))) (and (and ($generated@@170 $generated@@746 ($generated@@174 $generated@@46 $generated@@44)) ($generated@@98 $generated@@746 ($generated@@174 $generated@@46 $generated@@44) $generated@@744)) (and ($generated@@170 $generated@@747 ($generated@@383 $generated@@46 $generated@@44)) ($generated@@98 $generated@@747 ($generated@@383 $generated@@46 $generated@@44) $generated@@744)))) (and (and (and ($generated@@170 $generated@@748 $generated@@397) ($generated@@98 $generated@@748 $generated@@397 $generated@@744)) (and (not (= $generated@@749 $generated@@161)) (= ($generated@@202 $generated@@749) $generated@@164))) (and (and (not ($generated@@0 ($generated@@107 ($generated@@105 $generated@@744 $generated@@749) $generated@@60))) (= $generated@@750 ($generated@@106 $generated@@744 $generated@@749 ($generated@@108 ($generated@@105 $generated@@744 $generated@@749) $generated@@60 ($generated@@11 true))))) (and ($generated@@301 $generated@@750) ($generated@@745 $generated@@750))))) (and (=> (= (ControlFlow 0 2) (- 0 19)) true) (and (=> (= (ControlFlow 0 2) (- 0 18)) (not (= $generated@@749 $generated@@161))) (and (=> (= (ControlFlow 0 2) (- 0 17)) true) (and (=> (= (ControlFlow 0 2) (- 0 16)) (not (= $generated@@749 $generated@@161))) (and (=> (= (ControlFlow 0 2) (- 0 15)) true) (and (=> (= (ControlFlow 0 2) (- 0 14)) (not (= $generated@@749 $generated@@161))) (and (=> (= (ControlFlow 0 2) (- 0 13)) true) (and (=> (= (ControlFlow 0 2) (- 0 12)) (not (= $generated@@749 $generated@@161))) (=> (not (= $generated@@749 $generated@@161)) (=> (= $generated@@751 ($generated@@107 ($generated@@105 $generated@@750 $generated@@749) $generated@@278)) (=> (and (and (and (and (and ($generated@@301 $generated@@752) ($generated@@745 $generated@@752)) (forall (($generated@@779 T@U) ) (!  (=> (= (type $generated@@779) $generated@@101) (=> (and (not (= $generated@@779 $generated@@161)) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@750 $generated@@779) $generated@@60))) (= ($generated@@105 $generated@@752 $generated@@779) ($generated@@105 $generated@@750 $generated@@779))))
 :pattern ( ($generated@@105 $generated@@752 $generated@@779))
))) (and ($generated@@156 $generated@@750 $generated@@752) (= $generated@@753 ($generated@@295 20)))) (and (and (not (= $generated@@754 $generated@@161)) (and ($generated@@170 $generated@@754 $generated@@267) ($generated@@98 $generated@@754 $generated@@267 $generated@@743))) (and ($generated@@301 $generated@@755) ($generated@@745 $generated@@755)))) (and (and (and (not (= $generated@@756 $generated@@161)) (and ($generated@@170 $generated@@756 $generated@@267) ($generated@@98 $generated@@756 $generated@@267 $generated@@755))) (not ($generated@@0 ($generated@@107 ($generated@@105 $generated@@752 $generated@@756) $generated@@60)))) (and (forall (($generated@@780 T@U) ) (!  (=> (= (type $generated@@780) $generated@@101) (=> (and (not (= $generated@@780 $generated@@161)) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@752 $generated@@780) $generated@@60))) (= ($generated@@105 $generated@@755 $generated@@780) ($generated@@105 $generated@@752 $generated@@780))))
 :pattern ( ($generated@@105 $generated@@755 $generated@@780))
)) ($generated@@156 $generated@@752 $generated@@755)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) true) (and (=> (= (ControlFlow 0 2) (- 0 10)) (not (= $generated@@756 $generated@@161))) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@756 $generated@@161))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@756 $generated@@161))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@756 $generated@@161))) (=> (not (= $generated@@756 $generated@@161)) (=> (= $generated@@757 ($generated@@107 ($generated@@105 $generated@@755 $generated@@756) $generated@@284)) (=> (and (and (and ($generated@@301 $generated@@758) ($generated@@745 $generated@@758)) (forall (($generated@@781 T@U) ) (!  (=> (= (type $generated@@781) $generated@@101) (=> (and (not (= $generated@@781 $generated@@161)) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@755 $generated@@781) $generated@@60))) (= ($generated@@105 $generated@@758 $generated@@781) ($generated@@105 $generated@@755 $generated@@781))))
 :pattern ( ($generated@@105 $generated@@758 $generated@@781))
))) (and ($generated@@156 $generated@@755 $generated@@758) (= $generated@@759 ($generated@@295 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@759 ($generated@@295 0)) (= $generated@@759 ($generated@@295 1)))) (=> (or (= $generated@@759 ($generated@@295 0)) (= $generated@@759 ($generated@@295 1))) (=> (and ($generated@@301 $generated@@760) ($generated@@745 $generated@@760)) (=> (and (and (forall (($generated@@782 T@U) ) (!  (=> (= (type $generated@@782) $generated@@101) (=> (and (not (= $generated@@782 $generated@@161)) ($generated@@0 ($generated@@107 ($generated@@105 $generated@@758 $generated@@782) $generated@@60))) (= ($generated@@105 $generated@@760 $generated@@782) ($generated@@105 $generated@@758 $generated@@782))))
 :pattern ( ($generated@@105 $generated@@760 $generated@@782))
)) ($generated@@156 $generated@@758 $generated@@760)) (and (= $generated@@761 ($generated@@295 1)) (= (ControlFlow 0 2) (- 0 1)))) (or (= $generated@@761 ($generated@@295 0)) (= $generated@@761 ($generated@@295 1)))))))))))))))))))))))))))))))))))
(let (($generated@@783  (=> (and (< $generated@@738 ($generated@@295 6)) (= (ControlFlow 0 24) 2)) $generated@@777)))
(let (($generated@@784  (=> (and (<= ($generated@@295 6) $generated@@738) (= $generated@@762 ($generated@@295 6))) (and (=> (= (ControlFlow 0 22) (- 0 23)) (<= ($generated@@295 6) $generated@@762)) (=> (<= ($generated@@295 6) $generated@@762) (=> (= (ControlFlow 0 22) 2) $generated@@777))))))
(let (($generated@@785  (=> (= $generated@@763 ($generated@@207 $generated@@161 $generated@@743 $generated@@60 false)) (=> (and (<= ($generated@@295 6) $generated@@738) (<= ($generated@@295 6) $generated@@739)) (and (=> (= (ControlFlow 0 25) 22) $generated@@784) (=> (= (ControlFlow 0 25) 24) $generated@@783))))))
(let (($generated@@786  (=> (and ($generated@@301 $generated@@743) ($generated@@745 $generated@@743)) (=> (and (and (and (<= ($generated@@295 6) $generated@@764) true) (and (<= ($generated@@295 6) $generated@@765) true)) (and (and (<= ($generated@@295 (- 0 32768)) $generated@@766) (< $generated@@766 32768)) true)) (=> (and (and (and (and (and (<= ($generated@@295 (- 0 32768)) $generated@@767) (< $generated@@767 32768)) true) (and (and ($generated@@170 $generated@@768 $generated@@192) ($generated@@98 $generated@@768 $generated@@192 $generated@@743)) true)) (and (and (and ($generated@@170 $generated@@769 ($generated@@174 $generated@@46 $generated@@44)) ($generated@@98 $generated@@769 ($generated@@174 $generated@@46 $generated@@44) $generated@@743)) true) (and (and ($generated@@170 $generated@@770 ($generated@@383 $generated@@46 $generated@@44)) ($generated@@98 $generated@@770 ($generated@@383 $generated@@46 $generated@@44) $generated@@743)) true))) (and (and (and (and ($generated@@170 $generated@@771 $generated@@397) ($generated@@98 $generated@@771 $generated@@397 $generated@@743)) true) (and (=> $generated@@772 (and ($generated@@170 $generated@@773 $generated@@264) ($generated@@98 $generated@@773 $generated@@264 $generated@@743))) true)) (and (and (=> $generated@@774 (and ($generated@@170 $generated@@775 $generated@@267) ($generated@@98 $generated@@775 $generated@@267 $generated@@743))) true) (and (= 2 $generated@@776) (= (ControlFlow 0 26) 25))))) $generated@@785)))))
$generated@@786))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@272 (Int) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 () T@T)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@U Int) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) Bool)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U) Int)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@T T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@U T@U) T@U)
(declare-fun $generated@@499 (T@T) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@610 (T@U) Int)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@631 (T@T) T@U)
(declare-fun $generated@@637 (T@U) T@U)
(declare-fun $generated@@641 (T@U) T@U)
(declare-fun $generated@@642 (T@U) T@U)
(declare-fun $generated@@718 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@79 (type $generated@@216))))
(= (type ($generated@@215 $generated@@216 $generated@@217)) ($generated@@76 $generated@@218 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@79 (type $generated@@219))))
 (=> (and (= (type $generated@@219) ($generated@@76 $generated@@221 $generated@@4)) (= (type $generated@@220) ($generated@@76 $generated@@221 $generated@@4))) (= ($generated@@215 ($generated@@215 $generated@@219 $generated@@220) $generated@@220) ($generated@@215 $generated@@219 $generated@@220))))
 :pattern ( ($generated@@215 ($generated@@215 $generated@@219 $generated@@220) $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@79 (type $generated@@223))))
(= (type ($generated@@222 $generated@@223 $generated@@224)) ($generated@@76 $generated@@225 $generated@@4)))
 :pattern ( ($generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@79 (type $generated@@226))))
 (=> (and (= (type $generated@@226) ($generated@@76 $generated@@228 $generated@@4)) (= (type $generated@@227) ($generated@@76 $generated@@228 $generated@@4))) (= ($generated@@222 ($generated@@222 $generated@@226 $generated@@227) $generated@@227) ($generated@@222 $generated@@226 $generated@@227))))
 :pattern ( ($generated@@222 ($generated@@222 $generated@@226 $generated@@227) $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@140)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@149)) (= (type $generated@@236) $generated@@149)) (= ($generated@@136 ($generated@@229 $generated@@235 $generated@@236) ($generated@@139 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@136 ($generated@@229 $generated@@235 $generated@@236) ($generated@@139 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@79 (type $generated@@238))))
 (=> (and (= (type $generated@@238) ($generated@@76 $generated@@240 $generated@@4)) (= (type $generated@@239) ($generated@@76 $generated@@240 $generated@@4))) (= (+ ($generated@@237 ($generated@@215 $generated@@238 $generated@@239)) ($generated@@237 ($generated@@222 $generated@@238 $generated@@239))) (+ ($generated@@237 $generated@@238) ($generated@@237 $generated@@239)))))
 :pattern ( ($generated@@237 ($generated@@215 $generated@@238 $generated@@239)))
 :pattern ( ($generated@@237 ($generated@@222 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@140) (= (type $generated@@242) $generated@@140)) (= ($generated@@146 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@146 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@136 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@149) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@230 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@136 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@136 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@149) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@230 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@136 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (and (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@259 $generated@@265 $generated@@266)) ($generated@@261 $generated@@267)))
 :pattern ( ($generated@@259 $generated@@265 $generated@@266))
))) (forall (($generated@@268 T@U) ) (! (= (type ($generated@@260 $generated@@268)) $generated@@64)
 :pattern ( ($generated@@260 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) ($generated@@261 $generated@@149)) (= (type $generated@@270) $generated@@149)) (= (type $generated@@271) $generated@@64)) (and ($generated@@136 $generated@@269 ($generated@@260 $generated@@271)) ($generated@@230 $generated@@270 $generated@@271))) ($generated@@136 ($generated@@259 $generated@@269 $generated@@270) ($generated@@260 $generated@@271)))
 :pattern ( ($generated@@136 ($generated@@259 $generated@@269 $generated@@270) ($generated@@260 $generated@@271)))
)))
(assert  (and (= ($generated@@1 $generated@@274) 18) (forall (($generated@@275 Int) ) (! (= (type ($generated@@272 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@272 $generated@@275))
))))
(assert (forall (($generated@@276 Int) ) (!  (=> (and (<= 0 $generated@@276) (< $generated@@276 65536)) (= ($generated@@273 ($generated@@272 $generated@@276)) $generated@@276))
 :pattern ( ($generated@@272 $generated@@276))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) $generated@@64)) (= (type $generated@@281) $generated@@149)) (= (type $generated@@282) $generated@@149)) (= (type $generated@@283) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@277 $generated@@283)) (= ($generated@@74 ($generated@@229 $generated@@281 $generated@@282) ($generated@@139 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@74 ($generated@@229 $generated@@281 $generated@@282) ($generated@@139 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@140) (= ($generated@@138 $generated@@286) (= ($generated@@284 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@140) ($generated@@138 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@149) (= (type $generated@@289) $generated@@149)) (= $generated@@287 ($generated@@229 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@138 $generated@@287))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@290 $generated@@292)) ($generated@@261 $generated@@292))
 :pattern ( ($generated@@290 $generated@@292))
)))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) 0)
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
 (=> (= (type $generated@@294) ($generated@@261 $generated@@296)) (= ($generated@@291 ($generated@@259 $generated@@294 $generated@@295)) (+ 1 ($generated@@291 $generated@@294)))))
 :pattern ( ($generated@@259 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@274) (and (and (= ($generated@@272 ($generated@@273 $generated@@297)) $generated@@297) (<= 0 ($generated@@273 $generated@@297))) (< ($generated@@273 $generated@@297) 65536)))
 :pattern ( ($generated@@273 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@149)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@64) (= (type $generated@@302) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@278 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@74 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@278 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@305) $generated@@149)) (= (type $generated@@306) $generated@@64)) ($generated@@132 $generated@@303 $generated@@304)) ($generated@@278 $generated@@305 $generated@@306 $generated@@303)) ($generated@@278 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@132 $generated@@303 $generated@@304) ($generated@@278 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@307) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@310) $generated@@64)) ($generated@@132 $generated@@307 $generated@@308)) ($generated@@74 $generated@@309 $generated@@310 $generated@@307)) ($generated@@74 $generated@@309 $generated@@310 $generated@@308))
 :pattern ( ($generated@@132 $generated@@307 $generated@@308) ($generated@@74 $generated@@309 $generated@@310 $generated@@307))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@79 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@76 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@81 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@76 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@81 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@81 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 20)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@81 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@81 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@79 (type $generated@@354))))
 (=> (and (= (type $generated@@354) ($generated@@76 $generated@@356 $generated@@4)) (= (type $generated@@355) ($generated@@76 $generated@@356 $generated@@4))) (= ($generated@@353 $generated@@354 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (= ($generated@@0 ($generated@@81 $generated@@354 $generated@@357)) ($generated@@0 ($generated@@81 $generated@@355 $generated@@357))))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@79 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@76 $generated@@359 $generated@@2)) (= ($generated@@155 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@81 $generated@@358 $generated@@360))) (<= ($generated ($generated@@81 $generated@@358 $generated@@360)) ($generated@@311 $generated@@358))))
 :pattern ( ($generated@@81 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@155 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 Int) ) (! (let (($generated@@364 ($generated@@262 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362 $generated@@363)) $generated@@364))
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 Int) ($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
 (=> (= (type $generated@@365) ($generated@@261 $generated@@368)) (and (=> (= $generated@@366 ($generated@@291 $generated@@365)) (= ($generated@@361 ($generated@@259 $generated@@365 $generated@@367) $generated@@366) $generated@@367)) (=> (not (= $generated@@366 ($generated@@291 $generated@@365))) (= ($generated@@361 ($generated@@259 $generated@@365 $generated@@367) $generated@@366) ($generated@@361 $generated@@365 $generated@@366))))))
 :pattern ( ($generated@@361 ($generated@@259 $generated@@365 $generated@@367) $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@321 (type $generated@@369))))
(let (($generated@@371 ($generated@@320 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@319 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@318 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@317 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@321 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@76 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@321 (type $generated@@376))))
(let (($generated@@378 ($generated@@320 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@319 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@318 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@339 (type $generated@@380))))
(let (($generated@@382 ($generated@@338 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@337 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@336 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@335 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@339 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@76 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@339 (type $generated@@387))))
(let (($generated@@389 ($generated@@338 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@337 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@336 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@81 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@392) $generated@@64)) (= ($generated@@136 $generated@@391 ($generated@@154 $generated@@392)) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@391 $generated@@393)))) ($generated@@230 $generated@@393 $generated@@392))
 :pattern ( ($generated@@81 $generated@@391 $generated@@393))
))))
 :pattern ( ($generated@@136 $generated@@391 ($generated@@154 $generated@@392)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@79 (type $generated@@396))))
(= (type ($generated@@395 $generated@@396 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@79 (type $generated@@399))))
 (=> (and (and (= (type $generated@@399) ($generated@@76 $generated@@401 $generated@@4)) (= (type $generated@@400) ($generated@@76 $generated@@401 $generated@@4))) ($generated@@394 $generated@@399 $generated@@400)) (and (= ($generated@@395 ($generated@@215 $generated@@399 $generated@@400) $generated@@399) $generated@@400) (= ($generated@@395 ($generated@@215 $generated@@399 $generated@@400) $generated@@400) $generated@@399))))
 :pattern ( ($generated@@215 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@321 (type $generated@@403))))
(let (($generated@@405 ($generated@@320 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@319 $generated@@405 $generated@@404)) (= (= ($generated@@402 $generated@@403) 0) (= $generated@@403 ($generated@@318 $generated@@405 $generated@@404))))))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
 (=> (and (= (type $generated@@406) ($generated@@76 $generated@@409 $generated@@4)) (= (type $generated@@407) ($generated@@76 $generated@@409 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@222 $generated@@406 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@81 $generated@@406 $generated@@408)) ($generated@@0 ($generated@@81 $generated@@407 $generated@@408))))))
 :pattern ( ($generated@@81 ($generated@@222 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
 (=> (and (= (type $generated@@410) ($generated@@76 $generated@@413 $generated@@4)) (= (type $generated@@411) ($generated@@76 $generated@@413 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@395 $generated@@410 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@81 $generated@@410 $generated@@412)) (not ($generated@@0 ($generated@@81 $generated@@411 $generated@@412)))))))
 :pattern ( ($generated@@81 ($generated@@395 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@243 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@149) ($generated@@0 ($generated@@81 $generated@@414 $generated@@417))) ($generated@@278 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@81 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@243 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@418 ($generated@@248 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@149) ($generated@@0 ($generated@@81 $generated@@418 $generated@@421))) ($generated@@278 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@81 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@418 ($generated@@248 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@81 ($generated@@312 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@81 ($generated@@312 $generated@@423) $generated@@422)))
)))
(assert  (and (and (forall (($generated@@427 T@U) ) (! (= (type ($generated@@424 $generated@@427)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@424 $generated@@427))
)) (forall (($generated@@428 T@T) ($generated@@429 T@U) ) (! (= (type ($generated@@425 $generated@@428 $generated@@429)) $generated@@428)
 :pattern ( ($generated@@425 $generated@@428 $generated@@429))
))) (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@321 (type $generated@@430))))
(let (($generated@@432 ($generated@@320 (type $generated@@430))))
(= (type ($generated@@426 $generated@@430)) ($generated@@76 $generated@@432 $generated@@431))))
 :pattern ( ($generated@@426 $generated@@430))
))))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@319 $generated@@149 $generated@@149)) (= (type $generated@@434) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@424 $generated@@433) $generated@@434))  (and ($generated@@0 ($generated@@81 ($generated@@317 $generated@@433) ($generated@@147 ($generated@@425 $generated@@140 $generated@@434)))) (= ($generated@@81 ($generated@@426 $generated@@433) ($generated@@147 ($generated@@425 $generated@@140 $generated@@434))) ($generated@@148 ($generated@@425 $generated@@140 $generated@@434))))))
 :pattern ( ($generated@@81 ($generated@@424 $generated@@433) $generated@@434))
)))
(assert  (and (forall (($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@437)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@435 $generated@@437))
)) (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@339 (type $generated@@438))))
(let (($generated@@440 ($generated@@338 (type $generated@@438))))
(= (type ($generated@@436 $generated@@438)) ($generated@@76 $generated@@440 $generated@@439))))
 :pattern ( ($generated@@436 $generated@@438))
))))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@337 $generated@@149 $generated@@149)) (= (type $generated@@442) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@435 $generated@@441) $generated@@442))  (and ($generated@@0 ($generated@@81 ($generated@@335 $generated@@441) ($generated@@147 ($generated@@425 $generated@@140 $generated@@442)))) (= ($generated@@81 ($generated@@436 $generated@@441) ($generated@@147 ($generated@@425 $generated@@140 $generated@@442))) ($generated@@148 ($generated@@425 $generated@@140 $generated@@442))))))
 :pattern ( ($generated@@81 ($generated@@435 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
(let (($generated@@446 ($generated@@320 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@319 $generated@@446 $generated@@445)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@443) $generated@@444)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@446) (and ($generated@@0 ($generated@@81 ($generated@@317 $generated@@443) $generated@@447)) (= $generated@@444 ($generated@@81 ($generated@@426 $generated@@443) $generated@@447))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@443) $generated@@447))
 :pattern ( ($generated@@81 ($generated@@426 $generated@@443) $generated@@447))
))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (let (($generated@@450 (type $generated@@449)))
(let (($generated@@451 ($generated@@338 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@337 $generated@@451 $generated@@450)) (= ($generated@@0 ($generated@@81 ($generated@@384 $generated@@448) $generated@@449)) (exists (($generated@@452 T@U) ) (!  (and (= (type $generated@@452) $generated@@451) (and ($generated@@0 ($generated@@81 ($generated@@335 $generated@@448) $generated@@452)) (= $generated@@449 ($generated@@81 ($generated@@436 $generated@@448) $generated@@452))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@448) $generated@@452))
 :pattern ( ($generated@@81 ($generated@@436 $generated@@448) $generated@@452))
))))))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@319 $generated@@149 $generated@@149)) (= (type $generated@@457) $generated@@64)) (= (type $generated@@458) $generated@@64)) (= (type $generated@@459) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@456) $generated@@460))) (and ($generated@@278 ($generated@@81 ($generated@@426 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@278 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@81 ($generated@@426 $generated@@456) $generated@@460))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@74 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (and (= (type $generated@@464) ($generated@@337 $generated@@149 $generated@@149)) (= (type $generated@@465) $generated@@64)) (= (type $generated@@466) $generated@@64)) (= (type $generated@@467) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@464) $generated@@468))) (and ($generated@@278 ($generated@@81 ($generated@@436 $generated@@464) $generated@@468) $generated@@466 $generated@@467) ($generated@@278 $generated@@468 $generated@@465 $generated@@467)))
 :pattern ( ($generated@@81 ($generated@@436 $generated@@464) $generated@@468))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@464) $generated@@468))
))))
 :pattern ( ($generated@@74 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@79 (type $generated@@469))))
 (=> (and (and (= (type $generated@@469) ($generated@@76 $generated@@471 $generated@@4)) (= (type $generated@@470) ($generated@@76 $generated@@471 $generated@@4))) ($generated@@353 $generated@@469 $generated@@470)) (= $generated@@469 $generated@@470)))
 :pattern ( ($generated@@353 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(= (type ($generated@@472 $generated@@473 $generated@@474)) ($generated@@76 $generated@@475 $generated@@4)))
 :pattern ( ($generated@@472 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (! (let (($generated@@479 (type $generated@@477)))
 (=> (and (and (= (type $generated@@476) ($generated@@76 $generated@@479 $generated@@4)) (= (type $generated@@478) $generated@@479)) ($generated@@0 ($generated@@81 $generated@@476 $generated@@478))) ($generated@@0 ($generated@@81 ($generated@@472 $generated@@476 $generated@@477) $generated@@478))))
 :pattern ( ($generated@@472 $generated@@476 $generated@@477) ($generated@@81 $generated@@476 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
 (=> (and (and (= (type $generated@@480) ($generated@@76 $generated@@483 $generated@@4)) (= (type $generated@@481) ($generated@@76 $generated@@483 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@480 $generated@@482))) ($generated@@0 ($generated@@81 ($generated@@215 $generated@@480 $generated@@481) $generated@@482))))
 :pattern ( ($generated@@215 $generated@@480 $generated@@481) ($generated@@81 $generated@@480 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
 (=> (and (and (= (type $generated@@484) ($generated@@76 $generated@@487 $generated@@4)) (= (type $generated@@485) ($generated@@76 $generated@@487 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@485 $generated@@486))) ($generated@@0 ($generated@@81 ($generated@@215 $generated@@484 $generated@@485) $generated@@486))))
 :pattern ( ($generated@@215 $generated@@484 $generated@@485) ($generated@@81 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@489)))
 (=> (and (= (type $generated@@488) ($generated@@76 $generated@@491 $generated@@4)) (= (type $generated@@490) $generated@@491)) (= ($generated@@0 ($generated@@81 ($generated@@472 $generated@@488 $generated@@489) $generated@@490))  (or (= $generated@@490 $generated@@489) ($generated@@0 ($generated@@81 $generated@@488 $generated@@490))))))
 :pattern ( ($generated@@81 ($generated@@472 $generated@@488 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@492) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@493) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@494) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@492 $generated@@494))) (and ($generated@@132 $generated@@492 $generated@@493) ($generated@@132 $generated@@493 $generated@@494))) ($generated@@132 $generated@@492 $generated@@494))
 :pattern ( ($generated@@132 $generated@@492 $generated@@493) ($generated@@132 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
 (=> (and (and (= (type $generated@@495) ($generated@@76 $generated@@498 $generated@@4)) (= (type $generated@@496) ($generated@@76 $generated@@498 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@496 $generated@@497))) (not ($generated@@0 ($generated@@81 ($generated@@395 $generated@@495 $generated@@496) $generated@@497)))))
 :pattern ( ($generated@@395 $generated@@495 $generated@@496) ($generated@@81 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@500 T@T) ) (! (= (type ($generated@@499 $generated@@500)) ($generated@@76 $generated@@500 $generated@@4))
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@339 (type $generated@@501))))
(let (($generated@@503 ($generated@@338 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@337 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@336 $generated@@503 $generated@@502)) (= ($generated@@335 $generated@@501) ($generated@@499 $generated@@503))))))
 :pattern ( ($generated@@335 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@339 (type $generated@@504))))
(let (($generated@@506 ($generated@@338 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@337 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@336 $generated@@506 $generated@@505)) (= ($generated@@384 $generated@@504) ($generated@@499 $generated@@505))))))
 :pattern ( ($generated@@384 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@339 (type $generated@@507))))
(let (($generated@@509 ($generated@@338 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@337 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@336 $generated@@509 $generated@@508)) (= ($generated@@435 $generated@@507) ($generated@@499 $generated@@149))))))
 :pattern ( ($generated@@435 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@321 (type $generated@@510))))
(let (($generated@@512 ($generated@@320 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@319 $generated@@512 $generated@@511)) (or (= $generated@@510 ($generated@@318 $generated@@512 $generated@@511)) (exists (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (and (and (= (type $generated@@513) $generated@@149) (= (type $generated@@514) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@424 $generated@@510) ($generated@@298 ($generated@@229 $generated@@513 $generated@@514)))))
 :no-pattern (type $generated@@513)
 :no-pattern (type $generated@@514)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
))))))
 :pattern ( ($generated@@424 $generated@@510))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@339 (type $generated@@515))))
(let (($generated@@517 ($generated@@338 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@337 $generated@@517 $generated@@516)) (or (= $generated@@515 ($generated@@336 $generated@@517 $generated@@516)) (exists (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (and (and (= (type $generated@@518) $generated@@149) (= (type $generated@@519) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@435 $generated@@515) ($generated@@298 ($generated@@229 $generated@@518 $generated@@519)))))
 :no-pattern (type $generated@@518)
 :no-pattern (type $generated@@519)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
))))))
 :pattern ( ($generated@@435 $generated@@515))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@149) ($generated@@230 $generated@@520 $generated@@46)) (and (= ($generated@@298 ($generated@@425 $generated@@2 $generated@@520)) $generated@@520) ($generated@@136 ($generated@@425 $generated@@2 $generated@@520) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@520 $generated@@46))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@149) ($generated@@230 $generated@@521 $generated@@47)) (and (= ($generated@@298 ($generated@@425 $generated@@3 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@425 $generated@@3 $generated@@521) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@521 $generated@@47))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@149) ($generated@@230 $generated@@522 $generated@@44)) (and (= ($generated@@298 ($generated@@425 $generated@@4 $generated@@522)) $generated@@522) ($generated@@136 ($generated@@425 $generated@@4 $generated@@522) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@522 $generated@@44))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@149) ($generated@@230 $generated@@523 $generated@@45)) (and (= ($generated@@298 ($generated@@425 $generated@@274 $generated@@523)) $generated@@523) ($generated@@136 ($generated@@425 $generated@@274 $generated@@523) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@523 $generated@@45))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@79 (type $generated@@524))))
 (=> (and (= (type $generated@@524) ($generated@@76 $generated@@526 $generated@@4)) (= (type $generated@@525) ($generated@@76 $generated@@526 $generated@@4))) (and (= (+ (+ ($generated@@237 ($generated@@395 $generated@@524 $generated@@525)) ($generated@@237 ($generated@@395 $generated@@525 $generated@@524))) ($generated@@237 ($generated@@222 $generated@@524 $generated@@525))) ($generated@@237 ($generated@@215 $generated@@524 $generated@@525))) (= ($generated@@237 ($generated@@395 $generated@@524 $generated@@525)) (- ($generated@@237 $generated@@524) ($generated@@237 ($generated@@222 $generated@@524 $generated@@525)))))))
 :pattern ( ($generated@@237 ($generated@@395 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@230 ($generated@@298 $generated@@527) $generated@@528) ($generated@@136 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@230 ($generated@@298 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@79 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@76 $generated@@530 $generated@@4)) (<= 0 ($generated@@237 $generated@@529))))
 :pattern ( ($generated@@237 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@79 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@76 $generated@@532 $generated@@2)) (<= 0 ($generated@@311 $generated@@531))))
 :pattern ( ($generated@@311 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@262 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@261 $generated@@534)) (<= 0 ($generated@@291 $generated@@533))))
 :pattern ( ($generated@@291 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@321 (type $generated@@535))))
(let (($generated@@537 ($generated@@320 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@319 $generated@@537 $generated@@536)) (<= 0 ($generated@@402 $generated@@535)))))
 :pattern ( ($generated@@402 $generated@@535))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@453 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@453 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@64)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@64) (= (type $generated@@545) $generated@@64)) (= ($generated@@542 ($generated@@453 $generated@@544 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@453 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@72 ($generated@@453 $generated@@546 $generated@@547)) $generated@@58))
 :pattern ( ($generated@@453 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= ($generated@@548 ($generated@@461 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@461 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@64) (= (type $generated@@555) $generated@@64)) (= ($generated@@552 ($generated@@461 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@461 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@64) (= (type $generated@@557) $generated@@64)) (= ($generated@@72 ($generated@@461 $generated@@556 $generated@@557)) $generated@@59))
 :pattern ( ($generated@@461 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@149) (= (type $generated@@559) $generated@@149)) (= ($generated@@284 ($generated@@229 $generated@@558 $generated@@559)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= ($generated@@560 ($generated@@139 $generated@@562 $generated@@563)) $generated@@562))
 :pattern ( ($generated@@139 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@64)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@64) (= (type $generated@@567) $generated@@64)) (= ($generated@@564 ($generated@@139 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@139 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@149) (= (type $generated@@569) $generated@@149)) (= ($generated@@147 ($generated@@229 $generated@@568 $generated@@569)) $generated@@568))
 :pattern ( ($generated@@229 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) (= (type $generated@@571) $generated@@149)) (= ($generated@@148 ($generated@@229 $generated@@570 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@229 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@261 $generated@@149)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@572 ($generated@@260 $generated@@573) $generated@@574) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@291 $generated@@572))) ($generated@@278 ($generated@@361 $generated@@572 $generated@@575) $generated@@573 $generated@@574))
 :pattern ( ($generated@@361 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@260 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
 (=> (= (type $generated@@576) ($generated@@76 $generated@@578 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@472 $generated@@576 $generated@@577) $generated@@577))))
 :pattern ( ($generated@@472 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (=> (and (= (type $generated@@579) ($generated@@76 $generated@@581 $generated@@4)) ($generated@@0 ($generated@@81 $generated@@579 $generated@@580))) (= ($generated@@237 ($generated@@472 $generated@@579 $generated@@580)) ($generated@@237 $generated@@579))))
 :pattern ( ($generated@@237 ($generated@@472 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@582 ($generated@@75 $generated@@583)) $generated@@583)
 :pattern ( ($generated@@75 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@64)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@584 ($generated@@243 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@243 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@587)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@64)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@588 ($generated@@248 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@248 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@591)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@64)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@592 ($generated@@154 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@154 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@595)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@64)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@64) (= ($generated@@596 ($generated@@260 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@260 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@64) (= ($generated@@72 ($generated@@260 $generated@@599)) $generated@@57))
 :pattern ( ($generated@@260 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
(= ($generated@@425 $generated@@601 ($generated@@298 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@298 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@319 $generated@@149 $generated@@149)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) (= ($generated@@136 $generated@@602 ($generated@@453 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@602) $generated@@605))) (and ($generated@@230 ($generated@@81 ($generated@@426 $generated@@602) $generated@@605) $generated@@604) ($generated@@230 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@81 ($generated@@426 $generated@@602) $generated@@605))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@136 $generated@@602 ($generated@@453 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@337 $generated@@149 $generated@@149)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) (= ($generated@@136 $generated@@606 ($generated@@461 $generated@@607 $generated@@608)) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@606) $generated@@609))) (and ($generated@@230 ($generated@@81 ($generated@@436 $generated@@606) $generated@@609) $generated@@608) ($generated@@230 $generated@@609 $generated@@607)))
 :pattern ( ($generated@@81 ($generated@@436 $generated@@606) $generated@@609))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@606) $generated@@609))
))))
 :pattern ( ($generated@@136 $generated@@606 ($generated@@461 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@149) (= (type $generated@@613) $generated@@149)) (< ($generated@@610 $generated@@612) ($generated@@611 ($generated@@229 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@229 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@149) (= (type $generated@@615) $generated@@149)) (< ($generated@@610 $generated@@615) ($generated@@611 ($generated@@229 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@229 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 ($generated@@79 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@76 $generated@@618 $generated@@4)) (= (type $generated@@617) ($generated@@76 $generated@@618 $generated@@4))) (= ($generated@@215 $generated@@616 ($generated@@215 $generated@@616 $generated@@617)) ($generated@@215 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@215 $generated@@616 ($generated@@215 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@79 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@76 $generated@@621 $generated@@4)) (= (type $generated@@620) ($generated@@76 $generated@@621 $generated@@4))) (= ($generated@@222 $generated@@619 ($generated@@222 $generated@@619 $generated@@620)) ($generated@@222 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@222 $generated@@619 ($generated@@222 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@149) (= (type $generated@@623) $generated@@64)) (= (type $generated@@624) $generated@@64)) ($generated@@230 $generated@@622 ($generated@@453 $generated@@623 $generated@@624))) (and (= ($generated@@298 ($generated@@425 ($generated@@319 $generated@@149 $generated@@149) $generated@@622)) $generated@@622) ($generated@@136 ($generated@@425 ($generated@@319 $generated@@149 $generated@@149) $generated@@622) ($generated@@453 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@230 $generated@@622 ($generated@@453 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@149) (= (type $generated@@626) $generated@@64)) (= (type $generated@@627) $generated@@64)) ($generated@@230 $generated@@625 ($generated@@461 $generated@@626 $generated@@627))) (and (= ($generated@@298 ($generated@@425 ($generated@@337 $generated@@149 $generated@@149) $generated@@625)) $generated@@625) ($generated@@136 ($generated@@425 ($generated@@337 $generated@@149 $generated@@149) $generated@@625) ($generated@@461 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@230 $generated@@625 ($generated@@461 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@64) (= (type $generated@@629) $generated@@64)) (= (type $generated@@630) $generated@@149)) ($generated@@230 $generated@@630 ($generated@@139 $generated@@628 $generated@@629))) (and (= ($generated@@298 ($generated@@425 $generated@@140 $generated@@630)) $generated@@630) ($generated@@136 ($generated@@425 $generated@@140 $generated@@630) ($generated@@139 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@230 $generated@@630 ($generated@@139 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@632 T@T) ) (! (= (type ($generated@@631 $generated@@632)) ($generated@@76 $generated@@632 $generated@@4))
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@633)))
 (not ($generated@@0 ($generated@@81 ($generated@@631 $generated@@634) $generated@@633))))
 :pattern ( (let (($generated@@634 (type $generated@@633)))
($generated@@81 ($generated@@631 $generated@@634) $generated@@633)))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 (type $generated@@635)))
 (not ($generated@@0 ($generated@@81 ($generated@@499 $generated@@636) $generated@@635))))
 :pattern ( (let (($generated@@636 (type $generated@@635)))
($generated@@81 ($generated@@499 $generated@@636) $generated@@635)))
)))
(assert (forall (($generated@@638 T@U) ) (! (= (type ($generated@@637 $generated@@638)) $generated@@69)
 :pattern ( ($generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@64) (= (type $generated@@640) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@639 $generated@@640)) $generated@@62) (= ($generated@@637 ($generated@@139 $generated@@639 $generated@@640)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@639 $generated@@640))
)))
(assert  (and (forall (($generated@@643 T@U) ) (! (let (($generated@@644 ($generated@@262 (type $generated@@643))))
(= (type ($generated@@641 $generated@@643)) ($generated@@261 $generated@@644)))
 :pattern ( ($generated@@641 $generated@@643))
)) (forall (($generated@@645 T@U) ) (! (let (($generated@@646 ($generated@@262 (type $generated@@645))))
(= (type ($generated@@642 $generated@@645)) $generated@@646))
 :pattern ( ($generated@@642 $generated@@645))
))))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@648)))
 (=> (= (type $generated@@647) ($generated@@261 $generated@@649)) (and (= ($generated@@641 ($generated@@259 $generated@@647 $generated@@648)) $generated@@647) (= ($generated@@642 ($generated@@259 $generated@@647 $generated@@648)) $generated@@648))))
 :pattern ( ($generated@@259 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@140) (= ($generated@@610 ($generated@@298 $generated@@650)) ($generated@@611 $generated@@650)))
 :pattern ( ($generated@@610 ($generated@@298 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@321 (type $generated@@651))))
(let (($generated@@653 ($generated@@320 (type $generated@@651))))
 (=> (= (type $generated@@651) ($generated@@319 $generated@@653 $generated@@652)) (= ($generated@@237 ($generated@@317 $generated@@651)) ($generated@@402 $generated@@651)))))
 :pattern ( ($generated@@237 ($generated@@317 $generated@@651)))
)))
(assert (forall (($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@321 (type $generated@@654))))
(let (($generated@@656 ($generated@@320 (type $generated@@654))))
 (=> (= (type $generated@@654) ($generated@@319 $generated@@656 $generated@@655)) (= ($generated@@237 ($generated@@424 $generated@@654)) ($generated@@402 $generated@@654)))))
 :pattern ( ($generated@@237 ($generated@@424 $generated@@654)))
)))
(assert (forall (($generated@@657 T@U) ) (! (let (($generated@@658 ($generated@@321 (type $generated@@657))))
(let (($generated@@659 ($generated@@320 (type $generated@@657))))
 (=> (= (type $generated@@657) ($generated@@319 $generated@@659 $generated@@658)) (<= ($generated@@237 ($generated@@373 $generated@@657)) ($generated@@402 $generated@@657)))))
 :pattern ( ($generated@@237 ($generated@@373 $generated@@657)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@149) ($generated@@230 $generated@@660 ($generated@@75 0))) (and (= ($generated@@298 ($generated@@425 $generated@@2 $generated@@660)) $generated@@660) ($generated@@136 ($generated@@425 ($generated@@76 $generated@@149 $generated@@4) $generated@@660) ($generated@@75 0))))
 :pattern ( ($generated@@230 $generated@@660 ($generated@@75 0)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@661) $generated@@149) (= (type $generated@@662) $generated@@64)) ($generated@@230 $generated@@661 ($generated@@243 $generated@@662))) (and (= ($generated@@298 ($generated@@425 ($generated@@76 $generated@@149 $generated@@4) $generated@@661)) $generated@@661) ($generated@@136 ($generated@@425 ($generated@@76 $generated@@149 $generated@@4) $generated@@661) ($generated@@243 $generated@@662))))
 :pattern ( ($generated@@230 $generated@@661 ($generated@@243 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@663) $generated@@149) (= (type $generated@@664) $generated@@64)) ($generated@@230 $generated@@663 ($generated@@248 $generated@@664))) (and (= ($generated@@298 ($generated@@425 ($generated@@76 $generated@@149 $generated@@4) $generated@@663)) $generated@@663) ($generated@@136 ($generated@@425 ($generated@@76 $generated@@149 $generated@@4) $generated@@663) ($generated@@248 $generated@@664))))
 :pattern ( ($generated@@230 $generated@@663 ($generated@@248 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@665) $generated@@149) (= (type $generated@@666) $generated@@64)) ($generated@@230 $generated@@665 ($generated@@154 $generated@@666))) (and (= ($generated@@298 ($generated@@425 ($generated@@76 $generated@@149 $generated@@2) $generated@@665)) $generated@@665) ($generated@@136 ($generated@@425 ($generated@@76 $generated@@149 $generated@@2) $generated@@665) ($generated@@154 $generated@@666))))
 :pattern ( ($generated@@230 $generated@@665 ($generated@@154 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (= (type $generated@@667) $generated@@149) (= (type $generated@@668) $generated@@64)) ($generated@@230 $generated@@667 ($generated@@260 $generated@@668))) (and (= ($generated@@298 ($generated@@425 ($generated@@261 $generated@@149) $generated@@667)) $generated@@667) ($generated@@136 ($generated@@425 ($generated@@261 $generated@@149) $generated@@667) ($generated@@260 $generated@@668))))
 :pattern ( ($generated@@230 $generated@@667 ($generated@@260 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ) (! (let (($generated@@670 ($generated@@79 (type $generated@@669))))
 (=> (= (type $generated@@669) ($generated@@76 $generated@@670 $generated@@4)) (and (= (= ($generated@@237 $generated@@669) 0) (= $generated@@669 ($generated@@631 $generated@@670))) (=> (not (= ($generated@@237 $generated@@669) 0)) (exists (($generated@@671 T@U) ) (!  (and (= (type $generated@@671) $generated@@670) ($generated@@0 ($generated@@81 $generated@@669 $generated@@671)))
 :no-pattern (type $generated@@671)
 :no-pattern ($generated $generated@@671)
 :no-pattern ($generated@@0 $generated@@671)
))))))
 :pattern ( ($generated@@237 $generated@@669))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@672) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@673) $generated@@64)) (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@672 ($generated@@154 $generated@@673) $generated@@674) (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@672 $generated@@675)))) ($generated@@278 $generated@@675 $generated@@673 $generated@@674))
 :pattern ( ($generated@@81 $generated@@672 $generated@@675))
))))
 :pattern ( ($generated@@74 $generated@@672 ($generated@@154 $generated@@673) $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (! (let (($generated@@678 (type $generated@@677)))
 (=> (and (= (type $generated@@676) ($generated@@76 $generated@@678 $generated@@4)) (not ($generated@@0 ($generated@@81 $generated@@676 $generated@@677)))) (= ($generated@@237 ($generated@@472 $generated@@676 $generated@@677)) (+ ($generated@@237 $generated@@676) 1))))
 :pattern ( ($generated@@237 ($generated@@472 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (! (let (($generated@@681 ($generated@@79 (type $generated@@679))))
 (=> (and (= (type $generated@@679) ($generated@@76 $generated@@681 $generated@@4)) (= (type $generated@@680) ($generated@@76 $generated@@681 $generated@@4))) (= ($generated@@394 $generated@@679 $generated@@680) (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@681) (or (not ($generated@@0 ($generated@@81 $generated@@679 $generated@@682))) (not ($generated@@0 ($generated@@81 $generated@@680 $generated@@682)))))
 :pattern ( ($generated@@81 $generated@@679 $generated@@682))
 :pattern ( ($generated@@81 $generated@@680 $generated@@682))
)))))
 :pattern ( ($generated@@394 $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@140) (= (type $generated@@684) $generated@@64)) (= (type $generated@@685) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@277 $generated@@685) (and ($generated@@138 $generated@@683) (exists (($generated@@686 T@U) ) (!  (and (= (type $generated@@686) $generated@@64) ($generated@@74 $generated@@683 ($generated@@139 $generated@@684 $generated@@686) $generated@@685))
 :pattern ( ($generated@@74 $generated@@683 ($generated@@139 $generated@@684 $generated@@686) $generated@@685))
))))) ($generated@@278 ($generated@@147 $generated@@683) $generated@@684 $generated@@685))
 :pattern ( ($generated@@278 ($generated@@147 $generated@@683) $generated@@684 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@140) (= (type $generated@@688) $generated@@64)) (= (type $generated@@689) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@277 $generated@@689) (and ($generated@@138 $generated@@687) (exists (($generated@@690 T@U) ) (!  (and (= (type $generated@@690) $generated@@64) ($generated@@74 $generated@@687 ($generated@@139 $generated@@690 $generated@@688) $generated@@689))
 :pattern ( ($generated@@74 $generated@@687 ($generated@@139 $generated@@690 $generated@@688) $generated@@689))
))))) ($generated@@278 ($generated@@148 $generated@@687) $generated@@688 $generated@@689))
 :pattern ( ($generated@@278 ($generated@@148 $generated@@687) $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@149) (= (type $generated@@692) $generated@@149)) (= ($generated@@229 ($generated@@255 $generated@@691) ($generated@@255 $generated@@692)) ($generated@@255 ($generated@@229 $generated@@691 $generated@@692))))
 :pattern ( ($generated@@229 ($generated@@255 $generated@@691) ($generated@@255 $generated@@692)))
)))
(assert (forall (($generated@@693 Int) ) (! (= ($generated@@298 ($generated@@8 ($generated@@253 $generated@@693))) ($generated@@255 ($generated@@298 ($generated@@8 $generated@@693))))
 :pattern ( ($generated@@298 ($generated@@8 ($generated@@253 $generated@@693))))
)))
(assert (forall (($generated@@694 T@U) ) (! (= ($generated@@298 ($generated@@255 $generated@@694)) ($generated@@255 ($generated@@298 $generated@@694)))
 :pattern ( ($generated@@298 ($generated@@255 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ) (! (let (($generated@@696 ($generated@@262 (type $generated@@695))))
 (=> (and (= (type $generated@@695) ($generated@@261 $generated@@696)) (= ($generated@@291 $generated@@695) 0)) (= $generated@@695 ($generated@@290 $generated@@696))))
 :pattern ( ($generated@@291 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ) (! (let (($generated@@700 (type $generated@@698)))
 (=> (and (and (= (type $generated@@697) ($generated@@76 $generated@@700 $generated@@2)) (= (type $generated@@699) $generated@@2)) (<= 0 ($generated $generated@@699))) (= ($generated@@311 ($generated@@82 $generated@@697 $generated@@698 $generated@@699)) (+ (- ($generated@@311 $generated@@697) ($generated ($generated@@81 $generated@@697 $generated@@698))) ($generated $generated@@699)))))
 :pattern ( ($generated@@311 ($generated@@82 $generated@@697 $generated@@698 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (! (let (($generated@@704 (type $generated@@703)))
 (=> (and (= (type $generated@@701) ($generated@@76 $generated@@704 $generated@@4)) (= (type $generated@@702) ($generated@@76 $generated@@704 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@215 $generated@@701 $generated@@702) $generated@@703))  (or ($generated@@0 ($generated@@81 $generated@@701 $generated@@703)) ($generated@@0 ($generated@@81 $generated@@702 $generated@@703))))))
 :pattern ( ($generated@@81 ($generated@@215 $generated@@701 $generated@@702) $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@706) $generated@@2)) ($generated@@74 $generated@@706 $generated@@46 $generated@@705))
 :pattern ( ($generated@@74 $generated@@706 $generated@@46 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@708) $generated@@3)) ($generated@@74 $generated@@708 $generated@@47 $generated@@707))
 :pattern ( ($generated@@74 $generated@@708 $generated@@47 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@710) $generated@@4)) ($generated@@74 $generated@@710 $generated@@44 $generated@@709))
 :pattern ( ($generated@@74 $generated@@710 $generated@@44 $generated@@709))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@712) $generated@@274)) ($generated@@74 $generated@@712 $generated@@45 $generated@@711))
 :pattern ( ($generated@@74 $generated@@712 $generated@@45 $generated@@711))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@713) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@714) $generated@@149)) ($generated@@74 $generated@@714 $generated@@48 $generated@@713))
 :pattern ( ($generated@@74 $generated@@714 $generated@@48 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) ($generated@@261 $generated@@149)) (= (type $generated@@716) $generated@@64)) (= ($generated@@136 $generated@@715 ($generated@@260 $generated@@716)) (forall (($generated@@717 Int) ) (!  (=> (and (<= 0 $generated@@717) (< $generated@@717 ($generated@@291 $generated@@715))) ($generated@@230 ($generated@@361 $generated@@715 $generated@@717) $generated@@716))
 :pattern ( ($generated@@361 $generated@@715 $generated@@717))
))))
 :pattern ( ($generated@@136 $generated@@715 ($generated@@260 $generated@@716)))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 Int) ) (!  (=> (= (type $generated@@719) ($generated@@261 $generated@@149)) (=> (and (<= 0 $generated@@720) (< $generated@@720 ($generated@@291 $generated@@719))) (< ($generated@@611 ($generated@@425 $generated@@140 ($generated@@361 $generated@@719 $generated@@720))) ($generated@@718 $generated@@719))))
 :pattern ( ($generated@@611 ($generated@@425 $generated@@140 ($generated@@361 $generated@@719 $generated@@720))))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (and (= (type $generated@@721) ($generated@@319 $generated@@149 $generated@@149)) (= (type $generated@@722) $generated@@64)) (= (type $generated@@723) $generated@@64)) ($generated@@136 $generated@@721 ($generated@@453 $generated@@722 $generated@@723))) (and (and ($generated@@136 ($generated@@317 $generated@@721) ($generated@@243 $generated@@722)) ($generated@@136 ($generated@@373 $generated@@721) ($generated@@243 $generated@@723))) ($generated@@136 ($generated@@424 $generated@@721) ($generated@@243 ($generated@@139 $generated@@722 $generated@@723)))))
 :pattern ( ($generated@@136 $generated@@721 ($generated@@453 $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (and (= (type $generated@@724) ($generated@@337 $generated@@149 $generated@@149)) (= (type $generated@@725) $generated@@64)) (= (type $generated@@726) $generated@@64)) ($generated@@136 $generated@@724 ($generated@@461 $generated@@725 $generated@@726))) (and (and ($generated@@136 ($generated@@335 $generated@@724) ($generated@@248 $generated@@725)) ($generated@@136 ($generated@@384 $generated@@724) ($generated@@248 $generated@@726))) ($generated@@136 ($generated@@435 $generated@@724) ($generated@@248 ($generated@@139 $generated@@725 $generated@@726)))))
 :pattern ( ($generated@@136 $generated@@724 ($generated@@461 $generated@@725 $generated@@726)))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@2) ($generated@@136 $generated@@727 $generated@@46))
 :pattern ( ($generated@@136 $generated@@727 $generated@@46))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@3) ($generated@@136 $generated@@728 $generated@@47))
 :pattern ( ($generated@@136 $generated@@728 $generated@@47))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@4) ($generated@@136 $generated@@729 $generated@@44))
 :pattern ( ($generated@@136 $generated@@729 $generated@@44))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@274) ($generated@@136 $generated@@730 $generated@@45))
 :pattern ( ($generated@@136 $generated@@730 $generated@@45))
)))
(assert (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@149) ($generated@@136 $generated@@731 $generated@@48))
 :pattern ( ($generated@@136 $generated@@731 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@732 () T@U)
(declare-fun $generated@@733 () Bool)
(declare-fun $generated@@734 () Int)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () Int)
(declare-fun $generated@@738 () Int)
(declare-fun $generated@@739 () Int)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 (T@U) Bool)
(declare-fun $generated@@742 () Int)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () Int)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@732) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@735) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@736) ($generated@@261 $generated@@149))) (= (type $generated@@740) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@743) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@744) ($generated@@261 $generated@@149))) (= (type $generated@@745) $generated@@77)) (= (type $generated@@746) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@747) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@749) ($generated@@261 $generated@@149))) (= (type $generated@@750) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@751) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@752) ($generated@@261 $generated@@149))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@754 true))
(let (($generated@@755  (=> (and (< ($generated@@253 0) ($generated@@237 $generated@@732)) (= (ControlFlow 0 20) 18)) $generated@@754)))
(let (($generated@@756  (=> (and (<= ($generated@@237 $generated@@732) ($generated@@253 0)) (= (ControlFlow 0 19) 18)) $generated@@754)))
(let (($generated@@757  (=> (not $generated@@733) (and (=> (= (ControlFlow 0 21) 19) $generated@@756) (=> (= (ControlFlow 0 21) 20) $generated@@755)))))
(let (($generated@@758 true))
(let (($generated@@759  (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (and ($generated@@136 ($generated@@8 ($generated@@253 0)) $generated@@46) (and ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 ($generated@@253 0))))) (forall (($generated@@760 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@760)))) (<= ($generated@@253 0) $generated@@760)))
 :pattern ( ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@760))))
)))) (exists (($generated@@761 T@U) ) (!  (and (= (type $generated@@761) $generated@@2) (and ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 $generated@@761))) (forall (($generated@@762 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@762)))) (<= ($generated $generated@@761) $generated@@762)))
 :pattern ( ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@762))))
))))
 :no-pattern (type $generated@@761)
 :no-pattern ($generated $generated@@761)
 :no-pattern ($generated@@0 $generated@@761)
)))) (=> (or (and ($generated@@136 ($generated@@8 ($generated@@253 0)) $generated@@46) (and ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 ($generated@@253 0))))) (forall (($generated@@763 T@U) ) (!  (=> (and (and (= (type $generated@@763) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 $generated@@763)))) (<= ($generated@@253 0) ($generated $generated@@763)))
 :pattern ( ($generated@@81 $generated@@732 ($generated@@298 $generated@@763)))
)))) (exists (($generated@@764 Int) )  (and ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@764)))) (forall (($generated@@765 T@U) ) (!  (=> (and (and (= (type $generated@@765) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 $generated@@765)))) (<= $generated@@764 ($generated $generated@@765)))
 :pattern ( ($generated@@81 $generated@@732 ($generated@@298 $generated@@765)))
))))) (=> (and (and ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@734)))) (forall (($generated@@766 T@U) ) (!  (=> (and (and (= (type $generated@@766) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 $generated@@766)))) (<= $generated@@734 ($generated $generated@@766)))
 :pattern ( ($generated@@81 $generated@@732 ($generated@@298 $generated@@766)))
))) (and (= $generated@@735 ($generated@@395 $generated@@732 ($generated@@472 ($generated@@631 $generated@@149) ($generated@@298 ($generated@@8 $generated@@734))))) (= $generated@@736 ($generated@@255 ($generated@@259 ($generated@@259 ($generated@@290 $generated@@149) ($generated@@298 ($generated@@272 44))) ($generated@@298 ($generated@@272 32))))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@737) (= (ite (<= ($generated@@237 $generated@@735) ($generated@@253 0)) (- 0 ($generated@@237 $generated@@735)) (- ($generated@@237 $generated@@735) 0)) $generated@@737))) (=> (or (<= 0 $generated@@737) (= (ite (<= ($generated@@237 $generated@@735) ($generated@@253 0)) (- 0 ($generated@@237 $generated@@735)) (- ($generated@@237 $generated@@735) 0)) $generated@@737)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (ite (<= ($generated@@237 $generated@@735) ($generated@@253 0)) (- 0 ($generated@@237 $generated@@735)) (- ($generated@@237 $generated@@735) 0)) $generated@@737)))))))))
(let (($generated@@767  (=> (and (not ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@738))))) (= (ControlFlow 0 11) 5)) $generated@@759)))
(let (($generated@@768  (=> (and ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@738)))) (= (ControlFlow 0 10) 5)) $generated@@759)))
(let (($generated@@769  (and (=> (= (ControlFlow 0 12) 10) $generated@@768) (=> (= (ControlFlow 0 12) 11) $generated@@767))))
(let (($generated@@770  (=> ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@739)))) (and (=> (= (ControlFlow 0 13) 12) $generated@@769) (=> (= (ControlFlow 0 13) 9) $generated@@758)))))
(let (($generated@@771  (=> (and (not ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@739))))) (= (ControlFlow 0 8) 5)) $generated@@759)))
(let (($generated@@772  (and (=> (= (ControlFlow 0 14) 13) $generated@@770) (=> (= (ControlFlow 0 14) 8) $generated@@771))))
(let (($generated@@773 true))
(let (($generated@@774  (=> (and (not (= ($generated@@237 $generated@@732) 0)) (= $generated@@737 (ite (<= ($generated@@237 $generated@@732) ($generated@@253 0)) (- 0 ($generated@@237 $generated@@732)) (- ($generated@@237 $generated@@732) 0)))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (not ($generated@@353 $generated@@732 ($generated@@631 $generated@@149)))) (=> (not ($generated@@353 $generated@@732 ($generated@@631 $generated@@149))) (=> (and (and (and ($generated@@277 $generated@@740) ($generated@@741 $generated@@740)) ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 ($generated@@8 $generated@@742))))) (and (forall (($generated@@775 T@U) ) (!  (=> (and (and (= (type $generated@@775) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@732 ($generated@@298 $generated@@775)))) (<= $generated@@742 ($generated $generated@@775)))
 :pattern ( ($generated@@81 $generated@@732 ($generated@@298 $generated@@775)))
)) (= $generated@@743 $generated@@740))) (and (=> (= (ControlFlow 0 15) 14) $generated@@772) (=> (= (ControlFlow 0 15) 3) $generated@@773))))))))
(let (($generated@@776 true))
(let (($generated@@777  (=> $generated@@733 (and (=> (= (ControlFlow 0 17) 2) $generated@@776) (=> (= (ControlFlow 0 17) 15) $generated@@774)))))
(let (($generated@@778  (and (=> (= (ControlFlow 0 22) 21) $generated@@757) (=> (= (ControlFlow 0 22) 17) $generated@@777))))
(let (($generated@@779 true))
(let (($generated@@780  (=> (and (and ($generated@@136 $generated@@732 ($generated@@243 $generated@@46)) ($generated@@74 $generated@@732 ($generated@@243 $generated@@46) $generated@@743)) (and ($generated@@136 $generated@@744 ($generated@@260 $generated@@45)) ($generated@@74 $generated@@744 ($generated@@260 $generated@@45) $generated@@743))) (=> (and (and (and ($generated@@277 $generated@@743) ($generated@@741 $generated@@743)) (and (not false) (forall (($generated@@781 T@U) ) (!  (=> (= (type $generated@@781) $generated@@77) (=> (and (not (= $generated@@781 $generated@@745)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@746 $generated@@781) $generated@@60))) (= ($generated@@81 $generated@@743 $generated@@781) ($generated@@81 $generated@@746 $generated@@781))))
 :pattern ( ($generated@@81 $generated@@743 $generated@@781))
)))) (and (and ($generated@@132 $generated@@746 $generated@@743) (forall (($generated@@782 T@U) ($generated@@783 T@U) ) (! (let (($generated@@784 ($generated@@67 (type $generated@@783))))
 (=> (and (and (= (type $generated@@782) $generated@@77) (= (type $generated@@783) ($generated@@66 $generated@@784))) (and (not (= $generated@@782 $generated@@745)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@746 $generated@@782) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@743 $generated@@782) $generated@@783) ($generated@@83 ($generated@@81 $generated@@746 $generated@@782) $generated@@783)) ($generated@@0 ($generated@@159 $generated@@747 $generated@@782 $generated@@783)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@743 $generated@@782) $generated@@783))
))) (and (<= (ite (<= ($generated@@237 $generated@@732) ($generated@@253 0)) (- 0 ($generated@@237 $generated@@732)) (- ($generated@@237 $generated@@732) 0)) $generated@@748) (=> (= (ite (<= ($generated@@237 $generated@@732) ($generated@@253 0)) (- 0 ($generated@@237 $generated@@732)) (- ($generated@@237 $generated@@732) 0)) $generated@@748) true)))) (and (=> (= (ControlFlow 0 23) 1) $generated@@779) (=> (= (ControlFlow 0 23) 22) $generated@@778))))))
(let (($generated@@785  (=> (and (and (= $generated@@747 ($generated@@160 $generated@@745 $generated@@746 $generated@@60 false)) (= $generated@@749 ($generated@@255 ($generated@@290 $generated@@149)))) (and (= $generated@@748 (ite (<= ($generated@@237 $generated@@750) ($generated@@253 0)) (- 0 ($generated@@237 $generated@@750)) (- ($generated@@237 $generated@@750) 0))) (= (ControlFlow 0 24) 23))) $generated@@780)))
(let (($generated@@786  (=> (and (and (and (and ($generated@@277 $generated@@746) ($generated@@741 $generated@@746)) (and ($generated@@136 $generated@@750 ($generated@@243 $generated@@46)) ($generated@@74 $generated@@750 ($generated@@243 $generated@@46) $generated@@746))) (and (and ($generated@@136 $generated@@751 ($generated@@243 $generated@@46)) ($generated@@74 $generated@@751 ($generated@@243 $generated@@46) $generated@@746)) true)) (and (and (and ($generated@@136 $generated@@752 ($generated@@260 $generated@@45)) ($generated@@74 $generated@@752 ($generated@@260 $generated@@45) $generated@@746)) true) (and (= 1 $generated@@753) (= (ControlFlow 0 25) 24)))) $generated@@785)))
$generated@@786))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@T) T@U)
(declare-fun $generated@@258 (T@U) Int)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@345 (T@U T@U) Bool)
(declare-fun $generated@@346 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@506 (T@U Int) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@564 (T@T) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@584 (T@U T@U) Bool)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@79 (type $generated@@212))))
(= (type ($generated@@211 $generated@@212 $generated@@213)) ($generated@@76 $generated@@214 $generated@@4)))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@79 (type $generated@@215))))
 (=> (and (= (type $generated@@215) ($generated@@76 $generated@@217 $generated@@4)) (= (type $generated@@216) ($generated@@76 $generated@@217 $generated@@4))) (= ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216) ($generated@@211 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@218 $generated@@220 $generated@@221)) $generated@@136)
 :pattern ( ($generated@@218 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@64) (= (type $generated@@223) $generated@@64)) (= (type $generated@@224) $generated@@145)) (= (type $generated@@225) $generated@@145)) (= ($generated@@132 ($generated@@218 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223))  (and ($generated@@219 $generated@@224 $generated@@222) ($generated@@219 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@132 ($generated@@218 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@136) (= (type $generated@@227) $generated@@136)) (= ($generated@@142 $generated@@226 $generated@@227) (= $generated@@226 $generated@@227)))
 :pattern ( ($generated@@142 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@64)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@231) $generated@@64)) (= ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@145) ($generated@@0 ($generated@@81 $generated@@230 $generated@@232))) ($generated@@219 $generated@@232 $generated@@231))
 :pattern ( ($generated@@81 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@219 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 Int) ) (! (= ($generated@@238 $generated@@239) $generated@@239)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (let (($generated@@242 (type $generated@@241)))
(= (type ($generated@@240 $generated@@241)) $generated@@242))
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@240 $generated@@243) $generated@@243)
 :pattern ( ($generated@@240 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) $generated@@64) (= (type $generated@@247) $generated@@64)) (= (type $generated@@248) $generated@@145)) (= (type $generated@@249) $generated@@145)) (= (type $generated@@250) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@244 $generated@@250)) (= ($generated@@74 ($generated@@218 $generated@@248 $generated@@249) ($generated@@135 $generated@@246 $generated@@247) $generated@@250)  (and ($generated@@245 $generated@@248 $generated@@246 $generated@@250) ($generated@@245 $generated@@249 $generated@@247 $generated@@250))))
 :pattern ( ($generated@@74 ($generated@@218 $generated@@248 $generated@@249) ($generated@@135 $generated@@246 $generated@@247) $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@136) (= ($generated@@134 $generated@@253) (= ($generated@@251 $generated@@253) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@136) ($generated@@134 $generated@@254)) (exists (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (and (and (= (type $generated@@255) $generated@@145) (= (type $generated@@256) $generated@@145)) (= $generated@@254 ($generated@@218 $generated@@255 $generated@@256)))
 :no-pattern (type $generated@@255)
 :no-pattern (type $generated@@256)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
)))
 :pattern ( ($generated@@134 $generated@@254))
)))
(assert  (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 17)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@T) ) (! (= (type ($generated@@257 $generated@@263)) ($generated@@259 $generated@@263))
 :pattern ( ($generated@@257 $generated@@263))
))))
(assert (forall (($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@264)) 0)
 :pattern ( ($generated@@257 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@145)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@64) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269) ($generated@@74 $generated@@267 $generated@@268 $generated@@269)))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 T@T) ) (! (= (type ($generated@@271 $generated@@272)) ($generated@@76 $generated@@272 $generated@@2))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@79 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@76 $generated@@274 $generated@@2)) (and (= (= ($generated@@270 $generated@@273) 0) (= $generated@@273 ($generated@@271 $generated@@274))) (=> (not (= ($generated@@270 $generated@@273) 0)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) (< 0 ($generated ($generated@@81 $generated@@273 $generated@@275))))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 18)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@76 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@79 (type $generated@@313))))
 (=> (and (= (type $generated@@313) ($generated@@76 $generated@@315 $generated@@4)) (= (type $generated@@314) ($generated@@76 $generated@@315 $generated@@4))) (= ($generated@@312 $generated@@313 $generated@@314) (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@315) (= ($generated@@0 ($generated@@81 $generated@@313 $generated@@316)) ($generated@@0 ($generated@@81 $generated@@314 $generated@@316))))
 :pattern ( ($generated@@81 $generated@@313 $generated@@316))
 :pattern ( ($generated@@81 $generated@@314 $generated@@316))
)))))
 :pattern ( ($generated@@312 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@270 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@280 (type $generated@@320))))
(let (($generated@@322 ($generated@@279 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@278 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@277 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@276 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@280 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@280 (type $generated@@327))))
(let (($generated@@329 ($generated@@279 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@278 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@277 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@298 (type $generated@@331))))
(let (($generated@@333 ($generated@@297 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@296 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@295 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@294 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@298 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@298 (type $generated@@338))))
(let (($generated@@340 ($generated@@297 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@296 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@295 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@219 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@79 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@79 (type $generated@@350))))
 (=> (and (and (= (type $generated@@350) ($generated@@76 $generated@@352 $generated@@4)) (= (type $generated@@351) ($generated@@76 $generated@@352 $generated@@4))) ($generated@@345 $generated@@350 $generated@@351)) (and (= ($generated@@346 ($generated@@211 $generated@@350 $generated@@351) $generated@@350) $generated@@351) (= ($generated@@346 ($generated@@211 $generated@@350 $generated@@351) $generated@@351) $generated@@350))))
 :pattern ( ($generated@@211 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
 (=> (and (= (type $generated@@353) ($generated@@76 $generated@@356 $generated@@4)) (= (type $generated@@354) ($generated@@76 $generated@@356 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@353 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@81 $generated@@353 $generated@@355)) (not ($generated@@0 ($generated@@81 $generated@@354 $generated@@355)))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@353 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@228 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@245 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@228 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@233 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@145) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@245 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@233 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@81 ($generated@@271 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@81 ($generated@@271 $generated@@366) $generated@@365)))
)))
(assert  (and (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@367 $generated@@370)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@367 $generated@@370))
)) (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@368 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@368 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@280 (type $generated@@373))))
(let (($generated@@375 ($generated@@279 (type $generated@@373))))
(= (type ($generated@@369 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@369 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@376) ($generated@@143 ($generated@@368 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@369 $generated@@376) ($generated@@143 ($generated@@368 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@368 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@298 (type $generated@@381))))
(let (($generated@@383 ($generated@@297 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@385) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@384) ($generated@@143 ($generated@@368 $generated@@136 $generated@@385)))) (= ($generated@@81 ($generated@@379 $generated@@384) ($generated@@143 ($generated@@368 $generated@@136 $generated@@385))) ($generated@@144 ($generated@@368 $generated@@136 $generated@@385))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@279 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@278 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@297 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@296 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@399) $generated@@403))) (and ($generated@@245 ($generated@@81 ($generated@@369 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@245 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@64)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@407) $generated@@411))) (and ($generated@@245 ($generated@@81 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@245 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@74 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@79 (type $generated@@412))))
 (=> (and (and (= (type $generated@@412) ($generated@@76 $generated@@414 $generated@@4)) (= (type $generated@@413) ($generated@@76 $generated@@414 $generated@@4))) ($generated@@312 $generated@@412 $generated@@413)) (= $generated@@412 $generated@@413)))
 :pattern ( ($generated@@312 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(= (type ($generated@@415 $generated@@416 $generated@@417)) ($generated@@76 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@420)))
 (=> (and (and (= (type $generated@@419) ($generated@@76 $generated@@422 $generated@@4)) (= (type $generated@@421) $generated@@422)) ($generated@@0 ($generated@@81 $generated@@419 $generated@@421))) ($generated@@0 ($generated@@81 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))))
 :pattern ( ($generated@@415 $generated@@419 $generated@@420) ($generated@@81 $generated@@419 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
 (=> (and (and (= (type $generated@@423) ($generated@@76 $generated@@426 $generated@@4)) (= (type $generated@@424) ($generated@@76 $generated@@426 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@423 $generated@@425))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@423 $generated@@424) $generated@@425))))
 :pattern ( ($generated@@211 $generated@@423 $generated@@424) ($generated@@81 $generated@@423 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
 (=> (and (and (= (type $generated@@427) ($generated@@76 $generated@@430 $generated@@4)) (= (type $generated@@428) ($generated@@76 $generated@@430 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@428 $generated@@429))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@427 $generated@@428) $generated@@429))))
 :pattern ( ($generated@@211 $generated@@427 $generated@@428) ($generated@@81 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@432)))
 (=> (and (= (type $generated@@431) ($generated@@76 $generated@@434 $generated@@4)) (= (type $generated@@433) $generated@@434)) (= ($generated@@0 ($generated@@81 ($generated@@415 $generated@@431 $generated@@432) $generated@@433))  (or (= $generated@@433 $generated@@432) ($generated@@0 ($generated@@81 $generated@@431 $generated@@433))))))
 :pattern ( ($generated@@81 ($generated@@415 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
 (=> (and (and (= (type $generated@@435) ($generated@@76 $generated@@438 $generated@@4)) (= (type $generated@@436) ($generated@@76 $generated@@438 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@436 $generated@@437))) (not ($generated@@0 ($generated@@81 ($generated@@346 $generated@@435 $generated@@436) $generated@@437)))))
 :pattern ( ($generated@@346 $generated@@435 $generated@@436) ($generated@@81 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@76 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@298 (type $generated@@441))))
(let (($generated@@443 ($generated@@297 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@296 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@295 $generated@@443 $generated@@442)) (= ($generated@@294 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@294 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@298 (type $generated@@444))))
(let (($generated@@446 ($generated@@297 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@296 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@295 $generated@@446 $generated@@445)) (= ($generated@@335 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@335 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@298 (type $generated@@447))))
(let (($generated@@449 ($generated@@297 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@296 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@295 $generated@@449 $generated@@448)) (= ($generated@@378 $generated@@447) ($generated@@439 $generated@@145))))))
 :pattern ( ($generated@@378 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@280 (type $generated@@450))))
(let (($generated@@452 ($generated@@279 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@278 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@277 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@145) (= (type $generated@@454) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@450) ($generated@@265 ($generated@@218 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@367 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@298 (type $generated@@455))))
(let (($generated@@457 ($generated@@297 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@296 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@295 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@455) ($generated@@265 ($generated@@218 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@378 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) ($generated@@219 $generated@@460 $generated@@46)) (and (= ($generated@@265 ($generated@@368 $generated@@2 $generated@@460)) $generated@@460) ($generated@@132 ($generated@@368 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) ($generated@@219 $generated@@461 $generated@@47)) (and (= ($generated@@265 ($generated@@368 $generated@@3 $generated@@461)) $generated@@461) ($generated@@132 ($generated@@368 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) ($generated@@219 $generated@@462 $generated@@44)) (and (= ($generated@@265 ($generated@@368 $generated@@4 $generated@@462)) $generated@@462) ($generated@@132 ($generated@@368 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 20))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@145) ($generated@@219 $generated@@464 $generated@@45)) (and (= ($generated@@265 ($generated@@368 $generated@@463 $generated@@464)) $generated@@464) ($generated@@132 ($generated@@368 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@219 ($generated@@265 $generated@@465) $generated@@466) ($generated@@132 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@219 ($generated@@265 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@79 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@76 $generated@@468 $generated@@2)) (<= 0 ($generated@@270 $generated@@467))))
 :pattern ( ($generated@@270 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@260 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@259 $generated@@470)) (<= 0 ($generated@@258 $generated@@469))))
 :pattern ( ($generated@@258 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@396 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@396 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@396 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@396 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@404 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@404 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@404 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@404 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@72 ($generated@@404 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) (= (type $generated@@492) $generated@@145)) (= ($generated@@251 ($generated@@218 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@218 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@135 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@135 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@135 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@135 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (= ($generated@@143 ($generated@@218 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@218 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (= ($generated@@144 ($generated@@218 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@218 $generated@@503 $generated@@504))
)))
(assert  (and (forall (($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@507))
)) (forall (($generated@@508 T@U) ($generated@@509 Int) ) (! (let (($generated@@510 ($generated@@260 (type $generated@@508))))
(= (type ($generated@@506 $generated@@508 $generated@@509)) $generated@@510))
 :pattern ( ($generated@@506 $generated@@508 $generated@@509))
))))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@259 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@511 ($generated@@505 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@258 $generated@@511))) ($generated@@245 ($generated@@506 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@506 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@74 $generated@@511 ($generated@@505 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
 (=> (= (type $generated@@515) ($generated@@76 $generated@@517 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@415 $generated@@515 $generated@@516) $generated@@516))))
 :pattern ( ($generated@@415 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@518 ($generated@@75 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@75 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@520 ($generated@@228 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@228 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@72 ($generated@@228 $generated@@523)) $generated@@54))
 :pattern ( ($generated@@228 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@524 ($generated@@233 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@233 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@527)) $generated@@55))
 :pattern ( ($generated@@233 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@64)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@528 ($generated@@150 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@150 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@531)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@532 ($generated@@505 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@505 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@64) (= ($generated@@72 ($generated@@505 $generated@@535)) $generated@@57))
 :pattern ( ($generated@@505 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@368 $generated@@537 ($generated@@265 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@265 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) $generated@@64)) (= ($generated@@132 $generated@@538 ($generated@@396 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@538) $generated@@541))) (and ($generated@@219 ($generated@@81 ($generated@@369 $generated@@538) $generated@@541) $generated@@540) ($generated@@219 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@538) $generated@@541))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@132 $generated@@538 ($generated@@396 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) (= ($generated@@132 $generated@@542 ($generated@@404 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@542) $generated@@545))) (and ($generated@@219 ($generated@@81 ($generated@@379 $generated@@542) $generated@@545) $generated@@544) ($generated@@219 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@542) $generated@@545))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@132 $generated@@542 ($generated@@404 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@145)) (< ($generated@@546 $generated@@548) ($generated@@547 ($generated@@218 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@218 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@145)) (< ($generated@@546 $generated@@551) ($generated@@547 ($generated@@218 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@218 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@79 (type $generated@@552))))
 (=> (and (= (type $generated@@552) ($generated@@76 $generated@@554 $generated@@4)) (= (type $generated@@553) ($generated@@76 $generated@@554 $generated@@4))) (= ($generated@@211 $generated@@552 ($generated@@211 $generated@@552 $generated@@553)) ($generated@@211 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@211 $generated@@552 ($generated@@211 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) $generated@@64)) ($generated@@219 $generated@@555 ($generated@@396 $generated@@556 $generated@@557))) (and (= ($generated@@265 ($generated@@368 ($generated@@278 $generated@@145 $generated@@145) $generated@@555)) $generated@@555) ($generated@@132 ($generated@@368 ($generated@@278 $generated@@145 $generated@@145) $generated@@555) ($generated@@396 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@219 $generated@@555 ($generated@@396 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@219 $generated@@558 ($generated@@404 $generated@@559 $generated@@560))) (and (= ($generated@@265 ($generated@@368 ($generated@@296 $generated@@145 $generated@@145) $generated@@558)) $generated@@558) ($generated@@132 ($generated@@368 ($generated@@296 $generated@@145 $generated@@145) $generated@@558) ($generated@@404 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@219 $generated@@558 ($generated@@404 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@64) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@145)) ($generated@@219 $generated@@563 ($generated@@135 $generated@@561 $generated@@562))) (and (= ($generated@@265 ($generated@@368 $generated@@136 $generated@@563)) $generated@@563) ($generated@@132 ($generated@@368 $generated@@136 $generated@@563) ($generated@@135 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@219 $generated@@563 ($generated@@135 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@565 T@T) ) (! (= (type ($generated@@564 $generated@@565)) ($generated@@76 $generated@@565 $generated@@4))
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@81 ($generated@@564 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@81 ($generated@@564 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
 (not ($generated@@0 ($generated@@81 ($generated@@439 $generated@@569) $generated@@568))))
 :pattern ( (let (($generated@@569 (type $generated@@568)))
($generated@@81 ($generated@@439 $generated@@569) $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@69)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@64) (= (type $generated@@573) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@572 $generated@@573)) $generated@@62) (= ($generated@@570 ($generated@@135 $generated@@572 $generated@@573)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@136) (= ($generated@@546 ($generated@@265 $generated@@574)) ($generated@@547 $generated@@574)))
 :pattern ( ($generated@@546 ($generated@@265 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@145) ($generated@@219 $generated@@575 ($generated@@75 0))) (and (= ($generated@@265 ($generated@@368 $generated@@2 $generated@@575)) $generated@@575) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@575) ($generated@@75 0))))
 :pattern ( ($generated@@219 $generated@@575 ($generated@@75 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@64)) ($generated@@219 $generated@@576 ($generated@@228 $generated@@577))) (and (= ($generated@@265 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@576)) $generated@@576) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@576) ($generated@@228 $generated@@577))))
 :pattern ( ($generated@@219 $generated@@576 ($generated@@228 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@145) (= (type $generated@@579) $generated@@64)) ($generated@@219 $generated@@578 ($generated@@233 $generated@@579))) (and (= ($generated@@265 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@578)) $generated@@578) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@578) ($generated@@233 $generated@@579))))
 :pattern ( ($generated@@219 $generated@@578 ($generated@@233 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@145) (= (type $generated@@581) $generated@@64)) ($generated@@219 $generated@@580 ($generated@@150 $generated@@581))) (and (= ($generated@@265 ($generated@@368 ($generated@@76 $generated@@145 $generated@@2) $generated@@580)) $generated@@580) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@2) $generated@@580) ($generated@@150 $generated@@581))))
 :pattern ( ($generated@@219 $generated@@580 ($generated@@150 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@145) (= (type $generated@@583) $generated@@64)) ($generated@@219 $generated@@582 ($generated@@505 $generated@@583))) (and (= ($generated@@265 ($generated@@368 ($generated@@259 $generated@@145) $generated@@582)) $generated@@582) ($generated@@132 ($generated@@368 ($generated@@259 $generated@@145) $generated@@582) ($generated@@505 $generated@@583))))
 :pattern ( ($generated@@219 $generated@@582 ($generated@@505 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@79 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@76 $generated@@587 $generated@@4)) (= (type $generated@@586) ($generated@@76 $generated@@587 $generated@@4))) (= ($generated@@584 $generated@@585 $generated@@586) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@587) ($generated@@0 ($generated@@81 $generated@@585 $generated@@588))) ($generated@@0 ($generated@@81 $generated@@586 $generated@@588)))
 :pattern ( ($generated@@81 $generated@@585 $generated@@588))
 :pattern ( ($generated@@81 $generated@@586 $generated@@588))
)))))
 :pattern ( ($generated@@584 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@590) $generated@@64)) (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@589 ($generated@@150 $generated@@590) $generated@@591) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@589 $generated@@592)))) ($generated@@245 $generated@@592 $generated@@590 $generated@@591))
 :pattern ( ($generated@@81 $generated@@589 $generated@@592))
))))
 :pattern ( ($generated@@74 $generated@@589 ($generated@@150 $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@79 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@76 $generated@@595 $generated@@4)) (= (type $generated@@594) ($generated@@76 $generated@@595 $generated@@4))) (= ($generated@@345 $generated@@593 $generated@@594) (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@595) (or (not ($generated@@0 ($generated@@81 $generated@@593 $generated@@596))) (not ($generated@@0 ($generated@@81 $generated@@594 $generated@@596)))))
 :pattern ( ($generated@@81 $generated@@593 $generated@@596))
 :pattern ( ($generated@@81 $generated@@594 $generated@@596))
)))))
 :pattern ( ($generated@@345 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@136) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@599) (and ($generated@@134 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@64) ($generated@@74 $generated@@597 ($generated@@135 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@74 $generated@@597 ($generated@@135 $generated@@598 $generated@@600) $generated@@599))
))))) ($generated@@245 ($generated@@143 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@245 ($generated@@143 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@136) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@603) (and ($generated@@134 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@64) ($generated@@74 $generated@@601 ($generated@@135 $generated@@604 $generated@@602) $generated@@603))
 :pattern ( ($generated@@74 $generated@@601 ($generated@@135 $generated@@604 $generated@@602) $generated@@603))
))))) ($generated@@245 ($generated@@144 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@245 ($generated@@144 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@145) (= (type $generated@@606) $generated@@145)) (= ($generated@@218 ($generated@@240 $generated@@605) ($generated@@240 $generated@@606)) ($generated@@240 ($generated@@218 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@218 ($generated@@240 $generated@@605) ($generated@@240 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@265 ($generated@@8 ($generated@@238 $generated@@607))) ($generated@@240 ($generated@@265 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@265 ($generated@@8 ($generated@@238 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@265 ($generated@@240 $generated@@608)) ($generated@@240 ($generated@@265 $generated@@608)))
 :pattern ( ($generated@@265 ($generated@@240 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@260 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@259 $generated@@610)) (= ($generated@@258 $generated@@609) 0)) (= $generated@@609 ($generated@@257 $generated@@610))))
 :pattern ( ($generated@@258 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@76 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@270 ($generated@@82 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@270 $generated@@611) ($generated ($generated@@81 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@270 ($generated@@82 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@617)))
 (=> (and (= (type $generated@@615) ($generated@@76 $generated@@618 $generated@@4)) (= (type $generated@@616) ($generated@@76 $generated@@618 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@211 $generated@@615 $generated@@616) $generated@@617))  (or ($generated@@0 ($generated@@81 $generated@@615 $generated@@617)) ($generated@@0 ($generated@@81 $generated@@616 $generated@@617))))))
 :pattern ( ($generated@@81 ($generated@@211 $generated@@615 $generated@@616) $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@620) $generated@@2)) ($generated@@74 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@74 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@622) $generated@@3)) ($generated@@74 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@74 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@624) $generated@@4)) ($generated@@74 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@74 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@626) $generated@@463)) ($generated@@74 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@74 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@628) $generated@@145)) ($generated@@74 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@74 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@259 $generated@@145)) (= (type $generated@@630) $generated@@64)) (= ($generated@@132 $generated@@629 ($generated@@505 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@258 $generated@@629))) ($generated@@219 ($generated@@506 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@506 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@132 $generated@@629 ($generated@@505 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@259 $generated@@145)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@258 $generated@@633))) (< ($generated@@547 ($generated@@368 $generated@@136 ($generated@@506 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@547 ($generated@@368 $generated@@136 ($generated@@506 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@278 $generated@@145 $generated@@145)) (= (type $generated@@636) $generated@@64)) (= (type $generated@@637) $generated@@64)) ($generated@@132 $generated@@635 ($generated@@396 $generated@@636 $generated@@637))) (and (and ($generated@@132 ($generated@@276 $generated@@635) ($generated@@228 $generated@@636)) ($generated@@132 ($generated@@324 $generated@@635) ($generated@@228 $generated@@637))) ($generated@@132 ($generated@@367 $generated@@635) ($generated@@228 ($generated@@135 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@132 $generated@@635 ($generated@@396 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@639) $generated@@64)) (= (type $generated@@640) $generated@@64)) ($generated@@132 $generated@@638 ($generated@@404 $generated@@639 $generated@@640))) (and (and ($generated@@132 ($generated@@294 $generated@@638) ($generated@@233 $generated@@639)) ($generated@@132 ($generated@@335 $generated@@638) ($generated@@233 $generated@@640))) ($generated@@132 ($generated@@378 $generated@@638) ($generated@@233 ($generated@@135 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@132 $generated@@638 ($generated@@404 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@132 $generated@@641 $generated@@46))
 :pattern ( ($generated@@132 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@132 $generated@@642 $generated@@47))
 :pattern ( ($generated@@132 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@132 $generated@@643 $generated@@44))
 :pattern ( ($generated@@132 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@463) ($generated@@132 $generated@@644 $generated@@45))
 :pattern ( ($generated@@132 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@145) ($generated@@132 $generated@@645 $generated@@48))
 :pattern ( ($generated@@132 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@646) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@650) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@651) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@656) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@657) $generated@@77)) (= (type $generated@@658) ($generated@@76 $generated@@145 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@660  (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 $generated@@647))))) (=> ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 $generated@@647)))) (=> (= (ControlFlow 0 4) (- 0 3)) (forall (($generated@@661 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 $generated@@661)))) (<= $generated@@647 $generated@@661)))
 :pattern ( ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 $generated@@661))))
)))))))
(let (($generated@@662  (=> (not (exists (($generated@@663 T@U) ) (!  (and (= (type $generated@@663) $generated@@2) (and ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 $generated@@663))) (< ($generated $generated@@663) $generated@@648)))
 :no-pattern (type $generated@@663)
 :no-pattern ($generated $generated@@663)
 :no-pattern ($generated@@0 $generated@@663)
))) (=> (and (= $generated@@647 $generated@@648) (= (ControlFlow 0 11) 4)) $generated@@660))))
(let (($generated@@664  (=> (and (and ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 $generated@@649)))) (< $generated@@649 $generated@@648)) (= $generated@@650 ($generated@@346 $generated@@646 ($generated@@415 ($generated@@564 $generated@@145) ($generated@@265 ($generated@@8 $generated@@648)))))) (and (=> (= (ControlFlow 0 6) (- 0 10)) ($generated@@312 $generated@@646 ($generated@@211 $generated@@650 ($generated@@415 ($generated@@564 $generated@@145) ($generated@@265 ($generated@@8 $generated@@648)))))) (=> ($generated@@312 $generated@@646 ($generated@@211 $generated@@650 ($generated@@415 ($generated@@564 $generated@@145) ($generated@@265 ($generated@@8 $generated@@648))))) (and (=> (= (ControlFlow 0 6) (- 0 9)) ($generated@@0 ($generated@@81 $generated@@650 ($generated@@265 ($generated@@8 $generated@@649))))) (=> ($generated@@0 ($generated@@81 $generated@@650 ($generated@@265 ($generated@@8 $generated@@649)))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and ($generated@@584 $generated@@650 $generated@@646) (not ($generated@@584 $generated@@646 $generated@@650)))) (=> (and ($generated@@584 $generated@@650 $generated@@646) (not ($generated@@584 $generated@@646 $generated@@650))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not ($generated@@312 $generated@@650 ($generated@@564 $generated@@145)))) (=> (not ($generated@@312 $generated@@650 ($generated@@564 $generated@@145))) (=> (and (and (and ($generated@@244 $generated@@651) ($generated@@652 $generated@@651)) ($generated@@0 ($generated@@81 $generated@@650 ($generated@@265 ($generated@@8 $generated@@653))))) (and (and (forall (($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@665) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@650 ($generated@@265 $generated@@665)))) (<= $generated@@653 ($generated $generated@@665)))
 :pattern ( ($generated@@81 $generated@@650 ($generated@@265 $generated@@665)))
)) (= $generated@@654 $generated@@651)) (and (= $generated@@647 $generated@@653) (= (ControlFlow 0 6) 4)))) $generated@@660))))))))))))
(let (($generated@@666  (and (=> (= (ControlFlow 0 12) 6) $generated@@664) (=> (= (ControlFlow 0 12) 11) $generated@@662))))
(let (($generated@@667  (=> (and (not ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 $generated@@655))))) (= (ControlFlow 0 14) 12)) $generated@@666)))
(let (($generated@@668  (=> (and ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 $generated@@655)))) (= (ControlFlow 0 13) 12)) $generated@@666)))
(let (($generated@@669  (and (=> (= (ControlFlow 0 15) 13) $generated@@668) (=> (= (ControlFlow 0 15) 14) $generated@@667))))
(let (($generated@@670 true))
(let (($generated@@671  (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (and ($generated@@132 ($generated@@8 ($generated@@238 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 ($generated@@238 0)))))) (exists (($generated@@672 T@U) ) (!  (and (= (type $generated@@672) $generated@@2) ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 $generated@@672))))
 :no-pattern (type $generated@@672)
 :no-pattern ($generated $generated@@672)
 :no-pattern ($generated@@0 $generated@@672)
)))) (=> (or (and ($generated@@132 ($generated@@8 ($generated@@238 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 ($generated@@238 0)))))) (exists (($generated@@673 Int) ) ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 $generated@@673)))))) (=> ($generated@@0 ($generated@@81 $generated@@646 ($generated@@265 ($generated@@8 $generated@@648)))) (and (=> (= (ControlFlow 0 16) 15) $generated@@669) (=> (= (ControlFlow 0 16) 2) $generated@@670)))))))
(let (($generated@@674 true))
(let (($generated@@675  (=> (= $generated@@656 ($generated@@156 $generated@@657 $generated@@654 $generated@@60 false)) (and (=> (= (ControlFlow 0 18) 16) $generated@@671) (=> (= (ControlFlow 0 18) 1) $generated@@674)))))
(let (($generated@@676  (=> (and (and ($generated@@244 $generated@@654) ($generated@@652 $generated@@654)) (and ($generated@@132 $generated@@646 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@646 ($generated@@228 $generated@@46) $generated@@654))) (=> (and (and (and (and ($generated@@132 $generated@@658 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@658 ($generated@@228 $generated@@46) $generated@@654)) true) (= 0 $generated@@659)) (and (not ($generated@@312 $generated@@646 ($generated@@564 $generated@@145))) (= (ControlFlow 0 19) 18))) $generated@@675))))
$generated@@676)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
