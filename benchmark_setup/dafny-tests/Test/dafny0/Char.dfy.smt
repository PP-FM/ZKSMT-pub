(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U) Bool)
(declare-fun $generated@@197 (T@T T@U T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@218 (Int) T@U)
(declare-fun $generated@@219 (T@U) Int)
(declare-fun $generated@@222 (T@U T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@234 (T@T) T@U)
(declare-fun $generated@@235 (T@U) Int)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@T T@T) T@U)
(declare-fun $generated@@268 (T@T T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@T T@T) T@U)
(declare-fun $generated@@286 (T@T T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@302 (T@U T@U) Bool)
(declare-fun $generated@@311 (T@T T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@T) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@U Int) T@U)
(declare-fun $generated@@477 (T@U) Int)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@522 (T@U T@U T@U) T@U)
(declare-fun $generated@@523 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@524 (T@T T@T) T@T)
(declare-fun $generated@@525 (T@T) T@T)
(declare-fun $generated@@526 (T@T) T@T)
(declare-fun $generated@@527 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@146) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (and (= (type $generated@@148) $generated@@71) (= (type $generated@@149) $generated@@89)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@89) (= (type $generated@@151) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@150 $generated@@148 $generated@@151)  (or (= $generated@@150 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@150 $generated@@148 $generated@@151))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 16) (= (type $generated@@152) ($generated@@73 $generated@@156))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@71)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@159) $generated@@89)) (and ($generated@@153 $generated@@158) (and (not (= $generated@@159 $generated@@149)) (= ($generated@@154 $generated@@159) $generated@@148)))) ($generated@@155 ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@152) $generated@@45))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@152))
)))
(assert (= (type $generated@@160) ($generated@@73 $generated@@156)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@162) $generated@@89)) (and ($generated@@153 $generated@@161) (and (not (= $generated@@162 $generated@@149)) (= ($generated@@154 $generated@@162) $generated@@148)))) ($generated@@155 ($generated@@95 ($generated@@93 $generated@@161 $generated@@162) $generated@@160) $generated@@45))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@161 $generated@@162) $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= (type $generated@@163) $generated@@2) ($generated@@155 $generated@@163 ($generated@@87 0)))
 :pattern ( ($generated@@155 $generated@@163 ($generated@@87 0)))
)))
(assert  (and (= ($generated@@1 $generated@@166) 17) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@167 $generated@@168)) $generated@@71)
 :pattern ( ($generated@@165 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@71) (= (type $generated@@170) $generated@@71)) (= (type $generated@@171) $generated@@166)) ($generated@@155 $generated@@171 ($generated@@165 $generated@@169 $generated@@170))) ($generated@@164 $generated@@171))
 :pattern ( ($generated@@164 $generated@@171) ($generated@@155 $generated@@171 ($generated@@165 $generated@@169 $generated@@170)))
)))
(assert  (and (and (= ($generated@@1 $generated@@175) 18) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@173 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@175)
 :pattern ( ($generated@@174 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@166) (= (type $generated@@179) $generated@@166)) true) (= ($generated@@172 $generated@@178 $generated@@179)  (and (= ($generated@@173 $generated@@178) ($generated@@173 $generated@@179)) (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)))))
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@71)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@88 $generated@@175 $generated@@2)) (= (type $generated@@184) $generated@@71)) ($generated@@155 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@155 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@89) (= ($generated@@155 $generated@@185 $generated@@148)  (or (= $generated@@185 $generated@@149) (= ($generated@@154 $generated@@185) $generated@@148))))
 :pattern ( ($generated@@155 $generated@@185 $generated@@148))
)))
(assert (= (type $generated@@186) $generated@@71))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (= (type $generated@@187) $generated@@89) (= (type $generated@@188) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@187 $generated@@186 $generated@@188) ($generated@@86 $generated@@187 $generated@@148 $generated@@188)))
 :pattern ( ($generated@@86 $generated@@187 $generated@@186 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= (type ($generated@@189 $generated@@191 $generated@@192)) $generated@@166)
 :pattern ( ($generated@@189 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (and (= (type $generated@@193) $generated@@71) (= (type $generated@@194) $generated@@71)) (= (type $generated@@195) $generated@@175)) (= (type $generated@@196) $generated@@175)) (= ($generated@@155 ($generated@@189 $generated@@195 $generated@@196) ($generated@@165 $generated@@193 $generated@@194))  (and ($generated@@190 $generated@@195 $generated@@193) ($generated@@190 $generated@@196 $generated@@194))))
 :pattern ( ($generated@@155 ($generated@@189 $generated@@195 $generated@@196) ($generated@@165 $generated@@193 $generated@@194)))
)))
(assert (= ($generated@@81 $generated@@152) 0))
(assert (forall (($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= (type ($generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@73 $generated@@198))
 :pattern ( ($generated@@197 $generated@@198 $generated@@199 $generated@@200))
)))
(assert (= ($generated@@197 $generated@@156 $generated@@64 $generated@@69) $generated@@152))
(assert  (not ($generated@@201 $generated@@152)))
(assert (= ($generated@@81 $generated@@160) 0))
(assert (= ($generated@@197 $generated@@156 $generated@@64 $generated@@70) $generated@@160))
(assert  (not ($generated@@201 $generated@@160)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@166) (= (type $generated@@203) $generated@@166)) (= ($generated@@172 $generated@@202 $generated@@203) (= $generated@@202 $generated@@203)))
 :pattern ( ($generated@@172 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@71)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@88 $generated@@175 $generated@@4)) (= (type $generated@@207) $generated@@71)) (= ($generated@@155 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@175) ($generated@@0 ($generated@@93 $generated@@206 $generated@@208))) ($generated@@190 $generated@@208 $generated@@207))
 :pattern ( ($generated@@93 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@155 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (= (type ($generated@@209 $generated@@210)) $generated@@71)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (= (type $generated@@211) ($generated@@88 $generated@@175 $generated@@4)) (= (type $generated@@212) $generated@@71)) (= ($generated@@155 $generated@@211 ($generated@@209 $generated@@212)) (forall (($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@175) ($generated@@0 ($generated@@93 $generated@@211 $generated@@213))) ($generated@@190 $generated@@213 $generated@@212))
 :pattern ( ($generated@@93 $generated@@211 $generated@@213))
))))
 :pattern ( ($generated@@155 $generated@@211 ($generated@@209 $generated@@212)))
)))
(assert (forall (($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(= (type ($generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@214 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (= ($generated@@214 $generated@@217) $generated@@217)
 :pattern ( ($generated@@214 $generated@@217))
)))
(assert (forall (($generated@@220 Int) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@156)
 :pattern ( ($generated@@218 $generated@@220))
)))
(assert (forall (($generated@@221 Int) ) (!  (=> (and (<= 0 $generated@@221) (< $generated@@221 65536)) (= ($generated@@219 ($generated@@218 $generated@@221)) $generated@@221))
 :pattern ( ($generated@@218 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@223) $generated@@71) (= (type $generated@@224) $generated@@71)) (= (type $generated@@225) $generated@@175)) (= (type $generated@@226) $generated@@175)) (= (type $generated@@227) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@153 $generated@@227)) (= ($generated@@86 ($generated@@189 $generated@@225 $generated@@226) ($generated@@165 $generated@@223 $generated@@224) $generated@@227)  (and ($generated@@222 $generated@@225 $generated@@223 $generated@@227) ($generated@@222 $generated@@226 $generated@@224 $generated@@227))))
 :pattern ( ($generated@@86 ($generated@@189 $generated@@225 $generated@@226) ($generated@@165 $generated@@223 $generated@@224) $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@76)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= (type $generated@@230) $generated@@166) (= ($generated@@164 $generated@@230) (= ($generated@@228 $generated@@230) $generated@@62)))
 :pattern ( ($generated@@164 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@166) ($generated@@164 $generated@@231)) (exists (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (and (and (= (type $generated@@232) $generated@@175) (= (type $generated@@233) $generated@@175)) (= $generated@@231 ($generated@@189 $generated@@232 $generated@@233)))
 :no-pattern (type $generated@@232)
 :no-pattern (type $generated@@233)
 :no-pattern ($generated $generated@@232)
 :no-pattern ($generated@@0 $generated@@232)
 :no-pattern ($generated $generated@@233)
 :no-pattern ($generated@@0 $generated@@233)
)))
 :pattern ( ($generated@@164 $generated@@231))
)))
(assert  (and (and (forall (($generated@@238 T@T) ) (= ($generated@@1 ($generated@@236 $generated@@238)) 19)) (forall (($generated@@239 T@T) ) (! (= ($generated@@237 ($generated@@236 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@236 $generated@@239))
))) (forall (($generated@@240 T@T) ) (! (= (type ($generated@@234 $generated@@240)) ($generated@@236 $generated@@240))
 :pattern ( ($generated@@234 $generated@@240))
))))
(assert (forall (($generated@@241 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@241)) 0)
 :pattern ( ($generated@@234 $generated@@241))
)))
(assert ($generated@@201 $generated@@60))
(assert (forall (($generated@@242 T@U) ) (!  (=> (= (type $generated@@242) $generated@@156) (and (and (= ($generated@@218 ($generated@@219 $generated@@242)) $generated@@242) (<= 0 ($generated@@219 $generated@@242))) (< ($generated@@219 $generated@@242) 65536)))
 :pattern ( ($generated@@219 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@175)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@71) (= (type $generated@@247) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@222 ($generated@@243 $generated@@245) $generated@@246 $generated@@247) ($generated@@86 $generated@@245 $generated@@246 $generated@@247)))
 :pattern ( ($generated@@222 ($generated@@243 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@249) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@250) $generated@@175)) (= (type $generated@@251) $generated@@71)) ($generated@@144 $generated@@248 $generated@@249)) ($generated@@222 $generated@@250 $generated@@251 $generated@@248)) ($generated@@222 $generated@@250 $generated@@251 $generated@@249))
 :pattern ( ($generated@@144 $generated@@248 $generated@@249) ($generated@@222 $generated@@250 $generated@@251 $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@252) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@253) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@255) $generated@@71)) ($generated@@144 $generated@@252 $generated@@253)) ($generated@@86 $generated@@254 $generated@@255 $generated@@252)) ($generated@@86 $generated@@254 $generated@@255 $generated@@253))
 :pattern ( ($generated@@144 $generated@@252 $generated@@253) ($generated@@86 $generated@@254 $generated@@255 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@257) $generated@@89)) (=> (and (and ($generated@@153 $generated@@256) (and (not (= $generated@@257 $generated@@149)) (= ($generated@@154 $generated@@257) $generated@@148))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@256 $generated@@257) $generated@@60))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@256 $generated@@257) $generated@@152) $generated@@45 $generated@@256)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@256 $generated@@257) $generated@@152))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@259) $generated@@89)) (=> (and (and ($generated@@153 $generated@@258) (and (not (= $generated@@259 $generated@@149)) (= ($generated@@154 $generated@@259) $generated@@148))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@258 $generated@@259) $generated@@60))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@258 $generated@@259) $generated@@160) $generated@@45 $generated@@258)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@258 $generated@@259) $generated@@160))
)))
(assert (forall (($generated@@262 T@T) ) (! (= (type ($generated@@261 $generated@@262)) ($generated@@88 $generated@@262 $generated@@2))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@91 (type $generated@@263))))
 (=> (= (type $generated@@263) ($generated@@88 $generated@@264 $generated@@2)) (and (= (= ($generated@@260 $generated@@263) 0) (= $generated@@263 ($generated@@261 $generated@@264))) (=> (not (= ($generated@@260 $generated@@263) 0)) (exists (($generated@@265 T@U) ) (!  (and (= (type $generated@@265) $generated@@264) (< 0 ($generated ($generated@@93 $generated@@263 $generated@@265))))
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
))))))
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert  (and (and (and (and (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@271 $generated@@272)) 20)) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@273 $generated@@274)) $generated@@273)
 :pattern ( ($generated@@268 $generated@@273 $generated@@274))
))) (forall (($generated@@275 T@T) ($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@268 $generated@@275 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@268 $generated@@275 $generated@@276))
))) (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@269 (type $generated@@277))))
(= (type ($generated@@266 $generated@@277)) ($generated@@88 $generated@@278 $generated@@4)))
 :pattern ( ($generated@@266 $generated@@277))
))) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= (type ($generated@@267 $generated@@279 $generated@@280)) ($generated@@268 $generated@@279 $generated@@280))
 :pattern ( ($generated@@267 $generated@@279 $generated@@280))
))))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@T) ) (! (let (($generated@@283 (type $generated@@281)))
 (not ($generated@@0 ($generated@@93 ($generated@@266 ($generated@@267 $generated@@283 $generated@@282)) $generated@@281))))
 :pattern ( (let (($generated@@283 (type $generated@@281)))
($generated@@93 ($generated@@266 ($generated@@267 $generated@@283 $generated@@282)) $generated@@281)))
)))
(assert  (and (and (and (and (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@289 $generated@@290)) 21)) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@286 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@286 $generated@@293 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@286 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@287 (type $generated@@295))))
(= (type ($generated@@284 $generated@@295)) ($generated@@88 $generated@@296 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@295))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= (type ($generated@@285 $generated@@297 $generated@@298)) ($generated@@286 $generated@@297 $generated@@298))
 :pattern ( ($generated@@285 $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@T) ) (! (let (($generated@@301 (type $generated@@299)))
 (not ($generated@@0 ($generated@@93 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299))))
 :pattern ( (let (($generated@@301 (type $generated@@299)))
($generated@@93 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (= (type $generated@@303) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@304) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@302 $generated@@303 $generated@@304)) (and ($generated@@144 $generated@@303 $generated@@304) (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@74 (type $generated@@306))))
 (=> (and (and (= (type $generated@@305) $generated@@89) (= (type $generated@@306) ($generated@@73 $generated@@307))) (not ($generated@@201 $generated@@306))) (= ($generated@@95 ($generated@@93 $generated@@303 $generated@@305) $generated@@306) ($generated@@95 ($generated@@93 $generated@@304 $generated@@305) $generated@@306))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@304 $generated@@305) $generated@@306))
))))
 :pattern ( ($generated@@302 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@91 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@88 $generated@@309 $generated@@2)) (= ($generated@@181 $generated@@308) (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@309) (and (<= 0 ($generated ($generated@@93 $generated@@308 $generated@@310))) (<= ($generated ($generated@@93 $generated@@308 $generated@@310)) ($generated@@260 $generated@@308))))
 :pattern ( ($generated@@93 $generated@@308 $generated@@310))
)))))
 :pattern ( ($generated@@181 $generated@@308))
)))
(assert (forall (($generated@@312 T@T) ($generated@@313 T@U) ) (! (= (type ($generated@@311 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@311 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@175) ($generated@@190 $generated@@314 $generated@@148)) (and (= ($generated@@243 ($generated@@311 $generated@@89 $generated@@314)) $generated@@314) ($generated@@155 ($generated@@311 $generated@@89 $generated@@314) $generated@@148)))
 :pattern ( ($generated@@190 $generated@@314 $generated@@148))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@175) ($generated@@190 $generated@@315 $generated@@186)) (and (= ($generated@@243 ($generated@@311 $generated@@89 $generated@@315)) $generated@@315) ($generated@@155 ($generated@@311 $generated@@89 $generated@@315) $generated@@186)))
 :pattern ( ($generated@@190 $generated@@315 $generated@@186))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@89) (= ($generated@@155 $generated@@316 $generated@@186)  (and ($generated@@155 $generated@@316 $generated@@148) (not (= $generated@@316 $generated@@149)))))
 :pattern ( ($generated@@155 $generated@@316 $generated@@186))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@270 (type $generated@@317))))
(let (($generated@@319 ($generated@@269 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@268 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@267 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@93 ($generated@@266 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@266 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@270 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@88 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@270 (type $generated@@324))))
(let (($generated@@326 ($generated@@269 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@268 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@267 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@93 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@288 (type $generated@@328))))
(let (($generated@@330 ($generated@@287 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@286 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@285 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@93 ($generated@@284 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@284 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@288 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@88 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@288 (type $generated@@335))))
(let (($generated@@337 ($generated@@287 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@286 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@285 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@93 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@88 $generated@@175 $generated@@2)) (= (type $generated@@340) $generated@@71)) (= ($generated@@155 $generated@@339 ($generated@@180 $generated@@340)) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@175) (< 0 ($generated ($generated@@93 $generated@@339 $generated@@341)))) ($generated@@190 $generated@@341 $generated@@340))
 :pattern ( ($generated@@93 $generated@@339 $generated@@341))
))))
 :pattern ( ($generated@@155 $generated@@339 ($generated@@180 $generated@@340)))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@88 $generated@@175 $generated@@4)) (= (type $generated@@343) $generated@@71)) (= (type $generated@@344) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@342 ($generated@@204 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@175) ($generated@@0 ($generated@@93 $generated@@342 $generated@@345))) ($generated@@222 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@93 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@86 $generated@@342 ($generated@@204 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) ($generated@@88 $generated@@175 $generated@@4)) (= (type $generated@@347) $generated@@71)) (= (type $generated@@348) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@346 ($generated@@209 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@175) ($generated@@0 ($generated@@93 $generated@@346 $generated@@349))) ($generated@@222 $generated@@349 $generated@@347 $generated@@348))
 :pattern ( ($generated@@93 $generated@@346 $generated@@349))
))))
 :pattern ( ($generated@@86 $generated@@346 ($generated@@209 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= ($generated ($generated@@93 ($generated@@261 $generated@@351) $generated@@350)) 0))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@93 ($generated@@261 $generated@@351) $generated@@350)))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@88 $generated@@175 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@270 (type $generated@@355))))
(let (($generated@@357 ($generated@@269 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@88 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@268 $generated@@175 $generated@@175)) (= (type $generated@@359) $generated@@175)) (= ($generated@@0 ($generated@@93 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@93 ($generated@@266 $generated@@358) ($generated@@173 ($generated@@311 $generated@@166 $generated@@359)))) (= ($generated@@93 ($generated@@353 $generated@@358) ($generated@@173 ($generated@@311 $generated@@166 $generated@@359))) ($generated@@174 ($generated@@311 $generated@@166 $generated@@359))))))
 :pattern ( ($generated@@93 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert  (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@362)) ($generated@@88 $generated@@175 $generated@@4))
 :pattern ( ($generated@@360 $generated@@362))
)) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@288 (type $generated@@363))))
(let (($generated@@365 ($generated@@287 (type $generated@@363))))
(= (type ($generated@@361 $generated@@363)) ($generated@@88 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@361 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@286 $generated@@175 $generated@@175)) (= (type $generated@@367) $generated@@175)) (= ($generated@@0 ($generated@@93 ($generated@@360 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@93 ($generated@@284 $generated@@366) ($generated@@173 ($generated@@311 $generated@@166 $generated@@367)))) (= ($generated@@93 ($generated@@361 $generated@@366) ($generated@@173 ($generated@@311 $generated@@166 $generated@@367))) ($generated@@174 ($generated@@311 $generated@@166 $generated@@367))))))
 :pattern ( ($generated@@93 ($generated@@360 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@269 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@268 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@93 ($generated@@321 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@93 ($generated@@266 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@93 ($generated@@353 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@93 ($generated@@266 $generated@@368) $generated@@372))
 :pattern ( ($generated@@93 ($generated@@353 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@93 ($generated@@321 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@287 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@286 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@93 ($generated@@332 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@93 ($generated@@284 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@93 ($generated@@361 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@93 ($generated@@284 $generated@@373) $generated@@377))
 :pattern ( ($generated@@93 ($generated@@361 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@93 ($generated@@332 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@71)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@268 $generated@@175 $generated@@175)) (= (type $generated@@382) $generated@@71)) (= (type $generated@@383) $generated@@71)) (= (type $generated@@384) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@175) ($generated@@0 ($generated@@93 ($generated@@266 $generated@@381) $generated@@385))) (and ($generated@@222 ($generated@@93 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@222 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@93 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@93 ($generated@@266 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@86 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@71)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@286 $generated@@175 $generated@@175)) (= (type $generated@@390) $generated@@71)) (= (type $generated@@391) $generated@@71)) (= (type $generated@@392) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@175) ($generated@@0 ($generated@@93 ($generated@@284 $generated@@389) $generated@@393))) (and ($generated@@222 ($generated@@93 ($generated@@361 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@222 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@93 ($generated@@361 $generated@@389) $generated@@393))
 :pattern ( ($generated@@93 ($generated@@284 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@86 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@394) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@395) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@396) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@394 $generated@@396))) (and ($generated@@144 $generated@@394 $generated@@395) ($generated@@144 $generated@@395 $generated@@396))) ($generated@@144 $generated@@394 $generated@@396))
 :pattern ( ($generated@@144 $generated@@394 $generated@@395) ($generated@@144 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@T) ) (! (= (type ($generated@@397 $generated@@398)) ($generated@@88 $generated@@398 $generated@@4))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@288 (type $generated@@399))))
(let (($generated@@401 ($generated@@287 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@286 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@285 $generated@@401 $generated@@400)) (= ($generated@@284 $generated@@399) ($generated@@397 $generated@@401))))))
 :pattern ( ($generated@@284 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@288 (type $generated@@402))))
(let (($generated@@404 ($generated@@287 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@286 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@285 $generated@@404 $generated@@403)) (= ($generated@@332 $generated@@402) ($generated@@397 $generated@@403))))))
 :pattern ( ($generated@@332 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@288 (type $generated@@405))))
(let (($generated@@407 ($generated@@287 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@286 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@285 $generated@@407 $generated@@406)) (= ($generated@@360 $generated@@405) ($generated@@397 $generated@@175))))))
 :pattern ( ($generated@@360 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@270 (type $generated@@408))))
(let (($generated@@410 ($generated@@269 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@268 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@267 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@175) (= (type $generated@@412) $generated@@175)) ($generated@@0 ($generated@@93 ($generated@@352 $generated@@408) ($generated@@243 ($generated@@189 $generated@@411 $generated@@412)))))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@352 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@288 (type $generated@@413))))
(let (($generated@@415 ($generated@@287 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@286 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@285 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (and (and (= (type $generated@@416) $generated@@175) (= (type $generated@@417) $generated@@175)) ($generated@@0 ($generated@@93 ($generated@@360 $generated@@413) ($generated@@243 ($generated@@189 $generated@@416 $generated@@417)))))
 :no-pattern (type $generated@@416)
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@360 $generated@@413))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@77)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@T) ) (!  (=> (and (= (type $generated@@420) $generated@@77) (= (type $generated@@421) $generated@@75)) (and (= ($generated@@418 ($generated@@197 $generated@@422 $generated@@420 $generated@@421)) $generated@@420) (= ($generated@@84 ($generated@@197 $generated@@422 $generated@@420 $generated@@421)) $generated@@421)))
 :pattern ( ($generated@@197 $generated@@422 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@175) ($generated@@190 $generated@@423 $generated@@46)) (and (= ($generated@@243 ($generated@@311 $generated@@2 $generated@@423)) $generated@@423) ($generated@@155 ($generated@@311 $generated@@2 $generated@@423) $generated@@46)))
 :pattern ( ($generated@@190 $generated@@423 $generated@@46))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@175) ($generated@@190 $generated@@424 $generated@@47)) (and (= ($generated@@243 ($generated@@311 $generated@@3 $generated@@424)) $generated@@424) ($generated@@155 ($generated@@311 $generated@@3 $generated@@424) $generated@@47)))
 :pattern ( ($generated@@190 $generated@@424 $generated@@47))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@175) ($generated@@190 $generated@@425 $generated@@44)) (and (= ($generated@@243 ($generated@@311 $generated@@4 $generated@@425)) $generated@@425) ($generated@@155 ($generated@@311 $generated@@4 $generated@@425) $generated@@44)))
 :pattern ( ($generated@@190 $generated@@425 $generated@@44))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@175) ($generated@@190 $generated@@426 $generated@@45)) (and (= ($generated@@243 ($generated@@311 $generated@@156 $generated@@426)) $generated@@426) ($generated@@155 ($generated@@311 $generated@@156 $generated@@426) $generated@@45)))
 :pattern ( ($generated@@190 $generated@@426 $generated@@45))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@71) (= ($generated@@190 ($generated@@243 $generated@@427) $generated@@428) ($generated@@155 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@190 ($generated@@243 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@91 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@88 $generated@@430 $generated@@2)) (<= 0 ($generated@@260 $generated@@429))))
 :pattern ( ($generated@@260 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@237 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@236 $generated@@432)) (<= 0 ($generated@@235 $generated@@431))))
 :pattern ( ($generated@@235 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@71)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@71) (= (type $generated@@436) $generated@@71)) (= ($generated@@433 ($generated@@378 $generated@@435 $generated@@436)) $generated@@435))
 :pattern ( ($generated@@378 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@71)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@71) (= (type $generated@@440) $generated@@71)) (= ($generated@@437 ($generated@@378 $generated@@439 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@378 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@71) (= (type $generated@@442) $generated@@71)) (= ($generated@@82 ($generated@@378 $generated@@441 $generated@@442)) $generated@@58))
 :pattern ( ($generated@@378 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@71)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@71) (= (type $generated@@446) $generated@@71)) (= ($generated@@443 ($generated@@386 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@386 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@71)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@71) (= (type $generated@@450) $generated@@71)) (= ($generated@@447 ($generated@@386 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@386 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@71) (= (type $generated@@452) $generated@@71)) (= ($generated@@82 ($generated@@386 $generated@@451 $generated@@452)) $generated@@59))
 :pattern ( ($generated@@386 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@175) (= (type $generated@@454) $generated@@175)) (= ($generated@@228 ($generated@@189 $generated@@453 $generated@@454)) $generated@@62))
 :pattern ( ($generated@@189 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@71)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@71) (= (type $generated@@458) $generated@@71)) (= ($generated@@455 ($generated@@165 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@165 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@71)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@71) (= (type $generated@@462) $generated@@71)) (= ($generated@@459 ($generated@@165 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@165 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@175) (= (type $generated@@464) $generated@@175)) (= ($generated@@173 ($generated@@189 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@189 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@175) (= (type $generated@@466) $generated@@175)) (= ($generated@@174 ($generated@@189 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@189 $generated@@465 $generated@@466))
)))
(assert  (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@469)) $generated@@71)
 :pattern ( ($generated@@467 $generated@@469))
)) (forall (($generated@@470 T@U) ($generated@@471 Int) ) (! (let (($generated@@472 ($generated@@237 (type $generated@@470))))
(= (type ($generated@@468 $generated@@470 $generated@@471)) $generated@@472))
 :pattern ( ($generated@@468 $generated@@470 $generated@@471))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@236 $generated@@175)) (= (type $generated@@474) $generated@@71)) (= (type $generated@@475) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@473 ($generated@@467 $generated@@474) $generated@@475) (forall (($generated@@476 Int) ) (!  (=> (and (<= 0 $generated@@476) (< $generated@@476 ($generated@@235 $generated@@473))) ($generated@@222 ($generated@@468 $generated@@473 $generated@@476) $generated@@474 $generated@@475))
 :pattern ( ($generated@@468 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@86 $generated@@473 ($generated@@467 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 Int) ) (! (= ($generated@@477 ($generated@@87 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@87 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@71)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@71) (= ($generated@@479 ($generated@@204 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@204 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@71) (= ($generated@@82 ($generated@@204 $generated@@482)) $generated@@54))
 :pattern ( ($generated@@204 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@71)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@71) (= ($generated@@483 ($generated@@209 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@209 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@71) (= ($generated@@82 ($generated@@209 $generated@@486)) $generated@@55))
 :pattern ( ($generated@@209 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@71)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@71) (= ($generated@@487 ($generated@@180 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@180 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@71) (= ($generated@@82 ($generated@@180 $generated@@490)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@71)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@71) (= ($generated@@491 ($generated@@467 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@467 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@71) (= ($generated@@82 ($generated@@467 $generated@@494)) $generated@@57))
 :pattern ( ($generated@@467 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(= ($generated@@311 $generated@@496 ($generated@@243 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@243 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@268 $generated@@175 $generated@@175)) (= (type $generated@@498) $generated@@71)) (= (type $generated@@499) $generated@@71)) (= ($generated@@155 $generated@@497 ($generated@@378 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@175) ($generated@@0 ($generated@@93 ($generated@@266 $generated@@497) $generated@@500))) (and ($generated@@190 ($generated@@93 ($generated@@353 $generated@@497) $generated@@500) $generated@@499) ($generated@@190 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@93 ($generated@@353 $generated@@497) $generated@@500))
 :pattern ( ($generated@@93 ($generated@@266 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@155 $generated@@497 ($generated@@378 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@286 $generated@@175 $generated@@175)) (= (type $generated@@502) $generated@@71)) (= (type $generated@@503) $generated@@71)) (= ($generated@@155 $generated@@501 ($generated@@386 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@175) ($generated@@0 ($generated@@93 ($generated@@284 $generated@@501) $generated@@504))) (and ($generated@@190 ($generated@@93 ($generated@@361 $generated@@501) $generated@@504) $generated@@503) ($generated@@190 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@93 ($generated@@361 $generated@@501) $generated@@504))
 :pattern ( ($generated@@93 ($generated@@284 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@155 $generated@@501 ($generated@@386 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@175) (= (type $generated@@508) $generated@@175)) (< ($generated@@505 $generated@@507) ($generated@@506 ($generated@@189 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@189 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@175) (= (type $generated@@510) $generated@@175)) (< ($generated@@505 $generated@@510) ($generated@@506 ($generated@@189 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@189 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@175) (= (type $generated@@512) $generated@@71)) (= (type $generated@@513) $generated@@71)) ($generated@@190 $generated@@511 ($generated@@378 $generated@@512 $generated@@513))) (and (= ($generated@@243 ($generated@@311 ($generated@@268 $generated@@175 $generated@@175) $generated@@511)) $generated@@511) ($generated@@155 ($generated@@311 ($generated@@268 $generated@@175 $generated@@175) $generated@@511) ($generated@@378 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@190 $generated@@511 ($generated@@378 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@175) (= (type $generated@@515) $generated@@71)) (= (type $generated@@516) $generated@@71)) ($generated@@190 $generated@@514 ($generated@@386 $generated@@515 $generated@@516))) (and (= ($generated@@243 ($generated@@311 ($generated@@286 $generated@@175 $generated@@175) $generated@@514)) $generated@@514) ($generated@@155 ($generated@@311 ($generated@@286 $generated@@175 $generated@@175) $generated@@514) ($generated@@386 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@190 $generated@@514 ($generated@@386 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@71) (= (type $generated@@518) $generated@@71)) (= (type $generated@@519) $generated@@175)) ($generated@@190 $generated@@519 ($generated@@165 $generated@@517 $generated@@518))) (and (= ($generated@@243 ($generated@@311 $generated@@166 $generated@@519)) $generated@@519) ($generated@@155 ($generated@@311 $generated@@166 $generated@@519) ($generated@@165 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@190 $generated@@519 ($generated@@165 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
 (not ($generated@@0 ($generated@@93 ($generated@@397 $generated@@521) $generated@@520))))
 :pattern ( (let (($generated@@521 (type $generated@@520)))
($generated@@93 ($generated@@397 $generated@@521) $generated@@520)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@528 T@T) ($generated@@529 T@T) ) (= ($generated@@1 ($generated@@524 $generated@@528 $generated@@529)) 22)) (forall (($generated@@530 T@T) ($generated@@531 T@T) ) (! (= ($generated@@525 ($generated@@524 $generated@@530 $generated@@531)) $generated@@530)
 :pattern ( ($generated@@524 $generated@@530 $generated@@531))
))) (forall (($generated@@532 T@T) ($generated@@533 T@T) ) (! (= ($generated@@526 ($generated@@524 $generated@@532 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@524 $generated@@532 $generated@@533))
))) (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@526 (type $generated@@534))))
(= (type ($generated@@522 $generated@@534 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@522 $generated@@534 $generated@@535 $generated@@536))
))) (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
(let (($generated@@543 (type $generated@@539)))
(= (type ($generated@@527 $generated@@538 $generated@@539 $generated@@540 $generated@@541)) ($generated@@524 $generated@@543 $generated@@542))))
 :pattern ( ($generated@@527 $generated@@538 $generated@@539 $generated@@540 $generated@@541))
))) (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@526 (type $generated@@544))))
 (=> (= (type $generated@@547) $generated@@548) (= ($generated@@522 ($generated@@527 $generated@@544 $generated@@545 $generated@@546 $generated@@547) $generated@@545 $generated@@546) $generated@@547)))
 :weight 0
))) (and (and (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (or (= $generated@@551 $generated@@553) (= ($generated@@522 ($generated@@527 $generated@@550 $generated@@551 $generated@@552 $generated@@549) $generated@@553 $generated@@554) ($generated@@522 $generated@@550 $generated@@553 $generated@@554)))
 :weight 0
)) (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (or (= $generated@@558 $generated@@560) (= ($generated@@522 ($generated@@527 $generated@@556 $generated@@557 $generated@@558 $generated@@555) $generated@@559 $generated@@560) ($generated@@522 $generated@@556 $generated@@559 $generated@@560)))
 :weight 0
))) (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (or true (= ($generated@@522 ($generated@@527 $generated@@562 $generated@@563 $generated@@564 $generated@@561) $generated@@565 $generated@@566) ($generated@@522 $generated@@562 $generated@@565 $generated@@566)))
 :weight 0
)))) (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (! (= (type ($generated@@523 $generated@@567 $generated@@568 $generated@@569 $generated@@570)) ($generated@@524 $generated@@89 $generated@@4))
 :pattern ( ($generated@@523 $generated@@567 $generated@@568 $generated@@569 $generated@@570))
))))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@74 (type $generated@@576))))
 (=> (and (and (and (and (and (= (type $generated@@571) $generated@@89) (= (type $generated@@572) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@573) ($generated@@73 $generated@@4))) (= (type $generated@@574) $generated@@89)) (= (type $generated@@575) $generated@@89)) (= (type $generated@@576) ($generated@@73 $generated@@577))) (= ($generated@@0 ($generated@@522 ($generated@@523 $generated@@571 $generated@@572 $generated@@573 $generated@@574) $generated@@575 $generated@@576))  (=> (and (not (= $generated@@575 $generated@@571)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@572 $generated@@575) $generated@@573))) (= $generated@@575 $generated@@574)))))
 :pattern ( ($generated@@522 ($generated@@523 $generated@@571 $generated@@572 $generated@@573 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@78)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@71) (= (type $generated@@581) $generated@@71)) (and (= ($generated@@82 ($generated@@165 $generated@@580 $generated@@581)) $generated@@63) (= ($generated@@578 ($generated@@165 $generated@@580 $generated@@581)) $generated@@67)))
 :pattern ( ($generated@@165 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@166) (= ($generated@@505 ($generated@@243 $generated@@582)) ($generated@@506 $generated@@582)))
 :pattern ( ($generated@@505 ($generated@@243 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@175) ($generated@@190 $generated@@583 ($generated@@87 0))) (and (= ($generated@@243 ($generated@@311 $generated@@2 $generated@@583)) $generated@@583) ($generated@@155 ($generated@@311 ($generated@@88 $generated@@175 $generated@@4) $generated@@583) ($generated@@87 0))))
 :pattern ( ($generated@@190 $generated@@583 ($generated@@87 0)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@175) (= (type $generated@@585) $generated@@71)) ($generated@@190 $generated@@584 ($generated@@204 $generated@@585))) (and (= ($generated@@243 ($generated@@311 ($generated@@88 $generated@@175 $generated@@4) $generated@@584)) $generated@@584) ($generated@@155 ($generated@@311 ($generated@@88 $generated@@175 $generated@@4) $generated@@584) ($generated@@204 $generated@@585))))
 :pattern ( ($generated@@190 $generated@@584 ($generated@@204 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@175) (= (type $generated@@587) $generated@@71)) ($generated@@190 $generated@@586 ($generated@@209 $generated@@587))) (and (= ($generated@@243 ($generated@@311 ($generated@@88 $generated@@175 $generated@@4) $generated@@586)) $generated@@586) ($generated@@155 ($generated@@311 ($generated@@88 $generated@@175 $generated@@4) $generated@@586) ($generated@@209 $generated@@587))))
 :pattern ( ($generated@@190 $generated@@586 ($generated@@209 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@175) (= (type $generated@@589) $generated@@71)) ($generated@@190 $generated@@588 ($generated@@180 $generated@@589))) (and (= ($generated@@243 ($generated@@311 ($generated@@88 $generated@@175 $generated@@2) $generated@@588)) $generated@@588) ($generated@@155 ($generated@@311 ($generated@@88 $generated@@175 $generated@@2) $generated@@588) ($generated@@180 $generated@@589))))
 :pattern ( ($generated@@190 $generated@@588 ($generated@@180 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@175) (= (type $generated@@591) $generated@@71)) ($generated@@190 $generated@@590 ($generated@@467 $generated@@591))) (and (= ($generated@@243 ($generated@@311 ($generated@@236 $generated@@175) $generated@@590)) $generated@@590) ($generated@@155 ($generated@@311 ($generated@@236 $generated@@175) $generated@@590) ($generated@@467 $generated@@591))))
 :pattern ( ($generated@@190 $generated@@590 ($generated@@467 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@595)))
 (=> (and (and (and (= (type $generated@@592) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@593) $generated@@89)) (= (type $generated@@594) ($generated@@73 $generated@@596))) ($generated@@153 ($generated@@94 $generated@@592 $generated@@593 ($generated@@96 ($generated@@93 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))) ($generated@@144 $generated@@592 ($generated@@94 $generated@@592 $generated@@593 ($generated@@96 ($generated@@93 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@94 $generated@@592 $generated@@593 ($generated@@96 ($generated@@93 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))
)))
(assert (= ($generated@@82 $generated@@148) $generated@@65))
(assert (= ($generated@@578 $generated@@148) $generated@@68))
(assert (= ($generated@@82 $generated@@186) $generated@@66))
(assert (= ($generated@@578 $generated@@186) $generated@@68))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@88 $generated@@175 $generated@@2)) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@597 ($generated@@180 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@175) (< 0 ($generated ($generated@@93 $generated@@597 $generated@@600)))) ($generated@@222 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@93 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@86 $generated@@597 ($generated@@180 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@166) (= (type $generated@@602) $generated@@71)) (= (type $generated@@603) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@153 $generated@@603) (and ($generated@@164 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@71) ($generated@@86 $generated@@601 ($generated@@165 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@86 $generated@@601 ($generated@@165 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@222 ($generated@@173 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@222 ($generated@@173 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@166) (= (type $generated@@606) $generated@@71)) (= (type $generated@@607) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@153 $generated@@607) (and ($generated@@164 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@71) ($generated@@86 $generated@@605 ($generated@@165 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@86 $generated@@605 ($generated@@165 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@222 ($generated@@174 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@222 ($generated@@174 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@175) (= (type $generated@@610) $generated@@175)) (= ($generated@@189 ($generated@@214 $generated@@609) ($generated@@214 $generated@@610)) ($generated@@214 ($generated@@189 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@189 ($generated@@214 $generated@@609) ($generated@@214 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@243 ($generated@@214 $generated@@611)) ($generated@@214 ($generated@@243 $generated@@611)))
 :pattern ( ($generated@@243 ($generated@@214 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@237 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@236 $generated@@613)) (= ($generated@@235 $generated@@612) 0)) (= $generated@@612 ($generated@@234 $generated@@613))))
 :pattern ( ($generated@@235 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@88 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@260 ($generated@@94 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@260 $generated@@614) ($generated ($generated@@93 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@260 ($generated@@94 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@619) $generated@@2)) ($generated@@86 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@86 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@621) $generated@@3)) ($generated@@86 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@86 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@623) $generated@@4)) ($generated@@86 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@86 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@625) $generated@@156)) ($generated@@86 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@86 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@627) $generated@@175)) ($generated@@86 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@86 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@236 $generated@@175)) (= (type $generated@@629) $generated@@71)) (= ($generated@@155 $generated@@628 ($generated@@467 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@235 $generated@@628))) ($generated@@190 ($generated@@468 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@468 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@155 $generated@@628 ($generated@@467 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@236 $generated@@175)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@235 $generated@@632))) (< ($generated@@506 ($generated@@311 $generated@@166 ($generated@@468 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@506 ($generated@@311 $generated@@166 ($generated@@468 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@268 $generated@@175 $generated@@175)) (= (type $generated@@635) $generated@@71)) (= (type $generated@@636) $generated@@71)) ($generated@@155 $generated@@634 ($generated@@378 $generated@@635 $generated@@636))) (and (and ($generated@@155 ($generated@@266 $generated@@634) ($generated@@204 $generated@@635)) ($generated@@155 ($generated@@321 $generated@@634) ($generated@@204 $generated@@636))) ($generated@@155 ($generated@@352 $generated@@634) ($generated@@204 ($generated@@165 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@155 $generated@@634 ($generated@@378 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@286 $generated@@175 $generated@@175)) (= (type $generated@@638) $generated@@71)) (= (type $generated@@639) $generated@@71)) ($generated@@155 $generated@@637 ($generated@@386 $generated@@638 $generated@@639))) (and (and ($generated@@155 ($generated@@284 $generated@@637) ($generated@@209 $generated@@638)) ($generated@@155 ($generated@@332 $generated@@637) ($generated@@209 $generated@@639))) ($generated@@155 ($generated@@360 $generated@@637) ($generated@@209 ($generated@@165 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@155 $generated@@637 ($generated@@386 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@155 $generated@@640 $generated@@46))
 :pattern ( ($generated@@155 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@155 $generated@@641 $generated@@47))
 :pattern ( ($generated@@155 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@155 $generated@@642 $generated@@44))
 :pattern ( ($generated@@155 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@156) ($generated@@155 $generated@@643 $generated@@45))
 :pattern ( ($generated@@155 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@175) ($generated@@155 $generated@@644 $generated@@48))
 :pattern ( ($generated@@155 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 (T@U) Bool)
(declare-fun $generated@@654 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@645) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@646) $generated@@89)) (= (type $generated@@647) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@648) ($generated@@524 $generated@@89 $generated@@4))) (= (type $generated@@649) $generated@@156)) (= (type $generated@@650) $generated@@156)) (= (type $generated@@651) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@655  (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@219 ($generated@@95 ($generated@@93 $generated@@645 $generated@@646) $generated@@152)) ($generated@@219 ($generated@@95 ($generated@@93 $generated@@645 $generated@@646) $generated@@160))))))
(let (($generated@@656  (=> (<= ($generated@@219 ($generated@@95 ($generated@@93 $generated@@647 $generated@@646) $generated@@152)) ($generated@@219 ($generated@@95 ($generated@@93 $generated@@647 $generated@@646) $generated@@160))) (=> (and (= $generated@@645 $generated@@647) (= (ControlFlow 0 6) 2)) $generated@@655))))
(let (($generated@@657  (=> (< ($generated@@219 ($generated@@95 ($generated@@93 $generated@@647 $generated@@646) $generated@@160)) ($generated@@219 ($generated@@95 ($generated@@93 $generated@@647 $generated@@646) $generated@@152))) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@0 ($generated@@522 $generated@@648 $generated@@646 $generated@@152))) (=> ($generated@@0 ($generated@@522 $generated@@648 $generated@@646 $generated@@152)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@0 ($generated@@522 $generated@@648 $generated@@646 $generated@@160))) (=> ($generated@@0 ($generated@@522 $generated@@648 $generated@@646 $generated@@160)) (=> (and (and (and (= $generated@@649 ($generated@@95 ($generated@@93 $generated@@647 $generated@@646) $generated@@160)) (= $generated@@650 ($generated@@95 ($generated@@93 $generated@@647 $generated@@646) $generated@@152))) (and (= $generated@@651 ($generated@@94 $generated@@647 $generated@@646 ($generated@@96 ($generated@@93 $generated@@647 $generated@@646) $generated@@152 $generated@@649))) ($generated@@153 $generated@@651))) (and (and (= $generated@@652 ($generated@@94 $generated@@651 $generated@@646 ($generated@@96 ($generated@@93 $generated@@651 $generated@@646) $generated@@160 $generated@@650))) ($generated@@153 $generated@@652)) (and (= $generated@@645 $generated@@652) (= (ControlFlow 0 3) 2)))) $generated@@655))))))))
(let (($generated@@658  (=> (= $generated@@648 ($generated@@523 $generated@@149 $generated@@647 $generated@@60 $generated@@646)) (and (=> (= (ControlFlow 0 7) 3) $generated@@657) (=> (= (ControlFlow 0 7) 6) $generated@@656)))))
(let (($generated@@659  (=> (and ($generated@@153 $generated@@647) ($generated@@653 $generated@@647)) (=> (and (and (not (= $generated@@646 $generated@@149)) (and ($generated@@155 $generated@@646 $generated@@186) ($generated@@86 $generated@@646 $generated@@186 $generated@@647))) (and (= 0 $generated@@654) (= (ControlFlow 0 8) 7))) $generated@@658))))
$generated@@659))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@U T@U T@U) Bool)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U) Bool)
(declare-fun $generated@@209 (T@T T@U T@U) T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@230 (Int) T@U)
(declare-fun $generated@@231 (T@U) Int)
(declare-fun $generated@@234 (T@U T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@253 (T@T) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@261 () Int)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@326 (T@U T@U) Bool)
(declare-fun $generated@@332 (T@U T@U) Bool)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@522 (T@U Int) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@577 (T@T) T@U)
(declare-fun $generated@@583 (T@U T@U T@U) T@U)
(declare-fun $generated@@584 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@585 (T@T T@T) T@T)
(declare-fun $generated@@586 (T@T) T@T)
(declare-fun $generated@@587 (T@T) T@T)
(declare-fun $generated@@588 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@639 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@665 (T@U T@U) Bool)
(declare-fun $generated@@704 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@147) 16) (= ($generated@@1 $generated@@148) 17)) (= (type $generated@@150) $generated@@89)) (= (type $generated@@152) $generated@@71)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@154) $generated@@147) (= (type $generated@@155) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@156) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@157) $generated@@89)) (= (type $generated@@158) $generated@@148)) (and (and (and (and ($generated@@149 $generated@@155) ($generated@@149 $generated@@156)) (and (not (= $generated@@157 $generated@@150)) ($generated@@151 $generated@@157 $generated@@152))) (or ($generated@@153 $generated@@155 $generated@@157 $generated@@158) ($generated@@151 $generated@@158 $generated@@45))) (and ($generated@@144 $generated@@155) ($generated@@145 $generated@@155 $generated@@156)))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@74 (type $generated@@160))))
 (=> (and (and (= (type $generated@@159) $generated@@89) (= (type $generated@@160) ($generated@@73 $generated@@161))) (and (not (= $generated@@159 $generated@@150)) (= $generated@@159 $generated@@157))) (= ($generated@@95 ($generated@@93 $generated@@155 $generated@@159) $generated@@160) ($generated@@95 ($generated@@93 $generated@@156 $generated@@159) $generated@@160))))
 :no-pattern (type $generated@@159)
 :no-pattern (type $generated@@160)
 :no-pattern ($generated $generated@@159)
 :no-pattern ($generated@@0 $generated@@159)
 :no-pattern ($generated $generated@@160)
 :no-pattern ($generated@@0 $generated@@160)
))) (= ($generated@@146 $generated@@154 $generated@@155 $generated@@157 $generated@@158) ($generated@@146 $generated@@154 $generated@@156 $generated@@157 $generated@@158)))
 :pattern ( ($generated@@144 $generated@@155) ($generated@@145 $generated@@155 $generated@@156) ($generated@@146 $generated@@154 $generated@@156 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@163) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@145 $generated@@162 $generated@@163)) (forall (($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@162 $generated@@164) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@163 $generated@@164) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@163 $generated@@164) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@165) $generated@@71))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@89) (= (type $generated@@167) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@166 $generated@@165 $generated@@167)  (or (= $generated@@166 $generated@@150) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@167 $generated@@166) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@166 $generated@@165 $generated@@167))
)))
(assert  (and (= (type $generated@@168) ($generated@@73 $generated@@148)) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@172) $generated@@89)) (and ($generated@@149 $generated@@171) (and (not (= $generated@@172 $generated@@150)) (= ($generated@@169 $generated@@172) $generated@@165)))) ($generated@@151 ($generated@@95 ($generated@@93 $generated@@171 $generated@@172) $generated@@168) $generated@@45))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@171 $generated@@172) $generated@@168))
)))
(assert (= (type $generated@@173) ($generated@@73 $generated@@148)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@175) $generated@@89)) (and ($generated@@149 $generated@@174) (and (not (= $generated@@175 $generated@@150)) (= ($generated@@169 $generated@@175) $generated@@165)))) ($generated@@151 ($generated@@95 ($generated@@93 $generated@@174 $generated@@175) $generated@@173) $generated@@45))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@174 $generated@@175) $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@2) ($generated@@151 $generated@@176 ($generated@@87 0)))
 :pattern ( ($generated@@151 $generated@@176 ($generated@@87 0)))
)))
(assert  (and (= ($generated@@1 $generated@@179) 18) (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@180 $generated@@181)) $generated@@71)
 :pattern ( ($generated@@178 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (and (= (type $generated@@182) $generated@@71) (= (type $generated@@183) $generated@@71)) (= (type $generated@@184) $generated@@179)) ($generated@@151 $generated@@184 ($generated@@178 $generated@@182 $generated@@183))) ($generated@@177 $generated@@184))
 :pattern ( ($generated@@177 $generated@@184) ($generated@@151 $generated@@184 ($generated@@178 $generated@@182 $generated@@183)))
)))
(assert  (and (and (= ($generated@@1 $generated@@188) 19) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@186 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@186 $generated@@189))
))) (forall (($generated@@190 T@U) ) (! (= (type ($generated@@187 $generated@@190)) $generated@@188)
 :pattern ( ($generated@@187 $generated@@190))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) $generated@@179) (= (type $generated@@192) $generated@@179)) true) (= ($generated@@185 $generated@@191 $generated@@192)  (and (= ($generated@@186 $generated@@191) ($generated@@186 $generated@@192)) (= ($generated@@187 $generated@@191) ($generated@@187 $generated@@192)))))
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@71)
 :pattern ( ($generated@@193 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) ($generated@@88 $generated@@188 $generated@@2)) (= (type $generated@@197) $generated@@71)) ($generated@@151 $generated@@196 ($generated@@193 $generated@@197))) ($generated@@194 $generated@@196))
 :pattern ( ($generated@@151 $generated@@196 ($generated@@193 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> (= (type $generated@@198) $generated@@89) (= ($generated@@151 $generated@@198 $generated@@165)  (or (= $generated@@198 $generated@@150) (= ($generated@@169 $generated@@198) $generated@@165))))
 :pattern ( ($generated@@151 $generated@@198 $generated@@165))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) $generated@@89) (= (type $generated@@200) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@199 $generated@@152 $generated@@200) ($generated@@86 $generated@@199 $generated@@165 $generated@@200)))
 :pattern ( ($generated@@86 $generated@@199 $generated@@152 $generated@@200))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (= (type ($generated@@201 $generated@@203 $generated@@204)) $generated@@179)
 :pattern ( ($generated@@201 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (and (= (type $generated@@205) $generated@@71) (= (type $generated@@206) $generated@@71)) (= (type $generated@@207) $generated@@188)) (= (type $generated@@208) $generated@@188)) (= ($generated@@151 ($generated@@201 $generated@@207 $generated@@208) ($generated@@178 $generated@@205 $generated@@206))  (and ($generated@@202 $generated@@207 $generated@@205) ($generated@@202 $generated@@208 $generated@@206))))
 :pattern ( ($generated@@151 ($generated@@201 $generated@@207 $generated@@208) ($generated@@178 $generated@@205 $generated@@206)))
)))
(assert (= ($generated@@81 $generated@@168) 0))
(assert (forall (($generated@@210 T@T) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (= (type ($generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@73 $generated@@210))
 :pattern ( ($generated@@209 $generated@@210 $generated@@211 $generated@@212))
)))
(assert (= ($generated@@209 $generated@@148 $generated@@64 $generated@@69) $generated@@168))
(assert  (not ($generated@@213 $generated@@168)))
(assert (= ($generated@@81 $generated@@173) 0))
(assert (= ($generated@@209 $generated@@148 $generated@@64 $generated@@70) $generated@@173))
(assert  (not ($generated@@213 $generated@@173)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@179) (= (type $generated@@215) $generated@@179)) (= ($generated@@185 $generated@@214 $generated@@215) (= $generated@@214 $generated@@215)))
 :pattern ( ($generated@@185 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (= (type ($generated@@216 $generated@@217)) $generated@@71)
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) ($generated@@88 $generated@@188 $generated@@4)) (= (type $generated@@219) $generated@@71)) (= ($generated@@151 $generated@@218 ($generated@@216 $generated@@219)) (forall (($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@220) $generated@@188) ($generated@@0 ($generated@@93 $generated@@218 $generated@@220))) ($generated@@202 $generated@@220 $generated@@219))
 :pattern ( ($generated@@93 $generated@@218 $generated@@220))
))))
 :pattern ( ($generated@@151 $generated@@218 ($generated@@216 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@71)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@88 $generated@@188 $generated@@4)) (= (type $generated@@224) $generated@@71)) (= ($generated@@151 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@188) ($generated@@0 ($generated@@93 $generated@@223 $generated@@225))) ($generated@@202 $generated@@225 $generated@@224))
 :pattern ( ($generated@@93 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@151 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (let (($generated@@228 (type $generated@@227)))
(= (type ($generated@@226 $generated@@227)) $generated@@228))
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@226 $generated@@229) $generated@@229)
 :pattern ( ($generated@@226 $generated@@229))
)))
(assert (forall (($generated@@232 Int) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@148)
 :pattern ( ($generated@@230 $generated@@232))
)))
(assert (forall (($generated@@233 Int) ) (!  (=> (and (<= 0 $generated@@233) (< $generated@@233 65536)) (= ($generated@@231 ($generated@@230 $generated@@233)) $generated@@233))
 :pattern ( ($generated@@230 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@235) $generated@@71) (= (type $generated@@236) $generated@@71)) (= (type $generated@@237) $generated@@188)) (= (type $generated@@238) $generated@@188)) (= (type $generated@@239) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@149 $generated@@239)) (= ($generated@@86 ($generated@@201 $generated@@237 $generated@@238) ($generated@@178 $generated@@235 $generated@@236) $generated@@239)  (and ($generated@@234 $generated@@237 $generated@@235 $generated@@239) ($generated@@234 $generated@@238 $generated@@236 $generated@@239))))
 :pattern ( ($generated@@86 ($generated@@201 $generated@@237 $generated@@238) ($generated@@178 $generated@@235 $generated@@236) $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@76)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (= (type $generated@@242) $generated@@179) (= ($generated@@177 $generated@@242) (= ($generated@@240 $generated@@242) $generated@@62)))
 :pattern ( ($generated@@177 $generated@@242))
)))
(assert  (and (forall (($generated@@245 T@U) ) (! (= (type ($generated@@243 $generated@@245)) $generated@@147)
 :pattern ( ($generated@@243 $generated@@245))
)) (= (type $generated@@244) $generated@@147)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@147) (= (type $generated@@247) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@248) $generated@@89)) (= (type $generated@@249) $generated@@148)) (= ($generated@@146 $generated@@246 $generated@@247 $generated@@248 $generated@@249) ($generated@@146 $generated@@244 $generated@@247 $generated@@248 $generated@@249)))
 :pattern ( ($generated@@146 ($generated@@243 $generated@@246) $generated@@247 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@179) ($generated@@177 $generated@@250)) (exists (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (and (and (= (type $generated@@251) $generated@@188) (= (type $generated@@252) $generated@@188)) (= $generated@@250 ($generated@@201 $generated@@251 $generated@@252)))
 :no-pattern (type $generated@@251)
 :no-pattern (type $generated@@252)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
)))
 :pattern ( ($generated@@177 $generated@@250))
)))
(assert  (and (and (forall (($generated@@257 T@T) ) (= ($generated@@1 ($generated@@255 $generated@@257)) 20)) (forall (($generated@@258 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@258)) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
))) (forall (($generated@@259 T@T) ) (! (= (type ($generated@@253 $generated@@259)) ($generated@@255 $generated@@259))
 :pattern ( ($generated@@253 $generated@@259))
))))
(assert (forall (($generated@@260 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@260)) 0)
 :pattern ( ($generated@@253 $generated@@260))
)))
(assert  (=> (<= 0 $generated@@261) (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@262) $generated@@147) (= (type $generated@@263) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@264) $generated@@89)) (= (type $generated@@265) $generated@@148)) (or ($generated@@153 $generated@@263 $generated@@264 $generated@@265) (and (not (= 0 $generated@@261)) (and (and ($generated@@149 $generated@@263) (and (not (= $generated@@264 $generated@@150)) (and ($generated@@151 $generated@@264 $generated@@152) ($generated@@86 $generated@@264 $generated@@152 $generated@@263)))) ($generated@@151 $generated@@265 $generated@@45))))) true)
 :pattern ( ($generated@@146 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
))))
(assert ($generated@@213 $generated@@60))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@148) (and (and (= ($generated@@230 ($generated@@231 $generated@@266)) $generated@@266) (<= 0 ($generated@@231 $generated@@266))) (< ($generated@@231 $generated@@266) 65536)))
 :pattern ( ($generated@@231 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@188)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@71) (= (type $generated@@271) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@234 ($generated@@267 $generated@@269) $generated@@270 $generated@@271) ($generated@@86 $generated@@269 $generated@@270 $generated@@271)))
 :pattern ( ($generated@@234 ($generated@@267 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@273) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@274) $generated@@188)) (= (type $generated@@275) $generated@@71)) ($generated@@145 $generated@@272 $generated@@273)) ($generated@@234 $generated@@274 $generated@@275 $generated@@272)) ($generated@@234 $generated@@274 $generated@@275 $generated@@273))
 :pattern ( ($generated@@145 $generated@@272 $generated@@273) ($generated@@234 $generated@@274 $generated@@275 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@276) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@277) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@279) $generated@@71)) ($generated@@145 $generated@@276 $generated@@277)) ($generated@@86 $generated@@278 $generated@@279 $generated@@276)) ($generated@@86 $generated@@278 $generated@@279 $generated@@277))
 :pattern ( ($generated@@145 $generated@@276 $generated@@277) ($generated@@86 $generated@@278 $generated@@279 $generated@@276))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@281) $generated@@89)) (=> (and (and ($generated@@149 $generated@@280) (and (not (= $generated@@281 $generated@@150)) (= ($generated@@169 $generated@@281) $generated@@165))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@280 $generated@@281) $generated@@60))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@280 $generated@@281) $generated@@168) $generated@@45 $generated@@280)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@280 $generated@@281) $generated@@168))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@283) $generated@@89)) (=> (and (and ($generated@@149 $generated@@282) (and (not (= $generated@@283 $generated@@150)) (= ($generated@@169 $generated@@283) $generated@@165))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@282 $generated@@283) $generated@@60))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@282 $generated@@283) $generated@@173) $generated@@45 $generated@@282)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@282 $generated@@283) $generated@@173))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@88 $generated@@286 $generated@@2))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@91 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@88 $generated@@288 $generated@@2)) (and (= (= ($generated@@284 $generated@@287) 0) (= $generated@@287 ($generated@@285 $generated@@288))) (=> (not (= ($generated@@284 $generated@@287) 0)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) $generated@@288) (< 0 ($generated ($generated@@93 $generated@@287 $generated@@289))))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 21)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@88 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@93 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@93 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 22)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@88 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@93 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@93 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@327) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@328) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@326 $generated@@327 $generated@@328)) (and ($generated@@145 $generated@@327 $generated@@328) (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@74 (type $generated@@330))))
 (=> (and (and (= (type $generated@@329) $generated@@89) (= (type $generated@@330) ($generated@@73 $generated@@331))) (not ($generated@@213 $generated@@330))) (= ($generated@@95 ($generated@@93 $generated@@327 $generated@@329) $generated@@330) ($generated@@95 ($generated@@93 $generated@@328 $generated@@329) $generated@@330))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@328 $generated@@329) $generated@@330))
))))
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@91 (type $generated@@333))))
 (=> (and (= (type $generated@@333) ($generated@@88 $generated@@335 $generated@@4)) (= (type $generated@@334) ($generated@@88 $generated@@335 $generated@@4))) (= ($generated@@332 $generated@@333 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (= ($generated@@0 ($generated@@93 $generated@@333 $generated@@336)) ($generated@@0 ($generated@@93 $generated@@334 $generated@@336))))
 :pattern ( ($generated@@93 $generated@@333 $generated@@336))
 :pattern ( ($generated@@93 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@91 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@88 $generated@@338 $generated@@2)) (= ($generated@@194 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@93 $generated@@337 $generated@@339))) (<= ($generated ($generated@@93 $generated@@337 $generated@@339)) ($generated@@284 $generated@@337))))
 :pattern ( ($generated@@93 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@194 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@188) ($generated@@202 $generated@@343 $generated@@165)) (and (= ($generated@@267 ($generated@@340 $generated@@89 $generated@@343)) $generated@@343) ($generated@@151 ($generated@@340 $generated@@89 $generated@@343) $generated@@165)))
 :pattern ( ($generated@@202 $generated@@343 $generated@@165))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@188) ($generated@@202 $generated@@344 $generated@@152)) (and (= ($generated@@267 ($generated@@340 $generated@@89 $generated@@344)) $generated@@344) ($generated@@151 ($generated@@340 $generated@@89 $generated@@344) $generated@@152)))
 :pattern ( ($generated@@202 $generated@@344 $generated@@152))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@89) (= ($generated@@151 $generated@@345 $generated@@152)  (and ($generated@@151 $generated@@345 $generated@@165) (not (= $generated@@345 $generated@@150)))))
 :pattern ( ($generated@@151 $generated@@345 $generated@@152))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@294 (type $generated@@346))))
(let (($generated@@348 ($generated@@293 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@292 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@291 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@93 ($generated@@290 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@290 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@294 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@88 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@294 (type $generated@@353))))
(let (($generated@@355 ($generated@@293 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@292 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@291 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@93 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@312 (type $generated@@357))))
(let (($generated@@359 ($generated@@311 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@310 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@309 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@93 ($generated@@308 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@308 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@312 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@88 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@312 (type $generated@@364))))
(let (($generated@@366 ($generated@@311 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@310 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@309 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@93 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@88 $generated@@188 $generated@@2)) (= (type $generated@@369) $generated@@71)) (= ($generated@@151 $generated@@368 ($generated@@193 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@188) (< 0 ($generated ($generated@@93 $generated@@368 $generated@@370)))) ($generated@@202 $generated@@370 $generated@@369))
 :pattern ( ($generated@@93 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@151 $generated@@368 ($generated@@193 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@88 $generated@@188 $generated@@4)) (= (type $generated@@372) $generated@@71)) (= (type $generated@@373) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@371 ($generated@@216 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@188) ($generated@@0 ($generated@@93 $generated@@371 $generated@@374))) ($generated@@234 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@93 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@86 $generated@@371 ($generated@@216 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@88 $generated@@188 $generated@@4)) (= (type $generated@@376) $generated@@71)) (= (type $generated@@377) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@375 ($generated@@221 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@188) ($generated@@0 ($generated@@93 $generated@@375 $generated@@378))) ($generated@@234 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@93 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@86 $generated@@375 ($generated@@221 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@93 ($generated@@285 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@93 ($generated@@285 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@88 $generated@@188 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@294 (type $generated@@384))))
(let (($generated@@386 ($generated@@293 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@88 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@292 $generated@@188 $generated@@188)) (= (type $generated@@388) $generated@@188)) (= ($generated@@0 ($generated@@93 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@93 ($generated@@290 $generated@@387) ($generated@@186 ($generated@@340 $generated@@179 $generated@@388)))) (= ($generated@@93 ($generated@@382 $generated@@387) ($generated@@186 ($generated@@340 $generated@@179 $generated@@388))) ($generated@@187 ($generated@@340 $generated@@179 $generated@@388))))))
 :pattern ( ($generated@@93 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@88 $generated@@188 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@312 (type $generated@@392))))
(let (($generated@@394 ($generated@@311 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@88 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@310 $generated@@188 $generated@@188)) (= (type $generated@@396) $generated@@188)) (= ($generated@@0 ($generated@@93 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@93 ($generated@@308 $generated@@395) ($generated@@186 ($generated@@340 $generated@@179 $generated@@396)))) (= ($generated@@93 ($generated@@390 $generated@@395) ($generated@@186 ($generated@@340 $generated@@179 $generated@@396))) ($generated@@187 ($generated@@340 $generated@@179 $generated@@396))))))
 :pattern ( ($generated@@93 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@293 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@292 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@93 ($generated@@350 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@93 ($generated@@290 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@93 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@93 ($generated@@290 $generated@@397) $generated@@401))
 :pattern ( ($generated@@93 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@93 ($generated@@350 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@311 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@310 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@93 ($generated@@361 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@93 ($generated@@308 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@93 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@93 ($generated@@308 $generated@@402) $generated@@406))
 :pattern ( ($generated@@93 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@93 ($generated@@361 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@71)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@292 $generated@@188 $generated@@188)) (= (type $generated@@411) $generated@@71)) (= (type $generated@@412) $generated@@71)) (= (type $generated@@413) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@188) ($generated@@0 ($generated@@93 ($generated@@290 $generated@@410) $generated@@414))) (and ($generated@@234 ($generated@@93 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@234 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@93 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@93 ($generated@@290 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@86 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@71)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@310 $generated@@188 $generated@@188)) (= (type $generated@@419) $generated@@71)) (= (type $generated@@420) $generated@@71)) (= (type $generated@@421) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@188) ($generated@@0 ($generated@@93 ($generated@@308 $generated@@418) $generated@@422))) (and ($generated@@234 ($generated@@93 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@234 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@93 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@93 ($generated@@308 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@86 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@91 (type $generated@@423))))
 (=> (and (and (= (type $generated@@423) ($generated@@88 $generated@@425 $generated@@4)) (= (type $generated@@424) ($generated@@88 $generated@@425 $generated@@4))) ($generated@@332 $generated@@423 $generated@@424)) (= $generated@@423 $generated@@424)))
 :pattern ( ($generated@@332 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@147)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert  (=> (<= 0 $generated@@261) (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) $generated@@147) (= (type $generated@@429) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@430) $generated@@89)) (= (type $generated@@431) $generated@@148)) (or ($generated@@153 $generated@@429 $generated@@430 $generated@@431) (and (not (= 0 $generated@@261)) (and (and ($generated@@149 $generated@@429) (and (not (= $generated@@430 $generated@@150)) (and ($generated@@151 $generated@@430 $generated@@152) ($generated@@86 $generated@@430 $generated@@152 $generated@@429)))) ($generated@@151 $generated@@431 $generated@@45))))) (and (and (=> (< ($generated@@231 ($generated@@95 ($generated@@93 $generated@@429 $generated@@430) $generated@@168)) ($generated@@231 $generated@@431)) ($generated@@153 $generated@@429 $generated@@430 ($generated@@95 ($generated@@93 $generated@@429 $generated@@430) $generated@@168))) (=> (<= ($generated@@231 $generated@@431) ($generated@@231 ($generated@@95 ($generated@@93 $generated@@429 $generated@@430) $generated@@168))) (=> (< ($generated@@231 ($generated@@95 ($generated@@93 $generated@@429 $generated@@430) $generated@@173)) ($generated@@231 $generated@@431)) ($generated@@153 $generated@@429 $generated@@430 ($generated@@95 ($generated@@93 $generated@@429 $generated@@430) $generated@@173))))) (= ($generated@@146 ($generated@@426 $generated@@428) $generated@@429 $generated@@430 $generated@@431) (ite (< ($generated@@231 ($generated@@95 ($generated@@93 $generated@@429 $generated@@430) $generated@@168)) ($generated@@231 $generated@@431)) ($generated@@146 $generated@@428 $generated@@429 $generated@@430 ($generated@@95 ($generated@@93 $generated@@429 $generated@@430) $generated@@168)) (ite (< ($generated@@231 ($generated@@95 ($generated@@93 $generated@@429 $generated@@430) $generated@@173)) ($generated@@231 $generated@@431)) ($generated@@146 $generated@@428 $generated@@429 $generated@@430 ($generated@@95 ($generated@@93 $generated@@429 $generated@@430) $generated@@173)) (= $generated@@431 ($generated@@226 ($generated@@230 32))))))))
 :pattern ( ($generated@@146 ($generated@@426 $generated@@428) $generated@@429 $generated@@430 $generated@@431) ($generated@@149 $generated@@429))
))))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(= (type ($generated@@432 $generated@@433 $generated@@434)) ($generated@@88 $generated@@435 $generated@@4)))
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@437)))
 (=> (and (and (= (type $generated@@436) ($generated@@88 $generated@@439 $generated@@4)) (= (type $generated@@438) $generated@@439)) ($generated@@0 ($generated@@93 $generated@@436 $generated@@438))) ($generated@@0 ($generated@@93 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))))
 :pattern ( ($generated@@432 $generated@@436 $generated@@437) ($generated@@93 $generated@@436 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@441)))
 (=> (and (= (type $generated@@440) ($generated@@88 $generated@@443 $generated@@4)) (= (type $generated@@442) $generated@@443)) (= ($generated@@0 ($generated@@93 ($generated@@432 $generated@@440 $generated@@441) $generated@@442))  (or (= $generated@@442 $generated@@441) ($generated@@0 ($generated@@93 $generated@@440 $generated@@442))))))
 :pattern ( ($generated@@93 ($generated@@432 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@445) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@446) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@444 $generated@@446))) (and ($generated@@145 $generated@@444 $generated@@445) ($generated@@145 $generated@@445 $generated@@446))) ($generated@@145 $generated@@444 $generated@@446))
 :pattern ( ($generated@@145 $generated@@444 $generated@@445) ($generated@@145 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@88 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@312 (type $generated@@449))))
(let (($generated@@451 ($generated@@311 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@310 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@309 $generated@@451 $generated@@450)) (= ($generated@@308 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@308 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@312 (type $generated@@452))))
(let (($generated@@454 ($generated@@311 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@310 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@309 $generated@@454 $generated@@453)) (= ($generated@@361 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@361 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@312 (type $generated@@455))))
(let (($generated@@457 ($generated@@311 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@310 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@309 $generated@@457 $generated@@456)) (= ($generated@@389 $generated@@455) ($generated@@447 $generated@@188))))))
 :pattern ( ($generated@@389 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@294 (type $generated@@458))))
(let (($generated@@460 ($generated@@293 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@292 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@291 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@188) (= (type $generated@@462) $generated@@188)) ($generated@@0 ($generated@@93 ($generated@@381 $generated@@458) ($generated@@267 ($generated@@201 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@381 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@312 (type $generated@@463))))
(let (($generated@@465 ($generated@@311 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@310 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@309 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@188) (= (type $generated@@467) $generated@@188)) ($generated@@0 ($generated@@93 ($generated@@389 $generated@@463) ($generated@@267 ($generated@@201 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@389 $generated@@463))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@77)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@T) ) (!  (=> (and (= (type $generated@@470) $generated@@77) (= (type $generated@@471) $generated@@75)) (and (= ($generated@@468 ($generated@@209 $generated@@472 $generated@@470 $generated@@471)) $generated@@470) (= ($generated@@84 ($generated@@209 $generated@@472 $generated@@470 $generated@@471)) $generated@@471)))
 :pattern ( ($generated@@209 $generated@@472 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@188) ($generated@@202 $generated@@473 $generated@@46)) (and (= ($generated@@267 ($generated@@340 $generated@@2 $generated@@473)) $generated@@473) ($generated@@151 ($generated@@340 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@202 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@188) ($generated@@202 $generated@@474 $generated@@47)) (and (= ($generated@@267 ($generated@@340 $generated@@3 $generated@@474)) $generated@@474) ($generated@@151 ($generated@@340 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@202 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@188) ($generated@@202 $generated@@475 $generated@@44)) (and (= ($generated@@267 ($generated@@340 $generated@@4 $generated@@475)) $generated@@475) ($generated@@151 ($generated@@340 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@202 $generated@@475 $generated@@44))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@188) ($generated@@202 $generated@@476 $generated@@45)) (and (= ($generated@@267 ($generated@@340 $generated@@148 $generated@@476)) $generated@@476) ($generated@@151 ($generated@@340 $generated@@148 $generated@@476) $generated@@45)))
 :pattern ( ($generated@@202 $generated@@476 $generated@@45))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@71) (= ($generated@@202 ($generated@@267 $generated@@477) $generated@@478) ($generated@@151 $generated@@477 $generated@@478)))
 :pattern ( ($generated@@202 ($generated@@267 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (and (= (type $generated@@479) $generated@@147) (= (type $generated@@480) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@481) $generated@@89)) (= (type $generated@@482) $generated@@148)) (= ($generated@@146 ($generated@@426 $generated@@479) $generated@@480 $generated@@481 $generated@@482) ($generated@@146 $generated@@479 $generated@@480 $generated@@481 $generated@@482)))
 :pattern ( ($generated@@146 ($generated@@426 $generated@@479) $generated@@480 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@91 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@88 $generated@@484 $generated@@2)) (<= 0 ($generated@@284 $generated@@483))))
 :pattern ( ($generated@@284 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@256 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@255 $generated@@486)) (<= 0 ($generated@@254 $generated@@485))))
 :pattern ( ($generated@@254 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@71)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@71) (= (type $generated@@490) $generated@@71)) (= ($generated@@487 ($generated@@407 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@407 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@71)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@71) (= (type $generated@@494) $generated@@71)) (= ($generated@@491 ($generated@@407 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@407 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@71) (= (type $generated@@496) $generated@@71)) (= ($generated@@82 ($generated@@407 $generated@@495 $generated@@496)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@71)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@71) (= (type $generated@@500) $generated@@71)) (= ($generated@@497 ($generated@@415 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@415 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@71)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@71) (= (type $generated@@504) $generated@@71)) (= ($generated@@501 ($generated@@415 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@415 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@71) (= (type $generated@@506) $generated@@71)) (= ($generated@@82 ($generated@@415 $generated@@505 $generated@@506)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@188) (= (type $generated@@508) $generated@@188)) (= ($generated@@240 ($generated@@201 $generated@@507 $generated@@508)) $generated@@62))
 :pattern ( ($generated@@201 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@71)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@71) (= (type $generated@@512) $generated@@71)) (= ($generated@@509 ($generated@@178 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@178 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@71)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@71) (= (type $generated@@516) $generated@@71)) (= ($generated@@513 ($generated@@178 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@178 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@188) (= (type $generated@@518) $generated@@188)) (= ($generated@@186 ($generated@@201 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@201 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@188) (= (type $generated@@520) $generated@@188)) (= ($generated@@187 ($generated@@201 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@201 $generated@@519 $generated@@520))
)))
(assert  (and (forall (($generated@@523 T@U) ) (! (= (type ($generated@@521 $generated@@523)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@523))
)) (forall (($generated@@524 T@U) ($generated@@525 Int) ) (! (let (($generated@@526 ($generated@@256 (type $generated@@524))))
(= (type ($generated@@522 $generated@@524 $generated@@525)) $generated@@526))
 :pattern ( ($generated@@522 $generated@@524 $generated@@525))
))))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@255 $generated@@188)) (= (type $generated@@528) $generated@@71)) (= (type $generated@@529) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@527 ($generated@@521 $generated@@528) $generated@@529) (forall (($generated@@530 Int) ) (!  (=> (and (<= 0 $generated@@530) (< $generated@@530 ($generated@@254 $generated@@527))) ($generated@@234 ($generated@@522 $generated@@527 $generated@@530) $generated@@528 $generated@@529))
 :pattern ( ($generated@@522 $generated@@527 $generated@@530))
))))
 :pattern ( ($generated@@86 $generated@@527 ($generated@@521 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (=> (= (type $generated@@531) ($generated@@88 $generated@@533 $generated@@4)) ($generated@@0 ($generated@@93 ($generated@@432 $generated@@531 $generated@@532) $generated@@532))))
 :pattern ( ($generated@@432 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@534 ($generated@@87 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@87 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@71) (= ($generated@@536 ($generated@@216 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@216 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@71) (= ($generated@@82 ($generated@@216 $generated@@539)) $generated@@54))
 :pattern ( ($generated@@216 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@71)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@71) (= ($generated@@540 ($generated@@221 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@221 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@71) (= ($generated@@82 ($generated@@221 $generated@@543)) $generated@@55))
 :pattern ( ($generated@@221 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@71)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@71) (= ($generated@@544 ($generated@@193 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@193 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@71) (= ($generated@@82 ($generated@@193 $generated@@547)) $generated@@56))
 :pattern ( ($generated@@193 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@71)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@71) (= ($generated@@548 ($generated@@521 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@521 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@71) (= ($generated@@82 ($generated@@521 $generated@@551)) $generated@@57))
 :pattern ( ($generated@@521 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@340 $generated@@553 ($generated@@267 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@267 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@292 $generated@@188 $generated@@188)) (= (type $generated@@555) $generated@@71)) (= (type $generated@@556) $generated@@71)) (= ($generated@@151 $generated@@554 ($generated@@407 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@188) ($generated@@0 ($generated@@93 ($generated@@290 $generated@@554) $generated@@557))) (and ($generated@@202 ($generated@@93 ($generated@@382 $generated@@554) $generated@@557) $generated@@556) ($generated@@202 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@93 ($generated@@382 $generated@@554) $generated@@557))
 :pattern ( ($generated@@93 ($generated@@290 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@151 $generated@@554 ($generated@@407 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@310 $generated@@188 $generated@@188)) (= (type $generated@@559) $generated@@71)) (= (type $generated@@560) $generated@@71)) (= ($generated@@151 $generated@@558 ($generated@@415 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@188) ($generated@@0 ($generated@@93 ($generated@@308 $generated@@558) $generated@@561))) (and ($generated@@202 ($generated@@93 ($generated@@390 $generated@@558) $generated@@561) $generated@@560) ($generated@@202 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@93 ($generated@@390 $generated@@558) $generated@@561))
 :pattern ( ($generated@@93 ($generated@@308 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@151 $generated@@558 ($generated@@415 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@188) (= (type $generated@@565) $generated@@188)) (< ($generated@@562 $generated@@564) ($generated@@563 ($generated@@201 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@201 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@188) (= (type $generated@@567) $generated@@188)) (< ($generated@@562 $generated@@567) ($generated@@563 ($generated@@201 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@201 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@188) (= (type $generated@@569) $generated@@71)) (= (type $generated@@570) $generated@@71)) ($generated@@202 $generated@@568 ($generated@@407 $generated@@569 $generated@@570))) (and (= ($generated@@267 ($generated@@340 ($generated@@292 $generated@@188 $generated@@188) $generated@@568)) $generated@@568) ($generated@@151 ($generated@@340 ($generated@@292 $generated@@188 $generated@@188) $generated@@568) ($generated@@407 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@202 $generated@@568 ($generated@@407 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@188) (= (type $generated@@572) $generated@@71)) (= (type $generated@@573) $generated@@71)) ($generated@@202 $generated@@571 ($generated@@415 $generated@@572 $generated@@573))) (and (= ($generated@@267 ($generated@@340 ($generated@@310 $generated@@188 $generated@@188) $generated@@571)) $generated@@571) ($generated@@151 ($generated@@340 ($generated@@310 $generated@@188 $generated@@188) $generated@@571) ($generated@@415 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@202 $generated@@571 ($generated@@415 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@71) (= (type $generated@@575) $generated@@71)) (= (type $generated@@576) $generated@@188)) ($generated@@202 $generated@@576 ($generated@@178 $generated@@574 $generated@@575))) (and (= ($generated@@267 ($generated@@340 $generated@@179 $generated@@576)) $generated@@576) ($generated@@151 ($generated@@340 $generated@@179 $generated@@576) ($generated@@178 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@202 $generated@@576 ($generated@@178 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@578 T@T) ) (! (= (type ($generated@@577 $generated@@578)) ($generated@@88 $generated@@578 $generated@@4))
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
 (not ($generated@@0 ($generated@@93 ($generated@@577 $generated@@580) $generated@@579))))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@93 ($generated@@577 $generated@@580) $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (not ($generated@@0 ($generated@@93 ($generated@@447 $generated@@582) $generated@@581))))
 :pattern ( (let (($generated@@582 (type $generated@@581)))
($generated@@93 ($generated@@447 $generated@@582) $generated@@581)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@589 T@T) ($generated@@590 T@T) ) (= ($generated@@1 ($generated@@585 $generated@@589 $generated@@590)) 23)) (forall (($generated@@591 T@T) ($generated@@592 T@T) ) (! (= ($generated@@586 ($generated@@585 $generated@@591 $generated@@592)) $generated@@591)
 :pattern ( ($generated@@585 $generated@@591 $generated@@592))
))) (forall (($generated@@593 T@T) ($generated@@594 T@T) ) (! (= ($generated@@587 ($generated@@585 $generated@@593 $generated@@594)) $generated@@594)
 :pattern ( ($generated@@585 $generated@@593 $generated@@594))
))) (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@587 (type $generated@@595))))
(= (type ($generated@@583 $generated@@595 $generated@@596 $generated@@597)) $generated@@598))
 :pattern ( ($generated@@583 $generated@@595 $generated@@596 $generated@@597))
))) (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
(let (($generated@@604 (type $generated@@600)))
(= (type ($generated@@588 $generated@@599 $generated@@600 $generated@@601 $generated@@602)) ($generated@@585 $generated@@604 $generated@@603))))
 :pattern ( ($generated@@588 $generated@@599 $generated@@600 $generated@@601 $generated@@602))
))) (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@587 (type $generated@@605))))
 (=> (= (type $generated@@608) $generated@@609) (= ($generated@@583 ($generated@@588 $generated@@605 $generated@@606 $generated@@607 $generated@@608) $generated@@606 $generated@@607) $generated@@608)))
 :weight 0
))) (and (and (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (or (= $generated@@612 $generated@@614) (= ($generated@@583 ($generated@@588 $generated@@611 $generated@@612 $generated@@613 $generated@@610) $generated@@614 $generated@@615) ($generated@@583 $generated@@611 $generated@@614 $generated@@615)))
 :weight 0
)) (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (or (= $generated@@619 $generated@@621) (= ($generated@@583 ($generated@@588 $generated@@617 $generated@@618 $generated@@619 $generated@@616) $generated@@620 $generated@@621) ($generated@@583 $generated@@617 $generated@@620 $generated@@621)))
 :weight 0
))) (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (or true (= ($generated@@583 ($generated@@588 $generated@@623 $generated@@624 $generated@@625 $generated@@622) $generated@@626 $generated@@627) ($generated@@583 $generated@@623 $generated@@626 $generated@@627)))
 :weight 0
)))) (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (= (type ($generated@@584 $generated@@628 $generated@@629 $generated@@630 $generated@@631)) ($generated@@585 $generated@@89 $generated@@4))
 :pattern ( ($generated@@584 $generated@@628 $generated@@629 $generated@@630 $generated@@631))
))))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 ($generated@@74 (type $generated@@637))))
 (=> (and (and (and (and (and (= (type $generated@@632) $generated@@89) (= (type $generated@@633) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@634) ($generated@@73 $generated@@4))) (= (type $generated@@635) $generated@@89)) (= (type $generated@@636) $generated@@89)) (= (type $generated@@637) ($generated@@73 $generated@@638))) (= ($generated@@0 ($generated@@583 ($generated@@584 $generated@@632 $generated@@633 $generated@@634 $generated@@635) $generated@@636 $generated@@637))  (=> (and (not (= $generated@@636 $generated@@632)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@633 $generated@@636) $generated@@634))) (= $generated@@636 $generated@@635)))))
 :pattern ( ($generated@@583 ($generated@@584 $generated@@632 $generated@@633 $generated@@634 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (= (type ($generated@@639 $generated@@640 $generated@@641 $generated@@642 $generated@@643)) ($generated@@585 $generated@@89 $generated@@4))
 :pattern ( ($generated@@639 $generated@@640 $generated@@641 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@74 (type $generated@@649))))
 (=> (and (and (and (and (and (= (type $generated@@644) $generated@@89) (= (type $generated@@645) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@646) ($generated@@73 $generated@@4))) (= (type $generated@@647) $generated@@89)) (= (type $generated@@648) $generated@@89)) (= (type $generated@@649) ($generated@@73 $generated@@650))) (= ($generated@@0 ($generated@@583 ($generated@@639 $generated@@644 $generated@@645 $generated@@646 $generated@@647) $generated@@648 $generated@@649))  (=> (and (not (= $generated@@648 $generated@@644)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@645 $generated@@648) $generated@@646))) (= $generated@@648 $generated@@647)))))
 :pattern ( ($generated@@583 ($generated@@639 $generated@@644 $generated@@645 $generated@@646 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@78)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@71) (= (type $generated@@654) $generated@@71)) (and (= ($generated@@82 ($generated@@178 $generated@@653 $generated@@654)) $generated@@63) (= ($generated@@651 ($generated@@178 $generated@@653 $generated@@654)) $generated@@67)))
 :pattern ( ($generated@@178 $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@179) (= ($generated@@562 ($generated@@267 $generated@@655)) ($generated@@563 $generated@@655)))
 :pattern ( ($generated@@562 ($generated@@267 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@188) ($generated@@202 $generated@@656 ($generated@@87 0))) (and (= ($generated@@267 ($generated@@340 $generated@@2 $generated@@656)) $generated@@656) ($generated@@151 ($generated@@340 ($generated@@88 $generated@@188 $generated@@4) $generated@@656) ($generated@@87 0))))
 :pattern ( ($generated@@202 $generated@@656 ($generated@@87 0)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@188) (= (type $generated@@658) $generated@@71)) ($generated@@202 $generated@@657 ($generated@@216 $generated@@658))) (and (= ($generated@@267 ($generated@@340 ($generated@@88 $generated@@188 $generated@@4) $generated@@657)) $generated@@657) ($generated@@151 ($generated@@340 ($generated@@88 $generated@@188 $generated@@4) $generated@@657) ($generated@@216 $generated@@658))))
 :pattern ( ($generated@@202 $generated@@657 ($generated@@216 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@659) $generated@@188) (= (type $generated@@660) $generated@@71)) ($generated@@202 $generated@@659 ($generated@@221 $generated@@660))) (and (= ($generated@@267 ($generated@@340 ($generated@@88 $generated@@188 $generated@@4) $generated@@659)) $generated@@659) ($generated@@151 ($generated@@340 ($generated@@88 $generated@@188 $generated@@4) $generated@@659) ($generated@@221 $generated@@660))))
 :pattern ( ($generated@@202 $generated@@659 ($generated@@221 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@661) $generated@@188) (= (type $generated@@662) $generated@@71)) ($generated@@202 $generated@@661 ($generated@@193 $generated@@662))) (and (= ($generated@@267 ($generated@@340 ($generated@@88 $generated@@188 $generated@@2) $generated@@661)) $generated@@661) ($generated@@151 ($generated@@340 ($generated@@88 $generated@@188 $generated@@2) $generated@@661) ($generated@@193 $generated@@662))))
 :pattern ( ($generated@@202 $generated@@661 ($generated@@193 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@663) $generated@@188) (= (type $generated@@664) $generated@@71)) ($generated@@202 $generated@@663 ($generated@@521 $generated@@664))) (and (= ($generated@@267 ($generated@@340 ($generated@@255 $generated@@188) $generated@@663)) $generated@@663) ($generated@@151 ($generated@@340 ($generated@@255 $generated@@188) $generated@@663) ($generated@@521 $generated@@664))))
 :pattern ( ($generated@@202 $generated@@663 ($generated@@521 $generated@@664)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (! (let (($generated@@668 ($generated@@91 (type $generated@@666))))
 (=> (and (= (type $generated@@666) ($generated@@88 $generated@@668 $generated@@4)) (= (type $generated@@667) ($generated@@88 $generated@@668 $generated@@4))) (= ($generated@@665 $generated@@666 $generated@@667) (forall (($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@668) ($generated@@0 ($generated@@93 $generated@@666 $generated@@669))) ($generated@@0 ($generated@@93 $generated@@667 $generated@@669)))
 :pattern ( ($generated@@93 $generated@@666 $generated@@669))
 :pattern ( ($generated@@93 $generated@@667 $generated@@669))
)))))
 :pattern ( ($generated@@665 $generated@@666 $generated@@667))
)))
(assert (= ($generated@@82 $generated@@165) $generated@@65))
(assert (= ($generated@@651 $generated@@165) $generated@@68))
(assert (= ($generated@@82 $generated@@152) $generated@@66))
(assert (= ($generated@@651 $generated@@152) $generated@@68))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@670) ($generated@@88 $generated@@188 $generated@@2)) (= (type $generated@@671) $generated@@71)) (= (type $generated@@672) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@670 ($generated@@193 $generated@@671) $generated@@672) (forall (($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@188) (< 0 ($generated ($generated@@93 $generated@@670 $generated@@673)))) ($generated@@234 $generated@@673 $generated@@671 $generated@@672))
 :pattern ( ($generated@@93 $generated@@670 $generated@@673))
))))
 :pattern ( ($generated@@86 $generated@@670 ($generated@@193 $generated@@671) $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) $generated@@179) (= (type $generated@@675) $generated@@71)) (= (type $generated@@676) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@149 $generated@@676) (and ($generated@@177 $generated@@674) (exists (($generated@@677 T@U) ) (!  (and (= (type $generated@@677) $generated@@71) ($generated@@86 $generated@@674 ($generated@@178 $generated@@675 $generated@@677) $generated@@676))
 :pattern ( ($generated@@86 $generated@@674 ($generated@@178 $generated@@675 $generated@@677) $generated@@676))
))))) ($generated@@234 ($generated@@186 $generated@@674) $generated@@675 $generated@@676))
 :pattern ( ($generated@@234 ($generated@@186 $generated@@674) $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) $generated@@179) (= (type $generated@@679) $generated@@71)) (= (type $generated@@680) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@149 $generated@@680) (and ($generated@@177 $generated@@678) (exists (($generated@@681 T@U) ) (!  (and (= (type $generated@@681) $generated@@71) ($generated@@86 $generated@@678 ($generated@@178 $generated@@681 $generated@@679) $generated@@680))
 :pattern ( ($generated@@86 $generated@@678 ($generated@@178 $generated@@681 $generated@@679) $generated@@680))
))))) ($generated@@234 ($generated@@187 $generated@@678) $generated@@679 $generated@@680))
 :pattern ( ($generated@@234 ($generated@@187 $generated@@678) $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@188) (= (type $generated@@683) $generated@@188)) (= ($generated@@201 ($generated@@226 $generated@@682) ($generated@@226 $generated@@683)) ($generated@@226 ($generated@@201 $generated@@682 $generated@@683))))
 :pattern ( ($generated@@201 ($generated@@226 $generated@@682) ($generated@@226 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ) (! (= ($generated@@267 ($generated@@226 $generated@@684)) ($generated@@226 ($generated@@267 $generated@@684)))
 :pattern ( ($generated@@267 ($generated@@226 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ) (! (let (($generated@@686 ($generated@@256 (type $generated@@685))))
 (=> (and (= (type $generated@@685) ($generated@@255 $generated@@686)) (= ($generated@@254 $generated@@685) 0)) (= $generated@@685 ($generated@@253 $generated@@686))))
 :pattern ( ($generated@@254 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (! (let (($generated@@690 (type $generated@@688)))
 (=> (and (and (= (type $generated@@687) ($generated@@88 $generated@@690 $generated@@2)) (= (type $generated@@689) $generated@@2)) (<= 0 ($generated $generated@@689))) (= ($generated@@284 ($generated@@94 $generated@@687 $generated@@688 $generated@@689)) (+ (- ($generated@@284 $generated@@687) ($generated ($generated@@93 $generated@@687 $generated@@688))) ($generated $generated@@689)))))
 :pattern ( ($generated@@284 ($generated@@94 $generated@@687 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@692) $generated@@2)) ($generated@@86 $generated@@692 $generated@@46 $generated@@691))
 :pattern ( ($generated@@86 $generated@@692 $generated@@46 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@694) $generated@@3)) ($generated@@86 $generated@@694 $generated@@47 $generated@@693))
 :pattern ( ($generated@@86 $generated@@694 $generated@@47 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@696) $generated@@4)) ($generated@@86 $generated@@696 $generated@@44 $generated@@695))
 :pattern ( ($generated@@86 $generated@@696 $generated@@44 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@698) $generated@@148)) ($generated@@86 $generated@@698 $generated@@45 $generated@@697))
 :pattern ( ($generated@@86 $generated@@698 $generated@@45 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@700) $generated@@188)) ($generated@@86 $generated@@700 $generated@@48 $generated@@699))
 :pattern ( ($generated@@86 $generated@@700 $generated@@48 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@255 $generated@@188)) (= (type $generated@@702) $generated@@71)) (= ($generated@@151 $generated@@701 ($generated@@521 $generated@@702)) (forall (($generated@@703 Int) ) (!  (=> (and (<= 0 $generated@@703) (< $generated@@703 ($generated@@254 $generated@@701))) ($generated@@202 ($generated@@522 $generated@@701 $generated@@703) $generated@@702))
 :pattern ( ($generated@@522 $generated@@701 $generated@@703))
))))
 :pattern ( ($generated@@151 $generated@@701 ($generated@@521 $generated@@702)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 Int) ) (!  (=> (= (type $generated@@705) ($generated@@255 $generated@@188)) (=> (and (<= 0 $generated@@706) (< $generated@@706 ($generated@@254 $generated@@705))) (< ($generated@@563 ($generated@@340 $generated@@179 ($generated@@522 $generated@@705 $generated@@706))) ($generated@@704 $generated@@705))))
 :pattern ( ($generated@@563 ($generated@@340 $generated@@179 ($generated@@522 $generated@@705 $generated@@706))))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (= (type $generated@@707) ($generated@@292 $generated@@188 $generated@@188)) (= (type $generated@@708) $generated@@71)) (= (type $generated@@709) $generated@@71)) ($generated@@151 $generated@@707 ($generated@@407 $generated@@708 $generated@@709))) (and (and ($generated@@151 ($generated@@290 $generated@@707) ($generated@@216 $generated@@708)) ($generated@@151 ($generated@@350 $generated@@707) ($generated@@216 $generated@@709))) ($generated@@151 ($generated@@381 $generated@@707) ($generated@@216 ($generated@@178 $generated@@708 $generated@@709)))))
 :pattern ( ($generated@@151 $generated@@707 ($generated@@407 $generated@@708 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (and (= (type $generated@@710) ($generated@@310 $generated@@188 $generated@@188)) (= (type $generated@@711) $generated@@71)) (= (type $generated@@712) $generated@@71)) ($generated@@151 $generated@@710 ($generated@@415 $generated@@711 $generated@@712))) (and (and ($generated@@151 ($generated@@308 $generated@@710) ($generated@@221 $generated@@711)) ($generated@@151 ($generated@@361 $generated@@710) ($generated@@221 $generated@@712))) ($generated@@151 ($generated@@389 $generated@@710) ($generated@@221 ($generated@@178 $generated@@711 $generated@@712)))))
 :pattern ( ($generated@@151 $generated@@710 ($generated@@415 $generated@@711 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@2) ($generated@@151 $generated@@713 $generated@@46))
 :pattern ( ($generated@@151 $generated@@713 $generated@@46))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@3) ($generated@@151 $generated@@714 $generated@@47))
 :pattern ( ($generated@@151 $generated@@714 $generated@@47))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@4) ($generated@@151 $generated@@715 $generated@@44))
 :pattern ( ($generated@@151 $generated@@715 $generated@@44))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@148) ($generated@@151 $generated@@716 $generated@@45))
 :pattern ( ($generated@@151 $generated@@716 $generated@@45))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@188) ($generated@@151 $generated@@717 $generated@@48))
 :pattern ( ($generated@@151 $generated@@717 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@718 () Bool)
(declare-fun $generated@@719 () Bool)
(declare-fun $generated@@720 () Bool)
(declare-fun $generated@@721 () Bool)
(declare-fun $generated@@722 () Bool)
(declare-fun $generated@@723 () Bool)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () T@U)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () Bool)
(declare-fun $generated@@728 () Bool)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () Bool)
(declare-fun $generated@@732 () Bool)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () Bool)
(declare-fun $generated@@735 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@725) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@726) $generated@@89)) (= (type $generated@@724) $generated@@148)) (= (type $generated@@729) ($generated@@585 $generated@@89 $generated@@4))) (= (type $generated@@733) $generated@@148)) (= (type $generated@@730) $generated@@148)) (= (type $generated@@735) ($generated@@585 $generated@@89 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@736  (and (=> (= (ControlFlow 0 3) (- 0 8)) $generated@@718) (=> $generated@@718 (and (=> (= (ControlFlow 0 3) (- 0 7)) $generated@@719) (=> $generated@@719 (and (=> (= (ControlFlow 0 3) (- 0 6)) $generated@@720) (=> $generated@@720 (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@721) (=> $generated@@721 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@722) (=> $generated@@722 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@723)))))))))))))
(let (($generated@@737  (=> (<= ($generated@@231 $generated@@724) ($generated@@231 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@173))) (=> (and (and (and (= ($generated@@146 ($generated@@426 $generated@@244) $generated@@725 $generated@@726 $generated@@724) (= $generated@@724 ($generated@@226 ($generated@@230 32)))) ($generated@@151 ($generated@@11 ($generated@@146 ($generated@@426 $generated@@244) $generated@@725 $generated@@726 $generated@@724)) $generated@@44)) (and (= $generated@@722 true) (= $generated@@723 true))) (and (and (= $generated@@719 true) (= $generated@@720 true)) (and (= $generated@@721 $generated@@727) (= (ControlFlow 0 13) 3)))) $generated@@736))))
(let (($generated@@738  (=> (and (< ($generated@@231 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@173)) ($generated@@231 $generated@@724)) ($generated@@86 $generated@@726 $generated@@165 $generated@@725)) (=> (and (and (= $generated@@728 ($generated@@0 ($generated@@583 $generated@@729 $generated@@726 $generated@@173))) (= $generated@@730 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@173))) (and ($generated@@86 $generated@@730 $generated@@45 $generated@@725) (= $generated@@731 (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (! (let (($generated@@741 ($generated@@74 (type $generated@@740))))
 (=> (and (= (type $generated@@739) $generated@@89) (= (type $generated@@740) ($generated@@73 $generated@@741))) (=> (and (and (not (= $generated@@739 $generated@@150)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@725 $generated@@739) $generated@@60))) (= $generated@@739 $generated@@726)) ($generated@@0 ($generated@@583 $generated@@729 $generated@@739 $generated@@740)))))
 :no-pattern (type $generated@@739)
 :no-pattern (type $generated@@740)
 :no-pattern ($generated $generated@@739)
 :no-pattern ($generated@@0 $generated@@739)
 :no-pattern ($generated $generated@@740)
 :no-pattern ($generated@@0 $generated@@740)
))))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (and ($generated@@665 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))) (not ($generated@@665 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))))) (and ($generated@@332 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))) (< ($generated@@231 $generated@@730) ($generated@@231 $generated@@724))))) (=> (or (and ($generated@@665 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))) (not ($generated@@665 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))))) (and ($generated@@332 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))) (< ($generated@@231 $generated@@730) ($generated@@231 $generated@@724)))) (=> (and ($generated@@153 $generated@@725 $generated@@726 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@173)) (= ($generated@@146 ($generated@@426 $generated@@244) $generated@@725 $generated@@726 $generated@@724) ($generated@@146 ($generated@@426 $generated@@244) $generated@@725 $generated@@726 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@173)))) (=> (and (and (and ($generated@@153 $generated@@725 $generated@@726 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@173)) ($generated@@151 ($generated@@11 ($generated@@146 ($generated@@426 $generated@@244) $generated@@725 $generated@@726 $generated@@724)) $generated@@44)) (and (= $generated@@722 $generated@@728) (= $generated@@723 $generated@@731))) (and (and (= $generated@@719 true) (= $generated@@720 true)) (and (= $generated@@721 $generated@@727) (= (ControlFlow 0 11) 3)))) $generated@@736))))))))
(let (($generated@@742  (=> (and (<= ($generated@@231 $generated@@724) ($generated@@231 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@168))) (= $generated@@727 ($generated@@0 ($generated@@583 $generated@@729 $generated@@726 $generated@@173)))) (and (=> (= (ControlFlow 0 14) 11) $generated@@738) (=> (= (ControlFlow 0 14) 13) $generated@@737)))))
(let (($generated@@743  (=> (and (< ($generated@@231 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@168)) ($generated@@231 $generated@@724)) ($generated@@86 $generated@@726 $generated@@165 $generated@@725)) (=> (and (and (= $generated@@732 ($generated@@0 ($generated@@583 $generated@@729 $generated@@726 $generated@@168))) (= $generated@@733 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@168))) (and ($generated@@86 $generated@@733 $generated@@45 $generated@@725) (= $generated@@734 (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (! (let (($generated@@746 ($generated@@74 (type $generated@@745))))
 (=> (and (= (type $generated@@744) $generated@@89) (= (type $generated@@745) ($generated@@73 $generated@@746))) (=> (and (and (not (= $generated@@744 $generated@@150)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@725 $generated@@744) $generated@@60))) (= $generated@@744 $generated@@726)) ($generated@@0 ($generated@@583 $generated@@729 $generated@@744 $generated@@745)))))
 :no-pattern (type $generated@@744)
 :no-pattern (type $generated@@745)
 :no-pattern ($generated $generated@@744)
 :no-pattern ($generated@@0 $generated@@744)
 :no-pattern ($generated $generated@@745)
 :no-pattern ($generated@@0 $generated@@745)
))))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (and ($generated@@665 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))) (not ($generated@@665 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))))) (and ($generated@@332 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))) (< ($generated@@231 $generated@@733) ($generated@@231 $generated@@724))))) (=> (or (and ($generated@@665 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))) (not ($generated@@665 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))))) (and ($generated@@332 ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726)) ($generated@@432 ($generated@@577 $generated@@188) ($generated@@267 $generated@@726))) (< ($generated@@231 $generated@@733) ($generated@@231 $generated@@724)))) (=> (and ($generated@@153 $generated@@725 $generated@@726 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@168)) (= ($generated@@146 ($generated@@426 $generated@@244) $generated@@725 $generated@@726 $generated@@724) ($generated@@146 ($generated@@426 $generated@@244) $generated@@725 $generated@@726 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@168)))) (=> (and (and (and ($generated@@153 $generated@@725 $generated@@726 ($generated@@95 ($generated@@93 $generated@@725 $generated@@726) $generated@@168)) ($generated@@151 ($generated@@11 ($generated@@146 ($generated@@426 $generated@@244) $generated@@725 $generated@@726 $generated@@724)) $generated@@44)) (and (= $generated@@722 true) (= $generated@@723 true))) (and (and (= $generated@@719 $generated@@732) (= $generated@@720 $generated@@734)) (and (= $generated@@721 true) (= (ControlFlow 0 9) 3)))) $generated@@736))))))))
(let (($generated@@747  (=> (and (= $generated@@735 ($generated@@639 $generated@@150 $generated@@725 $generated@@60 $generated@@726)) (= $generated@@718 ($generated@@0 ($generated@@583 $generated@@729 $generated@@726 $generated@@168)))) (and (=> (= (ControlFlow 0 15) 9) $generated@@743) (=> (= (ControlFlow 0 15) 14) $generated@@742)))))
(let (($generated@@748 true))
(let (($generated@@749  (=> (= $generated@@729 ($generated@@584 $generated@@150 $generated@@725 $generated@@60 $generated@@726)) (and (=> (= (ControlFlow 0 16) 1) $generated@@748) (=> (= (ControlFlow 0 16) 15) $generated@@747)))))
(let (($generated@@750  (=> (and ($generated@@149 $generated@@725) ($generated@@144 $generated@@725)) (=> (and (and (and (not (= $generated@@726 $generated@@150)) (and ($generated@@151 $generated@@726 $generated@@152) ($generated@@86 $generated@@726 $generated@@152 $generated@@725))) ($generated@@151 $generated@@724 $generated@@45)) (and (= 0 $generated@@261) (= (ControlFlow 0 17) 16))) $generated@@749))))
$generated@@750))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 () Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@268 (T@U Int) T@U)
(declare-fun $generated@@269 (T@T T@U) T@U)
(declare-fun $generated@@270 (T@U Int) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@308 (Int) T@U)
(declare-fun $generated@@311 (T@U) Bool)
(declare-fun $generated@@312 (T@U T@U T@U) Bool)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@349 (T@U) Int)
(declare-fun $generated@@350 (T@T) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@T) T@U)
(declare-fun $generated@@357 (T@T T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@375 (T@T T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@466 (T@U T@U) T@U)
(declare-fun $generated@@474 (T@U T@U) T@U)
(declare-fun $generated@@485 (T@T) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@599 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@143 T@T) ) (= ($generated@@1 ($generated@@138 $generated@@143)) 15))) (forall (($generated@@144 T@T) ) (! (= ($generated@@141 ($generated@@138 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@138 $generated@@144))
))) (= ($generated@@1 $generated@@139) 16)) (= ($generated@@1 $generated@@142) 17)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@135 $generated@@145 $generated@@146 $generated@@147)) $generated@@142)
 :pattern ( ($generated@@135 $generated@@145 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@136 $generated@@148)) $generated@@137)
 :pattern ( ($generated@@136 $generated@@148))
))) (= (type $generated@@140) $generated@@137)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@137) (= (type $generated@@150) $generated@@80)) (= (type $generated@@151) ($generated@@138 $generated@@139))) (= ($generated@@135 $generated@@149 $generated@@150 $generated@@151) ($generated@@135 $generated@@140 $generated@@150 $generated@@151)))
 :pattern ( ($generated@@135 ($generated@@136 $generated@@149) $generated@@150 $generated@@151))
)))
(assert  (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) $generated@@80)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@80) (= (type $generated@@155) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@154 $generated@@152 $generated@@155)  (or (= $generated@@154 $generated@@153) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@155 $generated@@154) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@154 $generated@@152 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@78 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@160) 18) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@67) (= (type $generated@@164) $generated@@67)) (= (type $generated@@165) $generated@@160)) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@139)
 :pattern ( ($generated@@167 $generated@@169))
)) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@139)
 :pattern ( ($generated@@168 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@160) (= (type $generated@@172) $generated@@160)) true) (= ($generated@@166 $generated@@171 $generated@@172)  (and (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)) (= ($generated@@168 $generated@@171) ($generated@@168 $generated@@172)))))
 :pattern ( ($generated@@166 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@67)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@79 $generated@@139 $generated@@2)) (= (type $generated@@177) $generated@@67)) ($generated@@156 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@156 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@80) (= ($generated@@156 $generated@@180 $generated@@152)  (or (= $generated@@180 $generated@@153) (= ($generated@@178 $generated@@180) $generated@@152))))
 :pattern ( ($generated@@156 $generated@@180 $generated@@152))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 19)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@80 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@70 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@80) (= (type $generated@@231) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@232) ($generated@@69 $generated@@4))) (= (type $generated@@234) $generated@@80)) (= (type $generated@@235) ($generated@@69 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@183 $generated@@80 $generated@@4))
 :pattern ( ($generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@70 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@80) (= (type $generated@@243) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@244) ($generated@@69 $generated@@4))) (= (type $generated@@246) $generated@@80)) (= (type $generated@@247) ($generated@@69 $generated@@248))) (= ($generated@@0 ($generated@@181 ($generated@@237 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@181 ($generated@@237 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (= (type $generated@@249) $generated@@67))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@80) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@250 $generated@@249 $generated@@251) ($generated@@77 $generated@@250 $generated@@152 $generated@@251)))
 :pattern ( ($generated@@77 $generated@@250 $generated@@249 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@160)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@67) (= (type $generated@@257) $generated@@67)) (= (type $generated@@258) $generated@@139)) (= (type $generated@@259) $generated@@139)) (= ($generated@@156 ($generated@@252 $generated@@258 $generated@@259) ($generated@@159 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@156 ($generated@@252 $generated@@258 $generated@@259) ($generated@@159 $generated@@256 $generated@@257)))
)))
(assert  (and (and (and (and (and (forall (($generated@@272 T@U) ) (! (= (type ($generated@@261 $generated@@272)) $generated@@137)
 :pattern ( ($generated@@261 $generated@@272))
)) (forall (($generated@@273 T@U) ) (! (= (type ($generated@@263 $generated@@273)) $generated@@67)
 :pattern ( ($generated@@263 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@265 $generated@@274)) ($generated@@138 $generated@@274))
 :pattern ( ($generated@@265 $generated@@274))
))) (forall (($generated@@275 T@U) ($generated@@276 Int) ) (! (let (($generated@@277 ($generated@@141 (type $generated@@275))))
(= (type ($generated@@268 $generated@@275 $generated@@276)) ($generated@@138 $generated@@277)))
 :pattern ( ($generated@@268 $generated@@275 $generated@@276))
))) (forall (($generated@@278 T@T) ($generated@@279 T@U) ) (! (= (type ($generated@@269 $generated@@278 $generated@@279)) $generated@@278)
 :pattern ( ($generated@@269 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ($generated@@281 Int) ) (! (let (($generated@@282 ($generated@@141 (type $generated@@280))))
(= (type ($generated@@270 $generated@@280 $generated@@281)) $generated@@282))
 :pattern ( ($generated@@270 $generated@@280 $generated@@281))
))))
(assert  (=> (<= 1 $generated@@260) (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) $generated@@137) (= (type $generated@@284) $generated@@80)) (= (type $generated@@285) ($generated@@138 $generated@@139))) (or ($generated@@262 $generated@@284 $generated@@285) (and (not (= 1 $generated@@260)) (and (and (and (not (= $generated@@284 $generated@@153)) ($generated@@156 $generated@@284 $generated@@249)) ($generated@@156 $generated@@285 ($generated@@263 $generated@@45))) (not ($generated@@264 $generated@@285 ($generated@@265 $generated@@139))))))) (and (=> (not (= ($generated@@266 $generated@@285) ($generated@@267 1))) ($generated@@262 $generated@@284 ($generated@@268 $generated@@285 ($generated@@267 1)))) (= ($generated@@135 ($generated@@261 $generated@@283) $generated@@284 $generated@@285) (let (($generated@@286 ($generated@@269 $generated@@142 ($generated@@270 $generated@@285 ($generated@@267 0)))))
(ite (= ($generated@@266 $generated@@285) ($generated@@267 1)) $generated@@286 (let (($generated@@287 ($generated@@135 $generated@@283 $generated@@284 ($generated@@268 $generated@@285 ($generated@@267 1)))))
(ite (< ($generated@@271 $generated@@287) ($generated@@271 $generated@@286)) $generated@@287 $generated@@286)))))))
 :pattern ( ($generated@@135 ($generated@@261 $generated@@283) $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@160) (= (type $generated@@289) $generated@@160)) (= ($generated@@166 $generated@@288 $generated@@289) (= $generated@@288 $generated@@289)))
 :pattern ( ($generated@@166 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 Int) ) (! (let (($generated@@292 ($generated@@141 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@138 $generated@@292)) (= $generated@@291 0)) (= ($generated@@268 $generated@@290 $generated@@291) $generated@@290)))
 :pattern ( ($generated@@268 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@67)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@296) $generated@@67)) (= ($generated@@156 $generated@@295 ($generated@@293 $generated@@296)) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@139) ($generated@@0 ($generated@@84 $generated@@295 $generated@@297))) ($generated@@253 $generated@@297 $generated@@296))
 :pattern ( ($generated@@84 $generated@@295 $generated@@297))
))))
 :pattern ( ($generated@@156 $generated@@295 ($generated@@293 $generated@@296)))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@67)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@301) $generated@@67)) (= ($generated@@156 $generated@@300 ($generated@@298 $generated@@301)) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@139) ($generated@@0 ($generated@@84 $generated@@300 $generated@@302))) ($generated@@253 $generated@@302 $generated@@301))
 :pattern ( ($generated@@84 $generated@@300 $generated@@302))
))))
 :pattern ( ($generated@@156 $generated@@300 ($generated@@298 $generated@@301)))
)))
(assert (forall (($generated@@303 Int) ) (! (= ($generated@@267 $generated@@303) $generated@@303)
 :pattern ( ($generated@@267 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 (type $generated@@305)))
(= (type ($generated@@304 $generated@@305)) $generated@@306))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= ($generated@@304 $generated@@307) $generated@@307)
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@309 Int) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@142)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 Int) ) (!  (=> (and (<= 0 $generated@@310) (< $generated@@310 65536)) (= ($generated@@271 ($generated@@308 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@308 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) $generated@@67) (= (type $generated@@314) $generated@@67)) (= (type $generated@@315) $generated@@139)) (= (type $generated@@316) $generated@@139)) (= (type $generated@@317) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@311 $generated@@317)) (= ($generated@@77 ($generated@@252 $generated@@315 $generated@@316) ($generated@@159 $generated@@313 $generated@@314) $generated@@317)  (and ($generated@@312 $generated@@315 $generated@@313 $generated@@317) ($generated@@312 $generated@@316 $generated@@314 $generated@@317))))
 :pattern ( ($generated@@77 ($generated@@252 $generated@@315 $generated@@316) ($generated@@159 $generated@@313 $generated@@314) $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@141 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@138 $generated@@320)) (=> (and (<= 0 $generated@@319) (<= $generated@@319 ($generated@@266 $generated@@318))) (= ($generated@@266 ($generated@@268 $generated@@318 $generated@@319)) (- ($generated@@266 $generated@@318) $generated@@319)))))
 :pattern ( ($generated@@266 ($generated@@268 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@71)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@160) (= ($generated@@158 $generated@@323) (= ($generated@@321 $generated@@323) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@141 (type $generated@@324))))
 (=> (and (= (type $generated@@324) ($generated@@138 $generated@@326)) (= (type $generated@@325) ($generated@@138 $generated@@326))) (= ($generated@@264 $generated@@324 $generated@@325)  (and (= ($generated@@266 $generated@@324) ($generated@@266 $generated@@325)) (forall (($generated@@327 Int) ) (!  (=> (and (<= 0 $generated@@327) (< $generated@@327 ($generated@@266 $generated@@324))) (= ($generated@@270 $generated@@324 $generated@@327) ($generated@@270 $generated@@325 $generated@@327)))
 :pattern ( ($generated@@270 $generated@@324 $generated@@327))
 :pattern ( ($generated@@270 $generated@@325 $generated@@327))
))))))
 :pattern ( ($generated@@264 $generated@@324 $generated@@325))
)))
(assert  (=> (<= 1 $generated@@260) (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (= (type $generated@@328) $generated@@137) (= (type $generated@@329) $generated@@80)) (= (type $generated@@330) ($generated@@138 $generated@@139))) (or ($generated@@262 $generated@@329 $generated@@330) (and (not (= 1 $generated@@260)) (and (and (and (not (= $generated@@329 $generated@@153)) ($generated@@156 $generated@@329 $generated@@249)) ($generated@@156 $generated@@330 ($generated@@263 $generated@@45))) (not ($generated@@264 $generated@@330 ($generated@@265 $generated@@139))))))) ($generated@@156 ($generated@@135 $generated@@328 $generated@@329 $generated@@330) $generated@@45))
 :pattern ( ($generated@@135 $generated@@328 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@160) ($generated@@158 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@139) (= (type $generated@@333) $generated@@139)) (= $generated@@331 ($generated@@252 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@158 $generated@@331))
)))
(assert (forall (($generated@@334 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@334)) 0)
 :pattern ( ($generated@@265 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 Int) ) (! (let (($generated@@338 ($generated@@141 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@138 $generated@@338)) (=> (and (< 0 $generated@@337) (<= $generated@@337 ($generated@@266 $generated@@336))) (< ($generated@@335 ($generated@@268 $generated@@336 $generated@@337)) ($generated@@335 $generated@@336)))))
 :pattern ( ($generated@@335 ($generated@@268 $generated@@336 $generated@@337)))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@142) (and (and (= ($generated@@308 ($generated@@271 $generated@@339)) $generated@@339) (<= 0 ($generated@@271 $generated@@339))) (< ($generated@@271 $generated@@339) 65536)))
 :pattern ( ($generated@@271 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@139)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@67) (= (type $generated@@344) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@312 ($generated@@340 $generated@@342) $generated@@343 $generated@@344) ($generated@@77 $generated@@342 $generated@@343 $generated@@344)))
 :pattern ( ($generated@@312 ($generated@@340 $generated@@342) $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 Int) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@141 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@138 $generated@@348)) (=> (and (and (<= 0 $generated@@346) (<= 0 $generated@@347)) (< $generated@@347 (- ($generated@@266 $generated@@345) $generated@@346))) (= ($generated@@270 ($generated@@268 $generated@@345 $generated@@346) $generated@@347) ($generated@@270 $generated@@345 (+ $generated@@347 $generated@@346))))))
 :weight 25
 :pattern ( ($generated@@270 ($generated@@268 $generated@@345 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ) (! (= (type ($generated@@350 $generated@@351)) ($generated@@79 $generated@@351 $generated@@2))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@82 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@79 $generated@@353 $generated@@2)) (and (= (= ($generated@@349 $generated@@352) 0) (= $generated@@352 ($generated@@350 $generated@@353))) (=> (not (= ($generated@@349 $generated@@352) 0)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) (< 0 ($generated ($generated@@84 $generated@@352 $generated@@354))))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert  (and (and (and (and (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (= ($generated@@1 ($generated@@357 $generated@@360 $generated@@361)) 20)) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@358 ($generated@@357 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@357 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@359 ($generated@@357 $generated@@364 $generated@@365)) $generated@@365)
 :pattern ( ($generated@@357 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@358 (type $generated@@366))))
(= (type ($generated@@355 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@366))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= (type ($generated@@356 $generated@@368 $generated@@369)) ($generated@@357 $generated@@368 $generated@@369))
 :pattern ( ($generated@@356 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@T) ) (! (let (($generated@@372 (type $generated@@370)))
 (not ($generated@@0 ($generated@@84 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370))))
 :pattern ( (let (($generated@@372 (type $generated@@370)))
($generated@@84 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370)))
)))
(assert  (and (and (and (and (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@378 $generated@@379)) 21)) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@375 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@377 ($generated@@375 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@375 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@376 (type $generated@@384))))
(= (type ($generated@@373 $generated@@384)) ($generated@@79 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@384))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= (type ($generated@@374 $generated@@386 $generated@@387)) ($generated@@375 $generated@@386 $generated@@387))
 :pattern ( ($generated@@374 $generated@@386 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@T) ) (! (let (($generated@@390 (type $generated@@388)))
 (not ($generated@@0 ($generated@@84 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388))))
 :pattern ( (let (($generated@@390 (type $generated@@388)))
($generated@@84 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388)))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@82 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@79 $generated@@392 $generated@@2)) (= ($generated@@174 $generated@@391) (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@392) (and (<= 0 ($generated ($generated@@84 $generated@@391 $generated@@393))) (<= ($generated ($generated@@84 $generated@@391 $generated@@393)) ($generated@@349 $generated@@391))))
 :pattern ( ($generated@@84 $generated@@391 $generated@@393))
)))))
 :pattern ( ($generated@@174 $generated@@391))
)))
(assert  (=> (<= 1 $generated@@260) (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) $generated@@137) (= (type $generated@@395) $generated@@80)) (= (type $generated@@396) ($generated@@138 $generated@@139))) (or ($generated@@262 ($generated@@304 $generated@@395) ($generated@@304 $generated@@396)) (and (not (= 1 $generated@@260)) (and (and (and (not (= $generated@@395 $generated@@153)) ($generated@@156 $generated@@395 $generated@@249)) ($generated@@156 $generated@@396 ($generated@@263 $generated@@45))) (not ($generated@@264 $generated@@396 ($generated@@265 $generated@@139))))))) (and (=> (not (= ($generated@@266 ($generated@@304 $generated@@396)) ($generated@@267 1))) ($generated@@262 ($generated@@304 $generated@@395) ($generated@@304 ($generated@@268 ($generated@@304 $generated@@396) ($generated@@267 1))))) (= ($generated@@135 ($generated@@261 $generated@@394) ($generated@@304 $generated@@395) ($generated@@304 $generated@@396)) (let (($generated@@397 ($generated@@269 $generated@@142 ($generated@@270 ($generated@@304 $generated@@396) ($generated@@267 0)))))
(ite (= ($generated@@266 ($generated@@304 $generated@@396)) ($generated@@267 1)) $generated@@397 (let (($generated@@398 ($generated@@304 ($generated@@135 ($generated@@261 $generated@@394) ($generated@@304 $generated@@395) ($generated@@304 ($generated@@268 ($generated@@304 $generated@@396) ($generated@@267 1)))))))
(ite (< ($generated@@271 $generated@@398) ($generated@@271 $generated@@397)) $generated@@398 $generated@@397)))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@261 $generated@@394) ($generated@@304 $generated@@395) ($generated@@304 $generated@@396)))
))))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@139) ($generated@@253 $generated@@399 $generated@@152)) (and (= ($generated@@340 ($generated@@269 $generated@@80 $generated@@399)) $generated@@399) ($generated@@156 ($generated@@269 $generated@@80 $generated@@399) $generated@@152)))
 :pattern ( ($generated@@253 $generated@@399 $generated@@152))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@139) ($generated@@253 $generated@@400 $generated@@249)) (and (= ($generated@@340 ($generated@@269 $generated@@80 $generated@@400)) $generated@@400) ($generated@@156 ($generated@@269 $generated@@80 $generated@@400) $generated@@249)))
 :pattern ( ($generated@@253 $generated@@400 $generated@@249))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (= (type $generated@@401) $generated@@80) (= ($generated@@156 $generated@@401 $generated@@249)  (and ($generated@@156 $generated@@401 $generated@@152) (not (= $generated@@401 $generated@@153)))))
 :pattern ( ($generated@@156 $generated@@401 $generated@@249))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@359 (type $generated@@402))))
(let (($generated@@404 ($generated@@358 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@357 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@356 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) ($generated@@0 ($generated@@84 ($generated@@355 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@355 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@359 (type $generated@@407))))
(= (type ($generated@@406 $generated@@407)) ($generated@@79 $generated@@408 $generated@@4)))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@359 (type $generated@@409))))
(let (($generated@@411 ($generated@@358 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@357 $generated@@411 $generated@@410)) (or (= $generated@@409 ($generated@@356 $generated@@411 $generated@@410)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@410) ($generated@@0 ($generated@@84 ($generated@@406 $generated@@409) $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@406 $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@377 (type $generated@@413))))
(let (($generated@@415 ($generated@@376 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@375 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@374 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) ($generated@@0 ($generated@@84 ($generated@@373 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@373 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@377 (type $generated@@418))))
(= (type ($generated@@417 $generated@@418)) ($generated@@79 $generated@@419 $generated@@4)))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@377 (type $generated@@420))))
(let (($generated@@422 ($generated@@376 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@375 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@374 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@421) ($generated@@0 ($generated@@84 ($generated@@417 $generated@@420) $generated@@423)))
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@417 $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@424) $generated@@137) (= (type $generated@@425) $generated@@80)) (= (type $generated@@426) ($generated@@138 $generated@@139))) (= ($generated@@135 ($generated@@261 $generated@@424) $generated@@425 $generated@@426) ($generated@@135 $generated@@424 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@135 ($generated@@261 $generated@@424) $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@79 $generated@@139 $generated@@2)) (= (type $generated@@428) $generated@@67)) (= ($generated@@156 $generated@@427 ($generated@@173 $generated@@428)) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@139) (< 0 ($generated ($generated@@84 $generated@@427 $generated@@429)))) ($generated@@253 $generated@@429 $generated@@428))
 :pattern ( ($generated@@84 $generated@@427 $generated@@429))
))))
 :pattern ( ($generated@@156 $generated@@427 ($generated@@173 $generated@@428)))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@431) $generated@@67)) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@430 ($generated@@293 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@139) ($generated@@0 ($generated@@84 $generated@@430 $generated@@433))) ($generated@@312 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@84 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@77 $generated@@430 ($generated@@293 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@434) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@435) $generated@@67)) (= (type $generated@@436) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@434 ($generated@@298 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@139) ($generated@@0 ($generated@@84 $generated@@434 $generated@@437))) ($generated@@312 $generated@@437 $generated@@435 $generated@@436))
 :pattern ( ($generated@@84 $generated@@434 $generated@@437))
))))
 :pattern ( ($generated@@77 $generated@@434 ($generated@@298 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(= ($generated ($generated@@84 ($generated@@350 $generated@@439) $generated@@438)) 0))
 :pattern ( (let (($generated@@439 (type $generated@@438)))
($generated@@84 ($generated@@350 $generated@@439) $generated@@438)))
)))
(assert  (and (forall (($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@442)) ($generated@@79 $generated@@139 $generated@@4))
 :pattern ( ($generated@@440 $generated@@442))
)) (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@359 (type $generated@@443))))
(let (($generated@@445 ($generated@@358 (type $generated@@443))))
(= (type ($generated@@441 $generated@@443)) ($generated@@79 $generated@@445 $generated@@444))))
 :pattern ( ($generated@@441 $generated@@443))
))))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) ($generated@@357 $generated@@139 $generated@@139)) (= (type $generated@@447) $generated@@139)) (= ($generated@@0 ($generated@@84 ($generated@@440 $generated@@446) $generated@@447))  (and ($generated@@0 ($generated@@84 ($generated@@355 $generated@@446) ($generated@@167 ($generated@@269 $generated@@160 $generated@@447)))) (= ($generated@@84 ($generated@@441 $generated@@446) ($generated@@167 ($generated@@269 $generated@@160 $generated@@447))) ($generated@@168 ($generated@@269 $generated@@160 $generated@@447))))))
 :pattern ( ($generated@@84 ($generated@@440 $generated@@446) $generated@@447))
)))
(assert  (and (forall (($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@450)) ($generated@@79 $generated@@139 $generated@@4))
 :pattern ( ($generated@@448 $generated@@450))
)) (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@377 (type $generated@@451))))
(let (($generated@@453 ($generated@@376 (type $generated@@451))))
(= (type ($generated@@449 $generated@@451)) ($generated@@79 $generated@@453 $generated@@452))))
 :pattern ( ($generated@@449 $generated@@451))
))))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) ($generated@@375 $generated@@139 $generated@@139)) (= (type $generated@@455) $generated@@139)) (= ($generated@@0 ($generated@@84 ($generated@@448 $generated@@454) $generated@@455))  (and ($generated@@0 ($generated@@84 ($generated@@373 $generated@@454) ($generated@@167 ($generated@@269 $generated@@160 $generated@@455)))) (= ($generated@@84 ($generated@@449 $generated@@454) ($generated@@167 ($generated@@269 $generated@@160 $generated@@455))) ($generated@@168 ($generated@@269 $generated@@160 $generated@@455))))))
 :pattern ( ($generated@@84 ($generated@@448 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(let (($generated@@459 ($generated@@358 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@357 $generated@@459 $generated@@458)) (= ($generated@@0 ($generated@@84 ($generated@@406 $generated@@456) $generated@@457)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) (and ($generated@@0 ($generated@@84 ($generated@@355 $generated@@456) $generated@@460)) (= $generated@@457 ($generated@@84 ($generated@@441 $generated@@456) $generated@@460))))
 :pattern ( ($generated@@84 ($generated@@355 $generated@@456) $generated@@460))
 :pattern ( ($generated@@84 ($generated@@441 $generated@@456) $generated@@460))
))))))
 :pattern ( ($generated@@84 ($generated@@406 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@376 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@375 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@84 ($generated@@417 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@84 ($generated@@373 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@84 ($generated@@449 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@461) $generated@@465))
 :pattern ( ($generated@@84 ($generated@@449 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@84 ($generated@@417 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (and (= (type $generated@@469) ($generated@@357 $generated@@139 $generated@@139)) (= (type $generated@@470) $generated@@67)) (= (type $generated@@471) $generated@@67)) (= (type $generated@@472) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@469 ($generated@@466 $generated@@470 $generated@@471) $generated@@472) (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@355 $generated@@469) $generated@@473))) (and ($generated@@312 ($generated@@84 ($generated@@441 $generated@@469) $generated@@473) $generated@@471 $generated@@472) ($generated@@312 $generated@@473 $generated@@470 $generated@@472)))
 :pattern ( ($generated@@84 ($generated@@441 $generated@@469) $generated@@473))
 :pattern ( ($generated@@84 ($generated@@355 $generated@@469) $generated@@473))
))))
 :pattern ( ($generated@@77 $generated@@469 ($generated@@466 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (and (= (type $generated@@477) ($generated@@375 $generated@@139 $generated@@139)) (= (type $generated@@478) $generated@@67)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@477 ($generated@@474 $generated@@478 $generated@@479) $generated@@480) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@373 $generated@@477) $generated@@481))) (and ($generated@@312 ($generated@@84 ($generated@@449 $generated@@477) $generated@@481) $generated@@479 $generated@@480) ($generated@@312 $generated@@481 $generated@@478 $generated@@480)))
 :pattern ( ($generated@@84 ($generated@@449 $generated@@477) $generated@@481))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@477) $generated@@481))
))))
 :pattern ( ($generated@@77 $generated@@477 ($generated@@474 $generated@@478 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@141 (type $generated@@482))))
 (=> (and (and (= (type $generated@@482) ($generated@@138 $generated@@484)) (= (type $generated@@483) ($generated@@138 $generated@@484))) ($generated@@264 $generated@@482 $generated@@483)) (= $generated@@482 $generated@@483)))
 :pattern ( ($generated@@264 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@486 T@T) ) (! (= (type ($generated@@485 $generated@@486)) ($generated@@79 $generated@@486 $generated@@4))
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@377 (type $generated@@487))))
(let (($generated@@489 ($generated@@376 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@375 $generated@@489 $generated@@488)) (= (= $generated@@487 ($generated@@374 $generated@@489 $generated@@488)) (= ($generated@@373 $generated@@487) ($generated@@485 $generated@@489))))))
 :pattern ( ($generated@@373 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@377 (type $generated@@490))))
(let (($generated@@492 ($generated@@376 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@375 $generated@@492 $generated@@491)) (= (= $generated@@490 ($generated@@374 $generated@@492 $generated@@491)) (= ($generated@@417 $generated@@490) ($generated@@485 $generated@@491))))))
 :pattern ( ($generated@@417 $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@377 (type $generated@@493))))
(let (($generated@@495 ($generated@@376 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@375 $generated@@495 $generated@@494)) (= (= $generated@@493 ($generated@@374 $generated@@495 $generated@@494)) (= ($generated@@448 $generated@@493) ($generated@@485 $generated@@139))))))
 :pattern ( ($generated@@448 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@359 (type $generated@@496))))
(let (($generated@@498 ($generated@@358 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@357 $generated@@498 $generated@@497)) (or (= $generated@@496 ($generated@@356 $generated@@498 $generated@@497)) (exists (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (and (and (= (type $generated@@499) $generated@@139) (= (type $generated@@500) $generated@@139)) ($generated@@0 ($generated@@84 ($generated@@440 $generated@@496) ($generated@@340 ($generated@@252 $generated@@499 $generated@@500)))))
 :no-pattern (type $generated@@499)
 :no-pattern (type $generated@@500)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
))))))
 :pattern ( ($generated@@440 $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@377 (type $generated@@501))))
(let (($generated@@503 ($generated@@376 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@375 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@374 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@139) (= (type $generated@@505) $generated@@139)) ($generated@@0 ($generated@@84 ($generated@@448 $generated@@501) ($generated@@340 ($generated@@252 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@448 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@139) ($generated@@253 $generated@@506 $generated@@46)) (and (= ($generated@@340 ($generated@@269 $generated@@2 $generated@@506)) $generated@@506) ($generated@@156 ($generated@@269 $generated@@2 $generated@@506) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@506 $generated@@46))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@139) ($generated@@253 $generated@@507 $generated@@47)) (and (= ($generated@@340 ($generated@@269 $generated@@3 $generated@@507)) $generated@@507) ($generated@@156 ($generated@@269 $generated@@3 $generated@@507) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@507 $generated@@47))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@139) ($generated@@253 $generated@@508 $generated@@44)) (and (= ($generated@@340 ($generated@@269 $generated@@4 $generated@@508)) $generated@@508) ($generated@@156 ($generated@@269 $generated@@4 $generated@@508) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@508 $generated@@44))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@139) ($generated@@253 $generated@@509 $generated@@45)) (and (= ($generated@@340 ($generated@@269 $generated@@142 $generated@@509)) $generated@@509) ($generated@@156 ($generated@@269 $generated@@142 $generated@@509) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@509 $generated@@45))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@253 ($generated@@340 $generated@@510) $generated@@511) ($generated@@156 $generated@@510 $generated@@511)))
 :pattern ( ($generated@@253 ($generated@@340 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@82 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@79 $generated@@513 $generated@@2)) (<= 0 ($generated@@349 $generated@@512))))
 :pattern ( ($generated@@349 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@141 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@138 $generated@@515)) (<= 0 ($generated@@266 $generated@@514))))
 :pattern ( ($generated@@266 $generated@@514))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@516 ($generated@@466 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@466 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (= ($generated@@520 ($generated@@466 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@466 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@67) (= (type $generated@@525) $generated@@67)) (= ($generated@@75 ($generated@@466 $generated@@524 $generated@@525)) $generated@@58))
 :pattern ( ($generated@@466 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@67) (= (type $generated@@529) $generated@@67)) (= ($generated@@526 ($generated@@474 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@474 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= ($generated@@530 ($generated@@474 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@474 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (= ($generated@@75 ($generated@@474 $generated@@534 $generated@@535)) $generated@@59))
 :pattern ( ($generated@@474 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@139) (= (type $generated@@537) $generated@@139)) (= ($generated@@321 ($generated@@252 $generated@@536 $generated@@537)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (= ($generated@@538 ($generated@@159 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@159 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (= ($generated@@542 ($generated@@159 $generated@@544 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@159 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@139) (= (type $generated@@547) $generated@@139)) (= ($generated@@167 ($generated@@252 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@252 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@139) (= (type $generated@@549) $generated@@139)) (= ($generated@@168 ($generated@@252 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@252 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@138 $generated@@139)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@550 ($generated@@263 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@266 $generated@@550))) ($generated@@312 ($generated@@270 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@270 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@77 $generated@@550 ($generated@@263 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@78 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@78 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@67)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@67) (= ($generated@@556 ($generated@@293 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@293 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@67) (= ($generated@@75 ($generated@@293 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@293 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@67)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@67) (= ($generated@@560 ($generated@@298 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@298 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@67) (= ($generated@@75 ($generated@@298 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@298 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@67)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@67) (= ($generated@@564 ($generated@@173 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@173 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@67) (= ($generated@@75 ($generated@@173 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@67)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@67) (= ($generated@@568 ($generated@@263 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@263 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@67) (= ($generated@@75 ($generated@@263 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@263 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
(= ($generated@@269 $generated@@573 ($generated@@340 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@340 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@357 $generated@@139 $generated@@139)) (= (type $generated@@575) $generated@@67)) (= (type $generated@@576) $generated@@67)) (= ($generated@@156 $generated@@574 ($generated@@466 $generated@@575 $generated@@576)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@355 $generated@@574) $generated@@577))) (and ($generated@@253 ($generated@@84 ($generated@@441 $generated@@574) $generated@@577) $generated@@576) ($generated@@253 $generated@@577 $generated@@575)))
 :pattern ( ($generated@@84 ($generated@@441 $generated@@574) $generated@@577))
 :pattern ( ($generated@@84 ($generated@@355 $generated@@574) $generated@@577))
))))
 :pattern ( ($generated@@156 $generated@@574 ($generated@@466 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@375 $generated@@139 $generated@@139)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) (= ($generated@@156 $generated@@578 ($generated@@474 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@373 $generated@@578) $generated@@581))) (and ($generated@@253 ($generated@@84 ($generated@@449 $generated@@578) $generated@@581) $generated@@580) ($generated@@253 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@84 ($generated@@449 $generated@@578) $generated@@581))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@156 $generated@@578 ($generated@@474 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@139) (= (type $generated@@585) $generated@@139)) (< ($generated@@582 $generated@@584) ($generated@@583 ($generated@@252 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@252 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@139) (= (type $generated@@587) $generated@@139)) (< ($generated@@582 $generated@@587) ($generated@@583 ($generated@@252 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@252 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@139) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) $generated@@67)) ($generated@@253 $generated@@588 ($generated@@466 $generated@@589 $generated@@590))) (and (= ($generated@@340 ($generated@@269 ($generated@@357 $generated@@139 $generated@@139) $generated@@588)) $generated@@588) ($generated@@156 ($generated@@269 ($generated@@357 $generated@@139 $generated@@139) $generated@@588) ($generated@@466 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@253 $generated@@588 ($generated@@466 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@139) (= (type $generated@@592) $generated@@67)) (= (type $generated@@593) $generated@@67)) ($generated@@253 $generated@@591 ($generated@@474 $generated@@592 $generated@@593))) (and (= ($generated@@340 ($generated@@269 ($generated@@375 $generated@@139 $generated@@139) $generated@@591)) $generated@@591) ($generated@@156 ($generated@@269 ($generated@@375 $generated@@139 $generated@@139) $generated@@591) ($generated@@474 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@253 $generated@@591 ($generated@@474 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@67) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) $generated@@139)) ($generated@@253 $generated@@596 ($generated@@159 $generated@@594 $generated@@595))) (and (= ($generated@@340 ($generated@@269 $generated@@160 $generated@@596)) $generated@@596) ($generated@@156 ($generated@@269 $generated@@160 $generated@@596) ($generated@@159 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@253 $generated@@596 ($generated@@159 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
 (not ($generated@@0 ($generated@@84 ($generated@@485 $generated@@598) $generated@@597))))
 :pattern ( (let (($generated@@598 (type $generated@@597)))
($generated@@84 ($generated@@485 $generated@@598) $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@72)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@67) (= (type $generated@@602) $generated@@67)) (and (= ($generated@@75 ($generated@@159 $generated@@601 $generated@@602)) $generated@@62) (= ($generated@@599 ($generated@@159 $generated@@601 $generated@@602)) $generated@@65)))
 :pattern ( ($generated@@159 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@160) (= ($generated@@582 ($generated@@340 $generated@@603)) ($generated@@583 $generated@@603)))
 :pattern ( ($generated@@582 ($generated@@340 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@139) ($generated@@253 $generated@@604 ($generated@@78 0))) (and (= ($generated@@340 ($generated@@269 $generated@@2 $generated@@604)) $generated@@604) ($generated@@156 ($generated@@269 ($generated@@79 $generated@@139 $generated@@4) $generated@@604) ($generated@@78 0))))
 :pattern ( ($generated@@253 $generated@@604 ($generated@@78 0)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@139) (= (type $generated@@606) $generated@@67)) ($generated@@253 $generated@@605 ($generated@@293 $generated@@606))) (and (= ($generated@@340 ($generated@@269 ($generated@@79 $generated@@139 $generated@@4) $generated@@605)) $generated@@605) ($generated@@156 ($generated@@269 ($generated@@79 $generated@@139 $generated@@4) $generated@@605) ($generated@@293 $generated@@606))))
 :pattern ( ($generated@@253 $generated@@605 ($generated@@293 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@139) (= (type $generated@@608) $generated@@67)) ($generated@@253 $generated@@607 ($generated@@298 $generated@@608))) (and (= ($generated@@340 ($generated@@269 ($generated@@79 $generated@@139 $generated@@4) $generated@@607)) $generated@@607) ($generated@@156 ($generated@@269 ($generated@@79 $generated@@139 $generated@@4) $generated@@607) ($generated@@298 $generated@@608))))
 :pattern ( ($generated@@253 $generated@@607 ($generated@@298 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@139) (= (type $generated@@610) $generated@@67)) ($generated@@253 $generated@@609 ($generated@@173 $generated@@610))) (and (= ($generated@@340 ($generated@@269 ($generated@@79 $generated@@139 $generated@@2) $generated@@609)) $generated@@609) ($generated@@156 ($generated@@269 ($generated@@79 $generated@@139 $generated@@2) $generated@@609) ($generated@@173 $generated@@610))))
 :pattern ( ($generated@@253 $generated@@609 ($generated@@173 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@139) (= (type $generated@@612) $generated@@67)) ($generated@@253 $generated@@611 ($generated@@263 $generated@@612))) (and (= ($generated@@340 ($generated@@269 ($generated@@138 $generated@@139) $generated@@611)) $generated@@611) ($generated@@156 ($generated@@269 ($generated@@138 $generated@@139) $generated@@611) ($generated@@263 $generated@@612))))
 :pattern ( ($generated@@253 $generated@@611 ($generated@@263 $generated@@612)))
)))
(assert  (=> (<= 1 $generated@@260) (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@137) (= (type $generated@@614) $generated@@80)) (= (type $generated@@615) ($generated@@138 $generated@@139))) (or ($generated@@262 $generated@@614 ($generated@@304 $generated@@615)) (and (not (= 1 $generated@@260)) (and (and (and (not (= $generated@@614 $generated@@153)) ($generated@@156 $generated@@614 $generated@@249)) ($generated@@156 $generated@@615 ($generated@@263 $generated@@45))) (not ($generated@@264 $generated@@615 ($generated@@265 $generated@@139))))))) (and (=> (not (= ($generated@@266 ($generated@@304 $generated@@615)) ($generated@@267 1))) ($generated@@262 $generated@@614 ($generated@@304 ($generated@@268 ($generated@@304 $generated@@615) ($generated@@267 1))))) (= ($generated@@135 ($generated@@261 $generated@@613) $generated@@614 ($generated@@304 $generated@@615)) (let (($generated@@616 ($generated@@269 $generated@@142 ($generated@@270 ($generated@@304 $generated@@615) ($generated@@267 0)))))
(ite (= ($generated@@266 ($generated@@304 $generated@@615)) ($generated@@267 1)) $generated@@616 (let (($generated@@617 ($generated@@135 ($generated@@261 $generated@@613) $generated@@614 ($generated@@304 ($generated@@268 ($generated@@304 $generated@@615) ($generated@@267 1))))))
(ite (< ($generated@@271 $generated@@617) ($generated@@271 $generated@@616)) $generated@@617 $generated@@616)))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@261 $generated@@613) $generated@@614 ($generated@@304 $generated@@615)))
))))
(assert (= ($generated@@75 $generated@@152) $generated@@63))
(assert (= ($generated@@599 $generated@@152) $generated@@66))
(assert (= ($generated@@75 $generated@@249) $generated@@64))
(assert (= ($generated@@599 $generated@@249) $generated@@66))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ($generated@@620 Int) ) (! (let (($generated@@621 ($generated@@141 (type $generated@@618))))
 (=> (= (type $generated@@618) ($generated@@138 $generated@@621)) (=> (and (and (<= 0 $generated@@619) (<= $generated@@619 $generated@@620)) (< $generated@@620 ($generated@@266 $generated@@618))) (= ($generated@@270 ($generated@@268 $generated@@618 $generated@@619) (- $generated@@620 $generated@@619)) ($generated@@270 $generated@@618 $generated@@620)))))
 :weight 25
 :pattern ( ($generated@@270 $generated@@618 $generated@@620) ($generated@@268 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@79 $generated@@139 $generated@@2)) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@622 ($generated@@173 $generated@@623) $generated@@624) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@139) (< 0 ($generated ($generated@@84 $generated@@622 $generated@@625)))) ($generated@@312 $generated@@625 $generated@@623 $generated@@624))
 :pattern ( ($generated@@84 $generated@@622 $generated@@625))
))))
 :pattern ( ($generated@@77 $generated@@622 ($generated@@173 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ($generated@@628 Int) ) (! (let (($generated@@629 ($generated@@141 (type $generated@@626))))
 (=> (= (type $generated@@626) ($generated@@138 $generated@@629)) (=> (and (and (<= 0 $generated@@627) (<= 0 $generated@@628)) (<= (+ $generated@@627 $generated@@628) ($generated@@266 $generated@@626))) (= ($generated@@268 ($generated@@268 $generated@@626 $generated@@627) $generated@@628) ($generated@@268 $generated@@626 (+ $generated@@627 $generated@@628))))))
 :pattern ( ($generated@@268 ($generated@@268 $generated@@626 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@160) (= (type $generated@@631) $generated@@67)) (= (type $generated@@632) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@311 $generated@@632) (and ($generated@@158 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@67) ($generated@@77 $generated@@630 ($generated@@159 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@77 $generated@@630 ($generated@@159 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@312 ($generated@@167 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@312 ($generated@@167 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@160) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@311 $generated@@636) (and ($generated@@158 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@67) ($generated@@77 $generated@@634 ($generated@@159 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@77 $generated@@634 ($generated@@159 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@312 ($generated@@168 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@312 ($generated@@168 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@139) (= (type $generated@@639) $generated@@139)) (= ($generated@@252 ($generated@@304 $generated@@638) ($generated@@304 $generated@@639)) ($generated@@304 ($generated@@252 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@252 ($generated@@304 $generated@@638) ($generated@@304 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@340 ($generated@@8 ($generated@@267 $generated@@640))) ($generated@@304 ($generated@@340 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@340 ($generated@@8 ($generated@@267 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@340 ($generated@@304 $generated@@641)) ($generated@@304 ($generated@@340 $generated@@641)))
 :pattern ( ($generated@@340 ($generated@@304 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@141 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@138 $generated@@643)) (= ($generated@@266 $generated@@642) 0)) (= $generated@@642 ($generated@@265 $generated@@643))))
 :pattern ( ($generated@@266 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@79 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@349 ($generated@@85 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@349 $generated@@644) ($generated ($generated@@84 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@349 ($generated@@85 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@649) $generated@@2)) ($generated@@77 $generated@@649 $generated@@46 $generated@@648))
 :pattern ( ($generated@@77 $generated@@649 $generated@@46 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@651) $generated@@3)) ($generated@@77 $generated@@651 $generated@@47 $generated@@650))
 :pattern ( ($generated@@77 $generated@@651 $generated@@47 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@653) $generated@@4)) ($generated@@77 $generated@@653 $generated@@44 $generated@@652))
 :pattern ( ($generated@@77 $generated@@653 $generated@@44 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@655) $generated@@142)) ($generated@@77 $generated@@655 $generated@@45 $generated@@654))
 :pattern ( ($generated@@77 $generated@@655 $generated@@45 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@657) $generated@@139)) ($generated@@77 $generated@@657 $generated@@48 $generated@@656))
 :pattern ( ($generated@@77 $generated@@657 $generated@@48 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@138 $generated@@139)) (= (type $generated@@659) $generated@@67)) (= ($generated@@156 $generated@@658 ($generated@@263 $generated@@659)) (forall (($generated@@660 Int) ) (!  (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@266 $generated@@658))) ($generated@@253 ($generated@@270 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@270 $generated@@658 $generated@@660))
))))
 :pattern ( ($generated@@156 $generated@@658 ($generated@@263 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 Int) ) (!  (=> (= (type $generated@@661) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@266 $generated@@661))) (< ($generated@@583 ($generated@@269 $generated@@160 ($generated@@270 $generated@@661 $generated@@662))) ($generated@@335 $generated@@661))))
 :pattern ( ($generated@@583 ($generated@@269 $generated@@160 ($generated@@270 $generated@@661 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@357 $generated@@139 $generated@@139)) (= (type $generated@@664) $generated@@67)) (= (type $generated@@665) $generated@@67)) ($generated@@156 $generated@@663 ($generated@@466 $generated@@664 $generated@@665))) (and (and ($generated@@156 ($generated@@355 $generated@@663) ($generated@@293 $generated@@664)) ($generated@@156 ($generated@@406 $generated@@663) ($generated@@293 $generated@@665))) ($generated@@156 ($generated@@440 $generated@@663) ($generated@@293 ($generated@@159 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@156 $generated@@663 ($generated@@466 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@375 $generated@@139 $generated@@139)) (= (type $generated@@667) $generated@@67)) (= (type $generated@@668) $generated@@67)) ($generated@@156 $generated@@666 ($generated@@474 $generated@@667 $generated@@668))) (and (and ($generated@@156 ($generated@@373 $generated@@666) ($generated@@298 $generated@@667)) ($generated@@156 ($generated@@417 $generated@@666) ($generated@@298 $generated@@668))) ($generated@@156 ($generated@@448 $generated@@666) ($generated@@298 ($generated@@159 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@156 $generated@@666 ($generated@@474 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@2) ($generated@@156 $generated@@669 $generated@@46))
 :pattern ( ($generated@@156 $generated@@669 $generated@@46))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@3) ($generated@@156 $generated@@670 $generated@@47))
 :pattern ( ($generated@@156 $generated@@670 $generated@@47))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@4) ($generated@@156 $generated@@671 $generated@@44))
 :pattern ( ($generated@@156 $generated@@671 $generated@@44))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@142) ($generated@@156 $generated@@672 $generated@@45))
 :pattern ( ($generated@@156 $generated@@672 $generated@@45))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@139) ($generated@@156 $generated@@673 $generated@@48))
 :pattern ( ($generated@@156 $generated@@673 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@674) ($generated@@138 $generated@@139)) (= (type $generated@@675) $generated@@142)) (= (type $generated@@676) $generated@@80)) (= (type $generated@@677) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@678) ($generated@@138 $generated@@139))) (= (type $generated@@679) $generated@@142)) (= (type $generated@@680) ($generated@@183 $generated@@80 $generated@@4))) (= (type $generated@@681) $generated@@142)) (= (type $generated@@682) $generated@@142)) (= (type $generated@@683) ($generated@@183 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@685 true))
(let (($generated@@686 true))
(let (($generated@@687  (=> (not (= ($generated@@266 $generated@@674) ($generated@@267 1))) (=> (and ($generated@@156 $generated@@675 $generated@@45) ($generated@@77 $generated@@676 $generated@@152 $generated@@677)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= 0 ($generated@@267 1)) (<= ($generated@@267 1) ($generated@@266 $generated@@674)))) (=> (and (<= 0 ($generated@@267 1)) (<= ($generated@@267 1) ($generated@@266 $generated@@674))) (=> (and (= $generated@@678 ($generated@@268 $generated@@674 ($generated@@267 1))) ($generated@@77 $generated@@678 ($generated@@263 $generated@@45) $generated@@677)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (not ($generated@@264 $generated@@678 ($generated@@265 $generated@@139)))) (=> (not ($generated@@264 $generated@@678 ($generated@@265 $generated@@139))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@335 $generated@@678) ($generated@@335 $generated@@674))) (=> (< ($generated@@335 $generated@@678) ($generated@@335 $generated@@674)) (=> ($generated@@262 $generated@@676 ($generated@@268 $generated@@674 ($generated@@267 1))) (=> (and (and (= $generated@@679 ($generated@@135 ($generated@@261 $generated@@140) $generated@@676 ($generated@@268 $generated@@674 ($generated@@267 1)))) ($generated@@262 $generated@@676 ($generated@@268 $generated@@674 ($generated@@267 1)))) (and ($generated@@156 $generated@@679 $generated@@45) (= $generated@@675 $generated@@679))) (and (=> (= (ControlFlow 0 5) 3) $generated@@686) (=> (= (ControlFlow 0 5) 4) $generated@@685)))))))))))))))
(let (($generated@@688 true))
(let (($generated@@689  (=> (and (= $generated@@680 ($generated@@237 $generated@@153 $generated@@677 $generated@@60 false)) ($generated@@156 $generated@@681 $generated@@45)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 ($generated@@267 0)) (< ($generated@@267 0) ($generated@@266 $generated@@674)))) (=> (and (<= 0 ($generated@@267 0)) (< ($generated@@267 0) ($generated@@266 $generated@@674))) (=> (= $generated@@682 ($generated@@269 $generated@@142 ($generated@@270 $generated@@674 ($generated@@267 0)))) (=> (and ($generated@@156 $generated@@682 $generated@@45) (= $generated@@681 $generated@@682)) (and (=> (= (ControlFlow 0 9) 2) $generated@@688) (=> (= (ControlFlow 0 9) 5) $generated@@687)))))))))
(let (($generated@@690 true))
(let (($generated@@691  (=> (and (= $generated@@683 ($generated@@182 $generated@@153 $generated@@677 $generated@@60 false)) (not ($generated@@264 $generated@@674 ($generated@@265 $generated@@139)))) (and (=> (= (ControlFlow 0 11) 1) $generated@@690) (=> (= (ControlFlow 0 11) 9) $generated@@689)))))
(let (($generated@@692  (=> (and ($generated@@311 $generated@@677) ($generated@@684 $generated@@677)) (=> (and (and (and (not (= $generated@@676 $generated@@153)) (and ($generated@@156 $generated@@676 $generated@@249) ($generated@@77 $generated@@676 $generated@@249 $generated@@677))) ($generated@@156 $generated@@674 ($generated@@263 $generated@@45))) (and (= 1 $generated@@260) (= (ControlFlow 0 12) 11))) $generated@@691))))
$generated@@692)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@T) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@256 (T@U Int) T@U)
(declare-fun $generated@@257 (T@T T@U) T@U)
(declare-fun $generated@@258 (T@U Int) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@296 (Int) T@U)
(declare-fun $generated@@299 (T@U) Bool)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@323 (T@U) Int)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@T) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@143 T@T) ) (= ($generated@@1 ($generated@@138 $generated@@143)) 15))) (forall (($generated@@144 T@T) ) (! (= ($generated@@141 ($generated@@138 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@138 $generated@@144))
))) (= ($generated@@1 $generated@@139) 16)) (= ($generated@@1 $generated@@142) 17)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@135 $generated@@145 $generated@@146 $generated@@147)) $generated@@142)
 :pattern ( ($generated@@135 $generated@@145 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@136 $generated@@148)) $generated@@137)
 :pattern ( ($generated@@136 $generated@@148))
))) (= (type $generated@@140) $generated@@137)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@137) (= (type $generated@@150) $generated@@80)) (= (type $generated@@151) ($generated@@138 $generated@@139))) (= ($generated@@135 $generated@@149 $generated@@150 $generated@@151) ($generated@@135 $generated@@140 $generated@@150 $generated@@151)))
 :pattern ( ($generated@@135 ($generated@@136 $generated@@149) $generated@@150 $generated@@151))
)))
(assert  (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) $generated@@80)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@80) (= (type $generated@@155) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@154 $generated@@152 $generated@@155)  (or (= $generated@@154 $generated@@153) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@155 $generated@@154) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@154 $generated@@152 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@78 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@160) 18) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@67) (= (type $generated@@164) $generated@@67)) (= (type $generated@@165) $generated@@160)) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@139)
 :pattern ( ($generated@@167 $generated@@169))
)) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@139)
 :pattern ( ($generated@@168 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@160) (= (type $generated@@172) $generated@@160)) true) (= ($generated@@166 $generated@@171 $generated@@172)  (and (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)) (= ($generated@@168 $generated@@171) ($generated@@168 $generated@@172)))))
 :pattern ( ($generated@@166 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@67)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@79 $generated@@139 $generated@@2)) (= (type $generated@@177) $generated@@67)) ($generated@@156 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@156 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@80) (= ($generated@@156 $generated@@180 $generated@@152)  (or (= $generated@@180 $generated@@153) (= ($generated@@178 $generated@@180) $generated@@152))))
 :pattern ( ($generated@@156 $generated@@180 $generated@@152))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 19)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@80 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@70 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@80) (= (type $generated@@231) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@232) ($generated@@69 $generated@@4))) (= (type $generated@@234) $generated@@80)) (= (type $generated@@235) ($generated@@69 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@237) $generated@@67))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@80) (= (type $generated@@239) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@238 $generated@@237 $generated@@239) ($generated@@77 $generated@@238 $generated@@152 $generated@@239)))
 :pattern ( ($generated@@77 $generated@@238 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@160)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@67) (= (type $generated@@245) $generated@@67)) (= (type $generated@@246) $generated@@139)) (= (type $generated@@247) $generated@@139)) (= ($generated@@156 ($generated@@240 $generated@@246 $generated@@247) ($generated@@159 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@156 ($generated@@240 $generated@@246 $generated@@247) ($generated@@159 $generated@@244 $generated@@245)))
)))
(assert  (and (and (and (and (and (forall (($generated@@260 T@U) ) (! (= (type ($generated@@249 $generated@@260)) $generated@@137)
 :pattern ( ($generated@@249 $generated@@260))
)) (forall (($generated@@261 T@U) ) (! (= (type ($generated@@251 $generated@@261)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@261))
))) (forall (($generated@@262 T@T) ) (! (= (type ($generated@@253 $generated@@262)) ($generated@@138 $generated@@262))
 :pattern ( ($generated@@253 $generated@@262))
))) (forall (($generated@@263 T@U) ($generated@@264 Int) ) (! (let (($generated@@265 ($generated@@141 (type $generated@@263))))
(= (type ($generated@@256 $generated@@263 $generated@@264)) ($generated@@138 $generated@@265)))
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@266 T@T) ($generated@@267 T@U) ) (! (= (type ($generated@@257 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@257 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@U) ($generated@@269 Int) ) (! (let (($generated@@270 ($generated@@141 (type $generated@@268))))
(= (type ($generated@@258 $generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@258 $generated@@268 $generated@@269))
))))
(assert  (=> (<= 1 $generated@@248) (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) $generated@@137) (= (type $generated@@272) $generated@@80)) (= (type $generated@@273) ($generated@@138 $generated@@139))) (or ($generated@@250 $generated@@272 $generated@@273) (and (not (= 1 $generated@@248)) (and (and (and (not (= $generated@@272 $generated@@153)) ($generated@@156 $generated@@272 $generated@@237)) ($generated@@156 $generated@@273 ($generated@@251 $generated@@45))) (not ($generated@@252 $generated@@273 ($generated@@253 $generated@@139))))))) (and (=> (not (= ($generated@@254 $generated@@273) ($generated@@255 1))) ($generated@@250 $generated@@272 ($generated@@256 $generated@@273 ($generated@@255 1)))) (= ($generated@@135 ($generated@@249 $generated@@271) $generated@@272 $generated@@273) (let (($generated@@274 ($generated@@257 $generated@@142 ($generated@@258 $generated@@273 ($generated@@255 0)))))
(ite (= ($generated@@254 $generated@@273) ($generated@@255 1)) $generated@@274 (let (($generated@@275 ($generated@@135 $generated@@271 $generated@@272 ($generated@@256 $generated@@273 ($generated@@255 1)))))
(ite (< ($generated@@259 $generated@@275) ($generated@@259 $generated@@274)) $generated@@275 $generated@@274)))))))
 :pattern ( ($generated@@135 ($generated@@249 $generated@@271) $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@160) (= (type $generated@@277) $generated@@160)) (= ($generated@@166 $generated@@276 $generated@@277) (= $generated@@276 $generated@@277)))
 :pattern ( ($generated@@166 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 Int) ) (! (let (($generated@@280 ($generated@@141 (type $generated@@278))))
 (=> (and (= (type $generated@@278) ($generated@@138 $generated@@280)) (= $generated@@279 0)) (= ($generated@@256 $generated@@278 $generated@@279) $generated@@278)))
 :pattern ( ($generated@@256 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@67)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@284) $generated@@67)) (= ($generated@@156 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@139) ($generated@@0 ($generated@@84 $generated@@283 $generated@@285))) ($generated@@241 $generated@@285 $generated@@284))
 :pattern ( ($generated@@84 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@156 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@67)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@289) $generated@@67)) (= ($generated@@156 $generated@@288 ($generated@@286 $generated@@289)) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@139) ($generated@@0 ($generated@@84 $generated@@288 $generated@@290))) ($generated@@241 $generated@@290 $generated@@289))
 :pattern ( ($generated@@84 $generated@@288 $generated@@290))
))))
 :pattern ( ($generated@@156 $generated@@288 ($generated@@286 $generated@@289)))
)))
(assert (forall (($generated@@291 Int) ) (! (= ($generated@@255 $generated@@291) $generated@@291)
 :pattern ( ($generated@@255 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 (type $generated@@293)))
(= (type ($generated@@292 $generated@@293)) $generated@@294))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= ($generated@@292 $generated@@295) $generated@@295)
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert (forall (($generated@@297 Int) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@142)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 Int) ) (!  (=> (and (<= 0 $generated@@298) (< $generated@@298 65536)) (= ($generated@@259 ($generated@@296 $generated@@298)) $generated@@298))
 :pattern ( ($generated@@296 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@67) (= (type $generated@@302) $generated@@67)) (= (type $generated@@303) $generated@@139)) (= (type $generated@@304) $generated@@139)) (= (type $generated@@305) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@299 $generated@@305)) (= ($generated@@77 ($generated@@240 $generated@@303 $generated@@304) ($generated@@159 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@77 ($generated@@240 $generated@@303 $generated@@304) ($generated@@159 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 Int) ) (! (let (($generated@@308 ($generated@@141 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@138 $generated@@308)) (=> (and (<= 0 $generated@@307) (<= $generated@@307 ($generated@@254 $generated@@306))) (= ($generated@@254 ($generated@@256 $generated@@306 $generated@@307)) (- ($generated@@254 $generated@@306) $generated@@307)))))
 :pattern ( ($generated@@254 ($generated@@256 $generated@@306 $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@71)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@160) (= ($generated@@158 $generated@@311) (= ($generated@@309 $generated@@311) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@141 (type $generated@@312))))
 (=> (and (= (type $generated@@312) ($generated@@138 $generated@@314)) (= (type $generated@@313) ($generated@@138 $generated@@314))) (= ($generated@@252 $generated@@312 $generated@@313)  (and (= ($generated@@254 $generated@@312) ($generated@@254 $generated@@313)) (forall (($generated@@315 Int) ) (!  (=> (and (<= 0 $generated@@315) (< $generated@@315 ($generated@@254 $generated@@312))) (= ($generated@@258 $generated@@312 $generated@@315) ($generated@@258 $generated@@313 $generated@@315)))
 :pattern ( ($generated@@258 $generated@@312 $generated@@315))
 :pattern ( ($generated@@258 $generated@@313 $generated@@315))
))))))
 :pattern ( ($generated@@252 $generated@@312 $generated@@313))
)))
(assert  (=> (<= 1 $generated@@248) (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (= (type $generated@@316) $generated@@137) (= (type $generated@@317) $generated@@80)) (= (type $generated@@318) ($generated@@138 $generated@@139))) (or ($generated@@250 $generated@@317 $generated@@318) (and (not (= 1 $generated@@248)) (and (and (and (not (= $generated@@317 $generated@@153)) ($generated@@156 $generated@@317 $generated@@237)) ($generated@@156 $generated@@318 ($generated@@251 $generated@@45))) (not ($generated@@252 $generated@@318 ($generated@@253 $generated@@139))))))) ($generated@@156 ($generated@@135 $generated@@316 $generated@@317 $generated@@318) $generated@@45))
 :pattern ( ($generated@@135 $generated@@316 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@160) ($generated@@158 $generated@@319)) (exists (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (and (and (= (type $generated@@320) $generated@@139) (= (type $generated@@321) $generated@@139)) (= $generated@@319 ($generated@@240 $generated@@320 $generated@@321)))
 :no-pattern (type $generated@@320)
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
)))
 :pattern ( ($generated@@158 $generated@@319))
)))
(assert (forall (($generated@@322 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@322)) 0)
 :pattern ( ($generated@@253 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 Int) ) (! (let (($generated@@326 ($generated@@141 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@138 $generated@@326)) (=> (and (< 0 $generated@@325) (<= $generated@@325 ($generated@@254 $generated@@324))) (< ($generated@@323 ($generated@@256 $generated@@324 $generated@@325)) ($generated@@323 $generated@@324)))))
 :pattern ( ($generated@@323 ($generated@@256 $generated@@324 $generated@@325)))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@142) (and (and (= ($generated@@296 ($generated@@259 $generated@@327)) $generated@@327) (<= 0 ($generated@@259 $generated@@327))) (< ($generated@@259 $generated@@327) 65536)))
 :pattern ( ($generated@@259 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@139)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@67) (= (type $generated@@332) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@300 ($generated@@328 $generated@@330) $generated@@331 $generated@@332) ($generated@@77 $generated@@330 $generated@@331 $generated@@332)))
 :pattern ( ($generated@@300 ($generated@@328 $generated@@330) $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 Int) ($generated@@335 Int) ) (! (let (($generated@@336 ($generated@@141 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@138 $generated@@336)) (=> (and (and (<= 0 $generated@@334) (<= 0 $generated@@335)) (< $generated@@335 (- ($generated@@254 $generated@@333) $generated@@334))) (= ($generated@@258 ($generated@@256 $generated@@333 $generated@@334) $generated@@335) ($generated@@258 $generated@@333 (+ $generated@@335 $generated@@334))))))
 :weight 25
 :pattern ( ($generated@@258 ($generated@@256 $generated@@333 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@79 $generated@@339 $generated@@2))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@82 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@79 $generated@@341 $generated@@2)) (and (= (= ($generated@@337 $generated@@340) 0) (= $generated@@340 ($generated@@338 $generated@@341))) (=> (not (= ($generated@@337 $generated@@340) 0)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) (< 0 ($generated ($generated@@84 $generated@@340 $generated@@342))))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 20)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@79 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@84 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@84 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 21)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@79 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@84 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@84 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@82 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@79 $generated@@380 $generated@@2)) (= ($generated@@174 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (and (<= 0 ($generated ($generated@@84 $generated@@379 $generated@@381))) (<= ($generated ($generated@@84 $generated@@379 $generated@@381)) ($generated@@337 $generated@@379))))
 :pattern ( ($generated@@84 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@174 $generated@@379))
)))
(assert  (=> (<= 1 $generated@@248) (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@382) $generated@@137) (= (type $generated@@383) $generated@@80)) (= (type $generated@@384) ($generated@@138 $generated@@139))) (or ($generated@@250 ($generated@@292 $generated@@383) ($generated@@292 $generated@@384)) (and (not (= 1 $generated@@248)) (and (and (and (not (= $generated@@383 $generated@@153)) ($generated@@156 $generated@@383 $generated@@237)) ($generated@@156 $generated@@384 ($generated@@251 $generated@@45))) (not ($generated@@252 $generated@@384 ($generated@@253 $generated@@139))))))) (and (=> (not (= ($generated@@254 ($generated@@292 $generated@@384)) ($generated@@255 1))) ($generated@@250 ($generated@@292 $generated@@383) ($generated@@292 ($generated@@256 ($generated@@292 $generated@@384) ($generated@@255 1))))) (= ($generated@@135 ($generated@@249 $generated@@382) ($generated@@292 $generated@@383) ($generated@@292 $generated@@384)) (let (($generated@@385 ($generated@@257 $generated@@142 ($generated@@258 ($generated@@292 $generated@@384) ($generated@@255 0)))))
(ite (= ($generated@@254 ($generated@@292 $generated@@384)) ($generated@@255 1)) $generated@@385 (let (($generated@@386 ($generated@@292 ($generated@@135 ($generated@@249 $generated@@382) ($generated@@292 $generated@@383) ($generated@@292 ($generated@@256 ($generated@@292 $generated@@384) ($generated@@255 1)))))))
(ite (< ($generated@@259 $generated@@386) ($generated@@259 $generated@@385)) $generated@@386 $generated@@385)))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@249 $generated@@382) ($generated@@292 $generated@@383) ($generated@@292 $generated@@384)))
))))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@139) ($generated@@241 $generated@@387 $generated@@152)) (and (= ($generated@@328 ($generated@@257 $generated@@80 $generated@@387)) $generated@@387) ($generated@@156 ($generated@@257 $generated@@80 $generated@@387) $generated@@152)))
 :pattern ( ($generated@@241 $generated@@387 $generated@@152))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@139) ($generated@@241 $generated@@388 $generated@@237)) (and (= ($generated@@328 ($generated@@257 $generated@@80 $generated@@388)) $generated@@388) ($generated@@156 ($generated@@257 $generated@@80 $generated@@388) $generated@@237)))
 :pattern ( ($generated@@241 $generated@@388 $generated@@237))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@80) (= ($generated@@156 $generated@@389 $generated@@237)  (and ($generated@@156 $generated@@389 $generated@@152) (not (= $generated@@389 $generated@@153)))))
 :pattern ( ($generated@@156 $generated@@389 $generated@@237))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@347 (type $generated@@390))))
(let (($generated@@392 ($generated@@346 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@345 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@344 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@343 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@347 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@79 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@347 (type $generated@@397))))
(let (($generated@@399 ($generated@@346 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@345 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@344 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@84 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@365 (type $generated@@401))))
(let (($generated@@403 ($generated@@364 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@363 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@362 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) ($generated@@0 ($generated@@84 ($generated@@361 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@361 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@365 (type $generated@@406))))
(= (type ($generated@@405 $generated@@406)) ($generated@@79 $generated@@407 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@365 (type $generated@@408))))
(let (($generated@@410 ($generated@@364 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@363 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@362 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@409) ($generated@@0 ($generated@@84 ($generated@@405 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@405 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) $generated@@137) (= (type $generated@@413) $generated@@80)) (= (type $generated@@414) ($generated@@138 $generated@@139))) (= ($generated@@135 ($generated@@249 $generated@@412) $generated@@413 $generated@@414) ($generated@@135 $generated@@412 $generated@@413 $generated@@414)))
 :pattern ( ($generated@@135 ($generated@@249 $generated@@412) $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@79 $generated@@139 $generated@@2)) (= (type $generated@@416) $generated@@67)) (= ($generated@@156 $generated@@415 ($generated@@173 $generated@@416)) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@139) (< 0 ($generated ($generated@@84 $generated@@415 $generated@@417)))) ($generated@@241 $generated@@417 $generated@@416))
 :pattern ( ($generated@@84 $generated@@415 $generated@@417))
))))
 :pattern ( ($generated@@156 $generated@@415 ($generated@@173 $generated@@416)))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@418 ($generated@@281 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@139) ($generated@@0 ($generated@@84 $generated@@418 $generated@@421))) ($generated@@300 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@84 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@418 ($generated@@281 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@423) $generated@@67)) (= (type $generated@@424) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@422 ($generated@@286 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@139) ($generated@@0 ($generated@@84 $generated@@422 $generated@@425))) ($generated@@300 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@84 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@77 $generated@@422 ($generated@@286 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@84 ($generated@@338 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@84 ($generated@@338 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@79 $generated@@139 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@347 (type $generated@@431))))
(let (($generated@@433 ($generated@@346 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@79 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@345 $generated@@139 $generated@@139)) (= (type $generated@@435) $generated@@139)) (= ($generated@@0 ($generated@@84 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@84 ($generated@@343 $generated@@434) ($generated@@167 ($generated@@257 $generated@@160 $generated@@435)))) (= ($generated@@84 ($generated@@429 $generated@@434) ($generated@@167 ($generated@@257 $generated@@160 $generated@@435))) ($generated@@168 ($generated@@257 $generated@@160 $generated@@435))))))
 :pattern ( ($generated@@84 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@79 $generated@@139 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@365 (type $generated@@439))))
(let (($generated@@441 ($generated@@364 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@79 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@363 $generated@@139 $generated@@139)) (= (type $generated@@443) $generated@@139)) (= ($generated@@0 ($generated@@84 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@84 ($generated@@361 $generated@@442) ($generated@@167 ($generated@@257 $generated@@160 $generated@@443)))) (= ($generated@@84 ($generated@@437 $generated@@442) ($generated@@167 ($generated@@257 $generated@@160 $generated@@443))) ($generated@@168 ($generated@@257 $generated@@160 $generated@@443))))))
 :pattern ( ($generated@@84 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@346 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@345 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@84 ($generated@@394 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@84 ($generated@@343 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@84 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@444) $generated@@448))
 :pattern ( ($generated@@84 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@364 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@363 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@84 ($generated@@405 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@84 ($generated@@361 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@84 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@449) $generated@@453))
 :pattern ( ($generated@@84 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@84 ($generated@@405 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@345 $generated@@139 $generated@@139)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) $generated@@67)) (= (type $generated@@460) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@457) $generated@@461))) (and ($generated@@300 ($generated@@84 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@300 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@84 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@77 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@363 $generated@@139 $generated@@139)) (= (type $generated@@466) $generated@@67)) (= (type $generated@@467) $generated@@67)) (= (type $generated@@468) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@361 $generated@@465) $generated@@469))) (and ($generated@@300 ($generated@@84 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@300 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@84 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@77 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@141 (type $generated@@470))))
 (=> (and (and (= (type $generated@@470) ($generated@@138 $generated@@472)) (= (type $generated@@471) ($generated@@138 $generated@@472))) ($generated@@252 $generated@@470 $generated@@471)) (= $generated@@470 $generated@@471)))
 :pattern ( ($generated@@252 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@474 T@T) ) (! (= (type ($generated@@473 $generated@@474)) ($generated@@79 $generated@@474 $generated@@4))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@365 (type $generated@@475))))
(let (($generated@@477 ($generated@@364 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@363 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@362 $generated@@477 $generated@@476)) (= ($generated@@361 $generated@@475) ($generated@@473 $generated@@477))))))
 :pattern ( ($generated@@361 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@365 (type $generated@@478))))
(let (($generated@@480 ($generated@@364 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@363 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@362 $generated@@480 $generated@@479)) (= ($generated@@405 $generated@@478) ($generated@@473 $generated@@479))))))
 :pattern ( ($generated@@405 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@365 (type $generated@@481))))
(let (($generated@@483 ($generated@@364 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@363 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@362 $generated@@483 $generated@@482)) (= ($generated@@436 $generated@@481) ($generated@@473 $generated@@139))))))
 :pattern ( ($generated@@436 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@347 (type $generated@@484))))
(let (($generated@@486 ($generated@@346 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@345 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@344 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@139) (= (type $generated@@488) $generated@@139)) ($generated@@0 ($generated@@84 ($generated@@428 $generated@@484) ($generated@@328 ($generated@@240 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@428 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@365 (type $generated@@489))))
(let (($generated@@491 ($generated@@364 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@363 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@362 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@139) (= (type $generated@@493) $generated@@139)) ($generated@@0 ($generated@@84 ($generated@@436 $generated@@489) ($generated@@328 ($generated@@240 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@436 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@139) ($generated@@241 $generated@@494 $generated@@46)) (and (= ($generated@@328 ($generated@@257 $generated@@2 $generated@@494)) $generated@@494) ($generated@@156 ($generated@@257 $generated@@2 $generated@@494) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@494 $generated@@46))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@139) ($generated@@241 $generated@@495 $generated@@47)) (and (= ($generated@@328 ($generated@@257 $generated@@3 $generated@@495)) $generated@@495) ($generated@@156 ($generated@@257 $generated@@3 $generated@@495) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@495 $generated@@47))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@139) ($generated@@241 $generated@@496 $generated@@44)) (and (= ($generated@@328 ($generated@@257 $generated@@4 $generated@@496)) $generated@@496) ($generated@@156 ($generated@@257 $generated@@4 $generated@@496) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@496 $generated@@44))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@139) ($generated@@241 $generated@@497 $generated@@45)) (and (= ($generated@@328 ($generated@@257 $generated@@142 $generated@@497)) $generated@@497) ($generated@@156 ($generated@@257 $generated@@142 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@241 ($generated@@328 $generated@@498) $generated@@499) ($generated@@156 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@241 ($generated@@328 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@82 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@79 $generated@@501 $generated@@2)) (<= 0 ($generated@@337 $generated@@500))))
 :pattern ( ($generated@@337 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@141 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@138 $generated@@503)) (<= 0 ($generated@@254 $generated@@502))))
 :pattern ( ($generated@@254 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@454 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@454 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@67) (= (type $generated@@511) $generated@@67)) (= ($generated@@508 ($generated@@454 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@454 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@75 ($generated@@454 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@67) (= (type $generated@@517) $generated@@67)) (= ($generated@@514 ($generated@@462 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@462 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (= ($generated@@75 ($generated@@462 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@139) (= (type $generated@@525) $generated@@139)) (= ($generated@@309 ($generated@@240 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@67) (= (type $generated@@529) $generated@@67)) (= ($generated@@526 ($generated@@159 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@159 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= ($generated@@530 ($generated@@159 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@159 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@139) (= (type $generated@@535) $generated@@139)) (= ($generated@@167 ($generated@@240 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@240 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@139) (= (type $generated@@537) $generated@@139)) (= ($generated@@168 ($generated@@240 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@240 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@138 $generated@@139)) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@538 ($generated@@251 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@254 $generated@@538))) ($generated@@300 ($generated@@258 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@258 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@77 $generated@@538 ($generated@@251 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@78 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@78 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@281 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@281 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@75 ($generated@@281 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@281 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@67) (= ($generated@@548 ($generated@@286 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@286 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@67) (= ($generated@@75 ($generated@@286 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@67)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@67) (= ($generated@@552 ($generated@@173 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@173 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@67) (= ($generated@@75 ($generated@@173 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@67)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@67) (= ($generated@@556 ($generated@@251 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@251 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@67) (= ($generated@@75 ($generated@@251 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@251 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@257 $generated@@561 ($generated@@328 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@328 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@345 $generated@@139 $generated@@139)) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) $generated@@67)) (= ($generated@@156 $generated@@562 ($generated@@454 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@562) $generated@@565))) (and ($generated@@241 ($generated@@84 ($generated@@429 $generated@@562) $generated@@565) $generated@@564) ($generated@@241 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@84 ($generated@@429 $generated@@562) $generated@@565))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@156 $generated@@562 ($generated@@454 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@363 $generated@@139 $generated@@139)) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) $generated@@67)) (= ($generated@@156 $generated@@566 ($generated@@462 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@361 $generated@@566) $generated@@569))) (and ($generated@@241 ($generated@@84 ($generated@@437 $generated@@566) $generated@@569) $generated@@568) ($generated@@241 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@84 ($generated@@437 $generated@@566) $generated@@569))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@156 $generated@@566 ($generated@@462 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@139) (= (type $generated@@573) $generated@@139)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@240 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@240 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@139) (= (type $generated@@575) $generated@@139)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@240 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@240 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@139) (= (type $generated@@577) $generated@@67)) (= (type $generated@@578) $generated@@67)) ($generated@@241 $generated@@576 ($generated@@454 $generated@@577 $generated@@578))) (and (= ($generated@@328 ($generated@@257 ($generated@@345 $generated@@139 $generated@@139) $generated@@576)) $generated@@576) ($generated@@156 ($generated@@257 ($generated@@345 $generated@@139 $generated@@139) $generated@@576) ($generated@@454 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@241 $generated@@576 ($generated@@454 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@139) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) $generated@@67)) ($generated@@241 $generated@@579 ($generated@@462 $generated@@580 $generated@@581))) (and (= ($generated@@328 ($generated@@257 ($generated@@363 $generated@@139 $generated@@139) $generated@@579)) $generated@@579) ($generated@@156 ($generated@@257 ($generated@@363 $generated@@139 $generated@@139) $generated@@579) ($generated@@462 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@241 $generated@@579 ($generated@@462 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@67) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@139)) ($generated@@241 $generated@@584 ($generated@@159 $generated@@582 $generated@@583))) (and (= ($generated@@328 ($generated@@257 $generated@@160 $generated@@584)) $generated@@584) ($generated@@156 ($generated@@257 $generated@@160 $generated@@584) ($generated@@159 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@241 $generated@@584 ($generated@@159 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@84 ($generated@@473 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@84 ($generated@@473 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@72)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@67)) (and (= ($generated@@75 ($generated@@159 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@159 $generated@@589 $generated@@590)) $generated@@65)))
 :pattern ( ($generated@@159 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@160) (= ($generated@@570 ($generated@@328 $generated@@591)) ($generated@@571 $generated@@591)))
 :pattern ( ($generated@@570 ($generated@@328 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@139) ($generated@@241 $generated@@592 ($generated@@78 0))) (and (= ($generated@@328 ($generated@@257 $generated@@2 $generated@@592)) $generated@@592) ($generated@@156 ($generated@@257 ($generated@@79 $generated@@139 $generated@@4) $generated@@592) ($generated@@78 0))))
 :pattern ( ($generated@@241 $generated@@592 ($generated@@78 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@139) (= (type $generated@@594) $generated@@67)) ($generated@@241 $generated@@593 ($generated@@281 $generated@@594))) (and (= ($generated@@328 ($generated@@257 ($generated@@79 $generated@@139 $generated@@4) $generated@@593)) $generated@@593) ($generated@@156 ($generated@@257 ($generated@@79 $generated@@139 $generated@@4) $generated@@593) ($generated@@281 $generated@@594))))
 :pattern ( ($generated@@241 $generated@@593 ($generated@@281 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@139) (= (type $generated@@596) $generated@@67)) ($generated@@241 $generated@@595 ($generated@@286 $generated@@596))) (and (= ($generated@@328 ($generated@@257 ($generated@@79 $generated@@139 $generated@@4) $generated@@595)) $generated@@595) ($generated@@156 ($generated@@257 ($generated@@79 $generated@@139 $generated@@4) $generated@@595) ($generated@@286 $generated@@596))))
 :pattern ( ($generated@@241 $generated@@595 ($generated@@286 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@139) (= (type $generated@@598) $generated@@67)) ($generated@@241 $generated@@597 ($generated@@173 $generated@@598))) (and (= ($generated@@328 ($generated@@257 ($generated@@79 $generated@@139 $generated@@2) $generated@@597)) $generated@@597) ($generated@@156 ($generated@@257 ($generated@@79 $generated@@139 $generated@@2) $generated@@597) ($generated@@173 $generated@@598))))
 :pattern ( ($generated@@241 $generated@@597 ($generated@@173 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@139) (= (type $generated@@600) $generated@@67)) ($generated@@241 $generated@@599 ($generated@@251 $generated@@600))) (and (= ($generated@@328 ($generated@@257 ($generated@@138 $generated@@139) $generated@@599)) $generated@@599) ($generated@@156 ($generated@@257 ($generated@@138 $generated@@139) $generated@@599) ($generated@@251 $generated@@600))))
 :pattern ( ($generated@@241 $generated@@599 ($generated@@251 $generated@@600)))
)))
(assert  (=> (<= 1 $generated@@248) (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@137) (= (type $generated@@602) $generated@@80)) (= (type $generated@@603) ($generated@@138 $generated@@139))) (or ($generated@@250 $generated@@602 ($generated@@292 $generated@@603)) (and (not (= 1 $generated@@248)) (and (and (and (not (= $generated@@602 $generated@@153)) ($generated@@156 $generated@@602 $generated@@237)) ($generated@@156 $generated@@603 ($generated@@251 $generated@@45))) (not ($generated@@252 $generated@@603 ($generated@@253 $generated@@139))))))) (and (=> (not (= ($generated@@254 ($generated@@292 $generated@@603)) ($generated@@255 1))) ($generated@@250 $generated@@602 ($generated@@292 ($generated@@256 ($generated@@292 $generated@@603) ($generated@@255 1))))) (= ($generated@@135 ($generated@@249 $generated@@601) $generated@@602 ($generated@@292 $generated@@603)) (let (($generated@@604 ($generated@@257 $generated@@142 ($generated@@258 ($generated@@292 $generated@@603) ($generated@@255 0)))))
(ite (= ($generated@@254 ($generated@@292 $generated@@603)) ($generated@@255 1)) $generated@@604 (let (($generated@@605 ($generated@@135 ($generated@@249 $generated@@601) $generated@@602 ($generated@@292 ($generated@@256 ($generated@@292 $generated@@603) ($generated@@255 1))))))
(ite (< ($generated@@259 $generated@@605) ($generated@@259 $generated@@604)) $generated@@605 $generated@@604)))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@249 $generated@@601) $generated@@602 ($generated@@292 $generated@@603)))
))))
(assert (= ($generated@@75 $generated@@152) $generated@@63))
(assert (= ($generated@@587 $generated@@152) $generated@@66))
(assert (= ($generated@@75 $generated@@237) $generated@@64))
(assert (= ($generated@@587 $generated@@237) $generated@@66))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ($generated@@608 Int) ) (! (let (($generated@@609 ($generated@@141 (type $generated@@606))))
 (=> (= (type $generated@@606) ($generated@@138 $generated@@609)) (=> (and (and (<= 0 $generated@@607) (<= $generated@@607 $generated@@608)) (< $generated@@608 ($generated@@254 $generated@@606))) (= ($generated@@258 ($generated@@256 $generated@@606 $generated@@607) (- $generated@@608 $generated@@607)) ($generated@@258 $generated@@606 $generated@@608)))))
 :weight 25
 :pattern ( ($generated@@258 $generated@@606 $generated@@608) ($generated@@256 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@79 $generated@@139 $generated@@2)) (= (type $generated@@611) $generated@@67)) (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@610 ($generated@@173 $generated@@611) $generated@@612) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@139) (< 0 ($generated ($generated@@84 $generated@@610 $generated@@613)))) ($generated@@300 $generated@@613 $generated@@611 $generated@@612))
 :pattern ( ($generated@@84 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@77 $generated@@610 ($generated@@173 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 Int) ($generated@@616 Int) ) (! (let (($generated@@617 ($generated@@141 (type $generated@@614))))
 (=> (= (type $generated@@614) ($generated@@138 $generated@@617)) (=> (and (and (<= 0 $generated@@615) (<= 0 $generated@@616)) (<= (+ $generated@@615 $generated@@616) ($generated@@254 $generated@@614))) (= ($generated@@256 ($generated@@256 $generated@@614 $generated@@615) $generated@@616) ($generated@@256 $generated@@614 (+ $generated@@615 $generated@@616))))))
 :pattern ( ($generated@@256 ($generated@@256 $generated@@614 $generated@@615) $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@160) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@299 $generated@@620) (and ($generated@@158 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@67) ($generated@@77 $generated@@618 ($generated@@159 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@77 $generated@@618 ($generated@@159 $generated@@619 $generated@@621) $generated@@620))
))))) ($generated@@300 ($generated@@167 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@300 ($generated@@167 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@160) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@299 $generated@@624) (and ($generated@@158 $generated@@622) (exists (($generated@@625 T@U) ) (!  (and (= (type $generated@@625) $generated@@67) ($generated@@77 $generated@@622 ($generated@@159 $generated@@625 $generated@@623) $generated@@624))
 :pattern ( ($generated@@77 $generated@@622 ($generated@@159 $generated@@625 $generated@@623) $generated@@624))
))))) ($generated@@300 ($generated@@168 $generated@@622) $generated@@623 $generated@@624))
 :pattern ( ($generated@@300 ($generated@@168 $generated@@622) $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@139) (= (type $generated@@627) $generated@@139)) (= ($generated@@240 ($generated@@292 $generated@@626) ($generated@@292 $generated@@627)) ($generated@@292 ($generated@@240 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@240 ($generated@@292 $generated@@626) ($generated@@292 $generated@@627)))
)))
(assert (forall (($generated@@628 Int) ) (! (= ($generated@@328 ($generated@@8 ($generated@@255 $generated@@628))) ($generated@@292 ($generated@@328 ($generated@@8 $generated@@628))))
 :pattern ( ($generated@@328 ($generated@@8 ($generated@@255 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ) (! (= ($generated@@328 ($generated@@292 $generated@@629)) ($generated@@292 ($generated@@328 $generated@@629)))
 :pattern ( ($generated@@328 ($generated@@292 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@141 (type $generated@@630))))
 (=> (and (= (type $generated@@630) ($generated@@138 $generated@@631)) (= ($generated@@254 $generated@@630) 0)) (= $generated@@630 ($generated@@253 $generated@@631))))
 :pattern ( ($generated@@254 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@633)))
 (=> (and (and (= (type $generated@@632) ($generated@@79 $generated@@635 $generated@@2)) (= (type $generated@@634) $generated@@2)) (<= 0 ($generated $generated@@634))) (= ($generated@@337 ($generated@@85 $generated@@632 $generated@@633 $generated@@634)) (+ (- ($generated@@337 $generated@@632) ($generated ($generated@@84 $generated@@632 $generated@@633))) ($generated $generated@@634)))))
 :pattern ( ($generated@@337 ($generated@@85 $generated@@632 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@637) $generated@@2)) ($generated@@77 $generated@@637 $generated@@46 $generated@@636))
 :pattern ( ($generated@@77 $generated@@637 $generated@@46 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@639) $generated@@3)) ($generated@@77 $generated@@639 $generated@@47 $generated@@638))
 :pattern ( ($generated@@77 $generated@@639 $generated@@47 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@641) $generated@@4)) ($generated@@77 $generated@@641 $generated@@44 $generated@@640))
 :pattern ( ($generated@@77 $generated@@641 $generated@@44 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@643) $generated@@142)) ($generated@@77 $generated@@643 $generated@@45 $generated@@642))
 :pattern ( ($generated@@77 $generated@@643 $generated@@45 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@645) $generated@@139)) ($generated@@77 $generated@@645 $generated@@48 $generated@@644))
 :pattern ( ($generated@@77 $generated@@645 $generated@@48 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@138 $generated@@139)) (= (type $generated@@647) $generated@@67)) (= ($generated@@156 $generated@@646 ($generated@@251 $generated@@647)) (forall (($generated@@648 Int) ) (!  (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@254 $generated@@646))) ($generated@@241 ($generated@@258 $generated@@646 $generated@@648) $generated@@647))
 :pattern ( ($generated@@258 $generated@@646 $generated@@648))
))))
 :pattern ( ($generated@@156 $generated@@646 ($generated@@251 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 Int) ) (!  (=> (= (type $generated@@649) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@254 $generated@@649))) (< ($generated@@571 ($generated@@257 $generated@@160 ($generated@@258 $generated@@649 $generated@@650))) ($generated@@323 $generated@@649))))
 :pattern ( ($generated@@571 ($generated@@257 $generated@@160 ($generated@@258 $generated@@649 $generated@@650))))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@345 $generated@@139 $generated@@139)) (= (type $generated@@652) $generated@@67)) (= (type $generated@@653) $generated@@67)) ($generated@@156 $generated@@651 ($generated@@454 $generated@@652 $generated@@653))) (and (and ($generated@@156 ($generated@@343 $generated@@651) ($generated@@281 $generated@@652)) ($generated@@156 ($generated@@394 $generated@@651) ($generated@@281 $generated@@653))) ($generated@@156 ($generated@@428 $generated@@651) ($generated@@281 ($generated@@159 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@156 $generated@@651 ($generated@@454 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@363 $generated@@139 $generated@@139)) (= (type $generated@@655) $generated@@67)) (= (type $generated@@656) $generated@@67)) ($generated@@156 $generated@@654 ($generated@@462 $generated@@655 $generated@@656))) (and (and ($generated@@156 ($generated@@361 $generated@@654) ($generated@@286 $generated@@655)) ($generated@@156 ($generated@@405 $generated@@654) ($generated@@286 $generated@@656))) ($generated@@156 ($generated@@436 $generated@@654) ($generated@@286 ($generated@@159 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@156 $generated@@654 ($generated@@462 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@2) ($generated@@156 $generated@@657 $generated@@46))
 :pattern ( ($generated@@156 $generated@@657 $generated@@46))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@3) ($generated@@156 $generated@@658 $generated@@47))
 :pattern ( ($generated@@156 $generated@@658 $generated@@47))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@4) ($generated@@156 $generated@@659 $generated@@44))
 :pattern ( ($generated@@156 $generated@@659 $generated@@44))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@142) ($generated@@156 $generated@@660 $generated@@45))
 :pattern ( ($generated@@156 $generated@@660 $generated@@45))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@139) ($generated@@156 $generated@@661 $generated@@48))
 :pattern ( ($generated@@156 $generated@@661 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@663) ($generated@@138 $generated@@139)) (= (type $generated@@664) $generated@@80)) (= (type $generated@@665) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@666) ($generated@@183 $generated@@80 $generated@@4))) (= (type $generated@@667) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@669 true))
(let (($generated@@670  (=> (and (=> (and (<= ($generated@@255 0) $generated@@662) (< $generated@@662 ($generated@@254 $generated@@663))) (<= ($generated@@259 ($generated@@135 ($generated@@249 $generated@@140) $generated@@664 $generated@@663)) ($generated@@259 ($generated@@257 $generated@@142 ($generated@@258 $generated@@663 $generated@@662))))) (= (ControlFlow 0 5) 1)) $generated@@669)))
(let (($generated@@671  (=> (and (and (<= ($generated@@255 0) $generated@@662) (< $generated@@662 ($generated@@254 $generated@@663))) (and ($generated@@77 $generated@@664 $generated@@152 $generated@@665) ($generated@@77 $generated@@663 ($generated@@251 $generated@@45) $generated@@665))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not ($generated@@252 $generated@@663 ($generated@@253 $generated@@139)))) (=> (and (not ($generated@@252 $generated@@663 ($generated@@253 $generated@@139))) ($generated@@250 $generated@@664 $generated@@663)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@254 $generated@@663)))) (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@254 $generated@@663))) (=> (and (<= ($generated@@259 ($generated@@135 ($generated@@249 $generated@@140) $generated@@664 $generated@@663)) ($generated@@259 ($generated@@257 $generated@@142 ($generated@@258 $generated@@663 $generated@@662)))) (= (ControlFlow 0 2) 1)) $generated@@669))))))))
(let (($generated@@672  (=> (and (= $generated@@666 ($generated@@182 $generated@@153 $generated@@667 $generated@@60 false)) (not (= ($generated@@254 $generated@@663) 0))) (=> (and (and ($generated@@299 $generated@@665) ($generated@@668 $generated@@665)) (= $generated@@667 $generated@@665)) (and (=> (= (ControlFlow 0 6) 2) $generated@@671) (=> (= (ControlFlow 0 6) 5) $generated@@670))))))
(let (($generated@@673  (=> (and (and (and ($generated@@299 $generated@@667) ($generated@@668 $generated@@667)) (and (not (= $generated@@664 $generated@@153)) (and ($generated@@156 $generated@@664 $generated@@237) ($generated@@77 $generated@@664 $generated@@237 $generated@@667)))) (and (and ($generated@@156 $generated@@663 ($generated@@251 $generated@@45)) ($generated@@77 $generated@@663 ($generated@@251 $generated@@45) $generated@@667)) (and (= 2 $generated@@248) (= (ControlFlow 0 7) 6)))) $generated@@672)))
$generated@@673))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@T) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@256 (T@U Int) T@U)
(declare-fun $generated@@257 (T@T T@U) T@U)
(declare-fun $generated@@258 (T@U Int) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@296 (Int) T@U)
(declare-fun $generated@@299 (T@U) Bool)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@323 (T@U) Int)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@T) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@143 T@T) ) (= ($generated@@1 ($generated@@138 $generated@@143)) 15))) (forall (($generated@@144 T@T) ) (! (= ($generated@@141 ($generated@@138 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@138 $generated@@144))
))) (= ($generated@@1 $generated@@139) 16)) (= ($generated@@1 $generated@@142) 17)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@135 $generated@@145 $generated@@146 $generated@@147)) $generated@@142)
 :pattern ( ($generated@@135 $generated@@145 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@136 $generated@@148)) $generated@@137)
 :pattern ( ($generated@@136 $generated@@148))
))) (= (type $generated@@140) $generated@@137)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@137) (= (type $generated@@150) $generated@@80)) (= (type $generated@@151) ($generated@@138 $generated@@139))) (= ($generated@@135 $generated@@149 $generated@@150 $generated@@151) ($generated@@135 $generated@@140 $generated@@150 $generated@@151)))
 :pattern ( ($generated@@135 ($generated@@136 $generated@@149) $generated@@150 $generated@@151))
)))
(assert  (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) $generated@@80)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@80) (= (type $generated@@155) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@154 $generated@@152 $generated@@155)  (or (= $generated@@154 $generated@@153) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@155 $generated@@154) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@154 $generated@@152 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@78 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@160) 18) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@67) (= (type $generated@@164) $generated@@67)) (= (type $generated@@165) $generated@@160)) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@139)
 :pattern ( ($generated@@167 $generated@@169))
)) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@139)
 :pattern ( ($generated@@168 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@160) (= (type $generated@@172) $generated@@160)) true) (= ($generated@@166 $generated@@171 $generated@@172)  (and (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)) (= ($generated@@168 $generated@@171) ($generated@@168 $generated@@172)))))
 :pattern ( ($generated@@166 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@67)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@79 $generated@@139 $generated@@2)) (= (type $generated@@177) $generated@@67)) ($generated@@156 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@156 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@80) (= ($generated@@156 $generated@@180 $generated@@152)  (or (= $generated@@180 $generated@@153) (= ($generated@@178 $generated@@180) $generated@@152))))
 :pattern ( ($generated@@156 $generated@@180 $generated@@152))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 19)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@80 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@70 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@80) (= (type $generated@@231) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@232) ($generated@@69 $generated@@4))) (= (type $generated@@234) $generated@@80)) (= (type $generated@@235) ($generated@@69 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@237) $generated@@67))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@80) (= (type $generated@@239) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@238 $generated@@237 $generated@@239) ($generated@@77 $generated@@238 $generated@@152 $generated@@239)))
 :pattern ( ($generated@@77 $generated@@238 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@160)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@67) (= (type $generated@@245) $generated@@67)) (= (type $generated@@246) $generated@@139)) (= (type $generated@@247) $generated@@139)) (= ($generated@@156 ($generated@@240 $generated@@246 $generated@@247) ($generated@@159 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@156 ($generated@@240 $generated@@246 $generated@@247) ($generated@@159 $generated@@244 $generated@@245)))
)))
(assert  (and (and (and (and (and (forall (($generated@@260 T@U) ) (! (= (type ($generated@@249 $generated@@260)) $generated@@137)
 :pattern ( ($generated@@249 $generated@@260))
)) (forall (($generated@@261 T@U) ) (! (= (type ($generated@@251 $generated@@261)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@261))
))) (forall (($generated@@262 T@T) ) (! (= (type ($generated@@253 $generated@@262)) ($generated@@138 $generated@@262))
 :pattern ( ($generated@@253 $generated@@262))
))) (forall (($generated@@263 T@U) ($generated@@264 Int) ) (! (let (($generated@@265 ($generated@@141 (type $generated@@263))))
(= (type ($generated@@256 $generated@@263 $generated@@264)) ($generated@@138 $generated@@265)))
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@266 T@T) ($generated@@267 T@U) ) (! (= (type ($generated@@257 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@257 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@U) ($generated@@269 Int) ) (! (let (($generated@@270 ($generated@@141 (type $generated@@268))))
(= (type ($generated@@258 $generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@258 $generated@@268 $generated@@269))
))))
(assert  (=> (<= 1 $generated@@248) (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) $generated@@137) (= (type $generated@@272) $generated@@80)) (= (type $generated@@273) ($generated@@138 $generated@@139))) (or ($generated@@250 $generated@@272 $generated@@273) (and (not (= 1 $generated@@248)) (and (and (and (not (= $generated@@272 $generated@@153)) ($generated@@156 $generated@@272 $generated@@237)) ($generated@@156 $generated@@273 ($generated@@251 $generated@@45))) (not ($generated@@252 $generated@@273 ($generated@@253 $generated@@139))))))) (and (=> (not (= ($generated@@254 $generated@@273) ($generated@@255 1))) ($generated@@250 $generated@@272 ($generated@@256 $generated@@273 ($generated@@255 1)))) (= ($generated@@135 ($generated@@249 $generated@@271) $generated@@272 $generated@@273) (let (($generated@@274 ($generated@@257 $generated@@142 ($generated@@258 $generated@@273 ($generated@@255 0)))))
(ite (= ($generated@@254 $generated@@273) ($generated@@255 1)) $generated@@274 (let (($generated@@275 ($generated@@135 $generated@@271 $generated@@272 ($generated@@256 $generated@@273 ($generated@@255 1)))))
(ite (< ($generated@@259 $generated@@275) ($generated@@259 $generated@@274)) $generated@@275 $generated@@274)))))))
 :pattern ( ($generated@@135 ($generated@@249 $generated@@271) $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@160) (= (type $generated@@277) $generated@@160)) (= ($generated@@166 $generated@@276 $generated@@277) (= $generated@@276 $generated@@277)))
 :pattern ( ($generated@@166 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 Int) ) (! (let (($generated@@280 ($generated@@141 (type $generated@@278))))
 (=> (and (= (type $generated@@278) ($generated@@138 $generated@@280)) (= $generated@@279 0)) (= ($generated@@256 $generated@@278 $generated@@279) $generated@@278)))
 :pattern ( ($generated@@256 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@67)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@284) $generated@@67)) (= ($generated@@156 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@139) ($generated@@0 ($generated@@84 $generated@@283 $generated@@285))) ($generated@@241 $generated@@285 $generated@@284))
 :pattern ( ($generated@@84 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@156 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@67)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@289) $generated@@67)) (= ($generated@@156 $generated@@288 ($generated@@286 $generated@@289)) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@139) ($generated@@0 ($generated@@84 $generated@@288 $generated@@290))) ($generated@@241 $generated@@290 $generated@@289))
 :pattern ( ($generated@@84 $generated@@288 $generated@@290))
))))
 :pattern ( ($generated@@156 $generated@@288 ($generated@@286 $generated@@289)))
)))
(assert (forall (($generated@@291 Int) ) (! (= ($generated@@255 $generated@@291) $generated@@291)
 :pattern ( ($generated@@255 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 (type $generated@@293)))
(= (type ($generated@@292 $generated@@293)) $generated@@294))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= ($generated@@292 $generated@@295) $generated@@295)
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert (forall (($generated@@297 Int) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@142)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 Int) ) (!  (=> (and (<= 0 $generated@@298) (< $generated@@298 65536)) (= ($generated@@259 ($generated@@296 $generated@@298)) $generated@@298))
 :pattern ( ($generated@@296 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@67) (= (type $generated@@302) $generated@@67)) (= (type $generated@@303) $generated@@139)) (= (type $generated@@304) $generated@@139)) (= (type $generated@@305) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@299 $generated@@305)) (= ($generated@@77 ($generated@@240 $generated@@303 $generated@@304) ($generated@@159 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@77 ($generated@@240 $generated@@303 $generated@@304) ($generated@@159 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 Int) ) (! (let (($generated@@308 ($generated@@141 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@138 $generated@@308)) (=> (and (<= 0 $generated@@307) (<= $generated@@307 ($generated@@254 $generated@@306))) (= ($generated@@254 ($generated@@256 $generated@@306 $generated@@307)) (- ($generated@@254 $generated@@306) $generated@@307)))))
 :pattern ( ($generated@@254 ($generated@@256 $generated@@306 $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@71)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@160) (= ($generated@@158 $generated@@311) (= ($generated@@309 $generated@@311) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@141 (type $generated@@312))))
 (=> (and (= (type $generated@@312) ($generated@@138 $generated@@314)) (= (type $generated@@313) ($generated@@138 $generated@@314))) (= ($generated@@252 $generated@@312 $generated@@313)  (and (= ($generated@@254 $generated@@312) ($generated@@254 $generated@@313)) (forall (($generated@@315 Int) ) (!  (=> (and (<= 0 $generated@@315) (< $generated@@315 ($generated@@254 $generated@@312))) (= ($generated@@258 $generated@@312 $generated@@315) ($generated@@258 $generated@@313 $generated@@315)))
 :pattern ( ($generated@@258 $generated@@312 $generated@@315))
 :pattern ( ($generated@@258 $generated@@313 $generated@@315))
))))))
 :pattern ( ($generated@@252 $generated@@312 $generated@@313))
)))
(assert  (=> (<= 1 $generated@@248) (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (= (type $generated@@316) $generated@@137) (= (type $generated@@317) $generated@@80)) (= (type $generated@@318) ($generated@@138 $generated@@139))) (or ($generated@@250 $generated@@317 $generated@@318) (and (not (= 1 $generated@@248)) (and (and (and (not (= $generated@@317 $generated@@153)) ($generated@@156 $generated@@317 $generated@@237)) ($generated@@156 $generated@@318 ($generated@@251 $generated@@45))) (not ($generated@@252 $generated@@318 ($generated@@253 $generated@@139))))))) ($generated@@156 ($generated@@135 $generated@@316 $generated@@317 $generated@@318) $generated@@45))
 :pattern ( ($generated@@135 $generated@@316 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@160) ($generated@@158 $generated@@319)) (exists (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (and (and (= (type $generated@@320) $generated@@139) (= (type $generated@@321) $generated@@139)) (= $generated@@319 ($generated@@240 $generated@@320 $generated@@321)))
 :no-pattern (type $generated@@320)
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
)))
 :pattern ( ($generated@@158 $generated@@319))
)))
(assert (forall (($generated@@322 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@322)) 0)
 :pattern ( ($generated@@253 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 Int) ) (! (let (($generated@@326 ($generated@@141 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@138 $generated@@326)) (=> (and (< 0 $generated@@325) (<= $generated@@325 ($generated@@254 $generated@@324))) (< ($generated@@323 ($generated@@256 $generated@@324 $generated@@325)) ($generated@@323 $generated@@324)))))
 :pattern ( ($generated@@323 ($generated@@256 $generated@@324 $generated@@325)))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@142) (and (and (= ($generated@@296 ($generated@@259 $generated@@327)) $generated@@327) (<= 0 ($generated@@259 $generated@@327))) (< ($generated@@259 $generated@@327) 65536)))
 :pattern ( ($generated@@259 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@139)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@67) (= (type $generated@@332) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@300 ($generated@@328 $generated@@330) $generated@@331 $generated@@332) ($generated@@77 $generated@@330 $generated@@331 $generated@@332)))
 :pattern ( ($generated@@300 ($generated@@328 $generated@@330) $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 Int) ($generated@@335 Int) ) (! (let (($generated@@336 ($generated@@141 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@138 $generated@@336)) (=> (and (and (<= 0 $generated@@334) (<= 0 $generated@@335)) (< $generated@@335 (- ($generated@@254 $generated@@333) $generated@@334))) (= ($generated@@258 ($generated@@256 $generated@@333 $generated@@334) $generated@@335) ($generated@@258 $generated@@333 (+ $generated@@335 $generated@@334))))))
 :weight 25
 :pattern ( ($generated@@258 ($generated@@256 $generated@@333 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@79 $generated@@339 $generated@@2))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@82 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@79 $generated@@341 $generated@@2)) (and (= (= ($generated@@337 $generated@@340) 0) (= $generated@@340 ($generated@@338 $generated@@341))) (=> (not (= ($generated@@337 $generated@@340) 0)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) (< 0 ($generated ($generated@@84 $generated@@340 $generated@@342))))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 20)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@79 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@84 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@84 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 21)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@79 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@84 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@84 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@82 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@79 $generated@@380 $generated@@2)) (= ($generated@@174 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (and (<= 0 ($generated ($generated@@84 $generated@@379 $generated@@381))) (<= ($generated ($generated@@84 $generated@@379 $generated@@381)) ($generated@@337 $generated@@379))))
 :pattern ( ($generated@@84 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@174 $generated@@379))
)))
(assert  (=> (<= 1 $generated@@248) (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@382) $generated@@137) (= (type $generated@@383) $generated@@80)) (= (type $generated@@384) ($generated@@138 $generated@@139))) (or ($generated@@250 ($generated@@292 $generated@@383) ($generated@@292 $generated@@384)) (and (not (= 1 $generated@@248)) (and (and (and (not (= $generated@@383 $generated@@153)) ($generated@@156 $generated@@383 $generated@@237)) ($generated@@156 $generated@@384 ($generated@@251 $generated@@45))) (not ($generated@@252 $generated@@384 ($generated@@253 $generated@@139))))))) (and (=> (not (= ($generated@@254 ($generated@@292 $generated@@384)) ($generated@@255 1))) ($generated@@250 ($generated@@292 $generated@@383) ($generated@@292 ($generated@@256 ($generated@@292 $generated@@384) ($generated@@255 1))))) (= ($generated@@135 ($generated@@249 $generated@@382) ($generated@@292 $generated@@383) ($generated@@292 $generated@@384)) (let (($generated@@385 ($generated@@257 $generated@@142 ($generated@@258 ($generated@@292 $generated@@384) ($generated@@255 0)))))
(ite (= ($generated@@254 ($generated@@292 $generated@@384)) ($generated@@255 1)) $generated@@385 (let (($generated@@386 ($generated@@292 ($generated@@135 ($generated@@249 $generated@@382) ($generated@@292 $generated@@383) ($generated@@292 ($generated@@256 ($generated@@292 $generated@@384) ($generated@@255 1)))))))
(ite (< ($generated@@259 $generated@@386) ($generated@@259 $generated@@385)) $generated@@386 $generated@@385)))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@249 $generated@@382) ($generated@@292 $generated@@383) ($generated@@292 $generated@@384)))
))))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@139) ($generated@@241 $generated@@387 $generated@@152)) (and (= ($generated@@328 ($generated@@257 $generated@@80 $generated@@387)) $generated@@387) ($generated@@156 ($generated@@257 $generated@@80 $generated@@387) $generated@@152)))
 :pattern ( ($generated@@241 $generated@@387 $generated@@152))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@139) ($generated@@241 $generated@@388 $generated@@237)) (and (= ($generated@@328 ($generated@@257 $generated@@80 $generated@@388)) $generated@@388) ($generated@@156 ($generated@@257 $generated@@80 $generated@@388) $generated@@237)))
 :pattern ( ($generated@@241 $generated@@388 $generated@@237))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@80) (= ($generated@@156 $generated@@389 $generated@@237)  (and ($generated@@156 $generated@@389 $generated@@152) (not (= $generated@@389 $generated@@153)))))
 :pattern ( ($generated@@156 $generated@@389 $generated@@237))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@347 (type $generated@@390))))
(let (($generated@@392 ($generated@@346 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@345 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@344 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@343 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@347 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@79 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@347 (type $generated@@397))))
(let (($generated@@399 ($generated@@346 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@345 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@344 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@84 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@365 (type $generated@@401))))
(let (($generated@@403 ($generated@@364 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@363 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@362 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) ($generated@@0 ($generated@@84 ($generated@@361 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@361 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@365 (type $generated@@406))))
(= (type ($generated@@405 $generated@@406)) ($generated@@79 $generated@@407 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@365 (type $generated@@408))))
(let (($generated@@410 ($generated@@364 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@363 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@362 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@409) ($generated@@0 ($generated@@84 ($generated@@405 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@405 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) $generated@@137) (= (type $generated@@413) $generated@@80)) (= (type $generated@@414) ($generated@@138 $generated@@139))) (= ($generated@@135 ($generated@@249 $generated@@412) $generated@@413 $generated@@414) ($generated@@135 $generated@@412 $generated@@413 $generated@@414)))
 :pattern ( ($generated@@135 ($generated@@249 $generated@@412) $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@79 $generated@@139 $generated@@2)) (= (type $generated@@416) $generated@@67)) (= ($generated@@156 $generated@@415 ($generated@@173 $generated@@416)) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@139) (< 0 ($generated ($generated@@84 $generated@@415 $generated@@417)))) ($generated@@241 $generated@@417 $generated@@416))
 :pattern ( ($generated@@84 $generated@@415 $generated@@417))
))))
 :pattern ( ($generated@@156 $generated@@415 ($generated@@173 $generated@@416)))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@418 ($generated@@281 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@139) ($generated@@0 ($generated@@84 $generated@@418 $generated@@421))) ($generated@@300 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@84 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@418 ($generated@@281 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@79 $generated@@139 $generated@@4)) (= (type $generated@@423) $generated@@67)) (= (type $generated@@424) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@422 ($generated@@286 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@139) ($generated@@0 ($generated@@84 $generated@@422 $generated@@425))) ($generated@@300 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@84 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@77 $generated@@422 ($generated@@286 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@84 ($generated@@338 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@84 ($generated@@338 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@79 $generated@@139 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@347 (type $generated@@431))))
(let (($generated@@433 ($generated@@346 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@79 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@345 $generated@@139 $generated@@139)) (= (type $generated@@435) $generated@@139)) (= ($generated@@0 ($generated@@84 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@84 ($generated@@343 $generated@@434) ($generated@@167 ($generated@@257 $generated@@160 $generated@@435)))) (= ($generated@@84 ($generated@@429 $generated@@434) ($generated@@167 ($generated@@257 $generated@@160 $generated@@435))) ($generated@@168 ($generated@@257 $generated@@160 $generated@@435))))))
 :pattern ( ($generated@@84 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@79 $generated@@139 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@365 (type $generated@@439))))
(let (($generated@@441 ($generated@@364 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@79 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@363 $generated@@139 $generated@@139)) (= (type $generated@@443) $generated@@139)) (= ($generated@@0 ($generated@@84 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@84 ($generated@@361 $generated@@442) ($generated@@167 ($generated@@257 $generated@@160 $generated@@443)))) (= ($generated@@84 ($generated@@437 $generated@@442) ($generated@@167 ($generated@@257 $generated@@160 $generated@@443))) ($generated@@168 ($generated@@257 $generated@@160 $generated@@443))))))
 :pattern ( ($generated@@84 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@346 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@345 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@84 ($generated@@394 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@84 ($generated@@343 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@84 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@444) $generated@@448))
 :pattern ( ($generated@@84 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@364 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@363 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@84 ($generated@@405 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@84 ($generated@@361 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@84 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@449) $generated@@453))
 :pattern ( ($generated@@84 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@84 ($generated@@405 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@345 $generated@@139 $generated@@139)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) $generated@@67)) (= (type $generated@@460) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@457) $generated@@461))) (and ($generated@@300 ($generated@@84 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@300 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@84 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@77 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@363 $generated@@139 $generated@@139)) (= (type $generated@@466) $generated@@67)) (= (type $generated@@467) $generated@@67)) (= (type $generated@@468) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@361 $generated@@465) $generated@@469))) (and ($generated@@300 ($generated@@84 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@300 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@84 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@77 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@141 (type $generated@@470))))
 (=> (and (and (= (type $generated@@470) ($generated@@138 $generated@@472)) (= (type $generated@@471) ($generated@@138 $generated@@472))) ($generated@@252 $generated@@470 $generated@@471)) (= $generated@@470 $generated@@471)))
 :pattern ( ($generated@@252 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@474 T@T) ) (! (= (type ($generated@@473 $generated@@474)) ($generated@@79 $generated@@474 $generated@@4))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@365 (type $generated@@475))))
(let (($generated@@477 ($generated@@364 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@363 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@362 $generated@@477 $generated@@476)) (= ($generated@@361 $generated@@475) ($generated@@473 $generated@@477))))))
 :pattern ( ($generated@@361 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@365 (type $generated@@478))))
(let (($generated@@480 ($generated@@364 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@363 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@362 $generated@@480 $generated@@479)) (= ($generated@@405 $generated@@478) ($generated@@473 $generated@@479))))))
 :pattern ( ($generated@@405 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@365 (type $generated@@481))))
(let (($generated@@483 ($generated@@364 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@363 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@362 $generated@@483 $generated@@482)) (= ($generated@@436 $generated@@481) ($generated@@473 $generated@@139))))))
 :pattern ( ($generated@@436 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@347 (type $generated@@484))))
(let (($generated@@486 ($generated@@346 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@345 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@344 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@139) (= (type $generated@@488) $generated@@139)) ($generated@@0 ($generated@@84 ($generated@@428 $generated@@484) ($generated@@328 ($generated@@240 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@428 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@365 (type $generated@@489))))
(let (($generated@@491 ($generated@@364 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@363 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@362 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@139) (= (type $generated@@493) $generated@@139)) ($generated@@0 ($generated@@84 ($generated@@436 $generated@@489) ($generated@@328 ($generated@@240 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@436 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@139) ($generated@@241 $generated@@494 $generated@@46)) (and (= ($generated@@328 ($generated@@257 $generated@@2 $generated@@494)) $generated@@494) ($generated@@156 ($generated@@257 $generated@@2 $generated@@494) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@494 $generated@@46))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@139) ($generated@@241 $generated@@495 $generated@@47)) (and (= ($generated@@328 ($generated@@257 $generated@@3 $generated@@495)) $generated@@495) ($generated@@156 ($generated@@257 $generated@@3 $generated@@495) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@495 $generated@@47))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@139) ($generated@@241 $generated@@496 $generated@@44)) (and (= ($generated@@328 ($generated@@257 $generated@@4 $generated@@496)) $generated@@496) ($generated@@156 ($generated@@257 $generated@@4 $generated@@496) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@496 $generated@@44))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@139) ($generated@@241 $generated@@497 $generated@@45)) (and (= ($generated@@328 ($generated@@257 $generated@@142 $generated@@497)) $generated@@497) ($generated@@156 ($generated@@257 $generated@@142 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@241 ($generated@@328 $generated@@498) $generated@@499) ($generated@@156 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@241 ($generated@@328 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@82 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@79 $generated@@501 $generated@@2)) (<= 0 ($generated@@337 $generated@@500))))
 :pattern ( ($generated@@337 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@141 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@138 $generated@@503)) (<= 0 ($generated@@254 $generated@@502))))
 :pattern ( ($generated@@254 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@454 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@454 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@67) (= (type $generated@@511) $generated@@67)) (= ($generated@@508 ($generated@@454 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@454 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@75 ($generated@@454 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@67) (= (type $generated@@517) $generated@@67)) (= ($generated@@514 ($generated@@462 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@462 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (= ($generated@@75 ($generated@@462 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@139) (= (type $generated@@525) $generated@@139)) (= ($generated@@309 ($generated@@240 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@67) (= (type $generated@@529) $generated@@67)) (= ($generated@@526 ($generated@@159 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@159 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= ($generated@@530 ($generated@@159 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@159 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@139) (= (type $generated@@535) $generated@@139)) (= ($generated@@167 ($generated@@240 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@240 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@139) (= (type $generated@@537) $generated@@139)) (= ($generated@@168 ($generated@@240 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@240 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@138 $generated@@139)) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@538 ($generated@@251 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@254 $generated@@538))) ($generated@@300 ($generated@@258 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@258 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@77 $generated@@538 ($generated@@251 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@78 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@78 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@281 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@281 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@75 ($generated@@281 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@281 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@67) (= ($generated@@548 ($generated@@286 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@286 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@67) (= ($generated@@75 ($generated@@286 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@67)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@67) (= ($generated@@552 ($generated@@173 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@173 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@67) (= ($generated@@75 ($generated@@173 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@67)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@67) (= ($generated@@556 ($generated@@251 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@251 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@67) (= ($generated@@75 ($generated@@251 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@251 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@257 $generated@@561 ($generated@@328 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@328 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@345 $generated@@139 $generated@@139)) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) $generated@@67)) (= ($generated@@156 $generated@@562 ($generated@@454 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@562) $generated@@565))) (and ($generated@@241 ($generated@@84 ($generated@@429 $generated@@562) $generated@@565) $generated@@564) ($generated@@241 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@84 ($generated@@429 $generated@@562) $generated@@565))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@156 $generated@@562 ($generated@@454 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@363 $generated@@139 $generated@@139)) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) $generated@@67)) (= ($generated@@156 $generated@@566 ($generated@@462 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@139) ($generated@@0 ($generated@@84 ($generated@@361 $generated@@566) $generated@@569))) (and ($generated@@241 ($generated@@84 ($generated@@437 $generated@@566) $generated@@569) $generated@@568) ($generated@@241 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@84 ($generated@@437 $generated@@566) $generated@@569))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@156 $generated@@566 ($generated@@462 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@139) (= (type $generated@@573) $generated@@139)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@240 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@240 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@139) (= (type $generated@@575) $generated@@139)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@240 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@240 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@139) (= (type $generated@@577) $generated@@67)) (= (type $generated@@578) $generated@@67)) ($generated@@241 $generated@@576 ($generated@@454 $generated@@577 $generated@@578))) (and (= ($generated@@328 ($generated@@257 ($generated@@345 $generated@@139 $generated@@139) $generated@@576)) $generated@@576) ($generated@@156 ($generated@@257 ($generated@@345 $generated@@139 $generated@@139) $generated@@576) ($generated@@454 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@241 $generated@@576 ($generated@@454 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@139) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) $generated@@67)) ($generated@@241 $generated@@579 ($generated@@462 $generated@@580 $generated@@581))) (and (= ($generated@@328 ($generated@@257 ($generated@@363 $generated@@139 $generated@@139) $generated@@579)) $generated@@579) ($generated@@156 ($generated@@257 ($generated@@363 $generated@@139 $generated@@139) $generated@@579) ($generated@@462 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@241 $generated@@579 ($generated@@462 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@67) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@139)) ($generated@@241 $generated@@584 ($generated@@159 $generated@@582 $generated@@583))) (and (= ($generated@@328 ($generated@@257 $generated@@160 $generated@@584)) $generated@@584) ($generated@@156 ($generated@@257 $generated@@160 $generated@@584) ($generated@@159 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@241 $generated@@584 ($generated@@159 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@84 ($generated@@473 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@84 ($generated@@473 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@72)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@67)) (and (= ($generated@@75 ($generated@@159 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@159 $generated@@589 $generated@@590)) $generated@@65)))
 :pattern ( ($generated@@159 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@160) (= ($generated@@570 ($generated@@328 $generated@@591)) ($generated@@571 $generated@@591)))
 :pattern ( ($generated@@570 ($generated@@328 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@139) ($generated@@241 $generated@@592 ($generated@@78 0))) (and (= ($generated@@328 ($generated@@257 $generated@@2 $generated@@592)) $generated@@592) ($generated@@156 ($generated@@257 ($generated@@79 $generated@@139 $generated@@4) $generated@@592) ($generated@@78 0))))
 :pattern ( ($generated@@241 $generated@@592 ($generated@@78 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@139) (= (type $generated@@594) $generated@@67)) ($generated@@241 $generated@@593 ($generated@@281 $generated@@594))) (and (= ($generated@@328 ($generated@@257 ($generated@@79 $generated@@139 $generated@@4) $generated@@593)) $generated@@593) ($generated@@156 ($generated@@257 ($generated@@79 $generated@@139 $generated@@4) $generated@@593) ($generated@@281 $generated@@594))))
 :pattern ( ($generated@@241 $generated@@593 ($generated@@281 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@139) (= (type $generated@@596) $generated@@67)) ($generated@@241 $generated@@595 ($generated@@286 $generated@@596))) (and (= ($generated@@328 ($generated@@257 ($generated@@79 $generated@@139 $generated@@4) $generated@@595)) $generated@@595) ($generated@@156 ($generated@@257 ($generated@@79 $generated@@139 $generated@@4) $generated@@595) ($generated@@286 $generated@@596))))
 :pattern ( ($generated@@241 $generated@@595 ($generated@@286 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@139) (= (type $generated@@598) $generated@@67)) ($generated@@241 $generated@@597 ($generated@@173 $generated@@598))) (and (= ($generated@@328 ($generated@@257 ($generated@@79 $generated@@139 $generated@@2) $generated@@597)) $generated@@597) ($generated@@156 ($generated@@257 ($generated@@79 $generated@@139 $generated@@2) $generated@@597) ($generated@@173 $generated@@598))))
 :pattern ( ($generated@@241 $generated@@597 ($generated@@173 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@139) (= (type $generated@@600) $generated@@67)) ($generated@@241 $generated@@599 ($generated@@251 $generated@@600))) (and (= ($generated@@328 ($generated@@257 ($generated@@138 $generated@@139) $generated@@599)) $generated@@599) ($generated@@156 ($generated@@257 ($generated@@138 $generated@@139) $generated@@599) ($generated@@251 $generated@@600))))
 :pattern ( ($generated@@241 $generated@@599 ($generated@@251 $generated@@600)))
)))
(assert  (=> (<= 1 $generated@@248) (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@137) (= (type $generated@@602) $generated@@80)) (= (type $generated@@603) ($generated@@138 $generated@@139))) (or ($generated@@250 $generated@@602 ($generated@@292 $generated@@603)) (and (not (= 1 $generated@@248)) (and (and (and (not (= $generated@@602 $generated@@153)) ($generated@@156 $generated@@602 $generated@@237)) ($generated@@156 $generated@@603 ($generated@@251 $generated@@45))) (not ($generated@@252 $generated@@603 ($generated@@253 $generated@@139))))))) (and (=> (not (= ($generated@@254 ($generated@@292 $generated@@603)) ($generated@@255 1))) ($generated@@250 $generated@@602 ($generated@@292 ($generated@@256 ($generated@@292 $generated@@603) ($generated@@255 1))))) (= ($generated@@135 ($generated@@249 $generated@@601) $generated@@602 ($generated@@292 $generated@@603)) (let (($generated@@604 ($generated@@257 $generated@@142 ($generated@@258 ($generated@@292 $generated@@603) ($generated@@255 0)))))
(ite (= ($generated@@254 ($generated@@292 $generated@@603)) ($generated@@255 1)) $generated@@604 (let (($generated@@605 ($generated@@135 ($generated@@249 $generated@@601) $generated@@602 ($generated@@292 ($generated@@256 ($generated@@292 $generated@@603) ($generated@@255 1))))))
(ite (< ($generated@@259 $generated@@605) ($generated@@259 $generated@@604)) $generated@@605 $generated@@604)))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@249 $generated@@601) $generated@@602 ($generated@@292 $generated@@603)))
))))
(assert (= ($generated@@75 $generated@@152) $generated@@63))
(assert (= ($generated@@587 $generated@@152) $generated@@66))
(assert (= ($generated@@75 $generated@@237) $generated@@64))
(assert (= ($generated@@587 $generated@@237) $generated@@66))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ($generated@@608 Int) ) (! (let (($generated@@609 ($generated@@141 (type $generated@@606))))
 (=> (= (type $generated@@606) ($generated@@138 $generated@@609)) (=> (and (and (<= 0 $generated@@607) (<= $generated@@607 $generated@@608)) (< $generated@@608 ($generated@@254 $generated@@606))) (= ($generated@@258 ($generated@@256 $generated@@606 $generated@@607) (- $generated@@608 $generated@@607)) ($generated@@258 $generated@@606 $generated@@608)))))
 :weight 25
 :pattern ( ($generated@@258 $generated@@606 $generated@@608) ($generated@@256 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@79 $generated@@139 $generated@@2)) (= (type $generated@@611) $generated@@67)) (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@610 ($generated@@173 $generated@@611) $generated@@612) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@139) (< 0 ($generated ($generated@@84 $generated@@610 $generated@@613)))) ($generated@@300 $generated@@613 $generated@@611 $generated@@612))
 :pattern ( ($generated@@84 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@77 $generated@@610 ($generated@@173 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 Int) ($generated@@616 Int) ) (! (let (($generated@@617 ($generated@@141 (type $generated@@614))))
 (=> (= (type $generated@@614) ($generated@@138 $generated@@617)) (=> (and (and (<= 0 $generated@@615) (<= 0 $generated@@616)) (<= (+ $generated@@615 $generated@@616) ($generated@@254 $generated@@614))) (= ($generated@@256 ($generated@@256 $generated@@614 $generated@@615) $generated@@616) ($generated@@256 $generated@@614 (+ $generated@@615 $generated@@616))))))
 :pattern ( ($generated@@256 ($generated@@256 $generated@@614 $generated@@615) $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@160) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@299 $generated@@620) (and ($generated@@158 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@67) ($generated@@77 $generated@@618 ($generated@@159 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@77 $generated@@618 ($generated@@159 $generated@@619 $generated@@621) $generated@@620))
))))) ($generated@@300 ($generated@@167 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@300 ($generated@@167 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@160) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@299 $generated@@624) (and ($generated@@158 $generated@@622) (exists (($generated@@625 T@U) ) (!  (and (= (type $generated@@625) $generated@@67) ($generated@@77 $generated@@622 ($generated@@159 $generated@@625 $generated@@623) $generated@@624))
 :pattern ( ($generated@@77 $generated@@622 ($generated@@159 $generated@@625 $generated@@623) $generated@@624))
))))) ($generated@@300 ($generated@@168 $generated@@622) $generated@@623 $generated@@624))
 :pattern ( ($generated@@300 ($generated@@168 $generated@@622) $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@139) (= (type $generated@@627) $generated@@139)) (= ($generated@@240 ($generated@@292 $generated@@626) ($generated@@292 $generated@@627)) ($generated@@292 ($generated@@240 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@240 ($generated@@292 $generated@@626) ($generated@@292 $generated@@627)))
)))
(assert (forall (($generated@@628 Int) ) (! (= ($generated@@328 ($generated@@8 ($generated@@255 $generated@@628))) ($generated@@292 ($generated@@328 ($generated@@8 $generated@@628))))
 :pattern ( ($generated@@328 ($generated@@8 ($generated@@255 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ) (! (= ($generated@@328 ($generated@@292 $generated@@629)) ($generated@@292 ($generated@@328 $generated@@629)))
 :pattern ( ($generated@@328 ($generated@@292 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@141 (type $generated@@630))))
 (=> (and (= (type $generated@@630) ($generated@@138 $generated@@631)) (= ($generated@@254 $generated@@630) 0)) (= $generated@@630 ($generated@@253 $generated@@631))))
 :pattern ( ($generated@@254 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@633)))
 (=> (and (and (= (type $generated@@632) ($generated@@79 $generated@@635 $generated@@2)) (= (type $generated@@634) $generated@@2)) (<= 0 ($generated $generated@@634))) (= ($generated@@337 ($generated@@85 $generated@@632 $generated@@633 $generated@@634)) (+ (- ($generated@@337 $generated@@632) ($generated ($generated@@84 $generated@@632 $generated@@633))) ($generated $generated@@634)))))
 :pattern ( ($generated@@337 ($generated@@85 $generated@@632 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@637) $generated@@2)) ($generated@@77 $generated@@637 $generated@@46 $generated@@636))
 :pattern ( ($generated@@77 $generated@@637 $generated@@46 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@639) $generated@@3)) ($generated@@77 $generated@@639 $generated@@47 $generated@@638))
 :pattern ( ($generated@@77 $generated@@639 $generated@@47 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@641) $generated@@4)) ($generated@@77 $generated@@641 $generated@@44 $generated@@640))
 :pattern ( ($generated@@77 $generated@@641 $generated@@44 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@643) $generated@@142)) ($generated@@77 $generated@@643 $generated@@45 $generated@@642))
 :pattern ( ($generated@@77 $generated@@643 $generated@@45 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@645) $generated@@139)) ($generated@@77 $generated@@645 $generated@@48 $generated@@644))
 :pattern ( ($generated@@77 $generated@@645 $generated@@48 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@138 $generated@@139)) (= (type $generated@@647) $generated@@67)) (= ($generated@@156 $generated@@646 ($generated@@251 $generated@@647)) (forall (($generated@@648 Int) ) (!  (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@254 $generated@@646))) ($generated@@241 ($generated@@258 $generated@@646 $generated@@648) $generated@@647))
 :pattern ( ($generated@@258 $generated@@646 $generated@@648))
))))
 :pattern ( ($generated@@156 $generated@@646 ($generated@@251 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 Int) ) (!  (=> (= (type $generated@@649) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@254 $generated@@649))) (< ($generated@@571 ($generated@@257 $generated@@160 ($generated@@258 $generated@@649 $generated@@650))) ($generated@@323 $generated@@649))))
 :pattern ( ($generated@@571 ($generated@@257 $generated@@160 ($generated@@258 $generated@@649 $generated@@650))))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@345 $generated@@139 $generated@@139)) (= (type $generated@@652) $generated@@67)) (= (type $generated@@653) $generated@@67)) ($generated@@156 $generated@@651 ($generated@@454 $generated@@652 $generated@@653))) (and (and ($generated@@156 ($generated@@343 $generated@@651) ($generated@@281 $generated@@652)) ($generated@@156 ($generated@@394 $generated@@651) ($generated@@281 $generated@@653))) ($generated@@156 ($generated@@428 $generated@@651) ($generated@@281 ($generated@@159 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@156 $generated@@651 ($generated@@454 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@363 $generated@@139 $generated@@139)) (= (type $generated@@655) $generated@@67)) (= (type $generated@@656) $generated@@67)) ($generated@@156 $generated@@654 ($generated@@462 $generated@@655 $generated@@656))) (and (and ($generated@@156 ($generated@@361 $generated@@654) ($generated@@286 $generated@@655)) ($generated@@156 ($generated@@405 $generated@@654) ($generated@@286 $generated@@656))) ($generated@@156 ($generated@@436 $generated@@654) ($generated@@286 ($generated@@159 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@156 $generated@@654 ($generated@@462 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@2) ($generated@@156 $generated@@657 $generated@@46))
 :pattern ( ($generated@@156 $generated@@657 $generated@@46))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@3) ($generated@@156 $generated@@658 $generated@@47))
 :pattern ( ($generated@@156 $generated@@658 $generated@@47))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@4) ($generated@@156 $generated@@659 $generated@@44))
 :pattern ( ($generated@@156 $generated@@659 $generated@@44))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@142) ($generated@@156 $generated@@660 $generated@@45))
 :pattern ( ($generated@@156 $generated@@660 $generated@@45))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@139) ($generated@@156 $generated@@661 $generated@@48))
 :pattern ( ($generated@@156 $generated@@661 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 (T@U) Bool)
(declare-fun $generated@@671 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@662) ($generated@@138 $generated@@139)) (= (type $generated@@663) $generated@@80)) (= (type $generated@@664) $generated@@142)) (= (type $generated@@666) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@667) ($generated@@138 $generated@@139))) (= (type $generated@@668) ($generated@@183 $generated@@80 $generated@@4))) (= (type $generated@@669) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@671) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@672 true))
(let (($generated@@673  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@674 Int) ) (!  (=> true (=> (and (<= ($generated@@255 0) $generated@@674) (< $generated@@674 ($generated@@254 $generated@@662))) (<= ($generated@@259 ($generated@@135 ($generated@@249 ($generated@@249 $generated@@140)) $generated@@663 $generated@@662)) ($generated@@259 ($generated@@257 $generated@@142 ($generated@@258 $generated@@662 $generated@@674))))))
 :pattern ( ($generated@@257 $generated@@142 ($generated@@258 $generated@@662 $generated@@674)))
)))))
(let (($generated@@675  (and (=> (= (ControlFlow 0 5) (- 0 6)) (forall (($generated@@676 Int) ) (!  (=> true (and (=> (and (<= ($generated@@255 1) $generated@@676) (< $generated@@676 ($generated@@254 $generated@@662))) (<= ($generated@@259 $generated@@664) ($generated@@259 ($generated@@257 $generated@@142 ($generated@@258 ($generated@@256 $generated@@662 ($generated@@255 1)) (- $generated@@676 1)))))) (=> (and (<= ($generated@@255 1) $generated@@676) (< $generated@@676 ($generated@@254 $generated@@662))) (= ($generated@@257 $generated@@142 ($generated@@258 ($generated@@256 $generated@@662 ($generated@@255 1)) (- $generated@@676 1))) ($generated@@257 $generated@@142 ($generated@@258 $generated@@662 $generated@@676))))))
 :pattern ( ($generated@@257 $generated@@142 ($generated@@258 $generated@@662 $generated@@676)))
))) (=> (forall (($generated@@677 Int) ) (!  (=> true (and (=> (and (<= ($generated@@255 1) $generated@@677) (< $generated@@677 ($generated@@254 $generated@@662))) (<= ($generated@@259 $generated@@664) ($generated@@259 ($generated@@257 $generated@@142 ($generated@@258 ($generated@@256 $generated@@662 ($generated@@255 1)) (- $generated@@677 1)))))) (=> (and (<= ($generated@@255 1) $generated@@677) (< $generated@@677 ($generated@@254 $generated@@662))) (= ($generated@@257 $generated@@142 ($generated@@258 ($generated@@256 $generated@@662 ($generated@@255 1)) (- $generated@@677 1))) ($generated@@257 $generated@@142 ($generated@@258 $generated@@662 $generated@@677))))))
 :pattern ( ($generated@@257 $generated@@142 ($generated@@258 $generated@@662 $generated@@677)))
)) (=> (= (ControlFlow 0 5) 2) $generated@@673)))))
(let (($generated@@678  (=> (and (< ($generated@@259 ($generated@@257 $generated@@142 ($generated@@258 ($generated@@256 $generated@@662 ($generated@@255 1)) (- $generated@@665 1)))) ($generated@@259 $generated@@664)) (= (ControlFlow 0 12) 5)) $generated@@675)))
(let (($generated@@679  (=> (<= ($generated@@259 $generated@@664) ($generated@@259 ($generated@@257 $generated@@142 ($generated@@258 ($generated@@256 $generated@@662 ($generated@@255 1)) (- $generated@@665 1))))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (and (<= 0 ($generated@@255 1)) (<= ($generated@@255 1) ($generated@@254 $generated@@662)))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (and (<= 0 (- $generated@@665 1)) (< (- $generated@@665 1) ($generated@@254 ($generated@@256 $generated@@662 ($generated@@255 1)))))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@254 $generated@@662)))) (=> (= (ControlFlow 0 8) 5) $generated@@675)))))))
(let (($generated@@680  (=> (and (<= ($generated@@255 1) $generated@@665) (< $generated@@665 ($generated@@254 $generated@@662))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (and (<= 0 ($generated@@255 1)) (<= ($generated@@255 1) ($generated@@254 $generated@@662)))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (and (<= 0 (- $generated@@665 1)) (< (- $generated@@665 1) ($generated@@254 ($generated@@256 $generated@@662 ($generated@@255 1)))))) (and (=> (= (ControlFlow 0 13) 8) $generated@@679) (=> (= (ControlFlow 0 13) 12) $generated@@678)))))))
(let (($generated@@681  (=> (and (not (and (<= ($generated@@255 1) $generated@@665) (< $generated@@665 ($generated@@254 $generated@@662)))) (= (ControlFlow 0 7) 5)) $generated@@675)))
(let (($generated@@682  (=> (< $generated@@665 ($generated@@255 1)) (and (=> (= (ControlFlow 0 17) 13) $generated@@680) (=> (= (ControlFlow 0 17) 7) $generated@@681)))))
(let (($generated@@683  (=> (<= ($generated@@255 1) $generated@@665) (and (=> (= (ControlFlow 0 16) 13) $generated@@680) (=> (= (ControlFlow 0 16) 7) $generated@@681)))))
(let (($generated@@684  (and (=> (= (ControlFlow 0 18) 16) $generated@@683) (=> (= (ControlFlow 0 18) 17) $generated@@682))))
(let (($generated@@685  (=> (and (<= ($generated@@255 2) ($generated@@254 $generated@@662)) ($generated@@77 $generated@@663 $generated@@152 $generated@@666)) (and (=> (= (ControlFlow 0 19) (- 0 21)) (and (<= 0 ($generated@@255 1)) (<= ($generated@@255 1) ($generated@@254 $generated@@662)))) (=> (and (<= 0 ($generated@@255 1)) (<= ($generated@@255 1) ($generated@@254 $generated@@662))) (=> (and (= $generated@@667 ($generated@@256 $generated@@662 ($generated@@255 1))) ($generated@@77 $generated@@667 ($generated@@251 $generated@@45) $generated@@666)) (and (=> (= (ControlFlow 0 19) (- 0 20)) (not ($generated@@252 $generated@@667 ($generated@@253 $generated@@139)))) (=> (and (and (not ($generated@@252 $generated@@667 ($generated@@253 $generated@@139))) ($generated@@250 $generated@@663 ($generated@@256 $generated@@662 ($generated@@255 1)))) (and ($generated@@250 $generated@@663 ($generated@@256 $generated@@662 ($generated@@255 1))) (= $generated@@664 ($generated@@135 ($generated@@249 $generated@@140) $generated@@663 ($generated@@256 $generated@@662 ($generated@@255 1)))))) (and (=> (= (ControlFlow 0 19) 18) $generated@@684) (=> (= (ControlFlow 0 19) 4) $generated@@672))))))))))
(let (($generated@@686  (=> (and (< ($generated@@254 $generated@@662) ($generated@@255 2)) (= (ControlFlow 0 3) 2)) $generated@@673)))
(let (($generated@@687  (=> (= $generated@@668 ($generated@@182 $generated@@153 $generated@@669 $generated@@60 false)) (=> (and (and ($generated@@299 $generated@@666) ($generated@@670 $generated@@666)) (and (= $generated@@669 $generated@@666) (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@80) (= (type $generated@@689) ($generated@@138 $generated@@139))) (=> (and (and (and ($generated@@156 $generated@@688 $generated@@237) ($generated@@156 $generated@@689 ($generated@@251 $generated@@45))) (not (= ($generated@@254 $generated@@689) 0))) (< ($generated@@323 $generated@@689) ($generated@@323 $generated@@662))) (forall (($generated@@690 Int) ) (!  (=> true (=> (and (<= ($generated@@255 0) $generated@@690) (< $generated@@690 ($generated@@254 $generated@@689))) (<= ($generated@@259 ($generated@@135 ($generated@@249 $generated@@140) $generated@@688 $generated@@689)) ($generated@@259 ($generated@@257 $generated@@142 ($generated@@258 $generated@@689 $generated@@690))))))
 :pattern ( ($generated@@257 $generated@@142 ($generated@@258 $generated@@689 $generated@@690)))
))))
 :no-pattern (type $generated@@688)
 :no-pattern (type $generated@@689)
 :no-pattern ($generated $generated@@688)
 :no-pattern ($generated@@0 $generated@@688)
 :no-pattern ($generated $generated@@689)
 :no-pattern ($generated@@0 $generated@@689)
)))) (and (=> (= (ControlFlow 0 22) 19) $generated@@685) (=> (= (ControlFlow 0 22) 3) $generated@@686))))))
(let (($generated@@691  (=> (and ($generated@@299 $generated@@669) ($generated@@670 $generated@@669)) (=> (and (and (not (= $generated@@663 $generated@@153)) (and ($generated@@156 $generated@@663 $generated@@237) ($generated@@77 $generated@@663 $generated@@237 $generated@@669))) (and ($generated@@156 $generated@@662 ($generated@@251 $generated@@45)) ($generated@@77 $generated@@662 ($generated@@251 $generated@@45) $generated@@669))) (=> (and (and (and ($generated@@156 $generated@@671 $generated@@45) true) (= 2 $generated@@248)) (and (not (= ($generated@@254 $generated@@662) 0)) (= (ControlFlow 0 23) 22))) $generated@@687)))))
$generated@@691)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@263 (Int) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 () T@T)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U Int) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@571 (T@U T@U Int) Bool)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert  (and (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@250 $generated@@256 $generated@@257)) ($generated@@252 $generated@@258)))
 :pattern ( ($generated@@250 $generated@@256 $generated@@257))
))) (forall (($generated@@259 T@U) ) (! (= (type ($generated@@251 $generated@@259)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) ($generated@@252 $generated@@152)) (= (type $generated@@261) $generated@@152)) (= (type $generated@@262) $generated@@67)) (and ($generated@@139 $generated@@260 ($generated@@251 $generated@@262)) ($generated@@225 $generated@@261 $generated@@262))) ($generated@@139 ($generated@@250 $generated@@260 $generated@@261) ($generated@@251 $generated@@262)))
 :pattern ( ($generated@@139 ($generated@@250 $generated@@260 $generated@@261) ($generated@@251 $generated@@262)))
)))
(assert  (and (= ($generated@@1 $generated@@265) 18) (forall (($generated@@266 Int) ) (! (= (type ($generated@@263 $generated@@266)) $generated@@265)
 :pattern ( ($generated@@263 $generated@@266))
))))
(assert (forall (($generated@@267 Int) ) (!  (=> (and (<= 0 $generated@@267) (< $generated@@267 65536)) (= ($generated@@264 ($generated@@263 $generated@@267)) $generated@@267))
 :pattern ( ($generated@@263 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@67) (= (type $generated@@271) $generated@@67)) (= (type $generated@@272) $generated@@152)) (= (type $generated@@273) $generated@@152)) (= (type $generated@@274) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@268 $generated@@274)) (= ($generated@@77 ($generated@@224 $generated@@272 $generated@@273) ($generated@@142 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@272 $generated@@273) ($generated@@142 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@71)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@143) (= ($generated@@141 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@143) ($generated@@141 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@152) (= (type $generated@@280) $generated@@152)) (= $generated@@278 ($generated@@224 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@141 $generated@@278))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@281 $generated@@283)) ($generated@@252 $generated@@283))
 :pattern ( ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) 0)
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
 (=> (= (type $generated@@285) ($generated@@252 $generated@@287)) (= ($generated@@282 ($generated@@250 $generated@@285 $generated@@286)) (+ 1 ($generated@@282 $generated@@285)))))
 :pattern ( ($generated@@250 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@265) (and (and (= ($generated@@263 ($generated@@264 $generated@@288)) $generated@@288) (<= 0 ($generated@@264 $generated@@288))) (< ($generated@@264 $generated@@288) 65536)))
 :pattern ( ($generated@@264 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@152)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@67) (= (type $generated@@293) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@77 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@79 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@82 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@79 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@84 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@79 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 20)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@79 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@84 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@84 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@82 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@79 $generated@@337 $generated@@2)) (= ($generated@@158 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@84 $generated@@336 $generated@@338))) (<= ($generated ($generated@@84 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@84 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@158 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@152) ($generated@@225 $generated@@342 $generated@@135)) (and (= ($generated@@289 ($generated@@339 $generated@@80 $generated@@342)) $generated@@342) ($generated@@139 ($generated@@339 $generated@@80 $generated@@342) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@342 $generated@@135))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@152) ($generated@@225 $generated@@343 $generated@@221)) (and (= ($generated@@289 ($generated@@339 $generated@@80 $generated@@343)) $generated@@343) ($generated@@139 ($generated@@339 $generated@@80 $generated@@343) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@343 $generated@@221))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@80) (= ($generated@@139 $generated@@344 $generated@@221)  (and ($generated@@139 $generated@@344 $generated@@135) (not (= $generated@@344 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@344 $generated@@221))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@253 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@348))
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 Int) ($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
 (=> (= (type $generated@@349) ($generated@@252 $generated@@352)) (and (=> (= $generated@@350 ($generated@@282 $generated@@349)) (= ($generated@@345 ($generated@@250 $generated@@349 $generated@@351) $generated@@350) $generated@@351)) (=> (not (= $generated@@350 ($generated@@282 $generated@@349))) (= ($generated@@345 ($generated@@250 $generated@@349 $generated@@351) $generated@@350) ($generated@@345 $generated@@349 $generated@@350))))))
 :pattern ( ($generated@@345 ($generated@@250 $generated@@349 $generated@@351) $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(let (($generated@@355 ($generated@@303 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@302 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@301 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@300 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@304 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@79 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@304 (type $generated@@360))))
(let (($generated@@362 ($generated@@303 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@302 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@301 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(let (($generated@@366 ($generated@@321 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@320 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@319 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@84 ($generated@@318 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@318 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@322 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@79 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@322 (type $generated@@371))))
(let (($generated@@373 ($generated@@321 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@320 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@319 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@84 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@376) $generated@@67)) (= ($generated@@139 $generated@@375 ($generated@@157 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@375 $generated@@377)))) ($generated@@225 $generated@@377 $generated@@376))
 :pattern ( ($generated@@84 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@139 $generated@@375 ($generated@@157 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@379) $generated@@67)) (= (type $generated@@380) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@378 ($generated@@234 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@152) ($generated@@0 ($generated@@84 $generated@@378 $generated@@381))) ($generated@@269 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@84 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@77 $generated@@378 ($generated@@234 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@382 ($generated@@239 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@152) ($generated@@0 ($generated@@84 $generated@@382 $generated@@385))) ($generated@@269 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@84 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@77 $generated@@382 ($generated@@239 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@84 ($generated@@295 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@84 ($generated@@295 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@304 (type $generated@@391))))
(let (($generated@@393 ($generated@@303 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@395) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@394) ($generated@@150 ($generated@@339 $generated@@143 $generated@@395)))) (= ($generated@@84 ($generated@@389 $generated@@394) ($generated@@150 ($generated@@339 $generated@@143 $generated@@395))) ($generated@@151 ($generated@@339 $generated@@143 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@322 (type $generated@@399))))
(let (($generated@@401 ($generated@@321 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@320 $generated@@152 $generated@@152)) (= (type $generated@@403) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@318 $generated@@402) ($generated@@150 ($generated@@339 $generated@@143 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@150 ($generated@@339 $generated@@143 $generated@@403))) ($generated@@151 ($generated@@339 $generated@@143 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@303 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@302 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@321 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@320 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@368 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@318 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@318 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@417) $generated@@421))) (and ($generated@@269 ($generated@@84 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@269 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@320 $generated@@152 $generated@@152)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@318 $generated@@425) $generated@@429))) (and ($generated@@269 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@269 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@318 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@79 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@322 (type $generated@@432))))
(let (($generated@@434 ($generated@@321 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@320 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@319 $generated@@434 $generated@@433)) (= ($generated@@318 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@318 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@322 (type $generated@@435))))
(let (($generated@@437 ($generated@@321 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@320 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@319 $generated@@437 $generated@@436)) (= ($generated@@368 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@368 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@322 (type $generated@@438))))
(let (($generated@@440 ($generated@@321 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@320 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@319 $generated@@440 $generated@@439)) (= ($generated@@396 $generated@@438) ($generated@@430 $generated@@152))))))
 :pattern ( ($generated@@396 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@304 (type $generated@@441))))
(let (($generated@@443 ($generated@@303 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@302 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@301 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@152) (= (type $generated@@445) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@388 $generated@@441) ($generated@@289 ($generated@@224 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@388 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@322 (type $generated@@446))))
(let (($generated@@448 ($generated@@321 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@320 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@319 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@152) (= (type $generated@@450) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@446) ($generated@@289 ($generated@@224 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@396 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) ($generated@@225 $generated@@451 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@451)) $generated@@451) ($generated@@139 ($generated@@339 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@152) ($generated@@225 $generated@@452 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@452)) $generated@@452) ($generated@@139 ($generated@@339 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@152) ($generated@@225 $generated@@453 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@453)) $generated@@453) ($generated@@139 ($generated@@339 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@453 $generated@@44))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@152) ($generated@@225 $generated@@454 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@265 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@339 $generated@@265 $generated@@454) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@454 $generated@@45))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@225 ($generated@@289 $generated@@455) $generated@@456) ($generated@@139 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@225 ($generated@@289 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@82 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@79 $generated@@458 $generated@@2)) (<= 0 ($generated@@294 $generated@@457))))
 :pattern ( ($generated@@294 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@253 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@252 $generated@@460)) (<= 0 ($generated@@282 $generated@@459))))
 :pattern ( ($generated@@282 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@414 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@414 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@422 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@422 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@152) (= (type $generated@@482) $generated@@152)) (= ($generated@@275 ($generated@@224 $generated@@481 $generated@@482)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@142 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@142 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@142 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@142 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@152) (= (type $generated@@492) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@224 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@152) (= (type $generated@@494) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@224 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@252 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@495 ($generated@@251 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@282 $generated@@495))) ($generated@@269 ($generated@@345 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@345 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@77 $generated@@495 ($generated@@251 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@78 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@78 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@234 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@234 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@239 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@239 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@157 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@157 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@513 ($generated@@251 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@251 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@75 ($generated@@251 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@251 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@339 $generated@@518 ($generated@@289 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@289 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) (= ($generated@@139 $generated@@519 ($generated@@414 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@519) $generated@@522))) (and ($generated@@225 ($generated@@84 ($generated@@389 $generated@@519) $generated@@522) $generated@@521) ($generated@@225 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@389 $generated@@519) $generated@@522))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@139 $generated@@519 ($generated@@414 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@320 $generated@@152 $generated@@152)) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@67)) (= ($generated@@139 $generated@@523 ($generated@@422 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@318 $generated@@523) $generated@@526))) (and ($generated@@225 ($generated@@84 ($generated@@397 $generated@@523) $generated@@526) $generated@@525) ($generated@@225 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@523) $generated@@526))
 :pattern ( ($generated@@84 ($generated@@318 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@139 $generated@@523 ($generated@@422 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@152) (= (type $generated@@530) $generated@@152)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@224 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@224 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@152)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@224 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@224 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@67)) ($generated@@225 $generated@@533 ($generated@@414 $generated@@534 $generated@@535))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@152 $generated@@152) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@339 ($generated@@302 $generated@@152 $generated@@152) $generated@@533) ($generated@@414 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@533 ($generated@@414 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) ($generated@@225 $generated@@536 ($generated@@422 $generated@@537 $generated@@538))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@152 $generated@@152) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@339 ($generated@@320 $generated@@152 $generated@@152) $generated@@536) ($generated@@422 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@422 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@67) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) $generated@@152)) ($generated@@225 $generated@@541 ($generated@@142 $generated@@539 $generated@@540))) (and (= ($generated@@289 ($generated@@339 $generated@@143 $generated@@541)) $generated@@541) ($generated@@139 ($generated@@339 $generated@@143 $generated@@541) ($generated@@142 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@225 $generated@@541 ($generated@@142 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@84 ($generated@@430 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@84 ($generated@@430 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@72)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@67) (= (type $generated@@547) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@142 $generated@@546 $generated@@547)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@546 $generated@@547))
)))
(assert  (and (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@253 (type $generated@@550))))
(= (type ($generated@@548 $generated@@550)) ($generated@@252 $generated@@551)))
 :pattern ( ($generated@@548 $generated@@550))
)) (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@253 (type $generated@@552))))
(= (type ($generated@@549 $generated@@552)) $generated@@553))
 :pattern ( ($generated@@549 $generated@@552))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (=> (= (type $generated@@554) ($generated@@252 $generated@@556)) (and (= ($generated@@548 ($generated@@250 $generated@@554 $generated@@555)) $generated@@554) (= ($generated@@549 ($generated@@250 $generated@@554 $generated@@555)) $generated@@555))))
 :pattern ( ($generated@@250 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@143) (= ($generated@@527 ($generated@@289 $generated@@557)) ($generated@@528 $generated@@557)))
 :pattern ( ($generated@@527 ($generated@@289 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@152) ($generated@@225 $generated@@558 ($generated@@78 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@339 ($generated@@79 $generated@@152 $generated@@4) $generated@@558) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@558 ($generated@@78 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@152) (= (type $generated@@560) $generated@@67)) ($generated@@225 $generated@@559 ($generated@@234 $generated@@560))) (and (= ($generated@@289 ($generated@@339 ($generated@@79 $generated@@152 $generated@@4) $generated@@559)) $generated@@559) ($generated@@139 ($generated@@339 ($generated@@79 $generated@@152 $generated@@4) $generated@@559) ($generated@@234 $generated@@560))))
 :pattern ( ($generated@@225 $generated@@559 ($generated@@234 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@152) (= (type $generated@@562) $generated@@67)) ($generated@@225 $generated@@561 ($generated@@239 $generated@@562))) (and (= ($generated@@289 ($generated@@339 ($generated@@79 $generated@@152 $generated@@4) $generated@@561)) $generated@@561) ($generated@@139 ($generated@@339 ($generated@@79 $generated@@152 $generated@@4) $generated@@561) ($generated@@239 $generated@@562))))
 :pattern ( ($generated@@225 $generated@@561 ($generated@@239 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@152) (= (type $generated@@564) $generated@@67)) ($generated@@225 $generated@@563 ($generated@@157 $generated@@564))) (and (= ($generated@@289 ($generated@@339 ($generated@@79 $generated@@152 $generated@@2) $generated@@563)) $generated@@563) ($generated@@139 ($generated@@339 ($generated@@79 $generated@@152 $generated@@2) $generated@@563) ($generated@@157 $generated@@564))))
 :pattern ( ($generated@@225 $generated@@563 ($generated@@157 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@152) (= (type $generated@@566) $generated@@67)) ($generated@@225 $generated@@565 ($generated@@251 $generated@@566))) (and (= ($generated@@289 ($generated@@339 ($generated@@252 $generated@@152) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@339 ($generated@@252 $generated@@152) $generated@@565) ($generated@@251 $generated@@566))))
 :pattern ( ($generated@@225 $generated@@565 ($generated@@251 $generated@@566)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@544 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@544 $generated@@221) $generated@@66))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@567 ($generated@@157 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@567 $generated@@570)))) ($generated@@269 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@84 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@77 $generated@@567 ($generated@@157 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 Int) ) (! (let (($generated@@575 ($generated@@253 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@252 $generated@@575)) (= (type $generated@@573) ($generated@@252 $generated@@575))) (= ($generated@@571 $generated@@572 $generated@@573 $generated@@574) (forall (($generated@@576 Int) ) (!  (=> (and (<= 0 $generated@@576) (< $generated@@576 $generated@@574)) (= ($generated@@345 $generated@@572 $generated@@576) ($generated@@345 $generated@@573 $generated@@576)))
 :pattern ( ($generated@@345 $generated@@572 $generated@@576))
 :pattern ( ($generated@@345 $generated@@573 $generated@@576))
)))))
 :pattern ( ($generated@@571 $generated@@572 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@143) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@268 $generated@@579) (and ($generated@@141 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@67) ($generated@@77 $generated@@577 ($generated@@142 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@142 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@269 ($generated@@150 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@269 ($generated@@150 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@143) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@268 $generated@@583) (and ($generated@@141 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@67) ($generated@@77 $generated@@581 ($generated@@142 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@142 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@269 ($generated@@151 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@269 ($generated@@151 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@152) (= (type $generated@@586) $generated@@152)) (= ($generated@@224 ($generated@@246 $generated@@585) ($generated@@246 $generated@@586)) ($generated@@246 ($generated@@224 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@585) ($generated@@246 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@244 $generated@@587))) ($generated@@246 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@244 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@246 $generated@@588)) ($generated@@246 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@246 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@253 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@252 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@79 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@85 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@84 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@85 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@596) $generated@@2)) ($generated@@77 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@77 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@598) $generated@@3)) ($generated@@77 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@77 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@600) $generated@@4)) ($generated@@77 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@77 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@265)) ($generated@@77 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@152)) ($generated@@77 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@252 $generated@@152)) (= (type $generated@@606) $generated@@67)) (= ($generated@@139 $generated@@605 ($generated@@251 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@225 ($generated@@345 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@345 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@139 $generated@@605 ($generated@@251 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@252 $generated@@152)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@528 ($generated@@339 $generated@@143 ($generated@@345 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@528 ($generated@@339 $generated@@143 ($generated@@345 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@612) $generated@@67)) (= (type $generated@@613) $generated@@67)) ($generated@@139 $generated@@611 ($generated@@414 $generated@@612 $generated@@613))) (and (and ($generated@@139 ($generated@@300 $generated@@611) ($generated@@234 $generated@@612)) ($generated@@139 ($generated@@357 $generated@@611) ($generated@@234 $generated@@613))) ($generated@@139 ($generated@@388 $generated@@611) ($generated@@234 ($generated@@142 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@139 $generated@@611 ($generated@@414 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@152 $generated@@152)) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) $generated@@67)) ($generated@@139 $generated@@614 ($generated@@422 $generated@@615 $generated@@616))) (and (and ($generated@@139 ($generated@@318 $generated@@614) ($generated@@239 $generated@@615)) ($generated@@139 ($generated@@368 $generated@@614) ($generated@@239 $generated@@616))) ($generated@@139 ($generated@@396 $generated@@614) ($generated@@239 ($generated@@142 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@139 $generated@@614 ($generated@@422 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@139 $generated@@617 $generated@@46))
 :pattern ( ($generated@@139 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@139 $generated@@618 $generated@@47))
 :pattern ( ($generated@@139 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@139 $generated@@619 $generated@@44))
 :pattern ( ($generated@@139 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@265) ($generated@@139 $generated@@620 $generated@@45))
 :pattern ( ($generated@@139 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@152) ($generated@@139 $generated@@621 $generated@@48))
 :pattern ( ($generated@@139 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () Int)
(assert  (and (and (and (= (type $generated@@622) ($generated@@252 $generated@@152)) (= (type $generated@@623) ($generated@@167 $generated@@80 $generated@@4))) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@626) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@628  (and (=> (= (ControlFlow 0 10) (- 0 11)) (< ($generated@@264 ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 1)))) ($generated@@264 ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 2)))))) (=> (= (ControlFlow 0 10) (- 0 9)) (<= ($generated@@264 ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 2)))) ($generated@@264 ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 3)))))))))
(let (($generated@@629  (=> (and (<= ($generated@@264 ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 2)))) ($generated@@264 ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 1))))) (= (ControlFlow 0 15) 10)) $generated@@628)))
(let (($generated@@630  (=> (< ($generated@@264 ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 1)))) ($generated@@264 ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 2))))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (and (<= 0 ($generated@@244 2)) (< ($generated@@244 2) ($generated@@282 $generated@@622)))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= 0 ($generated@@244 3)) (< ($generated@@244 3) ($generated@@282 $generated@@622)))) (=> (= (ControlFlow 0 12) 10) $generated@@628))))))
(let (($generated@@631  (and (=> (= (ControlFlow 0 16) (- 0 18)) (and (<= 0 ($generated@@244 1)) (< ($generated@@244 1) ($generated@@282 $generated@@622)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 ($generated@@244 2)) (< ($generated@@244 2) ($generated@@282 $generated@@622)))) (and (=> (= (ControlFlow 0 16) 12) $generated@@630) (=> (= (ControlFlow 0 16) 15) $generated@@629))))))
(let (($generated@@632  (and (=> (= (ControlFlow 0 6) (- 0 8)) (and (<= 0 ($generated@@244 0)) (< ($generated@@244 0) ($generated@@282 $generated@@622)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 ($generated@@244 5)) (< ($generated@@244 5) ($generated@@282 $generated@@622)))) (=> (= (ControlFlow 0 6) (- 0 5)) (<= ($generated@@264 ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 0)))) ($generated@@264 ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 5))))))))))
(let (($generated@@633  (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 ($generated@@244 9)) (< ($generated@@244 9) ($generated@@282 $generated@@622)))) (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 9))) ($generated@@246 ($generated@@263 10)))))))
(let (($generated@@634  (=> (and (<= ($generated@@282 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@281 $generated@@152) ($generated@@289 ($generated@@263 104))) ($generated@@289 ($generated@@263 101))) ($generated@@289 ($generated@@263 108))) ($generated@@289 ($generated@@263 108))) ($generated@@289 ($generated@@263 111))) ($generated@@289 ($generated@@263 32))) ($generated@@289 ($generated@@263 68))) ($generated@@289 ($generated@@263 97))) ($generated@@289 ($generated@@263 102))) ($generated@@289 ($generated@@263 110))) ($generated@@289 ($generated@@263 121)))) ($generated@@282 $generated@@622)) ($generated@@571 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@281 $generated@@152) ($generated@@289 ($generated@@263 104))) ($generated@@289 ($generated@@263 101))) ($generated@@289 ($generated@@263 108))) ($generated@@289 ($generated@@263 108))) ($generated@@289 ($generated@@263 111))) ($generated@@289 ($generated@@263 32))) ($generated@@289 ($generated@@263 68))) ($generated@@289 ($generated@@263 97))) ($generated@@289 ($generated@@263 102))) ($generated@@289 ($generated@@263 110))) ($generated@@289 ($generated@@263 121))) $generated@@622 ($generated@@282 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@250 ($generated@@281 $generated@@152) ($generated@@289 ($generated@@263 104))) ($generated@@289 ($generated@@263 101))) ($generated@@289 ($generated@@263 108))) ($generated@@289 ($generated@@263 108))) ($generated@@289 ($generated@@263 111))) ($generated@@289 ($generated@@263 32))) ($generated@@289 ($generated@@263 68))) ($generated@@289 ($generated@@263 97))) ($generated@@289 ($generated@@263 102))) ($generated@@289 ($generated@@263 110))) ($generated@@289 ($generated@@263 121)))))) (and (=> (= (ControlFlow 0 19) (- 0 23)) (and (<= 0 ($generated@@244 6)) (< ($generated@@244 6) ($generated@@282 $generated@@622)))) (and (=> (= (ControlFlow 0 19) (- 0 22)) (= ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 6))) ($generated@@246 ($generated@@263 68)))) (=> (= ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 6))) ($generated@@246 ($generated@@263 68))) (and (=> (= (ControlFlow 0 19) (- 0 21)) (and (<= 0 ($generated@@244 7)) (< ($generated@@244 7) ($generated@@282 $generated@@622)))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (= ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 7))) ($generated@@246 ($generated@@263 97)))) (=> (= ($generated@@339 $generated@@265 ($generated@@345 $generated@@622 ($generated@@244 7))) ($generated@@246 ($generated@@263 97))) (and (and (=> (= (ControlFlow 0 19) 3) $generated@@633) (=> (= (ControlFlow 0 19) 16) $generated@@631)) (=> (= (ControlFlow 0 19) 6) $generated@@632)))))))))))
(let (($generated@@635 true))
(let (($generated@@636  (=> (= $generated@@623 ($generated@@166 $generated@@136 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 24) 19) $generated@@634) (=> (= (ControlFlow 0 24) 1) $generated@@635)))))
(let (($generated@@637  (=> (and (and (and ($generated@@268 $generated@@624) ($generated@@625 $generated@@624)) (and (not (= $generated@@626 $generated@@136)) (and ($generated@@139 $generated@@626 $generated@@221) ($generated@@77 $generated@@626 $generated@@221 $generated@@624)))) (and (and ($generated@@139 $generated@@622 ($generated@@251 $generated@@45)) ($generated@@77 $generated@@622 ($generated@@251 $generated@@45) $generated@@624)) (and (= 1 $generated@@627) (= (ControlFlow 0 25) 24)))) $generated@@636)))
$generated@@637)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (Int) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 () T@T)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U Int) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert  (and (= ($generated@@1 $generated@@250) 17) (forall (($generated@@251 Int) ) (! (= (type ($generated@@248 $generated@@251)) $generated@@250)
 :pattern ( ($generated@@248 $generated@@251))
))))
(assert (forall (($generated@@252 Int) ) (!  (=> (and (<= 0 $generated@@252) (< $generated@@252 65536)) (= ($generated@@249 ($generated@@248 $generated@@252)) $generated@@252))
 :pattern ( ($generated@@248 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@67) (= (type $generated@@256) $generated@@67)) (= (type $generated@@257) $generated@@152)) (= (type $generated@@258) $generated@@152)) (= (type $generated@@259) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@253 $generated@@259)) (= ($generated@@77 ($generated@@224 $generated@@257 $generated@@258) ($generated@@142 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@257 $generated@@258) ($generated@@142 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@71)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@143) (= ($generated@@141 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@143) ($generated@@141 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@152) (= (type $generated@@265) $generated@@152)) (= $generated@@263 ($generated@@224 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@141 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 18)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@250) (and (and (= ($generated@@248 ($generated@@249 $generated@@274)) $generated@@274) (<= 0 ($generated@@249 $generated@@274))) (< ($generated@@249 $generated@@274) 65536)))
 :pattern ( ($generated@@249 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@152)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@254 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@77 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@254 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@79 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@82 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@79 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@84 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 19)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@84 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@84 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 20)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@79 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@84 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@84 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@82 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@79 $generated@@323 $generated@@2)) (= ($generated@@158 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@84 $generated@@322 $generated@@324))) (<= ($generated ($generated@@84 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@84 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@158 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@152) ($generated@@225 $generated@@328 $generated@@135)) (and (= ($generated@@275 ($generated@@325 $generated@@80 $generated@@328)) $generated@@328) ($generated@@139 ($generated@@325 $generated@@80 $generated@@328) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@328 $generated@@135))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@152) ($generated@@225 $generated@@329 $generated@@221)) (and (= ($generated@@275 ($generated@@325 $generated@@80 $generated@@329)) $generated@@329) ($generated@@139 ($generated@@325 $generated@@80 $generated@@329) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@329 $generated@@221))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@80) (= ($generated@@139 $generated@@330 $generated@@221)  (and ($generated@@139 $generated@@330 $generated@@135) (not (= $generated@@330 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@330 $generated@@221))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@290 (type $generated@@331))))
(let (($generated@@333 ($generated@@289 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@288 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@287 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@286 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@79 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@290 (type $generated@@338))))
(let (($generated@@340 ($generated@@289 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@288 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@287 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@308 (type $generated@@342))))
(let (($generated@@344 ($generated@@307 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@306 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@305 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@304 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@79 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@308 (type $generated@@349))))
(let (($generated@@351 ($generated@@307 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@306 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@305 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@354) $generated@@67)) (= ($generated@@139 $generated@@353 ($generated@@157 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@353 $generated@@355)))) ($generated@@225 $generated@@355 $generated@@354))
 :pattern ( ($generated@@84 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@139 $generated@@353 ($generated@@157 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@234 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@254 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@234 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@360 ($generated@@239 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@152) ($generated@@0 ($generated@@84 $generated@@360 $generated@@363))) ($generated@@254 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@84 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@360 ($generated@@239 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= ($generated ($generated@@84 ($generated@@281 $generated@@365) $generated@@364)) 0))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@84 ($generated@@281 $generated@@365) $generated@@364)))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@290 (type $generated@@369))))
(let (($generated@@371 ($generated@@289 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@79 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@288 $generated@@152 $generated@@152)) (= (type $generated@@373) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@84 ($generated@@286 $generated@@372) ($generated@@150 ($generated@@325 $generated@@143 $generated@@373)))) (= ($generated@@84 ($generated@@367 $generated@@372) ($generated@@150 ($generated@@325 $generated@@143 $generated@@373))) ($generated@@151 ($generated@@325 $generated@@143 $generated@@373))))))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@308 (type $generated@@377))))
(let (($generated@@379 ($generated@@307 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@306 $generated@@152 $generated@@152)) (= (type $generated@@381) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@84 ($generated@@304 $generated@@380) ($generated@@150 ($generated@@325 $generated@@143 $generated@@381)))) (= ($generated@@84 ($generated@@375 $generated@@380) ($generated@@150 ($generated@@325 $generated@@143 $generated@@381))) ($generated@@151 ($generated@@325 $generated@@143 $generated@@381))))))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@289 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@288 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@84 ($generated@@335 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@84 ($generated@@286 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@84 ($generated@@367 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@382) $generated@@386))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@84 ($generated@@335 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@307 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@306 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@84 ($generated@@346 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@84 ($generated@@304 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@84 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@387) $generated@@391))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@84 ($generated@@346 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@67)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@288 $generated@@152 $generated@@152)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@395) $generated@@399))) (and ($generated@@254 ($generated@@84 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@254 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@77 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@306 $generated@@152 $generated@@152)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@403) $generated@@407))) (and ($generated@@254 ($generated@@84 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@254 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@79 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@308 (type $generated@@410))))
(let (($generated@@412 ($generated@@307 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@306 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@305 $generated@@412 $generated@@411)) (= ($generated@@304 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@304 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@308 (type $generated@@413))))
(let (($generated@@415 ($generated@@307 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@306 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@305 $generated@@415 $generated@@414)) (= ($generated@@346 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@346 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@308 (type $generated@@416))))
(let (($generated@@418 ($generated@@307 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@306 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@305 $generated@@418 $generated@@417)) (= ($generated@@374 $generated@@416) ($generated@@408 $generated@@152))))))
 :pattern ( ($generated@@374 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@290 (type $generated@@419))))
(let (($generated@@421 ($generated@@289 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@288 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@287 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@152) (= (type $generated@@423) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@366 $generated@@419) ($generated@@275 ($generated@@224 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@308 (type $generated@@424))))
(let (($generated@@426 ($generated@@307 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@306 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@305 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@152) (= (type $generated@@428) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@374 $generated@@424) ($generated@@275 ($generated@@224 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@374 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@225 $generated@@429 $generated@@46)) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@325 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@152) ($generated@@225 $generated@@430 $generated@@47)) (and (= ($generated@@275 ($generated@@325 $generated@@3 $generated@@430)) $generated@@430) ($generated@@139 ($generated@@325 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@152) ($generated@@225 $generated@@431 $generated@@44)) (and (= ($generated@@275 ($generated@@325 $generated@@4 $generated@@431)) $generated@@431) ($generated@@139 ($generated@@325 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@431 $generated@@44))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@152) ($generated@@225 $generated@@432 $generated@@45)) (and (= ($generated@@275 ($generated@@325 $generated@@250 $generated@@432)) $generated@@432) ($generated@@139 ($generated@@325 $generated@@250 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@67) (= ($generated@@225 ($generated@@275 $generated@@433) $generated@@434) ($generated@@139 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@225 ($generated@@275 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@82 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@79 $generated@@436 $generated@@2)) (<= 0 ($generated@@280 $generated@@435))))
 :pattern ( ($generated@@280 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@269 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@268 $generated@@438)) (<= 0 ($generated@@267 $generated@@437))))
 :pattern ( ($generated@@267 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@392 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@392 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@392 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@392 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@75 ($generated@@392 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@400 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@400 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@400 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@400 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@75 ($generated@@400 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@152) (= (type $generated@@460) $generated@@152)) (= ($generated@@260 ($generated@@224 $generated@@459 $generated@@460)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@142 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@142 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@142 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@142 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@152) (= (type $generated@@470) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@224 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@152) (= (type $generated@@472) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@224 $generated@@471 $generated@@472))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ($generated@@477 Int) ) (! (let (($generated@@478 ($generated@@269 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476 $generated@@477)) $generated@@478))
 :pattern ( ($generated@@474 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@268 $generated@@152)) (= (type $generated@@480) $generated@@67)) (= (type $generated@@481) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@479 ($generated@@473 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@267 $generated@@479))) ($generated@@254 ($generated@@474 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@474 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@77 $generated@@479 ($generated@@473 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@78 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@78 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@234 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@234 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@239 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@239 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@493 ($generated@@157 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@157 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@473 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@473 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@473 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@473 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@325 $generated@@502 ($generated@@275 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@275 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@288 $generated@@152 $generated@@152)) (= (type $generated@@504) $generated@@67)) (= (type $generated@@505) $generated@@67)) (= ($generated@@139 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@503) $generated@@506))) (and ($generated@@225 ($generated@@84 ($generated@@367 $generated@@503) $generated@@506) $generated@@505) ($generated@@225 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@503) $generated@@506))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@139 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@306 $generated@@152 $generated@@152)) (= (type $generated@@508) $generated@@67)) (= (type $generated@@509) $generated@@67)) (= ($generated@@139 $generated@@507 ($generated@@400 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@507) $generated@@510))) (and ($generated@@225 ($generated@@84 ($generated@@375 $generated@@507) $generated@@510) $generated@@509) ($generated@@225 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@507) $generated@@510))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@139 $generated@@507 ($generated@@400 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@152) (= (type $generated@@514) $generated@@152)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@224 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@224 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@152) (= (type $generated@@516) $generated@@152)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@224 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@224 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@225 $generated@@517 ($generated@@392 $generated@@518 $generated@@519))) (and (= ($generated@@275 ($generated@@325 ($generated@@288 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@325 ($generated@@288 $generated@@152 $generated@@152) $generated@@517) ($generated@@392 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@225 $generated@@517 ($generated@@392 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@152) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@67)) ($generated@@225 $generated@@520 ($generated@@400 $generated@@521 $generated@@522))) (and (= ($generated@@275 ($generated@@325 ($generated@@306 $generated@@152 $generated@@152) $generated@@520)) $generated@@520) ($generated@@139 ($generated@@325 ($generated@@306 $generated@@152 $generated@@152) $generated@@520) ($generated@@400 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@225 $generated@@520 ($generated@@400 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@67) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@152)) ($generated@@225 $generated@@525 ($generated@@142 $generated@@523 $generated@@524))) (and (= ($generated@@275 ($generated@@325 $generated@@143 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@325 $generated@@143 $generated@@525) ($generated@@142 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@225 $generated@@525 ($generated@@142 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
 (not ($generated@@0 ($generated@@84 ($generated@@408 $generated@@527) $generated@@526))))
 :pattern ( (let (($generated@@527 (type $generated@@526)))
($generated@@84 ($generated@@408 $generated@@527) $generated@@526)))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@67) (= (type $generated@@531) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@530 $generated@@531)) $generated@@62) (= ($generated@@528 ($generated@@142 $generated@@530 $generated@@531)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@143) (= ($generated@@511 ($generated@@275 $generated@@532)) ($generated@@512 $generated@@532)))
 :pattern ( ($generated@@511 ($generated@@275 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@152) ($generated@@225 $generated@@533 ($generated@@78 0))) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@533)) $generated@@533) ($generated@@139 ($generated@@325 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@533 ($generated@@78 0)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@152) (= (type $generated@@535) $generated@@67)) ($generated@@225 $generated@@534 ($generated@@234 $generated@@535))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@152 $generated@@4) $generated@@534)) $generated@@534) ($generated@@139 ($generated@@325 ($generated@@79 $generated@@152 $generated@@4) $generated@@534) ($generated@@234 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@534 ($generated@@234 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@67)) ($generated@@225 $generated@@536 ($generated@@239 $generated@@537))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@152 $generated@@4) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@325 ($generated@@79 $generated@@152 $generated@@4) $generated@@536) ($generated@@239 $generated@@537))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@239 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@152) (= (type $generated@@539) $generated@@67)) ($generated@@225 $generated@@538 ($generated@@157 $generated@@539))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@152 $generated@@2) $generated@@538)) $generated@@538) ($generated@@139 ($generated@@325 ($generated@@79 $generated@@152 $generated@@2) $generated@@538) ($generated@@157 $generated@@539))))
 :pattern ( ($generated@@225 $generated@@538 ($generated@@157 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@152) (= (type $generated@@541) $generated@@67)) ($generated@@225 $generated@@540 ($generated@@473 $generated@@541))) (and (= ($generated@@275 ($generated@@325 ($generated@@268 $generated@@152) $generated@@540)) $generated@@540) ($generated@@139 ($generated@@325 ($generated@@268 $generated@@152) $generated@@540) ($generated@@473 $generated@@541))))
 :pattern ( ($generated@@225 $generated@@540 ($generated@@473 $generated@@541)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@528 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@528 $generated@@221) $generated@@66))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@542 ($generated@@157 $generated@@543) $generated@@544) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@542 $generated@@545)))) ($generated@@254 $generated@@545 $generated@@543 $generated@@544))
 :pattern ( ($generated@@84 $generated@@542 $generated@@545))
))))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@157 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@143) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@253 $generated@@548) (and ($generated@@141 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@67) ($generated@@77 $generated@@546 ($generated@@142 $generated@@547 $generated@@549) $generated@@548))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@142 $generated@@547 $generated@@549) $generated@@548))
))))) ($generated@@254 ($generated@@150 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@254 ($generated@@150 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@143) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@253 $generated@@552) (and ($generated@@141 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@67) ($generated@@77 $generated@@550 ($generated@@142 $generated@@553 $generated@@551) $generated@@552))
 :pattern ( ($generated@@77 $generated@@550 ($generated@@142 $generated@@553 $generated@@551) $generated@@552))
))))) ($generated@@254 ($generated@@151 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@254 ($generated@@151 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@152) (= (type $generated@@555) $generated@@152)) (= ($generated@@224 ($generated@@244 $generated@@554) ($generated@@244 $generated@@555)) ($generated@@244 ($generated@@224 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@554) ($generated@@244 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (! (= ($generated@@275 ($generated@@244 $generated@@556)) ($generated@@244 ($generated@@275 $generated@@556)))
 :pattern ( ($generated@@275 ($generated@@244 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@269 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@268 $generated@@558)) (= ($generated@@267 $generated@@557) 0)) (= $generated@@557 ($generated@@266 $generated@@558))))
 :pattern ( ($generated@@267 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (and (= (type $generated@@559) ($generated@@79 $generated@@562 $generated@@2)) (= (type $generated@@561) $generated@@2)) (<= 0 ($generated $generated@@561))) (= ($generated@@280 ($generated@@85 $generated@@559 $generated@@560 $generated@@561)) (+ (- ($generated@@280 $generated@@559) ($generated ($generated@@84 $generated@@559 $generated@@560))) ($generated $generated@@561)))))
 :pattern ( ($generated@@280 ($generated@@85 $generated@@559 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@2)) ($generated@@77 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@3)) ($generated@@77 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@4)) ($generated@@77 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@250)) ($generated@@77 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@152)) ($generated@@77 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@268 $generated@@152)) (= (type $generated@@574) $generated@@67)) (= ($generated@@139 $generated@@573 ($generated@@473 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@267 $generated@@573))) ($generated@@225 ($generated@@474 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@474 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@139 $generated@@573 ($generated@@473 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@268 $generated@@152)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@267 $generated@@577))) (< ($generated@@512 ($generated@@325 $generated@@143 ($generated@@474 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@512 ($generated@@325 $generated@@143 ($generated@@474 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@288 $generated@@152 $generated@@152)) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) $generated@@67)) ($generated@@139 $generated@@579 ($generated@@392 $generated@@580 $generated@@581))) (and (and ($generated@@139 ($generated@@286 $generated@@579) ($generated@@234 $generated@@580)) ($generated@@139 ($generated@@335 $generated@@579) ($generated@@234 $generated@@581))) ($generated@@139 ($generated@@366 $generated@@579) ($generated@@234 ($generated@@142 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@139 $generated@@579 ($generated@@392 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@306 $generated@@152 $generated@@152)) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@67)) ($generated@@139 $generated@@582 ($generated@@400 $generated@@583 $generated@@584))) (and (and ($generated@@139 ($generated@@304 $generated@@582) ($generated@@239 $generated@@583)) ($generated@@139 ($generated@@346 $generated@@582) ($generated@@239 $generated@@584))) ($generated@@139 ($generated@@374 $generated@@582) ($generated@@239 ($generated@@142 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@139 $generated@@582 ($generated@@400 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@139 $generated@@585 $generated@@46))
 :pattern ( ($generated@@139 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@139 $generated@@586 $generated@@47))
 :pattern ( ($generated@@139 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@139 $generated@@587 $generated@@44))
 :pattern ( ($generated@@139 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@250) ($generated@@139 $generated@@588 $generated@@45))
 :pattern ( ($generated@@139 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@152) ($generated@@139 $generated@@589 $generated@@48))
 :pattern ( ($generated@@139 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 (T@U) Bool)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Int)
(assert  (and (and (and (= (type $generated@@590) $generated@@250) (= (type $generated@@591) ($generated@@167 $generated@@80 $generated@@4))) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@594) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@596  (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@249 ($generated@@244 ($generated@@248 67))) ($generated@@249 $generated@@590))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@249 $generated@@590) ($generated@@249 ($generated@@244 ($generated@@248 67))))) (=> (and (and (<= ($generated@@249 ($generated@@244 ($generated@@248 67))) ($generated@@249 $generated@@590)) (<= ($generated@@249 $generated@@590) ($generated@@249 ($generated@@244 ($generated@@248 67))))) (= (ControlFlow 0 4) (- 0 3))) (= $generated@@590 ($generated@@244 ($generated@@248 67))))))))
(let (($generated@@597  (=> (and (< ($generated@@249 $generated@@590) ($generated@@249 ($generated@@244 ($generated@@248 67)))) (= (ControlFlow 0 8) 4)) $generated@@596)))
(let (($generated@@598  (=> (and (<= ($generated@@249 ($generated@@244 ($generated@@248 67))) ($generated@@249 $generated@@590)) (= (ControlFlow 0 7) 4)) $generated@@596)))
(let (($generated@@599  (=> (< ($generated@@249 $generated@@590) ($generated@@249 ($generated@@244 ($generated@@248 68)))) (and (=> (= (ControlFlow 0 9) 7) $generated@@598) (=> (= (ControlFlow 0 9) 8) $generated@@597)))))
(let (($generated@@600  (=> (and (<= ($generated@@249 ($generated@@244 ($generated@@248 68))) ($generated@@249 $generated@@590)) (= (ControlFlow 0 2) (- 0 1))) (<= ($generated@@249 $generated@@590) ($generated@@249 ($generated@@244 ($generated@@248 77)))))))
(let (($generated@@601  (=> (= $generated@@591 ($generated@@166 $generated@@136 $generated@@592 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@599) (=> (= (ControlFlow 0 10) 2) $generated@@600)))))
(let (($generated@@602  (=> (and (and (and ($generated@@253 $generated@@592) ($generated@@593 $generated@@592)) (and (not (= $generated@@594 $generated@@136)) (and ($generated@@139 $generated@@594 $generated@@221) ($generated@@77 $generated@@594 $generated@@221 $generated@@592)))) (and (and ($generated@@139 $generated@@590 $generated@@45) (= 0 $generated@@595)) (and (< ($generated@@249 ($generated@@244 ($generated@@248 66))) ($generated@@249 $generated@@590)) (= (ControlFlow 0 11) 10)))) $generated@@601)))
$generated@@602))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (Int) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@T) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert  (=> (<= 0 $generated@@155) (forall (($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@157) (or ($generated@@158 $generated@@160) (and (not (= 0 $generated@@155)) ($generated@@132 $generated@@160 $generated@@45)))) ($generated@@132 ($generated@@156 $generated@@160) $generated@@45))
 :pattern ( ($generated@@156 $generated@@160))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 17)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@67 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@77) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@212) ($generated@@66 $generated@@4))) (= (type $generated@@214) $generated@@77)) (= (type $generated@@215) ($generated@@66 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@67 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@77) (= (type $generated@@223) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@224) ($generated@@66 $generated@@4))) (= (type $generated@@226) $generated@@77)) (= (type $generated@@227) ($generated@@66 $generated@@228))) (= ($generated@@0 ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@136)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@145)) (= (type $generated@@236) $generated@@145)) (= ($generated@@132 ($generated@@229 $generated@@235 $generated@@236) ($generated@@135 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@132 ($generated@@229 $generated@@235 $generated@@236) ($generated@@135 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@136) (= (type $generated@@238) $generated@@136)) (= ($generated@@142 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@142 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@145) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@145) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 Int) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@157)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 Int) ) (!  (=> (and (<= 0 $generated@@256) (< $generated@@256 65536)) (= ($generated@@254 ($generated@@253 $generated@@256)) $generated@@256))
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) $generated@@64)) (= (type $generated@@261) $generated@@145)) (= (type $generated@@262) $generated@@145)) (= (type $generated@@263) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@257 $generated@@263)) (= ($generated@@74 ($generated@@229 $generated@@261 $generated@@262) ($generated@@135 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@74 ($generated@@229 $generated@@261 $generated@@262) ($generated@@135 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@136) (= ($generated@@134 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@136) ($generated@@134 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@145) (= (type $generated@@269) $generated@@145)) (= $generated@@267 ($generated@@229 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@134 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 18)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert  (and (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@278 $generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@278 $generated@@280 $generated@@281))
)) (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (= (type ($generated@@279 $generated@@282 $generated@@283)) $generated@@157)
 :pattern ( ($generated@@279 $generated@@282 $generated@@283))
))))
(assert  (=> (<= 0 $generated@@155) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@157) (or ($generated@@158 ($generated@@249 $generated@@284)) (and (not (= 0 $generated@@155)) ($generated@@132 $generated@@284 $generated@@45)))) (= ($generated@@156 ($generated@@249 $generated@@284)) (ite  (and (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 ($generated@@249 $generated@@284))) (<= ($generated@@254 ($generated@@249 $generated@@284)) ($generated@@254 ($generated@@249 ($generated@@253 90))))) ($generated@@278 ($generated@@279 $generated@@284 ($generated@@253 65)) ($generated@@253 97)) $generated@@284)))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@249 $generated@@284)))
))))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@157) (and (and (= ($generated@@253 ($generated@@254 $generated@@285)) $generated@@285) (<= 0 ($generated@@254 $generated@@285))) (< ($generated@@254 $generated@@285) 65536)))
 :pattern ( ($generated@@254 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@145)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@258 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@74 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@258 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert  (=> (<= 0 $generated@@155) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@157) (or ($generated@@158 $generated@@291) (and (not (= 0 $generated@@155)) ($generated@@132 $generated@@291 $generated@@45)))) (= ($generated@@156 $generated@@291) (ite  (and (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 $generated@@291)) (<= ($generated@@254 $generated@@291) ($generated@@254 ($generated@@249 ($generated@@253 90))))) ($generated@@278 ($generated@@279 $generated@@291 ($generated@@253 65)) ($generated@@253 97)) $generated@@291)))
 :pattern ( ($generated@@156 $generated@@291))
))))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@76 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@79 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@76 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@81 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@76 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@81 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@81 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 20)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@81 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@81 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@79 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@76 $generated@@335 $generated@@2)) (= ($generated@@151 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@81 $generated@@334 $generated@@336))) (<= ($generated ($generated@@81 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@151 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@157) (= (type $generated@@338) $generated@@157)) (= ($generated@@279 $generated@@337 $generated@@338) ($generated@@253 (- ($generated@@254 $generated@@337) ($generated@@254 $generated@@338)))))
 :pattern ( ($generated@@279 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@157) (= (type $generated@@340) $generated@@157)) (= ($generated@@278 $generated@@339 $generated@@340) ($generated@@253 (+ ($generated@@254 $generated@@339) ($generated@@254 $generated@@340)))))
 :pattern ( ($generated@@278 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(let (($generated@@343 ($generated@@301 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@300 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@299 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@298 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@302 (type $generated@@348))))
(let (($generated@@350 ($generated@@301 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@300 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@299 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@320 (type $generated@@352))))
(let (($generated@@354 ($generated@@319 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@318 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@317 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@316 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@76 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@320 (type $generated@@359))))
(let (($generated@@361 ($generated@@319 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@318 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@317 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@364) $generated@@64)) (= ($generated@@132 $generated@@363 ($generated@@150 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@363 $generated@@365)))) ($generated@@230 $generated@@365 $generated@@364))
 :pattern ( ($generated@@81 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@132 $generated@@363 ($generated@@150 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@239 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@145) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@258 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@239 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@371) $generated@@64)) (= (type $generated@@372) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@370 ($generated@@244 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@145) ($generated@@0 ($generated@@81 $generated@@370 $generated@@373))) ($generated@@258 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@81 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@74 $generated@@370 ($generated@@244 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@81 ($generated@@293 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@81 ($generated@@293 $generated@@375) $generated@@374)))
)))
(assert  (and (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@376 $generated@@379)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@376 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@377 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@377 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@302 (type $generated@@382))))
(let (($generated@@384 ($generated@@301 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@378 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@298 $generated@@385) ($generated@@143 ($generated@@377 $generated@@136 $generated@@386)))) (= ($generated@@81 ($generated@@378 $generated@@385) ($generated@@143 ($generated@@377 $generated@@136 $generated@@386))) ($generated@@144 ($generated@@377 $generated@@136 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@320 (type $generated@@390))))
(let (($generated@@392 ($generated@@319 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@76 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@81 ($generated@@316 $generated@@393) ($generated@@143 ($generated@@377 $generated@@136 $generated@@394)))) (= ($generated@@81 ($generated@@388 $generated@@393) ($generated@@143 ($generated@@377 $generated@@136 $generated@@394))) ($generated@@144 ($generated@@377 $generated@@136 $generated@@394))))))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@301 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@300 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@298 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@378 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@319 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@318 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@81 ($generated@@316 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@81 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@408) $generated@@412))) (and ($generated@@258 ($generated@@81 ($generated@@378 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@258 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@416) $generated@@420))) (and ($generated@@258 ($generated@@81 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@258 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@T) ) (! (= (type ($generated@@421 $generated@@422)) ($generated@@76 $generated@@422 $generated@@4))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@320 (type $generated@@423))))
(let (($generated@@425 ($generated@@319 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@318 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@317 $generated@@425 $generated@@424)) (= ($generated@@316 $generated@@423) ($generated@@421 $generated@@425))))))
 :pattern ( ($generated@@316 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@320 (type $generated@@426))))
(let (($generated@@428 ($generated@@319 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@318 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@317 $generated@@428 $generated@@427)) (= ($generated@@356 $generated@@426) ($generated@@421 $generated@@427))))))
 :pattern ( ($generated@@356 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@320 (type $generated@@429))))
(let (($generated@@431 ($generated@@319 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@318 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@317 $generated@@431 $generated@@430)) (= ($generated@@387 $generated@@429) ($generated@@421 $generated@@145))))))
 :pattern ( ($generated@@387 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@302 (type $generated@@432))))
(let (($generated@@434 ($generated@@301 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@300 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@299 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@145) (= (type $generated@@436) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@432) ($generated@@286 ($generated@@229 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@376 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@320 (type $generated@@437))))
(let (($generated@@439 ($generated@@319 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@318 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@317 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@387 $generated@@437) ($generated@@286 ($generated@@229 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@387 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@145) ($generated@@230 $generated@@442 $generated@@46)) (and (= ($generated@@286 ($generated@@377 $generated@@2 $generated@@442)) $generated@@442) ($generated@@132 ($generated@@377 $generated@@2 $generated@@442) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@442 $generated@@46))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@145) ($generated@@230 $generated@@443 $generated@@47)) (and (= ($generated@@286 ($generated@@377 $generated@@3 $generated@@443)) $generated@@443) ($generated@@132 ($generated@@377 $generated@@3 $generated@@443) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@443 $generated@@47))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@145) ($generated@@230 $generated@@444 $generated@@44)) (and (= ($generated@@286 ($generated@@377 $generated@@4 $generated@@444)) $generated@@444) ($generated@@132 ($generated@@377 $generated@@4 $generated@@444) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@444 $generated@@44))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@145) ($generated@@230 $generated@@445 $generated@@45)) (and (= ($generated@@286 ($generated@@377 $generated@@157 $generated@@445)) $generated@@445) ($generated@@132 ($generated@@377 $generated@@157 $generated@@445) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@445 $generated@@45))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (= (type $generated@@447) $generated@@64) (= ($generated@@230 ($generated@@286 $generated@@446) $generated@@447) ($generated@@132 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@230 ($generated@@286 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@79 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@76 $generated@@449 $generated@@2)) (<= 0 ($generated@@292 $generated@@448))))
 :pattern ( ($generated@@292 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@273 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@272 $generated@@451)) (<= 0 ($generated@@271 $generated@@450))))
 :pattern ( ($generated@@271 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@405 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@405 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@405 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@405 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@413 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@413 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@413 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@413 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@413 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@145) (= (type $generated@@473) $generated@@145)) (= ($generated@@264 ($generated@@229 $generated@@472 $generated@@473)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@135 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@135 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@135 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@135 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@145) (= (type $generated@@483) $generated@@145)) (= ($generated@@143 ($generated@@229 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@229 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@145) (= (type $generated@@485) $generated@@145)) (= ($generated@@144 ($generated@@229 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@229 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 ($generated@@273 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489 $generated@@490)) $generated@@491))
 :pattern ( ($generated@@487 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@272 $generated@@145)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@492 ($generated@@486 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@271 $generated@@492))) ($generated@@258 ($generated@@487 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@487 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@74 $generated@@492 ($generated@@486 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@75 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@75 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@239 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@244 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@244 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@150 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@150 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@486 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@486 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@486 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@486 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@377 $generated@@515 ($generated@@286 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@286 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@132 $generated@@516 ($generated@@405 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@516) $generated@@519))) (and ($generated@@230 ($generated@@81 ($generated@@378 $generated@@516) $generated@@519) $generated@@518) ($generated@@230 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@132 $generated@@516 ($generated@@405 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@132 $generated@@520 ($generated@@413 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@520) $generated@@523))) (and ($generated@@230 ($generated@@81 ($generated@@388 $generated@@520) $generated@@523) $generated@@522) ($generated@@230 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@520) $generated@@523))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@132 $generated@@520 ($generated@@413 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@145)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@229 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@229 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@145)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@229 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@230 $generated@@530 ($generated@@405 $generated@@531 $generated@@532))) (and (= ($generated@@286 ($generated@@377 ($generated@@300 $generated@@145 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@377 ($generated@@300 $generated@@145 $generated@@145) $generated@@530) ($generated@@405 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@230 $generated@@530 ($generated@@405 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) ($generated@@230 $generated@@533 ($generated@@413 $generated@@534 $generated@@535))) (and (= ($generated@@286 ($generated@@377 ($generated@@318 $generated@@145 $generated@@145) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@377 ($generated@@318 $generated@@145 $generated@@145) $generated@@533) ($generated@@413 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@230 $generated@@533 ($generated@@413 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@145)) ($generated@@230 $generated@@538 ($generated@@135 $generated@@536 $generated@@537))) (and (= ($generated@@286 ($generated@@377 $generated@@136 $generated@@538)) $generated@@538) ($generated@@132 ($generated@@377 $generated@@136 $generated@@538) ($generated@@135 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@230 $generated@@538 ($generated@@135 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@81 ($generated@@421 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@81 ($generated@@421 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@69)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@135 $generated@@543 $generated@@544)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@136) (= ($generated@@524 ($generated@@286 $generated@@545)) ($generated@@525 $generated@@545)))
 :pattern ( ($generated@@524 ($generated@@286 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) ($generated@@230 $generated@@546 ($generated@@75 0))) (and (= ($generated@@286 ($generated@@377 $generated@@2 $generated@@546)) $generated@@546) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@75 0))))
 :pattern ( ($generated@@230 $generated@@546 ($generated@@75 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@64)) ($generated@@230 $generated@@547 ($generated@@239 $generated@@548))) (and (= ($generated@@286 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@547)) $generated@@547) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@547) ($generated@@239 $generated@@548))))
 :pattern ( ($generated@@230 $generated@@547 ($generated@@239 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@64)) ($generated@@230 $generated@@549 ($generated@@244 $generated@@550))) (and (= ($generated@@286 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@549)) $generated@@549) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@549) ($generated@@244 $generated@@550))))
 :pattern ( ($generated@@230 $generated@@549 ($generated@@244 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) ($generated@@230 $generated@@551 ($generated@@150 $generated@@552))) (and (= ($generated@@286 ($generated@@377 ($generated@@76 $generated@@145 $generated@@2) $generated@@551)) $generated@@551) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@2) $generated@@551) ($generated@@150 $generated@@552))))
 :pattern ( ($generated@@230 $generated@@551 ($generated@@150 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) ($generated@@230 $generated@@553 ($generated@@486 $generated@@554))) (and (= ($generated@@286 ($generated@@377 ($generated@@272 $generated@@145) $generated@@553)) $generated@@553) ($generated@@132 ($generated@@377 ($generated@@272 $generated@@145) $generated@@553) ($generated@@486 $generated@@554))))
 :pattern ( ($generated@@230 $generated@@553 ($generated@@486 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@555 ($generated@@150 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@555 $generated@@558)))) ($generated@@258 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@81 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@150 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@136) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@257 $generated@@561) (and ($generated@@134 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@74 $generated@@559 ($generated@@135 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@135 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@258 ($generated@@143 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@258 ($generated@@143 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@257 $generated@@565) (and ($generated@@134 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@135 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@135 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@258 ($generated@@144 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@258 ($generated@@144 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@145) (= (type $generated@@568) $generated@@145)) (= ($generated@@229 ($generated@@249 $generated@@567) ($generated@@249 $generated@@568)) ($generated@@249 ($generated@@229 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@229 ($generated@@249 $generated@@567) ($generated@@249 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@286 ($generated@@249 $generated@@569)) ($generated@@249 ($generated@@286 $generated@@569)))
 :pattern ( ($generated@@286 ($generated@@249 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@273 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@272 $generated@@571)) (= ($generated@@271 $generated@@570) 0)) (= $generated@@570 ($generated@@270 $generated@@571))))
 :pattern ( ($generated@@271 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@292 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@292 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@292 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@157)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@145)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@272 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= ($generated@@132 $generated@@586 ($generated@@486 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@271 $generated@@586))) ($generated@@230 ($generated@@487 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@487 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@486 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@272 $generated@@145)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@271 $generated@@590))) (< ($generated@@525 ($generated@@377 $generated@@136 ($generated@@487 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@525 ($generated@@377 $generated@@136 ($generated@@487 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@300 $generated@@145 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@132 $generated@@592 ($generated@@405 $generated@@593 $generated@@594))) (and (and ($generated@@132 ($generated@@298 $generated@@592) ($generated@@239 $generated@@593)) ($generated@@132 ($generated@@345 $generated@@592) ($generated@@239 $generated@@594))) ($generated@@132 ($generated@@376 $generated@@592) ($generated@@239 ($generated@@135 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@405 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@318 $generated@@145 $generated@@145)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@132 $generated@@595 ($generated@@413 $generated@@596 $generated@@597))) (and (and ($generated@@132 ($generated@@316 $generated@@595) ($generated@@244 $generated@@596)) ($generated@@132 ($generated@@356 $generated@@595) ($generated@@244 $generated@@597))) ($generated@@132 ($generated@@387 $generated@@595) ($generated@@244 ($generated@@135 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@132 $generated@@595 ($generated@@413 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@132 $generated@@598 $generated@@46))
 :pattern ( ($generated@@132 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@132 $generated@@599 $generated@@47))
 :pattern ( ($generated@@132 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@132 $generated@@600 $generated@@44))
 :pattern ( ($generated@@132 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@157) ($generated@@132 $generated@@601 $generated@@45))
 :pattern ( ($generated@@132 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@145) ($generated@@132 $generated@@602 $generated@@48))
 :pattern ( ($generated@@132 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@603) $generated@@157) (= (type $generated@@604) ($generated@@163 $generated@@77 $generated@@4))) (= (type $generated@@605) $generated@@77)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@607) ($generated@@163 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@609 true))
(let (($generated@@610  (=> (and (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 $generated@@603)) (<= ($generated@@254 $generated@@603) ($generated@@254 ($generated@@249 ($generated@@253 90))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 $generated@@603))) (=> (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 $generated@@603)) (=> (= (ControlFlow 0 3) (- 0 2)) (< (+ ($generated@@254 ($generated@@279 $generated@@603 ($generated@@253 65))) ($generated@@254 ($generated@@249 ($generated@@253 97)))) 65536)))))))
(let (($generated@@611  (=> (< ($generated@@254 $generated@@603) ($generated@@254 ($generated@@249 ($generated@@253 65)))) (and (=> (= (ControlFlow 0 7) 3) $generated@@610) (=> (= (ControlFlow 0 7) 5) $generated@@609)))))
(let (($generated@@612  (=> (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 $generated@@603)) (and (=> (= (ControlFlow 0 6) 3) $generated@@610) (=> (= (ControlFlow 0 6) 5) $generated@@609)))))
(let (($generated@@613  (=> (= $generated@@604 ($generated@@217 $generated@@605 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 6) $generated@@612) (=> (= (ControlFlow 0 8) 7) $generated@@611)))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (= $generated@@607 ($generated@@162 $generated@@605 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@614) (=> (= (ControlFlow 0 9) 8) $generated@@613)))))
(let (($generated@@616  (=> (and (and (and ($generated@@257 $generated@@606) ($generated@@608 $generated@@606)) ($generated@@132 $generated@@603 $generated@@45)) (and (= 0 $generated@@155) (= (ControlFlow 0 10) 9))) $generated@@615)))
$generated@@616)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (Int) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@329 (T@U T@U) T@U)
(declare-fun $generated@@334 (T@U T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U Int) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert  (=> (<= 0 $generated@@155) (forall (($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@157) (or ($generated@@158 $generated@@160) (and (not (= 0 $generated@@155)) ($generated@@132 $generated@@160 $generated@@45)))) ($generated@@132 ($generated@@156 $generated@@160) $generated@@45))
 :pattern ( ($generated@@156 $generated@@160))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 17)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@67 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@77) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@212) ($generated@@66 $generated@@4))) (= (type $generated@@214) $generated@@77)) (= (type $generated@@215) ($generated@@66 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@67 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@77) (= (type $generated@@223) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@224) ($generated@@66 $generated@@4))) (= (type $generated@@226) $generated@@77)) (= (type $generated@@227) ($generated@@66 $generated@@228))) (= ($generated@@0 ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@136)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@145)) (= (type $generated@@236) $generated@@145)) (= ($generated@@132 ($generated@@229 $generated@@235 $generated@@236) ($generated@@135 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@132 ($generated@@229 $generated@@235 $generated@@236) ($generated@@135 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@136) (= (type $generated@@238) $generated@@136)) (= ($generated@@142 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@142 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@145) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@145) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 Int) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@157)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@256 Int) ) (!  (=> (and (<= 0 $generated@@256) (< $generated@@256 65536)) (= ($generated@@254 ($generated@@253 $generated@@256)) $generated@@256))
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) $generated@@64)) (= (type $generated@@261) $generated@@145)) (= (type $generated@@262) $generated@@145)) (= (type $generated@@263) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@257 $generated@@263)) (= ($generated@@74 ($generated@@229 $generated@@261 $generated@@262) ($generated@@135 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@74 ($generated@@229 $generated@@261 $generated@@262) ($generated@@135 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@136) (= ($generated@@134 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@136) ($generated@@134 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@145) (= (type $generated@@269) $generated@@145)) (= $generated@@267 ($generated@@229 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@134 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 18)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@157) (and (and (= ($generated@@253 ($generated@@254 $generated@@278)) $generated@@278) (<= 0 ($generated@@254 $generated@@278))) (< ($generated@@254 $generated@@278) 65536)))
 :pattern ( ($generated@@254 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@145)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@64) (= (type $generated@@283) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@258 ($generated@@279 $generated@@281) $generated@@282 $generated@@283) ($generated@@74 $generated@@281 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@76 $generated@@286 $generated@@2))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@79 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@76 $generated@@288 $generated@@2)) (and (= (= ($generated@@284 $generated@@287) 0) (= $generated@@287 ($generated@@285 $generated@@288))) (=> (not (= ($generated@@284 $generated@@287) 0)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) $generated@@288) (< 0 ($generated ($generated@@81 $generated@@287 $generated@@289))))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 19)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@76 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 20)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@76 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@81 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@81 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@79 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@76 $generated@@327 $generated@@2)) (= ($generated@@151 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@81 $generated@@326 $generated@@328))) (<= ($generated ($generated@@81 $generated@@326 $generated@@328)) ($generated@@284 $generated@@326))))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@151 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (! (= (type ($generated@@329 $generated@@330 $generated@@331)) $generated@@157)
 :pattern ( ($generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@157) (= (type $generated@@333) $generated@@157)) (= ($generated@@329 $generated@@332 $generated@@333) ($generated@@253 (- ($generated@@254 $generated@@332) ($generated@@254 $generated@@333)))))
 :pattern ( ($generated@@329 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (! (= (type ($generated@@334 $generated@@335 $generated@@336)) $generated@@157)
 :pattern ( ($generated@@334 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@157) (= (type $generated@@338) $generated@@157)) (= ($generated@@334 $generated@@337 $generated@@338) ($generated@@253 (+ ($generated@@254 $generated@@337) ($generated@@254 $generated@@338)))))
 :pattern ( ($generated@@334 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@294 (type $generated@@339))))
(let (($generated@@341 ($generated@@293 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@292 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@291 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@290 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@294 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@76 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@294 (type $generated@@346))))
(let (($generated@@348 ($generated@@293 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@292 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@291 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@312 (type $generated@@350))))
(let (($generated@@352 ($generated@@311 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@310 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@309 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@308 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@312 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@312 (type $generated@@357))))
(let (($generated@@359 ($generated@@311 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@310 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@309 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@362) $generated@@64)) (= ($generated@@132 $generated@@361 ($generated@@150 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@361 $generated@@363)))) ($generated@@230 $generated@@363 $generated@@362))
 :pattern ( ($generated@@81 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@132 $generated@@361 ($generated@@150 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@239 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@145) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@258 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@239 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@244 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@145) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@258 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@244 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@285 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@285 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@294 (type $generated@@380))))
(let (($generated@@382 ($generated@@293 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@383) ($generated@@143 ($generated@@375 $generated@@136 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@143 ($generated@@375 $generated@@136 $generated@@384))) ($generated@@144 ($generated@@375 $generated@@136 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@312 (type $generated@@388))))
(let (($generated@@390 ($generated@@311 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@310 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@308 $generated@@391) ($generated@@143 ($generated@@375 $generated@@136 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@143 ($generated@@375 $generated@@136 $generated@@392))) ($generated@@144 ($generated@@375 $generated@@136 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@293 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@292 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@311 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@310 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@308 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@406) $generated@@410))) (and ($generated@@258 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@258 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@310 $generated@@145 $generated@@145)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@414) $generated@@418))) (and ($generated@@258 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@258 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@312 (type $generated@@421))))
(let (($generated@@423 ($generated@@311 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@310 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@309 $generated@@423 $generated@@422)) (= ($generated@@308 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@308 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@312 (type $generated@@424))))
(let (($generated@@426 ($generated@@311 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@310 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@309 $generated@@426 $generated@@425)) (= ($generated@@354 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@354 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@312 (type $generated@@427))))
(let (($generated@@429 ($generated@@311 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@310 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@309 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@145))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@294 (type $generated@@430))))
(let (($generated@@432 ($generated@@293 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@292 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@291 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@145) (= (type $generated@@434) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@430) ($generated@@279 ($generated@@229 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@312 (type $generated@@435))))
(let (($generated@@437 ($generated@@311 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@310 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@309 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@435) ($generated@@279 ($generated@@229 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@230 $generated@@440 $generated@@46)) (and (= ($generated@@279 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@230 $generated@@441 $generated@@47)) (and (= ($generated@@279 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@132 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@145) ($generated@@230 $generated@@442 $generated@@44)) (and (= ($generated@@279 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@132 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@442 $generated@@44))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@145) ($generated@@230 $generated@@443 $generated@@45)) (and (= ($generated@@279 ($generated@@375 $generated@@157 $generated@@443)) $generated@@443) ($generated@@132 ($generated@@375 $generated@@157 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@64) (= ($generated@@230 ($generated@@279 $generated@@444) $generated@@445) ($generated@@132 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@230 ($generated@@279 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@79 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@76 $generated@@447 $generated@@2)) (<= 0 ($generated@@284 $generated@@446))))
 :pattern ( ($generated@@284 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@273 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@272 $generated@@449)) (<= 0 ($generated@@271 $generated@@448))))
 :pattern ( ($generated@@271 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@403 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@403 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@403 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@403 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@411 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@411 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@411 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@411 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@145) (= (type $generated@@471) $generated@@145)) (= ($generated@@264 ($generated@@229 $generated@@470 $generated@@471)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@135 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@135 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@135 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@135 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@145) (= (type $generated@@481) $generated@@145)) (= ($generated@@143 ($generated@@229 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@229 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@145) (= (type $generated@@483) $generated@@145)) (= ($generated@@144 ($generated@@229 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@229 $generated@@482 $generated@@483))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ($generated@@488 Int) ) (! (let (($generated@@489 ($generated@@273 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487 $generated@@488)) $generated@@489))
 :pattern ( ($generated@@485 $generated@@487 $generated@@488))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@272 $generated@@145)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@490 ($generated@@484 $generated@@491) $generated@@492) (forall (($generated@@493 Int) ) (!  (=> (and (<= 0 $generated@@493) (< $generated@@493 ($generated@@271 $generated@@490))) ($generated@@258 ($generated@@485 $generated@@490 $generated@@493) $generated@@491 $generated@@492))
 :pattern ( ($generated@@485 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@74 $generated@@490 ($generated@@484 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@75 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@75 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@239 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@239 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@244 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@244 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@150 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@150 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@484 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@484 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@484 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@484 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@375 $generated@@513 ($generated@@279 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@279 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@132 $generated@@514 ($generated@@403 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@514) $generated@@517))) (and ($generated@@230 ($generated@@81 ($generated@@376 $generated@@514) $generated@@517) $generated@@516) ($generated@@230 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@132 $generated@@514 ($generated@@403 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@310 $generated@@145 $generated@@145)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@132 $generated@@518 ($generated@@411 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@518) $generated@@521))) (and ($generated@@230 ($generated@@81 ($generated@@386 $generated@@518) $generated@@521) $generated@@520) ($generated@@230 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@518) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@132 $generated@@518 ($generated@@411 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@145)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@229 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@229 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@145)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@229 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@229 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@230 $generated@@528 ($generated@@403 $generated@@529 $generated@@530))) (and (= ($generated@@279 ($generated@@375 ($generated@@292 $generated@@145 $generated@@145) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@375 ($generated@@292 $generated@@145 $generated@@145) $generated@@528) ($generated@@403 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@230 $generated@@528 ($generated@@403 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@230 $generated@@531 ($generated@@411 $generated@@532 $generated@@533))) (and (= ($generated@@279 ($generated@@375 ($generated@@310 $generated@@145 $generated@@145) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@375 ($generated@@310 $generated@@145 $generated@@145) $generated@@531) ($generated@@411 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@230 $generated@@531 ($generated@@411 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@145)) ($generated@@230 $generated@@536 ($generated@@135 $generated@@534 $generated@@535))) (and (= ($generated@@279 ($generated@@375 $generated@@136 $generated@@536)) $generated@@536) ($generated@@132 ($generated@@375 $generated@@136 $generated@@536) ($generated@@135 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@230 $generated@@536 ($generated@@135 $generated@@534 $generated@@535)))
)))
(assert  (=> (<= 0 $generated@@155) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@157) (or ($generated@@158 $generated@@537) (and (not (= 0 $generated@@155)) ($generated@@132 $generated@@537 $generated@@45)))) (= ($generated@@156 $generated@@537) (ite (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 $generated@@537)) ($generated@@334 ($generated@@329 $generated@@537 ($generated@@253 65)) ($generated@@253 97)) $generated@@537)))
 :pattern ( ($generated@@156 $generated@@537))
))))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@419 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@135 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@136) (= ($generated@@522 ($generated@@279 $generated@@544)) ($generated@@523 $generated@@544)))
 :pattern ( ($generated@@522 ($generated@@279 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) ($generated@@230 $generated@@545 ($generated@@75 0))) (and (= ($generated@@279 ($generated@@375 $generated@@2 $generated@@545)) $generated@@545) ($generated@@132 ($generated@@375 ($generated@@76 $generated@@145 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@230 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@230 $generated@@546 ($generated@@239 $generated@@547))) (and (= ($generated@@279 ($generated@@375 ($generated@@76 $generated@@145 $generated@@4) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@375 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@239 $generated@@547))))
 :pattern ( ($generated@@230 $generated@@546 ($generated@@239 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@230 $generated@@548 ($generated@@244 $generated@@549))) (and (= ($generated@@279 ($generated@@375 ($generated@@76 $generated@@145 $generated@@4) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@375 ($generated@@76 $generated@@145 $generated@@4) $generated@@548) ($generated@@244 $generated@@549))))
 :pattern ( ($generated@@230 $generated@@548 ($generated@@244 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@230 $generated@@550 ($generated@@150 $generated@@551))) (and (= ($generated@@279 ($generated@@375 ($generated@@76 $generated@@145 $generated@@2) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@375 ($generated@@76 $generated@@145 $generated@@2) $generated@@550) ($generated@@150 $generated@@551))))
 :pattern ( ($generated@@230 $generated@@550 ($generated@@150 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@230 $generated@@552 ($generated@@484 $generated@@553))) (and (= ($generated@@279 ($generated@@375 ($generated@@272 $generated@@145) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@375 ($generated@@272 $generated@@145) $generated@@552) ($generated@@484 $generated@@553))))
 :pattern ( ($generated@@230 $generated@@552 ($generated@@484 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@150 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@258 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@150 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@136) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@257 $generated@@560) (and ($generated@@134 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@135 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@135 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@258 ($generated@@143 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@258 ($generated@@143 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@257 $generated@@564) (and ($generated@@134 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@135 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@135 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@258 ($generated@@144 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@258 ($generated@@144 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@145)) (= ($generated@@229 ($generated@@249 $generated@@566) ($generated@@249 $generated@@567)) ($generated@@249 ($generated@@229 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@229 ($generated@@249 $generated@@566) ($generated@@249 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@279 ($generated@@249 $generated@@568)) ($generated@@249 ($generated@@279 $generated@@568)))
 :pattern ( ($generated@@279 ($generated@@249 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@273 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@272 $generated@@570)) (= ($generated@@271 $generated@@569) 0)) (= $generated@@569 ($generated@@270 $generated@@570))))
 :pattern ( ($generated@@271 $generated@@569))
)))
(assert  (=> (<= 0 $generated@@155) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@157) (or ($generated@@158 ($generated@@249 $generated@@571)) (and (not (= 0 $generated@@155)) ($generated@@132 $generated@@571 $generated@@45)))) (= ($generated@@156 ($generated@@249 $generated@@571)) (ite (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 ($generated@@249 $generated@@571))) ($generated@@334 ($generated@@329 $generated@@571 ($generated@@253 65)) ($generated@@253 97)) $generated@@571)))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@249 $generated@@571)))
))))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@284 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@284 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@284 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@157)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@145)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@272 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= ($generated@@132 $generated@@586 ($generated@@484 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@271 $generated@@586))) ($generated@@230 ($generated@@485 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@485 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@484 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@272 $generated@@145)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@271 $generated@@590))) (< ($generated@@523 ($generated@@375 $generated@@136 ($generated@@485 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@523 ($generated@@375 $generated@@136 ($generated@@485 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@132 $generated@@592 ($generated@@403 $generated@@593 $generated@@594))) (and (and ($generated@@132 ($generated@@290 $generated@@592) ($generated@@239 $generated@@593)) ($generated@@132 ($generated@@343 $generated@@592) ($generated@@239 $generated@@594))) ($generated@@132 ($generated@@374 $generated@@592) ($generated@@239 ($generated@@135 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@403 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@310 $generated@@145 $generated@@145)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@132 $generated@@595 ($generated@@411 $generated@@596 $generated@@597))) (and (and ($generated@@132 ($generated@@308 $generated@@595) ($generated@@244 $generated@@596)) ($generated@@132 ($generated@@354 $generated@@595) ($generated@@244 $generated@@597))) ($generated@@132 ($generated@@385 $generated@@595) ($generated@@244 ($generated@@135 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@132 $generated@@595 ($generated@@411 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@132 $generated@@598 $generated@@46))
 :pattern ( ($generated@@132 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@132 $generated@@599 $generated@@47))
 :pattern ( ($generated@@132 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@132 $generated@@600 $generated@@44))
 :pattern ( ($generated@@132 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@157) ($generated@@132 $generated@@601 $generated@@45))
 :pattern ( ($generated@@132 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@145) ($generated@@132 $generated@@602 $generated@@48))
 :pattern ( ($generated@@132 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@603) $generated@@157) (= (type $generated@@604) ($generated@@163 $generated@@77 $generated@@4))) (= (type $generated@@605) $generated@@77)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@607) ($generated@@163 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@609 true))
(let (($generated@@610  (=> (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 $generated@@603)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 $generated@@603))) (=> (<= ($generated@@254 ($generated@@249 ($generated@@253 65))) ($generated@@254 $generated@@603)) (=> (= (ControlFlow 0 3) (- 0 2)) (< (+ ($generated@@254 ($generated@@329 $generated@@603 ($generated@@253 65))) ($generated@@254 ($generated@@249 ($generated@@253 97)))) 65536)))))))
(let (($generated@@611  (=> (= $generated@@604 ($generated@@217 $generated@@605 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@610) (=> (= (ControlFlow 0 6) 5) $generated@@609)))))
(let (($generated@@612 true))
(let (($generated@@613  (=> (= $generated@@607 ($generated@@162 $generated@@605 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@612) (=> (= (ControlFlow 0 7) 6) $generated@@611)))))
(let (($generated@@614  (=> (and (and (and ($generated@@257 $generated@@606) ($generated@@608 $generated@@606)) ($generated@@132 $generated@@603 $generated@@45)) (and (= 0 $generated@@155) (= (ControlFlow 0 8) 7))) $generated@@613)))
$generated@@614)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (Int) T@U)
(declare-fun $generated@@95 (T@T T@T) T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@T) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@74) 11) (forall (($generated@@82 T@U) ) (! (= (type ($generated@@73 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@73 $generated@@82))
))) (forall (($generated@@83 T@U) ) (! (let (($generated@@84 (type $generated@@83)))
(= (type ($generated@@78 $generated@@83)) $generated@@84))
 :pattern ( ($generated@@78 $generated@@83))
))) (forall (($generated@@85 Int) ) (! (= (type ($generated@@79 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@79 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= (type ($generated@@80 $generated@@86 $generated@@87)) $generated@@74)
 :pattern ( ($generated@@80 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= (type ($generated@@81 $generated@@88 $generated@@89)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@88 $generated@@89))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@90 T@U) ) (!  (=> (and (= (type $generated@@90) $generated@@74) (or ($generated@@75 $generated@@90) (and (not (= 0 $generated@@72)) ($generated@@76 $generated@@90 $generated@@45)))) (= ($generated@@73 $generated@@90) (ite (<= ($generated@@77 $generated@@90) ($generated@@77 ($generated@@78 ($generated@@79 90)))) ($generated@@80 ($generated@@81 $generated@@90 ($generated@@79 65)) ($generated@@79 97)) $generated@@90)))
 :pattern ( ($generated@@73 $generated@@90))
))))
(assert (forall (($generated@@92 T@U) ) (! (= (type ($generated@@91 $generated@@92)) $generated@@65)
 :pattern ( ($generated@@91 $generated@@92))
)))
(assert (= ($generated@@91 $generated@@44) $generated@@49))
(assert (= ($generated@@91 $generated@@45) $generated@@50))
(assert (= ($generated@@91 $generated@@46) $generated@@51))
(assert (= ($generated@@91 $generated@@47) $generated@@52))
(assert (= ($generated@@91 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@95 $generated@@104 $generated@@105)) 12)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@98 ($generated@@95 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@95 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@99 ($generated@@95 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@95 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@99 (type $generated@@110))))
(= (type ($generated@@100 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@100 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@101 $generated@@113 $generated@@114 $generated@@115)) ($generated@@95 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@101 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@99 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@100 ($generated@@101 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@100 ($generated@@101 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@100 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@100 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@96) 13)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@67 (type $generated@@131))))
(= (type ($generated@@102 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@102 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@97) 14)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@103 $generated@@133 $generated@@134 $generated@@135)) $generated@@97)
 :pattern ( ($generated@@103 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@67 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@102 ($generated@@103 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@102 ($generated@@103 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@102 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@102 $generated@@145 $generated@@147)))
 :weight 0
)))) (forall (($generated@@148 Int) ) (! (= (type ($generated@@94 $generated@@148)) $generated@@64)
 :pattern ( ($generated@@94 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@2) (= (type $generated@@150) ($generated@@95 $generated@@96 $generated@@97))) ($generated@@93 $generated@@149 ($generated@@94 0) $generated@@150))
 :pattern ( ($generated@@93 $generated@@149 ($generated@@94 0) $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@76 $generated@@151 ($generated@@94 0)))
 :pattern ( ($generated@@76 $generated@@151 ($generated@@94 0)))
)))
(assert  (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@64) (= (type $generated@@158) $generated@@64)) (= (type $generated@@159) $generated@@154)) ($generated@@76 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@76 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@64)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@95 $generated@@163 $generated@@2)) (= (type $generated@@172) $generated@@64)) ($generated@@76 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@76 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@173 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@74) (or ($generated@@75 $generated@@173) (and (not (= 0 $generated@@72)) ($generated@@76 $generated@@173 $generated@@45)))) ($generated@@76 ($generated@@73 $generated@@173) $generated@@45))
 :pattern ( ($generated@@73 $generated@@173))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 17)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@96 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@96) (= (type $generated@@224) ($generated@@95 $generated@@96 $generated@@97))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@96)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@102 ($generated@@100 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@176 $generated@@96 $generated@@4))
 :pattern ( ($generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@67 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@96) (= (type $generated@@236) ($generated@@95 $generated@@96 $generated@@97))) (= (type $generated@@237) ($generated@@66 $generated@@4))) (= (type $generated@@239) $generated@@96)) (= (type $generated@@240) ($generated@@66 $generated@@241))) (= ($generated@@0 ($generated@@174 ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@102 ($generated@@100 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@174 ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@154)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@64) (= (type $generated@@247) $generated@@64)) (= (type $generated@@248) $generated@@163)) (= (type $generated@@249) $generated@@163)) (= ($generated@@76 ($generated@@242 $generated@@248 $generated@@249) ($generated@@153 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@76 ($generated@@242 $generated@@248 $generated@@249) ($generated@@153 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@154) (= (type $generated@@251) $generated@@154)) (= ($generated@@160 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@160 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@95 $generated@@163 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@76 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@163) ($generated@@0 ($generated@@100 $generated@@254 $generated@@256))) ($generated@@243 $generated@@256 $generated@@255))
 :pattern ( ($generated@@100 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@76 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@95 $generated@@163 $generated@@4)) (= (type $generated@@260) $generated@@64)) (= ($generated@@76 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@163) ($generated@@0 ($generated@@100 $generated@@259 $generated@@261))) ($generated@@243 $generated@@261 $generated@@260))
 :pattern ( ($generated@@100 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@76 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@78 $generated@@262) $generated@@262)
 :pattern ( ($generated@@78 $generated@@262))
)))
(assert (forall (($generated@@263 Int) ) (!  (=> (and (<= 0 $generated@@263) (< $generated@@263 65536)) (= ($generated@@77 ($generated@@79 $generated@@263)) $generated@@263))
 :pattern ( ($generated@@79 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@64) (= (type $generated@@267) $generated@@64)) (= (type $generated@@268) $generated@@163)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) ($generated@@95 $generated@@96 $generated@@97))) ($generated@@264 $generated@@270)) (= ($generated@@93 ($generated@@242 $generated@@268 $generated@@269) ($generated@@153 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@93 ($generated@@242 $generated@@268 $generated@@269) ($generated@@153 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@154) (= ($generated@@152 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@154) ($generated@@152 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@163) (= (type $generated@@276) $generated@@163)) (= $generated@@274 ($generated@@242 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 18)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@74) (and (and (= ($generated@@79 ($generated@@77 $generated@@285)) $generated@@285) (<= 0 ($generated@@77 $generated@@285))) (< ($generated@@77 $generated@@285) 65536)))
 :pattern ( ($generated@@77 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@163)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@95 $generated@@96 $generated@@97))) (= ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@93 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@95 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@98 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@95 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@100 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@95 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@100 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@100 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@95 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@100 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@100 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@98 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@95 $generated@@334 $generated@@2)) (= ($generated@@169 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@100 $generated@@333 $generated@@335))) (<= ($generated ($generated@@100 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@100 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@169 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@74) (= (type $generated@@337) $generated@@74)) (= ($generated@@81 $generated@@336 $generated@@337) ($generated@@79 (- ($generated@@77 $generated@@336) ($generated@@77 $generated@@337)))))
 :pattern ( ($generated@@81 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@74) (= (type $generated@@339) $generated@@74)) (= ($generated@@80 $generated@@338 $generated@@339) ($generated@@79 (+ ($generated@@77 $generated@@338) ($generated@@77 $generated@@339)))))
 :pattern ( ($generated@@80 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(let (($generated@@342 ($generated@@300 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@299 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@298 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@100 ($generated@@297 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@297 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@301 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@95 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@301 (type $generated@@347))))
(let (($generated@@349 ($generated@@300 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@299 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@298 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@100 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@319 (type $generated@@351))))
(let (($generated@@353 ($generated@@318 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@317 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@316 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@100 ($generated@@315 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@315 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@319 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@95 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(let (($generated@@360 ($generated@@318 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@317 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@316 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@100 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@95 $generated@@163 $generated@@2)) (= (type $generated@@363) $generated@@64)) (= ($generated@@76 $generated@@362 ($generated@@168 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@163) (< 0 ($generated ($generated@@100 $generated@@362 $generated@@364)))) ($generated@@243 $generated@@364 $generated@@363))
 :pattern ( ($generated@@100 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@362 ($generated@@168 $generated@@363)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@74) (or ($generated@@75 ($generated@@78 $generated@@365)) (and (not (= 0 $generated@@72)) ($generated@@76 $generated@@365 $generated@@45)))) (= ($generated@@73 ($generated@@78 $generated@@365)) (ite (<= ($generated@@77 ($generated@@78 $generated@@365)) ($generated@@77 ($generated@@78 ($generated@@79 90)))) ($generated@@80 ($generated@@81 $generated@@365 ($generated@@79 65)) ($generated@@79 97)) $generated@@365)))
 :weight 3
 :pattern ( ($generated@@73 ($generated@@78 $generated@@365)))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@95 $generated@@163 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@95 $generated@@96 $generated@@97))) (= ($generated@@93 $generated@@366 ($generated@@252 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@163) ($generated@@0 ($generated@@100 $generated@@366 $generated@@369))) ($generated@@265 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@100 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@93 $generated@@366 ($generated@@252 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@95 $generated@@163 $generated@@4)) (= (type $generated@@371) $generated@@64)) (= (type $generated@@372) ($generated@@95 $generated@@96 $generated@@97))) (= ($generated@@93 $generated@@370 ($generated@@257 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@163) ($generated@@0 ($generated@@100 $generated@@370 $generated@@373))) ($generated@@265 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@100 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@93 $generated@@370 ($generated@@257 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@100 ($generated@@292 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@100 ($generated@@292 $generated@@375) $generated@@374)))
)))
(assert  (and (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@376 $generated@@379)) ($generated@@95 $generated@@163 $generated@@4))
 :pattern ( ($generated@@376 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@377 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@377 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@301 (type $generated@@382))))
(let (($generated@@384 ($generated@@300 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382)) ($generated@@95 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@378 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@299 $generated@@163 $generated@@163)) (= (type $generated@@386) $generated@@163)) (= ($generated@@0 ($generated@@100 ($generated@@376 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@100 ($generated@@297 $generated@@385) ($generated@@161 ($generated@@377 $generated@@154 $generated@@386)))) (= ($generated@@100 ($generated@@378 $generated@@385) ($generated@@161 ($generated@@377 $generated@@154 $generated@@386))) ($generated@@162 ($generated@@377 $generated@@154 $generated@@386))))))
 :pattern ( ($generated@@100 ($generated@@376 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@95 $generated@@163 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@319 (type $generated@@390))))
(let (($generated@@392 ($generated@@318 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@95 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@394) $generated@@163)) (= ($generated@@0 ($generated@@100 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@100 ($generated@@315 $generated@@393) ($generated@@161 ($generated@@377 $generated@@154 $generated@@394)))) (= ($generated@@100 ($generated@@388 $generated@@393) ($generated@@161 ($generated@@377 $generated@@154 $generated@@394))) ($generated@@162 ($generated@@377 $generated@@154 $generated@@394))))))
 :pattern ( ($generated@@100 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@300 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@299 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@100 ($generated@@344 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@100 ($generated@@297 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@100 ($generated@@378 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@100 ($generated@@297 $generated@@395) $generated@@399))
 :pattern ( ($generated@@100 ($generated@@378 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@100 ($generated@@344 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@318 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@317 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@100 ($generated@@355 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@100 ($generated@@315 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@100 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@100 ($generated@@315 $generated@@400) $generated@@404))
 :pattern ( ($generated@@100 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@100 ($generated@@355 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@299 $generated@@163 $generated@@163)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@95 $generated@@96 $generated@@97))) (= ($generated@@93 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@163) ($generated@@0 ($generated@@100 ($generated@@297 $generated@@408) $generated@@412))) (and ($generated@@265 ($generated@@100 ($generated@@378 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@265 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@100 ($generated@@378 $generated@@408) $generated@@412))
 :pattern ( ($generated@@100 ($generated@@297 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@93 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@95 $generated@@96 $generated@@97))) (= ($generated@@93 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@163) ($generated@@0 ($generated@@100 ($generated@@315 $generated@@416) $generated@@420))) (and ($generated@@265 ($generated@@100 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@265 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@100 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@100 ($generated@@315 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@93 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@T) ) (! (= (type ($generated@@421 $generated@@422)) ($generated@@95 $generated@@422 $generated@@4))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@319 (type $generated@@423))))
(let (($generated@@425 ($generated@@318 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@317 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@316 $generated@@425 $generated@@424)) (= ($generated@@315 $generated@@423) ($generated@@421 $generated@@425))))))
 :pattern ( ($generated@@315 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@319 (type $generated@@426))))
(let (($generated@@428 ($generated@@318 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@317 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@316 $generated@@428 $generated@@427)) (= ($generated@@355 $generated@@426) ($generated@@421 $generated@@427))))))
 :pattern ( ($generated@@355 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@319 (type $generated@@429))))
(let (($generated@@431 ($generated@@318 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@317 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@316 $generated@@431 $generated@@430)) (= ($generated@@387 $generated@@429) ($generated@@421 $generated@@163))))))
 :pattern ( ($generated@@387 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@301 (type $generated@@432))))
(let (($generated@@434 ($generated@@300 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@299 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@298 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@163) (= (type $generated@@436) $generated@@163)) ($generated@@0 ($generated@@100 ($generated@@376 $generated@@432) ($generated@@286 ($generated@@242 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@376 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@319 (type $generated@@437))))
(let (($generated@@439 ($generated@@318 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@317 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@316 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@163) (= (type $generated@@441) $generated@@163)) ($generated@@0 ($generated@@100 ($generated@@387 $generated@@437) ($generated@@286 ($generated@@242 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@387 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@163) ($generated@@243 $generated@@442 $generated@@46)) (and (= ($generated@@286 ($generated@@377 $generated@@2 $generated@@442)) $generated@@442) ($generated@@76 ($generated@@377 $generated@@2 $generated@@442) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@442 $generated@@46))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@163) ($generated@@243 $generated@@443 $generated@@47)) (and (= ($generated@@286 ($generated@@377 $generated@@3 $generated@@443)) $generated@@443) ($generated@@76 ($generated@@377 $generated@@3 $generated@@443) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@443 $generated@@47))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@163) ($generated@@243 $generated@@444 $generated@@44)) (and (= ($generated@@286 ($generated@@377 $generated@@4 $generated@@444)) $generated@@444) ($generated@@76 ($generated@@377 $generated@@4 $generated@@444) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@444 $generated@@44))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@163) ($generated@@243 $generated@@445 $generated@@45)) (and (= ($generated@@286 ($generated@@377 $generated@@74 $generated@@445)) $generated@@445) ($generated@@76 ($generated@@377 $generated@@74 $generated@@445) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@445 $generated@@45))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (= (type $generated@@447) $generated@@64) (= ($generated@@243 ($generated@@286 $generated@@446) $generated@@447) ($generated@@76 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@243 ($generated@@286 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@98 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@95 $generated@@449 $generated@@2)) (<= 0 ($generated@@291 $generated@@448))))
 :pattern ( ($generated@@291 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@280 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@279 $generated@@451)) (<= 0 ($generated@@278 $generated@@450))))
 :pattern ( ($generated@@278 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@405 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@405 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@405 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@405 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@91 ($generated@@405 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@413 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@413 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@413 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@413 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@91 ($generated@@413 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@163) (= (type $generated@@473) $generated@@163)) (= ($generated@@271 ($generated@@242 $generated@@472 $generated@@473)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@153 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@153 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@153 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@153 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@163) (= (type $generated@@483) $generated@@163)) (= ($generated@@161 ($generated@@242 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@242 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@163) (= (type $generated@@485) $generated@@163)) (= ($generated@@162 ($generated@@242 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@242 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 ($generated@@280 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489 $generated@@490)) $generated@@491))
 :pattern ( ($generated@@487 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@279 $generated@@163)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) ($generated@@95 $generated@@96 $generated@@97))) (= ($generated@@93 $generated@@492 ($generated@@486 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@278 $generated@@492))) ($generated@@265 ($generated@@487 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@487 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@93 $generated@@492 ($generated@@486 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@94 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@94 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@252 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@252 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@91 ($generated@@252 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@257 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@257 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@91 ($generated@@257 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@168 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@168 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@91 ($generated@@168 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@486 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@486 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@91 ($generated@@486 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@486 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@377 $generated@@515 ($generated@@286 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@286 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@299 $generated@@163 $generated@@163)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@76 $generated@@516 ($generated@@405 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@163) ($generated@@0 ($generated@@100 ($generated@@297 $generated@@516) $generated@@519))) (and ($generated@@243 ($generated@@100 ($generated@@378 $generated@@516) $generated@@519) $generated@@518) ($generated@@243 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@100 ($generated@@378 $generated@@516) $generated@@519))
 :pattern ( ($generated@@100 ($generated@@297 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@76 $generated@@516 ($generated@@405 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@76 $generated@@520 ($generated@@413 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@163) ($generated@@0 ($generated@@100 ($generated@@315 $generated@@520) $generated@@523))) (and ($generated@@243 ($generated@@100 ($generated@@388 $generated@@520) $generated@@523) $generated@@522) ($generated@@243 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@100 ($generated@@388 $generated@@520) $generated@@523))
 :pattern ( ($generated@@100 ($generated@@315 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@76 $generated@@520 ($generated@@413 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@163) (= (type $generated@@527) $generated@@163)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@242 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@242 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@163) (= (type $generated@@529) $generated@@163)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@242 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@242 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@163) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@243 $generated@@530 ($generated@@405 $generated@@531 $generated@@532))) (and (= ($generated@@286 ($generated@@377 ($generated@@299 $generated@@163 $generated@@163) $generated@@530)) $generated@@530) ($generated@@76 ($generated@@377 ($generated@@299 $generated@@163 $generated@@163) $generated@@530) ($generated@@405 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@243 $generated@@530 ($generated@@405 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@163) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) ($generated@@243 $generated@@533 ($generated@@413 $generated@@534 $generated@@535))) (and (= ($generated@@286 ($generated@@377 ($generated@@317 $generated@@163 $generated@@163) $generated@@533)) $generated@@533) ($generated@@76 ($generated@@377 ($generated@@317 $generated@@163 $generated@@163) $generated@@533) ($generated@@413 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@243 $generated@@533 ($generated@@413 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@163)) ($generated@@243 $generated@@538 ($generated@@153 $generated@@536 $generated@@537))) (and (= ($generated@@286 ($generated@@377 $generated@@154 $generated@@538)) $generated@@538) ($generated@@76 ($generated@@377 $generated@@154 $generated@@538) ($generated@@153 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@243 $generated@@538 ($generated@@153 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@100 ($generated@@421 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@100 ($generated@@421 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@69)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (and (= ($generated@@91 ($generated@@153 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@153 $generated@@543 $generated@@544)) $generated@@63)))
 :pattern ( ($generated@@153 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@154) (= ($generated@@524 ($generated@@286 $generated@@545)) ($generated@@525 $generated@@545)))
 :pattern ( ($generated@@524 ($generated@@286 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@163) ($generated@@243 $generated@@546 ($generated@@94 0))) (and (= ($generated@@286 ($generated@@377 $generated@@2 $generated@@546)) $generated@@546) ($generated@@76 ($generated@@377 ($generated@@95 $generated@@163 $generated@@4) $generated@@546) ($generated@@94 0))))
 :pattern ( ($generated@@243 $generated@@546 ($generated@@94 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@163) (= (type $generated@@548) $generated@@64)) ($generated@@243 $generated@@547 ($generated@@252 $generated@@548))) (and (= ($generated@@286 ($generated@@377 ($generated@@95 $generated@@163 $generated@@4) $generated@@547)) $generated@@547) ($generated@@76 ($generated@@377 ($generated@@95 $generated@@163 $generated@@4) $generated@@547) ($generated@@252 $generated@@548))))
 :pattern ( ($generated@@243 $generated@@547 ($generated@@252 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@163) (= (type $generated@@550) $generated@@64)) ($generated@@243 $generated@@549 ($generated@@257 $generated@@550))) (and (= ($generated@@286 ($generated@@377 ($generated@@95 $generated@@163 $generated@@4) $generated@@549)) $generated@@549) ($generated@@76 ($generated@@377 ($generated@@95 $generated@@163 $generated@@4) $generated@@549) ($generated@@257 $generated@@550))))
 :pattern ( ($generated@@243 $generated@@549 ($generated@@257 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@163) (= (type $generated@@552) $generated@@64)) ($generated@@243 $generated@@551 ($generated@@168 $generated@@552))) (and (= ($generated@@286 ($generated@@377 ($generated@@95 $generated@@163 $generated@@2) $generated@@551)) $generated@@551) ($generated@@76 ($generated@@377 ($generated@@95 $generated@@163 $generated@@2) $generated@@551) ($generated@@168 $generated@@552))))
 :pattern ( ($generated@@243 $generated@@551 ($generated@@168 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@163) (= (type $generated@@554) $generated@@64)) ($generated@@243 $generated@@553 ($generated@@486 $generated@@554))) (and (= ($generated@@286 ($generated@@377 ($generated@@279 $generated@@163) $generated@@553)) $generated@@553) ($generated@@76 ($generated@@377 ($generated@@279 $generated@@163) $generated@@553) ($generated@@486 $generated@@554))))
 :pattern ( ($generated@@243 $generated@@553 ($generated@@486 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@95 $generated@@163 $generated@@2)) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@95 $generated@@96 $generated@@97))) (= ($generated@@93 $generated@@555 ($generated@@168 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@163) (< 0 ($generated ($generated@@100 $generated@@555 $generated@@558)))) ($generated@@265 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@100 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@93 $generated@@555 ($generated@@168 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@154) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@95 $generated@@96 $generated@@97))) (and ($generated@@264 $generated@@561) (and ($generated@@152 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@93 $generated@@559 ($generated@@153 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@93 $generated@@559 ($generated@@153 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@265 ($generated@@161 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@265 ($generated@@161 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@95 $generated@@96 $generated@@97))) (and ($generated@@264 $generated@@565) (and ($generated@@152 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@93 $generated@@563 ($generated@@153 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@93 $generated@@563 ($generated@@153 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@265 ($generated@@162 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@265 ($generated@@162 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@163) (= (type $generated@@568) $generated@@163)) (= ($generated@@242 ($generated@@78 $generated@@567) ($generated@@78 $generated@@568)) ($generated@@78 ($generated@@242 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@242 ($generated@@78 $generated@@567) ($generated@@78 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@286 ($generated@@78 $generated@@569)) ($generated@@78 ($generated@@286 $generated@@569)))
 :pattern ( ($generated@@286 ($generated@@78 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@280 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@279 $generated@@571)) (= ($generated@@278 $generated@@570) 0)) (= $generated@@570 ($generated@@277 $generated@@571))))
 :pattern ( ($generated@@278 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@95 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@291 ($generated@@101 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@291 $generated@@572) ($generated ($generated@@100 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@291 ($generated@@101 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@95 $generated@@96 $generated@@97)) (= (type $generated@@577) $generated@@2)) ($generated@@93 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@93 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@95 $generated@@96 $generated@@97)) (= (type $generated@@579) $generated@@3)) ($generated@@93 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@93 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@95 $generated@@96 $generated@@97)) (= (type $generated@@581) $generated@@4)) ($generated@@93 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@93 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@95 $generated@@96 $generated@@97)) (= (type $generated@@583) $generated@@74)) ($generated@@93 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@93 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@95 $generated@@96 $generated@@97)) (= (type $generated@@585) $generated@@163)) ($generated@@93 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@93 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@279 $generated@@163)) (= (type $generated@@587) $generated@@64)) (= ($generated@@76 $generated@@586 ($generated@@486 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@278 $generated@@586))) ($generated@@243 ($generated@@487 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@487 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@76 $generated@@586 ($generated@@486 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@279 $generated@@163)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@278 $generated@@590))) (< ($generated@@525 ($generated@@377 $generated@@154 ($generated@@487 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@525 ($generated@@377 $generated@@154 ($generated@@487 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@299 $generated@@163 $generated@@163)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@76 $generated@@592 ($generated@@405 $generated@@593 $generated@@594))) (and (and ($generated@@76 ($generated@@297 $generated@@592) ($generated@@252 $generated@@593)) ($generated@@76 ($generated@@344 $generated@@592) ($generated@@252 $generated@@594))) ($generated@@76 ($generated@@376 $generated@@592) ($generated@@252 ($generated@@153 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@76 $generated@@592 ($generated@@405 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@317 $generated@@163 $generated@@163)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@76 $generated@@595 ($generated@@413 $generated@@596 $generated@@597))) (and (and ($generated@@76 ($generated@@315 $generated@@595) ($generated@@257 $generated@@596)) ($generated@@76 ($generated@@355 $generated@@595) ($generated@@257 $generated@@597))) ($generated@@76 ($generated@@387 $generated@@595) ($generated@@257 ($generated@@153 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@76 $generated@@595 ($generated@@413 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@76 $generated@@598 $generated@@46))
 :pattern ( ($generated@@76 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@76 $generated@@599 $generated@@47))
 :pattern ( ($generated@@76 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@76 $generated@@600 $generated@@44))
 :pattern ( ($generated@@76 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@74) ($generated@@76 $generated@@601 $generated@@45))
 :pattern ( ($generated@@76 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@163) ($generated@@76 $generated@@602 $generated@@48))
 :pattern ( ($generated@@76 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@603) $generated@@74) (= (type $generated@@604) ($generated@@176 $generated@@96 $generated@@4))) (= (type $generated@@605) $generated@@96)) (= (type $generated@@606) ($generated@@95 $generated@@96 $generated@@97))) (= (type $generated@@607) ($generated@@176 $generated@@96 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@609 true))
(let (($generated@@610  (=> (<= ($generated@@77 $generated@@603) ($generated@@77 ($generated@@78 ($generated@@79 90)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@77 ($generated@@78 ($generated@@79 65))) ($generated@@77 $generated@@603))) (=> (<= ($generated@@77 ($generated@@78 ($generated@@79 65))) ($generated@@77 $generated@@603)) (=> (= (ControlFlow 0 3) (- 0 2)) (< (+ ($generated@@77 ($generated@@81 $generated@@603 ($generated@@79 65))) ($generated@@77 ($generated@@78 ($generated@@79 97)))) 65536)))))))
(let (($generated@@611  (=> (= $generated@@604 ($generated@@230 $generated@@605 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@610) (=> (= (ControlFlow 0 6) 5) $generated@@609)))))
(let (($generated@@612 true))
(let (($generated@@613  (=> (= $generated@@607 ($generated@@175 $generated@@605 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@612) (=> (= (ControlFlow 0 7) 6) $generated@@611)))))
(let (($generated@@614  (=> (and (and (and ($generated@@264 $generated@@606) ($generated@@608 $generated@@606)) ($generated@@76 $generated@@603 $generated@@45)) (and (= 0 $generated@@72) (= (ControlFlow 0 8) 7))) $generated@@613)))
$generated@@614)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (Int) T@U)
(declare-fun $generated@@236 (T@U) Int)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 (T@U T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@253 (T@T) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@274 (T@T T@T) T@U)
(declare-fun $generated@@275 (T@T T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@312 (T@U T@U) T@U)
(declare-fun $generated@@317 (T@U T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@T) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@U Int) T@U)
(declare-fun $generated@@477 (T@U) Int)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert  (and (= ($generated@@1 $generated@@237) 17) (forall (($generated@@238 Int) ) (! (= (type ($generated@@235 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@235 $generated@@238))
))))
(assert (forall (($generated@@239 Int) ) (!  (=> (and (<= 0 $generated@@239) (< $generated@@239 65536)) (= ($generated@@236 ($generated@@235 $generated@@239)) $generated@@239))
 :pattern ( ($generated@@235 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@145)) (= (type $generated@@245) $generated@@145)) (= (type $generated@@246) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@240 $generated@@246)) (= ($generated@@74 ($generated@@211 $generated@@244 $generated@@245) ($generated@@135 $generated@@242 $generated@@243) $generated@@246)  (and ($generated@@241 $generated@@244 $generated@@242 $generated@@246) ($generated@@241 $generated@@245 $generated@@243 $generated@@246))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@244 $generated@@245) ($generated@@135 $generated@@242 $generated@@243) $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@68)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@136) (= ($generated@@134 $generated@@249) (= ($generated@@247 $generated@@249) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@136) ($generated@@134 $generated@@250)) (exists (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (and (and (= (type $generated@@251) $generated@@145) (= (type $generated@@252) $generated@@145)) (= $generated@@250 ($generated@@211 $generated@@251 $generated@@252)))
 :no-pattern (type $generated@@251)
 :no-pattern (type $generated@@252)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
)))
 :pattern ( ($generated@@134 $generated@@250))
)))
(assert  (and (and (forall (($generated@@257 T@T) ) (= ($generated@@1 ($generated@@255 $generated@@257)) 18)) (forall (($generated@@258 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@258)) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
))) (forall (($generated@@259 T@T) ) (! (= (type ($generated@@253 $generated@@259)) ($generated@@255 $generated@@259))
 :pattern ( ($generated@@253 $generated@@259))
))))
(assert (forall (($generated@@260 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@260)) 0)
 :pattern ( ($generated@@253 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@237) (and (and (= ($generated@@235 ($generated@@236 $generated@@261)) $generated@@261) (<= 0 ($generated@@236 $generated@@261))) (< ($generated@@236 $generated@@261) 65536)))
 :pattern ( ($generated@@236 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@145)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@241 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@269 T@T) ) (! (= (type ($generated@@268 $generated@@269)) ($generated@@76 $generated@@269 $generated@@2))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@79 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@76 $generated@@271 $generated@@2)) (and (= (= ($generated@@267 $generated@@270) 0) (= $generated@@270 ($generated@@268 $generated@@271))) (=> (not (= ($generated@@267 $generated@@270) 0)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) (< 0 ($generated ($generated@@81 $generated@@270 $generated@@272))))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert  (and (and (and (and (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@278 $generated@@279)) 19)) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@280 $generated@@281)) $generated@@280)
 :pattern ( ($generated@@275 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@275 $generated@@282 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@275 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@276 (type $generated@@284))))
(= (type ($generated@@273 $generated@@284)) ($generated@@76 $generated@@285 $generated@@4)))
 :pattern ( ($generated@@273 $generated@@284))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= (type ($generated@@274 $generated@@286 $generated@@287)) ($generated@@275 $generated@@286 $generated@@287))
 :pattern ( ($generated@@274 $generated@@286 $generated@@287))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@T) ) (! (let (($generated@@290 (type $generated@@288)))
 (not ($generated@@0 ($generated@@81 ($generated@@273 ($generated@@274 $generated@@290 $generated@@289)) $generated@@288))))
 :pattern ( (let (($generated@@290 (type $generated@@288)))
($generated@@81 ($generated@@273 ($generated@@274 $generated@@290 $generated@@289)) $generated@@288)))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 20)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@79 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@76 $generated@@310 $generated@@2)) (= ($generated@@151 $generated@@309) (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@310) (and (<= 0 ($generated ($generated@@81 $generated@@309 $generated@@311))) (<= ($generated ($generated@@81 $generated@@309 $generated@@311)) ($generated@@267 $generated@@309))))
 :pattern ( ($generated@@81 $generated@@309 $generated@@311))
)))))
 :pattern ( ($generated@@151 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (= (type ($generated@@312 $generated@@313 $generated@@314)) $generated@@237)
 :pattern ( ($generated@@312 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@237) (= (type $generated@@316) $generated@@237)) (= ($generated@@312 $generated@@315 $generated@@316) ($generated@@235 (- ($generated@@236 $generated@@315) ($generated@@236 $generated@@316)))))
 :pattern ( ($generated@@312 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (= (type ($generated@@317 $generated@@318 $generated@@319)) $generated@@237)
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@237) (= (type $generated@@321) $generated@@237)) (= ($generated@@317 $generated@@320 $generated@@321) ($generated@@235 (+ ($generated@@236 $generated@@320) ($generated@@236 $generated@@321)))))
 :pattern ( ($generated@@317 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@277 (type $generated@@322))))
(let (($generated@@324 ($generated@@276 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@275 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@274 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@273 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@277 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@277 (type $generated@@329))))
(let (($generated@@331 ($generated@@276 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@275 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@274 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@295 (type $generated@@333))))
(let (($generated@@335 ($generated@@294 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@293 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@292 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@291 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@295 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@295 (type $generated@@340))))
(let (($generated@@342 ($generated@@294 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@293 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@292 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@345) $generated@@64)) (= ($generated@@132 $generated@@344 ($generated@@150 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@344 $generated@@346)))) ($generated@@212 $generated@@346 $generated@@345))
 :pattern ( ($generated@@81 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@132 $generated@@344 ($generated@@150 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@348) $generated@@64)) (= (type $generated@@349) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@347 ($generated@@221 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@145) ($generated@@0 ($generated@@81 $generated@@347 $generated@@350))) ($generated@@241 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@81 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@74 $generated@@347 ($generated@@221 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@226 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@241 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@226 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@81 ($generated@@268 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@81 ($generated@@268 $generated@@356) $generated@@355)))
)))
(assert  (and (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@357 $generated@@360)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@357 $generated@@360))
)) (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@358 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@277 (type $generated@@363))))
(let (($generated@@365 ($generated@@276 (type $generated@@363))))
(= (type ($generated@@359 $generated@@363)) ($generated@@76 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@359 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@367) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@81 ($generated@@273 $generated@@366) ($generated@@143 ($generated@@358 $generated@@136 $generated@@367)))) (= ($generated@@81 ($generated@@359 $generated@@366) ($generated@@143 ($generated@@358 $generated@@136 $generated@@367))) ($generated@@144 ($generated@@358 $generated@@136 $generated@@367))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@375) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@143 ($generated@@358 $generated@@136 $generated@@375)))) (= ($generated@@81 ($generated@@369 $generated@@374) ($generated@@143 ($generated@@358 $generated@@136 $generated@@375))) ($generated@@144 ($generated@@358 $generated@@136 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@276 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@275 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@81 ($generated@@326 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@81 ($generated@@273 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@81 ($generated@@359 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@376) $generated@@380))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@81 ($generated@@326 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@294 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@293 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@64)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@389) $generated@@393))) (and ($generated@@241 ($generated@@81 ($generated@@359 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@241 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@241 ($generated@@81 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@241 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@T) ) (! (= (type ($generated@@402 $generated@@403)) ($generated@@76 $generated@@403 $generated@@4))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@295 (type $generated@@404))))
(let (($generated@@406 ($generated@@294 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@293 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@292 $generated@@406 $generated@@405)) (= ($generated@@291 $generated@@404) ($generated@@402 $generated@@406))))))
 :pattern ( ($generated@@291 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@295 (type $generated@@407))))
(let (($generated@@409 ($generated@@294 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@293 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@292 $generated@@409 $generated@@408)) (= ($generated@@337 $generated@@407) ($generated@@402 $generated@@408))))))
 :pattern ( ($generated@@337 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@295 (type $generated@@410))))
(let (($generated@@412 ($generated@@294 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@293 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@292 $generated@@412 $generated@@411)) (= ($generated@@368 $generated@@410) ($generated@@402 $generated@@145))))))
 :pattern ( ($generated@@368 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@277 (type $generated@@413))))
(let (($generated@@415 ($generated@@276 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@275 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@274 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (and (and (= (type $generated@@416) $generated@@145) (= (type $generated@@417) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@413) ($generated@@262 ($generated@@211 $generated@@416 $generated@@417)))))
 :no-pattern (type $generated@@416)
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@357 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@295 (type $generated@@418))))
(let (($generated@@420 ($generated@@294 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@293 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@292 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@145) (= (type $generated@@422) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@418) ($generated@@262 ($generated@@211 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@368 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@145) ($generated@@212 $generated@@423 $generated@@46)) (and (= ($generated@@262 ($generated@@358 $generated@@2 $generated@@423)) $generated@@423) ($generated@@132 ($generated@@358 $generated@@2 $generated@@423) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@423 $generated@@46))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@145) ($generated@@212 $generated@@424 $generated@@47)) (and (= ($generated@@262 ($generated@@358 $generated@@3 $generated@@424)) $generated@@424) ($generated@@132 ($generated@@358 $generated@@3 $generated@@424) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@424 $generated@@47))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@212 $generated@@425 $generated@@44)) (and (= ($generated@@262 ($generated@@358 $generated@@4 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@358 $generated@@4 $generated@@425) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@425 $generated@@44))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@212 $generated@@426 $generated@@45)) (and (= ($generated@@262 ($generated@@358 $generated@@237 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@358 $generated@@237 $generated@@426) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@426 $generated@@45))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@64) (= ($generated@@212 ($generated@@262 $generated@@427) $generated@@428) ($generated@@132 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@212 ($generated@@262 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@79 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@76 $generated@@430 $generated@@2)) (<= 0 ($generated@@267 $generated@@429))))
 :pattern ( ($generated@@267 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@256 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@255 $generated@@432)) (<= 0 ($generated@@254 $generated@@431))))
 :pattern ( ($generated@@254 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@64) (= (type $generated@@436) $generated@@64)) (= ($generated@@433 ($generated@@386 $generated@@435 $generated@@436)) $generated@@435))
 :pattern ( ($generated@@386 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@437 ($generated@@386 $generated@@439 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@386 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@72 ($generated@@386 $generated@@441 $generated@@442)) $generated@@58))
 :pattern ( ($generated@@386 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@394 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@394 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@394 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@394 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@451 $generated@@452)) $generated@@59))
 :pattern ( ($generated@@394 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) (= (type $generated@@454) $generated@@145)) (= ($generated@@247 ($generated@@211 $generated@@453 $generated@@454)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@135 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@135 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@135 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@135 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@211 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@145) (= (type $generated@@466) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@211 $generated@@465 $generated@@466))
)))
(assert  (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@469))
)) (forall (($generated@@470 T@U) ($generated@@471 Int) ) (! (let (($generated@@472 ($generated@@256 (type $generated@@470))))
(= (type ($generated@@468 $generated@@470 $generated@@471)) $generated@@472))
 :pattern ( ($generated@@468 $generated@@470 $generated@@471))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@255 $generated@@145)) (= (type $generated@@474) $generated@@64)) (= (type $generated@@475) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@473 ($generated@@467 $generated@@474) $generated@@475) (forall (($generated@@476 Int) ) (!  (=> (and (<= 0 $generated@@476) (< $generated@@476 ($generated@@254 $generated@@473))) ($generated@@241 ($generated@@468 $generated@@473 $generated@@476) $generated@@474 $generated@@475))
 :pattern ( ($generated@@468 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@74 $generated@@473 ($generated@@467 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 Int) ) (! (= ($generated@@477 ($generated@@75 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@75 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@479 ($generated@@221 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@221 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@482)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@226 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@226 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@486)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@150 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@150 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@490)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@467 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@467 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@467 $generated@@494)) $generated@@57))
 :pattern ( ($generated@@467 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(= ($generated@@358 $generated@@496 ($generated@@262 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@262 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@498) $generated@@64)) (= (type $generated@@499) $generated@@64)) (= ($generated@@132 $generated@@497 ($generated@@386 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@497) $generated@@500))) (and ($generated@@212 ($generated@@81 ($generated@@359 $generated@@497) $generated@@500) $generated@@499) ($generated@@212 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@497) $generated@@500))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@132 $generated@@497 ($generated@@386 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) (= ($generated@@132 $generated@@501 ($generated@@394 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@501) $generated@@504))) (and ($generated@@212 ($generated@@81 ($generated@@369 $generated@@501) $generated@@504) $generated@@503) ($generated@@212 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@501) $generated@@504))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@132 $generated@@501 ($generated@@394 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) (= (type $generated@@508) $generated@@145)) (< ($generated@@505 $generated@@507) ($generated@@506 ($generated@@211 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@211 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@145)) (< ($generated@@505 $generated@@510) ($generated@@506 ($generated@@211 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@211 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@145) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) ($generated@@212 $generated@@511 ($generated@@386 $generated@@512 $generated@@513))) (and (= ($generated@@262 ($generated@@358 ($generated@@275 $generated@@145 $generated@@145) $generated@@511)) $generated@@511) ($generated@@132 ($generated@@358 ($generated@@275 $generated@@145 $generated@@145) $generated@@511) ($generated@@386 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@511 ($generated@@386 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@514 ($generated@@394 $generated@@515 $generated@@516))) (and (= ($generated@@262 ($generated@@358 ($generated@@293 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@358 ($generated@@293 $generated@@145 $generated@@145) $generated@@514) ($generated@@394 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@394 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@145)) ($generated@@212 $generated@@519 ($generated@@135 $generated@@517 $generated@@518))) (and (= ($generated@@262 ($generated@@358 $generated@@136 $generated@@519)) $generated@@519) ($generated@@132 ($generated@@358 $generated@@136 $generated@@519) ($generated@@135 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@135 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
 (not ($generated@@0 ($generated@@81 ($generated@@402 $generated@@521) $generated@@520))))
 :pattern ( (let (($generated@@521 (type $generated@@520)))
($generated@@81 ($generated@@402 $generated@@521) $generated@@520)))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@524 $generated@@525)) $generated@@62) (= ($generated@@522 ($generated@@135 $generated@@524 $generated@@525)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@136) (= ($generated@@505 ($generated@@262 $generated@@526)) ($generated@@506 $generated@@526)))
 :pattern ( ($generated@@505 ($generated@@262 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) ($generated@@212 $generated@@527 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@358 $generated@@2 $generated@@527)) $generated@@527) ($generated@@132 ($generated@@358 ($generated@@76 $generated@@145 $generated@@4) $generated@@527) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@75 0)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@212 $generated@@528 ($generated@@221 $generated@@529))) (and (= ($generated@@262 ($generated@@358 ($generated@@76 $generated@@145 $generated@@4) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@358 ($generated@@76 $generated@@145 $generated@@4) $generated@@528) ($generated@@221 $generated@@529))))
 :pattern ( ($generated@@212 $generated@@528 ($generated@@221 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@226 $generated@@531))) (and (= ($generated@@262 ($generated@@358 ($generated@@76 $generated@@145 $generated@@4) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@358 ($generated@@76 $generated@@145 $generated@@4) $generated@@530) ($generated@@226 $generated@@531))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@226 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@212 $generated@@532 ($generated@@150 $generated@@533))) (and (= ($generated@@262 ($generated@@358 ($generated@@76 $generated@@145 $generated@@2) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@358 ($generated@@76 $generated@@145 $generated@@2) $generated@@532) ($generated@@150 $generated@@533))))
 :pattern ( ($generated@@212 $generated@@532 ($generated@@150 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@212 $generated@@534 ($generated@@467 $generated@@535))) (and (= ($generated@@262 ($generated@@358 ($generated@@255 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@358 ($generated@@255 $generated@@145) $generated@@534) ($generated@@467 $generated@@535))))
 :pattern ( ($generated@@212 $generated@@534 ($generated@@467 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@536 ($generated@@150 $generated@@537) $generated@@538) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@536 $generated@@539)))) ($generated@@241 $generated@@539 $generated@@537 $generated@@538))
 :pattern ( ($generated@@81 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@74 $generated@@536 ($generated@@150 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@136) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@240 $generated@@542) (and ($generated@@134 $generated@@540) (exists (($generated@@543 T@U) ) (!  (and (= (type $generated@@543) $generated@@64) ($generated@@74 $generated@@540 ($generated@@135 $generated@@541 $generated@@543) $generated@@542))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@135 $generated@@541 $generated@@543) $generated@@542))
))))) ($generated@@241 ($generated@@143 $generated@@540) $generated@@541 $generated@@542))
 :pattern ( ($generated@@241 ($generated@@143 $generated@@540) $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@136) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@240 $generated@@546) (and ($generated@@134 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@64) ($generated@@74 $generated@@544 ($generated@@135 $generated@@547 $generated@@545) $generated@@546))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@135 $generated@@547 $generated@@545) $generated@@546))
))))) ($generated@@241 ($generated@@144 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@241 ($generated@@144 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@548) ($generated@@231 $generated@@549)) ($generated@@231 ($generated@@211 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@548) ($generated@@231 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= ($generated@@262 ($generated@@231 $generated@@550)) ($generated@@231 ($generated@@262 $generated@@550)))
 :pattern ( ($generated@@262 ($generated@@231 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@256 (type $generated@@551))))
 (=> (and (= (type $generated@@551) ($generated@@255 $generated@@552)) (= ($generated@@254 $generated@@551) 0)) (= $generated@@551 ($generated@@253 $generated@@552))))
 :pattern ( ($generated@@254 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@554)))
 (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@556 $generated@@2)) (= (type $generated@@555) $generated@@2)) (<= 0 ($generated $generated@@555))) (= ($generated@@267 ($generated@@82 $generated@@553 $generated@@554 $generated@@555)) (+ (- ($generated@@267 $generated@@553) ($generated ($generated@@81 $generated@@553 $generated@@554))) ($generated $generated@@555)))))
 :pattern ( ($generated@@267 ($generated@@82 $generated@@553 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@2)) ($generated@@74 $generated@@558 $generated@@46 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@46 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@3)) ($generated@@74 $generated@@560 $generated@@47 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@47 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@4)) ($generated@@74 $generated@@562 $generated@@44 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@44 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@237)) ($generated@@74 $generated@@564 $generated@@45 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@45 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@145)) ($generated@@74 $generated@@566 $generated@@48 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@48 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@255 $generated@@145)) (= (type $generated@@568) $generated@@64)) (= ($generated@@132 $generated@@567 ($generated@@467 $generated@@568)) (forall (($generated@@569 Int) ) (!  (=> (and (<= 0 $generated@@569) (< $generated@@569 ($generated@@254 $generated@@567))) ($generated@@212 ($generated@@468 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@468 $generated@@567 $generated@@569))
))))
 :pattern ( ($generated@@132 $generated@@567 ($generated@@467 $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 Int) ) (!  (=> (= (type $generated@@571) ($generated@@255 $generated@@145)) (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@254 $generated@@571))) (< ($generated@@506 ($generated@@358 $generated@@136 ($generated@@468 $generated@@571 $generated@@572))) ($generated@@570 $generated@@571))))
 :pattern ( ($generated@@506 ($generated@@358 $generated@@136 ($generated@@468 $generated@@571 $generated@@572))))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) $generated@@64)) ($generated@@132 $generated@@573 ($generated@@386 $generated@@574 $generated@@575))) (and (and ($generated@@132 ($generated@@273 $generated@@573) ($generated@@221 $generated@@574)) ($generated@@132 ($generated@@326 $generated@@573) ($generated@@221 $generated@@575))) ($generated@@132 ($generated@@357 $generated@@573) ($generated@@221 ($generated@@135 $generated@@574 $generated@@575)))))
 :pattern ( ($generated@@132 $generated@@573 ($generated@@386 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@132 $generated@@576 ($generated@@394 $generated@@577 $generated@@578))) (and (and ($generated@@132 ($generated@@291 $generated@@576) ($generated@@226 $generated@@577)) ($generated@@132 ($generated@@337 $generated@@576) ($generated@@226 $generated@@578))) ($generated@@132 ($generated@@368 $generated@@576) ($generated@@226 ($generated@@135 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@394 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@2) ($generated@@132 $generated@@579 $generated@@46))
 :pattern ( ($generated@@132 $generated@@579 $generated@@46))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@3) ($generated@@132 $generated@@580 $generated@@47))
 :pattern ( ($generated@@132 $generated@@580 $generated@@47))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@4) ($generated@@132 $generated@@581 $generated@@44))
 :pattern ( ($generated@@132 $generated@@581 $generated@@44))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@237) ($generated@@132 $generated@@582 $generated@@45))
 :pattern ( ($generated@@132 $generated@@582 $generated@@45))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@145) ($generated@@132 $generated@@583 $generated@@48))
 :pattern ( ($generated@@132 $generated@@583 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 (T@U) Bool)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () Int)
(assert  (and (and (and (and (and (= (type $generated@@584) $generated@@237) (= (type $generated@@585) $generated@@237)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@589) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@590) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@592  (=> (and (= $generated@@584 ($generated@@317 $generated@@584 ($generated@@235 0))) (= ($generated@@317 $generated@@584 ($generated@@235 0)) ($generated@@312 $generated@@584 ($generated@@235 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@236 ($generated@@231 ($generated@@235 32))) ($generated@@236 $generated@@585))) (=> (<= ($generated@@236 ($generated@@231 ($generated@@235 32))) ($generated@@236 $generated@@585)) (=> (< ($generated@@236 ($generated@@312 $generated@@585 ($generated@@235 32))) ($generated@@236 $generated@@585)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< (+ ($generated@@236 $generated@@585) ($generated@@236 ($generated@@231 ($generated@@235 32)))) 65536)) (=> (< (+ ($generated@@236 $generated@@585) ($generated@@236 ($generated@@231 ($generated@@235 32)))) 65536) (=> (> ($generated@@236 ($generated@@317 $generated@@585 ($generated@@235 32))) ($generated@@236 $generated@@585)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (< (+ ($generated@@236 ($generated@@231 ($generated@@235 10))) ($generated@@236 $generated@@585)) 65536)) (=> (< (+ ($generated@@236 ($generated@@231 ($generated@@235 10))) ($generated@@236 $generated@@585)) 65536) (=> (= (ControlFlow 0 2) (- 0 1)) (< (+ ($generated@@236 $generated@@585) ($generated@@236 ($generated@@231 ($generated@@235 10)))) 65536)))))))))))))
(let (($generated@@593  (=> (and (not (= $generated@@584 ($generated@@317 $generated@@584 ($generated@@235 0)))) (= (ControlFlow 0 9) 2)) $generated@@592)))
(let (($generated@@594  (=> (= $generated@@584 ($generated@@317 $generated@@584 ($generated@@235 0))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (< (+ ($generated@@236 $generated@@584) ($generated@@236 ($generated@@231 ($generated@@235 0)))) 65536)) (=> (< (+ ($generated@@236 $generated@@584) ($generated@@236 ($generated@@231 ($generated@@235 0)))) 65536) (and (=> (= (ControlFlow 0 6) (- 0 7)) (<= ($generated@@236 ($generated@@231 ($generated@@235 0))) ($generated@@236 $generated@@584))) (=> (<= ($generated@@236 ($generated@@231 ($generated@@235 0))) ($generated@@236 $generated@@584)) (=> (= (ControlFlow 0 6) 2) $generated@@592))))))))
(let (($generated@@595  (=> (and (< ($generated@@236 ($generated@@231 ($generated@@235 114))) ($generated@@236 $generated@@585)) (< ($generated@@236 $generated@@585) ($generated@@236 ($generated@@231 ($generated@@235 43981))))) (=> (and (and ($generated@@240 $generated@@586) ($generated@@587 $generated@@586)) (= $generated@@588 $generated@@586)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (< (+ ($generated@@236 $generated@@584) ($generated@@236 ($generated@@231 ($generated@@235 0)))) 65536)) (=> (< (+ ($generated@@236 $generated@@584) ($generated@@236 ($generated@@231 ($generated@@235 0)))) 65536) (and (=> (= (ControlFlow 0 10) 6) $generated@@594) (=> (= (ControlFlow 0 10) 9) $generated@@593))))))))
(let (($generated@@596  (=> (and (<= ($generated@@236 $generated@@585) ($generated@@236 ($generated@@231 ($generated@@235 114)))) (= (ControlFlow 0 13) 10)) $generated@@595)))
(let (($generated@@597  (=> (and (< ($generated@@236 ($generated@@231 ($generated@@235 114))) ($generated@@236 $generated@@585)) (= (ControlFlow 0 12) 10)) $generated@@595)))
(let (($generated@@598  (=> (= $generated@@589 ($generated@@156 $generated@@590 $generated@@588 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 12) $generated@@597) (=> (= (ControlFlow 0 14) 13) $generated@@596)))))
(let (($generated@@599  (=> (and ($generated@@240 $generated@@588) ($generated@@587 $generated@@588)) (=> (and (and ($generated@@132 $generated@@584 $generated@@45) ($generated@@132 $generated@@585 $generated@@45)) (and (= 0 $generated@@591) (= (ControlFlow 0 15) 14))) $generated@@598))))
$generated@@599)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (Int) T@U)
(declare-fun $generated@@236 (T@U) Int)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 (T@U T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@253 (T@T) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@274 (T@T T@T) T@U)
(declare-fun $generated@@275 (T@T T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@312 (T@U T@U) T@U)
(declare-fun $generated@@317 (T@U T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@T) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@U Int) T@U)
(declare-fun $generated@@477 (T@U) Int)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert  (and (= ($generated@@1 $generated@@237) 17) (forall (($generated@@238 Int) ) (! (= (type ($generated@@235 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@235 $generated@@238))
))))
(assert (forall (($generated@@239 Int) ) (!  (=> (and (<= 0 $generated@@239) (< $generated@@239 65536)) (= ($generated@@236 ($generated@@235 $generated@@239)) $generated@@239))
 :pattern ( ($generated@@235 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@145)) (= (type $generated@@245) $generated@@145)) (= (type $generated@@246) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@240 $generated@@246)) (= ($generated@@74 ($generated@@211 $generated@@244 $generated@@245) ($generated@@135 $generated@@242 $generated@@243) $generated@@246)  (and ($generated@@241 $generated@@244 $generated@@242 $generated@@246) ($generated@@241 $generated@@245 $generated@@243 $generated@@246))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@244 $generated@@245) ($generated@@135 $generated@@242 $generated@@243) $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@68)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@136) (= ($generated@@134 $generated@@249) (= ($generated@@247 $generated@@249) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@136) ($generated@@134 $generated@@250)) (exists (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (and (and (= (type $generated@@251) $generated@@145) (= (type $generated@@252) $generated@@145)) (= $generated@@250 ($generated@@211 $generated@@251 $generated@@252)))
 :no-pattern (type $generated@@251)
 :no-pattern (type $generated@@252)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
)))
 :pattern ( ($generated@@134 $generated@@250))
)))
(assert  (and (and (forall (($generated@@257 T@T) ) (= ($generated@@1 ($generated@@255 $generated@@257)) 18)) (forall (($generated@@258 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@258)) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
))) (forall (($generated@@259 T@T) ) (! (= (type ($generated@@253 $generated@@259)) ($generated@@255 $generated@@259))
 :pattern ( ($generated@@253 $generated@@259))
))))
(assert (forall (($generated@@260 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@260)) 0)
 :pattern ( ($generated@@253 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@237) (and (and (= ($generated@@235 ($generated@@236 $generated@@261)) $generated@@261) (<= 0 ($generated@@236 $generated@@261))) (< ($generated@@236 $generated@@261) 65536)))
 :pattern ( ($generated@@236 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@145)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@241 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@269 T@T) ) (! (= (type ($generated@@268 $generated@@269)) ($generated@@76 $generated@@269 $generated@@2))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@79 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@76 $generated@@271 $generated@@2)) (and (= (= ($generated@@267 $generated@@270) 0) (= $generated@@270 ($generated@@268 $generated@@271))) (=> (not (= ($generated@@267 $generated@@270) 0)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) (< 0 ($generated ($generated@@81 $generated@@270 $generated@@272))))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert  (and (and (and (and (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@278 $generated@@279)) 19)) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@280 $generated@@281)) $generated@@280)
 :pattern ( ($generated@@275 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@275 $generated@@282 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@275 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@276 (type $generated@@284))))
(= (type ($generated@@273 $generated@@284)) ($generated@@76 $generated@@285 $generated@@4)))
 :pattern ( ($generated@@273 $generated@@284))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= (type ($generated@@274 $generated@@286 $generated@@287)) ($generated@@275 $generated@@286 $generated@@287))
 :pattern ( ($generated@@274 $generated@@286 $generated@@287))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@T) ) (! (let (($generated@@290 (type $generated@@288)))
 (not ($generated@@0 ($generated@@81 ($generated@@273 ($generated@@274 $generated@@290 $generated@@289)) $generated@@288))))
 :pattern ( (let (($generated@@290 (type $generated@@288)))
($generated@@81 ($generated@@273 ($generated@@274 $generated@@290 $generated@@289)) $generated@@288)))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 20)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@79 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@76 $generated@@310 $generated@@2)) (= ($generated@@151 $generated@@309) (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@310) (and (<= 0 ($generated ($generated@@81 $generated@@309 $generated@@311))) (<= ($generated ($generated@@81 $generated@@309 $generated@@311)) ($generated@@267 $generated@@309))))
 :pattern ( ($generated@@81 $generated@@309 $generated@@311))
)))))
 :pattern ( ($generated@@151 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (= (type ($generated@@312 $generated@@313 $generated@@314)) $generated@@237)
 :pattern ( ($generated@@312 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@237) (= (type $generated@@316) $generated@@237)) (= ($generated@@312 $generated@@315 $generated@@316) ($generated@@235 (- ($generated@@236 $generated@@315) ($generated@@236 $generated@@316)))))
 :pattern ( ($generated@@312 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (= (type ($generated@@317 $generated@@318 $generated@@319)) $generated@@237)
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@237) (= (type $generated@@321) $generated@@237)) (= ($generated@@317 $generated@@320 $generated@@321) ($generated@@235 (+ ($generated@@236 $generated@@320) ($generated@@236 $generated@@321)))))
 :pattern ( ($generated@@317 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@277 (type $generated@@322))))
(let (($generated@@324 ($generated@@276 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@275 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@274 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@273 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@277 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@277 (type $generated@@329))))
(let (($generated@@331 ($generated@@276 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@275 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@274 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@295 (type $generated@@333))))
(let (($generated@@335 ($generated@@294 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@293 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@292 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@291 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@295 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@295 (type $generated@@340))))
(let (($generated@@342 ($generated@@294 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@293 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@292 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@345) $generated@@64)) (= ($generated@@132 $generated@@344 ($generated@@150 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@344 $generated@@346)))) ($generated@@212 $generated@@346 $generated@@345))
 :pattern ( ($generated@@81 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@132 $generated@@344 ($generated@@150 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@348) $generated@@64)) (= (type $generated@@349) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@347 ($generated@@221 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@145) ($generated@@0 ($generated@@81 $generated@@347 $generated@@350))) ($generated@@241 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@81 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@74 $generated@@347 ($generated@@221 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@226 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@241 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@226 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@81 ($generated@@268 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@81 ($generated@@268 $generated@@356) $generated@@355)))
)))
(assert  (and (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@357 $generated@@360)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@357 $generated@@360))
)) (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@358 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@277 (type $generated@@363))))
(let (($generated@@365 ($generated@@276 (type $generated@@363))))
(= (type ($generated@@359 $generated@@363)) ($generated@@76 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@359 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@367) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@81 ($generated@@273 $generated@@366) ($generated@@143 ($generated@@358 $generated@@136 $generated@@367)))) (= ($generated@@81 ($generated@@359 $generated@@366) ($generated@@143 ($generated@@358 $generated@@136 $generated@@367))) ($generated@@144 ($generated@@358 $generated@@136 $generated@@367))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@375) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@143 ($generated@@358 $generated@@136 $generated@@375)))) (= ($generated@@81 ($generated@@369 $generated@@374) ($generated@@143 ($generated@@358 $generated@@136 $generated@@375))) ($generated@@144 ($generated@@358 $generated@@136 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@276 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@275 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@81 ($generated@@326 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@81 ($generated@@273 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@81 ($generated@@359 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@376) $generated@@380))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@81 ($generated@@326 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@294 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@293 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@64)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@389) $generated@@393))) (and ($generated@@241 ($generated@@81 ($generated@@359 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@241 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@241 ($generated@@81 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@241 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@T) ) (! (= (type ($generated@@402 $generated@@403)) ($generated@@76 $generated@@403 $generated@@4))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@295 (type $generated@@404))))
(let (($generated@@406 ($generated@@294 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@293 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@292 $generated@@406 $generated@@405)) (= ($generated@@291 $generated@@404) ($generated@@402 $generated@@406))))))
 :pattern ( ($generated@@291 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@295 (type $generated@@407))))
(let (($generated@@409 ($generated@@294 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@293 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@292 $generated@@409 $generated@@408)) (= ($generated@@337 $generated@@407) ($generated@@402 $generated@@408))))))
 :pattern ( ($generated@@337 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@295 (type $generated@@410))))
(let (($generated@@412 ($generated@@294 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@293 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@292 $generated@@412 $generated@@411)) (= ($generated@@368 $generated@@410) ($generated@@402 $generated@@145))))))
 :pattern ( ($generated@@368 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@277 (type $generated@@413))))
(let (($generated@@415 ($generated@@276 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@275 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@274 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (and (and (= (type $generated@@416) $generated@@145) (= (type $generated@@417) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@413) ($generated@@262 ($generated@@211 $generated@@416 $generated@@417)))))
 :no-pattern (type $generated@@416)
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@357 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@295 (type $generated@@418))))
(let (($generated@@420 ($generated@@294 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@293 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@292 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@145) (= (type $generated@@422) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@418) ($generated@@262 ($generated@@211 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@368 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@145) ($generated@@212 $generated@@423 $generated@@46)) (and (= ($generated@@262 ($generated@@358 $generated@@2 $generated@@423)) $generated@@423) ($generated@@132 ($generated@@358 $generated@@2 $generated@@423) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@423 $generated@@46))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@145) ($generated@@212 $generated@@424 $generated@@47)) (and (= ($generated@@262 ($generated@@358 $generated@@3 $generated@@424)) $generated@@424) ($generated@@132 ($generated@@358 $generated@@3 $generated@@424) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@424 $generated@@47))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@212 $generated@@425 $generated@@44)) (and (= ($generated@@262 ($generated@@358 $generated@@4 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@358 $generated@@4 $generated@@425) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@425 $generated@@44))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@212 $generated@@426 $generated@@45)) (and (= ($generated@@262 ($generated@@358 $generated@@237 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@358 $generated@@237 $generated@@426) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@426 $generated@@45))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@64) (= ($generated@@212 ($generated@@262 $generated@@427) $generated@@428) ($generated@@132 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@212 ($generated@@262 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@79 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@76 $generated@@430 $generated@@2)) (<= 0 ($generated@@267 $generated@@429))))
 :pattern ( ($generated@@267 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@256 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@255 $generated@@432)) (<= 0 ($generated@@254 $generated@@431))))
 :pattern ( ($generated@@254 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@64) (= (type $generated@@436) $generated@@64)) (= ($generated@@433 ($generated@@386 $generated@@435 $generated@@436)) $generated@@435))
 :pattern ( ($generated@@386 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@437 ($generated@@386 $generated@@439 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@386 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@72 ($generated@@386 $generated@@441 $generated@@442)) $generated@@58))
 :pattern ( ($generated@@386 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@394 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@394 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@394 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@394 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@451 $generated@@452)) $generated@@59))
 :pattern ( ($generated@@394 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) (= (type $generated@@454) $generated@@145)) (= ($generated@@247 ($generated@@211 $generated@@453 $generated@@454)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@135 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@135 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@135 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@135 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@211 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@145) (= (type $generated@@466) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@211 $generated@@465 $generated@@466))
)))
(assert  (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@469))
)) (forall (($generated@@470 T@U) ($generated@@471 Int) ) (! (let (($generated@@472 ($generated@@256 (type $generated@@470))))
(= (type ($generated@@468 $generated@@470 $generated@@471)) $generated@@472))
 :pattern ( ($generated@@468 $generated@@470 $generated@@471))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@255 $generated@@145)) (= (type $generated@@474) $generated@@64)) (= (type $generated@@475) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@473 ($generated@@467 $generated@@474) $generated@@475) (forall (($generated@@476 Int) ) (!  (=> (and (<= 0 $generated@@476) (< $generated@@476 ($generated@@254 $generated@@473))) ($generated@@241 ($generated@@468 $generated@@473 $generated@@476) $generated@@474 $generated@@475))
 :pattern ( ($generated@@468 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@74 $generated@@473 ($generated@@467 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 Int) ) (! (= ($generated@@477 ($generated@@75 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@75 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@479 ($generated@@221 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@221 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@482)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@226 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@226 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@486)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@150 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@150 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@490)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@467 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@467 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@467 $generated@@494)) $generated@@57))
 :pattern ( ($generated@@467 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(= ($generated@@358 $generated@@496 ($generated@@262 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@262 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@498) $generated@@64)) (= (type $generated@@499) $generated@@64)) (= ($generated@@132 $generated@@497 ($generated@@386 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@497) $generated@@500))) (and ($generated@@212 ($generated@@81 ($generated@@359 $generated@@497) $generated@@500) $generated@@499) ($generated@@212 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@497) $generated@@500))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@132 $generated@@497 ($generated@@386 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) (= ($generated@@132 $generated@@501 ($generated@@394 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@501) $generated@@504))) (and ($generated@@212 ($generated@@81 ($generated@@369 $generated@@501) $generated@@504) $generated@@503) ($generated@@212 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@501) $generated@@504))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@132 $generated@@501 ($generated@@394 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) (= (type $generated@@508) $generated@@145)) (< ($generated@@505 $generated@@507) ($generated@@506 ($generated@@211 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@211 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@145)) (< ($generated@@505 $generated@@510) ($generated@@506 ($generated@@211 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@211 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@145) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) ($generated@@212 $generated@@511 ($generated@@386 $generated@@512 $generated@@513))) (and (= ($generated@@262 ($generated@@358 ($generated@@275 $generated@@145 $generated@@145) $generated@@511)) $generated@@511) ($generated@@132 ($generated@@358 ($generated@@275 $generated@@145 $generated@@145) $generated@@511) ($generated@@386 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@511 ($generated@@386 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@514 ($generated@@394 $generated@@515 $generated@@516))) (and (= ($generated@@262 ($generated@@358 ($generated@@293 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@358 ($generated@@293 $generated@@145 $generated@@145) $generated@@514) ($generated@@394 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@394 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@145)) ($generated@@212 $generated@@519 ($generated@@135 $generated@@517 $generated@@518))) (and (= ($generated@@262 ($generated@@358 $generated@@136 $generated@@519)) $generated@@519) ($generated@@132 ($generated@@358 $generated@@136 $generated@@519) ($generated@@135 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@135 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
 (not ($generated@@0 ($generated@@81 ($generated@@402 $generated@@521) $generated@@520))))
 :pattern ( (let (($generated@@521 (type $generated@@520)))
($generated@@81 ($generated@@402 $generated@@521) $generated@@520)))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@524 $generated@@525)) $generated@@62) (= ($generated@@522 ($generated@@135 $generated@@524 $generated@@525)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@136) (= ($generated@@505 ($generated@@262 $generated@@526)) ($generated@@506 $generated@@526)))
 :pattern ( ($generated@@505 ($generated@@262 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) ($generated@@212 $generated@@527 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@358 $generated@@2 $generated@@527)) $generated@@527) ($generated@@132 ($generated@@358 ($generated@@76 $generated@@145 $generated@@4) $generated@@527) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@75 0)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@212 $generated@@528 ($generated@@221 $generated@@529))) (and (= ($generated@@262 ($generated@@358 ($generated@@76 $generated@@145 $generated@@4) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@358 ($generated@@76 $generated@@145 $generated@@4) $generated@@528) ($generated@@221 $generated@@529))))
 :pattern ( ($generated@@212 $generated@@528 ($generated@@221 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@226 $generated@@531))) (and (= ($generated@@262 ($generated@@358 ($generated@@76 $generated@@145 $generated@@4) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@358 ($generated@@76 $generated@@145 $generated@@4) $generated@@530) ($generated@@226 $generated@@531))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@226 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@212 $generated@@532 ($generated@@150 $generated@@533))) (and (= ($generated@@262 ($generated@@358 ($generated@@76 $generated@@145 $generated@@2) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@358 ($generated@@76 $generated@@145 $generated@@2) $generated@@532) ($generated@@150 $generated@@533))))
 :pattern ( ($generated@@212 $generated@@532 ($generated@@150 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@212 $generated@@534 ($generated@@467 $generated@@535))) (and (= ($generated@@262 ($generated@@358 ($generated@@255 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@358 ($generated@@255 $generated@@145) $generated@@534) ($generated@@467 $generated@@535))))
 :pattern ( ($generated@@212 $generated@@534 ($generated@@467 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@536 ($generated@@150 $generated@@537) $generated@@538) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@536 $generated@@539)))) ($generated@@241 $generated@@539 $generated@@537 $generated@@538))
 :pattern ( ($generated@@81 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@74 $generated@@536 ($generated@@150 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@136) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@240 $generated@@542) (and ($generated@@134 $generated@@540) (exists (($generated@@543 T@U) ) (!  (and (= (type $generated@@543) $generated@@64) ($generated@@74 $generated@@540 ($generated@@135 $generated@@541 $generated@@543) $generated@@542))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@135 $generated@@541 $generated@@543) $generated@@542))
))))) ($generated@@241 ($generated@@143 $generated@@540) $generated@@541 $generated@@542))
 :pattern ( ($generated@@241 ($generated@@143 $generated@@540) $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@136) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@240 $generated@@546) (and ($generated@@134 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@64) ($generated@@74 $generated@@544 ($generated@@135 $generated@@547 $generated@@545) $generated@@546))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@135 $generated@@547 $generated@@545) $generated@@546))
))))) ($generated@@241 ($generated@@144 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@241 ($generated@@144 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@548) ($generated@@231 $generated@@549)) ($generated@@231 ($generated@@211 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@548) ($generated@@231 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= ($generated@@262 ($generated@@231 $generated@@550)) ($generated@@231 ($generated@@262 $generated@@550)))
 :pattern ( ($generated@@262 ($generated@@231 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@256 (type $generated@@551))))
 (=> (and (= (type $generated@@551) ($generated@@255 $generated@@552)) (= ($generated@@254 $generated@@551) 0)) (= $generated@@551 ($generated@@253 $generated@@552))))
 :pattern ( ($generated@@254 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@554)))
 (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@556 $generated@@2)) (= (type $generated@@555) $generated@@2)) (<= 0 ($generated $generated@@555))) (= ($generated@@267 ($generated@@82 $generated@@553 $generated@@554 $generated@@555)) (+ (- ($generated@@267 $generated@@553) ($generated ($generated@@81 $generated@@553 $generated@@554))) ($generated $generated@@555)))))
 :pattern ( ($generated@@267 ($generated@@82 $generated@@553 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@2)) ($generated@@74 $generated@@558 $generated@@46 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@46 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@3)) ($generated@@74 $generated@@560 $generated@@47 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@47 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@4)) ($generated@@74 $generated@@562 $generated@@44 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@44 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@237)) ($generated@@74 $generated@@564 $generated@@45 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@45 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@145)) ($generated@@74 $generated@@566 $generated@@48 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@48 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@255 $generated@@145)) (= (type $generated@@568) $generated@@64)) (= ($generated@@132 $generated@@567 ($generated@@467 $generated@@568)) (forall (($generated@@569 Int) ) (!  (=> (and (<= 0 $generated@@569) (< $generated@@569 ($generated@@254 $generated@@567))) ($generated@@212 ($generated@@468 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@468 $generated@@567 $generated@@569))
))))
 :pattern ( ($generated@@132 $generated@@567 ($generated@@467 $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 Int) ) (!  (=> (= (type $generated@@571) ($generated@@255 $generated@@145)) (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@254 $generated@@571))) (< ($generated@@506 ($generated@@358 $generated@@136 ($generated@@468 $generated@@571 $generated@@572))) ($generated@@570 $generated@@571))))
 :pattern ( ($generated@@506 ($generated@@358 $generated@@136 ($generated@@468 $generated@@571 $generated@@572))))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) $generated@@64)) ($generated@@132 $generated@@573 ($generated@@386 $generated@@574 $generated@@575))) (and (and ($generated@@132 ($generated@@273 $generated@@573) ($generated@@221 $generated@@574)) ($generated@@132 ($generated@@326 $generated@@573) ($generated@@221 $generated@@575))) ($generated@@132 ($generated@@357 $generated@@573) ($generated@@221 ($generated@@135 $generated@@574 $generated@@575)))))
 :pattern ( ($generated@@132 $generated@@573 ($generated@@386 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@132 $generated@@576 ($generated@@394 $generated@@577 $generated@@578))) (and (and ($generated@@132 ($generated@@291 $generated@@576) ($generated@@226 $generated@@577)) ($generated@@132 ($generated@@337 $generated@@576) ($generated@@226 $generated@@578))) ($generated@@132 ($generated@@368 $generated@@576) ($generated@@226 ($generated@@135 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@394 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@2) ($generated@@132 $generated@@579 $generated@@46))
 :pattern ( ($generated@@132 $generated@@579 $generated@@46))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@3) ($generated@@132 $generated@@580 $generated@@47))
 :pattern ( ($generated@@132 $generated@@580 $generated@@47))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@4) ($generated@@132 $generated@@581 $generated@@44))
 :pattern ( ($generated@@132 $generated@@581 $generated@@44))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@237) ($generated@@132 $generated@@582 $generated@@45))
 :pattern ( ($generated@@132 $generated@@582 $generated@@45))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@145) ($generated@@132 $generated@@583 $generated@@48))
 :pattern ( ($generated@@132 $generated@@583 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 (T@U) Bool)
(declare-fun $generated@@590 () Int)
(assert  (and (and (and (and (= (type $generated@@584) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@585) $generated@@77)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@587) $generated@@237)) (= (type $generated@@588) $generated@@237)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@591  (=> (= $generated@@584 ($generated@@156 $generated@@585 $generated@@586 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (= $generated@@587 ($generated@@317 $generated@@587 ($generated@@235 0)))) (=> (= $generated@@587 ($generated@@317 $generated@@587 ($generated@@235 0))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated@@317 $generated@@587 ($generated@@235 0)) ($generated@@312 $generated@@587 ($generated@@235 0)))) (=> (= ($generated@@317 $generated@@587 ($generated@@235 0)) ($generated@@312 $generated@@587 ($generated@@235 0))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< ($generated@@236 ($generated@@312 $generated@@588 ($generated@@235 32))) ($generated@@236 $generated@@588))) (=> (< ($generated@@236 ($generated@@312 $generated@@588 ($generated@@235 32))) ($generated@@236 $generated@@588)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> ($generated@@236 ($generated@@317 $generated@@588 ($generated@@235 32))) ($generated@@236 $generated@@588))) (=> (> ($generated@@236 ($generated@@317 $generated@@588 ($generated@@235 32))) ($generated@@236 $generated@@588)) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@317 ($generated@@235 10) $generated@@588) ($generated@@317 $generated@@588 ($generated@@235 10)))))))))))))))
(let (($generated@@592  (=> (and (and (and ($generated@@240 $generated@@586) ($generated@@589 $generated@@586)) (and ($generated@@132 $generated@@587 $generated@@45) ($generated@@132 $generated@@588 $generated@@45))) (and (and (= 0 $generated@@590) (< ($generated@@236 ($generated@@231 ($generated@@235 114))) ($generated@@236 $generated@@588))) (and (< ($generated@@236 $generated@@588) ($generated@@236 ($generated@@231 ($generated@@235 43981)))) (= (ControlFlow 0 7) 2)))) $generated@@591)))
$generated@@592)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
