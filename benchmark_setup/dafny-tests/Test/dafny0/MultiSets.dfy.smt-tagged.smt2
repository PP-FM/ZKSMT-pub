(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@553 (T@U T@U) Bool)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (forall (($generated@@137 T@U) ) (! (= (type ($generated@@135 $generated@@137)) $generated@@67)
 :pattern ( ($generated@@135 $generated@@137))
)) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@67) (= (type $generated@@139) $generated@@80)) (= (type $generated@@140) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140)  (or (= $generated@@139 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@78 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@78 0)))
)))
(assert (forall (($generated@@144 T@U) ) (! (= (type ($generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@80)) (= (type $generated@@147) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147) ($generated@@77 $generated@@146 ($generated@@135 $generated@@145) $generated@@147)))
 :pattern ( ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147))
)))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@67)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@150)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@159)) (= (type $generated@@232) $generated@@159)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@150) (= (type $generated@@234) $generated@@150)) (= ($generated@@156 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@156 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@159) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@159) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@67) (= (type $generated@@252) $generated@@67)) (= (type $generated@@253) $generated@@159)) (= (type $generated@@254) $generated@@159)) (= (type $generated@@255) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@249 $generated@@255)) (= ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@150) (= ($generated@@148 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@150) ($generated@@148 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@159) (= (type $generated@@261) $generated@@159)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@148 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@67) (= (type $generated@@271) $generated@@80)) (= ($generated@@141 $generated@@271 ($generated@@143 $generated@@270))  (and ($generated@@141 $generated@@271 ($generated@@135 $generated@@270)) (not (= $generated@@271 $generated@@136)))))
 :pattern ( ($generated@@141 $generated@@271 ($generated@@143 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@159)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@67) (= (type $generated@@276) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@77 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@79 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@82 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@79 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@84 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@72)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@67) (and (= ($generated@@75 ($generated@@135 $generated@@285)) $generated@@63) (= ($generated@@283 ($generated@@135 $generated@@285)) $generated@@66)))
 :pattern ( ($generated@@135 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@67) (and (= ($generated@@75 ($generated@@143 $generated@@286)) $generated@@64) (= ($generated@@283 ($generated@@143 $generated@@286)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@79 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@79 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@82 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@79 $generated@@324 $generated@@2)) (= ($generated@@165 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@84 $generated@@323 $generated@@325))) (<= ($generated ($generated@@84 $generated@@323 $generated@@325)) ($generated@@277 $generated@@323))))
 :pattern ( ($generated@@84 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@165 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@67)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@67) (= (type $generated@@329) $generated@@80)) (= ($generated@@141 $generated@@329 ($generated@@135 $generated@@328))  (or (= $generated@@329 $generated@@136) (= ($generated@@326 $generated@@329) ($generated@@135 $generated@@328)))))
 :pattern ( ($generated@@141 $generated@@329 ($generated@@135 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@79 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@79 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@353) $generated@@67)) (= ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@352 $generated@@354)))) ($generated@@226 $generated@@354 $generated@@353))
 :pattern ( ($generated@@84 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@356) $generated@@67)) (= (type $generated@@357) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@355 ($generated@@235 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@159) ($generated@@0 ($generated@@84 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@84 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@77 $generated@@355 ($generated@@235 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@240 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@159) ($generated@@0 ($generated@@84 $generated@@359 $generated@@362))) ($generated@@250 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@84 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@240 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@84 ($generated@@278 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@84 ($generated@@278 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@291 (type $generated@@371))))
(let (($generated@@373 ($generated@@290 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@79 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@375) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@374) ($generated@@157 ($generated@@366 $generated@@150 $generated@@375)))) (= ($generated@@84 ($generated@@367 $generated@@374) ($generated@@157 ($generated@@366 $generated@@150 $generated@@375))) ($generated@@158 ($generated@@366 $generated@@150 $generated@@375))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@309 (type $generated@@379))))
(let (($generated@@381 ($generated@@308 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@79 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@383) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@382) ($generated@@157 ($generated@@366 $generated@@150 $generated@@383)))) (= ($generated@@84 ($generated@@377 $generated@@382) ($generated@@157 ($generated@@366 $generated@@150 $generated@@383))) ($generated@@158 ($generated@@366 $generated@@150 $generated@@383))))))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@290 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@289 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@84 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@84 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@384) $generated@@388))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@308 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@307 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@84 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@397) $generated@@401))) (and ($generated@@250 ($generated@@84 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@250 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@67)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@405) $generated@@409))) (and ($generated@@250 ($generated@@84 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@250 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@79 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@159))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@159) (= (type $generated@@425) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@421) ($generated@@272 ($generated@@225 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@159) (= (type $generated@@430) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@376 $generated@@426) ($generated@@272 ($generated@@225 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@159) ($generated@@226 $generated@@431 $generated@@46)) (and (= ($generated@@272 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@159) ($generated@@226 $generated@@432 $generated@@47)) (and (= ($generated@@272 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@159) ($generated@@226 $generated@@433 $generated@@44)) (and (= ($generated@@272 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@159) ($generated@@226 $generated@@435 $generated@@45)) (and (= ($generated@@272 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@67) (= ($generated@@226 ($generated@@272 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@226 ($generated@@272 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@82 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@79 $generated@@439 $generated@@2)) (<= 0 ($generated@@277 $generated@@438))))
 :pattern ( ($generated@@277 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@265 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@264 $generated@@441)) (<= 0 ($generated@@263 $generated@@440))))
 :pattern ( ($generated@@263 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@394 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@394 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@394 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@394 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@75 ($generated@@394 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@402 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@402 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@402 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@75 ($generated@@402 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@159) (= (type $generated@@463) $generated@@159)) (= ($generated@@256 ($generated@@225 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@149 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@149 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@149 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@149 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@159) (= (type $generated@@473) $generated@@159)) (= ($generated@@157 ($generated@@225 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@225 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@159) (= (type $generated@@475) $generated@@159)) (= ($generated@@158 ($generated@@225 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@225 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@265 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@264 $generated@@159)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@263 $generated@@482))) ($generated@@250 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@78 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@78 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@235 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@235 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@240 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@240 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@496 ($generated@@164 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@164 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@75 ($generated@@164 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@75 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@504 ($generated@@135 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@135 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@143 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@143 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@366 $generated@@511 ($generated@@272 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@272 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) (= ($generated@@141 $generated@@512 ($generated@@394 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@512) $generated@@515))) (and ($generated@@226 ($generated@@84 ($generated@@367 $generated@@512) $generated@@515) $generated@@514) ($generated@@226 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@512) $generated@@515))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@141 $generated@@512 ($generated@@394 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) (= ($generated@@141 $generated@@516 ($generated@@402 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@516) $generated@@519))) (and ($generated@@226 ($generated@@84 ($generated@@377 $generated@@516) $generated@@519) $generated@@518) ($generated@@226 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@516) $generated@@519))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@141 $generated@@516 ($generated@@402 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@159) (= (type $generated@@523) $generated@@159)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@225 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@225 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) (= (type $generated@@525) $generated@@159)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@225 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@225 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@159) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) ($generated@@226 $generated@@526 ($generated@@394 $generated@@527 $generated@@528))) (and (= ($generated@@272 ($generated@@366 ($generated@@289 $generated@@159 $generated@@159) $generated@@526)) $generated@@526) ($generated@@141 ($generated@@366 ($generated@@289 $generated@@159 $generated@@159) $generated@@526) ($generated@@394 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@226 $generated@@526 ($generated@@394 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@159) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@226 $generated@@529 ($generated@@402 $generated@@530 $generated@@531))) (and (= ($generated@@272 ($generated@@366 ($generated@@307 $generated@@159 $generated@@159) $generated@@529)) $generated@@529) ($generated@@141 ($generated@@366 ($generated@@307 $generated@@159 $generated@@159) $generated@@529) ($generated@@402 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@226 $generated@@529 ($generated@@402 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@159)) ($generated@@226 $generated@@534 ($generated@@149 $generated@@532 $generated@@533))) (and (= ($generated@@272 ($generated@@366 $generated@@150 $generated@@534)) $generated@@534) ($generated@@141 ($generated@@366 $generated@@150 $generated@@534) ($generated@@149 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@226 $generated@@534 ($generated@@149 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@84 ($generated@@410 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@84 ($generated@@410 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (and (= ($generated@@75 ($generated@@149 $generated@@537 $generated@@538)) $generated@@62) (= ($generated@@283 ($generated@@149 $generated@@537 $generated@@538)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@150) (= ($generated@@520 ($generated@@272 $generated@@539)) ($generated@@521 $generated@@539)))
 :pattern ( ($generated@@520 ($generated@@272 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@159) ($generated@@226 $generated@@540 ($generated@@78 0))) (and (= ($generated@@272 ($generated@@366 $generated@@2 $generated@@540)) $generated@@540) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@540) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@540 ($generated@@78 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@159) (= (type $generated@@542) $generated@@67)) ($generated@@226 $generated@@541 ($generated@@235 $generated@@542))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@541) ($generated@@235 $generated@@542))))
 :pattern ( ($generated@@226 $generated@@541 ($generated@@235 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@159) (= (type $generated@@544) $generated@@67)) ($generated@@226 $generated@@543 ($generated@@240 $generated@@544))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@543) ($generated@@240 $generated@@544))))
 :pattern ( ($generated@@226 $generated@@543 ($generated@@240 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@67)) ($generated@@226 $generated@@545 ($generated@@164 $generated@@546))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@2) $generated@@545)) $generated@@545) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@2) $generated@@545) ($generated@@164 $generated@@546))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@164 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@159) (= (type $generated@@548) $generated@@67)) ($generated@@226 $generated@@547 ($generated@@476 $generated@@548))) (and (= ($generated@@272 ($generated@@366 ($generated@@264 $generated@@159) $generated@@547)) $generated@@547) ($generated@@141 ($generated@@366 ($generated@@264 $generated@@159) $generated@@547) ($generated@@476 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@547 ($generated@@476 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@159)) ($generated@@226 $generated@@550 ($generated@@135 $generated@@549))) (and (= ($generated@@272 ($generated@@366 $generated@@80 $generated@@550)) $generated@@550) ($generated@@141 ($generated@@366 $generated@@80 $generated@@550) ($generated@@135 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@550 ($generated@@135 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@67) (= (type $generated@@552) $generated@@159)) ($generated@@226 $generated@@552 ($generated@@143 $generated@@551))) (and (= ($generated@@272 ($generated@@366 $generated@@80 $generated@@552)) $generated@@552) ($generated@@141 ($generated@@366 $generated@@80 $generated@@552) ($generated@@143 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@143 $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@82 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@79 $generated@@556 $generated@@4)) (= (type $generated@@555) ($generated@@79 $generated@@556 $generated@@4))) (= ($generated@@553 $generated@@554 $generated@@555) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@556) ($generated@@0 ($generated@@84 $generated@@554 $generated@@557))) ($generated@@0 ($generated@@84 $generated@@555 $generated@@557)))
 :pattern ( ($generated@@84 $generated@@554 $generated@@557))
 :pattern ( ($generated@@84 $generated@@555 $generated@@557))
)))))
 :pattern ( ($generated@@553 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@558 $generated@@561)))) ($generated@@250 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@84 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@150) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@564) (and ($generated@@148 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@150) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@568) (and ($generated@@148 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@67) ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@159) (= (type $generated@@571) $generated@@159)) (= ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)) ($generated@@245 ($generated@@225 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@272 ($generated@@245 $generated@@572)) ($generated@@245 ($generated@@272 $generated@@572)))
 :pattern ( ($generated@@272 ($generated@@245 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@265 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@264 $generated@@574)) (= ($generated@@263 $generated@@573) 0)) (= $generated@@573 ($generated@@262 $generated@@574))))
 :pattern ( ($generated@@263 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@277 $generated@@575) ($generated ($generated@@84 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@2)) ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@3)) ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@4)) ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@434)) ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@159)) ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@264 $generated@@159)) (= (type $generated@@590) $generated@@67)) (= ($generated@@141 $generated@@589 ($generated@@476 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@263 $generated@@589))) ($generated@@226 ($generated@@477 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@477 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@476 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@264 $generated@@159)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@263 $generated@@593))) (< ($generated@@521 ($generated@@366 $generated@@150 ($generated@@477 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@521 ($generated@@366 $generated@@150 ($generated@@477 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@141 $generated@@595 ($generated@@394 $generated@@596 $generated@@597))) (and (and ($generated@@141 ($generated@@287 $generated@@595) ($generated@@235 $generated@@596)) ($generated@@141 ($generated@@334 $generated@@595) ($generated@@235 $generated@@597))) ($generated@@141 ($generated@@365 $generated@@595) ($generated@@235 ($generated@@149 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@141 $generated@@595 ($generated@@394 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@141 $generated@@598 ($generated@@402 $generated@@599 $generated@@600))) (and (and ($generated@@141 ($generated@@305 $generated@@598) ($generated@@240 $generated@@599)) ($generated@@141 ($generated@@345 $generated@@598) ($generated@@240 $generated@@600))) ($generated@@141 ($generated@@376 $generated@@598) ($generated@@240 ($generated@@149 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@141 $generated@@598 ($generated@@402 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@141 $generated@@601 $generated@@46))
 :pattern ( ($generated@@141 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@141 $generated@@602 $generated@@47))
 :pattern ( ($generated@@141 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@141 $generated@@603 $generated@@44))
 :pattern ( ($generated@@141 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@434) ($generated@@141 $generated@@604 $generated@@45))
 :pattern ( ($generated@@141 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@159) ($generated@@141 $generated@@605 $generated@@48))
 :pattern ( ($generated@@141 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@606) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@608) ($generated@@79 $generated@@159 $generated@@4))) (= (type $generated@@609) ($generated@@79 $generated@@159 $generated@@4))) (= (type $generated@@611) $generated@@80)) (= (type $generated@@612) $generated@@67)) (= (type $generated@@613) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@615  (=> (and (= $generated@@606 ($generated@@170 $generated@@136 $generated@@607 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@553 $generated@@608 $generated@@609))))
(let (($generated@@616  (=> (and ($generated@@249 $generated@@607) ($generated@@610 $generated@@607)) (=> (and (and (not (= $generated@@611 $generated@@136)) (and ($generated@@141 $generated@@611 ($generated@@143 $generated@@612)) ($generated@@77 $generated@@611 ($generated@@143 $generated@@612) $generated@@607))) (and ($generated@@141 $generated@@608 ($generated@@235 $generated@@613)) ($generated@@77 $generated@@608 ($generated@@235 $generated@@613) $generated@@607))) (=> (and (and (and ($generated@@141 $generated@@609 ($generated@@235 $generated@@613)) ($generated@@77 $generated@@609 ($generated@@235 $generated@@613) $generated@@607)) (= 0 $generated@@614)) (and (forall (($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@159) ($generated@@226 $generated@@617 $generated@@613)) ($generated@@0 ($generated@@84 $generated@@608 $generated@@617))) ($generated@@0 ($generated@@84 $generated@@609 $generated@@617)))
 :pattern ( ($generated@@84 $generated@@609 $generated@@617))
 :pattern ( ($generated@@84 $generated@@608 $generated@@617))
)) (= (ControlFlow 0 3) 2))) $generated@@615)))))
$generated@@616)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@553 (T@U T@U) Bool)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (forall (($generated@@137 T@U) ) (! (= (type ($generated@@135 $generated@@137)) $generated@@67)
 :pattern ( ($generated@@135 $generated@@137))
)) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@67) (= (type $generated@@139) $generated@@80)) (= (type $generated@@140) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140)  (or (= $generated@@139 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@78 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@78 0)))
)))
(assert (forall (($generated@@144 T@U) ) (! (= (type ($generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@80)) (= (type $generated@@147) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147) ($generated@@77 $generated@@146 ($generated@@135 $generated@@145) $generated@@147)))
 :pattern ( ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147))
)))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@67)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@150)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@159)) (= (type $generated@@232) $generated@@159)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@150) (= (type $generated@@234) $generated@@150)) (= ($generated@@156 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@156 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@159) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@159) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@67) (= (type $generated@@252) $generated@@67)) (= (type $generated@@253) $generated@@159)) (= (type $generated@@254) $generated@@159)) (= (type $generated@@255) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@249 $generated@@255)) (= ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@150) (= ($generated@@148 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@150) ($generated@@148 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@159) (= (type $generated@@261) $generated@@159)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@148 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@67) (= (type $generated@@271) $generated@@80)) (= ($generated@@141 $generated@@271 ($generated@@143 $generated@@270))  (and ($generated@@141 $generated@@271 ($generated@@135 $generated@@270)) (not (= $generated@@271 $generated@@136)))))
 :pattern ( ($generated@@141 $generated@@271 ($generated@@143 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@159)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@67) (= (type $generated@@276) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@77 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@79 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@82 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@79 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@84 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@72)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@67) (and (= ($generated@@75 ($generated@@135 $generated@@285)) $generated@@63) (= ($generated@@283 ($generated@@135 $generated@@285)) $generated@@66)))
 :pattern ( ($generated@@135 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@67) (and (= ($generated@@75 ($generated@@143 $generated@@286)) $generated@@64) (= ($generated@@283 ($generated@@143 $generated@@286)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@79 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@79 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@82 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@79 $generated@@324 $generated@@2)) (= ($generated@@165 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@84 $generated@@323 $generated@@325))) (<= ($generated ($generated@@84 $generated@@323 $generated@@325)) ($generated@@277 $generated@@323))))
 :pattern ( ($generated@@84 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@165 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@67)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@67) (= (type $generated@@329) $generated@@80)) (= ($generated@@141 $generated@@329 ($generated@@135 $generated@@328))  (or (= $generated@@329 $generated@@136) (= ($generated@@326 $generated@@329) ($generated@@135 $generated@@328)))))
 :pattern ( ($generated@@141 $generated@@329 ($generated@@135 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@79 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@79 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@353) $generated@@67)) (= ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@352 $generated@@354)))) ($generated@@226 $generated@@354 $generated@@353))
 :pattern ( ($generated@@84 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@356) $generated@@67)) (= (type $generated@@357) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@355 ($generated@@235 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@159) ($generated@@0 ($generated@@84 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@84 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@77 $generated@@355 ($generated@@235 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@240 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@159) ($generated@@0 ($generated@@84 $generated@@359 $generated@@362))) ($generated@@250 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@84 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@240 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@84 ($generated@@278 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@84 ($generated@@278 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@291 (type $generated@@371))))
(let (($generated@@373 ($generated@@290 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@79 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@375) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@374) ($generated@@157 ($generated@@366 $generated@@150 $generated@@375)))) (= ($generated@@84 ($generated@@367 $generated@@374) ($generated@@157 ($generated@@366 $generated@@150 $generated@@375))) ($generated@@158 ($generated@@366 $generated@@150 $generated@@375))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@309 (type $generated@@379))))
(let (($generated@@381 ($generated@@308 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@79 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@383) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@382) ($generated@@157 ($generated@@366 $generated@@150 $generated@@383)))) (= ($generated@@84 ($generated@@377 $generated@@382) ($generated@@157 ($generated@@366 $generated@@150 $generated@@383))) ($generated@@158 ($generated@@366 $generated@@150 $generated@@383))))))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@290 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@289 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@84 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@84 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@384) $generated@@388))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@308 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@307 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@84 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@397) $generated@@401))) (and ($generated@@250 ($generated@@84 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@250 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@67)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@405) $generated@@409))) (and ($generated@@250 ($generated@@84 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@250 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@79 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@159))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@159) (= (type $generated@@425) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@421) ($generated@@272 ($generated@@225 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@159) (= (type $generated@@430) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@376 $generated@@426) ($generated@@272 ($generated@@225 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@159) ($generated@@226 $generated@@431 $generated@@46)) (and (= ($generated@@272 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@159) ($generated@@226 $generated@@432 $generated@@47)) (and (= ($generated@@272 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@159) ($generated@@226 $generated@@433 $generated@@44)) (and (= ($generated@@272 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@159) ($generated@@226 $generated@@435 $generated@@45)) (and (= ($generated@@272 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@67) (= ($generated@@226 ($generated@@272 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@226 ($generated@@272 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@82 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@79 $generated@@439 $generated@@2)) (<= 0 ($generated@@277 $generated@@438))))
 :pattern ( ($generated@@277 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@265 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@264 $generated@@441)) (<= 0 ($generated@@263 $generated@@440))))
 :pattern ( ($generated@@263 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@394 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@394 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@394 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@394 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@75 ($generated@@394 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@402 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@402 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@402 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@75 ($generated@@402 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@159) (= (type $generated@@463) $generated@@159)) (= ($generated@@256 ($generated@@225 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@149 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@149 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@149 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@149 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@159) (= (type $generated@@473) $generated@@159)) (= ($generated@@157 ($generated@@225 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@225 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@159) (= (type $generated@@475) $generated@@159)) (= ($generated@@158 ($generated@@225 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@225 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@265 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@264 $generated@@159)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@263 $generated@@482))) ($generated@@250 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@78 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@78 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@235 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@235 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@240 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@240 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@496 ($generated@@164 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@164 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@75 ($generated@@164 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@75 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@504 ($generated@@135 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@135 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@143 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@143 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@366 $generated@@511 ($generated@@272 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@272 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) (= ($generated@@141 $generated@@512 ($generated@@394 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@512) $generated@@515))) (and ($generated@@226 ($generated@@84 ($generated@@367 $generated@@512) $generated@@515) $generated@@514) ($generated@@226 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@512) $generated@@515))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@141 $generated@@512 ($generated@@394 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) (= ($generated@@141 $generated@@516 ($generated@@402 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@516) $generated@@519))) (and ($generated@@226 ($generated@@84 ($generated@@377 $generated@@516) $generated@@519) $generated@@518) ($generated@@226 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@516) $generated@@519))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@141 $generated@@516 ($generated@@402 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@159) (= (type $generated@@523) $generated@@159)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@225 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@225 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) (= (type $generated@@525) $generated@@159)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@225 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@225 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@159) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) ($generated@@226 $generated@@526 ($generated@@394 $generated@@527 $generated@@528))) (and (= ($generated@@272 ($generated@@366 ($generated@@289 $generated@@159 $generated@@159) $generated@@526)) $generated@@526) ($generated@@141 ($generated@@366 ($generated@@289 $generated@@159 $generated@@159) $generated@@526) ($generated@@394 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@226 $generated@@526 ($generated@@394 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@159) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@226 $generated@@529 ($generated@@402 $generated@@530 $generated@@531))) (and (= ($generated@@272 ($generated@@366 ($generated@@307 $generated@@159 $generated@@159) $generated@@529)) $generated@@529) ($generated@@141 ($generated@@366 ($generated@@307 $generated@@159 $generated@@159) $generated@@529) ($generated@@402 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@226 $generated@@529 ($generated@@402 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@159)) ($generated@@226 $generated@@534 ($generated@@149 $generated@@532 $generated@@533))) (and (= ($generated@@272 ($generated@@366 $generated@@150 $generated@@534)) $generated@@534) ($generated@@141 ($generated@@366 $generated@@150 $generated@@534) ($generated@@149 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@226 $generated@@534 ($generated@@149 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@84 ($generated@@410 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@84 ($generated@@410 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (and (= ($generated@@75 ($generated@@149 $generated@@537 $generated@@538)) $generated@@62) (= ($generated@@283 ($generated@@149 $generated@@537 $generated@@538)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@150) (= ($generated@@520 ($generated@@272 $generated@@539)) ($generated@@521 $generated@@539)))
 :pattern ( ($generated@@520 ($generated@@272 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@159) ($generated@@226 $generated@@540 ($generated@@78 0))) (and (= ($generated@@272 ($generated@@366 $generated@@2 $generated@@540)) $generated@@540) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@540) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@540 ($generated@@78 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@159) (= (type $generated@@542) $generated@@67)) ($generated@@226 $generated@@541 ($generated@@235 $generated@@542))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@541) ($generated@@235 $generated@@542))))
 :pattern ( ($generated@@226 $generated@@541 ($generated@@235 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@159) (= (type $generated@@544) $generated@@67)) ($generated@@226 $generated@@543 ($generated@@240 $generated@@544))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@543) ($generated@@240 $generated@@544))))
 :pattern ( ($generated@@226 $generated@@543 ($generated@@240 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@67)) ($generated@@226 $generated@@545 ($generated@@164 $generated@@546))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@2) $generated@@545)) $generated@@545) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@2) $generated@@545) ($generated@@164 $generated@@546))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@164 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@159) (= (type $generated@@548) $generated@@67)) ($generated@@226 $generated@@547 ($generated@@476 $generated@@548))) (and (= ($generated@@272 ($generated@@366 ($generated@@264 $generated@@159) $generated@@547)) $generated@@547) ($generated@@141 ($generated@@366 ($generated@@264 $generated@@159) $generated@@547) ($generated@@476 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@547 ($generated@@476 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@159)) ($generated@@226 $generated@@550 ($generated@@135 $generated@@549))) (and (= ($generated@@272 ($generated@@366 $generated@@80 $generated@@550)) $generated@@550) ($generated@@141 ($generated@@366 $generated@@80 $generated@@550) ($generated@@135 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@550 ($generated@@135 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@67) (= (type $generated@@552) $generated@@159)) ($generated@@226 $generated@@552 ($generated@@143 $generated@@551))) (and (= ($generated@@272 ($generated@@366 $generated@@80 $generated@@552)) $generated@@552) ($generated@@141 ($generated@@366 $generated@@80 $generated@@552) ($generated@@143 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@143 $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@82 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@79 $generated@@556 $generated@@4)) (= (type $generated@@555) ($generated@@79 $generated@@556 $generated@@4))) (= ($generated@@553 $generated@@554 $generated@@555) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@556) ($generated@@0 ($generated@@84 $generated@@554 $generated@@557))) ($generated@@0 ($generated@@84 $generated@@555 $generated@@557)))
 :pattern ( ($generated@@84 $generated@@554 $generated@@557))
 :pattern ( ($generated@@84 $generated@@555 $generated@@557))
)))))
 :pattern ( ($generated@@553 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@558 $generated@@561)))) ($generated@@250 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@84 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@150) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@564) (and ($generated@@148 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@150) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@568) (and ($generated@@148 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@67) ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@159) (= (type $generated@@571) $generated@@159)) (= ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)) ($generated@@245 ($generated@@225 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@272 ($generated@@245 $generated@@572)) ($generated@@245 ($generated@@272 $generated@@572)))
 :pattern ( ($generated@@272 ($generated@@245 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@265 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@264 $generated@@574)) (= ($generated@@263 $generated@@573) 0)) (= $generated@@573 ($generated@@262 $generated@@574))))
 :pattern ( ($generated@@263 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@277 $generated@@575) ($generated ($generated@@84 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@2)) ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@3)) ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@4)) ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@434)) ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@159)) ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@264 $generated@@159)) (= (type $generated@@590) $generated@@67)) (= ($generated@@141 $generated@@589 ($generated@@476 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@263 $generated@@589))) ($generated@@226 ($generated@@477 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@477 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@476 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@264 $generated@@159)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@263 $generated@@593))) (< ($generated@@521 ($generated@@366 $generated@@150 ($generated@@477 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@521 ($generated@@366 $generated@@150 ($generated@@477 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@141 $generated@@595 ($generated@@394 $generated@@596 $generated@@597))) (and (and ($generated@@141 ($generated@@287 $generated@@595) ($generated@@235 $generated@@596)) ($generated@@141 ($generated@@334 $generated@@595) ($generated@@235 $generated@@597))) ($generated@@141 ($generated@@365 $generated@@595) ($generated@@235 ($generated@@149 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@141 $generated@@595 ($generated@@394 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@141 $generated@@598 ($generated@@402 $generated@@599 $generated@@600))) (and (and ($generated@@141 ($generated@@305 $generated@@598) ($generated@@240 $generated@@599)) ($generated@@141 ($generated@@345 $generated@@598) ($generated@@240 $generated@@600))) ($generated@@141 ($generated@@376 $generated@@598) ($generated@@240 ($generated@@149 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@141 $generated@@598 ($generated@@402 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@141 $generated@@601 $generated@@46))
 :pattern ( ($generated@@141 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@141 $generated@@602 $generated@@47))
 :pattern ( ($generated@@141 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@141 $generated@@603 $generated@@44))
 :pattern ( ($generated@@141 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@434) ($generated@@141 $generated@@604 $generated@@45))
 :pattern ( ($generated@@141 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@159) ($generated@@141 $generated@@605 $generated@@48))
 :pattern ( ($generated@@141 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(assert  (and (and (and (and (and (= (type $generated@@606) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@608) ($generated@@79 $generated@@159 $generated@@4))) (= (type $generated@@609) ($generated@@79 $generated@@159 $generated@@4))) (= (type $generated@@611) $generated@@80)) (= (type $generated@@612) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@614  (=> (and (= $generated@@606 ($generated@@170 $generated@@136 $generated@@607 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@553 $generated@@608 $generated@@609))))
(let (($generated@@615  (=> (and ($generated@@249 $generated@@607) ($generated@@610 $generated@@607)) (=> (and (and (not (= $generated@@611 $generated@@136)) (and ($generated@@141 $generated@@611 ($generated@@143 $generated@@612)) ($generated@@77 $generated@@611 ($generated@@143 $generated@@612) $generated@@607))) (and ($generated@@141 $generated@@608 ($generated@@235 $generated@@612)) ($generated@@77 $generated@@608 ($generated@@235 $generated@@612) $generated@@607))) (=> (and (and (and ($generated@@141 $generated@@609 ($generated@@235 $generated@@612)) ($generated@@77 $generated@@609 ($generated@@235 $generated@@612) $generated@@607)) (= 0 $generated@@613)) (and (forall (($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@159) ($generated@@226 $generated@@616 $generated@@612)) ($generated@@0 ($generated@@84 $generated@@608 $generated@@616))) ($generated@@0 ($generated@@84 $generated@@609 $generated@@616)))
 :pattern ( ($generated@@84 $generated@@609 $generated@@616))
 :pattern ( ($generated@@84 $generated@@608 $generated@@616))
)) (= (ControlFlow 0 3) 2))) $generated@@614)))))
$generated@@615)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@553 (T@U T@U) Bool)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (forall (($generated@@137 T@U) ) (! (= (type ($generated@@135 $generated@@137)) $generated@@67)
 :pattern ( ($generated@@135 $generated@@137))
)) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@67) (= (type $generated@@139) $generated@@80)) (= (type $generated@@140) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140)  (or (= $generated@@139 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@78 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@78 0)))
)))
(assert (forall (($generated@@144 T@U) ) (! (= (type ($generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@80)) (= (type $generated@@147) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147) ($generated@@77 $generated@@146 ($generated@@135 $generated@@145) $generated@@147)))
 :pattern ( ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147))
)))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@67)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@150)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@159)) (= (type $generated@@232) $generated@@159)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@150) (= (type $generated@@234) $generated@@150)) (= ($generated@@156 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@156 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@159) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@159) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@67) (= (type $generated@@252) $generated@@67)) (= (type $generated@@253) $generated@@159)) (= (type $generated@@254) $generated@@159)) (= (type $generated@@255) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@249 $generated@@255)) (= ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@150) (= ($generated@@148 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@150) ($generated@@148 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@159) (= (type $generated@@261) $generated@@159)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@148 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@67) (= (type $generated@@271) $generated@@80)) (= ($generated@@141 $generated@@271 ($generated@@143 $generated@@270))  (and ($generated@@141 $generated@@271 ($generated@@135 $generated@@270)) (not (= $generated@@271 $generated@@136)))))
 :pattern ( ($generated@@141 $generated@@271 ($generated@@143 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@159)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@67) (= (type $generated@@276) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@77 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@79 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@82 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@79 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@84 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@72)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@67) (and (= ($generated@@75 ($generated@@135 $generated@@285)) $generated@@63) (= ($generated@@283 ($generated@@135 $generated@@285)) $generated@@66)))
 :pattern ( ($generated@@135 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@67) (and (= ($generated@@75 ($generated@@143 $generated@@286)) $generated@@64) (= ($generated@@283 ($generated@@143 $generated@@286)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@79 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@79 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@82 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@79 $generated@@324 $generated@@2)) (= ($generated@@165 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@84 $generated@@323 $generated@@325))) (<= ($generated ($generated@@84 $generated@@323 $generated@@325)) ($generated@@277 $generated@@323))))
 :pattern ( ($generated@@84 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@165 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@67)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@67) (= (type $generated@@329) $generated@@80)) (= ($generated@@141 $generated@@329 ($generated@@135 $generated@@328))  (or (= $generated@@329 $generated@@136) (= ($generated@@326 $generated@@329) ($generated@@135 $generated@@328)))))
 :pattern ( ($generated@@141 $generated@@329 ($generated@@135 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@79 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@79 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@353) $generated@@67)) (= ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@352 $generated@@354)))) ($generated@@226 $generated@@354 $generated@@353))
 :pattern ( ($generated@@84 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@356) $generated@@67)) (= (type $generated@@357) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@355 ($generated@@235 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@159) ($generated@@0 ($generated@@84 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@84 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@77 $generated@@355 ($generated@@235 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@240 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@159) ($generated@@0 ($generated@@84 $generated@@359 $generated@@362))) ($generated@@250 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@84 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@240 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@84 ($generated@@278 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@84 ($generated@@278 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@291 (type $generated@@371))))
(let (($generated@@373 ($generated@@290 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@79 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@375) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@374) ($generated@@157 ($generated@@366 $generated@@150 $generated@@375)))) (= ($generated@@84 ($generated@@367 $generated@@374) ($generated@@157 ($generated@@366 $generated@@150 $generated@@375))) ($generated@@158 ($generated@@366 $generated@@150 $generated@@375))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@309 (type $generated@@379))))
(let (($generated@@381 ($generated@@308 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@79 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@383) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@382) ($generated@@157 ($generated@@366 $generated@@150 $generated@@383)))) (= ($generated@@84 ($generated@@377 $generated@@382) ($generated@@157 ($generated@@366 $generated@@150 $generated@@383))) ($generated@@158 ($generated@@366 $generated@@150 $generated@@383))))))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@290 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@289 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@84 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@84 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@384) $generated@@388))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@308 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@307 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@84 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@397) $generated@@401))) (and ($generated@@250 ($generated@@84 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@250 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@67)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@405) $generated@@409))) (and ($generated@@250 ($generated@@84 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@250 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@79 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@159))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@159) (= (type $generated@@425) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@421) ($generated@@272 ($generated@@225 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@159) (= (type $generated@@430) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@376 $generated@@426) ($generated@@272 ($generated@@225 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@159) ($generated@@226 $generated@@431 $generated@@46)) (and (= ($generated@@272 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@159) ($generated@@226 $generated@@432 $generated@@47)) (and (= ($generated@@272 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@159) ($generated@@226 $generated@@433 $generated@@44)) (and (= ($generated@@272 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@159) ($generated@@226 $generated@@435 $generated@@45)) (and (= ($generated@@272 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@67) (= ($generated@@226 ($generated@@272 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@226 ($generated@@272 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@82 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@79 $generated@@439 $generated@@2)) (<= 0 ($generated@@277 $generated@@438))))
 :pattern ( ($generated@@277 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@265 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@264 $generated@@441)) (<= 0 ($generated@@263 $generated@@440))))
 :pattern ( ($generated@@263 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@394 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@394 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@394 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@394 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@75 ($generated@@394 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@402 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@402 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@402 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@75 ($generated@@402 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@159) (= (type $generated@@463) $generated@@159)) (= ($generated@@256 ($generated@@225 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@149 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@149 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@149 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@149 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@159) (= (type $generated@@473) $generated@@159)) (= ($generated@@157 ($generated@@225 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@225 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@159) (= (type $generated@@475) $generated@@159)) (= ($generated@@158 ($generated@@225 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@225 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@265 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@264 $generated@@159)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@263 $generated@@482))) ($generated@@250 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@78 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@78 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@235 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@235 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@240 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@240 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@496 ($generated@@164 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@164 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@75 ($generated@@164 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@75 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@504 ($generated@@135 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@135 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@143 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@143 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@366 $generated@@511 ($generated@@272 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@272 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) (= ($generated@@141 $generated@@512 ($generated@@394 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@512) $generated@@515))) (and ($generated@@226 ($generated@@84 ($generated@@367 $generated@@512) $generated@@515) $generated@@514) ($generated@@226 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@512) $generated@@515))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@141 $generated@@512 ($generated@@394 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) (= ($generated@@141 $generated@@516 ($generated@@402 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@516) $generated@@519))) (and ($generated@@226 ($generated@@84 ($generated@@377 $generated@@516) $generated@@519) $generated@@518) ($generated@@226 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@516) $generated@@519))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@141 $generated@@516 ($generated@@402 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@159) (= (type $generated@@523) $generated@@159)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@225 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@225 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) (= (type $generated@@525) $generated@@159)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@225 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@225 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@159) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) ($generated@@226 $generated@@526 ($generated@@394 $generated@@527 $generated@@528))) (and (= ($generated@@272 ($generated@@366 ($generated@@289 $generated@@159 $generated@@159) $generated@@526)) $generated@@526) ($generated@@141 ($generated@@366 ($generated@@289 $generated@@159 $generated@@159) $generated@@526) ($generated@@394 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@226 $generated@@526 ($generated@@394 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@159) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@226 $generated@@529 ($generated@@402 $generated@@530 $generated@@531))) (and (= ($generated@@272 ($generated@@366 ($generated@@307 $generated@@159 $generated@@159) $generated@@529)) $generated@@529) ($generated@@141 ($generated@@366 ($generated@@307 $generated@@159 $generated@@159) $generated@@529) ($generated@@402 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@226 $generated@@529 ($generated@@402 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@159)) ($generated@@226 $generated@@534 ($generated@@149 $generated@@532 $generated@@533))) (and (= ($generated@@272 ($generated@@366 $generated@@150 $generated@@534)) $generated@@534) ($generated@@141 ($generated@@366 $generated@@150 $generated@@534) ($generated@@149 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@226 $generated@@534 ($generated@@149 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@84 ($generated@@410 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@84 ($generated@@410 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (and (= ($generated@@75 ($generated@@149 $generated@@537 $generated@@538)) $generated@@62) (= ($generated@@283 ($generated@@149 $generated@@537 $generated@@538)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@150) (= ($generated@@520 ($generated@@272 $generated@@539)) ($generated@@521 $generated@@539)))
 :pattern ( ($generated@@520 ($generated@@272 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@159) ($generated@@226 $generated@@540 ($generated@@78 0))) (and (= ($generated@@272 ($generated@@366 $generated@@2 $generated@@540)) $generated@@540) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@540) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@540 ($generated@@78 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@159) (= (type $generated@@542) $generated@@67)) ($generated@@226 $generated@@541 ($generated@@235 $generated@@542))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@541) ($generated@@235 $generated@@542))))
 :pattern ( ($generated@@226 $generated@@541 ($generated@@235 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@159) (= (type $generated@@544) $generated@@67)) ($generated@@226 $generated@@543 ($generated@@240 $generated@@544))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@543) ($generated@@240 $generated@@544))))
 :pattern ( ($generated@@226 $generated@@543 ($generated@@240 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@67)) ($generated@@226 $generated@@545 ($generated@@164 $generated@@546))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@2) $generated@@545)) $generated@@545) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@2) $generated@@545) ($generated@@164 $generated@@546))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@164 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@159) (= (type $generated@@548) $generated@@67)) ($generated@@226 $generated@@547 ($generated@@476 $generated@@548))) (and (= ($generated@@272 ($generated@@366 ($generated@@264 $generated@@159) $generated@@547)) $generated@@547) ($generated@@141 ($generated@@366 ($generated@@264 $generated@@159) $generated@@547) ($generated@@476 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@547 ($generated@@476 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@159)) ($generated@@226 $generated@@550 ($generated@@135 $generated@@549))) (and (= ($generated@@272 ($generated@@366 $generated@@80 $generated@@550)) $generated@@550) ($generated@@141 ($generated@@366 $generated@@80 $generated@@550) ($generated@@135 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@550 ($generated@@135 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@67) (= (type $generated@@552) $generated@@159)) ($generated@@226 $generated@@552 ($generated@@143 $generated@@551))) (and (= ($generated@@272 ($generated@@366 $generated@@80 $generated@@552)) $generated@@552) ($generated@@141 ($generated@@366 $generated@@80 $generated@@552) ($generated@@143 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@143 $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@82 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@79 $generated@@556 $generated@@4)) (= (type $generated@@555) ($generated@@79 $generated@@556 $generated@@4))) (= ($generated@@553 $generated@@554 $generated@@555) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@556) ($generated@@0 ($generated@@84 $generated@@554 $generated@@557))) ($generated@@0 ($generated@@84 $generated@@555 $generated@@557)))
 :pattern ( ($generated@@84 $generated@@554 $generated@@557))
 :pattern ( ($generated@@84 $generated@@555 $generated@@557))
)))))
 :pattern ( ($generated@@553 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@558 $generated@@561)))) ($generated@@250 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@84 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@150) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@564) (and ($generated@@148 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@150) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@568) (and ($generated@@148 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@67) ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@159) (= (type $generated@@571) $generated@@159)) (= ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)) ($generated@@245 ($generated@@225 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@272 ($generated@@245 $generated@@572)) ($generated@@245 ($generated@@272 $generated@@572)))
 :pattern ( ($generated@@272 ($generated@@245 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@265 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@264 $generated@@574)) (= ($generated@@263 $generated@@573) 0)) (= $generated@@573 ($generated@@262 $generated@@574))))
 :pattern ( ($generated@@263 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@277 $generated@@575) ($generated ($generated@@84 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@2)) ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@3)) ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@4)) ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@434)) ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@159)) ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@264 $generated@@159)) (= (type $generated@@590) $generated@@67)) (= ($generated@@141 $generated@@589 ($generated@@476 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@263 $generated@@589))) ($generated@@226 ($generated@@477 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@477 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@476 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@264 $generated@@159)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@263 $generated@@593))) (< ($generated@@521 ($generated@@366 $generated@@150 ($generated@@477 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@521 ($generated@@366 $generated@@150 ($generated@@477 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@141 $generated@@595 ($generated@@394 $generated@@596 $generated@@597))) (and (and ($generated@@141 ($generated@@287 $generated@@595) ($generated@@235 $generated@@596)) ($generated@@141 ($generated@@334 $generated@@595) ($generated@@235 $generated@@597))) ($generated@@141 ($generated@@365 $generated@@595) ($generated@@235 ($generated@@149 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@141 $generated@@595 ($generated@@394 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@141 $generated@@598 ($generated@@402 $generated@@599 $generated@@600))) (and (and ($generated@@141 ($generated@@305 $generated@@598) ($generated@@240 $generated@@599)) ($generated@@141 ($generated@@345 $generated@@598) ($generated@@240 $generated@@600))) ($generated@@141 ($generated@@376 $generated@@598) ($generated@@240 ($generated@@149 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@141 $generated@@598 ($generated@@402 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@141 $generated@@601 $generated@@46))
 :pattern ( ($generated@@141 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@141 $generated@@602 $generated@@47))
 :pattern ( ($generated@@141 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@141 $generated@@603 $generated@@44))
 :pattern ( ($generated@@141 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@434) ($generated@@141 $generated@@604 $generated@@45))
 :pattern ( ($generated@@141 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@159) ($generated@@141 $generated@@605 $generated@@48))
 :pattern ( ($generated@@141 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(assert  (and (and (and (and (and (= (type $generated@@606) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@608) ($generated@@79 $generated@@159 $generated@@4))) (= (type $generated@@609) ($generated@@79 $generated@@159 $generated@@4))) (= (type $generated@@611) $generated@@80)) (= (type $generated@@612) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@614  (=> (and (= $generated@@606 ($generated@@170 $generated@@136 $generated@@607 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@553 $generated@@608 $generated@@609))))
(let (($generated@@615  (=> (and ($generated@@249 $generated@@607) ($generated@@610 $generated@@607)) (=> (and (and (not (= $generated@@611 $generated@@136)) (and ($generated@@141 $generated@@611 ($generated@@143 $generated@@612)) ($generated@@77 $generated@@611 ($generated@@143 $generated@@612) $generated@@607))) (and ($generated@@141 $generated@@608 ($generated@@235 $generated@@46)) ($generated@@77 $generated@@608 ($generated@@235 $generated@@46) $generated@@607))) (=> (and (and (and ($generated@@141 $generated@@609 ($generated@@235 $generated@@46)) ($generated@@77 $generated@@609 ($generated@@235 $generated@@46) $generated@@607)) (= 0 $generated@@613)) (and (forall (($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@2) true) ($generated@@0 ($generated@@84 $generated@@608 ($generated@@272 $generated@@616)))) ($generated@@0 ($generated@@84 $generated@@609 ($generated@@272 $generated@@616))))
 :pattern ( ($generated@@84 $generated@@609 ($generated@@272 $generated@@616)))
 :pattern ( ($generated@@84 $generated@@608 ($generated@@272 $generated@@616)))
)) (= (ControlFlow 0 3) 2))) $generated@@614)))))
$generated@@615)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@335 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@566 (T@U T@U) Bool)
(declare-fun $generated@@605 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@138 $generated@@140))
)) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@141) $generated@@70) (= (type $generated@@142) $generated@@83)) (= (type $generated@@143) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@142 ($generated@@138 $generated@@141) $generated@@143)  (or (= $generated@@142 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@143 $generated@@142) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@142 ($generated@@138 $generated@@141) $generated@@143))
)))
(assert (= (type $generated@@144) $generated@@70))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@83) (= (type $generated@@146) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@145 $generated@@144 $generated@@146)  (or (= $generated@@145 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@145 $generated@@144 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@147 $generated@@148 ($generated@@81 0)))
 :pattern ( ($generated@@147 $generated@@148 ($generated@@81 0)))
)))
(assert (forall (($generated@@150 T@U) ) (! (= (type ($generated@@149 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@70) (= (type $generated@@152) $generated@@83)) (= (type $generated@@153) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@152 ($generated@@149 $generated@@151) $generated@@153) ($generated@@80 $generated@@152 ($generated@@138 $generated@@151) $generated@@153)))
 :pattern ( ($generated@@80 $generated@@152 ($generated@@149 $generated@@151) $generated@@153))
)))
(assert  (and (= ($generated@@1 $generated@@156) 14) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@157 $generated@@158)) $generated@@70)
 :pattern ( ($generated@@155 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@70) (= (type $generated@@160) $generated@@70)) (= (type $generated@@161) $generated@@156)) ($generated@@147 $generated@@161 ($generated@@155 $generated@@159 $generated@@160))) ($generated@@154 $generated@@161))
 :pattern ( ($generated@@154 $generated@@161) ($generated@@147 $generated@@161 ($generated@@155 $generated@@159 $generated@@160)))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 15) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@165)
 :pattern ( ($generated@@164 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@156) (= (type $generated@@169) $generated@@156)) true) (= ($generated@@162 $generated@@168 $generated@@169)  (and (= ($generated@@163 $generated@@168) ($generated@@163 $generated@@169)) (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)))))
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@165 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@147 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@147 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 16)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@83 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@73 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@83) (= (type $generated@@225) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@226) ($generated@@72 $generated@@4))) (= (type $generated@@228) $generated@@83)) (= (type $generated@@229) ($generated@@72 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (= (type $generated@@231) $generated@@70))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@83) (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@232 $generated@@231 $generated@@233) ($generated@@80 $generated@@232 $generated@@144 $generated@@233)))
 :pattern ( ($generated@@80 $generated@@232 $generated@@231 $generated@@233))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@156)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@70) (= (type $generated@@239) $generated@@70)) (= (type $generated@@240) $generated@@165)) (= (type $generated@@241) $generated@@165)) (= ($generated@@147 ($generated@@234 $generated@@240 $generated@@241) ($generated@@155 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@147 ($generated@@234 $generated@@240 $generated@@241) ($generated@@155 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) (= (type $generated@@243) $generated@@156)) (= ($generated@@162 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@162 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@70)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@82 $generated@@165 $generated@@4)) (= (type $generated@@247) $generated@@70)) (= ($generated@@147 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@165) ($generated@@0 ($generated@@87 $generated@@246 $generated@@248))) ($generated@@235 $generated@@248 $generated@@247))
 :pattern ( ($generated@@87 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@147 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@165 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@147 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@165) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@235 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@147 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@70) (= (type $generated@@261) $generated@@70)) (= (type $generated@@262) $generated@@165)) (= (type $generated@@263) $generated@@165)) (= (type $generated@@264) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@258 $generated@@264)) (= ($generated@@80 ($generated@@234 $generated@@262 $generated@@263) ($generated@@155 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@80 ($generated@@234 $generated@@262 $generated@@263) ($generated@@155 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@74)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@156) (= ($generated@@154 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@63)))
 :pattern ( ($generated@@154 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@156) ($generated@@154 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@165) (= (type $generated@@270) $generated@@165)) (= $generated@@268 ($generated@@234 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@154 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@70) (= (type $generated@@280) $generated@@83)) (= ($generated@@147 $generated@@280 ($generated@@149 $generated@@279))  (and ($generated@@147 $generated@@280 ($generated@@138 $generated@@279)) (not (= $generated@@280 $generated@@139)))))
 :pattern ( ($generated@@147 $generated@@280 ($generated@@149 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@165)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@70) (= (type $generated@@285) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@259 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@80 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@259 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@82 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@85 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@82 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@87 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@75)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@70) (and (= ($generated@@78 ($generated@@138 $generated@@294)) $generated@@65) (= ($generated@@292 ($generated@@138 $generated@@294)) $generated@@69)))
 :pattern ( ($generated@@138 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@70) (and (= ($generated@@78 ($generated@@149 $generated@@295)) $generated@@66) (= ($generated@@292 ($generated@@149 $generated@@295)) $generated@@69)))
 :pattern ( ($generated@@149 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 18)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@82 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@87 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@87 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@82 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@85 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@82 $generated@@333 $generated@@2)) (= ($generated@@171 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@87 $generated@@332 $generated@@334))) (<= ($generated ($generated@@87 $generated@@332 $generated@@334)) ($generated@@286 $generated@@332))))
 :pattern ( ($generated@@87 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@171 $generated@@332))
)))
(assert (forall (($generated@@336 T@T) ($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@165) ($generated@@235 $generated@@338 $generated@@144)) (and (= ($generated@@281 ($generated@@335 $generated@@83 $generated@@338)) $generated@@338) ($generated@@147 ($generated@@335 $generated@@83 $generated@@338) $generated@@144)))
 :pattern ( ($generated@@235 $generated@@338 $generated@@144))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@165) ($generated@@235 $generated@@339 $generated@@231)) (and (= ($generated@@281 ($generated@@335 $generated@@83 $generated@@339)) $generated@@339) ($generated@@147 ($generated@@335 $generated@@83 $generated@@339) $generated@@231)))
 :pattern ( ($generated@@235 $generated@@339 $generated@@231))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@70)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@70) (= (type $generated@@343) $generated@@83)) (= ($generated@@147 $generated@@343 ($generated@@138 $generated@@342))  (or (= $generated@@343 $generated@@139) (= ($generated@@340 $generated@@343) ($generated@@138 $generated@@342)))))
 :pattern ( ($generated@@147 $generated@@343 ($generated@@138 $generated@@342)))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@83) (= ($generated@@147 $generated@@344 $generated@@231)  (and ($generated@@147 $generated@@344 $generated@@144) (not (= $generated@@344 $generated@@139)))))
 :pattern ( ($generated@@147 $generated@@344 $generated@@231))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@300 (type $generated@@345))))
(let (($generated@@347 ($generated@@299 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@298 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@297 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@87 ($generated@@296 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@296 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@300 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@82 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@300 (type $generated@@352))))
(let (($generated@@354 ($generated@@299 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@298 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@297 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@87 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@318 (type $generated@@356))))
(let (($generated@@358 ($generated@@317 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@316 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@315 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@314 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@318 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@82 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@318 (type $generated@@363))))
(let (($generated@@365 ($generated@@317 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@316 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@315 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@82 $generated@@165 $generated@@2)) (= (type $generated@@368) $generated@@70)) (= ($generated@@147 $generated@@367 ($generated@@170 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@165) (< 0 ($generated ($generated@@87 $generated@@367 $generated@@369)))) ($generated@@235 $generated@@369 $generated@@368))
 :pattern ( ($generated@@87 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@147 $generated@@367 ($generated@@170 $generated@@368)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@82 $generated@@165 $generated@@4)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@370 ($generated@@244 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@165) ($generated@@0 ($generated@@87 $generated@@370 $generated@@373))) ($generated@@259 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@87 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@80 $generated@@370 ($generated@@244 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@82 $generated@@165 $generated@@4)) (= (type $generated@@375) $generated@@70)) (= (type $generated@@376) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@374 ($generated@@249 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@165) ($generated@@0 ($generated@@87 $generated@@374 $generated@@377))) ($generated@@259 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@87 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@80 $generated@@374 ($generated@@249 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@87 ($generated@@287 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@87 ($generated@@287 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@82 $generated@@165 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@300 (type $generated@@383))))
(let (($generated@@385 ($generated@@299 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@82 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@298 $generated@@165 $generated@@165)) (= (type $generated@@387) $generated@@165)) (= ($generated@@0 ($generated@@87 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@87 ($generated@@296 $generated@@386) ($generated@@163 ($generated@@335 $generated@@156 $generated@@387)))) (= ($generated@@87 ($generated@@381 $generated@@386) ($generated@@163 ($generated@@335 $generated@@156 $generated@@387))) ($generated@@164 ($generated@@335 $generated@@156 $generated@@387))))))
 :pattern ( ($generated@@87 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@165 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@318 (type $generated@@391))))
(let (($generated@@393 ($generated@@317 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@316 $generated@@165 $generated@@165)) (= (type $generated@@395) $generated@@165)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@394) ($generated@@163 ($generated@@335 $generated@@156 $generated@@395)))) (= ($generated@@87 ($generated@@389 $generated@@394) ($generated@@163 ($generated@@335 $generated@@156 $generated@@395))) ($generated@@164 ($generated@@335 $generated@@156 $generated@@395))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@299 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@298 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@87 ($generated@@349 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@87 ($generated@@296 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@87 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@87 ($generated@@296 $generated@@396) $generated@@400))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@87 ($generated@@349 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@317 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@316 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@87 ($generated@@360 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@87 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@401) $generated@@405))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@87 ($generated@@360 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@70)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@298 $generated@@165 $generated@@165)) (= (type $generated@@410) $generated@@70)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@165) ($generated@@0 ($generated@@87 ($generated@@296 $generated@@409) $generated@@413))) (and ($generated@@259 ($generated@@87 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@259 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@296 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@70)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@316 $generated@@165 $generated@@165)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@165) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@417) $generated@@421))) (and ($generated@@259 ($generated@@87 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@259 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@82 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@318 (type $generated@@424))))
(let (($generated@@426 ($generated@@317 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@316 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@315 $generated@@426 $generated@@425)) (= ($generated@@314 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@314 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@318 (type $generated@@427))))
(let (($generated@@429 ($generated@@317 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@316 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@315 $generated@@429 $generated@@428)) (= ($generated@@360 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@360 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@318 (type $generated@@430))))
(let (($generated@@432 ($generated@@317 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@316 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@315 $generated@@432 $generated@@431)) (= ($generated@@388 $generated@@430) ($generated@@422 $generated@@165))))))
 :pattern ( ($generated@@388 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@300 (type $generated@@433))))
(let (($generated@@435 ($generated@@299 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@298 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@297 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@165) (= (type $generated@@437) $generated@@165)) ($generated@@0 ($generated@@87 ($generated@@380 $generated@@433) ($generated@@281 ($generated@@234 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@318 (type $generated@@438))))
(let (($generated@@440 ($generated@@317 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@316 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@315 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@165) (= (type $generated@@442) $generated@@165)) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@438) ($generated@@281 ($generated@@234 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@388 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@165) ($generated@@235 $generated@@443 $generated@@46)) (and (= ($generated@@281 ($generated@@335 $generated@@2 $generated@@443)) $generated@@443) ($generated@@147 ($generated@@335 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@165) ($generated@@235 $generated@@444 $generated@@47)) (and (= ($generated@@281 ($generated@@335 $generated@@3 $generated@@444)) $generated@@444) ($generated@@147 ($generated@@335 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@165) ($generated@@235 $generated@@445 $generated@@44)) (and (= ($generated@@281 ($generated@@335 $generated@@4 $generated@@445)) $generated@@445) ($generated@@147 ($generated@@335 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@165) ($generated@@235 $generated@@447 $generated@@45)) (and (= ($generated@@281 ($generated@@335 $generated@@446 $generated@@447)) $generated@@447) ($generated@@147 ($generated@@335 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@70) (= ($generated@@235 ($generated@@281 $generated@@448) $generated@@449) ($generated@@147 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@235 ($generated@@281 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@85 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@82 $generated@@451 $generated@@2)) (<= 0 ($generated@@286 $generated@@450))))
 :pattern ( ($generated@@286 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@274 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@273 $generated@@453)) (<= 0 ($generated@@272 $generated@@452))))
 :pattern ( ($generated@@272 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@70) (= (type $generated@@457) $generated@@70)) (= ($generated@@454 ($generated@@406 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@406 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@70) (= (type $generated@@461) $generated@@70)) (= ($generated@@458 ($generated@@406 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@78 ($generated@@406 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@464 ($generated@@414 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@414 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@468 ($generated@@414 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@78 ($generated@@414 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@165) (= (type $generated@@475) $generated@@165)) (= ($generated@@265 ($generated@@234 $generated@@474 $generated@@475)) $generated@@63))
 :pattern ( ($generated@@234 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@155 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@155 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@155 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@155 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@165) (= (type $generated@@485) $generated@@165)) (= ($generated@@163 ($generated@@234 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@234 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@165) (= (type $generated@@487) $generated@@165)) (= ($generated@@164 ($generated@@234 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@234 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@83) ($generated@@147 $generated@@488 $generated@@144))
 :pattern ( ($generated@@147 $generated@@488 $generated@@144))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@274 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@273 $generated@@165)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@272 $generated@@495))) ($generated@@259 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@81 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@81 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@501 ($generated@@244 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@244 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@78 ($generated@@244 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@249 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@249 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@170 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@170 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@138 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@138 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@149 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@149 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@335 $generated@@524 ($generated@@281 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@281 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@298 $generated@@165 $generated@@165)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) $generated@@70)) (= ($generated@@147 $generated@@525 ($generated@@406 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@165) ($generated@@0 ($generated@@87 ($generated@@296 $generated@@525) $generated@@528))) (and ($generated@@235 ($generated@@87 ($generated@@381 $generated@@525) $generated@@528) $generated@@527) ($generated@@235 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@525) $generated@@528))
 :pattern ( ($generated@@87 ($generated@@296 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@147 $generated@@525 ($generated@@406 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@316 $generated@@165 $generated@@165)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@147 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@165) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@529) $generated@@532))) (and ($generated@@235 ($generated@@87 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@235 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@147 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@165) (= (type $generated@@536) $generated@@165)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@234 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@234 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@165) (= (type $generated@@538) $generated@@165)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@234 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@234 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@165) (= (type $generated@@540) $generated@@70)) (= (type $generated@@541) $generated@@70)) ($generated@@235 $generated@@539 ($generated@@406 $generated@@540 $generated@@541))) (and (= ($generated@@281 ($generated@@335 ($generated@@298 $generated@@165 $generated@@165) $generated@@539)) $generated@@539) ($generated@@147 ($generated@@335 ($generated@@298 $generated@@165 $generated@@165) $generated@@539) ($generated@@406 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@235 $generated@@539 ($generated@@406 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@165) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) ($generated@@235 $generated@@542 ($generated@@414 $generated@@543 $generated@@544))) (and (= ($generated@@281 ($generated@@335 ($generated@@316 $generated@@165 $generated@@165) $generated@@542)) $generated@@542) ($generated@@147 ($generated@@335 ($generated@@316 $generated@@165 $generated@@165) $generated@@542) ($generated@@414 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@235 $generated@@542 ($generated@@414 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@70) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@165)) ($generated@@235 $generated@@547 ($generated@@155 $generated@@545 $generated@@546))) (and (= ($generated@@281 ($generated@@335 $generated@@156 $generated@@547)) $generated@@547) ($generated@@147 ($generated@@335 $generated@@156 $generated@@547) ($generated@@155 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@235 $generated@@547 ($generated@@155 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (not ($generated@@0 ($generated@@87 ($generated@@422 $generated@@549) $generated@@548))))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@87 ($generated@@422 $generated@@549) $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@70) (= (type $generated@@551) $generated@@70)) (and (= ($generated@@78 ($generated@@155 $generated@@550 $generated@@551)) $generated@@64) (= ($generated@@292 ($generated@@155 $generated@@550 $generated@@551)) $generated@@68)))
 :pattern ( ($generated@@155 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@156) (= ($generated@@533 ($generated@@281 $generated@@552)) ($generated@@534 $generated@@552)))
 :pattern ( ($generated@@533 ($generated@@281 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@165) ($generated@@235 $generated@@553 ($generated@@81 0))) (and (= ($generated@@281 ($generated@@335 $generated@@2 $generated@@553)) $generated@@553) ($generated@@147 ($generated@@335 ($generated@@82 $generated@@165 $generated@@4) $generated@@553) ($generated@@81 0))))
 :pattern ( ($generated@@235 $generated@@553 ($generated@@81 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@165) (= (type $generated@@555) $generated@@70)) ($generated@@235 $generated@@554 ($generated@@244 $generated@@555))) (and (= ($generated@@281 ($generated@@335 ($generated@@82 $generated@@165 $generated@@4) $generated@@554)) $generated@@554) ($generated@@147 ($generated@@335 ($generated@@82 $generated@@165 $generated@@4) $generated@@554) ($generated@@244 $generated@@555))))
 :pattern ( ($generated@@235 $generated@@554 ($generated@@244 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@165) (= (type $generated@@557) $generated@@70)) ($generated@@235 $generated@@556 ($generated@@249 $generated@@557))) (and (= ($generated@@281 ($generated@@335 ($generated@@82 $generated@@165 $generated@@4) $generated@@556)) $generated@@556) ($generated@@147 ($generated@@335 ($generated@@82 $generated@@165 $generated@@4) $generated@@556) ($generated@@249 $generated@@557))))
 :pattern ( ($generated@@235 $generated@@556 ($generated@@249 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@165) (= (type $generated@@559) $generated@@70)) ($generated@@235 $generated@@558 ($generated@@170 $generated@@559))) (and (= ($generated@@281 ($generated@@335 ($generated@@82 $generated@@165 $generated@@2) $generated@@558)) $generated@@558) ($generated@@147 ($generated@@335 ($generated@@82 $generated@@165 $generated@@2) $generated@@558) ($generated@@170 $generated@@559))))
 :pattern ( ($generated@@235 $generated@@558 ($generated@@170 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@165) (= (type $generated@@561) $generated@@70)) ($generated@@235 $generated@@560 ($generated@@489 $generated@@561))) (and (= ($generated@@281 ($generated@@335 ($generated@@273 $generated@@165) $generated@@560)) $generated@@560) ($generated@@147 ($generated@@335 ($generated@@273 $generated@@165) $generated@@560) ($generated@@489 $generated@@561))))
 :pattern ( ($generated@@235 $generated@@560 ($generated@@489 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@70) (= (type $generated@@563) $generated@@165)) ($generated@@235 $generated@@563 ($generated@@138 $generated@@562))) (and (= ($generated@@281 ($generated@@335 $generated@@83 $generated@@563)) $generated@@563) ($generated@@147 ($generated@@335 $generated@@83 $generated@@563) ($generated@@138 $generated@@562))))
 :pattern ( ($generated@@235 $generated@@563 ($generated@@138 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@70) (= (type $generated@@565) $generated@@165)) ($generated@@235 $generated@@565 ($generated@@149 $generated@@564))) (and (= ($generated@@281 ($generated@@335 $generated@@83 $generated@@565)) $generated@@565) ($generated@@147 ($generated@@335 $generated@@83 $generated@@565) ($generated@@149 $generated@@564))))
 :pattern ( ($generated@@235 $generated@@565 ($generated@@149 $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@85 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@82 $generated@@569 $generated@@4)) (= (type $generated@@568) ($generated@@82 $generated@@569 $generated@@4))) (= ($generated@@566 $generated@@567 $generated@@568) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@569) ($generated@@0 ($generated@@87 $generated@@567 $generated@@570))) ($generated@@0 ($generated@@87 $generated@@568 $generated@@570)))
 :pattern ( ($generated@@87 $generated@@567 $generated@@570))
 :pattern ( ($generated@@87 $generated@@568 $generated@@570))
)))))
 :pattern ( ($generated@@566 $generated@@567 $generated@@568))
)))
(assert (= ($generated@@78 $generated@@144) $generated@@61))
(assert (= ($generated@@292 $generated@@144) $generated@@67))
(assert (= ($generated@@78 $generated@@231) $generated@@62))
(assert (= ($generated@@292 $generated@@231) $generated@@67))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@82 $generated@@165 $generated@@2)) (= (type $generated@@572) $generated@@70)) (= (type $generated@@573) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@571 ($generated@@170 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@165) (< 0 ($generated ($generated@@87 $generated@@571 $generated@@574)))) ($generated@@259 $generated@@574 $generated@@572 $generated@@573))
 :pattern ( ($generated@@87 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@80 $generated@@571 ($generated@@170 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@156) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@258 $generated@@577) (and ($generated@@154 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@70) ($generated@@80 $generated@@575 ($generated@@155 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@155 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@259 ($generated@@163 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@259 ($generated@@163 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@156) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@258 $generated@@581) (and ($generated@@154 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@70) ($generated@@80 $generated@@579 ($generated@@155 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@155 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@259 ($generated@@164 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@259 ($generated@@164 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@165) (= (type $generated@@584) $generated@@165)) (= ($generated@@234 ($generated@@254 $generated@@583) ($generated@@254 $generated@@584)) ($generated@@254 ($generated@@234 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@234 ($generated@@254 $generated@@583) ($generated@@254 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (= ($generated@@281 ($generated@@254 $generated@@585)) ($generated@@254 ($generated@@281 $generated@@585)))
 :pattern ( ($generated@@281 ($generated@@254 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@274 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@273 $generated@@587)) (= ($generated@@272 $generated@@586) 0)) (= $generated@@586 ($generated@@271 $generated@@587))))
 :pattern ( ($generated@@272 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@589)))
 (=> (and (and (= (type $generated@@588) ($generated@@82 $generated@@591 $generated@@2)) (= (type $generated@@590) $generated@@2)) (<= 0 ($generated $generated@@590))) (= ($generated@@286 ($generated@@88 $generated@@588 $generated@@589 $generated@@590)) (+ (- ($generated@@286 $generated@@588) ($generated ($generated@@87 $generated@@588 $generated@@589))) ($generated $generated@@590)))))
 :pattern ( ($generated@@286 ($generated@@88 $generated@@588 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@2)) ($generated@@80 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@595) $generated@@3)) ($generated@@80 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@80 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@4)) ($generated@@80 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@446)) ($generated@@80 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@601) $generated@@165)) ($generated@@80 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@80 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@273 $generated@@165)) (= (type $generated@@603) $generated@@70)) (= ($generated@@147 $generated@@602 ($generated@@489 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@272 $generated@@602))) ($generated@@235 ($generated@@490 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@490 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@147 $generated@@602 ($generated@@489 $generated@@603)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ) (!  (=> (= (type $generated@@606) ($generated@@273 $generated@@165)) (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@272 $generated@@606))) (< ($generated@@534 ($generated@@335 $generated@@156 ($generated@@490 $generated@@606 $generated@@607))) ($generated@@605 $generated@@606))))
 :pattern ( ($generated@@534 ($generated@@335 $generated@@156 ($generated@@490 $generated@@606 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@298 $generated@@165 $generated@@165)) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) $generated@@70)) ($generated@@147 $generated@@608 ($generated@@406 $generated@@609 $generated@@610))) (and (and ($generated@@147 ($generated@@296 $generated@@608) ($generated@@244 $generated@@609)) ($generated@@147 ($generated@@349 $generated@@608) ($generated@@244 $generated@@610))) ($generated@@147 ($generated@@380 $generated@@608) ($generated@@244 ($generated@@155 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@147 $generated@@608 ($generated@@406 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@316 $generated@@165 $generated@@165)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@147 $generated@@611 ($generated@@414 $generated@@612 $generated@@613))) (and (and ($generated@@147 ($generated@@314 $generated@@611) ($generated@@249 $generated@@612)) ($generated@@147 ($generated@@360 $generated@@611) ($generated@@249 $generated@@613))) ($generated@@147 ($generated@@388 $generated@@611) ($generated@@249 ($generated@@155 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@147 $generated@@611 ($generated@@414 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@2) ($generated@@147 $generated@@614 $generated@@46))
 :pattern ( ($generated@@147 $generated@@614 $generated@@46))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@3) ($generated@@147 $generated@@615 $generated@@47))
 :pattern ( ($generated@@147 $generated@@615 $generated@@47))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@4) ($generated@@147 $generated@@616 $generated@@44))
 :pattern ( ($generated@@147 $generated@@616 $generated@@44))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@446) ($generated@@147 $generated@@617 $generated@@45))
 :pattern ( ($generated@@147 $generated@@617 $generated@@45))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@165) ($generated@@147 $generated@@618 $generated@@48))
 :pattern ( ($generated@@147 $generated@@618 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(assert  (and (and (and (and (and (= (type $generated@@619) ($generated@@177 $generated@@83 $generated@@4)) (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@621) ($generated@@82 $generated@@165 $generated@@4))) (= (type $generated@@622) ($generated@@82 $generated@@165 $generated@@4))) (= (type $generated@@624) $generated@@83)) (= (type $generated@@625) $generated@@70)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@627  (=> (and (= $generated@@619 ($generated@@176 $generated@@139 $generated@@620 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@566 $generated@@621 $generated@@622))))
(let (($generated@@628  (=> (and ($generated@@258 $generated@@620) ($generated@@623 $generated@@620)) (=> (and (and (not (= $generated@@624 $generated@@139)) (and ($generated@@147 $generated@@624 ($generated@@149 $generated@@625)) ($generated@@80 $generated@@624 ($generated@@149 $generated@@625) $generated@@620))) (and ($generated@@147 $generated@@621 ($generated@@244 $generated@@231)) ($generated@@80 $generated@@621 ($generated@@244 $generated@@231) $generated@@620))) (=> (and (and (and ($generated@@147 $generated@@622 ($generated@@244 $generated@@231)) ($generated@@80 $generated@@622 ($generated@@244 $generated@@231) $generated@@620)) (= 1 $generated@@626)) (and (forall (($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@83) ($generated@@147 $generated@@629 $generated@@231)) ($generated@@0 ($generated@@87 $generated@@621 ($generated@@281 $generated@@629)))) ($generated@@0 ($generated@@87 $generated@@622 ($generated@@281 $generated@@629))))
 :pattern ( ($generated@@87 $generated@@622 ($generated@@281 $generated@@629)))
 :pattern ( ($generated@@87 $generated@@621 ($generated@@281 $generated@@629)))
)) (= (ControlFlow 0 3) 2))) $generated@@627)))))
$generated@@628)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@553 (T@U T@U) Bool)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (forall (($generated@@137 T@U) ) (! (= (type ($generated@@135 $generated@@137)) $generated@@67)
 :pattern ( ($generated@@135 $generated@@137))
)) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@67) (= (type $generated@@139) $generated@@80)) (= (type $generated@@140) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140)  (or (= $generated@@139 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@78 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@78 0)))
)))
(assert (forall (($generated@@144 T@U) ) (! (= (type ($generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@80)) (= (type $generated@@147) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147) ($generated@@77 $generated@@146 ($generated@@135 $generated@@145) $generated@@147)))
 :pattern ( ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147))
)))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@67)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@150)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@159)) (= (type $generated@@232) $generated@@159)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@150) (= (type $generated@@234) $generated@@150)) (= ($generated@@156 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@156 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@159) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@159) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@67) (= (type $generated@@252) $generated@@67)) (= (type $generated@@253) $generated@@159)) (= (type $generated@@254) $generated@@159)) (= (type $generated@@255) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@249 $generated@@255)) (= ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@150) (= ($generated@@148 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@150) ($generated@@148 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@159) (= (type $generated@@261) $generated@@159)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@148 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@67) (= (type $generated@@271) $generated@@80)) (= ($generated@@141 $generated@@271 ($generated@@143 $generated@@270))  (and ($generated@@141 $generated@@271 ($generated@@135 $generated@@270)) (not (= $generated@@271 $generated@@136)))))
 :pattern ( ($generated@@141 $generated@@271 ($generated@@143 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@159)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@67) (= (type $generated@@276) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@77 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@79 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@82 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@79 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@84 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@72)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@67) (and (= ($generated@@75 ($generated@@135 $generated@@285)) $generated@@63) (= ($generated@@283 ($generated@@135 $generated@@285)) $generated@@66)))
 :pattern ( ($generated@@135 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@67) (and (= ($generated@@75 ($generated@@143 $generated@@286)) $generated@@64) (= ($generated@@283 ($generated@@143 $generated@@286)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@79 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@79 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@82 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@79 $generated@@324 $generated@@2)) (= ($generated@@165 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@84 $generated@@323 $generated@@325))) (<= ($generated ($generated@@84 $generated@@323 $generated@@325)) ($generated@@277 $generated@@323))))
 :pattern ( ($generated@@84 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@165 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@67)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@67) (= (type $generated@@329) $generated@@80)) (= ($generated@@141 $generated@@329 ($generated@@135 $generated@@328))  (or (= $generated@@329 $generated@@136) (= ($generated@@326 $generated@@329) ($generated@@135 $generated@@328)))))
 :pattern ( ($generated@@141 $generated@@329 ($generated@@135 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@79 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@79 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@353) $generated@@67)) (= ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@352 $generated@@354)))) ($generated@@226 $generated@@354 $generated@@353))
 :pattern ( ($generated@@84 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@356) $generated@@67)) (= (type $generated@@357) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@355 ($generated@@235 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@159) ($generated@@0 ($generated@@84 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@84 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@77 $generated@@355 ($generated@@235 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@240 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@159) ($generated@@0 ($generated@@84 $generated@@359 $generated@@362))) ($generated@@250 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@84 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@240 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@84 ($generated@@278 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@84 ($generated@@278 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@291 (type $generated@@371))))
(let (($generated@@373 ($generated@@290 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@79 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@375) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@374) ($generated@@157 ($generated@@366 $generated@@150 $generated@@375)))) (= ($generated@@84 ($generated@@367 $generated@@374) ($generated@@157 ($generated@@366 $generated@@150 $generated@@375))) ($generated@@158 ($generated@@366 $generated@@150 $generated@@375))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@309 (type $generated@@379))))
(let (($generated@@381 ($generated@@308 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@79 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@383) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@382) ($generated@@157 ($generated@@366 $generated@@150 $generated@@383)))) (= ($generated@@84 ($generated@@377 $generated@@382) ($generated@@157 ($generated@@366 $generated@@150 $generated@@383))) ($generated@@158 ($generated@@366 $generated@@150 $generated@@383))))))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@290 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@289 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@84 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@84 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@384) $generated@@388))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@308 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@307 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@84 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@397) $generated@@401))) (and ($generated@@250 ($generated@@84 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@250 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@67)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@405) $generated@@409))) (and ($generated@@250 ($generated@@84 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@250 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@79 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@159))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@159) (= (type $generated@@425) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@421) ($generated@@272 ($generated@@225 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@159) (= (type $generated@@430) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@376 $generated@@426) ($generated@@272 ($generated@@225 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@159) ($generated@@226 $generated@@431 $generated@@46)) (and (= ($generated@@272 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@159) ($generated@@226 $generated@@432 $generated@@47)) (and (= ($generated@@272 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@159) ($generated@@226 $generated@@433 $generated@@44)) (and (= ($generated@@272 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@159) ($generated@@226 $generated@@435 $generated@@45)) (and (= ($generated@@272 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@67) (= ($generated@@226 ($generated@@272 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@226 ($generated@@272 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@82 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@79 $generated@@439 $generated@@2)) (<= 0 ($generated@@277 $generated@@438))))
 :pattern ( ($generated@@277 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@265 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@264 $generated@@441)) (<= 0 ($generated@@263 $generated@@440))))
 :pattern ( ($generated@@263 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@394 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@394 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@394 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@394 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@75 ($generated@@394 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@402 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@402 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@402 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@75 ($generated@@402 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@159) (= (type $generated@@463) $generated@@159)) (= ($generated@@256 ($generated@@225 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@149 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@149 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@149 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@149 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@159) (= (type $generated@@473) $generated@@159)) (= ($generated@@157 ($generated@@225 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@225 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@159) (= (type $generated@@475) $generated@@159)) (= ($generated@@158 ($generated@@225 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@225 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@265 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@264 $generated@@159)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@263 $generated@@482))) ($generated@@250 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@78 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@78 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@235 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@235 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@240 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@240 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@496 ($generated@@164 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@164 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@75 ($generated@@164 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@75 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@504 ($generated@@135 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@135 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@143 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@143 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@366 $generated@@511 ($generated@@272 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@272 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) (= ($generated@@141 $generated@@512 ($generated@@394 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@512) $generated@@515))) (and ($generated@@226 ($generated@@84 ($generated@@367 $generated@@512) $generated@@515) $generated@@514) ($generated@@226 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@512) $generated@@515))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@141 $generated@@512 ($generated@@394 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) (= ($generated@@141 $generated@@516 ($generated@@402 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@516) $generated@@519))) (and ($generated@@226 ($generated@@84 ($generated@@377 $generated@@516) $generated@@519) $generated@@518) ($generated@@226 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@516) $generated@@519))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@141 $generated@@516 ($generated@@402 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@159) (= (type $generated@@523) $generated@@159)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@225 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@225 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) (= (type $generated@@525) $generated@@159)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@225 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@225 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@159) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) ($generated@@226 $generated@@526 ($generated@@394 $generated@@527 $generated@@528))) (and (= ($generated@@272 ($generated@@366 ($generated@@289 $generated@@159 $generated@@159) $generated@@526)) $generated@@526) ($generated@@141 ($generated@@366 ($generated@@289 $generated@@159 $generated@@159) $generated@@526) ($generated@@394 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@226 $generated@@526 ($generated@@394 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@159) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@226 $generated@@529 ($generated@@402 $generated@@530 $generated@@531))) (and (= ($generated@@272 ($generated@@366 ($generated@@307 $generated@@159 $generated@@159) $generated@@529)) $generated@@529) ($generated@@141 ($generated@@366 ($generated@@307 $generated@@159 $generated@@159) $generated@@529) ($generated@@402 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@226 $generated@@529 ($generated@@402 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@159)) ($generated@@226 $generated@@534 ($generated@@149 $generated@@532 $generated@@533))) (and (= ($generated@@272 ($generated@@366 $generated@@150 $generated@@534)) $generated@@534) ($generated@@141 ($generated@@366 $generated@@150 $generated@@534) ($generated@@149 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@226 $generated@@534 ($generated@@149 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@84 ($generated@@410 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@84 ($generated@@410 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (and (= ($generated@@75 ($generated@@149 $generated@@537 $generated@@538)) $generated@@62) (= ($generated@@283 ($generated@@149 $generated@@537 $generated@@538)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@150) (= ($generated@@520 ($generated@@272 $generated@@539)) ($generated@@521 $generated@@539)))
 :pattern ( ($generated@@520 ($generated@@272 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@159) ($generated@@226 $generated@@540 ($generated@@78 0))) (and (= ($generated@@272 ($generated@@366 $generated@@2 $generated@@540)) $generated@@540) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@540) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@540 ($generated@@78 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@159) (= (type $generated@@542) $generated@@67)) ($generated@@226 $generated@@541 ($generated@@235 $generated@@542))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@541) ($generated@@235 $generated@@542))))
 :pattern ( ($generated@@226 $generated@@541 ($generated@@235 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@159) (= (type $generated@@544) $generated@@67)) ($generated@@226 $generated@@543 ($generated@@240 $generated@@544))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@4) $generated@@543) ($generated@@240 $generated@@544))))
 :pattern ( ($generated@@226 $generated@@543 ($generated@@240 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@67)) ($generated@@226 $generated@@545 ($generated@@164 $generated@@546))) (and (= ($generated@@272 ($generated@@366 ($generated@@79 $generated@@159 $generated@@2) $generated@@545)) $generated@@545) ($generated@@141 ($generated@@366 ($generated@@79 $generated@@159 $generated@@2) $generated@@545) ($generated@@164 $generated@@546))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@164 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@159) (= (type $generated@@548) $generated@@67)) ($generated@@226 $generated@@547 ($generated@@476 $generated@@548))) (and (= ($generated@@272 ($generated@@366 ($generated@@264 $generated@@159) $generated@@547)) $generated@@547) ($generated@@141 ($generated@@366 ($generated@@264 $generated@@159) $generated@@547) ($generated@@476 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@547 ($generated@@476 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@159)) ($generated@@226 $generated@@550 ($generated@@135 $generated@@549))) (and (= ($generated@@272 ($generated@@366 $generated@@80 $generated@@550)) $generated@@550) ($generated@@141 ($generated@@366 $generated@@80 $generated@@550) ($generated@@135 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@550 ($generated@@135 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@67) (= (type $generated@@552) $generated@@159)) ($generated@@226 $generated@@552 ($generated@@143 $generated@@551))) (and (= ($generated@@272 ($generated@@366 $generated@@80 $generated@@552)) $generated@@552) ($generated@@141 ($generated@@366 $generated@@80 $generated@@552) ($generated@@143 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@143 $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@82 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@79 $generated@@556 $generated@@4)) (= (type $generated@@555) ($generated@@79 $generated@@556 $generated@@4))) (= ($generated@@553 $generated@@554 $generated@@555) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@556) ($generated@@0 ($generated@@84 $generated@@554 $generated@@557))) ($generated@@0 ($generated@@84 $generated@@555 $generated@@557)))
 :pattern ( ($generated@@84 $generated@@554 $generated@@557))
 :pattern ( ($generated@@84 $generated@@555 $generated@@557))
)))))
 :pattern ( ($generated@@553 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@558 $generated@@561)))) ($generated@@250 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@84 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@150) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@564) (and ($generated@@148 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@150) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@568) (and ($generated@@148 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@67) ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@159) (= (type $generated@@571) $generated@@159)) (= ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)) ($generated@@245 ($generated@@225 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@272 ($generated@@245 $generated@@572)) ($generated@@245 ($generated@@272 $generated@@572)))
 :pattern ( ($generated@@272 ($generated@@245 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@265 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@264 $generated@@574)) (= ($generated@@263 $generated@@573) 0)) (= $generated@@573 ($generated@@262 $generated@@574))))
 :pattern ( ($generated@@263 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@277 $generated@@575) ($generated ($generated@@84 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@2)) ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@3)) ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@4)) ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@434)) ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@159)) ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@264 $generated@@159)) (= (type $generated@@590) $generated@@67)) (= ($generated@@141 $generated@@589 ($generated@@476 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@263 $generated@@589))) ($generated@@226 ($generated@@477 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@477 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@476 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@264 $generated@@159)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@263 $generated@@593))) (< ($generated@@521 ($generated@@366 $generated@@150 ($generated@@477 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@521 ($generated@@366 $generated@@150 ($generated@@477 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@141 $generated@@595 ($generated@@394 $generated@@596 $generated@@597))) (and (and ($generated@@141 ($generated@@287 $generated@@595) ($generated@@235 $generated@@596)) ($generated@@141 ($generated@@334 $generated@@595) ($generated@@235 $generated@@597))) ($generated@@141 ($generated@@365 $generated@@595) ($generated@@235 ($generated@@149 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@141 $generated@@595 ($generated@@394 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@141 $generated@@598 ($generated@@402 $generated@@599 $generated@@600))) (and (and ($generated@@141 ($generated@@305 $generated@@598) ($generated@@240 $generated@@599)) ($generated@@141 ($generated@@345 $generated@@598) ($generated@@240 $generated@@600))) ($generated@@141 ($generated@@376 $generated@@598) ($generated@@240 ($generated@@149 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@141 $generated@@598 ($generated@@402 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@141 $generated@@601 $generated@@46))
 :pattern ( ($generated@@141 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@141 $generated@@602 $generated@@47))
 :pattern ( ($generated@@141 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@141 $generated@@603 $generated@@44))
 :pattern ( ($generated@@141 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@434) ($generated@@141 $generated@@604 $generated@@45))
 :pattern ( ($generated@@141 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@159) ($generated@@141 $generated@@605 $generated@@48))
 :pattern ( ($generated@@141 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(assert  (and (and (and (and (and (= (type $generated@@606) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@608) ($generated@@79 $generated@@159 $generated@@4))) (= (type $generated@@609) ($generated@@79 $generated@@159 $generated@@4))) (= (type $generated@@611) $generated@@80)) (= (type $generated@@612) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@614  (=> (and (= $generated@@606 ($generated@@170 $generated@@136 $generated@@607 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@553 $generated@@608 $generated@@609))))
(let (($generated@@615  (=> (and ($generated@@249 $generated@@607) ($generated@@610 $generated@@607)) (=> (and (and (not (= $generated@@611 $generated@@136)) (and ($generated@@141 $generated@@611 ($generated@@143 $generated@@612)) ($generated@@77 $generated@@611 ($generated@@143 $generated@@612) $generated@@607))) (and ($generated@@141 $generated@@608 ($generated@@235 $generated@@44)) ($generated@@77 $generated@@608 ($generated@@235 $generated@@44) $generated@@607))) (=> (and (and (and ($generated@@141 $generated@@609 ($generated@@235 $generated@@44)) ($generated@@77 $generated@@609 ($generated@@235 $generated@@44) $generated@@607)) (= 0 $generated@@613)) (and (forall (($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@4) true) ($generated@@0 ($generated@@84 $generated@@608 ($generated@@272 $generated@@616)))) ($generated@@0 ($generated@@84 $generated@@609 ($generated@@272 $generated@@616))))
 :pattern ( ($generated@@84 $generated@@609 ($generated@@272 $generated@@616)))
 :pattern ( ($generated@@84 $generated@@608 ($generated@@272 $generated@@616)))
)) (= (ControlFlow 0 3) 2))) $generated@@614)))))
$generated@@615)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U T@U) Bool)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@T T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@T) T@U)
(declare-fun $generated@@453 () T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U Int) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@557 (T@T) T@U)
(declare-fun $generated@@583 (T@U T@U) Bool)
(declare-fun $generated@@618 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (forall (($generated@@137 T@U) ) (! (= (type ($generated@@135 $generated@@137)) $generated@@67)
 :pattern ( ($generated@@135 $generated@@137))
)) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@67) (= (type $generated@@139) $generated@@80)) (= (type $generated@@140) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140)  (or (= $generated@@139 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@78 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@78 0)))
)))
(assert (forall (($generated@@144 T@U) ) (! (= (type ($generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@80)) (= (type $generated@@147) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147) ($generated@@77 $generated@@146 ($generated@@135 $generated@@145) $generated@@147)))
 :pattern ( ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147))
)))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@67)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@82 (type $generated@@226))))
(= (type ($generated@@225 $generated@@226 $generated@@227)) ($generated@@79 $generated@@228 $generated@@4)))
 :pattern ( ($generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@82 (type $generated@@229))))
 (=> (and (= (type $generated@@229) ($generated@@79 $generated@@231 $generated@@4)) (= (type $generated@@230) ($generated@@79 $generated@@231 $generated@@4))) (= ($generated@@225 ($generated@@225 $generated@@229 $generated@@230) $generated@@230) ($generated@@225 $generated@@229 $generated@@230))))
 :pattern ( ($generated@@225 ($generated@@225 $generated@@229 $generated@@230) $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@150)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@67) (= (type $generated@@237) $generated@@67)) (= (type $generated@@238) $generated@@159)) (= (type $generated@@239) $generated@@159)) (= ($generated@@141 ($generated@@232 $generated@@238 $generated@@239) ($generated@@149 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@141 ($generated@@232 $generated@@238 $generated@@239) ($generated@@149 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@150) (= (type $generated@@241) $generated@@150)) (= ($generated@@156 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@156 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@67)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@245) $generated@@67)) (= ($generated@@141 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@159) ($generated@@0 ($generated@@84 $generated@@244 $generated@@246))) ($generated@@233 $generated@@246 $generated@@245))
 :pattern ( ($generated@@84 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@141 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@67)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@250) $generated@@67)) (= ($generated@@141 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@159) ($generated@@0 ($generated@@84 $generated@@249 $generated@@251))) ($generated@@233 $generated@@251 $generated@@250))
 :pattern ( ($generated@@84 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@141 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@67) (= (type $generated@@259) $generated@@67)) (= (type $generated@@260) $generated@@159)) (= (type $generated@@261) $generated@@159)) (= (type $generated@@262) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@256 $generated@@262)) (= ($generated@@77 ($generated@@232 $generated@@260 $generated@@261) ($generated@@149 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@77 ($generated@@232 $generated@@260 $generated@@261) ($generated@@149 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@71)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@150) (= ($generated@@148 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@150) ($generated@@148 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@159) (= (type $generated@@268) $generated@@159)) (= $generated@@266 ($generated@@232 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@148 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 17)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@67) (= (type $generated@@278) $generated@@80)) (= ($generated@@141 $generated@@278 ($generated@@143 $generated@@277))  (and ($generated@@141 $generated@@278 ($generated@@135 $generated@@277)) (not (= $generated@@278 $generated@@136)))))
 :pattern ( ($generated@@141 $generated@@278 ($generated@@143 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@159)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@67) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@257 ($generated@@279 $generated@@281) $generated@@282 $generated@@283) ($generated@@77 $generated@@281 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@257 ($generated@@279 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@79 $generated@@286 $generated@@2))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@82 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@79 $generated@@288 $generated@@2)) (and (= (= ($generated@@284 $generated@@287) 0) (= $generated@@287 ($generated@@285 $generated@@288))) (=> (not (= ($generated@@284 $generated@@287) 0)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) $generated@@288) (< 0 ($generated ($generated@@84 $generated@@287 $generated@@289))))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@72)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@67) (and (= ($generated@@75 ($generated@@135 $generated@@292)) $generated@@63) (= ($generated@@290 ($generated@@135 $generated@@292)) $generated@@66)))
 :pattern ( ($generated@@135 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@67) (and (= ($generated@@75 ($generated@@143 $generated@@293)) $generated@@64) (= ($generated@@290 ($generated@@143 $generated@@293)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@79 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@79 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@82 (type $generated@@331))))
 (=> (and (= (type $generated@@331) ($generated@@79 $generated@@333 $generated@@4)) (= (type $generated@@332) ($generated@@79 $generated@@333 $generated@@4))) (= ($generated@@330 $generated@@331 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (= ($generated@@0 ($generated@@84 $generated@@331 $generated@@334)) ($generated@@0 ($generated@@84 $generated@@332 $generated@@334))))
 :pattern ( ($generated@@84 $generated@@331 $generated@@334))
 :pattern ( ($generated@@84 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@82 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@79 $generated@@336 $generated@@2)) (= ($generated@@165 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@84 $generated@@335 $generated@@337))) (<= ($generated ($generated@@84 $generated@@335 $generated@@337)) ($generated@@284 $generated@@335))))
 :pattern ( ($generated@@84 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@165 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@67)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@67) (= (type $generated@@341) $generated@@80)) (= ($generated@@141 $generated@@341 ($generated@@135 $generated@@340))  (or (= $generated@@341 $generated@@136) (= ($generated@@338 $generated@@341) ($generated@@135 $generated@@340)))))
 :pattern ( ($generated@@141 $generated@@341 ($generated@@135 $generated@@340)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@298 (type $generated@@342))))
(let (($generated@@344 ($generated@@297 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@296 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@295 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@294 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@298 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@79 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@298 (type $generated@@349))))
(let (($generated@@351 ($generated@@297 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@296 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@295 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@316 (type $generated@@353))))
(let (($generated@@355 ($generated@@315 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@314 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@313 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@312 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@316 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@79 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@316 (type $generated@@360))))
(let (($generated@@362 ($generated@@315 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@314 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@313 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@365) $generated@@67)) (= ($generated@@141 $generated@@364 ($generated@@164 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@364 $generated@@366)))) ($generated@@233 $generated@@366 $generated@@365))
 :pattern ( ($generated@@84 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@141 $generated@@364 ($generated@@164 $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
 (=> (and (= (type $generated@@367) ($generated@@79 $generated@@370 $generated@@4)) (= (type $generated@@368) ($generated@@79 $generated@@370 $generated@@4))) (= ($generated@@0 ($generated@@84 ($generated@@225 $generated@@367 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 $generated@@367 $generated@@369)) ($generated@@0 ($generated@@84 $generated@@368 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@225 $generated@@367 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@371 ($generated@@242 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@159) ($generated@@0 ($generated@@84 $generated@@371 $generated@@374))) ($generated@@257 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@84 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@77 $generated@@371 ($generated@@242 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@247 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@159) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@257 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@247 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@84 ($generated@@285 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@84 ($generated@@285 $generated@@380) $generated@@379)))
)))
(assert  (and (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@381 $generated@@384)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@381 $generated@@384))
)) (forall (($generated@@385 T@T) ($generated@@386 T@U) ) (! (= (type ($generated@@382 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@382 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@298 (type $generated@@387))))
(let (($generated@@389 ($generated@@297 (type $generated@@387))))
(= (type ($generated@@383 $generated@@387)) ($generated@@79 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@383 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@296 $generated@@159 $generated@@159)) (= (type $generated@@391) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@381 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@390) ($generated@@157 ($generated@@382 $generated@@150 $generated@@391)))) (= ($generated@@84 ($generated@@383 $generated@@390) ($generated@@157 ($generated@@382 $generated@@150 $generated@@391))) ($generated@@158 ($generated@@382 $generated@@150 $generated@@391))))))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@390) $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@316 (type $generated@@395))))
(let (($generated@@397 ($generated@@315 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@79 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@314 $generated@@159 $generated@@159)) (= (type $generated@@399) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@398) ($generated@@157 ($generated@@382 $generated@@150 $generated@@399)))) (= ($generated@@84 ($generated@@393 $generated@@398) ($generated@@157 ($generated@@382 $generated@@150 $generated@@399))) ($generated@@158 ($generated@@382 $generated@@150 $generated@@399))))))
 :pattern ( ($generated@@84 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@297 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@296 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@84 ($generated@@346 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@84 ($generated@@383 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@400) $generated@@404))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@84 ($generated@@346 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@315 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@314 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@84 ($generated@@393 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@393 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@67)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@296 $generated@@159 $generated@@159)) (= (type $generated@@414) $generated@@67)) (= (type $generated@@415) $generated@@67)) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@413) $generated@@417))) (and ($generated@@257 ($generated@@84 ($generated@@383 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@257 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@413) $generated@@417))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@77 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@67)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@314 $generated@@159 $generated@@159)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) $generated@@67)) (= (type $generated@@424) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@421) $generated@@425))) (and ($generated@@257 ($generated@@84 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@257 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@84 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@77 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@82 (type $generated@@426))))
 (=> (and (and (= (type $generated@@426) ($generated@@79 $generated@@428 $generated@@4)) (= (type $generated@@427) ($generated@@79 $generated@@428 $generated@@4))) ($generated@@330 $generated@@426 $generated@@427)) (= $generated@@426 $generated@@427)))
 :pattern ( ($generated@@330 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@430 T@T) ) (! (= (type ($generated@@429 $generated@@430)) ($generated@@79 $generated@@430 $generated@@4))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@316 (type $generated@@431))))
(let (($generated@@433 ($generated@@315 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@314 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@313 $generated@@433 $generated@@432)) (= ($generated@@312 $generated@@431) ($generated@@429 $generated@@433))))))
 :pattern ( ($generated@@312 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@316 (type $generated@@434))))
(let (($generated@@436 ($generated@@315 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@314 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@313 $generated@@436 $generated@@435)) (= ($generated@@357 $generated@@434) ($generated@@429 $generated@@435))))))
 :pattern ( ($generated@@357 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@316 (type $generated@@437))))
(let (($generated@@439 ($generated@@315 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@314 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@313 $generated@@439 $generated@@438)) (= ($generated@@392 $generated@@437) ($generated@@429 $generated@@159))))))
 :pattern ( ($generated@@392 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@298 (type $generated@@440))))
(let (($generated@@442 ($generated@@297 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@296 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@295 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@159) (= (type $generated@@444) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@381 $generated@@440) ($generated@@279 ($generated@@232 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@381 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@316 (type $generated@@445))))
(let (($generated@@447 ($generated@@315 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@314 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@313 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@159) (= (type $generated@@449) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@392 $generated@@445) ($generated@@279 ($generated@@232 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@392 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@159) ($generated@@233 $generated@@450 $generated@@46)) (and (= ($generated@@279 ($generated@@382 $generated@@2 $generated@@450)) $generated@@450) ($generated@@141 ($generated@@382 $generated@@2 $generated@@450) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@450 $generated@@46))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@159) ($generated@@233 $generated@@451 $generated@@47)) (and (= ($generated@@279 ($generated@@382 $generated@@3 $generated@@451)) $generated@@451) ($generated@@141 ($generated@@382 $generated@@3 $generated@@451) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@451 $generated@@47))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@159) ($generated@@233 $generated@@452 $generated@@44)) (and (= ($generated@@279 ($generated@@382 $generated@@4 $generated@@452)) $generated@@452) ($generated@@141 ($generated@@382 $generated@@4 $generated@@452) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@452 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@453) 20))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@159) ($generated@@233 $generated@@454 $generated@@45)) (and (= ($generated@@279 ($generated@@382 $generated@@453 $generated@@454)) $generated@@454) ($generated@@141 ($generated@@382 $generated@@453 $generated@@454) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@454 $generated@@45))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@233 ($generated@@279 $generated@@455) $generated@@456) ($generated@@141 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@233 ($generated@@279 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@82 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@79 $generated@@458 $generated@@2)) (<= 0 ($generated@@284 $generated@@457))))
 :pattern ( ($generated@@284 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@272 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@271 $generated@@460)) (<= 0 ($generated@@270 $generated@@459))))
 :pattern ( ($generated@@270 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@410 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@410 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@410 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@410 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@75 ($generated@@410 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@410 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@418 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@418 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@418 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@75 ($generated@@418 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@418 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@159) (= (type $generated@@482) $generated@@159)) (= ($generated@@263 ($generated@@232 $generated@@481 $generated@@482)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@149 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@149 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@149 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@149 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@159) (= (type $generated@@492) $generated@@159)) (= ($generated@@157 ($generated@@232 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@232 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@159) (= (type $generated@@494) $generated@@159)) (= ($generated@@158 ($generated@@232 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@232 $generated@@493 $generated@@494))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ($generated@@499 Int) ) (! (let (($generated@@500 ($generated@@272 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498 $generated@@499)) $generated@@500))
 :pattern ( ($generated@@496 $generated@@498 $generated@@499))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@271 $generated@@159)) (= (type $generated@@502) $generated@@67)) (= (type $generated@@503) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@501 ($generated@@495 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@270 $generated@@501))) ($generated@@257 ($generated@@496 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@496 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@77 $generated@@501 ($generated@@495 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@78 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@78 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@242 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@242 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@75 ($generated@@242 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@67)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@511 ($generated@@247 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@247 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@75 ($generated@@247 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@67)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@515 ($generated@@164 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@164 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@75 ($generated@@164 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@495 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@495 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@75 ($generated@@495 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@495 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@135 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@135 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@526 ($generated@@143 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@143 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(= ($generated@@382 $generated@@530 ($generated@@279 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@279 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@296 $generated@@159 $generated@@159)) (= (type $generated@@532) $generated@@67)) (= (type $generated@@533) $generated@@67)) (= ($generated@@141 $generated@@531 ($generated@@410 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@531) $generated@@534))) (and ($generated@@233 ($generated@@84 ($generated@@383 $generated@@531) $generated@@534) $generated@@533) ($generated@@233 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@531) $generated@@534))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@141 $generated@@531 ($generated@@410 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@314 $generated@@159 $generated@@159)) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@67)) (= ($generated@@141 $generated@@535 ($generated@@418 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@535) $generated@@538))) (and ($generated@@233 ($generated@@84 ($generated@@393 $generated@@535) $generated@@538) $generated@@537) ($generated@@233 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@84 ($generated@@393 $generated@@535) $generated@@538))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@141 $generated@@535 ($generated@@418 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@159) (= (type $generated@@542) $generated@@159)) (< ($generated@@539 $generated@@541) ($generated@@540 ($generated@@232 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@232 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@159) (= (type $generated@@544) $generated@@159)) (< ($generated@@539 $generated@@544) ($generated@@540 ($generated@@232 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@232 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@82 (type $generated@@545))))
 (=> (and (= (type $generated@@545) ($generated@@79 $generated@@547 $generated@@4)) (= (type $generated@@546) ($generated@@79 $generated@@547 $generated@@4))) (= ($generated@@225 $generated@@545 ($generated@@225 $generated@@545 $generated@@546)) ($generated@@225 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@225 $generated@@545 ($generated@@225 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@159) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) ($generated@@233 $generated@@548 ($generated@@410 $generated@@549 $generated@@550))) (and (= ($generated@@279 ($generated@@382 ($generated@@296 $generated@@159 $generated@@159) $generated@@548)) $generated@@548) ($generated@@141 ($generated@@382 ($generated@@296 $generated@@159 $generated@@159) $generated@@548) ($generated@@410 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@233 $generated@@548 ($generated@@410 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) $generated@@67)) ($generated@@233 $generated@@551 ($generated@@418 $generated@@552 $generated@@553))) (and (= ($generated@@279 ($generated@@382 ($generated@@314 $generated@@159 $generated@@159) $generated@@551)) $generated@@551) ($generated@@141 ($generated@@382 ($generated@@314 $generated@@159 $generated@@159) $generated@@551) ($generated@@418 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@233 $generated@@551 ($generated@@418 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) $generated@@159)) ($generated@@233 $generated@@556 ($generated@@149 $generated@@554 $generated@@555))) (and (= ($generated@@279 ($generated@@382 $generated@@150 $generated@@556)) $generated@@556) ($generated@@141 ($generated@@382 $generated@@150 $generated@@556) ($generated@@149 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@233 $generated@@556 ($generated@@149 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@558 T@T) ) (! (= (type ($generated@@557 $generated@@558)) ($generated@@79 $generated@@558 $generated@@4))
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@557 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@557 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@84 ($generated@@429 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@84 ($generated@@429 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@67) (= (type $generated@@564) $generated@@67)) (and (= ($generated@@75 ($generated@@149 $generated@@563 $generated@@564)) $generated@@62) (= ($generated@@290 ($generated@@149 $generated@@563 $generated@@564)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@150) (= ($generated@@539 ($generated@@279 $generated@@565)) ($generated@@540 $generated@@565)))
 :pattern ( ($generated@@539 ($generated@@279 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@159) ($generated@@233 $generated@@566 ($generated@@78 0))) (and (= ($generated@@279 ($generated@@382 $generated@@2 $generated@@566)) $generated@@566) ($generated@@141 ($generated@@382 ($generated@@79 $generated@@159 $generated@@4) $generated@@566) ($generated@@78 0))))
 :pattern ( ($generated@@233 $generated@@566 ($generated@@78 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@159) (= (type $generated@@568) $generated@@67)) ($generated@@233 $generated@@567 ($generated@@242 $generated@@568))) (and (= ($generated@@279 ($generated@@382 ($generated@@79 $generated@@159 $generated@@4) $generated@@567)) $generated@@567) ($generated@@141 ($generated@@382 ($generated@@79 $generated@@159 $generated@@4) $generated@@567) ($generated@@242 $generated@@568))))
 :pattern ( ($generated@@233 $generated@@567 ($generated@@242 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@159) (= (type $generated@@570) $generated@@67)) ($generated@@233 $generated@@569 ($generated@@247 $generated@@570))) (and (= ($generated@@279 ($generated@@382 ($generated@@79 $generated@@159 $generated@@4) $generated@@569)) $generated@@569) ($generated@@141 ($generated@@382 ($generated@@79 $generated@@159 $generated@@4) $generated@@569) ($generated@@247 $generated@@570))))
 :pattern ( ($generated@@233 $generated@@569 ($generated@@247 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@159) (= (type $generated@@572) $generated@@67)) ($generated@@233 $generated@@571 ($generated@@164 $generated@@572))) (and (= ($generated@@279 ($generated@@382 ($generated@@79 $generated@@159 $generated@@2) $generated@@571)) $generated@@571) ($generated@@141 ($generated@@382 ($generated@@79 $generated@@159 $generated@@2) $generated@@571) ($generated@@164 $generated@@572))))
 :pattern ( ($generated@@233 $generated@@571 ($generated@@164 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@159) (= (type $generated@@574) $generated@@67)) ($generated@@233 $generated@@573 ($generated@@495 $generated@@574))) (and (= ($generated@@279 ($generated@@382 ($generated@@271 $generated@@159) $generated@@573)) $generated@@573) ($generated@@141 ($generated@@382 ($generated@@271 $generated@@159) $generated@@573) ($generated@@495 $generated@@574))))
 :pattern ( ($generated@@233 $generated@@573 ($generated@@495 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@159)) ($generated@@233 $generated@@576 ($generated@@135 $generated@@575))) (and (= ($generated@@279 ($generated@@382 $generated@@80 $generated@@576)) $generated@@576) ($generated@@141 ($generated@@382 $generated@@80 $generated@@576) ($generated@@135 $generated@@575))))
 :pattern ( ($generated@@233 $generated@@576 ($generated@@135 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@67) (= (type $generated@@578) $generated@@159)) ($generated@@233 $generated@@578 ($generated@@143 $generated@@577))) (and (= ($generated@@279 ($generated@@382 $generated@@80 $generated@@578)) $generated@@578) ($generated@@141 ($generated@@382 $generated@@80 $generated@@578) ($generated@@143 $generated@@577))))
 :pattern ( ($generated@@233 $generated@@578 ($generated@@143 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@579 ($generated@@164 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@579 $generated@@582)))) ($generated@@257 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@84 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@164 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@82 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@79 $generated@@586 $generated@@4)) (= (type $generated@@585) ($generated@@79 $generated@@586 $generated@@4))) (= ($generated@@583 $generated@@584 $generated@@585) (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@586) (or (not ($generated@@0 ($generated@@84 $generated@@584 $generated@@587))) (not ($generated@@0 ($generated@@84 $generated@@585 $generated@@587)))))
 :pattern ( ($generated@@84 $generated@@584 $generated@@587))
 :pattern ( ($generated@@84 $generated@@585 $generated@@587))
)))))
 :pattern ( ($generated@@583 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@150) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@256 $generated@@590) (and ($generated@@148 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@67) ($generated@@77 $generated@@588 ($generated@@149 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@77 $generated@@588 ($generated@@149 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@257 ($generated@@157 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@257 ($generated@@157 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@150) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@256 $generated@@594) (and ($generated@@148 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@67) ($generated@@77 $generated@@592 ($generated@@149 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@77 $generated@@592 ($generated@@149 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@257 ($generated@@158 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@257 ($generated@@158 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@159) (= (type $generated@@597) $generated@@159)) (= ($generated@@232 ($generated@@252 $generated@@596) ($generated@@252 $generated@@597)) ($generated@@252 ($generated@@232 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@232 ($generated@@252 $generated@@596) ($generated@@252 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@279 ($generated@@252 $generated@@598)) ($generated@@252 ($generated@@279 $generated@@598)))
 :pattern ( ($generated@@279 ($generated@@252 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@272 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@271 $generated@@600)) (= ($generated@@270 $generated@@599) 0)) (= $generated@@599 ($generated@@269 $generated@@600))))
 :pattern ( ($generated@@270 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@79 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@284 ($generated@@85 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@284 $generated@@601) ($generated ($generated@@84 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@284 ($generated@@85 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@2)) ($generated@@77 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@3)) ($generated@@77 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@610) $generated@@4)) ($generated@@77 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@77 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@612) $generated@@453)) ($generated@@77 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@77 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@614) $generated@@159)) ($generated@@77 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@77 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@271 $generated@@159)) (= (type $generated@@616) $generated@@67)) (= ($generated@@141 $generated@@615 ($generated@@495 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@270 $generated@@615))) ($generated@@233 ($generated@@496 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@496 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@141 $generated@@615 ($generated@@495 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ) (!  (=> (= (type $generated@@619) ($generated@@271 $generated@@159)) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@270 $generated@@619))) (< ($generated@@540 ($generated@@382 $generated@@150 ($generated@@496 $generated@@619 $generated@@620))) ($generated@@618 $generated@@619))))
 :pattern ( ($generated@@540 ($generated@@382 $generated@@150 ($generated@@496 $generated@@619 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@296 $generated@@159 $generated@@159)) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) $generated@@67)) ($generated@@141 $generated@@621 ($generated@@410 $generated@@622 $generated@@623))) (and (and ($generated@@141 ($generated@@294 $generated@@621) ($generated@@242 $generated@@622)) ($generated@@141 ($generated@@346 $generated@@621) ($generated@@242 $generated@@623))) ($generated@@141 ($generated@@381 $generated@@621) ($generated@@242 ($generated@@149 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@141 $generated@@621 ($generated@@410 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@314 $generated@@159 $generated@@159)) (= (type $generated@@625) $generated@@67)) (= (type $generated@@626) $generated@@67)) ($generated@@141 $generated@@624 ($generated@@418 $generated@@625 $generated@@626))) (and (and ($generated@@141 ($generated@@312 $generated@@624) ($generated@@247 $generated@@625)) ($generated@@141 ($generated@@357 $generated@@624) ($generated@@247 $generated@@626))) ($generated@@141 ($generated@@392 $generated@@624) ($generated@@247 ($generated@@149 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@141 $generated@@624 ($generated@@418 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) ($generated@@141 $generated@@627 $generated@@46))
 :pattern ( ($generated@@141 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@3) ($generated@@141 $generated@@628 $generated@@47))
 :pattern ( ($generated@@141 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@4) ($generated@@141 $generated@@629 $generated@@44))
 :pattern ( ($generated@@141 $generated@@629 $generated@@44))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@453) ($generated@@141 $generated@@630 $generated@@45))
 :pattern ( ($generated@@141 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@159) ($generated@@141 $generated@@631 $generated@@48))
 :pattern ( ($generated@@141 $generated@@631 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(assert  (and (and (and (and (and (= (type $generated@@632) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@633) ($generated@@79 $generated@@159 $generated@@4))) (= (type $generated@@634) ($generated@@171 $generated@@80 $generated@@4))) (= (type $generated@@635) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@637) $generated@@80)) (= (type $generated@@638) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@640  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@583 $generated@@632 $generated@@633))))
(let (($generated@@641  (and (=> (= (ControlFlow 0 4) (- 0 5)) (forall (($generated@@642 Int) ) (!  (=> true (not ($generated@@0 ($generated@@84 ($generated@@225 $generated@@632 $generated@@633) ($generated@@279 ($generated@@8 $generated@@642))))))
 :pattern ( ($generated@@84 ($generated@@225 $generated@@632 $generated@@633) ($generated@@279 ($generated@@8 $generated@@642))))
))) (=> (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@2) true) (not ($generated@@0 ($generated@@84 ($generated@@225 $generated@@632 $generated@@633) ($generated@@279 $generated@@643)))))
 :pattern ( ($generated@@84 ($generated@@225 $generated@@632 $generated@@633) ($generated@@279 $generated@@643)))
)) (=> (= (ControlFlow 0 4) 3) $generated@@640)))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@634 ($generated@@170 $generated@@136 $generated@@635 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@641) (=> (= (ControlFlow 0 6) 1) $generated@@644)))))
(let (($generated@@646  (=> (and ($generated@@256 $generated@@635) ($generated@@636 $generated@@635)) (=> (and (and (not (= $generated@@637 $generated@@136)) (and ($generated@@141 $generated@@637 ($generated@@143 $generated@@638)) ($generated@@77 $generated@@637 ($generated@@143 $generated@@638) $generated@@635))) (and ($generated@@141 $generated@@632 ($generated@@242 $generated@@46)) ($generated@@77 $generated@@632 ($generated@@242 $generated@@46) $generated@@635))) (=> (and (and (and ($generated@@141 $generated@@633 ($generated@@242 $generated@@46)) ($generated@@77 $generated@@633 ($generated@@242 $generated@@46) $generated@@635)) (= 0 $generated@@639)) (and ($generated@@330 ($generated@@225 $generated@@632 $generated@@633) ($generated@@557 $generated@@159)) (= (ControlFlow 0 7) 6))) $generated@@645)))))
$generated@@646))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@581 (T@U T@U Int) Bool)
(declare-fun $generated@@618 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@141))
)) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (= (type $generated@@144) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@143 ($generated@@139 $generated@@142) $generated@@144)  (or (= $generated@@143 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@143 ($generated@@139 $generated@@142) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@78 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@78 0)))
)))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@80)) (= (type $generated@@151) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@150 ($generated@@147 $generated@@149) $generated@@151) ($generated@@77 $generated@@150 ($generated@@139 $generated@@149) $generated@@151)))
 :pattern ( ($generated@@77 $generated@@150 ($generated@@147 $generated@@149) $generated@@151))
)))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@67) (= (type $generated@@158) $generated@@67)) (= (type $generated@@159) $generated@@154)) ($generated@@145 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@145 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@67)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@79 $generated@@163 $generated@@2)) (= (type $generated@@172) $generated@@67)) ($generated@@145 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@145 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@80 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@70 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@224) ($generated@@69 $generated@@4))) (= (type $generated@@226) $generated@@80)) (= (type $generated@@227) ($generated@@69 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@154)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@67) (= (type $generated@@234) $generated@@67)) (= (type $generated@@235) $generated@@163)) (= (type $generated@@236) $generated@@163)) (= ($generated@@145 ($generated@@229 $generated@@235 $generated@@236) ($generated@@153 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@145 ($generated@@229 $generated@@235 $generated@@236) ($generated@@153 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@154) (= (type $generated@@238) $generated@@154)) (= ($generated@@160 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@160 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@163 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@145 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@163) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@145 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@67)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@79 $generated@@163 $generated@@4)) (= (type $generated@@247) $generated@@67)) (= ($generated@@145 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@163) ($generated@@0 ($generated@@84 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@84 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@145 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@67) (= (type $generated@@258) $generated@@67)) (= (type $generated@@259) $generated@@163)) (= (type $generated@@260) $generated@@163)) (= (type $generated@@261) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@255 $generated@@261)) (= ($generated@@77 ($generated@@229 $generated@@259 $generated@@260) ($generated@@153 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@77 ($generated@@229 $generated@@259 $generated@@260) ($generated@@153 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@71)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@154) (= ($generated@@152 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@154) ($generated@@152 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@163) (= (type $generated@@267) $generated@@163)) (= $generated@@265 ($generated@@229 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@152 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert ($generated@@276 $generated@@60))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@67) (= (type $generated@@278) $generated@@80)) (= ($generated@@145 $generated@@278 ($generated@@147 $generated@@277))  (and ($generated@@145 $generated@@278 ($generated@@139 $generated@@277)) (not (= $generated@@278 $generated@@140)))))
 :pattern ( ($generated@@145 $generated@@278 ($generated@@147 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@163)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@67) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@256 ($generated@@279 $generated@@281) $generated@@282 $generated@@283) ($generated@@77 $generated@@281 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@256 ($generated@@279 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@285) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@286) $generated@@163)) (= (type $generated@@287) $generated@@67)) ($generated@@135 $generated@@284 $generated@@285)) ($generated@@256 $generated@@286 $generated@@287 $generated@@284)) ($generated@@256 $generated@@286 $generated@@287 $generated@@285))
 :pattern ( ($generated@@135 $generated@@284 $generated@@285) ($generated@@256 $generated@@286 $generated@@287 $generated@@284))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@288) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@289) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@291) $generated@@67)) ($generated@@135 $generated@@288 $generated@@289)) ($generated@@77 $generated@@290 $generated@@291 $generated@@288)) ($generated@@77 $generated@@290 $generated@@291 $generated@@289))
 :pattern ( ($generated@@135 $generated@@288 $generated@@289) ($generated@@77 $generated@@290 $generated@@291 $generated@@288))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@79 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@82 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@79 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@84 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@72)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@67) (and (= ($generated@@75 ($generated@@139 $generated@@300)) $generated@@63) (= ($generated@@298 ($generated@@139 $generated@@300)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@67) (and (= ($generated@@75 ($generated@@147 $generated@@301)) $generated@@64) (= ($generated@@298 ($generated@@147 $generated@@301)) $generated@@66)))
 :pattern ( ($generated@@147 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@79 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@84 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@84 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@79 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@84 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@84 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@340) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@338 $generated@@339 $generated@@340)) (and ($generated@@135 $generated@@339 $generated@@340) (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@70 (type $generated@@342))))
 (=> (and (and (= (type $generated@@341) $generated@@80) (= (type $generated@@342) ($generated@@69 $generated@@343))) (not ($generated@@276 $generated@@342))) (= ($generated@@86 ($generated@@84 $generated@@339 $generated@@341) $generated@@342) ($generated@@86 ($generated@@84 $generated@@340 $generated@@341) $generated@@342))))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@340 $generated@@341) $generated@@342))
))))
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@82 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@79 $generated@@345 $generated@@2)) (= ($generated@@169 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@84 $generated@@344 $generated@@346))) (<= ($generated ($generated@@84 $generated@@344 $generated@@346)) ($generated@@292 $generated@@344))))
 :pattern ( ($generated@@84 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@169 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@67)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@80)) (= ($generated@@145 $generated@@350 ($generated@@139 $generated@@349))  (or (= $generated@@350 $generated@@140) (= ($generated@@347 $generated@@350) ($generated@@139 $generated@@349)))))
 :pattern ( ($generated@@145 $generated@@350 ($generated@@139 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@306 (type $generated@@351))))
(let (($generated@@353 ($generated@@305 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@304 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@303 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@84 ($generated@@302 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@302 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@306 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@79 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@306 (type $generated@@358))))
(let (($generated@@360 ($generated@@305 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@304 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@303 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@84 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@324 (type $generated@@362))))
(let (($generated@@364 ($generated@@323 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@322 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@321 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@84 ($generated@@320 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@320 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@324 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@79 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@324 (type $generated@@369))))
(let (($generated@@371 ($generated@@323 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@322 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@321 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@84 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@79 $generated@@163 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@145 $generated@@373 ($generated@@168 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@163) (< 0 ($generated ($generated@@84 $generated@@373 $generated@@375)))) ($generated@@230 $generated@@375 $generated@@374))
 :pattern ( ($generated@@84 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@145 $generated@@373 ($generated@@168 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@79 $generated@@163 $generated@@4)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@376 ($generated@@239 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@163) ($generated@@0 ($generated@@84 $generated@@376 $generated@@379))) ($generated@@256 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@84 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@77 $generated@@376 ($generated@@239 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@79 $generated@@163 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@380 ($generated@@244 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@163) ($generated@@0 ($generated@@84 $generated@@380 $generated@@383))) ($generated@@256 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@84 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@77 $generated@@380 ($generated@@244 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@84 ($generated@@293 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@84 ($generated@@293 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@79 $generated@@163 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@306 (type $generated@@392))))
(let (($generated@@394 ($generated@@305 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@79 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@304 $generated@@163 $generated@@163)) (= (type $generated@@396) $generated@@163)) (= ($generated@@0 ($generated@@84 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@84 ($generated@@302 $generated@@395) ($generated@@161 ($generated@@387 $generated@@154 $generated@@396)))) (= ($generated@@84 ($generated@@388 $generated@@395) ($generated@@161 ($generated@@387 $generated@@154 $generated@@396))) ($generated@@162 ($generated@@387 $generated@@154 $generated@@396))))))
 :pattern ( ($generated@@84 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@163 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@324 (type $generated@@400))))
(let (($generated@@402 ($generated@@323 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@79 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@322 $generated@@163 $generated@@163)) (= (type $generated@@404) $generated@@163)) (= ($generated@@0 ($generated@@84 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@84 ($generated@@320 $generated@@403) ($generated@@161 ($generated@@387 $generated@@154 $generated@@404)))) (= ($generated@@84 ($generated@@398 $generated@@403) ($generated@@161 ($generated@@387 $generated@@154 $generated@@404))) ($generated@@162 ($generated@@387 $generated@@154 $generated@@404))))))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@305 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@304 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@84 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@84 ($generated@@302 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@84 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@84 ($generated@@302 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@84 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@323 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@322 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@84 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@84 ($generated@@320 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@84 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@84 ($generated@@320 $generated@@410) $generated@@414))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@304 $generated@@163 $generated@@163)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@163) ($generated@@0 ($generated@@84 ($generated@@302 $generated@@418) $generated@@422))) (and ($generated@@256 ($generated@@84 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@256 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@84 ($generated@@302 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@322 $generated@@163 $generated@@163)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@163) ($generated@@0 ($generated@@84 ($generated@@320 $generated@@426) $generated@@430))) (and ($generated@@256 ($generated@@84 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@256 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@84 ($generated@@320 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@77 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@433) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@431 $generated@@433))) (and ($generated@@135 $generated@@431 $generated@@432) ($generated@@135 $generated@@432 $generated@@433))) ($generated@@135 $generated@@431 $generated@@433))
 :pattern ( ($generated@@135 $generated@@431 $generated@@432) ($generated@@135 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@79 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@324 (type $generated@@436))))
(let (($generated@@438 ($generated@@323 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@322 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@321 $generated@@438 $generated@@437)) (= ($generated@@320 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@320 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@324 (type $generated@@439))))
(let (($generated@@441 ($generated@@323 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@322 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@321 $generated@@441 $generated@@440)) (= ($generated@@366 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@366 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@324 (type $generated@@442))))
(let (($generated@@444 ($generated@@323 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@322 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@321 $generated@@444 $generated@@443)) (= ($generated@@397 $generated@@442) ($generated@@434 $generated@@163))))))
 :pattern ( ($generated@@397 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@306 (type $generated@@445))))
(let (($generated@@447 ($generated@@305 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@304 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@303 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@163) (= (type $generated@@449) $generated@@163)) ($generated@@0 ($generated@@84 ($generated@@386 $generated@@445) ($generated@@279 ($generated@@229 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@386 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@324 (type $generated@@450))))
(let (($generated@@452 ($generated@@323 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@322 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@321 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@163) (= (type $generated@@454) $generated@@163)) ($generated@@0 ($generated@@84 ($generated@@397 $generated@@450) ($generated@@279 ($generated@@229 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@230 $generated@@455 $generated@@46)) (and (= ($generated@@279 ($generated@@387 $generated@@2 $generated@@455)) $generated@@455) ($generated@@145 ($generated@@387 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@230 $generated@@456 $generated@@47)) (and (= ($generated@@279 ($generated@@387 $generated@@3 $generated@@456)) $generated@@456) ($generated@@145 ($generated@@387 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@163) ($generated@@230 $generated@@457 $generated@@44)) (and (= ($generated@@279 ($generated@@387 $generated@@4 $generated@@457)) $generated@@457) ($generated@@145 ($generated@@387 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@163) ($generated@@230 $generated@@459 $generated@@45)) (and (= ($generated@@279 ($generated@@387 $generated@@458 $generated@@459)) $generated@@459) ($generated@@145 ($generated@@387 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@67) (= ($generated@@230 ($generated@@279 $generated@@460) $generated@@461) ($generated@@145 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@230 ($generated@@279 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@292 $generated@@462))))
 :pattern ( ($generated@@292 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@271 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@270 $generated@@465)) (<= 0 ($generated@@269 $generated@@464))))
 :pattern ( ($generated@@269 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@415 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@423 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@163) (= (type $generated@@487) $generated@@163)) (= ($generated@@262 ($generated@@229 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@153 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@153 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@153 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@153 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@163) (= (type $generated@@497) $generated@@163)) (= ($generated@@161 ($generated@@229 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@229 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@163) (= (type $generated@@499) $generated@@163)) (= ($generated@@162 ($generated@@229 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@229 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@271 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@270 $generated@@163)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@269 $generated@@506))) ($generated@@256 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@239 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@239 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@244 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@244 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@244 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@168 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@168 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@168 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@139 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@139 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@147 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@147 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@387 $generated@@535 ($generated@@279 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@279 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@304 $generated@@163 $generated@@163)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@145 $generated@@536 ($generated@@415 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) ($generated@@0 ($generated@@84 ($generated@@302 $generated@@536) $generated@@539))) (and ($generated@@230 ($generated@@84 ($generated@@388 $generated@@536) $generated@@539) $generated@@538) ($generated@@230 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@302 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@145 $generated@@536 ($generated@@415 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@322 $generated@@163 $generated@@163)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@145 $generated@@540 ($generated@@423 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@163) ($generated@@0 ($generated@@84 ($generated@@320 $generated@@540) $generated@@543))) (and ($generated@@230 ($generated@@84 ($generated@@398 $generated@@540) $generated@@543) $generated@@542) ($generated@@230 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@320 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@145 $generated@@540 ($generated@@423 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@163)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@229 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@163) (= (type $generated@@549) $generated@@163)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@229 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@163) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@230 $generated@@550 ($generated@@415 $generated@@551 $generated@@552))) (and (= ($generated@@279 ($generated@@387 ($generated@@304 $generated@@163 $generated@@163) $generated@@550)) $generated@@550) ($generated@@145 ($generated@@387 ($generated@@304 $generated@@163 $generated@@163) $generated@@550) ($generated@@415 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@230 $generated@@550 ($generated@@415 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@163) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@230 $generated@@553 ($generated@@423 $generated@@554 $generated@@555))) (and (= ($generated@@279 ($generated@@387 ($generated@@322 $generated@@163 $generated@@163) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@387 ($generated@@322 $generated@@163 $generated@@163) $generated@@553) ($generated@@423 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@230 $generated@@553 ($generated@@423 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@163)) ($generated@@230 $generated@@558 ($generated@@153 $generated@@556 $generated@@557))) (and (= ($generated@@279 ($generated@@387 $generated@@154 $generated@@558)) $generated@@558) ($generated@@145 ($generated@@387 $generated@@154 $generated@@558) ($generated@@153 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@230 $generated@@558 ($generated@@153 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@434 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@434 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@153 $generated@@561 $generated@@562)) $generated@@62) (= ($generated@@298 ($generated@@153 $generated@@561 $generated@@562)) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@154) (= ($generated@@544 ($generated@@279 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@279 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@163) ($generated@@230 $generated@@564 ($generated@@78 0))) (and (= ($generated@@279 ($generated@@387 $generated@@2 $generated@@564)) $generated@@564) ($generated@@145 ($generated@@387 ($generated@@79 $generated@@163 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@230 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@163) (= (type $generated@@566) $generated@@67)) ($generated@@230 $generated@@565 ($generated@@239 $generated@@566))) (and (= ($generated@@279 ($generated@@387 ($generated@@79 $generated@@163 $generated@@4) $generated@@565)) $generated@@565) ($generated@@145 ($generated@@387 ($generated@@79 $generated@@163 $generated@@4) $generated@@565) ($generated@@239 $generated@@566))))
 :pattern ( ($generated@@230 $generated@@565 ($generated@@239 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@163) (= (type $generated@@568) $generated@@67)) ($generated@@230 $generated@@567 ($generated@@244 $generated@@568))) (and (= ($generated@@279 ($generated@@387 ($generated@@79 $generated@@163 $generated@@4) $generated@@567)) $generated@@567) ($generated@@145 ($generated@@387 ($generated@@79 $generated@@163 $generated@@4) $generated@@567) ($generated@@244 $generated@@568))))
 :pattern ( ($generated@@230 $generated@@567 ($generated@@244 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@163) (= (type $generated@@570) $generated@@67)) ($generated@@230 $generated@@569 ($generated@@168 $generated@@570))) (and (= ($generated@@279 ($generated@@387 ($generated@@79 $generated@@163 $generated@@2) $generated@@569)) $generated@@569) ($generated@@145 ($generated@@387 ($generated@@79 $generated@@163 $generated@@2) $generated@@569) ($generated@@168 $generated@@570))))
 :pattern ( ($generated@@230 $generated@@569 ($generated@@168 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@163) (= (type $generated@@572) $generated@@67)) ($generated@@230 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@279 ($generated@@387 ($generated@@270 $generated@@163) $generated@@571)) $generated@@571) ($generated@@145 ($generated@@387 ($generated@@270 $generated@@163) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@230 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@163)) ($generated@@230 $generated@@574 ($generated@@139 $generated@@573))) (and (= ($generated@@279 ($generated@@387 $generated@@80 $generated@@574)) $generated@@574) ($generated@@145 ($generated@@387 $generated@@80 $generated@@574) ($generated@@139 $generated@@573))))
 :pattern ( ($generated@@230 $generated@@574 ($generated@@139 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@163)) ($generated@@230 $generated@@576 ($generated@@147 $generated@@575))) (and (= ($generated@@279 ($generated@@387 $generated@@80 $generated@@576)) $generated@@576) ($generated@@145 ($generated@@387 $generated@@80 $generated@@576) ($generated@@147 $generated@@575))))
 :pattern ( ($generated@@230 $generated@@576 ($generated@@147 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@163 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@168 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@163) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@256 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@168 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 Int) ) (! (let (($generated@@585 ($generated@@271 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@270 $generated@@585)) (= (type $generated@@583) ($generated@@270 $generated@@585))) (= ($generated@@581 $generated@@582 $generated@@583 $generated@@584) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 $generated@@584)) (= ($generated@@501 $generated@@582 $generated@@586) ($generated@@501 $generated@@583 $generated@@586)))
 :pattern ( ($generated@@501 $generated@@582 $generated@@586))
 :pattern ( ($generated@@501 $generated@@583 $generated@@586))
)))))
 :pattern ( ($generated@@581 $generated@@582 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@154) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@255 $generated@@589) (and ($generated@@152 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@67) ($generated@@77 $generated@@587 ($generated@@153 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@77 $generated@@587 ($generated@@153 $generated@@588 $generated@@590) $generated@@589))
))))) ($generated@@256 ($generated@@161 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@256 ($generated@@161 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@154) (= (type $generated@@592) $generated@@67)) (= (type $generated@@593) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@255 $generated@@593) (and ($generated@@152 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@67) ($generated@@77 $generated@@591 ($generated@@153 $generated@@594 $generated@@592) $generated@@593))
 :pattern ( ($generated@@77 $generated@@591 ($generated@@153 $generated@@594 $generated@@592) $generated@@593))
))))) ($generated@@256 ($generated@@162 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@256 ($generated@@162 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@163) (= (type $generated@@596) $generated@@163)) (= ($generated@@229 ($generated@@251 $generated@@595) ($generated@@251 $generated@@596)) ($generated@@251 ($generated@@229 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@229 ($generated@@251 $generated@@595) ($generated@@251 $generated@@596)))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@279 ($generated@@8 ($generated@@249 $generated@@597))) ($generated@@251 ($generated@@279 ($generated@@8 $generated@@597))))
 :pattern ( ($generated@@279 ($generated@@8 ($generated@@249 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@279 ($generated@@251 $generated@@598)) ($generated@@251 ($generated@@279 $generated@@598)))
 :pattern ( ($generated@@279 ($generated@@251 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@271 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@270 $generated@@600)) (= ($generated@@269 $generated@@599) 0)) (= $generated@@599 ($generated@@268 $generated@@600))))
 :pattern ( ($generated@@269 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@79 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@292 ($generated@@85 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@292 $generated@@601) ($generated ($generated@@84 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@292 ($generated@@85 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@2)) ($generated@@77 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@3)) ($generated@@77 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@610) $generated@@4)) ($generated@@77 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@77 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@612) $generated@@458)) ($generated@@77 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@77 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@614) $generated@@163)) ($generated@@77 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@77 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@270 $generated@@163)) (= (type $generated@@616) $generated@@67)) (= ($generated@@145 $generated@@615 ($generated@@500 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@269 $generated@@615))) ($generated@@230 ($generated@@501 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@501 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@145 $generated@@615 ($generated@@500 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ) (!  (=> (= (type $generated@@619) ($generated@@270 $generated@@163)) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@269 $generated@@619))) (< ($generated@@545 ($generated@@387 $generated@@154 ($generated@@501 $generated@@619 $generated@@620))) ($generated@@618 $generated@@619))))
 :pattern ( ($generated@@545 ($generated@@387 $generated@@154 ($generated@@501 $generated@@619 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@304 $generated@@163 $generated@@163)) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) $generated@@67)) ($generated@@145 $generated@@621 ($generated@@415 $generated@@622 $generated@@623))) (and (and ($generated@@145 ($generated@@302 $generated@@621) ($generated@@239 $generated@@622)) ($generated@@145 ($generated@@355 $generated@@621) ($generated@@239 $generated@@623))) ($generated@@145 ($generated@@386 $generated@@621) ($generated@@239 ($generated@@153 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@145 $generated@@621 ($generated@@415 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@322 $generated@@163 $generated@@163)) (= (type $generated@@625) $generated@@67)) (= (type $generated@@626) $generated@@67)) ($generated@@145 $generated@@624 ($generated@@423 $generated@@625 $generated@@626))) (and (and ($generated@@145 ($generated@@320 $generated@@624) ($generated@@244 $generated@@625)) ($generated@@145 ($generated@@366 $generated@@624) ($generated@@244 $generated@@626))) ($generated@@145 ($generated@@397 $generated@@624) ($generated@@244 ($generated@@153 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@145 $generated@@624 ($generated@@423 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) ($generated@@145 $generated@@627 $generated@@46))
 :pattern ( ($generated@@145 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@3) ($generated@@145 $generated@@628 $generated@@47))
 :pattern ( ($generated@@145 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@4) ($generated@@145 $generated@@629 $generated@@44))
 :pattern ( ($generated@@145 $generated@@629 $generated@@44))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@458) ($generated@@145 $generated@@630 $generated@@45))
 :pattern ( ($generated@@145 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@163) ($generated@@145 $generated@@631 $generated@@48))
 :pattern ( ($generated@@145 $generated@@631 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Int)
(assert  (and (and (and (and (and (= (type $generated@@633) ($generated@@270 $generated@@163)) (= (type $generated@@634) ($generated@@270 $generated@@163))) (= (type $generated@@635) ($generated@@175 $generated@@80 $generated@@4))) (= (type $generated@@636) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@638) $generated@@80)) (= (type $generated@@639) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@641 true))
(let (($generated@@642  (=> (and (=> (and (<= ($generated@@249 0) $generated@@632) (< $generated@@632 ($generated@@269 $generated@@633))) (= ($generated ($generated@@387 $generated@@2 ($generated@@501 $generated@@633 $generated@@632))) ($generated ($generated@@387 $generated@@2 ($generated@@501 $generated@@634 $generated@@632))))) (= (ControlFlow 0 5) 1)) $generated@@641)))
(let (($generated@@643  (=> (and (<= ($generated@@249 0) $generated@@632) (< $generated@@632 ($generated@@269 $generated@@633))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@269 $generated@@633)))) (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@269 $generated@@633))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@269 $generated@@634)))) (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@269 $generated@@634))) (=> (and (= ($generated ($generated@@387 $generated@@2 ($generated@@501 $generated@@633 $generated@@632))) ($generated ($generated@@387 $generated@@2 ($generated@@501 $generated@@634 $generated@@632)))) (= (ControlFlow 0 2) 1)) $generated@@641))))))))
(let (($generated@@644  (=> (and (= $generated@@635 ($generated@@174 $generated@@140 $generated@@636 $generated@@60 false)) (<= ($generated@@269 $generated@@633) ($generated@@269 $generated@@634))) (and (=> (= (ControlFlow 0 6) 2) $generated@@643) (=> (= (ControlFlow 0 6) 5) $generated@@642)))))
(let (($generated@@645  (=> (and ($generated@@255 $generated@@636) ($generated@@637 $generated@@636)) (=> (and (and (and (not (= $generated@@638 $generated@@140)) (and ($generated@@145 $generated@@638 ($generated@@147 $generated@@639)) ($generated@@77 $generated@@638 ($generated@@147 $generated@@639) $generated@@636))) (and ($generated@@145 $generated@@633 ($generated@@500 $generated@@46)) ($generated@@77 $generated@@633 ($generated@@500 $generated@@46) $generated@@636))) (and (and ($generated@@145 $generated@@634 ($generated@@500 $generated@@46)) ($generated@@77 $generated@@634 ($generated@@500 $generated@@46) $generated@@636)) (and (= 0 $generated@@640) (= (ControlFlow 0 7) 6)))) $generated@@644))))
$generated@@645))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (Int) Int)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@559 (T@U T@U Int) Bool)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (forall (($generated@@137 T@U) ) (! (= (type ($generated@@135 $generated@@137)) $generated@@67)
 :pattern ( ($generated@@135 $generated@@137))
)) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@67) (= (type $generated@@139) $generated@@80)) (= (type $generated@@140) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140)  (or (= $generated@@139 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@78 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@78 0)))
)))
(assert (forall (($generated@@144 T@U) ) (! (= (type ($generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@80)) (= (type $generated@@147) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147) ($generated@@77 $generated@@146 ($generated@@135 $generated@@145) $generated@@147)))
 :pattern ( ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147))
)))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@67)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@150)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@159)) (= (type $generated@@232) $generated@@159)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@150) (= (type $generated@@234) $generated@@150)) (= ($generated@@156 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@156 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@159) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@159) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@245 $generated@@246) $generated@@246)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@67) (= (type $generated@@254) $generated@@67)) (= (type $generated@@255) $generated@@159)) (= (type $generated@@256) $generated@@159)) (= (type $generated@@257) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@251 $generated@@257)) (= ($generated@@77 ($generated@@225 $generated@@255 $generated@@256) ($generated@@149 $generated@@253 $generated@@254) $generated@@257)  (and ($generated@@252 $generated@@255 $generated@@253 $generated@@257) ($generated@@252 $generated@@256 $generated@@254 $generated@@257))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@255 $generated@@256) ($generated@@149 $generated@@253 $generated@@254) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@71)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@150) (= ($generated@@148 $generated@@260) (= ($generated@@258 $generated@@260) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@150) ($generated@@148 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@159) (= (type $generated@@263) $generated@@159)) (= $generated@@261 ($generated@@225 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@148 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 17)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@67) (= (type $generated@@273) $generated@@80)) (= ($generated@@141 $generated@@273 ($generated@@143 $generated@@272))  (and ($generated@@141 $generated@@273 ($generated@@135 $generated@@272)) (not (= $generated@@273 $generated@@136)))))
 :pattern ( ($generated@@141 $generated@@273 ($generated@@143 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@159)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@67) (= (type $generated@@278) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@252 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@77 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@252 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@79 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@82 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@79 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@84 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@72)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@67) (and (= ($generated@@75 ($generated@@135 $generated@@287)) $generated@@63) (= ($generated@@285 ($generated@@135 $generated@@287)) $generated@@66)))
 :pattern ( ($generated@@135 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@67) (and (= ($generated@@75 ($generated@@143 $generated@@288)) $generated@@64) (= ($generated@@285 ($generated@@143 $generated@@288)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@79 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@84 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@84 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@82 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@79 $generated@@326 $generated@@2)) (= ($generated@@165 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@84 $generated@@325 $generated@@327))) (<= ($generated ($generated@@84 $generated@@325 $generated@@327)) ($generated@@279 $generated@@325))))
 :pattern ( ($generated@@84 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@165 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@67)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@67) (= (type $generated@@331) $generated@@80)) (= ($generated@@141 $generated@@331 ($generated@@135 $generated@@330))  (or (= $generated@@331 $generated@@136) (= ($generated@@328 $generated@@331) ($generated@@135 $generated@@330)))))
 :pattern ( ($generated@@141 $generated@@331 ($generated@@135 $generated@@330)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@293 (type $generated@@332))))
(let (($generated@@334 ($generated@@292 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@291 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@290 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@289 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@79 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(let (($generated@@341 ($generated@@292 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@291 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@290 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@311 (type $generated@@343))))
(let (($generated@@345 ($generated@@310 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@309 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@308 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@307 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@79 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@84 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@355) $generated@@67)) (= ($generated@@141 $generated@@354 ($generated@@164 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@354 $generated@@356)))) ($generated@@226 $generated@@356 $generated@@355))
 :pattern ( ($generated@@84 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@141 $generated@@354 ($generated@@164 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@358) $generated@@67)) (= (type $generated@@359) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@357 ($generated@@235 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@159) ($generated@@0 ($generated@@84 $generated@@357 $generated@@360))) ($generated@@252 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@84 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@77 $generated@@357 ($generated@@235 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@362) $generated@@67)) (= (type $generated@@363) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@361 ($generated@@240 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@159) ($generated@@0 ($generated@@84 $generated@@361 $generated@@364))) ($generated@@252 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@84 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@77 $generated@@361 ($generated@@240 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@84 ($generated@@280 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@84 ($generated@@280 $generated@@366) $generated@@365)))
)))
(assert  (and (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@367 $generated@@370)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@367 $generated@@370))
)) (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@368 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@368 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@293 (type $generated@@373))))
(let (($generated@@375 ($generated@@292 (type $generated@@373))))
(= (type ($generated@@369 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@369 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@291 $generated@@159 $generated@@159)) (= (type $generated@@377) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@367 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@289 $generated@@376) ($generated@@157 ($generated@@368 $generated@@150 $generated@@377)))) (= ($generated@@84 ($generated@@369 $generated@@376) ($generated@@157 ($generated@@368 $generated@@150 $generated@@377))) ($generated@@158 ($generated@@368 $generated@@150 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@311 (type $generated@@381))))
(let (($generated@@383 ($generated@@310 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@79 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@309 $generated@@159 $generated@@159)) (= (type $generated@@385) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@384) ($generated@@157 ($generated@@368 $generated@@150 $generated@@385)))) (= ($generated@@84 ($generated@@379 $generated@@384) ($generated@@157 ($generated@@368 $generated@@150 $generated@@385))) ($generated@@158 ($generated@@368 $generated@@150 $generated@@385))))))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@292 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@291 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@84 ($generated@@336 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@84 ($generated@@289 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@84 ($generated@@369 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@386) $generated@@390))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@84 ($generated@@336 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@310 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@309 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@84 ($generated@@347 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@84 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@291 $generated@@159 $generated@@159)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@399) $generated@@403))) (and ($generated@@252 ($generated@@84 ($generated@@369 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@252 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@67)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@309 $generated@@159 $generated@@159)) (= (type $generated@@408) $generated@@67)) (= (type $generated@@409) $generated@@67)) (= (type $generated@@410) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@407) $generated@@411))) (and ($generated@@252 ($generated@@84 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@252 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@77 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@79 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@307 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@307 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@347 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@347 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@311 (type $generated@@420))))
(let (($generated@@422 ($generated@@310 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@309 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@308 $generated@@422 $generated@@421)) (= ($generated@@378 $generated@@420) ($generated@@412 $generated@@159))))))
 :pattern ( ($generated@@378 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@293 (type $generated@@423))))
(let (($generated@@425 ($generated@@292 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@291 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@290 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@159) (= (type $generated@@427) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@367 $generated@@423) ($generated@@274 ($generated@@225 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@367 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@311 (type $generated@@428))))
(let (($generated@@430 ($generated@@310 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@309 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@308 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@159) (= (type $generated@@432) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@378 $generated@@428) ($generated@@274 ($generated@@225 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@378 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@159) ($generated@@226 $generated@@433 $generated@@46)) (and (= ($generated@@274 ($generated@@368 $generated@@2 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@368 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@159) ($generated@@226 $generated@@434 $generated@@47)) (and (= ($generated@@274 ($generated@@368 $generated@@3 $generated@@434)) $generated@@434) ($generated@@141 ($generated@@368 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@159) ($generated@@226 $generated@@435 $generated@@44)) (and (= ($generated@@274 ($generated@@368 $generated@@4 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@368 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 20))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@159) ($generated@@226 $generated@@437 $generated@@45)) (and (= ($generated@@274 ($generated@@368 $generated@@436 $generated@@437)) $generated@@437) ($generated@@141 ($generated@@368 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@67) (= ($generated@@226 ($generated@@274 $generated@@438) $generated@@439) ($generated@@141 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@226 ($generated@@274 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@82 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@79 $generated@@441 $generated@@2)) (<= 0 ($generated@@279 $generated@@440))))
 :pattern ( ($generated@@279 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@267 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@266 $generated@@443)) (<= 0 ($generated@@265 $generated@@442))))
 :pattern ( ($generated@@265 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@67)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@444 ($generated@@396 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@396 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@448 ($generated@@396 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@396 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@404 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@404 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@404 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@404 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@75 ($generated@@404 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@159) (= (type $generated@@465) $generated@@159)) (= ($generated@@258 ($generated@@225 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@149 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@149 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@149 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@149 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@159) (= (type $generated@@475) $generated@@159)) (= ($generated@@157 ($generated@@225 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@225 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@159) (= (type $generated@@477) $generated@@159)) (= ($generated@@158 ($generated@@225 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@225 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ($generated@@482 Int) ) (! (let (($generated@@483 ($generated@@267 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481 $generated@@482)) $generated@@483))
 :pattern ( ($generated@@479 $generated@@481 $generated@@482))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@266 $generated@@159)) (= (type $generated@@485) $generated@@67)) (= (type $generated@@486) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@484 ($generated@@478 $generated@@485) $generated@@486) (forall (($generated@@487 Int) ) (!  (=> (and (<= 0 $generated@@487) (< $generated@@487 ($generated@@265 $generated@@484))) ($generated@@252 ($generated@@479 $generated@@484 $generated@@487) $generated@@485 $generated@@486))
 :pattern ( ($generated@@479 $generated@@484 $generated@@487))
))))
 :pattern ( ($generated@@77 $generated@@484 ($generated@@478 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@78 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@78 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@235 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@235 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@240 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@240 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@164 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@164 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@75 ($generated@@164 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@478 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@478 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@75 ($generated@@478 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@478 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@506 ($generated@@135 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@135 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@143 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@143 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@368 $generated@@513 ($generated@@274 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@274 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@291 $generated@@159 $generated@@159)) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) (= ($generated@@141 $generated@@514 ($generated@@396 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@514) $generated@@517))) (and ($generated@@226 ($generated@@84 ($generated@@369 $generated@@514) $generated@@517) $generated@@516) ($generated@@226 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@514) $generated@@517))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@141 $generated@@514 ($generated@@396 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@309 $generated@@159 $generated@@159)) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@67)) (= ($generated@@141 $generated@@518 ($generated@@404 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@518) $generated@@521))) (and ($generated@@226 ($generated@@84 ($generated@@379 $generated@@518) $generated@@521) $generated@@520) ($generated@@226 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@518) $generated@@521))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@141 $generated@@518 ($generated@@404 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) (= (type $generated@@525) $generated@@159)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@225 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@225 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) (= (type $generated@@527) $generated@@159)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@225 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@225 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@159) (= (type $generated@@529) $generated@@67)) (= (type $generated@@530) $generated@@67)) ($generated@@226 $generated@@528 ($generated@@396 $generated@@529 $generated@@530))) (and (= ($generated@@274 ($generated@@368 ($generated@@291 $generated@@159 $generated@@159) $generated@@528)) $generated@@528) ($generated@@141 ($generated@@368 ($generated@@291 $generated@@159 $generated@@159) $generated@@528) ($generated@@396 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@226 $generated@@528 ($generated@@396 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@159) (= (type $generated@@532) $generated@@67)) (= (type $generated@@533) $generated@@67)) ($generated@@226 $generated@@531 ($generated@@404 $generated@@532 $generated@@533))) (and (= ($generated@@274 ($generated@@368 ($generated@@309 $generated@@159 $generated@@159) $generated@@531)) $generated@@531) ($generated@@141 ($generated@@368 ($generated@@309 $generated@@159 $generated@@159) $generated@@531) ($generated@@404 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@226 $generated@@531 ($generated@@404 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@159)) ($generated@@226 $generated@@536 ($generated@@149 $generated@@534 $generated@@535))) (and (= ($generated@@274 ($generated@@368 $generated@@150 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@368 $generated@@150 $generated@@536) ($generated@@149 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@226 $generated@@536 ($generated@@149 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@84 ($generated@@412 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@84 ($generated@@412 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@67) (= (type $generated@@540) $generated@@67)) (and (= ($generated@@75 ($generated@@149 $generated@@539 $generated@@540)) $generated@@62) (= ($generated@@285 ($generated@@149 $generated@@539 $generated@@540)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@150) (= ($generated@@522 ($generated@@274 $generated@@541)) ($generated@@523 $generated@@541)))
 :pattern ( ($generated@@522 ($generated@@274 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@159) ($generated@@226 $generated@@542 ($generated@@78 0))) (and (= ($generated@@274 ($generated@@368 $generated@@2 $generated@@542)) $generated@@542) ($generated@@141 ($generated@@368 ($generated@@79 $generated@@159 $generated@@4) $generated@@542) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@542 ($generated@@78 0)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@159) (= (type $generated@@544) $generated@@67)) ($generated@@226 $generated@@543 ($generated@@235 $generated@@544))) (and (= ($generated@@274 ($generated@@368 ($generated@@79 $generated@@159 $generated@@4) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@368 ($generated@@79 $generated@@159 $generated@@4) $generated@@543) ($generated@@235 $generated@@544))))
 :pattern ( ($generated@@226 $generated@@543 ($generated@@235 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@159) (= (type $generated@@546) $generated@@67)) ($generated@@226 $generated@@545 ($generated@@240 $generated@@546))) (and (= ($generated@@274 ($generated@@368 ($generated@@79 $generated@@159 $generated@@4) $generated@@545)) $generated@@545) ($generated@@141 ($generated@@368 ($generated@@79 $generated@@159 $generated@@4) $generated@@545) ($generated@@240 $generated@@546))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@240 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@159) (= (type $generated@@548) $generated@@67)) ($generated@@226 $generated@@547 ($generated@@164 $generated@@548))) (and (= ($generated@@274 ($generated@@368 ($generated@@79 $generated@@159 $generated@@2) $generated@@547)) $generated@@547) ($generated@@141 ($generated@@368 ($generated@@79 $generated@@159 $generated@@2) $generated@@547) ($generated@@164 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@547 ($generated@@164 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@159) (= (type $generated@@550) $generated@@67)) ($generated@@226 $generated@@549 ($generated@@478 $generated@@550))) (and (= ($generated@@274 ($generated@@368 ($generated@@266 $generated@@159) $generated@@549)) $generated@@549) ($generated@@141 ($generated@@368 ($generated@@266 $generated@@159) $generated@@549) ($generated@@478 $generated@@550))))
 :pattern ( ($generated@@226 $generated@@549 ($generated@@478 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@67) (= (type $generated@@552) $generated@@159)) ($generated@@226 $generated@@552 ($generated@@135 $generated@@551))) (and (= ($generated@@274 ($generated@@368 $generated@@80 $generated@@552)) $generated@@552) ($generated@@141 ($generated@@368 $generated@@80 $generated@@552) ($generated@@135 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@135 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@67) (= (type $generated@@554) $generated@@159)) ($generated@@226 $generated@@554 ($generated@@143 $generated@@553))) (and (= ($generated@@274 ($generated@@368 $generated@@80 $generated@@554)) $generated@@554) ($generated@@141 ($generated@@368 $generated@@80 $generated@@554) ($generated@@143 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@143 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@556) $generated@@67)) (= (type $generated@@557) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@555 ($generated@@164 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@555 $generated@@558)))) ($generated@@252 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@84 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@77 $generated@@555 ($generated@@164 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 Int) ) (! (let (($generated@@563 ($generated@@267 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@266 $generated@@563)) (= (type $generated@@561) ($generated@@266 $generated@@563))) (= ($generated@@559 $generated@@560 $generated@@561 $generated@@562) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 $generated@@562)) (= ($generated@@479 $generated@@560 $generated@@564) ($generated@@479 $generated@@561 $generated@@564)))
 :pattern ( ($generated@@479 $generated@@560 $generated@@564))
 :pattern ( ($generated@@479 $generated@@561 $generated@@564))
)))))
 :pattern ( ($generated@@559 $generated@@560 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@150) (= (type $generated@@566) $generated@@67)) (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@251 $generated@@567) (and ($generated@@148 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@67) ($generated@@77 $generated@@565 ($generated@@149 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@77 $generated@@565 ($generated@@149 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@252 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@252 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@150) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@251 $generated@@571) (and ($generated@@148 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@67) ($generated@@77 $generated@@569 ($generated@@149 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@77 $generated@@569 ($generated@@149 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@252 ($generated@@158 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@252 ($generated@@158 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@159) (= (type $generated@@574) $generated@@159)) (= ($generated@@225 ($generated@@247 $generated@@573) ($generated@@247 $generated@@574)) ($generated@@247 ($generated@@225 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@225 ($generated@@247 $generated@@573) ($generated@@247 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@245 $generated@@575))) ($generated@@247 ($generated@@274 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@245 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@274 ($generated@@247 $generated@@576)) ($generated@@247 ($generated@@274 $generated@@576)))
 :pattern ( ($generated@@274 ($generated@@247 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@267 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@266 $generated@@578)) (= ($generated@@265 $generated@@577) 0)) (= $generated@@577 ($generated@@264 $generated@@578))))
 :pattern ( ($generated@@265 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@79 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@279 ($generated@@85 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@279 $generated@@579) ($generated ($generated@@84 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@279 ($generated@@85 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@2)) ($generated@@77 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@3)) ($generated@@77 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@4)) ($generated@@77 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@590) $generated@@436)) ($generated@@77 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@77 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@592) $generated@@159)) ($generated@@77 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@77 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@266 $generated@@159)) (= (type $generated@@594) $generated@@67)) (= ($generated@@141 $generated@@593 ($generated@@478 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@265 $generated@@593))) ($generated@@226 ($generated@@479 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@479 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@141 $generated@@593 ($generated@@478 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@266 $generated@@159)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@265 $generated@@597))) (< ($generated@@523 ($generated@@368 $generated@@150 ($generated@@479 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@523 ($generated@@368 $generated@@150 ($generated@@479 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@291 $generated@@159 $generated@@159)) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) ($generated@@141 $generated@@599 ($generated@@396 $generated@@600 $generated@@601))) (and (and ($generated@@141 ($generated@@289 $generated@@599) ($generated@@235 $generated@@600)) ($generated@@141 ($generated@@336 $generated@@599) ($generated@@235 $generated@@601))) ($generated@@141 ($generated@@367 $generated@@599) ($generated@@235 ($generated@@149 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@141 $generated@@599 ($generated@@396 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@309 $generated@@159 $generated@@159)) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) $generated@@67)) ($generated@@141 $generated@@602 ($generated@@404 $generated@@603 $generated@@604))) (and (and ($generated@@141 ($generated@@307 $generated@@602) ($generated@@240 $generated@@603)) ($generated@@141 ($generated@@347 $generated@@602) ($generated@@240 $generated@@604))) ($generated@@141 ($generated@@378 $generated@@602) ($generated@@240 ($generated@@149 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@141 $generated@@602 ($generated@@404 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@141 $generated@@605 $generated@@46))
 :pattern ( ($generated@@141 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@141 $generated@@606 $generated@@47))
 :pattern ( ($generated@@141 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@141 $generated@@607 $generated@@44))
 :pattern ( ($generated@@141 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@436) ($generated@@141 $generated@@608 $generated@@45))
 :pattern ( ($generated@@141 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@159) ($generated@@141 $generated@@609 $generated@@48))
 :pattern ( ($generated@@141 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () Int)
(assert  (and (and (and (and (and (= (type $generated@@610) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@612) ($generated@@266 $generated@@159))) (= (type $generated@@613) ($generated@@266 $generated@@159))) (= (type $generated@@615) $generated@@80)) (= (type $generated@@616) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@618  (=> (and (= $generated@@610 ($generated@@170 $generated@@136 $generated@@611 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@265 $generated@@612) ($generated@@265 $generated@@613)) ($generated@@559 $generated@@612 $generated@@613 ($generated@@265 $generated@@612))))))
(let (($generated@@619  (=> (and (and ($generated@@251 $generated@@611) ($generated@@614 $generated@@611)) (and (not (= $generated@@615 $generated@@136)) (and ($generated@@141 $generated@@615 ($generated@@143 $generated@@616)) ($generated@@77 $generated@@615 ($generated@@143 $generated@@616) $generated@@611)))) (=> (and (and (and ($generated@@141 $generated@@612 ($generated@@478 $generated@@46)) ($generated@@77 $generated@@612 ($generated@@478 $generated@@46) $generated@@611)) (and ($generated@@141 $generated@@613 ($generated@@478 $generated@@46)) ($generated@@77 $generated@@613 ($generated@@478 $generated@@46) $generated@@611))) (and (and (= 0 $generated@@617) (<= ($generated@@265 $generated@@612) ($generated@@265 $generated@@613))) (and (forall (($generated@@620 Int) ) (!  (=> true (=> (and (<= ($generated@@245 0) $generated@@620) (< $generated@@620 ($generated@@265 $generated@@612))) (= ($generated ($generated@@368 $generated@@2 ($generated@@479 $generated@@612 $generated@@620))) ($generated ($generated@@368 $generated@@2 ($generated@@479 $generated@@613 $generated@@620))))))
 :pattern ( ($generated@@368 $generated@@2 ($generated@@479 $generated@@613 $generated@@620)))
 :pattern ( ($generated@@368 $generated@@2 ($generated@@479 $generated@@612 $generated@@620)))
)) (= (ControlFlow 0 3) 2)))) $generated@@618))))
$generated@@619)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@355 (T@U T@U) Bool)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (forall (($generated@@137 T@U) ) (! (= (type ($generated@@135 $generated@@137)) $generated@@67)
 :pattern ( ($generated@@135 $generated@@137))
)) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@67) (= (type $generated@@139) $generated@@80)) (= (type $generated@@140) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140)  (or (= $generated@@139 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@78 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@78 0)))
)))
(assert (forall (($generated@@144 T@U) ) (! (= (type ($generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@80)) (= (type $generated@@147) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147) ($generated@@77 $generated@@146 ($generated@@135 $generated@@145) $generated@@147)))
 :pattern ( ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147))
)))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@67)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@150)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@159)) (= (type $generated@@232) $generated@@159)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@150) (= (type $generated@@234) $generated@@150)) (= ($generated@@156 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@156 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@159) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@159) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@67) (= (type $generated@@252) $generated@@67)) (= (type $generated@@253) $generated@@159)) (= (type $generated@@254) $generated@@159)) (= (type $generated@@255) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@249 $generated@@255)) (= ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@150) (= ($generated@@148 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@150) ($generated@@148 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@159) (= (type $generated@@261) $generated@@159)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@148 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@67) (= (type $generated@@271) $generated@@80)) (= ($generated@@141 $generated@@271 ($generated@@143 $generated@@270))  (and ($generated@@141 $generated@@271 ($generated@@135 $generated@@270)) (not (= $generated@@271 $generated@@136)))))
 :pattern ( ($generated@@141 $generated@@271 ($generated@@143 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@159)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@67) (= (type $generated@@276) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@77 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@79 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@82 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@79 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@84 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@72)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@67) (and (= ($generated@@75 ($generated@@135 $generated@@285)) $generated@@63) (= ($generated@@283 ($generated@@135 $generated@@285)) $generated@@66)))
 :pattern ( ($generated@@135 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@67) (and (= ($generated@@75 ($generated@@143 $generated@@286)) $generated@@64) (= ($generated@@283 ($generated@@143 $generated@@286)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@79 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@79 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@82 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@79 $generated@@324 $generated@@2)) (= ($generated@@165 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@84 $generated@@323 $generated@@325))) (<= ($generated ($generated@@84 $generated@@323 $generated@@325)) ($generated@@277 $generated@@323))))
 :pattern ( ($generated@@84 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@165 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@67)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@67) (= (type $generated@@329) $generated@@80)) (= ($generated@@141 $generated@@329 ($generated@@135 $generated@@328))  (or (= $generated@@329 $generated@@136) (= ($generated@@326 $generated@@329) ($generated@@135 $generated@@328)))))
 :pattern ( ($generated@@141 $generated@@329 ($generated@@135 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@79 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@79 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@353) $generated@@67)) (= ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@352 $generated@@354)))) ($generated@@226 $generated@@354 $generated@@353))
 :pattern ( ($generated@@84 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@82 (type $generated@@356))))
 (=> (and (= (type $generated@@356) ($generated@@79 $generated@@358 $generated@@2)) (= (type $generated@@357) ($generated@@79 $generated@@358 $generated@@2))) (= ($generated@@355 $generated@@356 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (<= ($generated ($generated@@84 $generated@@356 $generated@@359)) ($generated ($generated@@84 $generated@@357 $generated@@359))))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
 :pattern ( ($generated@@84 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@360 ($generated@@235 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@159) ($generated@@0 ($generated@@84 $generated@@360 $generated@@363))) ($generated@@250 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@84 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@360 ($generated@@235 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@365) $generated@@67)) (= (type $generated@@366) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@364 ($generated@@240 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@159) ($generated@@0 ($generated@@84 $generated@@364 $generated@@367))) ($generated@@250 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@84 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@77 $generated@@364 ($generated@@240 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@84 ($generated@@278 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@84 ($generated@@278 $generated@@369) $generated@@368)))
)))
(assert  (and (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@370 $generated@@373)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@370 $generated@@373))
)) (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@371 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@371 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@291 (type $generated@@376))))
(let (($generated@@378 ($generated@@290 (type $generated@@376))))
(= (type ($generated@@372 $generated@@376)) ($generated@@79 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@372 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@380) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@379) ($generated@@157 ($generated@@371 $generated@@150 $generated@@380)))) (= ($generated@@84 ($generated@@372 $generated@@379) ($generated@@157 ($generated@@371 $generated@@150 $generated@@380))) ($generated@@158 ($generated@@371 $generated@@150 $generated@@380))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@309 (type $generated@@384))))
(let (($generated@@386 ($generated@@308 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@388) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@387) ($generated@@157 ($generated@@371 $generated@@150 $generated@@388)))) (= ($generated@@84 ($generated@@382 $generated@@387) ($generated@@157 ($generated@@371 $generated@@150 $generated@@388))) ($generated@@158 ($generated@@371 $generated@@150 $generated@@388))))))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@290 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@289 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@84 ($generated@@334 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@84 ($generated@@372 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@308 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@307 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@84 ($generated@@345 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@84 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@67)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@402) $generated@@406))) (and ($generated@@250 ($generated@@84 ($generated@@372 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@250 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@402) $generated@@406))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@77 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@410) $generated@@414))) (and ($generated@@250 ($generated@@84 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@250 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@79 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@309 (type $generated@@417))))
(let (($generated@@419 ($generated@@308 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@307 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@306 $generated@@419 $generated@@418)) (= ($generated@@305 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@305 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@309 (type $generated@@420))))
(let (($generated@@422 ($generated@@308 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@307 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@306 $generated@@422 $generated@@421)) (= ($generated@@345 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@345 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@309 (type $generated@@423))))
(let (($generated@@425 ($generated@@308 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@307 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@306 $generated@@425 $generated@@424)) (= ($generated@@381 $generated@@423) ($generated@@415 $generated@@159))))))
 :pattern ( ($generated@@381 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@291 (type $generated@@426))))
(let (($generated@@428 ($generated@@290 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@289 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@288 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@159) (= (type $generated@@430) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@426) ($generated@@272 ($generated@@225 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@370 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@309 (type $generated@@431))))
(let (($generated@@433 ($generated@@308 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@307 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@306 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@159) (= (type $generated@@435) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@381 $generated@@431) ($generated@@272 ($generated@@225 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@381 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@159) ($generated@@226 $generated@@436 $generated@@46)) (and (= ($generated@@272 ($generated@@371 $generated@@2 $generated@@436)) $generated@@436) ($generated@@141 ($generated@@371 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@159) ($generated@@226 $generated@@437 $generated@@47)) (and (= ($generated@@272 ($generated@@371 $generated@@3 $generated@@437)) $generated@@437) ($generated@@141 ($generated@@371 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@159) ($generated@@226 $generated@@438 $generated@@44)) (and (= ($generated@@272 ($generated@@371 $generated@@4 $generated@@438)) $generated@@438) ($generated@@141 ($generated@@371 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@159) ($generated@@226 $generated@@440 $generated@@45)) (and (= ($generated@@272 ($generated@@371 $generated@@439 $generated@@440)) $generated@@440) ($generated@@141 ($generated@@371 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@67) (= ($generated@@226 ($generated@@272 $generated@@441) $generated@@442) ($generated@@141 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@226 ($generated@@272 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@82 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@79 $generated@@444 $generated@@2)) (<= 0 ($generated@@277 $generated@@443))))
 :pattern ( ($generated@@277 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@265 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@264 $generated@@446)) (<= 0 ($generated@@263 $generated@@445))))
 :pattern ( ($generated@@263 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@447 ($generated@@399 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@399 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@399 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@75 ($generated@@399 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@407 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@407 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@407 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@75 ($generated@@407 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@159) (= (type $generated@@468) $generated@@159)) (= ($generated@@256 ($generated@@225 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@469 ($generated@@149 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@149 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@149 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@149 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@159) (= (type $generated@@478) $generated@@159)) (= ($generated@@157 ($generated@@225 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@225 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@159) (= (type $generated@@480) $generated@@159)) (= ($generated@@158 ($generated@@225 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@225 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@265 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@264 $generated@@159)) (= (type $generated@@488) $generated@@67)) (= (type $generated@@489) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@263 $generated@@487))) ($generated@@250 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@77 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@78 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@78 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@493 ($generated@@235 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@240 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@240 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@164 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@164 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@164 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@135 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@135 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@143 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@143 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
(= ($generated@@371 $generated@@516 ($generated@@272 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@272 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@141 $generated@@517 ($generated@@399 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@517) $generated@@520))) (and ($generated@@226 ($generated@@84 ($generated@@372 $generated@@517) $generated@@520) $generated@@519) ($generated@@226 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@141 $generated@@517 ($generated@@399 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@522) $generated@@67)) (= (type $generated@@523) $generated@@67)) (= ($generated@@141 $generated@@521 ($generated@@407 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@521) $generated@@524))) (and ($generated@@226 ($generated@@84 ($generated@@382 $generated@@521) $generated@@524) $generated@@523) ($generated@@226 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@521) $generated@@524))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@141 $generated@@521 ($generated@@407 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@159) (= (type $generated@@528) $generated@@159)) (< ($generated@@525 $generated@@527) ($generated@@526 ($generated@@225 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@225 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@159) (= (type $generated@@530) $generated@@159)) (< ($generated@@525 $generated@@530) ($generated@@526 ($generated@@225 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@225 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@159) (= (type $generated@@532) $generated@@67)) (= (type $generated@@533) $generated@@67)) ($generated@@226 $generated@@531 ($generated@@399 $generated@@532 $generated@@533))) (and (= ($generated@@272 ($generated@@371 ($generated@@289 $generated@@159 $generated@@159) $generated@@531)) $generated@@531) ($generated@@141 ($generated@@371 ($generated@@289 $generated@@159 $generated@@159) $generated@@531) ($generated@@399 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@226 $generated@@531 ($generated@@399 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@159) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@67)) ($generated@@226 $generated@@534 ($generated@@407 $generated@@535 $generated@@536))) (and (= ($generated@@272 ($generated@@371 ($generated@@307 $generated@@159 $generated@@159) $generated@@534)) $generated@@534) ($generated@@141 ($generated@@371 ($generated@@307 $generated@@159 $generated@@159) $generated@@534) ($generated@@407 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@226 $generated@@534 ($generated@@407 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (= (type $generated@@539) $generated@@159)) ($generated@@226 $generated@@539 ($generated@@149 $generated@@537 $generated@@538))) (and (= ($generated@@272 ($generated@@371 $generated@@150 $generated@@539)) $generated@@539) ($generated@@141 ($generated@@371 $generated@@150 $generated@@539) ($generated@@149 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@226 $generated@@539 ($generated@@149 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@84 ($generated@@415 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@84 ($generated@@415 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@67) (= (type $generated@@543) $generated@@67)) (and (= ($generated@@75 ($generated@@149 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@283 ($generated@@149 $generated@@542 $generated@@543)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@150) (= ($generated@@525 ($generated@@272 $generated@@544)) ($generated@@526 $generated@@544)))
 :pattern ( ($generated@@525 ($generated@@272 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@159) ($generated@@226 $generated@@545 ($generated@@78 0))) (and (= ($generated@@272 ($generated@@371 $generated@@2 $generated@@545)) $generated@@545) ($generated@@141 ($generated@@371 ($generated@@79 $generated@@159 $generated@@4) $generated@@545) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@78 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@159) (= (type $generated@@547) $generated@@67)) ($generated@@226 $generated@@546 ($generated@@235 $generated@@547))) (and (= ($generated@@272 ($generated@@371 ($generated@@79 $generated@@159 $generated@@4) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@371 ($generated@@79 $generated@@159 $generated@@4) $generated@@546) ($generated@@235 $generated@@547))))
 :pattern ( ($generated@@226 $generated@@546 ($generated@@235 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@159) (= (type $generated@@549) $generated@@67)) ($generated@@226 $generated@@548 ($generated@@240 $generated@@549))) (and (= ($generated@@272 ($generated@@371 ($generated@@79 $generated@@159 $generated@@4) $generated@@548)) $generated@@548) ($generated@@141 ($generated@@371 ($generated@@79 $generated@@159 $generated@@4) $generated@@548) ($generated@@240 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@548 ($generated@@240 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@159) (= (type $generated@@551) $generated@@67)) ($generated@@226 $generated@@550 ($generated@@164 $generated@@551))) (and (= ($generated@@272 ($generated@@371 ($generated@@79 $generated@@159 $generated@@2) $generated@@550)) $generated@@550) ($generated@@141 ($generated@@371 ($generated@@79 $generated@@159 $generated@@2) $generated@@550) ($generated@@164 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@550 ($generated@@164 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@159) (= (type $generated@@553) $generated@@67)) ($generated@@226 $generated@@552 ($generated@@481 $generated@@553))) (and (= ($generated@@272 ($generated@@371 ($generated@@264 $generated@@159) $generated@@552)) $generated@@552) ($generated@@141 ($generated@@371 ($generated@@264 $generated@@159) $generated@@552) ($generated@@481 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@481 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@159)) ($generated@@226 $generated@@555 ($generated@@135 $generated@@554))) (and (= ($generated@@272 ($generated@@371 $generated@@80 $generated@@555)) $generated@@555) ($generated@@141 ($generated@@371 $generated@@80 $generated@@555) ($generated@@135 $generated@@554))))
 :pattern ( ($generated@@226 $generated@@555 ($generated@@135 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@159)) ($generated@@226 $generated@@557 ($generated@@143 $generated@@556))) (and (= ($generated@@272 ($generated@@371 $generated@@80 $generated@@557)) $generated@@557) ($generated@@141 ($generated@@371 $generated@@80 $generated@@557) ($generated@@143 $generated@@556))))
 :pattern ( ($generated@@226 $generated@@557 ($generated@@143 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@558 $generated@@561)))) ($generated@@250 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@84 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@150) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@564) (and ($generated@@148 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@150) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@568) (and ($generated@@148 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@67) ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@159) (= (type $generated@@571) $generated@@159)) (= ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)) ($generated@@245 ($generated@@225 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@272 ($generated@@245 $generated@@572)) ($generated@@245 ($generated@@272 $generated@@572)))
 :pattern ( ($generated@@272 ($generated@@245 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@265 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@264 $generated@@574)) (= ($generated@@263 $generated@@573) 0)) (= $generated@@573 ($generated@@262 $generated@@574))))
 :pattern ( ($generated@@263 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@277 $generated@@575) ($generated ($generated@@84 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@2)) ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@3)) ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@4)) ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@439)) ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@159)) ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@264 $generated@@159)) (= (type $generated@@590) $generated@@67)) (= ($generated@@141 $generated@@589 ($generated@@481 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@263 $generated@@589))) ($generated@@226 ($generated@@482 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@482 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@481 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@264 $generated@@159)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@263 $generated@@593))) (< ($generated@@526 ($generated@@371 $generated@@150 ($generated@@482 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@526 ($generated@@371 $generated@@150 ($generated@@482 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@141 $generated@@595 ($generated@@399 $generated@@596 $generated@@597))) (and (and ($generated@@141 ($generated@@287 $generated@@595) ($generated@@235 $generated@@596)) ($generated@@141 ($generated@@334 $generated@@595) ($generated@@235 $generated@@597))) ($generated@@141 ($generated@@370 $generated@@595) ($generated@@235 ($generated@@149 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@141 $generated@@595 ($generated@@399 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@141 $generated@@598 ($generated@@407 $generated@@599 $generated@@600))) (and (and ($generated@@141 ($generated@@305 $generated@@598) ($generated@@240 $generated@@599)) ($generated@@141 ($generated@@345 $generated@@598) ($generated@@240 $generated@@600))) ($generated@@141 ($generated@@381 $generated@@598) ($generated@@240 ($generated@@149 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@141 $generated@@598 ($generated@@407 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@141 $generated@@601 $generated@@46))
 :pattern ( ($generated@@141 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@141 $generated@@602 $generated@@47))
 :pattern ( ($generated@@141 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@141 $generated@@603 $generated@@44))
 :pattern ( ($generated@@141 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@439) ($generated@@141 $generated@@604 $generated@@45))
 :pattern ( ($generated@@141 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@159) ($generated@@141 $generated@@605 $generated@@48))
 :pattern ( ($generated@@141 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@606) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@608) ($generated@@79 $generated@@159 $generated@@2))) (= (type $generated@@609) ($generated@@79 $generated@@159 $generated@@2))) (= (type $generated@@611) $generated@@80)) (= (type $generated@@612) $generated@@67)) (= (type $generated@@613) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@615  (=> (and (= $generated@@606 ($generated@@170 $generated@@136 $generated@@607 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@355 $generated@@608 $generated@@609))))
(let (($generated@@616  (=> (and ($generated@@249 $generated@@607) ($generated@@610 $generated@@607)) (=> (and (and (not (= $generated@@611 $generated@@136)) (and ($generated@@141 $generated@@611 ($generated@@143 $generated@@612)) ($generated@@77 $generated@@611 ($generated@@143 $generated@@612) $generated@@607))) (and ($generated@@141 $generated@@608 ($generated@@164 $generated@@613)) ($generated@@77 $generated@@608 ($generated@@164 $generated@@613) $generated@@607))) (=> (and (and (and ($generated@@141 $generated@@609 ($generated@@164 $generated@@613)) ($generated@@77 $generated@@609 ($generated@@164 $generated@@613) $generated@@607)) (= 0 $generated@@614)) (and (forall (($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@159) ($generated@@226 $generated@@617 $generated@@613)) (> ($generated ($generated@@84 $generated@@608 $generated@@617)) 0)) (> ($generated ($generated@@84 $generated@@609 $generated@@617)) 0))
 :pattern ( ($generated@@84 $generated@@609 $generated@@617))
 :pattern ( ($generated@@84 $generated@@608 $generated@@617))
)) (= (ControlFlow 0 3) 2))) $generated@@615)))))
$generated@@616)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@355 (T@U T@U) Bool)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (forall (($generated@@137 T@U) ) (! (= (type ($generated@@135 $generated@@137)) $generated@@67)
 :pattern ( ($generated@@135 $generated@@137))
)) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@67) (= (type $generated@@139) $generated@@80)) (= (type $generated@@140) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140)  (or (= $generated@@139 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@139 ($generated@@135 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@78 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@78 0)))
)))
(assert (forall (($generated@@144 T@U) ) (! (= (type ($generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@80)) (= (type $generated@@147) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147) ($generated@@77 $generated@@146 ($generated@@135 $generated@@145) $generated@@147)))
 :pattern ( ($generated@@77 $generated@@146 ($generated@@143 $generated@@145) $generated@@147))
)))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@141 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@67)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@150)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@159)) (= (type $generated@@232) $generated@@159)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@150) (= (type $generated@@234) $generated@@150)) (= ($generated@@156 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@156 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@159) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@159) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@141 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@67) (= (type $generated@@252) $generated@@67)) (= (type $generated@@253) $generated@@159)) (= (type $generated@@254) $generated@@159)) (= (type $generated@@255) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@249 $generated@@255)) (= ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@149 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@150) (= ($generated@@148 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@150) ($generated@@148 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@159) (= (type $generated@@261) $generated@@159)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@148 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@67) (= (type $generated@@271) $generated@@80)) (= ($generated@@141 $generated@@271 ($generated@@143 $generated@@270))  (and ($generated@@141 $generated@@271 ($generated@@135 $generated@@270)) (not (= $generated@@271 $generated@@136)))))
 :pattern ( ($generated@@141 $generated@@271 ($generated@@143 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@159)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@67) (= (type $generated@@276) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@77 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@79 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@82 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@79 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@84 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@72)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@67) (and (= ($generated@@75 ($generated@@135 $generated@@285)) $generated@@63) (= ($generated@@283 ($generated@@135 $generated@@285)) $generated@@66)))
 :pattern ( ($generated@@135 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@67) (and (= ($generated@@75 ($generated@@143 $generated@@286)) $generated@@64) (= ($generated@@283 ($generated@@143 $generated@@286)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@79 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@84 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@79 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@84 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@82 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@79 $generated@@324 $generated@@2)) (= ($generated@@165 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@84 $generated@@323 $generated@@325))) (<= ($generated ($generated@@84 $generated@@323 $generated@@325)) ($generated@@277 $generated@@323))))
 :pattern ( ($generated@@84 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@165 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@67)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@67) (= (type $generated@@329) $generated@@80)) (= ($generated@@141 $generated@@329 ($generated@@135 $generated@@328))  (or (= $generated@@329 $generated@@136) (= ($generated@@326 $generated@@329) ($generated@@135 $generated@@328)))))
 :pattern ( ($generated@@141 $generated@@329 ($generated@@135 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@79 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@79 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@353) $generated@@67)) (= ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@352 $generated@@354)))) ($generated@@226 $generated@@354 $generated@@353))
 :pattern ( ($generated@@84 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@164 $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@82 (type $generated@@356))))
 (=> (and (= (type $generated@@356) ($generated@@79 $generated@@358 $generated@@2)) (= (type $generated@@357) ($generated@@79 $generated@@358 $generated@@2))) (= ($generated@@355 $generated@@356 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (<= ($generated ($generated@@84 $generated@@356 $generated@@359)) ($generated ($generated@@84 $generated@@357 $generated@@359))))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
 :pattern ( ($generated@@84 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@360 ($generated@@235 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@159) ($generated@@0 ($generated@@84 $generated@@360 $generated@@363))) ($generated@@250 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@84 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@360 ($generated@@235 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@79 $generated@@159 $generated@@4)) (= (type $generated@@365) $generated@@67)) (= (type $generated@@366) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@364 ($generated@@240 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@159) ($generated@@0 ($generated@@84 $generated@@364 $generated@@367))) ($generated@@250 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@84 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@77 $generated@@364 ($generated@@240 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@84 ($generated@@278 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@84 ($generated@@278 $generated@@369) $generated@@368)))
)))
(assert  (and (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@370 $generated@@373)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@370 $generated@@373))
)) (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@371 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@371 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@291 (type $generated@@376))))
(let (($generated@@378 ($generated@@290 (type $generated@@376))))
(= (type ($generated@@372 $generated@@376)) ($generated@@79 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@372 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@380) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@379) ($generated@@157 ($generated@@371 $generated@@150 $generated@@380)))) (= ($generated@@84 ($generated@@372 $generated@@379) ($generated@@157 ($generated@@371 $generated@@150 $generated@@380))) ($generated@@158 ($generated@@371 $generated@@150 $generated@@380))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@159 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@309 (type $generated@@384))))
(let (($generated@@386 ($generated@@308 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@388) $generated@@159)) (= ($generated@@0 ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@387) ($generated@@157 ($generated@@371 $generated@@150 $generated@@388)))) (= ($generated@@84 ($generated@@382 $generated@@387) ($generated@@157 ($generated@@371 $generated@@150 $generated@@388))) ($generated@@158 ($generated@@371 $generated@@150 $generated@@388))))))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@290 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@289 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@84 ($generated@@334 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@84 ($generated@@287 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@84 ($generated@@372 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@308 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@307 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@84 ($generated@@345 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@84 ($generated@@305 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@84 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@67)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@402) $generated@@406))) (and ($generated@@250 ($generated@@84 ($generated@@372 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@250 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@402) $generated@@406))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@77 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@410) $generated@@414))) (and ($generated@@250 ($generated@@84 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@250 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@79 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@309 (type $generated@@417))))
(let (($generated@@419 ($generated@@308 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@307 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@306 $generated@@419 $generated@@418)) (= ($generated@@305 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@305 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@309 (type $generated@@420))))
(let (($generated@@422 ($generated@@308 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@307 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@306 $generated@@422 $generated@@421)) (= ($generated@@345 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@345 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@309 (type $generated@@423))))
(let (($generated@@425 ($generated@@308 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@307 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@306 $generated@@425 $generated@@424)) (= ($generated@@381 $generated@@423) ($generated@@415 $generated@@159))))))
 :pattern ( ($generated@@381 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@291 (type $generated@@426))))
(let (($generated@@428 ($generated@@290 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@289 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@288 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@159) (= (type $generated@@430) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@426) ($generated@@272 ($generated@@225 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@370 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@309 (type $generated@@431))))
(let (($generated@@433 ($generated@@308 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@307 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@306 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@159) (= (type $generated@@435) $generated@@159)) ($generated@@0 ($generated@@84 ($generated@@381 $generated@@431) ($generated@@272 ($generated@@225 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@381 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@159) ($generated@@226 $generated@@436 $generated@@46)) (and (= ($generated@@272 ($generated@@371 $generated@@2 $generated@@436)) $generated@@436) ($generated@@141 ($generated@@371 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@159) ($generated@@226 $generated@@437 $generated@@47)) (and (= ($generated@@272 ($generated@@371 $generated@@3 $generated@@437)) $generated@@437) ($generated@@141 ($generated@@371 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@159) ($generated@@226 $generated@@438 $generated@@44)) (and (= ($generated@@272 ($generated@@371 $generated@@4 $generated@@438)) $generated@@438) ($generated@@141 ($generated@@371 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@159) ($generated@@226 $generated@@440 $generated@@45)) (and (= ($generated@@272 ($generated@@371 $generated@@439 $generated@@440)) $generated@@440) ($generated@@141 ($generated@@371 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@67) (= ($generated@@226 ($generated@@272 $generated@@441) $generated@@442) ($generated@@141 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@226 ($generated@@272 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@82 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@79 $generated@@444 $generated@@2)) (<= 0 ($generated@@277 $generated@@443))))
 :pattern ( ($generated@@277 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@265 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@264 $generated@@446)) (<= 0 ($generated@@263 $generated@@445))))
 :pattern ( ($generated@@263 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@447 ($generated@@399 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@399 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@399 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@75 ($generated@@399 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@407 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@407 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@407 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@75 ($generated@@407 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@159) (= (type $generated@@468) $generated@@159)) (= ($generated@@256 ($generated@@225 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@469 ($generated@@149 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@149 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@149 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@149 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@159) (= (type $generated@@478) $generated@@159)) (= ($generated@@157 ($generated@@225 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@225 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@159) (= (type $generated@@480) $generated@@159)) (= ($generated@@158 ($generated@@225 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@225 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@265 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@264 $generated@@159)) (= (type $generated@@488) $generated@@67)) (= (type $generated@@489) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@263 $generated@@487))) ($generated@@250 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@77 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@78 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@78 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@493 ($generated@@235 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@240 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@240 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@164 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@164 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@164 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@135 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@135 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@143 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@143 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
(= ($generated@@371 $generated@@516 ($generated@@272 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@272 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@141 $generated@@517 ($generated@@399 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@287 $generated@@517) $generated@@520))) (and ($generated@@226 ($generated@@84 ($generated@@372 $generated@@517) $generated@@520) $generated@@519) ($generated@@226 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@287 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@141 $generated@@517 ($generated@@399 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@522) $generated@@67)) (= (type $generated@@523) $generated@@67)) (= ($generated@@141 $generated@@521 ($generated@@407 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) ($generated@@0 ($generated@@84 ($generated@@305 $generated@@521) $generated@@524))) (and ($generated@@226 ($generated@@84 ($generated@@382 $generated@@521) $generated@@524) $generated@@523) ($generated@@226 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@521) $generated@@524))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@141 $generated@@521 ($generated@@407 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@159) (= (type $generated@@528) $generated@@159)) (< ($generated@@525 $generated@@527) ($generated@@526 ($generated@@225 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@225 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@159) (= (type $generated@@530) $generated@@159)) (< ($generated@@525 $generated@@530) ($generated@@526 ($generated@@225 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@225 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@159) (= (type $generated@@532) $generated@@67)) (= (type $generated@@533) $generated@@67)) ($generated@@226 $generated@@531 ($generated@@399 $generated@@532 $generated@@533))) (and (= ($generated@@272 ($generated@@371 ($generated@@289 $generated@@159 $generated@@159) $generated@@531)) $generated@@531) ($generated@@141 ($generated@@371 ($generated@@289 $generated@@159 $generated@@159) $generated@@531) ($generated@@399 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@226 $generated@@531 ($generated@@399 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@159) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@67)) ($generated@@226 $generated@@534 ($generated@@407 $generated@@535 $generated@@536))) (and (= ($generated@@272 ($generated@@371 ($generated@@307 $generated@@159 $generated@@159) $generated@@534)) $generated@@534) ($generated@@141 ($generated@@371 ($generated@@307 $generated@@159 $generated@@159) $generated@@534) ($generated@@407 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@226 $generated@@534 ($generated@@407 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (= (type $generated@@539) $generated@@159)) ($generated@@226 $generated@@539 ($generated@@149 $generated@@537 $generated@@538))) (and (= ($generated@@272 ($generated@@371 $generated@@150 $generated@@539)) $generated@@539) ($generated@@141 ($generated@@371 $generated@@150 $generated@@539) ($generated@@149 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@226 $generated@@539 ($generated@@149 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@84 ($generated@@415 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@84 ($generated@@415 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@67) (= (type $generated@@543) $generated@@67)) (and (= ($generated@@75 ($generated@@149 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@283 ($generated@@149 $generated@@542 $generated@@543)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@150) (= ($generated@@525 ($generated@@272 $generated@@544)) ($generated@@526 $generated@@544)))
 :pattern ( ($generated@@525 ($generated@@272 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@159) ($generated@@226 $generated@@545 ($generated@@78 0))) (and (= ($generated@@272 ($generated@@371 $generated@@2 $generated@@545)) $generated@@545) ($generated@@141 ($generated@@371 ($generated@@79 $generated@@159 $generated@@4) $generated@@545) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@78 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@159) (= (type $generated@@547) $generated@@67)) ($generated@@226 $generated@@546 ($generated@@235 $generated@@547))) (and (= ($generated@@272 ($generated@@371 ($generated@@79 $generated@@159 $generated@@4) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@371 ($generated@@79 $generated@@159 $generated@@4) $generated@@546) ($generated@@235 $generated@@547))))
 :pattern ( ($generated@@226 $generated@@546 ($generated@@235 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@159) (= (type $generated@@549) $generated@@67)) ($generated@@226 $generated@@548 ($generated@@240 $generated@@549))) (and (= ($generated@@272 ($generated@@371 ($generated@@79 $generated@@159 $generated@@4) $generated@@548)) $generated@@548) ($generated@@141 ($generated@@371 ($generated@@79 $generated@@159 $generated@@4) $generated@@548) ($generated@@240 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@548 ($generated@@240 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@159) (= (type $generated@@551) $generated@@67)) ($generated@@226 $generated@@550 ($generated@@164 $generated@@551))) (and (= ($generated@@272 ($generated@@371 ($generated@@79 $generated@@159 $generated@@2) $generated@@550)) $generated@@550) ($generated@@141 ($generated@@371 ($generated@@79 $generated@@159 $generated@@2) $generated@@550) ($generated@@164 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@550 ($generated@@164 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@159) (= (type $generated@@553) $generated@@67)) ($generated@@226 $generated@@552 ($generated@@481 $generated@@553))) (and (= ($generated@@272 ($generated@@371 ($generated@@264 $generated@@159) $generated@@552)) $generated@@552) ($generated@@141 ($generated@@371 ($generated@@264 $generated@@159) $generated@@552) ($generated@@481 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@481 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@159)) ($generated@@226 $generated@@555 ($generated@@135 $generated@@554))) (and (= ($generated@@272 ($generated@@371 $generated@@80 $generated@@555)) $generated@@555) ($generated@@141 ($generated@@371 $generated@@80 $generated@@555) ($generated@@135 $generated@@554))))
 :pattern ( ($generated@@226 $generated@@555 ($generated@@135 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@159)) ($generated@@226 $generated@@557 ($generated@@143 $generated@@556))) (and (= ($generated@@272 ($generated@@371 $generated@@80 $generated@@557)) $generated@@557) ($generated@@141 ($generated@@371 $generated@@80 $generated@@557) ($generated@@143 $generated@@556))))
 :pattern ( ($generated@@226 $generated@@557 ($generated@@143 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@159 $generated@@2)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@159) (< 0 ($generated ($generated@@84 $generated@@558 $generated@@561)))) ($generated@@250 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@84 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@164 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@150) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@564) (and ($generated@@148 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@149 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@250 ($generated@@157 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@150) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@568) (and ($generated@@148 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@67) ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@149 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@250 ($generated@@158 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@159) (= (type $generated@@571) $generated@@159)) (= ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)) ($generated@@245 ($generated@@225 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@272 ($generated@@245 $generated@@572)) ($generated@@245 ($generated@@272 $generated@@572)))
 :pattern ( ($generated@@272 ($generated@@245 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@265 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@264 $generated@@574)) (= ($generated@@263 $generated@@573) 0)) (= $generated@@573 ($generated@@262 $generated@@574))))
 :pattern ( ($generated@@263 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@277 $generated@@575) ($generated ($generated@@84 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@277 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@2)) ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@3)) ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@4)) ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@439)) ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@159)) ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@264 $generated@@159)) (= (type $generated@@590) $generated@@67)) (= ($generated@@141 $generated@@589 ($generated@@481 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@263 $generated@@589))) ($generated@@226 ($generated@@482 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@482 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@481 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@264 $generated@@159)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@263 $generated@@593))) (< ($generated@@526 ($generated@@371 $generated@@150 ($generated@@482 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@526 ($generated@@371 $generated@@150 ($generated@@482 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@289 $generated@@159 $generated@@159)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@141 $generated@@595 ($generated@@399 $generated@@596 $generated@@597))) (and (and ($generated@@141 ($generated@@287 $generated@@595) ($generated@@235 $generated@@596)) ($generated@@141 ($generated@@334 $generated@@595) ($generated@@235 $generated@@597))) ($generated@@141 ($generated@@370 $generated@@595) ($generated@@235 ($generated@@149 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@141 $generated@@595 ($generated@@399 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@307 $generated@@159 $generated@@159)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@141 $generated@@598 ($generated@@407 $generated@@599 $generated@@600))) (and (and ($generated@@141 ($generated@@305 $generated@@598) ($generated@@240 $generated@@599)) ($generated@@141 ($generated@@345 $generated@@598) ($generated@@240 $generated@@600))) ($generated@@141 ($generated@@381 $generated@@598) ($generated@@240 ($generated@@149 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@141 $generated@@598 ($generated@@407 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@141 $generated@@601 $generated@@46))
 :pattern ( ($generated@@141 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@141 $generated@@602 $generated@@47))
 :pattern ( ($generated@@141 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@141 $generated@@603 $generated@@44))
 :pattern ( ($generated@@141 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@439) ($generated@@141 $generated@@604 $generated@@45))
 :pattern ( ($generated@@141 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@159) ($generated@@141 $generated@@605 $generated@@48))
 :pattern ( ($generated@@141 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(assert  (and (and (and (and (and (= (type $generated@@606) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@608) ($generated@@79 $generated@@159 $generated@@2))) (= (type $generated@@609) ($generated@@79 $generated@@159 $generated@@2))) (= (type $generated@@611) $generated@@80)) (= (type $generated@@612) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@614  (=> (and (= $generated@@606 ($generated@@170 $generated@@136 $generated@@607 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@355 $generated@@608 $generated@@609))))
(let (($generated@@615  (=> (and ($generated@@249 $generated@@607) ($generated@@610 $generated@@607)) (=> (and (and (not (= $generated@@611 $generated@@136)) (and ($generated@@141 $generated@@611 ($generated@@143 $generated@@612)) ($generated@@77 $generated@@611 ($generated@@143 $generated@@612) $generated@@607))) (and ($generated@@141 $generated@@608 ($generated@@164 $generated@@46)) ($generated@@77 $generated@@608 ($generated@@164 $generated@@46) $generated@@607))) (=> (and (and (and ($generated@@141 $generated@@609 ($generated@@164 $generated@@46)) ($generated@@77 $generated@@609 ($generated@@164 $generated@@46) $generated@@607)) (= 0 $generated@@613)) (and (forall (($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@2) true) (> ($generated ($generated@@84 $generated@@608 ($generated@@272 $generated@@616))) 0)) (> ($generated ($generated@@84 $generated@@609 ($generated@@272 $generated@@616))) 0))
 :pattern ( ($generated@@84 $generated@@609 ($generated@@272 $generated@@616)))
 :pattern ( ($generated@@84 $generated@@608 ($generated@@272 $generated@@616)))
)) (= (ControlFlow 0 3) 2))) $generated@@614)))))
$generated@@615)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Int)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (Int Int) Int)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (Int) Int)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@U T@U Int) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) Bool)
(declare-fun $generated@@417 (T@U Int T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@427 (T@T T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@U T@U) T@U)
(declare-fun $generated@@489 (T@T) T@U)
(declare-fun $generated@@513 () T@T)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@560 (T@U Int) T@U)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(declare-fun $generated@@601 (T@U) Int)
(declare-fun $generated@@618 (T@U T@U) Bool)
(declare-fun $generated@@623 (T@T) T@U)
(declare-fun $generated@@629 (T@U) T@U)
(declare-fun $generated@@687 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@79 (type $generated@@136))))
(= (type ($generated@@133 $generated@@136 $generated@@137)) ($generated@@76 $generated@@138 $generated@@2)))
 :pattern ( ($generated@@133 $generated@@136 $generated@@137))
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@79 (type $generated@@139))))
(= (type ($generated@@134 $generated@@139 $generated@@140)) ($generated@@76 $generated@@141 $generated@@2)))
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@79 (type $generated@@142))))
(= (type ($generated@@135 $generated@@142 $generated@@143)) ($generated@@76 $generated@@144 $generated@@2)))
 :pattern ( ($generated@@135 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@79 (type $generated@@145))))
 (=> (and (= (type $generated@@145) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@146) ($generated@@76 $generated@@147 $generated@@2))) (and (= (+ (+ ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)) ($generated@@132 ($generated@@133 $generated@@146 $generated@@145))) (* 2 ($generated@@132 ($generated@@134 $generated@@145 $generated@@146)))) ($generated@@132 ($generated@@135 $generated@@145 $generated@@146))) (= ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)) (- ($generated@@132 $generated@@145) ($generated@@132 ($generated@@134 $generated@@145 $generated@@146)))))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@75 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@75 0)))
)))
(assert (forall (($generated@@151 Int) ($generated@@152 Int) ) (!  (or (= ($generated@@150 $generated@@151 $generated@@152) $generated@@151) (= ($generated@@150 $generated@@151 $generated@@152) $generated@@152))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert  (and (= ($generated@@1 $generated@@155) 14) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@64) (= (type $generated@@159) $generated@@64)) (= (type $generated@@160) $generated@@155)) ($generated@@148 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@148 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@64)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@64)) ($generated@@148 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@148 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@77 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@79 (type $generated@@230))))
 (=> (and (= (type $generated@@230) ($generated@@76 $generated@@232 $generated@@2)) (= (type $generated@@231) ($generated@@76 $generated@@232 $generated@@2))) (= ($generated@@134 ($generated@@134 $generated@@230 $generated@@231) $generated@@231) ($generated@@134 $generated@@230 $generated@@231))))
 :pattern ( ($generated@@134 ($generated@@134 $generated@@230 $generated@@231) $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@155)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@164)) (= (type $generated@@240) $generated@@164)) (= ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@154 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@154 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
 (=> (and (= (type $generated@@241) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@242) ($generated@@76 $generated@@244 $generated@@2))) (= ($generated ($generated@@81 ($generated@@135 $generated@@241 $generated@@242) $generated@@243)) (+ ($generated ($generated@@81 $generated@@241 $generated@@243)) ($generated ($generated@@81 $generated@@242 $generated@@243))))))
 :pattern ( ($generated@@81 ($generated@@135 $generated@@241 $generated@@242) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@155) (= (type $generated@@246) $generated@@155)) (= ($generated@@161 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@161 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@64)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@250) $generated@@64)) (= ($generated@@148 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@164) ($generated@@0 ($generated@@81 $generated@@249 $generated@@251))) ($generated@@234 $generated@@251 $generated@@250))
 :pattern ( ($generated@@81 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@148 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@148 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@164) ($generated@@0 ($generated@@81 $generated@@254 $generated@@256))) ($generated@@234 $generated@@256 $generated@@255))
 :pattern ( ($generated@@81 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@148 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 Int) ) (!  (=> (<= 0 $generated@@258) (= ($generated@@257 $generated@@258) $generated@@258))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@64) (= (type $generated@@268) $generated@@64)) (= (type $generated@@269) $generated@@164)) (= (type $generated@@270) $generated@@164)) (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@265 $generated@@271)) (= ($generated@@74 ($generated@@233 $generated@@269 $generated@@270) ($generated@@154 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@74 ($generated@@233 $generated@@269 $generated@@270) ($generated@@154 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@155) (= ($generated@@153 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
 (=> (and (= (type $generated@@275) ($generated@@76 $generated@@278 $generated@@2)) (= (type $generated@@276) ($generated@@76 $generated@@278 $generated@@2))) (= ($generated ($generated@@81 ($generated@@133 $generated@@275 $generated@@276) $generated@@277)) ($generated@@257 (- ($generated ($generated@@81 $generated@@275 $generated@@277)) ($generated ($generated@@81 $generated@@276 $generated@@277)))))))
 :pattern ( ($generated@@81 ($generated@@133 $generated@@275 $generated@@276) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@155) ($generated@@153 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@164) (= (type $generated@@281) $generated@@164)) (= $generated@@279 ($generated@@233 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@153 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 (type $generated@@292)))
(= (type ($generated@@290 $generated@@291 $generated@@292)) ($generated@@76 $generated@@293 $generated@@2)))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@296 $generated@@2)) (= ($generated@@132 ($generated@@290 $generated@@294 $generated@@295)) (+ ($generated@@132 $generated@@294) 1))))
 :pattern ( ($generated@@132 ($generated@@290 $generated@@294 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@164)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@64) (= (type $generated@@301) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@266 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@74 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@266 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@76 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@79 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@76 $generated@@305 $generated@@2)) (and (= (= ($generated@@132 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@132 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@81 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@132 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (! (let (($generated@@310 (type $generated@@309)))
 (=> (and (and (= (type $generated@@307) ($generated@@76 $generated@@310 $generated@@2)) (= (type $generated@@308) ($generated@@76 $generated@@310 $generated@@2))) (<= ($generated ($generated@@81 $generated@@307 $generated@@309)) ($generated ($generated@@81 $generated@@308 $generated@@309)))) (= ($generated ($generated@@81 ($generated@@133 $generated@@307 $generated@@308) $generated@@309)) 0)))
 :pattern ( ($generated@@133 $generated@@307 $generated@@308) ($generated@@81 $generated@@308 $generated@@309) ($generated@@81 $generated@@307 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 18)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@81 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@81 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@79 (type $generated@@348))))
 (=> (and (= (type $generated@@348) ($generated@@76 $generated@@350 $generated@@4)) (= (type $generated@@349) ($generated@@76 $generated@@350 $generated@@4))) (= ($generated@@347 $generated@@348 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (= ($generated@@0 ($generated@@81 $generated@@348 $generated@@351)) ($generated@@0 ($generated@@81 $generated@@349 $generated@@351))))
 :pattern ( ($generated@@81 $generated@@348 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@79 (type $generated@@352))))
 (=> (and (= (type $generated@@352) ($generated@@76 $generated@@354 $generated@@2)) (= (type $generated@@353) ($generated@@76 $generated@@354 $generated@@2))) (= ($generated@@132 ($generated@@135 $generated@@352 $generated@@353)) (+ ($generated@@132 $generated@@352) ($generated@@132 $generated@@353)))))
 :pattern ( ($generated@@132 ($generated@@135 $generated@@352 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@79 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@76 $generated@@356 $generated@@2)) (= ($generated@@170 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@81 $generated@@355 $generated@@357))) (<= ($generated ($generated@@81 $generated@@355 $generated@@357)) ($generated@@132 $generated@@355))))
 :pattern ( ($generated@@81 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@170 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
 (=> (= (type $generated@@358) ($generated@@76 $generated@@360 $generated@@2)) (= ($generated ($generated@@81 ($generated@@290 $generated@@358 $generated@@359) $generated@@359)) (+ ($generated ($generated@@81 $generated@@358 $generated@@359)) 1))))
 :pattern ( ($generated@@290 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 Int) ) (! (= (type ($generated@@361 $generated@@362 $generated@@363 $generated@@364)) ($generated@@76 $generated@@164 $generated@@4))
 :pattern ( ($generated@@361 $generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 Int) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@365) $generated@@64) (= (type $generated@@366) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@368) $generated@@164)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@365 $generated@@366 $generated@@367) $generated@@368))  (and ($generated@@234 $generated@@368 $generated@@365) (> ($generated ($generated@@81 $generated@@366 $generated@@368)) $generated@@367))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@365 $generated@@366 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@370)))
 (=> (and (and (= (type $generated@@369) ($generated@@76 $generated@@372 $generated@@2)) (= (type $generated@@371) $generated@@372)) (< 0 ($generated ($generated@@81 $generated@@369 $generated@@371)))) (< 0 ($generated ($generated@@81 ($generated@@290 $generated@@369 $generated@@370) $generated@@371)))))
 :pattern ( ($generated@@290 $generated@@369 $generated@@370) ($generated@@81 $generated@@369 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@315 (type $generated@@373))))
(let (($generated@@375 ($generated@@314 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@313 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@312 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@311 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@315 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@76 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@315 (type $generated@@380))))
(let (($generated@@382 ($generated@@314 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@313 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@312 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@81 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@333 (type $generated@@384))))
(let (($generated@@386 ($generated@@332 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@331 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@330 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@329 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@333 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@333 (type $generated@@391))))
(let (($generated@@393 ($generated@@332 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@331 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@330 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@81 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@396)))
 (=> (and (= (type $generated@@395) ($generated@@76 $generated@@398 $generated@@2)) (= (type $generated@@397) $generated@@398)) (= (< 0 ($generated ($generated@@81 ($generated@@290 $generated@@395 $generated@@396) $generated@@397)))  (or (= $generated@@397 $generated@@396) (< 0 ($generated ($generated@@81 $generated@@395 $generated@@397)))))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@400) $generated@@64)) (= ($generated@@148 $generated@@399 ($generated@@169 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@164) (< 0 ($generated ($generated@@81 $generated@@399 $generated@@401)))) ($generated@@234 $generated@@401 $generated@@400))
 :pattern ( ($generated@@81 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@148 $generated@@399 ($generated@@169 $generated@@400)))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@403))))
 (=> (and (= (type $generated@@403) ($generated@@76 $generated@@405 $generated@@2)) (= (type $generated@@404) ($generated@@76 $generated@@405 $generated@@2))) (= ($generated@@402 $generated@@403 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (= ($generated ($generated@@81 $generated@@403 $generated@@406)) ($generated ($generated@@81 $generated@@404 $generated@@406))))
 :pattern ( ($generated@@81 $generated@@403 $generated@@406))
 :pattern ( ($generated@@81 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@407 ($generated@@247 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@164) ($generated@@0 ($generated@@81 $generated@@407 $generated@@410))) ($generated@@266 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@81 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@407 ($generated@@247 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@252 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@164) ($generated@@0 ($generated@@81 $generated@@411 $generated@@414))) ($generated@@266 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@81 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@252 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(= ($generated ($generated@@81 ($generated@@302 $generated@@416) $generated@@415)) 0))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@81 ($generated@@302 $generated@@416) $generated@@415)))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 Int) ($generated@@420 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419 $generated@@420)) ($generated@@76 $generated@@164 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 Int) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@423) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@424) $generated@@164)) (= ($generated@@0 ($generated@@81 ($generated@@417 $generated@@421 $generated@@422 $generated@@423) $generated@@424)) (exists (($generated@@425 Int) ) (!  (and (> ($generated ($generated@@81 $generated@@421 ($generated@@297 ($generated@@8 $generated@@425)))) $generated@@422) (= $generated@@424 ($generated@@297 ($generated@@8 $generated@@425))))
 :pattern ( ($generated@@81 $generated@@423 ($generated@@297 ($generated@@8 $generated@@425))))
))))
 :pattern ( ($generated@@81 ($generated@@417 $generated@@421 $generated@@422 $generated@@423) $generated@@424))
)))
(assert  (and (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@426 $generated@@429)) ($generated@@76 $generated@@164 $generated@@4))
 :pattern ( ($generated@@426 $generated@@429))
)) (forall (($generated@@430 T@T) ($generated@@431 T@U) ) (! (= (type ($generated@@427 $generated@@430 $generated@@431)) $generated@@430)
 :pattern ( ($generated@@427 $generated@@430 $generated@@431))
))) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@315 (type $generated@@432))))
(let (($generated@@434 ($generated@@314 (type $generated@@432))))
(= (type ($generated@@428 $generated@@432)) ($generated@@76 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@428 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@313 $generated@@164 $generated@@164)) (= (type $generated@@436) $generated@@164)) (= ($generated@@0 ($generated@@81 ($generated@@426 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@435) ($generated@@162 ($generated@@427 $generated@@155 $generated@@436)))) (= ($generated@@81 ($generated@@428 $generated@@435) ($generated@@162 ($generated@@427 $generated@@155 $generated@@436))) ($generated@@163 ($generated@@427 $generated@@155 $generated@@436))))))
 :pattern ( ($generated@@81 ($generated@@426 $generated@@435) $generated@@436))
)))
(assert  (and (forall (($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@439)) ($generated@@76 $generated@@164 $generated@@4))
 :pattern ( ($generated@@437 $generated@@439))
)) (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@333 (type $generated@@440))))
(let (($generated@@442 ($generated@@332 (type $generated@@440))))
(= (type ($generated@@438 $generated@@440)) ($generated@@76 $generated@@442 $generated@@441))))
 :pattern ( ($generated@@438 $generated@@440))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) ($generated@@331 $generated@@164 $generated@@164)) (= (type $generated@@444) $generated@@164)) (= ($generated@@0 ($generated@@81 ($generated@@437 $generated@@443) $generated@@444))  (and ($generated@@0 ($generated@@81 ($generated@@329 $generated@@443) ($generated@@162 ($generated@@427 $generated@@155 $generated@@444)))) (= ($generated@@81 ($generated@@438 $generated@@443) ($generated@@162 ($generated@@427 $generated@@155 $generated@@444))) ($generated@@163 ($generated@@427 $generated@@155 $generated@@444))))))
 :pattern ( ($generated@@81 ($generated@@437 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@314 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@313 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@81 ($generated@@377 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@81 ($generated@@428 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@445) $generated@@449))
 :pattern ( ($generated@@81 ($generated@@428 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@81 ($generated@@388 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@81 ($generated@@329 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@81 ($generated@@438 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@450) $generated@@454))
 :pattern ( ($generated@@81 ($generated@@438 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@313 $generated@@164 $generated@@164)) (= (type $generated@@459) $generated@@64)) (= (type $generated@@460) $generated@@64)) (= (type $generated@@461) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@458) $generated@@462))) (and ($generated@@266 ($generated@@81 ($generated@@428 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@266 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@81 ($generated@@428 $generated@@458) $generated@@462))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@74 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (= (type $generated@@466) ($generated@@331 $generated@@164 $generated@@164)) (= (type $generated@@467) $generated@@64)) (= (type $generated@@468) $generated@@64)) (= (type $generated@@469) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@466) $generated@@470))) (and ($generated@@266 ($generated@@81 ($generated@@438 $generated@@466) $generated@@470) $generated@@468 $generated@@469) ($generated@@266 $generated@@470 $generated@@467 $generated@@469)))
 :pattern ( ($generated@@81 ($generated@@438 $generated@@466) $generated@@470))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@466) $generated@@470))
))))
 :pattern ( ($generated@@74 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@79 (type $generated@@471))))
 (=> (and (and (= (type $generated@@471) ($generated@@76 $generated@@473 $generated@@4)) (= (type $generated@@472) ($generated@@76 $generated@@473 $generated@@4))) ($generated@@347 $generated@@471 $generated@@472)) (= $generated@@471 $generated@@472)))
 :pattern ( ($generated@@347 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@79 (type $generated@@474))))
 (=> (and (and (= (type $generated@@474) ($generated@@76 $generated@@476 $generated@@2)) (= (type $generated@@475) ($generated@@76 $generated@@476 $generated@@2))) ($generated@@402 $generated@@474 $generated@@475)) (= $generated@@474 $generated@@475)))
 :pattern ( ($generated@@402 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(= (type ($generated@@477 $generated@@478 $generated@@479)) ($generated@@76 $generated@@480 $generated@@4)))
 :pattern ( ($generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (! (let (($generated@@484 (type $generated@@482)))
 (=> (and (and (= (type $generated@@481) ($generated@@76 $generated@@484 $generated@@4)) (= (type $generated@@483) $generated@@484)) ($generated@@0 ($generated@@81 $generated@@481 $generated@@483))) ($generated@@0 ($generated@@81 ($generated@@477 $generated@@481 $generated@@482) $generated@@483))))
 :pattern ( ($generated@@477 $generated@@481 $generated@@482) ($generated@@81 $generated@@481 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@486)))
 (=> (and (= (type $generated@@485) ($generated@@76 $generated@@488 $generated@@4)) (= (type $generated@@487) $generated@@488)) (= ($generated@@0 ($generated@@81 ($generated@@477 $generated@@485 $generated@@486) $generated@@487))  (or (= $generated@@487 $generated@@486) ($generated@@0 ($generated@@81 $generated@@485 $generated@@487))))))
 :pattern ( ($generated@@81 ($generated@@477 $generated@@485 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 T@T) ) (! (= (type ($generated@@489 $generated@@490)) ($generated@@76 $generated@@490 $generated@@4))
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@333 (type $generated@@491))))
(let (($generated@@493 ($generated@@332 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@331 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@330 $generated@@493 $generated@@492)) (= ($generated@@329 $generated@@491) ($generated@@489 $generated@@493))))))
 :pattern ( ($generated@@329 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@333 (type $generated@@494))))
(let (($generated@@496 ($generated@@332 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@331 $generated@@496 $generated@@495)) (= (= $generated@@494 ($generated@@330 $generated@@496 $generated@@495)) (= ($generated@@388 $generated@@494) ($generated@@489 $generated@@495))))))
 :pattern ( ($generated@@388 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@333 (type $generated@@497))))
(let (($generated@@499 ($generated@@332 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@331 $generated@@499 $generated@@498)) (= (= $generated@@497 ($generated@@330 $generated@@499 $generated@@498)) (= ($generated@@437 $generated@@497) ($generated@@489 $generated@@164))))))
 :pattern ( ($generated@@437 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@315 (type $generated@@500))))
(let (($generated@@502 ($generated@@314 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@313 $generated@@502 $generated@@501)) (or (= $generated@@500 ($generated@@312 $generated@@502 $generated@@501)) (exists (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (and (and (= (type $generated@@503) $generated@@164) (= (type $generated@@504) $generated@@164)) ($generated@@0 ($generated@@81 ($generated@@426 $generated@@500) ($generated@@297 ($generated@@233 $generated@@503 $generated@@504)))))
 :no-pattern (type $generated@@503)
 :no-pattern (type $generated@@504)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
))))))
 :pattern ( ($generated@@426 $generated@@500))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@333 (type $generated@@505))))
(let (($generated@@507 ($generated@@332 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@331 $generated@@507 $generated@@506)) (or (= $generated@@505 ($generated@@330 $generated@@507 $generated@@506)) (exists (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (and (and (= (type $generated@@508) $generated@@164) (= (type $generated@@509) $generated@@164)) ($generated@@0 ($generated@@81 ($generated@@437 $generated@@505) ($generated@@297 ($generated@@233 $generated@@508 $generated@@509)))))
 :no-pattern (type $generated@@508)
 :no-pattern (type $generated@@509)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
))))))
 :pattern ( ($generated@@437 $generated@@505))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@164) ($generated@@234 $generated@@510 $generated@@46)) (and (= ($generated@@297 ($generated@@427 $generated@@2 $generated@@510)) $generated@@510) ($generated@@148 ($generated@@427 $generated@@2 $generated@@510) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@510 $generated@@46))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@164) ($generated@@234 $generated@@511 $generated@@47)) (and (= ($generated@@297 ($generated@@427 $generated@@3 $generated@@511)) $generated@@511) ($generated@@148 ($generated@@427 $generated@@3 $generated@@511) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@511 $generated@@47))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@164) ($generated@@234 $generated@@512 $generated@@44)) (and (= ($generated@@297 ($generated@@427 $generated@@4 $generated@@512)) $generated@@512) ($generated@@148 ($generated@@427 $generated@@4 $generated@@512) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@512 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@513) 20))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@164) ($generated@@234 $generated@@514 $generated@@45)) (and (= ($generated@@297 ($generated@@427 $generated@@513 $generated@@514)) $generated@@514) ($generated@@148 ($generated@@427 $generated@@513 $generated@@514) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@514 $generated@@45))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@234 ($generated@@297 $generated@@515) $generated@@516) ($generated@@148 $generated@@515 $generated@@516)))
 :pattern ( ($generated@@234 ($generated@@297 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@79 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@76 $generated@@518 $generated@@2)) (<= 0 ($generated@@132 $generated@@517))))
 :pattern ( ($generated@@132 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@285 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@284 $generated@@520)) (<= 0 ($generated@@283 $generated@@519))))
 :pattern ( ($generated@@283 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (=> (and (= (type $generated@@521) ($generated@@76 $generated@@524 $generated@@2)) (= (type $generated@@522) ($generated@@76 $generated@@524 $generated@@2))) (= ($generated ($generated@@81 ($generated@@134 $generated@@521 $generated@@522) $generated@@523)) ($generated@@150 ($generated ($generated@@81 $generated@@521 $generated@@523)) ($generated ($generated@@81 $generated@@522 $generated@@523))))))
 :pattern ( ($generated@@81 ($generated@@134 $generated@@521 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= ($generated@@525 ($generated@@455 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@455 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@64)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= ($generated@@529 ($generated@@455 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@455 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (= ($generated@@72 ($generated@@455 $generated@@533 $generated@@534)) $generated@@58))
 :pattern ( ($generated@@455 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@64) (= (type $generated@@538) $generated@@64)) (= ($generated@@535 ($generated@@463 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@463 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (= ($generated@@539 ($generated@@463 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@463 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (= ($generated@@72 ($generated@@463 $generated@@543 $generated@@544)) $generated@@59))
 :pattern ( ($generated@@463 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@164) (= (type $generated@@546) $generated@@164)) (= ($generated@@272 ($generated@@233 $generated@@545 $generated@@546)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@64)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (= ($generated@@547 ($generated@@154 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@154 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@64)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@64) (= (type $generated@@554) $generated@@64)) (= ($generated@@551 ($generated@@154 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@154 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@164) (= (type $generated@@556) $generated@@164)) (= ($generated@@162 ($generated@@233 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@233 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@164) (= (type $generated@@558) $generated@@164)) (= ($generated@@163 ($generated@@233 $generated@@557 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@233 $generated@@557 $generated@@558))
)))
(assert  (and (forall (($generated@@561 T@U) ) (! (= (type ($generated@@559 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@559 $generated@@561))
)) (forall (($generated@@562 T@U) ($generated@@563 Int) ) (! (let (($generated@@564 ($generated@@285 (type $generated@@562))))
(= (type ($generated@@560 $generated@@562 $generated@@563)) $generated@@564))
 :pattern ( ($generated@@560 $generated@@562 $generated@@563))
))))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@284 $generated@@164)) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@565 ($generated@@559 $generated@@566) $generated@@567) (forall (($generated@@568 Int) ) (!  (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@283 $generated@@565))) ($generated@@266 ($generated@@560 $generated@@565 $generated@@568) $generated@@566 $generated@@567))
 :pattern ( ($generated@@560 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@559 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (=> (= (type $generated@@569) ($generated@@76 $generated@@571 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@477 $generated@@569 $generated@@570) $generated@@570))))
 :pattern ( ($generated@@477 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@572 ($generated@@75 $generated@@573)) $generated@@573)
 :pattern ( ($generated@@75 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@64)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@64) (= ($generated@@574 ($generated@@247 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@247 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@64) (= ($generated@@72 ($generated@@247 $generated@@577)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@64)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@64) (= ($generated@@578 ($generated@@252 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@252 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@64) (= ($generated@@72 ($generated@@252 $generated@@581)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@64)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@64) (= ($generated@@582 ($generated@@169 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@169 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@64) (= ($generated@@72 ($generated@@169 $generated@@585)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@64)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@64) (= ($generated@@586 ($generated@@559 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@559 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@64) (= ($generated@@72 ($generated@@559 $generated@@589)) $generated@@57))
 :pattern ( ($generated@@559 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
(= ($generated@@427 $generated@@591 ($generated@@297 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@297 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@313 $generated@@164 $generated@@164)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) (= ($generated@@148 $generated@@592 ($generated@@455 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@592) $generated@@595))) (and ($generated@@234 ($generated@@81 ($generated@@428 $generated@@592) $generated@@595) $generated@@594) ($generated@@234 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@81 ($generated@@428 $generated@@592) $generated@@595))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@148 $generated@@592 ($generated@@455 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@331 $generated@@164 $generated@@164)) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) $generated@@64)) (= ($generated@@148 $generated@@596 ($generated@@463 $generated@@597 $generated@@598)) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@596) $generated@@599))) (and ($generated@@234 ($generated@@81 ($generated@@438 $generated@@596) $generated@@599) $generated@@598) ($generated@@234 $generated@@599 $generated@@597)))
 :pattern ( ($generated@@81 ($generated@@438 $generated@@596) $generated@@599))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@596) $generated@@599))
))))
 :pattern ( ($generated@@148 $generated@@596 ($generated@@463 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@164) (= (type $generated@@603) $generated@@164)) (< ($generated@@600 $generated@@602) ($generated@@601 ($generated@@233 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@233 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@164) (= (type $generated@@605) $generated@@164)) (< ($generated@@600 $generated@@605) ($generated@@601 ($generated@@233 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@233 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@79 (type $generated@@606))))
 (=> (and (= (type $generated@@606) ($generated@@76 $generated@@608 $generated@@2)) (= (type $generated@@607) ($generated@@76 $generated@@608 $generated@@2))) (= ($generated@@134 $generated@@606 ($generated@@134 $generated@@606 $generated@@607)) ($generated@@134 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@134 $generated@@606 ($generated@@134 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@164) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@234 $generated@@609 ($generated@@455 $generated@@610 $generated@@611))) (and (= ($generated@@297 ($generated@@427 ($generated@@313 $generated@@164 $generated@@164) $generated@@609)) $generated@@609) ($generated@@148 ($generated@@427 ($generated@@313 $generated@@164 $generated@@164) $generated@@609) ($generated@@455 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@234 $generated@@609 ($generated@@455 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@164) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@234 $generated@@612 ($generated@@463 $generated@@613 $generated@@614))) (and (= ($generated@@297 ($generated@@427 ($generated@@331 $generated@@164 $generated@@164) $generated@@612)) $generated@@612) ($generated@@148 ($generated@@427 ($generated@@331 $generated@@164 $generated@@164) $generated@@612) ($generated@@463 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@234 $generated@@612 ($generated@@463 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@64) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@164)) ($generated@@234 $generated@@617 ($generated@@154 $generated@@615 $generated@@616))) (and (= ($generated@@297 ($generated@@427 $generated@@155 $generated@@617)) $generated@@617) ($generated@@148 ($generated@@427 $generated@@155 $generated@@617) ($generated@@154 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@234 $generated@@617 ($generated@@154 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@79 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@76 $generated@@621 $generated@@2)) (= (type $generated@@620) ($generated@@76 $generated@@621 $generated@@2))) (= ($generated@@618 $generated@@619 $generated@@620) (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@621) (or (= ($generated ($generated@@81 $generated@@619 $generated@@622)) 0) (= ($generated ($generated@@81 $generated@@620 $generated@@622)) 0)))
 :pattern ( ($generated@@81 $generated@@619 $generated@@622))
 :pattern ( ($generated@@81 $generated@@620 $generated@@622))
)))))
 :pattern ( ($generated@@618 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@624 T@T) ) (! (= (type ($generated@@623 $generated@@624)) ($generated@@76 $generated@@624 $generated@@4))
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@625)))
 (not ($generated@@0 ($generated@@81 ($generated@@623 $generated@@626) $generated@@625))))
 :pattern ( (let (($generated@@626 (type $generated@@625)))
($generated@@81 ($generated@@623 $generated@@626) $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (not ($generated@@0 ($generated@@81 ($generated@@489 $generated@@628) $generated@@627))))
 :pattern ( (let (($generated@@628 (type $generated@@627)))
($generated@@81 ($generated@@489 $generated@@628) $generated@@627)))
)))
(assert (forall (($generated@@630 T@U) ) (! (= (type ($generated@@629 $generated@@630)) $generated@@69)
 :pattern ( ($generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@64) (= (type $generated@@632) $generated@@64)) (and (= ($generated@@72 ($generated@@154 $generated@@631 $generated@@632)) $generated@@62) (= ($generated@@629 ($generated@@154 $generated@@631 $generated@@632)) $generated@@63)))
 :pattern ( ($generated@@154 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@155) (= ($generated@@600 ($generated@@297 $generated@@633)) ($generated@@601 $generated@@633)))
 :pattern ( ($generated@@600 ($generated@@297 $generated@@633)))
)))
(assert (forall (($generated@@634 Int) ($generated@@635 Int) ) (! (= (<= $generated@@634 $generated@@635) (= ($generated@@150 $generated@@634 $generated@@635) $generated@@634))
 :pattern ( ($generated@@150 $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 Int) ($generated@@637 Int) ) (! (= (<= $generated@@637 $generated@@636) (= ($generated@@150 $generated@@636 $generated@@637) $generated@@637))
 :pattern ( ($generated@@150 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@164) ($generated@@234 $generated@@638 ($generated@@75 0))) (and (= ($generated@@297 ($generated@@427 $generated@@2 $generated@@638)) $generated@@638) ($generated@@148 ($generated@@427 ($generated@@76 $generated@@164 $generated@@4) $generated@@638) ($generated@@75 0))))
 :pattern ( ($generated@@234 $generated@@638 ($generated@@75 0)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@164) (= (type $generated@@640) $generated@@64)) ($generated@@234 $generated@@639 ($generated@@247 $generated@@640))) (and (= ($generated@@297 ($generated@@427 ($generated@@76 $generated@@164 $generated@@4) $generated@@639)) $generated@@639) ($generated@@148 ($generated@@427 ($generated@@76 $generated@@164 $generated@@4) $generated@@639) ($generated@@247 $generated@@640))))
 :pattern ( ($generated@@234 $generated@@639 ($generated@@247 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@164) (= (type $generated@@642) $generated@@64)) ($generated@@234 $generated@@641 ($generated@@252 $generated@@642))) (and (= ($generated@@297 ($generated@@427 ($generated@@76 $generated@@164 $generated@@4) $generated@@641)) $generated@@641) ($generated@@148 ($generated@@427 ($generated@@76 $generated@@164 $generated@@4) $generated@@641) ($generated@@252 $generated@@642))))
 :pattern ( ($generated@@234 $generated@@641 ($generated@@252 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@164) (= (type $generated@@644) $generated@@64)) ($generated@@234 $generated@@643 ($generated@@169 $generated@@644))) (and (= ($generated@@297 ($generated@@427 ($generated@@76 $generated@@164 $generated@@2) $generated@@643)) $generated@@643) ($generated@@148 ($generated@@427 ($generated@@76 $generated@@164 $generated@@2) $generated@@643) ($generated@@169 $generated@@644))))
 :pattern ( ($generated@@234 $generated@@643 ($generated@@169 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@164) (= (type $generated@@646) $generated@@64)) ($generated@@234 $generated@@645 ($generated@@559 $generated@@646))) (and (= ($generated@@297 ($generated@@427 ($generated@@284 $generated@@164) $generated@@645)) $generated@@645) ($generated@@148 ($generated@@427 ($generated@@284 $generated@@164) $generated@@645) ($generated@@559 $generated@@646))))
 :pattern ( ($generated@@234 $generated@@645 ($generated@@559 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@647) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@647 ($generated@@169 $generated@@648) $generated@@649) (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@164) (< 0 ($generated ($generated@@81 $generated@@647 $generated@@650)))) ($generated@@266 $generated@@650 $generated@@648 $generated@@649))
 :pattern ( ($generated@@81 $generated@@647 $generated@@650))
))))
 :pattern ( ($generated@@74 $generated@@647 ($generated@@169 $generated@@648) $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@155) (= (type $generated@@652) $generated@@64)) (= (type $generated@@653) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@653) (and ($generated@@153 $generated@@651) (exists (($generated@@654 T@U) ) (!  (and (= (type $generated@@654) $generated@@64) ($generated@@74 $generated@@651 ($generated@@154 $generated@@652 $generated@@654) $generated@@653))
 :pattern ( ($generated@@74 $generated@@651 ($generated@@154 $generated@@652 $generated@@654) $generated@@653))
))))) ($generated@@266 ($generated@@162 $generated@@651) $generated@@652 $generated@@653))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@651) $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@155) (= (type $generated@@656) $generated@@64)) (= (type $generated@@657) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@657) (and ($generated@@153 $generated@@655) (exists (($generated@@658 T@U) ) (!  (and (= (type $generated@@658) $generated@@64) ($generated@@74 $generated@@655 ($generated@@154 $generated@@658 $generated@@656) $generated@@657))
 :pattern ( ($generated@@74 $generated@@655 ($generated@@154 $generated@@658 $generated@@656) $generated@@657))
))))) ($generated@@266 ($generated@@163 $generated@@655) $generated@@656 $generated@@657))
 :pattern ( ($generated@@266 ($generated@@163 $generated@@655) $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (! (let (($generated@@662 (type $generated@@660)))
 (=> (and (and (= (type $generated@@659) ($generated@@76 $generated@@662 $generated@@2)) (= (type $generated@@661) $generated@@662)) (not (= $generated@@660 $generated@@661))) (= ($generated ($generated@@81 $generated@@659 $generated@@661)) ($generated ($generated@@81 ($generated@@290 $generated@@659 $generated@@660) $generated@@661)))))
 :pattern ( ($generated@@290 $generated@@659 $generated@@660) ($generated@@81 $generated@@659 $generated@@661))
)))
(assert (forall (($generated@@663 Int) ) (!  (=> (< $generated@@663 0) (= ($generated@@257 $generated@@663) 0))
 :pattern ( ($generated@@257 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@164) (= (type $generated@@665) $generated@@164)) (= ($generated@@233 ($generated@@261 $generated@@664) ($generated@@261 $generated@@665)) ($generated@@261 ($generated@@233 $generated@@664 $generated@@665))))
 :pattern ( ($generated@@233 ($generated@@261 $generated@@664) ($generated@@261 $generated@@665)))
)))
(assert (forall (($generated@@666 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@259 $generated@@666))) ($generated@@261 ($generated@@297 ($generated@@8 $generated@@666))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@259 $generated@@666))))
)))
(assert (forall (($generated@@667 T@U) ) (! (= ($generated@@297 ($generated@@261 $generated@@667)) ($generated@@261 ($generated@@297 $generated@@667)))
 :pattern ( ($generated@@297 ($generated@@261 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 ($generated@@285 (type $generated@@668))))
 (=> (and (= (type $generated@@668) ($generated@@284 $generated@@669)) (= ($generated@@283 $generated@@668) 0)) (= $generated@@668 ($generated@@282 $generated@@669))))
 :pattern ( ($generated@@283 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (! (let (($generated@@673 (type $generated@@671)))
 (=> (and (and (= (type $generated@@670) ($generated@@76 $generated@@673 $generated@@2)) (= (type $generated@@672) $generated@@2)) (<= 0 ($generated $generated@@672))) (= ($generated@@132 ($generated@@82 $generated@@670 $generated@@671 $generated@@672)) (+ (- ($generated@@132 $generated@@670) ($generated ($generated@@81 $generated@@670 $generated@@671))) ($generated $generated@@672)))))
 :pattern ( ($generated@@132 ($generated@@82 $generated@@670 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@675) $generated@@2)) ($generated@@74 $generated@@675 $generated@@46 $generated@@674))
 :pattern ( ($generated@@74 $generated@@675 $generated@@46 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@677) $generated@@3)) ($generated@@74 $generated@@677 $generated@@47 $generated@@676))
 :pattern ( ($generated@@74 $generated@@677 $generated@@47 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@679) $generated@@4)) ($generated@@74 $generated@@679 $generated@@44 $generated@@678))
 :pattern ( ($generated@@74 $generated@@679 $generated@@44 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@681) $generated@@513)) ($generated@@74 $generated@@681 $generated@@45 $generated@@680))
 :pattern ( ($generated@@74 $generated@@681 $generated@@45 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@683) $generated@@164)) ($generated@@74 $generated@@683 $generated@@48 $generated@@682))
 :pattern ( ($generated@@74 $generated@@683 $generated@@48 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@284 $generated@@164)) (= (type $generated@@685) $generated@@64)) (= ($generated@@148 $generated@@684 ($generated@@559 $generated@@685)) (forall (($generated@@686 Int) ) (!  (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@283 $generated@@684))) ($generated@@234 ($generated@@560 $generated@@684 $generated@@686) $generated@@685))
 :pattern ( ($generated@@560 $generated@@684 $generated@@686))
))))
 :pattern ( ($generated@@148 $generated@@684 ($generated@@559 $generated@@685)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 Int) ) (!  (=> (= (type $generated@@688) ($generated@@284 $generated@@164)) (=> (and (<= 0 $generated@@689) (< $generated@@689 ($generated@@283 $generated@@688))) (< ($generated@@601 ($generated@@427 $generated@@155 ($generated@@560 $generated@@688 $generated@@689))) ($generated@@687 $generated@@688))))
 :pattern ( ($generated@@601 ($generated@@427 $generated@@155 ($generated@@560 $generated@@688 $generated@@689))))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@313 $generated@@164 $generated@@164)) (= (type $generated@@691) $generated@@64)) (= (type $generated@@692) $generated@@64)) ($generated@@148 $generated@@690 ($generated@@455 $generated@@691 $generated@@692))) (and (and ($generated@@148 ($generated@@311 $generated@@690) ($generated@@247 $generated@@691)) ($generated@@148 ($generated@@377 $generated@@690) ($generated@@247 $generated@@692))) ($generated@@148 ($generated@@426 $generated@@690) ($generated@@247 ($generated@@154 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@148 $generated@@690 ($generated@@455 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) ($generated@@331 $generated@@164 $generated@@164)) (= (type $generated@@694) $generated@@64)) (= (type $generated@@695) $generated@@64)) ($generated@@148 $generated@@693 ($generated@@463 $generated@@694 $generated@@695))) (and (and ($generated@@148 ($generated@@329 $generated@@693) ($generated@@252 $generated@@694)) ($generated@@148 ($generated@@388 $generated@@693) ($generated@@252 $generated@@695))) ($generated@@148 ($generated@@437 $generated@@693) ($generated@@252 ($generated@@154 $generated@@694 $generated@@695)))))
 :pattern ( ($generated@@148 $generated@@693 ($generated@@463 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@2) ($generated@@148 $generated@@696 $generated@@46))
 :pattern ( ($generated@@148 $generated@@696 $generated@@46))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@3) ($generated@@148 $generated@@697 $generated@@47))
 :pattern ( ($generated@@148 $generated@@697 $generated@@47))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@4) ($generated@@148 $generated@@698 $generated@@44))
 :pattern ( ($generated@@148 $generated@@698 $generated@@44))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@513) ($generated@@148 $generated@@699 $generated@@45))
 :pattern ( ($generated@@148 $generated@@699 $generated@@45))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@164) ($generated@@148 $generated@@700 $generated@@48))
 :pattern ( ($generated@@148 $generated@@700 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () Int)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 (T@U) Bool)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@701) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@702) ($generated@@76 $generated@@164 $generated@@4))) (= (type $generated@@704) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@705) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@706) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@707) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@708) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@709) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@711) ($generated@@176 $generated@@77 $generated@@4))) (= (type $generated@@712) $generated@@77)) (= (type $generated@@714) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@715) ($generated@@76 $generated@@164 $generated@@2))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@717 true))
(let (($generated@@718  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@719 T@U) ) (!  (=> (and (and (= (type $generated@@719) ($generated@@76 $generated@@164 $generated@@4)) ($generated@@148 $generated@@719 ($generated@@247 $generated@@46))) ($generated@@347 $generated@@719 ($generated@@417 $generated@@701 0 $generated@@701))) ($generated@@347 $generated@@719 ($generated@@477 ($generated@@623 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))))
 :no-pattern (type $generated@@719)
 :no-pattern ($generated $generated@@719)
 :no-pattern ($generated@@0 $generated@@719)
)))))
(let (($generated@@720  (=> (and (not ($generated@@347 $generated@@702 ($generated@@361 $generated@@46 $generated@@701 0))) (= (ControlFlow 0 7) 3)) $generated@@718)))
(let (($generated@@721  (=> (and ($generated@@347 $generated@@702 ($generated@@361 $generated@@46 $generated@@701 0)) (= (ControlFlow 0 6) 3)) $generated@@718)))
(let (($generated@@722  (=> (>= 0 ($generated ($generated@@81 $generated@@701 ($generated@@297 ($generated@@8 $generated@@703))))) (and (=> (= (ControlFlow 0 9) 6) $generated@@721) (=> (= (ControlFlow 0 9) 7) $generated@@720)))))
(let (($generated@@723  (=> (> ($generated ($generated@@81 $generated@@701 ($generated@@297 ($generated@@8 $generated@@703)))) 0) (and (=> (= (ControlFlow 0 8) 6) $generated@@721) (=> (= (ControlFlow 0 8) 7) $generated@@720)))))
(let (($generated@@724  (and (=> (= (ControlFlow 0 10) 8) $generated@@723) (=> (= (ControlFlow 0 10) 9) $generated@@722))))
(let (($generated@@725  (=> (and ($generated@@148 $generated@@702 ($generated@@247 $generated@@46)) ($generated@@74 $generated@@702 ($generated@@247 $generated@@46) $generated@@704)) (and (=> (= (ControlFlow 0 11) 10) $generated@@724) (=> (= (ControlFlow 0 11) 5) $generated@@717)))))
(let (($generated@@726  (=> (and (not (and ($generated@@148 $generated@@702 ($generated@@247 $generated@@46)) ($generated@@74 $generated@@702 ($generated@@247 $generated@@46) $generated@@704))) (= (ControlFlow 0 4) 3)) $generated@@718)))
(let (($generated@@727  (and (=> (= (ControlFlow 0 12) (- 0 13)) (forall (($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@728) ($generated@@76 $generated@@164 $generated@@2)) ($generated@@148 $generated@@728 ($generated@@169 $generated@@46))) ($generated@@618 (let (($generated@@729 $generated@@728))
$generated@@729) ($generated@@302 $generated@@164)))
 :no-pattern (type $generated@@728)
 :no-pattern ($generated $generated@@728)
 :no-pattern ($generated@@0 $generated@@728)
))) (=> (forall (($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@730) ($generated@@76 $generated@@164 $generated@@2)) ($generated@@148 $generated@@730 ($generated@@169 $generated@@46))) ($generated@@618 (let (($generated@@731 $generated@@730))
$generated@@731) ($generated@@302 $generated@@164)))
 :no-pattern (type $generated@@730)
 :no-pattern ($generated $generated@@730)
 :no-pattern ($generated@@0 $generated@@730)
)) (and (=> (= (ControlFlow 0 12) 11) $generated@@725) (=> (= (ControlFlow 0 12) 4) $generated@@726))))))
(let (($generated@@732  (=> (and (not (and ($generated@@148 $generated@@705 ($generated@@169 $generated@@46)) ($generated@@74 $generated@@705 ($generated@@169 $generated@@46) $generated@@704))) (= (ControlFlow 0 15) 12)) $generated@@727)))
(let (($generated@@733  (=> (and (and (and ($generated@@148 $generated@@705 ($generated@@169 $generated@@46)) ($generated@@74 $generated@@705 ($generated@@169 $generated@@46) $generated@@704)) (and ($generated@@148 $generated@@706 ($generated@@169 $generated@@46)) ($generated@@74 $generated@@706 ($generated@@169 $generated@@46) $generated@@704))) (and (and (= $generated@@707 $generated@@705) ($generated@@148 $generated@@707 ($generated@@169 $generated@@46))) (and (= $generated@@706 $generated@@707) (= (ControlFlow 0 14) 12)))) $generated@@727)))
(let (($generated@@734  (and (=> (= (ControlFlow 0 16) (- 0 17)) (exists (($generated@@735 T@U) ) (!  (and (= (type $generated@@735) ($generated@@76 $generated@@164 $generated@@2)) (and ($generated@@148 $generated@@735 ($generated@@169 $generated@@46)) (not ($generated@@618 $generated@@735 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))))))
 :no-pattern (type $generated@@735)
 :no-pattern ($generated $generated@@735)
 :no-pattern ($generated@@0 $generated@@735)
))) (=> (exists (($generated@@736 T@U) ) (!  (and (= (type $generated@@736) ($generated@@76 $generated@@164 $generated@@2)) (and ($generated@@148 $generated@@736 ($generated@@169 $generated@@46)) (not ($generated@@618 $generated@@736 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))))))
 :no-pattern (type $generated@@736)
 :no-pattern ($generated $generated@@736)
 :no-pattern ($generated@@0 $generated@@736)
)) (and (=> (= (ControlFlow 0 16) 14) $generated@@733) (=> (= (ControlFlow 0 16) 15) $generated@@732))))))
(let (($generated@@737  (=> (and (not (and ($generated@@148 $generated@@708 ($generated@@169 $generated@@46)) ($generated@@74 $generated@@708 ($generated@@169 $generated@@46) $generated@@704))) (= (ControlFlow 0 19) 16)) $generated@@734)))
(let (($generated@@738  (=> (and (and ($generated@@148 $generated@@708 ($generated@@169 $generated@@46)) ($generated@@74 $generated@@708 ($generated@@169 $generated@@46) $generated@@704)) (= (ControlFlow 0 18) 16)) $generated@@734)))
(let (($generated@@739  (and (=> (= (ControlFlow 0 20) (- 0 26)) (forall (($generated@@740 Int) ) (!  (=> true (=> (not (= $generated@@740 1)) (not (> ($generated ($generated@@81 $generated@@701 ($generated@@297 ($generated@@8 $generated@@740)))) 0))))
 :pattern ( ($generated@@81 $generated@@701 ($generated@@297 ($generated@@8 $generated@@740))))
))) (=> (forall (($generated@@741 T@U) ) (!  (=> (and (and (= (type $generated@@741) $generated@@2) true) (not (= ($generated $generated@@741) 1))) (not (> ($generated ($generated@@81 $generated@@701 ($generated@@297 $generated@@741))) 0)))
 :pattern ( ($generated@@81 $generated@@701 ($generated@@297 $generated@@741)))
)) (and (=> (= (ControlFlow 0 20) (- 0 25)) (not ($generated@@402 ($generated@@133 ($generated@@133 $generated@@701 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@302 $generated@@164)))) (=> (not ($generated@@402 ($generated@@133 ($generated@@133 $generated@@701 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@302 $generated@@164))) (and (=> (= (ControlFlow 0 20) (- 0 24)) ($generated@@402 ($generated@@133 ($generated@@133 ($generated@@133 $generated@@701 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@302 $generated@@164))) (=> ($generated@@402 ($generated@@133 ($generated@@133 ($generated@@133 $generated@@701 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@302 $generated@@164)) (and (=> (= (ControlFlow 0 20) (- 0 23)) ($generated@@402 ($generated@@133 $generated@@709 $generated@@701) $generated@@709)) (=> ($generated@@402 ($generated@@133 $generated@@709 $generated@@701) $generated@@709) (and (=> (= (ControlFlow 0 20) (- 0 22)) ($generated@@402 ($generated@@133 $generated@@701 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@290 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1)))) ($generated@@297 ($generated@@8 ($generated@@259 1)))))) (=> ($generated@@402 ($generated@@133 $generated@@701 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))) ($generated@@290 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1)))) ($generated@@297 ($generated@@8 ($generated@@259 1))))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (not ($generated@@618 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1)))) ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1))))))) (=> (not ($generated@@618 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1)))) ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1)))))) (and (=> (= (ControlFlow 0 20) 18) $generated@@738) (=> (= (ControlFlow 0 20) 19) $generated@@737))))))))))))))))
(let (($generated@@742  (=> (and (= $generated@@710 1) (= (ControlFlow 0 28) 20)) $generated@@739)))
(let (($generated@@743  (=> (and (not (= $generated@@710 1)) (= (ControlFlow 0 27) 20)) $generated@@739)))
(let (($generated@@744  (and (=> (= (ControlFlow 0 29) 27) $generated@@743) (=> (= (ControlFlow 0 29) 28) $generated@@742))))
(let (($generated@@745 true))
(let (($generated@@746  (=> (= $generated@@711 ($generated@@175 $generated@@712 $generated@@704 $generated@@60 false)) (=> (and (= $generated@@701 ($generated@@261 ($generated@@290 ($generated@@290 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 1)))) ($generated@@297 ($generated@@8 ($generated@@259 1)))) ($generated@@297 ($generated@@8 ($generated@@259 1)))))) (= $generated@@709 ($generated@@261 ($generated@@290 ($generated@@302 $generated@@164) ($generated@@297 ($generated@@8 ($generated@@259 3))))))) (and (=> (= (ControlFlow 0 30) (- 0 31)) (> ($generated ($generated@@81 $generated@@701 ($generated@@297 ($generated@@8 ($generated@@259 1))))) 0)) (=> (> ($generated ($generated@@81 $generated@@701 ($generated@@297 ($generated@@8 ($generated@@259 1))))) 0) (and (=> (= (ControlFlow 0 30) 29) $generated@@744) (=> (= (ControlFlow 0 30) 1) $generated@@745))))))))
(let (($generated@@747  (=> (and ($generated@@265 $generated@@704) ($generated@@713 $generated@@704)) (=> (and (and ($generated@@148 $generated@@714 ($generated@@169 $generated@@46)) ($generated@@74 $generated@@714 ($generated@@169 $generated@@46) $generated@@704)) true) (=> (and (and (and ($generated@@148 $generated@@715 ($generated@@169 $generated@@46)) ($generated@@74 $generated@@715 ($generated@@169 $generated@@46) $generated@@704)) true) (and (= 0 $generated@@716) (= (ControlFlow 0 32) 30))) $generated@@746)))))
$generated@@747)))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@341 (T@U Int T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@379 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@T) T@U)
(declare-fun $generated@@419 () T@T)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@462 (T@U Int) T@U)
(declare-fun $generated@@471 (T@U) Int)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@514 (T@U T@U) Bool)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@569 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= (type $generated@@333) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@145) ($generated@@0 ($generated@@81 $generated@@331 $generated@@334))) ($generated@@236 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@81 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@340) $generated@@339)) 0))
 :pattern ( (let (($generated@@340 (type $generated@@339)))
($generated@@81 ($generated@@262 $generated@@340) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 Int) ($generated@@344 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343 $generated@@344)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@341 $generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 Int) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@347) ($generated@@76 $generated@@145 $generated@@2))) (= (type $generated@@348) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@345 $generated@@346 $generated@@347) $generated@@348)) (exists (($generated@@349 Int) ) (!  (and (> ($generated ($generated@@81 $generated@@345 ($generated@@256 ($generated@@8 $generated@@349)))) $generated@@346) (= $generated@@348 ($generated@@256 ($generated@@8 $generated@@349))))
 :pattern ( ($generated@@81 $generated@@347 ($generated@@256 ($generated@@8 $generated@@349))))
))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@345 $generated@@346 $generated@@347) $generated@@348))
)))
(assert  (and (and (forall (($generated@@353 T@U) ) (! (= (type ($generated@@350 $generated@@353)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@350 $generated@@353))
)) (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@351 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@271 (type $generated@@356))))
(let (($generated@@358 ($generated@@270 (type $generated@@356))))
(= (type ($generated@@352 $generated@@356)) ($generated@@76 $generated@@358 $generated@@357))))
 :pattern ( ($generated@@352 $generated@@356))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@360) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@359) $generated@@360))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@359) ($generated@@143 ($generated@@351 $generated@@136 $generated@@360)))) (= ($generated@@81 ($generated@@352 $generated@@359) ($generated@@143 ($generated@@351 $generated@@136 $generated@@360))) ($generated@@144 ($generated@@351 $generated@@136 $generated@@360))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@359) $generated@@360))
)))
(assert  (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@363)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@361 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@289 (type $generated@@364))))
(let (($generated@@366 ($generated@@288 (type $generated@@364))))
(= (type ($generated@@362 $generated@@364)) ($generated@@76 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@362 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@368) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@367) ($generated@@143 ($generated@@351 $generated@@136 $generated@@368)))) (= ($generated@@81 ($generated@@362 $generated@@367) ($generated@@143 ($generated@@351 $generated@@136 $generated@@368))) ($generated@@144 ($generated@@351 $generated@@136 $generated@@368))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@270 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@269 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@81 ($generated@@352 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@369) $generated@@373))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@288 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@287 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@362 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@380 $generated@@381)) $generated@@64)
 :pattern ( ($generated@@379 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (and (= (type $generated@@382) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@382 ($generated@@379 $generated@@383 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@382) $generated@@386))) (and ($generated@@236 ($generated@@81 ($generated@@352 $generated@@382) $generated@@386) $generated@@384 $generated@@385) ($generated@@236 $generated@@386 $generated@@383 $generated@@385)))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@382) $generated@@386))
))))
 :pattern ( ($generated@@74 $generated@@382 ($generated@@379 $generated@@383 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@64)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@390) $generated@@394))) (and ($generated@@236 ($generated@@81 ($generated@@362 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@236 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@T) ) (! (= (type ($generated@@395 $generated@@396)) ($generated@@76 $generated@@396 $generated@@4))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@289 (type $generated@@397))))
(let (($generated@@399 ($generated@@288 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@287 $generated@@399 $generated@@398)) (= (= $generated@@397 ($generated@@286 $generated@@399 $generated@@398)) (= ($generated@@285 $generated@@397) ($generated@@395 $generated@@399))))))
 :pattern ( ($generated@@285 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@289 (type $generated@@400))))
(let (($generated@@402 ($generated@@288 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@287 $generated@@402 $generated@@401)) (= (= $generated@@400 ($generated@@286 $generated@@402 $generated@@401)) (= ($generated@@321 $generated@@400) ($generated@@395 $generated@@401))))))
 :pattern ( ($generated@@321 $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@289 (type $generated@@403))))
(let (($generated@@405 ($generated@@288 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@287 $generated@@405 $generated@@404)) (= (= $generated@@403 ($generated@@286 $generated@@405 $generated@@404)) (= ($generated@@361 $generated@@403) ($generated@@395 $generated@@145))))))
 :pattern ( ($generated@@361 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@271 (type $generated@@406))))
(let (($generated@@408 ($generated@@270 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@269 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@268 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@145) (= (type $generated@@410) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@406) ($generated@@256 ($generated@@211 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@350 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@289 (type $generated@@411))))
(let (($generated@@413 ($generated@@288 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@287 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@286 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (and (and (= (type $generated@@414) $generated@@145) (= (type $generated@@415) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@411) ($generated@@256 ($generated@@211 $generated@@414 $generated@@415)))))
 :no-pattern (type $generated@@414)
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@361 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@145) ($generated@@212 $generated@@416 $generated@@46)) (and (= ($generated@@256 ($generated@@351 $generated@@2 $generated@@416)) $generated@@416) ($generated@@132 ($generated@@351 $generated@@2 $generated@@416) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@416 $generated@@46))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@47)) (and (= ($generated@@256 ($generated@@351 $generated@@3 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@351 $generated@@3 $generated@@417) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@47))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@44)) (and (= ($generated@@256 ($generated@@351 $generated@@4 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@351 $generated@@4 $generated@@418) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@419) 20))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@212 $generated@@420 $generated@@45)) (and (= ($generated@@256 ($generated@@351 $generated@@419 $generated@@420)) $generated@@420) ($generated@@132 ($generated@@351 $generated@@419 $generated@@420) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@420 $generated@@45))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (= (type $generated@@422) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@421) $generated@@422) ($generated@@132 $generated@@421 $generated@@422)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@79 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@76 $generated@@424 $generated@@2)) (<= 0 ($generated@@261 $generated@@423))))
 :pattern ( ($generated@@261 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@251 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@250 $generated@@426)) (<= 0 ($generated@@249 $generated@@425))))
 :pattern ( ($generated@@249 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@64)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@64) (= (type $generated@@430) $generated@@64)) (= ($generated@@427 ($generated@@379 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@379 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@431 ($generated@@379 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@379 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@64) (= (type $generated@@436) $generated@@64)) (= ($generated@@72 ($generated@@379 $generated@@435 $generated@@436)) $generated@@58))
 :pattern ( ($generated@@379 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@437 ($generated@@387 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@387 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@387 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@387 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@72 ($generated@@387 $generated@@445 $generated@@446)) $generated@@59))
 :pattern ( ($generated@@387 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@145) (= (type $generated@@448) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@447 $generated@@448)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@135 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@135 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@135 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@135 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) (= (type $generated@@458) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@211 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) (= (type $generated@@460) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@211 $generated@@459 $generated@@460))
)))
(assert  (and (forall (($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@463))
)) (forall (($generated@@464 T@U) ($generated@@465 Int) ) (! (let (($generated@@466 ($generated@@251 (type $generated@@464))))
(= (type ($generated@@462 $generated@@464 $generated@@465)) $generated@@466))
 :pattern ( ($generated@@462 $generated@@464 $generated@@465))
))))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@250 $generated@@145)) (= (type $generated@@468) $generated@@64)) (= (type $generated@@469) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@467 ($generated@@461 $generated@@468) $generated@@469) (forall (($generated@@470 Int) ) (!  (=> (and (<= 0 $generated@@470) (< $generated@@470 ($generated@@249 $generated@@467))) ($generated@@236 ($generated@@462 $generated@@467 $generated@@470) $generated@@468 $generated@@469))
 :pattern ( ($generated@@462 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@74 $generated@@467 ($generated@@461 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@472 Int) ) (! (= ($generated@@471 ($generated@@75 $generated@@472)) $generated@@472)
 :pattern ( ($generated@@75 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@473 ($generated@@221 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@221 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@476)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@226 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@226 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@480)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@150 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@150 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@484)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@461 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@461 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@461 $generated@@488)) $generated@@57))
 :pattern ( ($generated@@461 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(= ($generated@@351 $generated@@490 ($generated@@256 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@256 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) $generated@@64)) (= ($generated@@132 $generated@@491 ($generated@@379 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@491) $generated@@494))) (and ($generated@@212 ($generated@@81 ($generated@@352 $generated@@491) $generated@@494) $generated@@493) ($generated@@212 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@491) $generated@@494))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@132 $generated@@491 ($generated@@379 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) $generated@@64)) (= ($generated@@132 $generated@@495 ($generated@@387 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@495) $generated@@498))) (and ($generated@@212 ($generated@@81 ($generated@@362 $generated@@495) $generated@@498) $generated@@497) ($generated@@212 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@495) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@132 $generated@@495 ($generated@@387 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (< ($generated@@499 $generated@@501) ($generated@@500 ($generated@@211 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@211 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (< ($generated@@499 $generated@@504) ($generated@@500 ($generated@@211 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@211 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@145) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) ($generated@@212 $generated@@505 ($generated@@379 $generated@@506 $generated@@507))) (and (= ($generated@@256 ($generated@@351 ($generated@@269 $generated@@145 $generated@@145) $generated@@505)) $generated@@505) ($generated@@132 ($generated@@351 ($generated@@269 $generated@@145 $generated@@145) $generated@@505) ($generated@@379 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@212 $generated@@505 ($generated@@379 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) ($generated@@212 $generated@@508 ($generated@@387 $generated@@509 $generated@@510))) (and (= ($generated@@256 ($generated@@351 ($generated@@287 $generated@@145 $generated@@145) $generated@@508)) $generated@@508) ($generated@@132 ($generated@@351 ($generated@@287 $generated@@145 $generated@@145) $generated@@508) ($generated@@387 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@212 $generated@@508 ($generated@@387 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@145)) ($generated@@212 $generated@@513 ($generated@@135 $generated@@511 $generated@@512))) (and (= ($generated@@256 ($generated@@351 $generated@@136 $generated@@513)) $generated@@513) ($generated@@132 ($generated@@351 $generated@@136 $generated@@513) ($generated@@135 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@135 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@79 (type $generated@@515))))
 (=> (and (= (type $generated@@515) ($generated@@76 $generated@@517 $generated@@2)) (= (type $generated@@516) ($generated@@76 $generated@@517 $generated@@2))) (= ($generated@@514 $generated@@515 $generated@@516) (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@517) (or (= ($generated ($generated@@81 $generated@@515 $generated@@518)) 0) (= ($generated ($generated@@81 $generated@@516 $generated@@518)) 0)))
 :pattern ( ($generated@@81 $generated@@515 $generated@@518))
 :pattern ( ($generated@@81 $generated@@516 $generated@@518))
)))))
 :pattern ( ($generated@@514 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
 (not ($generated@@0 ($generated@@81 ($generated@@395 $generated@@520) $generated@@519))))
 :pattern ( (let (($generated@@520 (type $generated@@519)))
($generated@@81 ($generated@@395 $generated@@520) $generated@@519)))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@523 $generated@@524)) $generated@@62) (= ($generated@@521 ($generated@@135 $generated@@523 $generated@@524)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@136) (= ($generated@@499 ($generated@@256 $generated@@525)) ($generated@@500 $generated@@525)))
 :pattern ( ($generated@@499 ($generated@@256 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) ($generated@@212 $generated@@526 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@351 $generated@@2 $generated@@526)) $generated@@526) ($generated@@132 ($generated@@351 ($generated@@76 $generated@@145 $generated@@4) $generated@@526) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@526 ($generated@@75 0)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@221 $generated@@528))) (and (= ($generated@@256 ($generated@@351 ($generated@@76 $generated@@145 $generated@@4) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@351 ($generated@@76 $generated@@145 $generated@@4) $generated@@527) ($generated@@221 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@221 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@226 $generated@@530))) (and (= ($generated@@256 ($generated@@351 ($generated@@76 $generated@@145 $generated@@4) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@351 ($generated@@76 $generated@@145 $generated@@4) $generated@@529) ($generated@@226 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@226 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@531 ($generated@@150 $generated@@532))) (and (= ($generated@@256 ($generated@@351 ($generated@@76 $generated@@145 $generated@@2) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@351 ($generated@@76 $generated@@145 $generated@@2) $generated@@531) ($generated@@150 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@531 ($generated@@150 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) ($generated@@212 $generated@@533 ($generated@@461 $generated@@534))) (and (= ($generated@@256 ($generated@@351 ($generated@@250 $generated@@145) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@351 ($generated@@250 $generated@@145) $generated@@533) ($generated@@461 $generated@@534))))
 :pattern ( ($generated@@212 $generated@@533 ($generated@@461 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@535 ($generated@@150 $generated@@536) $generated@@537) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@535 $generated@@538)))) ($generated@@236 $generated@@538 $generated@@536 $generated@@537))
 :pattern ( ($generated@@81 $generated@@535 $generated@@538))
))))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@150 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@540 $generated@@542) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@540 $generated@@542) $generated@@541))
))))) ($generated@@236 ($generated@@143 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@136) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@545) (and ($generated@@134 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@64) ($generated@@74 $generated@@543 ($generated@@135 $generated@@546 $generated@@544) $generated@@545))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@135 $generated@@546 $generated@@544) $generated@@545))
))))) ($generated@@236 ($generated@@144 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@547) ($generated@@231 $generated@@548)) ($generated@@231 ($generated@@211 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@547) ($generated@@231 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@549)) ($generated@@231 ($generated@@256 $generated@@549)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@251 (type $generated@@550))))
 (=> (and (= (type $generated@@550) ($generated@@250 $generated@@551)) (= ($generated@@249 $generated@@550) 0)) (= $generated@@550 ($generated@@248 $generated@@551))))
 :pattern ( ($generated@@249 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@553)))
 (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@555 $generated@@2)) (= (type $generated@@554) $generated@@2)) (<= 0 ($generated $generated@@554))) (= ($generated@@261 ($generated@@82 $generated@@552 $generated@@553 $generated@@554)) (+ (- ($generated@@261 $generated@@552) ($generated ($generated@@81 $generated@@552 $generated@@553))) ($generated $generated@@554)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@552 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@2)) ($generated@@74 $generated@@557 $generated@@46 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@46 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@3)) ($generated@@74 $generated@@559 $generated@@47 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@47 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@4)) ($generated@@74 $generated@@561 $generated@@44 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@44 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@419)) ($generated@@74 $generated@@563 $generated@@45 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@45 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@145)) ($generated@@74 $generated@@565 $generated@@48 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@48 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@250 $generated@@145)) (= (type $generated@@567) $generated@@64)) (= ($generated@@132 $generated@@566 ($generated@@461 $generated@@567)) (forall (($generated@@568 Int) ) (!  (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@249 $generated@@566))) ($generated@@212 ($generated@@462 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@462 $generated@@566 $generated@@568))
))))
 :pattern ( ($generated@@132 $generated@@566 ($generated@@461 $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 Int) ) (!  (=> (= (type $generated@@570) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@249 $generated@@570))) (< ($generated@@500 ($generated@@351 $generated@@136 ($generated@@462 $generated@@570 $generated@@571))) ($generated@@569 $generated@@570))))
 :pattern ( ($generated@@500 ($generated@@351 $generated@@136 ($generated@@462 $generated@@570 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@379 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@267 $generated@@572) ($generated@@221 $generated@@573)) ($generated@@132 ($generated@@310 $generated@@572) ($generated@@221 $generated@@574))) ($generated@@132 ($generated@@350 $generated@@572) ($generated@@221 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@379 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) ($generated@@132 $generated@@575 ($generated@@387 $generated@@576 $generated@@577))) (and (and ($generated@@132 ($generated@@285 $generated@@575) ($generated@@226 $generated@@576)) ($generated@@132 ($generated@@321 $generated@@575) ($generated@@226 $generated@@577))) ($generated@@132 ($generated@@361 $generated@@575) ($generated@@226 ($generated@@135 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@132 $generated@@575 ($generated@@387 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@2) ($generated@@132 $generated@@578 $generated@@46))
 :pattern ( ($generated@@132 $generated@@578 $generated@@46))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@3) ($generated@@132 $generated@@579 $generated@@47))
 :pattern ( ($generated@@132 $generated@@579 $generated@@47))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@4) ($generated@@132 $generated@@580 $generated@@44))
 :pattern ( ($generated@@132 $generated@@580 $generated@@44))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@419) ($generated@@132 $generated@@581 $generated@@45))
 :pattern ( ($generated@@132 $generated@@581 $generated@@45))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@145) ($generated@@132 $generated@@582 $generated@@48))
 :pattern ( ($generated@@132 $generated@@582 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 (T@U) Bool)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () Int)
(assert  (and (and (and (and (and (= (type $generated@@583) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@584) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@586) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@587) $generated@@77)) (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@590) ($generated@@76 $generated@@145 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@592 true))
(let (($generated@@593  (and (=> (= (ControlFlow 0 3) (- 0 4)) (forall (($generated@@594 Int) ) (!  (=> true (= ($generated@@0 ($generated@@81 $generated@@584 ($generated@@256 ($generated@@8 $generated@@594)))) (> ($generated ($generated@@81 $generated@@583 ($generated@@256 ($generated@@8 $generated@@594)))) 0)))
 :pattern ( ($generated@@81 $generated@@583 ($generated@@256 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@81 $generated@@584 ($generated@@256 ($generated@@8 $generated@@594))))
))) (=> (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@2) true) (= ($generated@@0 ($generated@@81 $generated@@584 ($generated@@256 $generated@@595))) (> ($generated ($generated@@81 $generated@@583 ($generated@@256 $generated@@595))) 0)))
 :pattern ( ($generated@@81 $generated@@583 ($generated@@256 $generated@@595)))
 :pattern ( ($generated@@81 $generated@@584 ($generated@@256 $generated@@595)))
)) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@514 $generated@@583 ($generated@@262 $generated@@145)))))))
(let (($generated@@596  (=> (= $generated@@584 ($generated@@341 $generated@@583 0 $generated@@583)) (and (=> (= (ControlFlow 0 6) 3) $generated@@593) (=> (= (ControlFlow 0 6) 5) $generated@@592)))))
(let (($generated@@597  (=> (and (>= 0 ($generated ($generated@@81 $generated@@583 ($generated@@256 ($generated@@8 $generated@@585))))) (= (ControlFlow 0 8) 6)) $generated@@596)))
(let (($generated@@598  (=> (and (> ($generated ($generated@@81 $generated@@583 ($generated@@256 ($generated@@8 $generated@@585)))) 0) (= (ControlFlow 0 7) 6)) $generated@@596)))
(let (($generated@@599  (and (=> (= (ControlFlow 0 9) 7) $generated@@598) (=> (= (ControlFlow 0 9) 8) $generated@@597))))
(let (($generated@@600 true))
(let (($generated@@601  (=> (= $generated@@586 ($generated@@156 $generated@@587 $generated@@588 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@599) (=> (= (ControlFlow 0 10) 1) $generated@@600)))))
(let (($generated@@602  (=> (and (and ($generated@@235 $generated@@588) ($generated@@589 $generated@@588)) (and ($generated@@132 $generated@@583 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@583 ($generated@@150 $generated@@46) $generated@@588))) (=> (and (and (and ($generated@@132 $generated@@590 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@590 ($generated@@221 $generated@@46) $generated@@588)) true) (and (= 0 $generated@@591) (= (ControlFlow 0 11) 10))) $generated@@601))))
$generated@@602))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@424 (T@U) Int)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@469 (T@U Int) T@U)
(declare-fun $generated@@478 (T@U) Int)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@521 (T@T) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@271 (type $generated@@332))))
(let (($generated@@334 ($generated@@270 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@269 $generated@@334 $generated@@333)) (= (= ($generated@@331 $generated@@332) 0) (= $generated@@332 ($generated@@268 $generated@@334 $generated@@333))))))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@221 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@221 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@340) $generated@@64)) (= (type $generated@@341) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@339 ($generated@@226 $generated@@340) $generated@@341) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@145) ($generated@@0 ($generated@@81 $generated@@339 $generated@@342))) ($generated@@236 $generated@@342 $generated@@340 $generated@@341))
 :pattern ( ($generated@@81 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@74 $generated@@339 ($generated@@226 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@344) $generated@@343)) 0))
 :pattern ( (let (($generated@@344 (type $generated@@343)))
($generated@@81 ($generated@@262 $generated@@344) $generated@@343)))
)))
(assert  (and (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@345 $generated@@348)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@345 $generated@@348))
)) (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@346 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@346 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@271 (type $generated@@351))))
(let (($generated@@353 ($generated@@270 (type $generated@@351))))
(= (type ($generated@@347 $generated@@351)) ($generated@@76 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@347 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@355) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@354) ($generated@@143 ($generated@@346 $generated@@136 $generated@@355)))) (= ($generated@@81 ($generated@@347 $generated@@354) ($generated@@143 ($generated@@346 $generated@@136 $generated@@355))) ($generated@@144 ($generated@@346 $generated@@136 $generated@@355))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))
)))
(assert  (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@358)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@356 $generated@@358))
)) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@289 (type $generated@@359))))
(let (($generated@@361 ($generated@@288 (type $generated@@359))))
(= (type ($generated@@357 $generated@@359)) ($generated@@76 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@363) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@362) ($generated@@143 ($generated@@346 $generated@@136 $generated@@363)))) (= ($generated@@81 ($generated@@357 $generated@@362) ($generated@@143 ($generated@@346 $generated@@136 $generated@@363))) ($generated@@144 ($generated@@346 $generated@@136 $generated@@363))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(let (($generated@@367 ($generated@@270 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@269 $generated@@367 $generated@@366)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@364) $generated@@365)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@364) $generated@@368)) (= $generated@@365 ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@364) $generated@@368))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@288 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@287 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@369) $generated@@373))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@64)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@377) $generated@@381))) (and ($generated@@236 ($generated@@81 ($generated@@347 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@236 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@64)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@385) $generated@@389))) (and ($generated@@236 ($generated@@81 ($generated@@357 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@236 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@76 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@289 (type $generated@@392))))
(let (($generated@@394 ($generated@@288 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@287 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@286 $generated@@394 $generated@@393)) (= ($generated@@285 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@285 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@289 (type $generated@@395))))
(let (($generated@@397 ($generated@@288 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@287 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@286 $generated@@397 $generated@@396)) (= ($generated@@321 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@321 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@289 (type $generated@@398))))
(let (($generated@@400 ($generated@@288 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@287 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@286 $generated@@400 $generated@@399)) (= ($generated@@356 $generated@@398) ($generated@@390 $generated@@145))))))
 :pattern ( ($generated@@356 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@271 (type $generated@@401))))
(let (($generated@@403 ($generated@@270 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@269 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@268 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@145) (= (type $generated@@405) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) ($generated@@256 ($generated@@211 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@345 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@289 (type $generated@@406))))
(let (($generated@@408 ($generated@@288 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@287 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@286 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@145) (= (type $generated@@410) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) ($generated@@256 ($generated@@211 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@356 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@46)) (and (= ($generated@@256 ($generated@@346 $generated@@2 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@346 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@212 $generated@@412 $generated@@47)) (and (= ($generated@@256 ($generated@@346 $generated@@3 $generated@@412)) $generated@@412) ($generated@@132 ($generated@@346 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@44)) (and (= ($generated@@256 ($generated@@346 $generated@@4 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@346 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 20))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@212 $generated@@415 $generated@@45)) (and (= ($generated@@256 ($generated@@346 $generated@@414 $generated@@415)) $generated@@415) ($generated@@132 ($generated@@346 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@416) $generated@@417) ($generated@@132 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@79 (type $generated@@419))))
(= (type ($generated@@418 $generated@@419)) ($generated@@76 $generated@@420 $generated@@2)))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
 (=> (= (type $generated@@421) ($generated@@76 $generated@@423 $generated@@4)) (and (= (= ($generated ($generated@@81 ($generated@@418 $generated@@421) $generated@@422)) 0)  (not ($generated@@0 ($generated@@81 $generated@@421 $generated@@422)))) (= (= ($generated ($generated@@81 ($generated@@418 $generated@@421) $generated@@422)) 1) ($generated@@0 ($generated@@81 $generated@@421 $generated@@422))))))
 :pattern ( ($generated@@81 ($generated@@418 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@79 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@76 $generated@@426 $generated@@4)) (<= 0 ($generated@@424 $generated@@425))))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@79 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@76 $generated@@428 $generated@@2)) (<= 0 ($generated@@261 $generated@@427))))
 :pattern ( ($generated@@261 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@251 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@250 $generated@@430)) (<= 0 ($generated@@249 $generated@@429))))
 :pattern ( ($generated@@249 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@271 (type $generated@@431))))
(let (($generated@@433 ($generated@@270 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@269 $generated@@433 $generated@@432)) (<= 0 ($generated@@331 $generated@@431)))))
 :pattern ( ($generated@@331 $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@374 $generated@@436 $generated@@437)) $generated@@436))
 :pattern ( ($generated@@374 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@374 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@374 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@72 ($generated@@374 $generated@@442 $generated@@443)) $generated@@58))
 :pattern ( ($generated@@374 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@382 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@382 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@382 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@382 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@382 $generated@@452 $generated@@453)) $generated@@59))
 :pattern ( ($generated@@382 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@145) (= (type $generated@@455) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@454 $generated@@455)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@135 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@135 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@135 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@135 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@145) (= (type $generated@@465) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@211 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) (= (type $generated@@467) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@211 $generated@@466 $generated@@467))
)))
(assert  (and (forall (($generated@@470 T@U) ) (! (= (type ($generated@@468 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@470))
)) (forall (($generated@@471 T@U) ($generated@@472 Int) ) (! (let (($generated@@473 ($generated@@251 (type $generated@@471))))
(= (type ($generated@@469 $generated@@471 $generated@@472)) $generated@@473))
 :pattern ( ($generated@@469 $generated@@471 $generated@@472))
))))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@474) ($generated@@250 $generated@@145)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@468 $generated@@475) $generated@@476) (forall (($generated@@477 Int) ) (!  (=> (and (<= 0 $generated@@477) (< $generated@@477 ($generated@@249 $generated@@474))) ($generated@@236 ($generated@@469 $generated@@474 $generated@@477) $generated@@475 $generated@@476))
 :pattern ( ($generated@@469 $generated@@474 $generated@@477))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@468 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@478 ($generated@@75 $generated@@479)) $generated@@479)
 :pattern ( ($generated@@75 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@221 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@221 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@483)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@226 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@226 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@487)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@150 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@150 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@491)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@468 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@468 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@468 $generated@@495)) $generated@@57))
 :pattern ( ($generated@@468 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
(= ($generated@@346 $generated@@497 ($generated@@256 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@256 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) (= ($generated@@132 $generated@@498 ($generated@@374 $generated@@499 $generated@@500)) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@498) $generated@@501))) (and ($generated@@212 ($generated@@81 ($generated@@347 $generated@@498) $generated@@501) $generated@@500) ($generated@@212 $generated@@501 $generated@@499)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@498) $generated@@501))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@498) $generated@@501))
))))
 :pattern ( ($generated@@132 $generated@@498 ($generated@@374 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@64)) (= ($generated@@132 $generated@@502 ($generated@@382 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@502) $generated@@505))) (and ($generated@@212 ($generated@@81 ($generated@@357 $generated@@502) $generated@@505) $generated@@504) ($generated@@212 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@502) $generated@@505))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@132 $generated@@502 ($generated@@382 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@145)) (< ($generated@@506 $generated@@508) ($generated@@507 ($generated@@211 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@211 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (< ($generated@@506 $generated@@511) ($generated@@507 ($generated@@211 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@211 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@512 ($generated@@374 $generated@@513 $generated@@514))) (and (= ($generated@@256 ($generated@@346 ($generated@@269 $generated@@145 $generated@@145) $generated@@512)) $generated@@512) ($generated@@132 ($generated@@346 ($generated@@269 $generated@@145 $generated@@145) $generated@@512) ($generated@@374 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@374 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@382 $generated@@516 $generated@@517))) (and (= ($generated@@256 ($generated@@346 ($generated@@287 $generated@@145 $generated@@145) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@346 ($generated@@287 $generated@@145 $generated@@145) $generated@@515) ($generated@@382 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@382 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@145)) ($generated@@212 $generated@@520 ($generated@@135 $generated@@518 $generated@@519))) (and (= ($generated@@256 ($generated@@346 $generated@@136 $generated@@520)) $generated@@520) ($generated@@132 ($generated@@346 $generated@@136 $generated@@520) ($generated@@135 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@135 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@522 T@T) ) (! (= (type ($generated@@521 $generated@@522)) ($generated@@76 $generated@@522 $generated@@4))
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@81 ($generated@@521 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@81 ($generated@@521 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
 (not ($generated@@0 ($generated@@81 ($generated@@390 $generated@@526) $generated@@525))))
 :pattern ( (let (($generated@@526 (type $generated@@525)))
($generated@@81 ($generated@@390 $generated@@526) $generated@@525)))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@529 $generated@@530)) $generated@@62) (= ($generated@@527 ($generated@@135 $generated@@529 $generated@@530)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@136) (= ($generated@@506 ($generated@@256 $generated@@531)) ($generated@@507 $generated@@531)))
 :pattern ( ($generated@@506 ($generated@@256 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@79 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@76 $generated@@533 $generated@@4)) (= ($generated@@261 ($generated@@418 $generated@@532)) ($generated@@424 $generated@@532))))
 :pattern ( ($generated@@261 ($generated@@418 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@271 (type $generated@@534))))
(let (($generated@@536 ($generated@@270 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@269 $generated@@536 $generated@@535)) (= ($generated@@424 ($generated@@267 $generated@@534)) ($generated@@331 $generated@@534)))))
 :pattern ( ($generated@@424 ($generated@@267 $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@271 (type $generated@@537))))
(let (($generated@@539 ($generated@@270 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@269 $generated@@539 $generated@@538)) (= ($generated@@424 ($generated@@345 $generated@@537)) ($generated@@331 $generated@@537)))))
 :pattern ( ($generated@@424 ($generated@@345 $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@271 (type $generated@@540))))
(let (($generated@@542 ($generated@@270 (type $generated@@540))))
 (=> (= (type $generated@@540) ($generated@@269 $generated@@542 $generated@@541)) (<= ($generated@@424 ($generated@@310 $generated@@540)) ($generated@@331 $generated@@540)))))
 :pattern ( ($generated@@424 ($generated@@310 $generated@@540)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) ($generated@@212 $generated@@543 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@346 $generated@@2 $generated@@543)) $generated@@543) ($generated@@132 ($generated@@346 ($generated@@76 $generated@@145 $generated@@4) $generated@@543) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@543 ($generated@@75 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@212 $generated@@544 ($generated@@221 $generated@@545))) (and (= ($generated@@256 ($generated@@346 ($generated@@76 $generated@@145 $generated@@4) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@346 ($generated@@76 $generated@@145 $generated@@4) $generated@@544) ($generated@@221 $generated@@545))))
 :pattern ( ($generated@@212 $generated@@544 ($generated@@221 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@212 $generated@@546 ($generated@@226 $generated@@547))) (and (= ($generated@@256 ($generated@@346 ($generated@@76 $generated@@145 $generated@@4) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@346 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@226 $generated@@547))))
 :pattern ( ($generated@@212 $generated@@546 ($generated@@226 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@212 $generated@@548 ($generated@@150 $generated@@549))) (and (= ($generated@@256 ($generated@@346 ($generated@@76 $generated@@145 $generated@@2) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@346 ($generated@@76 $generated@@145 $generated@@2) $generated@@548) ($generated@@150 $generated@@549))))
 :pattern ( ($generated@@212 $generated@@548 ($generated@@150 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@212 $generated@@550 ($generated@@468 $generated@@551))) (and (= ($generated@@256 ($generated@@346 ($generated@@250 $generated@@145) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@346 ($generated@@250 $generated@@145) $generated@@550) ($generated@@468 $generated@@551))))
 :pattern ( ($generated@@212 $generated@@550 ($generated@@468 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@79 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@76 $generated@@553 $generated@@4)) (and (= (= ($generated@@424 $generated@@552) 0) (= $generated@@552 ($generated@@521 $generated@@553))) (=> (not (= ($generated@@424 $generated@@552) 0)) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@553) ($generated@@0 ($generated@@81 $generated@@552 $generated@@554)))
 :no-pattern (type $generated@@554)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
))))))
 :pattern ( ($generated@@424 $generated@@552))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@555 ($generated@@150 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@555 $generated@@558)))) ($generated@@236 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@81 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@150 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@136) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@561) (and ($generated@@134 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@74 $generated@@559 ($generated@@135 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@135 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@236 ($generated@@143 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@565) (and ($generated@@134 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@135 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@135 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@236 ($generated@@144 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@145) (= (type $generated@@568) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@567) ($generated@@231 $generated@@568)) ($generated@@231 ($generated@@211 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@567) ($generated@@231 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@569)) ($generated@@231 ($generated@@256 $generated@@569)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@251 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@250 $generated@@571)) (= ($generated@@249 $generated@@570) 0)) (= $generated@@570 ($generated@@248 $generated@@571))))
 :pattern ( ($generated@@249 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@261 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@261 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@414)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@145)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@250 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= ($generated@@132 $generated@@586 ($generated@@468 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@249 $generated@@586))) ($generated@@212 ($generated@@469 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@469 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@468 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@249 $generated@@590))) (< ($generated@@507 ($generated@@346 $generated@@136 ($generated@@469 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@507 ($generated@@346 $generated@@136 ($generated@@469 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@132 $generated@@592 ($generated@@374 $generated@@593 $generated@@594))) (and (and ($generated@@132 ($generated@@267 $generated@@592) ($generated@@221 $generated@@593)) ($generated@@132 ($generated@@310 $generated@@592) ($generated@@221 $generated@@594))) ($generated@@132 ($generated@@345 $generated@@592) ($generated@@221 ($generated@@135 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@374 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@132 $generated@@595 ($generated@@382 $generated@@596 $generated@@597))) (and (and ($generated@@132 ($generated@@285 $generated@@595) ($generated@@226 $generated@@596)) ($generated@@132 ($generated@@321 $generated@@595) ($generated@@226 $generated@@597))) ($generated@@132 ($generated@@356 $generated@@595) ($generated@@226 ($generated@@135 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@132 $generated@@595 ($generated@@382 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@132 $generated@@598 $generated@@46))
 :pattern ( ($generated@@132 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@132 $generated@@599 $generated@@47))
 :pattern ( ($generated@@132 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@132 $generated@@600 $generated@@44))
 :pattern ( ($generated@@132 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@414) ($generated@@132 $generated@@601 $generated@@45))
 :pattern ( ($generated@@132 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@145) ($generated@@132 $generated@@602 $generated@@48))
 :pattern ( ($generated@@132 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 (T@U) Bool)
(declare-fun $generated@@608 () Int)
(assert  (and (and (and (= (type $generated@@603) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@604) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@605) $generated@@77)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@609 true))
(let (($generated@@610  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@611 Int) ) (!  (=> true (= ($generated@@0 ($generated@@81 $generated@@603 ($generated@@256 ($generated@@8 $generated@@611)))) (> ($generated ($generated@@81 ($generated@@418 $generated@@603) ($generated@@256 ($generated@@8 $generated@@611)))) 0)))
 :pattern ( ($generated@@81 ($generated@@418 $generated@@603) ($generated@@256 ($generated@@8 $generated@@611))))
 :pattern ( ($generated@@81 $generated@@603 ($generated@@256 ($generated@@8 $generated@@611))))
)))))
(let (($generated@@612  (=> (= $generated@@604 ($generated@@156 $generated@@605 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 2) $generated@@610) (=> (= (ControlFlow 0 4) 3) $generated@@609)))))
(let (($generated@@613  (=> (and ($generated@@235 $generated@@606) ($generated@@607 $generated@@606)) (=> (and (and ($generated@@132 $generated@@603 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@603 ($generated@@221 $generated@@46) $generated@@606)) (and (= 0 $generated@@608) (= (ControlFlow 0 5) 4))) $generated@@612))))
$generated@@613)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U Int) T@U)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U) Int)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U) Bool)
(declare-fun $generated@@204 (T@U Int) T@U)
(declare-fun $generated@@205 (T@U T@U) T@U)
(declare-fun $generated@@206 (Int) T@U)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@232 (Int) Int)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U Int) T@U)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@572 (T@U T@U T@U) T@U)
(declare-fun $generated@@573 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@574 (T@T T@T) T@T)
(declare-fun $generated@@575 (T@T) T@T)
(declare-fun $generated@@576 (T@T) T@T)
(declare-fun $generated@@577 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@633 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147)  (or (= $generated@@146 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@146 ($generated@@137 $generated@@145) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@151) $generated@@81)) (and (and ($generated@@148 $generated@@150) (and (not (= $generated@@151 $generated@@138)) (= ($generated@@139 $generated@@151) ($generated@@137 $generated@@149)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@151)) $generated@@46 $generated@@150))
 :pattern ( ($generated@@136 $generated@@151) ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60) ($generated@@137 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@140 $generated@@152 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@152 ($generated@@79 0)))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@153 $generated@@154)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@67) (= (type $generated@@156) $generated@@81)) (= (type $generated@@157) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157) ($generated@@78 $generated@@156 ($generated@@137 $generated@@155) $generated@@157)))
 :pattern ( ($generated@@78 $generated@@156 ($generated@@153 $generated@@155) $generated@@157))
)))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@67) (= (type $generated@@164) $generated@@67)) (= (type $generated@@165) $generated@@160)) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@140 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert  (and (and (and (forall (($generated@@179 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@179)) 16)) (forall (($generated@@180 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@176 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 Int) ) (! (let (($generated@@183 ($generated@@178 (type $generated@@181))))
(= (type ($generated@@174 $generated@@181 $generated@@182)) ($generated@@176 $generated@@183)))
 :pattern ( ($generated@@174 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(= (type ($generated@@175 $generated@@184 $generated@@185)) ($generated@@176 $generated@@186)))
 :pattern ( ($generated@@175 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Int) ) (! (let (($generated@@190 (type $generated@@188)))
 (=> (= (type $generated@@187) ($generated@@176 $generated@@190)) (=> (and (<= 0 $generated@@189) (<= $generated@@189 ($generated@@177 $generated@@187))) (= ($generated@@174 ($generated@@175 $generated@@187 $generated@@188) $generated@@189) ($generated@@175 ($generated@@174 $generated@@187 $generated@@189) $generated@@188)))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@187 $generated@@188) $generated@@189))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@195) $generated@@67)) ($generated@@140 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@140 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= (type ($generated@@196 $generated@@198 $generated@@199)) $generated@@160)
 :pattern ( ($generated@@196 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and (and (= (type $generated@@200) $generated@@67) (= (type $generated@@201) $generated@@67)) (= (type $generated@@202) $generated@@169)) (= (type $generated@@203) $generated@@169)) (= ($generated@@140 ($generated@@196 $generated@@202 $generated@@203) ($generated@@159 $generated@@200 $generated@@201))  (and ($generated@@197 $generated@@202 $generated@@200) ($generated@@197 $generated@@203 $generated@@201))))
 :pattern ( ($generated@@140 ($generated@@196 $generated@@202 $generated@@203) ($generated@@159 $generated@@200 $generated@@201)))
)))
(assert  (and (and (forall (($generated@@207 T@U) ($generated@@208 Int) ) (! (let (($generated@@209 ($generated@@178 (type $generated@@207))))
(= (type ($generated@@204 $generated@@207 $generated@@208)) ($generated@@176 $generated@@209)))
 :pattern ( ($generated@@204 $generated@@207 $generated@@208))
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= (type ($generated@@205 $generated@@210 $generated@@211)) ($generated@@176 $generated@@169))
 :pattern ( ($generated@@205 $generated@@210 $generated@@211))
))) (forall (($generated@@212 Int) ) (! (= (type ($generated@@206 $generated@@212)) ($generated@@69 $generated@@169))
 :pattern ( ($generated@@206 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Int) ($generated@@216 Int) ) (!  (=> (and (= (type $generated@@213) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@214) $generated@@81)) (=> (and (and (= (+ $generated@@215 1) $generated@@216) (<= 0 $generated@@215)) (<= $generated@@216 ($generated@@136 $generated@@214))) (= ($generated@@204 ($generated@@205 $generated@@213 $generated@@214) $generated@@216) ($generated@@175 ($generated@@204 ($generated@@205 $generated@@213 $generated@@214) $generated@@215) ($generated@@87 ($generated@@85 $generated@@213 $generated@@214) ($generated@@206 $generated@@215))))))
 :pattern ( ($generated@@204 ($generated@@205 $generated@@213 $generated@@214) $generated@@215) ($generated@@204 ($generated@@205 $generated@@213 $generated@@214) $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@217) $generated@@160) (= (type $generated@@218) $generated@@160)) (= ($generated@@166 $generated@@217 $generated@@218) (= $generated@@217 $generated@@218)))
 :pattern ( ($generated@@166 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ) (! (let (($generated@@221 ($generated@@178 (type $generated@@219))))
 (=> (and (= (type $generated@@219) ($generated@@176 $generated@@221)) (= $generated@@220 0)) (= ($generated@@174 $generated@@219 $generated@@220) $generated@@219)))
 :pattern ( ($generated@@174 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ) (! (= (type ($generated@@222 $generated@@223)) $generated@@67)
 :pattern ( ($generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@225) $generated@@67)) (= ($generated@@140 $generated@@224 ($generated@@222 $generated@@225)) (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@169) ($generated@@0 ($generated@@85 $generated@@224 $generated@@226))) ($generated@@197 $generated@@226 $generated@@225))
 :pattern ( ($generated@@85 $generated@@224 $generated@@226))
))))
 :pattern ( ($generated@@140 $generated@@224 ($generated@@222 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@67)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@230) $generated@@67)) (= ($generated@@140 $generated@@229 ($generated@@227 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@169) ($generated@@0 ($generated@@85 $generated@@229 $generated@@231))) ($generated@@197 $generated@@231 $generated@@230))
 :pattern ( ($generated@@85 $generated@@229 $generated@@231))
))))
 :pattern ( ($generated@@140 $generated@@229 ($generated@@227 $generated@@230)))
)))
(assert (forall (($generated@@233 Int) ) (! (= ($generated@@232 $generated@@233) $generated@@233)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (let (($generated@@236 (type $generated@@235)))
(= (type ($generated@@234 $generated@@235)) $generated@@236))
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (= ($generated@@234 $generated@@237) $generated@@237)
 :pattern ( ($generated@@234 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) ($generated@@176 $generated@@169)) (= (type $generated@@241) $generated@@169)) (= (type $generated@@242) $generated@@67)) (and ($generated@@140 $generated@@240 ($generated@@238 $generated@@242)) ($generated@@197 $generated@@241 $generated@@242))) ($generated@@140 ($generated@@175 $generated@@240 $generated@@241) ($generated@@238 $generated@@242)))
 :pattern ( ($generated@@140 ($generated@@175 $generated@@240 $generated@@241) ($generated@@238 $generated@@242)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 Int) ) (! (let (($generated@@246 ($generated@@178 (type $generated@@244))))
(= (type ($generated@@243 $generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 Int) ($generated@@249 Int) ) (! (let (($generated@@250 ($generated@@178 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@176 $generated@@250)) (=> (and (and (<= 0 $generated@@249) (< $generated@@249 $generated@@248)) (< $generated@@249 ($generated@@177 $generated@@247))) (= ($generated@@243 ($generated@@204 $generated@@247 $generated@@248) $generated@@249) ($generated@@243 $generated@@247 $generated@@249)))))
 :weight 25
 :pattern ( ($generated@@243 ($generated@@204 $generated@@247 $generated@@248) $generated@@249))
 :pattern ( ($generated@@243 $generated@@247 $generated@@249) ($generated@@204 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@169)) (= (type $generated@@255) $generated@@169)) (= (type $generated@@256) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@148 $generated@@256)) (= ($generated@@78 ($generated@@196 $generated@@254 $generated@@255) ($generated@@159 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@78 ($generated@@196 $generated@@254 $generated@@255) ($generated@@159 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 Int) ) (! (let (($generated@@259 ($generated@@178 (type $generated@@257))))
 (=> (= (type $generated@@257) ($generated@@176 $generated@@259)) (=> (and (<= 0 $generated@@258) (<= $generated@@258 ($generated@@177 $generated@@257))) (= ($generated@@177 ($generated@@174 $generated@@257 $generated@@258)) (- ($generated@@177 $generated@@257) $generated@@258)))))
 :pattern ( ($generated@@177 ($generated@@174 $generated@@257 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@71)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@160) (= ($generated@@158 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@178 (type $generated@@264))))
 (=> (and (= (type $generated@@264) ($generated@@176 $generated@@266)) (= (type $generated@@265) ($generated@@176 $generated@@266))) (= ($generated@@263 $generated@@264 $generated@@265)  (and (= ($generated@@177 $generated@@264) ($generated@@177 $generated@@265)) (forall (($generated@@267 Int) ) (!  (=> (and (<= 0 $generated@@267) (< $generated@@267 ($generated@@177 $generated@@264))) (= ($generated@@243 $generated@@264 $generated@@267) ($generated@@243 $generated@@265 $generated@@267)))
 :pattern ( ($generated@@243 $generated@@264 $generated@@267))
 :pattern ( ($generated@@243 $generated@@265 $generated@@267))
))))))
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 Int) ) (! (let (($generated@@271 ($generated@@178 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@176 $generated@@271)) (=> (and (<= 0 $generated@@270) (< $generated@@270 ($generated@@177 $generated@@269))) (< ($generated@@268 ($generated@@204 $generated@@269 $generated@@270)) ($generated@@268 $generated@@269)))))
 :pattern ( ($generated@@268 ($generated@@204 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@160) ($generated@@158 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@169) (= (type $generated@@274) $generated@@169)) (= $generated@@272 ($generated@@196 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@158 $generated@@272))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@176 $generated@@276))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@177 ($generated@@275 $generated@@277)) 0)
 :pattern ( ($generated@@275 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 Int) ) (! (let (($generated@@280 ($generated@@178 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@176 $generated@@280)) (=> (and (< 0 $generated@@279) (<= $generated@@279 ($generated@@177 $generated@@278))) (< ($generated@@268 ($generated@@174 $generated@@278 $generated@@279)) ($generated@@268 $generated@@278)))))
 :pattern ( ($generated@@268 ($generated@@174 $generated@@278 $generated@@279)))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
 (=> (= (type $generated@@281) ($generated@@176 $generated@@283)) (= ($generated@@177 ($generated@@175 $generated@@281 $generated@@282)) (+ 1 ($generated@@177 $generated@@281)))))
 :pattern ( ($generated@@175 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@81)) (= ($generated@@140 $generated@@285 ($generated@@153 $generated@@284))  (and ($generated@@140 $generated@@285 ($generated@@137 $generated@@284)) (not (= $generated@@285 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@285 ($generated@@153 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@169)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@251 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@78 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@251 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 Int) ($generated@@293 Int) ) (! (let (($generated@@294 ($generated@@178 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@176 $generated@@294)) (=> (and (and (<= 0 $generated@@292) (<= 0 $generated@@293)) (< $generated@@293 (- ($generated@@177 $generated@@291) $generated@@292))) (= ($generated@@243 ($generated@@174 $generated@@291 $generated@@292) $generated@@293) ($generated@@243 $generated@@291 (+ $generated@@293 $generated@@292))))))
 :weight 25
 :pattern ( ($generated@@243 ($generated@@174 $generated@@291 $generated@@292) $generated@@293))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@80 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@83 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@80 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@85 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@72)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@303)) $generated@@61) (= ($generated@@301 ($generated@@137 $generated@@303)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@67) (and (= ($generated@@76 ($generated@@153 $generated@@304)) $generated@@62) (= ($generated@@301 ($generated@@153 $generated@@304)) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 17)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@80 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 18)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@80 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@83 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@80 $generated@@342 $generated@@2)) (= ($generated@@192 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@85 $generated@@341 $generated@@343))) (<= ($generated ($generated@@85 $generated@@341 $generated@@343)) ($generated@@295 $generated@@341))))
 :pattern ( ($generated@@85 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@192 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@67) (= (type $generated@@345) $generated@@81)) (= ($generated@@140 $generated@@345 ($generated@@137 $generated@@344))  (or (= $generated@@345 $generated@@138) (= ($generated@@139 $generated@@345) ($generated@@137 $generated@@344)))))
 :pattern ( ($generated@@140 $generated@@345 ($generated@@137 $generated@@344)))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 Int) ($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
 (=> (= (type $generated@@346) ($generated@@176 $generated@@349)) (and (=> (= $generated@@347 ($generated@@177 $generated@@346)) (= ($generated@@243 ($generated@@175 $generated@@346 $generated@@348) $generated@@347) $generated@@348)) (=> (not (= $generated@@347 ($generated@@177 $generated@@346))) (= ($generated@@243 ($generated@@175 $generated@@346 $generated@@348) $generated@@347) ($generated@@243 $generated@@346 $generated@@347))))))
 :pattern ( ($generated@@243 ($generated@@175 $generated@@346 $generated@@348) $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@309 (type $generated@@350))))
(let (($generated@@352 ($generated@@308 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@307 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@306 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@305 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@309 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@80 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@309 (type $generated@@357))))
(let (($generated@@359 ($generated@@308 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@307 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@306 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@85 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@327 (type $generated@@361))))
(let (($generated@@363 ($generated@@326 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@325 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@324 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@323 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@80 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@327 (type $generated@@368))))
(let (($generated@@370 ($generated@@326 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@325 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@324 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@373) $generated@@81)) (forall (($generated@@374 Int) ) (!  (=> (and (<= 0 $generated@@374) (< $generated@@374 ($generated@@177 ($generated@@205 $generated@@372 $generated@@373)))) (= ($generated@@243 ($generated@@205 $generated@@372 $generated@@373) $generated@@374) ($generated@@87 ($generated@@85 $generated@@372 $generated@@373) ($generated@@206 $generated@@374))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@372 $generated@@373) ($generated@@206 $generated@@374)))
 :pattern ( ($generated@@243 ($generated@@205 $generated@@372 $generated@@373) $generated@@374))
)))
 :pattern ( ($generated@@205 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@376) $generated@@67)) (= ($generated@@140 $generated@@375 ($generated@@191 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@375 $generated@@377)))) ($generated@@197 $generated@@377 $generated@@376))
 :pattern ( ($generated@@85 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@140 $generated@@375 ($generated@@191 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@379) $generated@@67)) (= (type $generated@@380) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@378 ($generated@@222 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@169) ($generated@@0 ($generated@@85 $generated@@378 $generated@@381))) ($generated@@251 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@85 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@78 $generated@@378 ($generated@@222 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@80 $generated@@169 $generated@@4)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@382 ($generated@@227 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@169) ($generated@@0 ($generated@@85 $generated@@382 $generated@@385))) ($generated@@251 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@227 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@85 ($generated@@296 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@85 ($generated@@296 $generated@@387) $generated@@386)))
)))
(assert  (and (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@388 $generated@@391)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@388 $generated@@391))
)) (forall (($generated@@392 T@T) ($generated@@393 T@U) ) (! (= (type ($generated@@389 $generated@@392 $generated@@393)) $generated@@392)
 :pattern ( ($generated@@389 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@309 (type $generated@@394))))
(let (($generated@@396 ($generated@@308 (type $generated@@394))))
(= (type ($generated@@390 $generated@@394)) ($generated@@80 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@390 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@307 $generated@@169 $generated@@169)) (= (type $generated@@398) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@397) ($generated@@167 ($generated@@389 $generated@@160 $generated@@398)))) (= ($generated@@85 ($generated@@390 $generated@@397) ($generated@@167 ($generated@@389 $generated@@160 $generated@@398))) ($generated@@168 ($generated@@389 $generated@@160 $generated@@398))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@80 $generated@@169 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@327 (type $generated@@402))))
(let (($generated@@404 ($generated@@326 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@325 $generated@@169 $generated@@169)) (= (type $generated@@406) $generated@@169)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@405) ($generated@@167 ($generated@@389 $generated@@160 $generated@@406)))) (= ($generated@@85 ($generated@@400 $generated@@405) ($generated@@167 ($generated@@389 $generated@@160 $generated@@406))) ($generated@@168 ($generated@@389 $generated@@160 $generated@@406))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@308 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@307 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@354 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@354 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@326 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@325 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@85 ($generated@@365 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@307 $generated@@169 $generated@@169)) (= (type $generated@@421) $generated@@67)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@420) $generated@@424))) (and ($generated@@251 ($generated@@85 ($generated@@390 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@251 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@67)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@325 $generated@@169 $generated@@169)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) $generated@@67)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@428) $generated@@432))) (and ($generated@@251 ($generated@@85 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@251 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@178 (type $generated@@433))))
 (=> (and (and (= (type $generated@@433) ($generated@@176 $generated@@435)) (= (type $generated@@434) ($generated@@176 $generated@@435))) ($generated@@263 $generated@@433 $generated@@434)) (= $generated@@433 $generated@@434)))
 :pattern ( ($generated@@263 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 Int) ) (! (let (($generated@@438 ($generated@@178 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@176 $generated@@438)) (=> (and (<= 0 $generated@@437) (<= $generated@@437 ($generated@@177 $generated@@436))) (= ($generated@@177 ($generated@@204 $generated@@436 $generated@@437)) $generated@@437))))
 :pattern ( ($generated@@177 ($generated@@204 $generated@@436 $generated@@437)))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 Int) ) (!  (=> (and (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@441) $generated@@81)) (=> (and (and (and ($generated@@148 $generated@@440) (and (not (= $generated@@441 $generated@@138)) (= ($generated@@139 $generated@@441) ($generated@@137 $generated@@439)))) (and (<= 0 $generated@@442) (< $generated@@442 ($generated@@136 $generated@@441)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@440 $generated@@441) $generated@@60))) ($generated@@251 ($generated@@87 ($generated@@85 $generated@@440 $generated@@441) ($generated@@206 $generated@@442)) $generated@@439 $generated@@440)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@440 $generated@@441) ($generated@@206 $generated@@442)) ($generated@@137 $generated@@439))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@80 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@327 (type $generated@@445))))
(let (($generated@@447 ($generated@@326 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@325 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@324 $generated@@447 $generated@@446)) (= ($generated@@323 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@323 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@327 (type $generated@@448))))
(let (($generated@@450 ($generated@@326 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@325 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@324 $generated@@450 $generated@@449)) (= ($generated@@365 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@365 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@327 (type $generated@@451))))
(let (($generated@@453 ($generated@@326 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@325 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@324 $generated@@453 $generated@@452)) (= ($generated@@399 $generated@@451) ($generated@@443 $generated@@169))))))
 :pattern ( ($generated@@399 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@309 (type $generated@@454))))
(let (($generated@@456 ($generated@@308 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@307 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@306 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@169) (= (type $generated@@458) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@454) ($generated@@286 ($generated@@196 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@388 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@327 (type $generated@@459))))
(let (($generated@@461 ($generated@@326 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@325 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@324 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@169) (= (type $generated@@463) $generated@@169)) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@459) ($generated@@286 ($generated@@196 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@399 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@169) ($generated@@197 $generated@@464 $generated@@46)) (and (= ($generated@@286 ($generated@@389 $generated@@2 $generated@@464)) $generated@@464) ($generated@@140 ($generated@@389 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@197 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@169) ($generated@@197 $generated@@465 $generated@@47)) (and (= ($generated@@286 ($generated@@389 $generated@@3 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@389 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@197 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@169) ($generated@@197 $generated@@466 $generated@@44)) (and (= ($generated@@286 ($generated@@389 $generated@@4 $generated@@466)) $generated@@466) ($generated@@140 ($generated@@389 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@197 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 19))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@169) ($generated@@197 $generated@@468 $generated@@45)) (and (= ($generated@@286 ($generated@@389 $generated@@467 $generated@@468)) $generated@@468) ($generated@@140 ($generated@@389 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@197 $generated@@468 $generated@@45))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@197 ($generated@@286 $generated@@469) $generated@@470) ($generated@@140 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@197 ($generated@@286 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@81) (<= 0 ($generated@@136 $generated@@471)))
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@83 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@80 $generated@@473 $generated@@2)) (<= 0 ($generated@@295 $generated@@472))))
 :pattern ( ($generated@@295 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@178 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@176 $generated@@475)) (<= 0 ($generated@@177 $generated@@474))))
 :pattern ( ($generated@@177 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@417 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@417 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@417 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@417 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@76 ($generated@@417 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@417 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@425 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@425 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@425 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@425 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@76 ($generated@@425 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@425 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@169) (= (type $generated@@497) $generated@@169)) (= ($generated@@260 ($generated@@196 $generated@@496 $generated@@497)) $generated@@63))
 :pattern ( ($generated@@196 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@498 ($generated@@159 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@159 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@67) (= (type $generated@@505) $generated@@67)) (= ($generated@@502 ($generated@@159 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@159 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@169) (= (type $generated@@507) $generated@@169)) (= ($generated@@167 ($generated@@196 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@196 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@169) (= (type $generated@@509) $generated@@169)) (= ($generated@@168 ($generated@@196 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@196 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@176 $generated@@169)) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@510 ($generated@@238 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@177 $generated@@510))) ($generated@@251 ($generated@@243 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@243 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@78 $generated@@510 ($generated@@238 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@79 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@79 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@222 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@222 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@76 ($generated@@222 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@222 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@227 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@227 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@76 ($generated@@227 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@227 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@191 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@191 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@76 ($generated@@191 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@238 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@238 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@76 ($generated@@238 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@238 $generated@@531))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@75 ($generated@@206 $generated@@532)) 1)
 :pattern ( ($generated@@206 $generated@@532))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@206 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@206 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@67)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@67) (= ($generated@@535 ($generated@@137 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@137 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@153 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@153 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
(= ($generated@@389 $generated@@542 ($generated@@286 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@286 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@307 $generated@@169 $generated@@169)) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) $generated@@67)) (= ($generated@@140 $generated@@543 ($generated@@417 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@543) $generated@@546))) (and ($generated@@197 ($generated@@85 ($generated@@390 $generated@@543) $generated@@546) $generated@@545) ($generated@@197 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@543) $generated@@546))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@140 $generated@@543 ($generated@@417 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@325 $generated@@169 $generated@@169)) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) $generated@@67)) (= ($generated@@140 $generated@@547 ($generated@@425 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@169) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@547) $generated@@550))) (and ($generated@@197 ($generated@@85 ($generated@@400 $generated@@547) $generated@@550) $generated@@549) ($generated@@197 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@547) $generated@@550))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@140 $generated@@547 ($generated@@425 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 Int) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@67) (= (type $generated@@552) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@553) $generated@@81)) (and (and ($generated@@148 $generated@@552) (and (not (= $generated@@553 $generated@@138)) (= ($generated@@139 $generated@@553) ($generated@@137 $generated@@551)))) (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@136 $generated@@553))))) ($generated@@197 ($generated@@87 ($generated@@85 $generated@@552 $generated@@553) ($generated@@206 $generated@@554)) $generated@@551))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@552 $generated@@553) ($generated@@206 $generated@@554)) ($generated@@137 $generated@@551))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@169) (= (type $generated@@558) $generated@@169)) (< ($generated@@555 $generated@@557) ($generated@@556 ($generated@@196 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@196 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@169) (= (type $generated@@560) $generated@@169)) (< ($generated@@555 $generated@@560) ($generated@@556 ($generated@@196 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@196 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@169) (= (type $generated@@562) $generated@@67)) (= (type $generated@@563) $generated@@67)) ($generated@@197 $generated@@561 ($generated@@417 $generated@@562 $generated@@563))) (and (= ($generated@@286 ($generated@@389 ($generated@@307 $generated@@169 $generated@@169) $generated@@561)) $generated@@561) ($generated@@140 ($generated@@389 ($generated@@307 $generated@@169 $generated@@169) $generated@@561) ($generated@@417 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@197 $generated@@561 ($generated@@417 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@169) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) ($generated@@197 $generated@@564 ($generated@@425 $generated@@565 $generated@@566))) (and (= ($generated@@286 ($generated@@389 ($generated@@325 $generated@@169 $generated@@169) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@389 ($generated@@325 $generated@@169 $generated@@169) $generated@@564) ($generated@@425 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@197 $generated@@564 ($generated@@425 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@67) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@169)) ($generated@@197 $generated@@569 ($generated@@159 $generated@@567 $generated@@568))) (and (= ($generated@@286 ($generated@@389 $generated@@160 $generated@@569)) $generated@@569) ($generated@@140 ($generated@@389 $generated@@160 $generated@@569) ($generated@@159 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@197 $generated@@569 ($generated@@159 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@85 ($generated@@443 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@85 ($generated@@443 $generated@@571) $generated@@570)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@578 T@T) ($generated@@579 T@T) ) (= ($generated@@1 ($generated@@574 $generated@@578 $generated@@579)) 20)) (forall (($generated@@580 T@T) ($generated@@581 T@T) ) (! (= ($generated@@575 ($generated@@574 $generated@@580 $generated@@581)) $generated@@580)
 :pattern ( ($generated@@574 $generated@@580 $generated@@581))
))) (forall (($generated@@582 T@T) ($generated@@583 T@T) ) (! (= ($generated@@576 ($generated@@574 $generated@@582 $generated@@583)) $generated@@583)
 :pattern ( ($generated@@574 $generated@@582 $generated@@583))
))) (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@576 (type $generated@@584))))
(= (type ($generated@@572 $generated@@584 $generated@@585 $generated@@586)) $generated@@587))
 :pattern ( ($generated@@572 $generated@@584 $generated@@585 $generated@@586))
))) (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
(let (($generated@@593 (type $generated@@589)))
(= (type ($generated@@577 $generated@@588 $generated@@589 $generated@@590 $generated@@591)) ($generated@@574 $generated@@593 $generated@@592))))
 :pattern ( ($generated@@577 $generated@@588 $generated@@589 $generated@@590 $generated@@591))
))) (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@576 (type $generated@@594))))
 (=> (= (type $generated@@597) $generated@@598) (= ($generated@@572 ($generated@@577 $generated@@594 $generated@@595 $generated@@596 $generated@@597) $generated@@595 $generated@@596) $generated@@597)))
 :weight 0
))) (and (and (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (or (= $generated@@601 $generated@@603) (= ($generated@@572 ($generated@@577 $generated@@600 $generated@@601 $generated@@602 $generated@@599) $generated@@603 $generated@@604) ($generated@@572 $generated@@600 $generated@@603 $generated@@604)))
 :weight 0
)) (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (or (= $generated@@608 $generated@@610) (= ($generated@@572 ($generated@@577 $generated@@606 $generated@@607 $generated@@608 $generated@@605) $generated@@609 $generated@@610) ($generated@@572 $generated@@606 $generated@@609 $generated@@610)))
 :weight 0
))) (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (or true (= ($generated@@572 ($generated@@577 $generated@@612 $generated@@613 $generated@@614 $generated@@611) $generated@@615 $generated@@616) ($generated@@572 $generated@@612 $generated@@615 $generated@@616)))
 :weight 0
)))) (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (= (type ($generated@@573 $generated@@617 $generated@@618 $generated@@619 $generated@@620)) ($generated@@574 $generated@@81 $generated@@4))
 :pattern ( ($generated@@573 $generated@@617 $generated@@618 $generated@@619 $generated@@620))
))))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@70 (type $generated@@626))))
 (=> (and (and (and (and (and (= (type $generated@@621) $generated@@81) (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@623) ($generated@@69 $generated@@4))) (= (type $generated@@624) $generated@@81)) (= (type $generated@@625) $generated@@81)) (= (type $generated@@626) ($generated@@69 $generated@@627))) (= ($generated@@0 ($generated@@572 ($generated@@573 $generated@@621 $generated@@622 $generated@@623 $generated@@624) $generated@@625 $generated@@626))  (=> (and (not (= $generated@@625 $generated@@621)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@622 $generated@@625) $generated@@623))) (= $generated@@625 $generated@@624)))))
 :pattern ( ($generated@@572 ($generated@@573 $generated@@621 $generated@@622 $generated@@623 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@629) $generated@@81)) (= ($generated@@177 ($generated@@205 $generated@@628 $generated@@629)) ($generated@@136 $generated@@629)))
 :pattern ( ($generated@@177 ($generated@@205 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@67) (= (type $generated@@631) $generated@@67)) (and (= ($generated@@76 ($generated@@159 $generated@@630 $generated@@631)) $generated@@64) (= ($generated@@301 ($generated@@159 $generated@@630 $generated@@631)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@630 $generated@@631))
)))
(assert  (and (forall (($generated@@634 T@U) ) (! (let (($generated@@635 ($generated@@178 (type $generated@@634))))
(= (type ($generated@@632 $generated@@634)) ($generated@@176 $generated@@635)))
 :pattern ( ($generated@@632 $generated@@634))
)) (forall (($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@178 (type $generated@@636))))
(= (type ($generated@@633 $generated@@636)) $generated@@637))
 :pattern ( ($generated@@633 $generated@@636))
))))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@639)))
 (=> (= (type $generated@@638) ($generated@@176 $generated@@640)) (and (= ($generated@@632 ($generated@@175 $generated@@638 $generated@@639)) $generated@@638) (= ($generated@@633 ($generated@@175 $generated@@638 $generated@@639)) $generated@@639))))
 :pattern ( ($generated@@175 $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@160) (= ($generated@@555 ($generated@@286 $generated@@641)) ($generated@@556 $generated@@641)))
 :pattern ( ($generated@@555 ($generated@@286 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@169) ($generated@@197 $generated@@642 ($generated@@79 0))) (and (= ($generated@@286 ($generated@@389 $generated@@2 $generated@@642)) $generated@@642) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@169 $generated@@4) $generated@@642) ($generated@@79 0))))
 :pattern ( ($generated@@197 $generated@@642 ($generated@@79 0)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@169) (= (type $generated@@644) $generated@@67)) ($generated@@197 $generated@@643 ($generated@@222 $generated@@644))) (and (= ($generated@@286 ($generated@@389 ($generated@@80 $generated@@169 $generated@@4) $generated@@643)) $generated@@643) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@169 $generated@@4) $generated@@643) ($generated@@222 $generated@@644))))
 :pattern ( ($generated@@197 $generated@@643 ($generated@@222 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@169) (= (type $generated@@646) $generated@@67)) ($generated@@197 $generated@@645 ($generated@@227 $generated@@646))) (and (= ($generated@@286 ($generated@@389 ($generated@@80 $generated@@169 $generated@@4) $generated@@645)) $generated@@645) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@169 $generated@@4) $generated@@645) ($generated@@227 $generated@@646))))
 :pattern ( ($generated@@197 $generated@@645 ($generated@@227 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@169) (= (type $generated@@648) $generated@@67)) ($generated@@197 $generated@@647 ($generated@@191 $generated@@648))) (and (= ($generated@@286 ($generated@@389 ($generated@@80 $generated@@169 $generated@@2) $generated@@647)) $generated@@647) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@169 $generated@@2) $generated@@647) ($generated@@191 $generated@@648))))
 :pattern ( ($generated@@197 $generated@@647 ($generated@@191 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@649) $generated@@169) (= (type $generated@@650) $generated@@67)) ($generated@@197 $generated@@649 ($generated@@238 $generated@@650))) (and (= ($generated@@286 ($generated@@389 ($generated@@176 $generated@@169) $generated@@649)) $generated@@649) ($generated@@140 ($generated@@389 ($generated@@176 $generated@@169) $generated@@649) ($generated@@238 $generated@@650))))
 :pattern ( ($generated@@197 $generated@@649 ($generated@@238 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@67) (= (type $generated@@652) $generated@@169)) ($generated@@197 $generated@@652 ($generated@@137 $generated@@651))) (and (= ($generated@@286 ($generated@@389 $generated@@81 $generated@@652)) $generated@@652) ($generated@@140 ($generated@@389 $generated@@81 $generated@@652) ($generated@@137 $generated@@651))))
 :pattern ( ($generated@@197 $generated@@652 ($generated@@137 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@67) (= (type $generated@@654) $generated@@169)) ($generated@@197 $generated@@654 ($generated@@153 $generated@@653))) (and (= ($generated@@286 ($generated@@389 $generated@@81 $generated@@654)) $generated@@654) ($generated@@140 ($generated@@389 $generated@@81 $generated@@654) ($generated@@153 $generated@@653))))
 :pattern ( ($generated@@197 $generated@@654 ($generated@@153 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ($generated@@657 Int) ) (! (let (($generated@@658 ($generated@@178 (type $generated@@655))))
 (=> (= (type $generated@@655) ($generated@@176 $generated@@658)) (=> (and (and (<= 0 $generated@@656) (<= $generated@@656 $generated@@657)) (< $generated@@657 ($generated@@177 $generated@@655))) (= ($generated@@243 ($generated@@174 $generated@@655 $generated@@656) (- $generated@@657 $generated@@656)) ($generated@@243 $generated@@655 $generated@@657)))))
 :weight 25
 :pattern ( ($generated@@243 $generated@@655 $generated@@657) ($generated@@174 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@80 $generated@@169 $generated@@2)) (= (type $generated@@660) $generated@@67)) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@659 ($generated@@191 $generated@@660) $generated@@661) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@169) (< 0 ($generated ($generated@@85 $generated@@659 $generated@@662)))) ($generated@@251 $generated@@662 $generated@@660 $generated@@661))
 :pattern ( ($generated@@85 $generated@@659 $generated@@662))
))))
 :pattern ( ($generated@@78 $generated@@659 ($generated@@191 $generated@@660) $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 Int) ($generated@@665 Int) ) (! (let (($generated@@666 ($generated@@178 (type $generated@@663))))
 (=> (= (type $generated@@663) ($generated@@176 $generated@@666)) (=> (and (and (<= 0 $generated@@664) (<= 0 $generated@@665)) (<= (+ $generated@@664 $generated@@665) ($generated@@177 $generated@@663))) (= ($generated@@174 ($generated@@174 $generated@@663 $generated@@664) $generated@@665) ($generated@@174 $generated@@663 (+ $generated@@664 $generated@@665))))))
 :pattern ( ($generated@@174 ($generated@@174 $generated@@663 $generated@@664) $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@160) (= (type $generated@@668) $generated@@67)) (= (type $generated@@669) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@669) (and ($generated@@158 $generated@@667) (exists (($generated@@670 T@U) ) (!  (and (= (type $generated@@670) $generated@@67) ($generated@@78 $generated@@667 ($generated@@159 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@78 $generated@@667 ($generated@@159 $generated@@668 $generated@@670) $generated@@669))
))))) ($generated@@251 ($generated@@167 $generated@@667) $generated@@668 $generated@@669))
 :pattern ( ($generated@@251 ($generated@@167 $generated@@667) $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@160) (= (type $generated@@672) $generated@@67)) (= (type $generated@@673) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@148 $generated@@673) (and ($generated@@158 $generated@@671) (exists (($generated@@674 T@U) ) (!  (and (= (type $generated@@674) $generated@@67) ($generated@@78 $generated@@671 ($generated@@159 $generated@@674 $generated@@672) $generated@@673))
 :pattern ( ($generated@@78 $generated@@671 ($generated@@159 $generated@@674 $generated@@672) $generated@@673))
))))) ($generated@@251 ($generated@@168 $generated@@671) $generated@@672 $generated@@673))
 :pattern ( ($generated@@251 ($generated@@168 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@169) (= (type $generated@@676) $generated@@169)) (= ($generated@@196 ($generated@@234 $generated@@675) ($generated@@234 $generated@@676)) ($generated@@234 ($generated@@196 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@196 ($generated@@234 $generated@@675) ($generated@@234 $generated@@676)))
)))
(assert (forall (($generated@@677 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@232 $generated@@677))) ($generated@@234 ($generated@@286 ($generated@@8 $generated@@677))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@232 $generated@@677))))
)))
(assert (forall (($generated@@678 T@U) ) (! (= ($generated@@286 ($generated@@234 $generated@@678)) ($generated@@234 ($generated@@286 $generated@@678)))
 :pattern ( ($generated@@286 ($generated@@234 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@178 (type $generated@@679))))
 (=> (and (= (type $generated@@679) ($generated@@176 $generated@@680)) (= ($generated@@177 $generated@@679) 0)) (= $generated@@679 ($generated@@275 $generated@@680))))
 :pattern ( ($generated@@177 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 Int) ) (! (let (($generated@@683 ($generated@@178 (type $generated@@681))))
 (=> (and (= (type $generated@@681) ($generated@@176 $generated@@683)) (= $generated@@682 0)) (= ($generated@@204 $generated@@681 $generated@@682) ($generated@@275 $generated@@683))))
 :pattern ( ($generated@@204 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (! (let (($generated@@687 (type $generated@@685)))
 (=> (and (and (= (type $generated@@684) ($generated@@80 $generated@@687 $generated@@2)) (= (type $generated@@686) $generated@@2)) (<= 0 ($generated $generated@@686))) (= ($generated@@295 ($generated@@86 $generated@@684 $generated@@685 $generated@@686)) (+ (- ($generated@@295 $generated@@684) ($generated ($generated@@85 $generated@@684 $generated@@685))) ($generated $generated@@686)))))
 :pattern ( ($generated@@295 ($generated@@86 $generated@@684 $generated@@685 $generated@@686)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@689) $generated@@2)) ($generated@@78 $generated@@689 $generated@@46 $generated@@688))
 :pattern ( ($generated@@78 $generated@@689 $generated@@46 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@691) $generated@@3)) ($generated@@78 $generated@@691 $generated@@47 $generated@@690))
 :pattern ( ($generated@@78 $generated@@691 $generated@@47 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@693) $generated@@4)) ($generated@@78 $generated@@693 $generated@@44 $generated@@692))
 :pattern ( ($generated@@78 $generated@@693 $generated@@44 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@695) $generated@@467)) ($generated@@78 $generated@@695 $generated@@45 $generated@@694))
 :pattern ( ($generated@@78 $generated@@695 $generated@@45 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@697) $generated@@169)) ($generated@@78 $generated@@697 $generated@@48 $generated@@696))
 :pattern ( ($generated@@78 $generated@@697 $generated@@48 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@176 $generated@@169)) (= (type $generated@@699) $generated@@67)) (= ($generated@@140 $generated@@698 ($generated@@238 $generated@@699)) (forall (($generated@@700 Int) ) (!  (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@177 $generated@@698))) ($generated@@197 ($generated@@243 $generated@@698 $generated@@700) $generated@@699))
 :pattern ( ($generated@@243 $generated@@698 $generated@@700))
))))
 :pattern ( ($generated@@140 $generated@@698 ($generated@@238 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 Int) ) (!  (=> (= (type $generated@@701) ($generated@@176 $generated@@169)) (=> (and (<= 0 $generated@@702) (< $generated@@702 ($generated@@177 $generated@@701))) (< ($generated@@556 ($generated@@389 $generated@@160 ($generated@@243 $generated@@701 $generated@@702))) ($generated@@268 $generated@@701))))
 :pattern ( ($generated@@556 ($generated@@389 $generated@@160 ($generated@@243 $generated@@701 $generated@@702))))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (and (and (= (type $generated@@703) ($generated@@307 $generated@@169 $generated@@169)) (= (type $generated@@704) $generated@@67)) (= (type $generated@@705) $generated@@67)) ($generated@@140 $generated@@703 ($generated@@417 $generated@@704 $generated@@705))) (and (and ($generated@@140 ($generated@@305 $generated@@703) ($generated@@222 $generated@@704)) ($generated@@140 ($generated@@354 $generated@@703) ($generated@@222 $generated@@705))) ($generated@@140 ($generated@@388 $generated@@703) ($generated@@222 ($generated@@159 $generated@@704 $generated@@705)))))
 :pattern ( ($generated@@140 $generated@@703 ($generated@@417 $generated@@704 $generated@@705)))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) ($generated@@325 $generated@@169 $generated@@169)) (= (type $generated@@707) $generated@@67)) (= (type $generated@@708) $generated@@67)) ($generated@@140 $generated@@706 ($generated@@425 $generated@@707 $generated@@708))) (and (and ($generated@@140 ($generated@@323 $generated@@706) ($generated@@227 $generated@@707)) ($generated@@140 ($generated@@365 $generated@@706) ($generated@@227 $generated@@708))) ($generated@@140 ($generated@@399 $generated@@706) ($generated@@227 ($generated@@159 $generated@@707 $generated@@708)))))
 :pattern ( ($generated@@140 $generated@@706 ($generated@@425 $generated@@707 $generated@@708)))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@2) ($generated@@140 $generated@@709 $generated@@46))
 :pattern ( ($generated@@140 $generated@@709 $generated@@46))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@3) ($generated@@140 $generated@@710 $generated@@47))
 :pattern ( ($generated@@140 $generated@@710 $generated@@47))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@4) ($generated@@140 $generated@@711 $generated@@44))
 :pattern ( ($generated@@140 $generated@@711 $generated@@44))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@467) ($generated@@140 $generated@@712 $generated@@45))
 :pattern ( ($generated@@140 $generated@@712 $generated@@45))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@169) ($generated@@140 $generated@@713 $generated@@48))
 :pattern ( ($generated@@140 $generated@@713 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 (T@U) Bool)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () Int)
(assert  (and (and (and (and (= (type $generated@@714) ($generated@@574 $generated@@81 $generated@@4)) (= (type $generated@@715) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@716) $generated@@81)) (= (type $generated@@717) ($generated@@176 $generated@@169))) (= (type $generated@@719) ($generated@@176 $generated@@169))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@721  (=> (= $generated@@714 ($generated@@573 $generated@@138 $generated@@715 $generated@@60 $generated@@716)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 ($generated@@177 $generated@@717)) (<= ($generated@@177 $generated@@717) ($generated@@177 $generated@@717)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@263 $generated@@717 ($generated@@204 $generated@@717 ($generated@@177 $generated@@717)))) (=> ($generated@@263 $generated@@717 ($generated@@204 $generated@@717 ($generated@@177 $generated@@717))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 ($generated@@232 0)) (<= ($generated@@232 0) ($generated@@177 $generated@@717)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@263 $generated@@717 ($generated@@174 $generated@@717 ($generated@@232 0)))) (=> ($generated@@263 $generated@@717 ($generated@@174 $generated@@717 ($generated@@232 0))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@263 $generated@@717 $generated@@717)) (=> ($generated@@263 $generated@@717 $generated@@717) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@716 $generated@@138))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (>= ($generated@@136 $generated@@716) ($generated@@232 0))) (=> (>= ($generated@@136 $generated@@716) ($generated@@232 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@716 $generated@@138)))))))))))))))))
(let (($generated@@722  (=> (and ($generated@@148 $generated@@715) ($generated@@718 $generated@@715)) (=> (and (and ($generated@@140 $generated@@717 ($generated@@238 $generated@@46)) ($generated@@78 $generated@@717 ($generated@@238 $generated@@46) $generated@@715)) (and ($generated@@140 $generated@@716 ($generated@@153 $generated@@46)) ($generated@@78 $generated@@716 ($generated@@153 $generated@@46) $generated@@715))) (=> (and (and (and ($generated@@140 $generated@@719 ($generated@@238 $generated@@46)) ($generated@@78 $generated@@719 ($generated@@238 $generated@@46) $generated@@715)) true) (and (= 1 $generated@@720) (= (ControlFlow 0 10) 2))) $generated@@721)))))
$generated@@722)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@T) T@U)
(declare-fun $generated@@46 (T@T) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T) T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U Int) T@U)
(declare-fun $generated@@173 (T@U) Int)
(declare-fun $generated@@181 (Int) Int)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Int)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 (T@T T@U) T@U)
(declare-fun $generated@@267 () T@T)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@54 T@T) ) (= ($generated@@1 ($generated@@47 $generated@@54)) 6)) (forall (($generated@@55 T@T) ) (! (= ($generated@@48 ($generated@@47 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@47 $generated@@55))
))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@1 ($generated@@49 $generated@@56 $generated@@57)) 7))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@50 ($generated@@49 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@49 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@49 $generated@@60 $generated@@61))
))) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (let (($generated@@64 ($generated@@51 (type $generated@@62))))
(= (type ($generated@@52 $generated@@62 $generated@@63)) $generated@@64))
 :pattern ( ($generated@@52 $generated@@62 $generated@@63))
))) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (let (($generated@@68 (type $generated@@67)))
(let (($generated@@69 (type $generated@@66)))
(= (type ($generated@@53 $generated@@65 $generated@@66 $generated@@67)) ($generated@@49 $generated@@69 $generated@@68))))
 :pattern ( ($generated@@53 $generated@@65 $generated@@66 $generated@@67))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 ($generated@@51 (type $generated@@70))))
 (=> (= (type $generated@@72) $generated@@73) (= ($generated@@52 ($generated@@53 $generated@@70 $generated@@71 $generated@@72) $generated@@71) $generated@@72)))
 :weight 0
))) (and (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@52 ($generated@@53 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@52 $generated@@75 $generated@@77)))
 :weight 0
)) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (or true (= ($generated@@52 ($generated@@53 $generated@@79 $generated@@80 $generated@@78) $generated@@81) ($generated@@52 $generated@@79 $generated@@81)))
 :weight 0
)))) (forall (($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@48 (type $generated@@82))))
(= (type ($generated@@44 $generated@@82)) ($generated@@49 $generated@@83 $generated@@2)))
 :pattern ( ($generated@@44 $generated@@82))
))) (forall (($generated@@84 T@T) ) (! (= (type ($generated@@45 $generated@@84)) ($generated@@47 $generated@@84))
 :pattern ( ($generated@@45 $generated@@84))
))) (forall (($generated@@85 T@T) ) (! (= (type ($generated@@46 $generated@@85)) ($generated@@49 $generated@@85 $generated@@2))
 :pattern ( ($generated@@46 $generated@@85))
))))
(assert (forall (($generated@@86 T@T) ) (= ($generated@@44 ($generated@@45 $generated@@86)) ($generated@@46 $generated@@86))))
(assert (forall (($generated@@88 T@U) ) (! (let (($generated@@89 ($generated@@48 (type $generated@@88))))
 (=> (= (type $generated@@88) ($generated@@47 $generated@@89)) ($generated@@87 ($generated@@44 $generated@@88))))
 :pattern ( ($generated@@44 $generated@@88))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ) (= ($generated@@1 ($generated@@95 $generated@@102)) 8)) (forall (($generated@@103 T@T) ) (! (= ($generated@@92 ($generated@@95 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@95 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@92 (type $generated@@105))))
(= (type ($generated@@96 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@96 $generated@@104 $generated@@105))
))) (= ($generated@@1 $generated@@94) 9)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= (type ($generated@@97 $generated@@107 $generated@@108 $generated@@109)) $generated@@94)
 :pattern ( ($generated@@97 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@96 ($generated@@97 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@96 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 10)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (= ($generated@@1 ($generated@@98 $generated@@122 $generated@@123)) 11))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@99 ($generated@@98 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@98 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@100 ($generated@@98 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@100 (type $generated@@128))))
(= (type ($generated@@90 $generated@@128 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@90 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(let (($generated@@137 (type $generated@@133)))
(= (type ($generated@@101 $generated@@132 $generated@@133 $generated@@134 $generated@@135)) ($generated@@98 $generated@@137 $generated@@136))))
 :pattern ( ($generated@@101 $generated@@132 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@100 (type $generated@@138))))
 (=> (= (type $generated@@141) $generated@@142) (= ($generated@@90 ($generated@@101 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@139 $generated@@140) $generated@@141)))
 :weight 0
))) (and (and (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@90 ($generated@@101 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@90 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@90 ($generated@@101 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@90 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or true (= ($generated@@90 ($generated@@101 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@90 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ) (! (= (type ($generated@@91 $generated@@161 $generated@@162 $generated@@163 $generated@@164)) ($generated@@98 $generated@@93 $generated@@4))
 :pattern ( ($generated@@91 $generated@@161 $generated@@162 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@92 (type $generated@@170))))
 (=> (and (and (and (and (= (type $generated@@165) $generated@@93) (= (type $generated@@166) ($generated@@49 $generated@@93 $generated@@94))) (= (type $generated@@167) ($generated@@95 $generated@@4))) (= (type $generated@@169) $generated@@93)) (= (type $generated@@170) ($generated@@95 $generated@@171))) (= ($generated@@0 ($generated@@90 ($generated@@91 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (not (= $generated@@169 $generated@@165)) ($generated@@0 ($generated@@96 ($generated@@52 $generated@@166 $generated@@169) $generated@@167))) $generated@@168))))
 :pattern ( ($generated@@90 ($generated@@91 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 Int) ) (! (let (($generated@@176 ($generated@@48 (type $generated@@174))))
(= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
 (=> (= (type $generated@@177) ($generated@@47 $generated@@179)) (= (exists (($generated@@180 Int) ) (!  (and (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@173 $generated@@177))) (= $generated@@178 ($generated@@172 $generated@@177 $generated@@180)))
 :pattern ( ($generated@@172 $generated@@177 $generated@@180))
)) (< 0 ($generated ($generated@@52 ($generated@@44 $generated@@177) $generated@@178))))))
 :pattern ( ($generated@@52 ($generated@@44 $generated@@177) $generated@@178))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@181 $generated@@182) $generated@@182)
 :pattern ( ($generated@@181 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(= (type ($generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@183 $generated@@186) $generated@@186)
 :pattern ( ($generated@@183 $generated@@186))
)))
(assert (forall (($generated@@187 T@T) ) (! (= ($generated@@173 ($generated@@45 $generated@@187)) 0)
 :pattern ( ($generated@@45 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(= (type ($generated@@189 $generated@@190 $generated@@191)) ($generated@@49 $generated@@192 $generated@@2)))
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
 (=> (= (type $generated@@193) ($generated@@49 $generated@@195 $generated@@2)) (= ($generated@@188 ($generated@@189 $generated@@193 $generated@@194)) (+ ($generated@@188 $generated@@193) 1))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@193 $generated@@194)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(= (type ($generated@@196 $generated@@197 $generated@@198)) ($generated@@47 $generated@@199)))
 :pattern ( ($generated@@196 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
 (=> (= (type $generated@@200) ($generated@@47 $generated@@202)) (= ($generated@@173 ($generated@@196 $generated@@200 $generated@@201)) (+ 1 ($generated@@173 $generated@@200)))))
 :pattern ( ($generated@@196 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@50 (type $generated@@203))))
 (=> (= (type $generated@@203) ($generated@@49 $generated@@204 $generated@@2)) (and (= (= ($generated@@188 $generated@@203) 0) (= $generated@@203 ($generated@@46 $generated@@204))) (=> (not (= ($generated@@188 $generated@@203) 0)) (exists (($generated@@205 T@U) ) (!  (and (= (type $generated@@205) $generated@@204) (< 0 ($generated ($generated@@52 $generated@@203 $generated@@205))))
 :no-pattern (type $generated@@205)
 :no-pattern ($generated $generated@@205)
 :no-pattern ($generated@@0 $generated@@205)
))))))
 :pattern ( ($generated@@188 $generated@@203))
)))
(assert (forall (($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@50 (type $generated@@206))))
 (=> (= (type $generated@@206) ($generated@@49 $generated@@207 $generated@@2)) (= ($generated@@87 $generated@@206) (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@207) (and (<= 0 ($generated ($generated@@52 $generated@@206 $generated@@208))) (<= ($generated ($generated@@52 $generated@@206 $generated@@208)) ($generated@@188 $generated@@206))))
 :pattern ( ($generated@@52 $generated@@206 $generated@@208))
)))))
 :pattern ( ($generated@@87 $generated@@206))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
 (=> (= (type $generated@@209) ($generated@@49 $generated@@211 $generated@@2)) (= ($generated ($generated@@52 ($generated@@189 $generated@@209 $generated@@210) $generated@@210)) (+ ($generated ($generated@@52 $generated@@209 $generated@@210)) 1))))
 :pattern ( ($generated@@189 $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
 (=> (= (type $generated@@212) ($generated@@47 $generated@@215)) (and (=> (= $generated@@213 ($generated@@173 $generated@@212)) (= ($generated@@172 ($generated@@196 $generated@@212 $generated@@214) $generated@@213) $generated@@214)) (=> (not (= $generated@@213 ($generated@@173 $generated@@212))) (= ($generated@@172 ($generated@@196 $generated@@212 $generated@@214) $generated@@213) ($generated@@172 $generated@@212 $generated@@213))))))
 :pattern ( ($generated@@172 ($generated@@196 $generated@@212 $generated@@214) $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@217)))
 (=> (and (and (= (type $generated@@216) ($generated@@49 $generated@@219 $generated@@2)) (= (type $generated@@218) $generated@@219)) (< 0 ($generated ($generated@@52 $generated@@216 $generated@@218)))) (< 0 ($generated ($generated@@52 ($generated@@189 $generated@@216 $generated@@217) $generated@@218)))))
 :pattern ( ($generated@@189 $generated@@216 $generated@@217) ($generated@@52 $generated@@216 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 (type $generated@@221)))
 (=> (and (= (type $generated@@220) ($generated@@49 $generated@@223 $generated@@2)) (= (type $generated@@222) $generated@@223)) (= (< 0 ($generated ($generated@@52 ($generated@@189 $generated@@220 $generated@@221) $generated@@222)))  (or (= $generated@@222 $generated@@221) (< 0 ($generated ($generated@@52 $generated@@220 $generated@@222)))))))
 :pattern ( ($generated@@52 ($generated@@189 $generated@@220 $generated@@221) $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@50 (type $generated@@225))))
 (=> (and (= (type $generated@@225) ($generated@@49 $generated@@227 $generated@@2)) (= (type $generated@@226) ($generated@@49 $generated@@227 $generated@@2))) (= ($generated@@224 $generated@@225 $generated@@226) (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@227) (= ($generated ($generated@@52 $generated@@225 $generated@@228)) ($generated ($generated@@52 $generated@@226 $generated@@228))))
 :pattern ( ($generated@@52 $generated@@225 $generated@@228))
 :pattern ( ($generated@@52 $generated@@226 $generated@@228))
)))))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(= ($generated ($generated@@52 ($generated@@46 $generated@@230) $generated@@229)) 0))
 :pattern ( (let (($generated@@230 (type $generated@@229)))
($generated@@52 ($generated@@46 $generated@@230) $generated@@229)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@50 (type $generated@@231))))
 (=> (and (and (= (type $generated@@231) ($generated@@49 $generated@@233 $generated@@2)) (= (type $generated@@232) ($generated@@49 $generated@@233 $generated@@2))) ($generated@@224 $generated@@231 $generated@@232)) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@224 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(= (type ($generated@@234 $generated@@235 $generated@@236)) ($generated@@49 $generated@@237 $generated@@4)))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@239)))
 (=> (and (and (= (type $generated@@238) ($generated@@49 $generated@@241 $generated@@4)) (= (type $generated@@240) $generated@@241)) ($generated@@0 ($generated@@52 $generated@@238 $generated@@240))) ($generated@@0 ($generated@@52 ($generated@@234 $generated@@238 $generated@@239) $generated@@240))))
 :pattern ( ($generated@@234 $generated@@238 $generated@@239) ($generated@@52 $generated@@238 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@243)))
 (=> (and (= (type $generated@@242) ($generated@@49 $generated@@245 $generated@@4)) (= (type $generated@@244) $generated@@245)) (= ($generated@@0 ($generated@@52 ($generated@@234 $generated@@242 $generated@@243) $generated@@244))  (or (= $generated@@244 $generated@@243) ($generated@@0 ($generated@@52 $generated@@242 $generated@@244))))))
 :pattern ( ($generated@@52 ($generated@@234 $generated@@242 $generated@@243) $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@50 (type $generated@@247))))
(= (type ($generated@@246 $generated@@247)) ($generated@@49 $generated@@248 $generated@@2)))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
 (=> (= (type $generated@@249) ($generated@@49 $generated@@251 $generated@@4)) (and (= (= ($generated ($generated@@52 ($generated@@246 $generated@@249) $generated@@250)) 0)  (not ($generated@@0 ($generated@@52 $generated@@249 $generated@@250)))) (= (= ($generated ($generated@@52 ($generated@@246 $generated@@249) $generated@@250)) 1) ($generated@@0 ($generated@@52 $generated@@249 $generated@@250))))))
 :pattern ( ($generated@@52 ($generated@@246 $generated@@249) $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@50 (type $generated@@253))))
 (=> (= (type $generated@@253) ($generated@@49 $generated@@254 $generated@@4)) (<= 0 ($generated@@252 $generated@@253))))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@50 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@49 $generated@@256 $generated@@2)) (<= 0 ($generated@@188 $generated@@255))))
 :pattern ( ($generated@@188 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@48 (type $generated@@257))))
 (=> (= (type $generated@@257) ($generated@@47 $generated@@258)) (<= 0 ($generated@@173 $generated@@257))))
 :pattern ( ($generated@@173 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
 (=> (= (type $generated@@259) ($generated@@49 $generated@@261 $generated@@4)) ($generated@@0 ($generated@@52 ($generated@@234 $generated@@259 $generated@@260) $generated@@260))))
 :pattern ( ($generated@@234 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
 (=> (and (= (type $generated@@262) ($generated@@49 $generated@@264 $generated@@4)) ($generated@@0 ($generated@@52 $generated@@262 $generated@@263))) (= ($generated@@252 ($generated@@234 $generated@@262 $generated@@263)) ($generated@@252 $generated@@262))))
 :pattern ( ($generated@@252 ($generated@@234 $generated@@262 $generated@@263)))
)))
(assert  (and (and (= ($generated@@1 $generated@@267) 12) (forall (($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@U) ) (! (= (type ($generated@@266 $generated@@269 $generated@@270)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= ($generated@@266 $generated@@272 ($generated@@265 $generated@@271)) $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
)))
(assert (forall (($generated@@274 T@T) ) (! (= (type ($generated@@273 $generated@@274)) ($generated@@49 $generated@@274 $generated@@4))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (not ($generated@@0 ($generated@@52 ($generated@@273 $generated@@276) $generated@@275))))
 :pattern ( (let (($generated@@276 (type $generated@@275)))
($generated@@52 ($generated@@273 $generated@@276) $generated@@275)))
)))
(assert  (and (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@48 (type $generated@@279))))
(= (type ($generated@@277 $generated@@279)) ($generated@@47 $generated@@280)))
 :pattern ( ($generated@@277 $generated@@279))
)) (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@48 (type $generated@@281))))
(= (type ($generated@@278 $generated@@281)) $generated@@282))
 :pattern ( ($generated@@278 $generated@@281))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 (type $generated@@284)))
 (=> (= (type $generated@@283) ($generated@@47 $generated@@285)) (and (= ($generated@@277 ($generated@@196 $generated@@283 $generated@@284)) $generated@@283) (= ($generated@@278 ($generated@@196 $generated@@283 $generated@@284)) $generated@@284))))
 :pattern ( ($generated@@196 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@50 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@49 $generated@@287 $generated@@4)) (= ($generated@@188 ($generated@@246 $generated@@286)) ($generated@@252 $generated@@286))))
 :pattern ( ($generated@@188 ($generated@@246 $generated@@286)))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@48 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@47 $generated@@289)) (= ($generated@@188 ($generated@@44 $generated@@288)) ($generated@@173 $generated@@288))))
 :pattern ( ($generated@@188 ($generated@@44 $generated@@288)))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 (type $generated@@291)))
 (=> (= (type $generated@@290) ($generated@@47 $generated@@292)) (= ($generated@@44 ($generated@@196 $generated@@290 $generated@@291)) ($generated@@189 ($generated@@44 $generated@@290) $generated@@291))))
 :pattern ( ($generated@@44 ($generated@@196 $generated@@290 $generated@@291)))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@50 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@49 $generated@@294 $generated@@4)) (and (= (= ($generated@@252 $generated@@293) 0) (= $generated@@293 ($generated@@273 $generated@@294))) (=> (not (= ($generated@@252 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) ($generated@@0 ($generated@@52 $generated@@293 $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@252 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (let (($generated@@298 (type $generated@@297)))
 (=> (and (= (type $generated@@296) ($generated@@49 $generated@@298 $generated@@4)) (not ($generated@@0 ($generated@@52 $generated@@296 $generated@@297)))) (= ($generated@@252 ($generated@@234 $generated@@296 $generated@@297)) (+ ($generated@@252 $generated@@296) 1))))
 :pattern ( ($generated@@252 ($generated@@234 $generated@@296 $generated@@297)))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 (type $generated@@300)))
 (=> (and (and (= (type $generated@@299) ($generated@@49 $generated@@302 $generated@@2)) (= (type $generated@@301) $generated@@302)) (not (= $generated@@300 $generated@@301))) (= ($generated ($generated@@52 $generated@@299 $generated@@301)) ($generated ($generated@@52 ($generated@@189 $generated@@299 $generated@@300) $generated@@301)))))
 :pattern ( ($generated@@189 $generated@@299 $generated@@300) ($generated@@52 $generated@@299 $generated@@301))
)))
(assert (forall (($generated@@303 Int) ) (! (= ($generated@@265 ($generated@@8 ($generated@@181 $generated@@303))) ($generated@@183 ($generated@@265 ($generated@@8 $generated@@303))))
 :pattern ( ($generated@@265 ($generated@@8 ($generated@@181 $generated@@303))))
)))
(assert (forall (($generated@@304 T@U) ) (! (= ($generated@@265 ($generated@@183 $generated@@304)) ($generated@@183 ($generated@@265 $generated@@304)))
 :pattern ( ($generated@@265 ($generated@@183 $generated@@304)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@48 (type $generated@@305))))
 (=> (and (= (type $generated@@305) ($generated@@47 $generated@@306)) (= ($generated@@173 $generated@@305) 0)) (= $generated@@305 ($generated@@45 $generated@@306))))
 :pattern ( ($generated@@173 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (! (let (($generated@@310 (type $generated@@308)))
 (=> (and (and (= (type $generated@@307) ($generated@@49 $generated@@310 $generated@@2)) (= (type $generated@@309) $generated@@2)) (<= 0 ($generated $generated@@309))) (= ($generated@@188 ($generated@@53 $generated@@307 $generated@@308 $generated@@309)) (+ (- ($generated@@188 $generated@@307) ($generated ($generated@@52 $generated@@307 $generated@@308))) ($generated $generated@@309)))))
 :pattern ( ($generated@@188 ($generated@@53 $generated@@307 $generated@@308 $generated@@309)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@311 () T@U)
(declare-fun $generated@@312 () T@U)
(declare-fun $generated@@313 () T@U)
(declare-fun $generated@@314 () T@U)
(declare-fun $generated@@315 (T@U) Bool)
(declare-fun $generated@@316 (T@U) Bool)
(declare-fun $generated@@317 () Int)
(assert  (and (and (and (= (type $generated@@311) ($generated@@98 $generated@@93 $generated@@4)) (= (type $generated@@312) $generated@@93)) (= (type $generated@@313) ($generated@@49 $generated@@93 $generated@@94))) (= (type $generated@@314) ($generated@@95 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@318  (=> (= $generated@@311 ($generated@@91 $generated@@312 $generated@@313 $generated@@314 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@224 ($generated@@246 ($generated@@183 ($generated@@234 ($generated@@234 ($generated@@273 $generated@@267) ($generated@@265 ($generated@@8 ($generated@@181 1)))) ($generated@@265 ($generated@@8 ($generated@@181 1)))))) ($generated@@189 ($generated@@46 $generated@@267) ($generated@@265 ($generated@@8 ($generated@@181 1)))))) (=> ($generated@@224 ($generated@@246 ($generated@@183 ($generated@@234 ($generated@@234 ($generated@@273 $generated@@267) ($generated@@265 ($generated@@8 ($generated@@181 1)))) ($generated@@265 ($generated@@8 ($generated@@181 1)))))) ($generated@@189 ($generated@@46 $generated@@267) ($generated@@265 ($generated@@8 ($generated@@181 1))))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@224 ($generated@@44 ($generated@@183 ($generated@@196 ($generated@@196 ($generated@@45 $generated@@267) ($generated@@265 ($generated@@8 ($generated@@181 1)))) ($generated@@265 ($generated@@8 ($generated@@181 1)))))) ($generated@@189 ($generated@@189 ($generated@@46 $generated@@267) ($generated@@265 ($generated@@8 ($generated@@181 1)))) ($generated@@265 ($generated@@8 ($generated@@181 1)))))))))))
(let (($generated@@319  (=> (and (and ($generated@@315 $generated@@313) ($generated@@316 $generated@@313)) (and (= 0 $generated@@317) (= (ControlFlow 0 4) 2))) $generated@@318)))
$generated@@319)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@T) T@U)
(declare-fun $generated@@154 (T@T) T@U)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@197 (T@U Int) T@U)
(declare-fun $generated@@198 (T@U) Int)
(declare-fun $generated@@206 (T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U) Bool)
(declare-fun $generated@@214 (T@U Int) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (Int) T@U)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) Bool)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@T T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@T) T@U)
(declare-fun $generated@@500 () T@T)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@608 (T@U T@U T@U) T@U)
(declare-fun $generated@@609 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@610 (T@T T@T) T@T)
(declare-fun $generated@@611 (T@T) T@T)
(declare-fun $generated@@612 (T@T) T@T)
(declare-fun $generated@@613 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@668 (T@U) T@U)
(declare-fun $generated@@669 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert  (and (and (and (and (forall (($generated@@157 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@157)) 14)) (forall (($generated@@158 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@156 (type $generated@@159))))
(= (type ($generated@@152 $generated@@159)) ($generated@@80 $generated@@160 $generated@@2)))
 :pattern ( ($generated@@152 $generated@@159))
))) (forall (($generated@@161 T@T) ) (! (= (type ($generated@@153 $generated@@161)) ($generated@@155 $generated@@161))
 :pattern ( ($generated@@153 $generated@@161))
))) (forall (($generated@@162 T@T) ) (! (= (type ($generated@@154 $generated@@162)) ($generated@@80 $generated@@162 $generated@@2))
 :pattern ( ($generated@@154 $generated@@162))
))))
(assert (forall (($generated@@163 T@T) ) (= ($generated@@152 ($generated@@153 $generated@@163)) ($generated@@154 $generated@@163))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@167) $generated@@81)) (and (and ($generated@@164 $generated@@166) (and (not (= $generated@@167 $generated@@138)) (= ($generated@@139 $generated@@167) ($generated@@137 $generated@@165)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@166 $generated@@167) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@167)) $generated@@46 $generated@@166))
 :pattern ( ($generated@@136 $generated@@167) ($generated@@87 ($generated@@85 $generated@@166 $generated@@167) $generated@@60) ($generated@@137 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@140 $generated@@168 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@168 ($generated@@79 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@67)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@67) (= (type $generated@@172) $generated@@81)) (= (type $generated@@173) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@78 $generated@@172 ($generated@@137 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@78 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 15) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@67)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@67) (= (type $generated@@180) $generated@@67)) (= (type $generated@@181) $generated@@176)) ($generated@@140 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@140 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (and (= ($generated@@1 $generated@@185) 16) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@186))
))) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@185)
 :pattern ( ($generated@@184 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@176) (= (type $generated@@189) $generated@@176)) true) (= ($generated@@182 $generated@@188 $generated@@189)  (and (= ($generated@@183 $generated@@188) ($generated@@183 $generated@@189)) (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)))))
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@67)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@194) $generated@@67)) ($generated@@140 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@140 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@156 (type $generated@@195))))
 (=> (= (type $generated@@195) ($generated@@155 $generated@@196)) ($generated@@191 ($generated@@152 $generated@@195))))
 :pattern ( ($generated@@152 $generated@@195))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 Int) ) (! (let (($generated@@201 ($generated@@156 (type $generated@@199))))
(= (type ($generated@@197 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@197 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
 (=> (= (type $generated@@202) ($generated@@155 $generated@@204)) (= (exists (($generated@@205 Int) ) (!  (and (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@198 $generated@@202))) (= $generated@@203 ($generated@@197 $generated@@202 $generated@@205)))
 :pattern ( ($generated@@197 $generated@@202 $generated@@205))
)) (< 0 ($generated ($generated@@85 ($generated@@152 $generated@@202) $generated@@203))))))
 :pattern ( ($generated@@85 ($generated@@152 $generated@@202) $generated@@203))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= (type ($generated@@206 $generated@@208 $generated@@209)) $generated@@176)
 :pattern ( ($generated@@206 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@185)) (= (type $generated@@213) $generated@@185)) (= ($generated@@140 ($generated@@206 $generated@@212 $generated@@213) ($generated@@175 $generated@@210 $generated@@211))  (and ($generated@@207 $generated@@212 $generated@@210) ($generated@@207 $generated@@213 $generated@@211))))
 :pattern ( ($generated@@140 ($generated@@206 $generated@@212 $generated@@213) ($generated@@175 $generated@@210 $generated@@211)))
)))
(assert  (and (and (and (forall (($generated@@218 T@U) ($generated@@219 Int) ) (! (let (($generated@@220 ($generated@@156 (type $generated@@218))))
(= (type ($generated@@214 $generated@@218 $generated@@219)) ($generated@@155 $generated@@220)))
 :pattern ( ($generated@@214 $generated@@218 $generated@@219))
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@215 $generated@@221 $generated@@222)) ($generated@@155 $generated@@185))
 :pattern ( ($generated@@215 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(= (type ($generated@@216 $generated@@223 $generated@@224)) ($generated@@155 $generated@@225)))
 :pattern ( ($generated@@216 $generated@@223 $generated@@224))
))) (forall (($generated@@226 Int) ) (! (= (type ($generated@@217 $generated@@226)) ($generated@@69 $generated@@185))
 :pattern ( ($generated@@217 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Int) ($generated@@230 Int) ) (!  (=> (and (= (type $generated@@227) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@228) $generated@@81)) (=> (and (and (= (+ $generated@@229 1) $generated@@230) (<= 0 $generated@@229)) (<= $generated@@230 ($generated@@136 $generated@@228))) (= ($generated@@214 ($generated@@215 $generated@@227 $generated@@228) $generated@@230) ($generated@@216 ($generated@@214 ($generated@@215 $generated@@227 $generated@@228) $generated@@229) ($generated@@87 ($generated@@85 $generated@@227 $generated@@228) ($generated@@217 $generated@@229))))))
 :pattern ( ($generated@@214 ($generated@@215 $generated@@227 $generated@@228) $generated@@229) ($generated@@214 ($generated@@215 $generated@@227 $generated@@228) $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@83 (type $generated@@232))))
(= (type ($generated@@231 $generated@@232 $generated@@233)) ($generated@@80 $generated@@234 $generated@@2)))
 :pattern ( ($generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
 (=> (and (= (type $generated@@235) ($generated@@80 $generated@@238 $generated@@2)) (= (type $generated@@236) ($generated@@80 $generated@@238 $generated@@2))) (= ($generated ($generated@@85 ($generated@@231 $generated@@235 $generated@@236) $generated@@237)) (+ ($generated ($generated@@85 $generated@@235 $generated@@237)) ($generated ($generated@@85 $generated@@236 $generated@@237))))))
 :pattern ( ($generated@@85 ($generated@@231 $generated@@235 $generated@@236) $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@176) (= (type $generated@@240) $generated@@176)) (= ($generated@@182 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@182 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@67)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@244) $generated@@67)) (= ($generated@@140 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@185) ($generated@@0 ($generated@@85 $generated@@243 $generated@@245))) ($generated@@207 $generated@@245 $generated@@244))
 :pattern ( ($generated@@85 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@140 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@67)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@249) $generated@@67)) (= ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@185) ($generated@@0 ($generated@@85 $generated@@248 $generated@@250))) ($generated@@207 $generated@@250 $generated@@249))
 :pattern ( ($generated@@85 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@140 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@67)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) ($generated@@155 $generated@@185)) (= (type $generated@@260) $generated@@185)) (= (type $generated@@261) $generated@@67)) (and ($generated@@140 $generated@@259 ($generated@@257 $generated@@261)) ($generated@@207 $generated@@260 $generated@@261))) ($generated@@140 ($generated@@216 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
 :pattern ( ($generated@@140 ($generated@@216 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 Int) ($generated@@264 Int) ) (! (let (($generated@@265 ($generated@@156 (type $generated@@262))))
 (=> (= (type $generated@@262) ($generated@@155 $generated@@265)) (=> (and (and (<= 0 $generated@@264) (< $generated@@264 $generated@@263)) (< $generated@@264 ($generated@@198 $generated@@262))) (= ($generated@@197 ($generated@@214 $generated@@262 $generated@@263) $generated@@264) ($generated@@197 $generated@@262 $generated@@264)))))
 :weight 25
 :pattern ( ($generated@@197 ($generated@@214 $generated@@262 $generated@@263) $generated@@264))
 :pattern ( ($generated@@197 $generated@@262 $generated@@264) ($generated@@214 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@67) (= (type $generated@@268) $generated@@67)) (= (type $generated@@269) $generated@@185)) (= (type $generated@@270) $generated@@185)) (= (type $generated@@271) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@164 $generated@@271)) (= ($generated@@78 ($generated@@206 $generated@@269 $generated@@270) ($generated@@175 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@78 ($generated@@206 $generated@@269 $generated@@270) ($generated@@175 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@71)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@176) (= ($generated@@174 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@63)))
 :pattern ( ($generated@@174 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 Int) ) (! (let (($generated@@278 ($generated@@156 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@155 $generated@@278)) (=> (and (<= 0 $generated@@277) (< $generated@@277 ($generated@@198 $generated@@276))) (< ($generated@@275 ($generated@@214 $generated@@276 $generated@@277)) ($generated@@275 $generated@@276)))))
 :pattern ( ($generated@@275 ($generated@@214 $generated@@276 $generated@@277)))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@176) ($generated@@174 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@185) (= (type $generated@@281) $generated@@185)) (= $generated@@279 ($generated@@206 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@174 $generated@@279))
)))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@198 ($generated@@153 $generated@@282)) 0)
 :pattern ( ($generated@@153 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@284 $generated@@285 $generated@@286)) ($generated@@80 $generated@@287 $generated@@2)))
 :pattern ( ($generated@@284 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
 (=> (= (type $generated@@288) ($generated@@80 $generated@@290 $generated@@2)) (= ($generated@@283 ($generated@@284 $generated@@288 $generated@@289)) (+ ($generated@@283 $generated@@288) 1))))
 :pattern ( ($generated@@283 ($generated@@284 $generated@@288 $generated@@289)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 (type $generated@@292)))
 (=> (= (type $generated@@291) ($generated@@155 $generated@@293)) (= ($generated@@198 ($generated@@216 $generated@@291 $generated@@292)) (+ 1 ($generated@@198 $generated@@291)))))
 :pattern ( ($generated@@216 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@67) (= (type $generated@@295) $generated@@81)) (= ($generated@@140 $generated@@295 ($generated@@169 $generated@@294))  (and ($generated@@140 $generated@@295 ($generated@@137 $generated@@294)) (not (= $generated@@295 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@295 ($generated@@169 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@185)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@67) (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@266 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@78 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@266 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@302) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@303) $generated@@185)) (= (type $generated@@304) $generated@@67)) ($generated@@145 $generated@@301 $generated@@302)) ($generated@@266 $generated@@303 $generated@@304 $generated@@301)) ($generated@@266 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@145 $generated@@301 $generated@@302) ($generated@@266 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@306) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@308) $generated@@67)) ($generated@@145 $generated@@305 $generated@@306)) ($generated@@78 $generated@@307 $generated@@308 $generated@@305)) ($generated@@78 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@145 $generated@@305 $generated@@306) ($generated@@78 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@83 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@80 $generated@@310 $generated@@2)) (and (= (= ($generated@@283 $generated@@309) 0) (= $generated@@309 ($generated@@154 $generated@@310))) (=> (not (= ($generated@@283 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@85 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@283 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@72)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@314)) $generated@@61) (= ($generated@@312 ($generated@@137 $generated@@314)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@67) (and (= ($generated@@76 ($generated@@169 $generated@@315)) $generated@@62) (= ($generated@@312 ($generated@@169 $generated@@315)) $generated@@65)))
 :pattern ( ($generated@@169 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 17)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@80 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 18)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@80 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@83 (type $generated@@352))))
 (=> (and (= (type $generated@@352) ($generated@@80 $generated@@354 $generated@@2)) (= (type $generated@@353) ($generated@@80 $generated@@354 $generated@@2))) (= ($generated@@283 ($generated@@231 $generated@@352 $generated@@353)) (+ ($generated@@283 $generated@@352) ($generated@@283 $generated@@353)))))
 :pattern ( ($generated@@283 ($generated@@231 $generated@@352 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@83 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@80 $generated@@356 $generated@@2)) (= ($generated@@191 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@85 $generated@@355 $generated@@357))) (<= ($generated ($generated@@85 $generated@@355 $generated@@357)) ($generated@@283 $generated@@355))))
 :pattern ( ($generated@@85 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@191 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@67) (= (type $generated@@359) $generated@@81)) (= ($generated@@140 $generated@@359 ($generated@@137 $generated@@358))  (or (= $generated@@359 $generated@@138) (= ($generated@@139 $generated@@359) ($generated@@137 $generated@@358)))))
 :pattern ( ($generated@@140 $generated@@359 ($generated@@137 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@360) ($generated@@80 $generated@@362 $generated@@2)) (= ($generated ($generated@@85 ($generated@@284 $generated@@360 $generated@@361) $generated@@361)) (+ ($generated ($generated@@85 $generated@@360 $generated@@361)) 1))))
 :pattern ( ($generated@@284 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (=> (= (type $generated@@363) ($generated@@155 $generated@@366)) (and (=> (= $generated@@364 ($generated@@198 $generated@@363)) (= ($generated@@197 ($generated@@216 $generated@@363 $generated@@365) $generated@@364) $generated@@365)) (=> (not (= $generated@@364 ($generated@@198 $generated@@363))) (= ($generated@@197 ($generated@@216 $generated@@363 $generated@@365) $generated@@364) ($generated@@197 $generated@@363 $generated@@364))))))
 :pattern ( ($generated@@197 ($generated@@216 $generated@@363 $generated@@365) $generated@@364))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@368)))
 (=> (and (and (= (type $generated@@367) ($generated@@80 $generated@@370 $generated@@2)) (= (type $generated@@369) $generated@@370)) (< 0 ($generated ($generated@@85 $generated@@367 $generated@@369)))) (< 0 ($generated ($generated@@85 ($generated@@284 $generated@@367 $generated@@368) $generated@@369)))))
 :pattern ( ($generated@@284 $generated@@367 $generated@@368) ($generated@@85 $generated@@367 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@320 (type $generated@@371))))
(let (($generated@@373 ($generated@@319 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@318 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@317 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@316 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@320 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@80 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@320 (type $generated@@378))))
(let (($generated@@380 ($generated@@319 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@318 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@317 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@338 (type $generated@@382))))
(let (($generated@@384 ($generated@@337 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@336 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@335 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@334 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@338 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@80 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@338 (type $generated@@389))))
(let (($generated@@391 ($generated@@337 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@336 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@335 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@394)))
 (=> (and (= (type $generated@@393) ($generated@@80 $generated@@396 $generated@@2)) (= (type $generated@@395) $generated@@396)) (= (< 0 ($generated ($generated@@85 ($generated@@284 $generated@@393 $generated@@394) $generated@@395)))  (or (= $generated@@395 $generated@@394) (< 0 ($generated ($generated@@85 $generated@@393 $generated@@395)))))))
 :pattern ( ($generated@@85 ($generated@@284 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@398) $generated@@81)) (forall (($generated@@399 Int) ) (!  (=> (and (<= 0 $generated@@399) (< $generated@@399 ($generated@@198 ($generated@@215 $generated@@397 $generated@@398)))) (= ($generated@@197 ($generated@@215 $generated@@397 $generated@@398) $generated@@399) ($generated@@87 ($generated@@85 $generated@@397 $generated@@398) ($generated@@217 $generated@@399))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@397 $generated@@398) ($generated@@217 $generated@@399)))
 :pattern ( ($generated@@197 ($generated@@215 $generated@@397 $generated@@398) $generated@@399))
)))
 :pattern ( ($generated@@215 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@401) $generated@@67)) (= ($generated@@140 $generated@@400 ($generated@@190 $generated@@401)) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@185) (< 0 ($generated ($generated@@85 $generated@@400 $generated@@402)))) ($generated@@207 $generated@@402 $generated@@401))
 :pattern ( ($generated@@85 $generated@@400 $generated@@402))
))))
 :pattern ( ($generated@@140 $generated@@400 ($generated@@190 $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@83 (type $generated@@404))))
 (=> (and (= (type $generated@@404) ($generated@@80 $generated@@406 $generated@@2)) (= (type $generated@@405) ($generated@@80 $generated@@406 $generated@@2))) (= ($generated@@403 $generated@@404 $generated@@405) (forall (($generated@@407 T@U) ) (!  (=> (= (type $generated@@407) $generated@@406) (= ($generated ($generated@@85 $generated@@404 $generated@@407)) ($generated ($generated@@85 $generated@@405 $generated@@407))))
 :pattern ( ($generated@@85 $generated@@404 $generated@@407))
 :pattern ( ($generated@@85 $generated@@405 $generated@@407))
)))))
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@409) $generated@@67)) (= (type $generated@@410) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@408 ($generated@@241 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@185) ($generated@@0 ($generated@@85 $generated@@408 $generated@@411))) ($generated@@266 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@85 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@78 $generated@@408 ($generated@@241 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@412 ($generated@@246 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@185) ($generated@@0 ($generated@@85 $generated@@412 $generated@@415))) ($generated@@266 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@85 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@78 $generated@@412 ($generated@@246 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(= ($generated ($generated@@85 ($generated@@154 $generated@@417) $generated@@416)) 0))
 :pattern ( (let (($generated@@417 (type $generated@@416)))
($generated@@85 ($generated@@154 $generated@@417) $generated@@416)))
)))
(assert  (and (and (forall (($generated@@421 T@U) ) (! (= (type ($generated@@418 $generated@@421)) ($generated@@80 $generated@@185 $generated@@4))
 :pattern ( ($generated@@418 $generated@@421))
)) (forall (($generated@@422 T@T) ($generated@@423 T@U) ) (! (= (type ($generated@@419 $generated@@422 $generated@@423)) $generated@@422)
 :pattern ( ($generated@@419 $generated@@422 $generated@@423))
))) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@320 (type $generated@@424))))
(let (($generated@@426 ($generated@@319 (type $generated@@424))))
(= (type ($generated@@420 $generated@@424)) ($generated@@80 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@420 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@318 $generated@@185 $generated@@185)) (= (type $generated@@428) $generated@@185)) (= ($generated@@0 ($generated@@85 ($generated@@418 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@427) ($generated@@183 ($generated@@419 $generated@@176 $generated@@428)))) (= ($generated@@85 ($generated@@420 $generated@@427) ($generated@@183 ($generated@@419 $generated@@176 $generated@@428))) ($generated@@184 ($generated@@419 $generated@@176 $generated@@428))))))
 :pattern ( ($generated@@85 ($generated@@418 $generated@@427) $generated@@428))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@185 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@338 (type $generated@@432))))
(let (($generated@@434 ($generated@@337 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@80 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@336 $generated@@185 $generated@@185)) (= (type $generated@@436) $generated@@185)) (= ($generated@@0 ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@435) ($generated@@183 ($generated@@419 $generated@@176 $generated@@436)))) (= ($generated@@85 ($generated@@430 $generated@@435) ($generated@@183 ($generated@@419 $generated@@176 $generated@@436))) ($generated@@184 ($generated@@419 $generated@@176 $generated@@436))))))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@319 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@318 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@85 ($generated@@375 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@85 ($generated@@420 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@337 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@336 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@85 ($generated@@430 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@318 $generated@@185 $generated@@185)) (= (type $generated@@451) $generated@@67)) (= (type $generated@@452) $generated@@67)) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@450) $generated@@454))) (and ($generated@@266 ($generated@@85 ($generated@@420 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@266 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@450) $generated@@454))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@336 $generated@@185 $generated@@185)) (= (type $generated@@459) $generated@@67)) (= (type $generated@@460) $generated@@67)) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@458) $generated@@462))) (and ($generated@@266 ($generated@@85 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@266 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@83 (type $generated@@463))))
 (=> (and (and (= (type $generated@@463) ($generated@@80 $generated@@465 $generated@@2)) (= (type $generated@@464) ($generated@@80 $generated@@465 $generated@@2))) ($generated@@403 $generated@@463 $generated@@464)) (= $generated@@463 $generated@@464)))
 :pattern ( ($generated@@403 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 Int) ) (! (let (($generated@@468 ($generated@@156 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@155 $generated@@468)) (=> (and (<= 0 $generated@@467) (<= $generated@@467 ($generated@@198 $generated@@466))) (= ($generated@@198 ($generated@@214 $generated@@466 $generated@@467)) $generated@@467))))
 :pattern ( ($generated@@198 ($generated@@214 $generated@@466 $generated@@467)))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@469) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@470) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@471) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@469 $generated@@471))) (and ($generated@@145 $generated@@469 $generated@@470) ($generated@@145 $generated@@470 $generated@@471))) ($generated@@145 $generated@@469 $generated@@471))
 :pattern ( ($generated@@145 $generated@@469 $generated@@470) ($generated@@145 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 Int) ) (!  (=> (and (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@474) $generated@@81)) (=> (and (and (and ($generated@@164 $generated@@473) (and (not (= $generated@@474 $generated@@138)) (= ($generated@@139 $generated@@474) ($generated@@137 $generated@@472)))) (and (<= 0 $generated@@475) (< $generated@@475 ($generated@@136 $generated@@474)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@473 $generated@@474) $generated@@60))) ($generated@@266 ($generated@@87 ($generated@@85 $generated@@473 $generated@@474) ($generated@@217 $generated@@475)) $generated@@472 $generated@@473)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@473 $generated@@474) ($generated@@217 $generated@@475)) ($generated@@137 $generated@@472))
)))
(assert (forall (($generated@@477 T@T) ) (! (= (type ($generated@@476 $generated@@477)) ($generated@@80 $generated@@477 $generated@@4))
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@338 (type $generated@@478))))
(let (($generated@@480 ($generated@@337 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@336 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@335 $generated@@480 $generated@@479)) (= ($generated@@334 $generated@@478) ($generated@@476 $generated@@480))))))
 :pattern ( ($generated@@334 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@338 (type $generated@@481))))
(let (($generated@@483 ($generated@@337 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@336 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@335 $generated@@483 $generated@@482)) (= ($generated@@386 $generated@@481) ($generated@@476 $generated@@482))))))
 :pattern ( ($generated@@386 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@338 (type $generated@@484))))
(let (($generated@@486 ($generated@@337 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@336 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@335 $generated@@486 $generated@@485)) (= ($generated@@429 $generated@@484) ($generated@@476 $generated@@185))))))
 :pattern ( ($generated@@429 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@320 (type $generated@@487))))
(let (($generated@@489 ($generated@@319 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@318 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@317 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@185) (= (type $generated@@491) $generated@@185)) ($generated@@0 ($generated@@85 ($generated@@418 $generated@@487) ($generated@@296 ($generated@@206 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@418 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@338 (type $generated@@492))))
(let (($generated@@494 ($generated@@337 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@336 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@335 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@185) (= (type $generated@@496) $generated@@185)) ($generated@@0 ($generated@@85 ($generated@@429 $generated@@492) ($generated@@296 ($generated@@206 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@429 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@185) ($generated@@207 $generated@@497 $generated@@46)) (and (= ($generated@@296 ($generated@@419 $generated@@2 $generated@@497)) $generated@@497) ($generated@@140 ($generated@@419 $generated@@2 $generated@@497) $generated@@46)))
 :pattern ( ($generated@@207 $generated@@497 $generated@@46))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@185) ($generated@@207 $generated@@498 $generated@@47)) (and (= ($generated@@296 ($generated@@419 $generated@@3 $generated@@498)) $generated@@498) ($generated@@140 ($generated@@419 $generated@@3 $generated@@498) $generated@@47)))
 :pattern ( ($generated@@207 $generated@@498 $generated@@47))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@185) ($generated@@207 $generated@@499 $generated@@44)) (and (= ($generated@@296 ($generated@@419 $generated@@4 $generated@@499)) $generated@@499) ($generated@@140 ($generated@@419 $generated@@4 $generated@@499) $generated@@44)))
 :pattern ( ($generated@@207 $generated@@499 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@500) 19))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@185) ($generated@@207 $generated@@501 $generated@@45)) (and (= ($generated@@296 ($generated@@419 $generated@@500 $generated@@501)) $generated@@501) ($generated@@140 ($generated@@419 $generated@@500 $generated@@501) $generated@@45)))
 :pattern ( ($generated@@207 $generated@@501 $generated@@45))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@207 ($generated@@296 $generated@@502) $generated@@503) ($generated@@140 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@207 ($generated@@296 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@81) (<= 0 ($generated@@136 $generated@@504)))
 :no-pattern (type $generated@@504)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@83 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@80 $generated@@506 $generated@@2)) (<= 0 ($generated@@283 $generated@@505))))
 :pattern ( ($generated@@283 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@156 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@155 $generated@@508)) (<= 0 ($generated@@198 $generated@@507))))
 :pattern ( ($generated@@198 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@67) (= (type $generated@@512) $generated@@67)) (= ($generated@@509 ($generated@@447 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@447 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= ($generated@@513 ($generated@@447 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@447 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@67) (= (type $generated@@518) $generated@@67)) (= ($generated@@76 ($generated@@447 $generated@@517 $generated@@518)) $generated@@58))
 :pattern ( ($generated@@447 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) $generated@@67)) (= ($generated@@519 ($generated@@455 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@455 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (= ($generated@@523 ($generated@@455 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@455 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (= ($generated@@76 ($generated@@455 $generated@@527 $generated@@528)) $generated@@59))
 :pattern ( ($generated@@455 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@185) (= (type $generated@@530) $generated@@185)) (= ($generated@@272 ($generated@@206 $generated@@529 $generated@@530)) $generated@@63))
 :pattern ( ($generated@@206 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= ($generated@@531 ($generated@@175 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@175 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@67)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (= ($generated@@535 ($generated@@175 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@175 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@185) (= (type $generated@@540) $generated@@185)) (= ($generated@@183 ($generated@@206 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@206 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@185) (= (type $generated@@542) $generated@@185)) (= ($generated@@184 ($generated@@206 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@206 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@155 $generated@@185)) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@543 ($generated@@257 $generated@@544) $generated@@545) (forall (($generated@@546 Int) ) (!  (=> (and (<= 0 $generated@@546) (< $generated@@546 ($generated@@198 $generated@@543))) ($generated@@266 ($generated@@197 $generated@@543 $generated@@546) $generated@@544 $generated@@545))
 :pattern ( ($generated@@197 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@78 $generated@@543 ($generated@@257 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@547 ($generated@@79 $generated@@548)) $generated@@548)
 :pattern ( ($generated@@79 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@67)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@67) (= ($generated@@549 ($generated@@241 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@241 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@67) (= ($generated@@76 ($generated@@241 $generated@@552)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@67)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@67) (= ($generated@@553 ($generated@@246 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@246 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@67) (= ($generated@@76 ($generated@@246 $generated@@556)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@67)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@67) (= ($generated@@557 ($generated@@190 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@190 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@67) (= ($generated@@76 ($generated@@190 $generated@@560)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@67)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@67) (= ($generated@@561 ($generated@@257 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@257 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@67) (= ($generated@@76 ($generated@@257 $generated@@564)) $generated@@57))
 :pattern ( ($generated@@257 $generated@@564))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@75 ($generated@@217 $generated@@565)) 1)
 :pattern ( ($generated@@217 $generated@@565))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@566 ($generated@@217 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@217 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@67)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@67) (= ($generated@@568 ($generated@@137 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@137 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@67)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@67) (= ($generated@@571 ($generated@@169 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@169 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
(= ($generated@@419 $generated@@575 ($generated@@296 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@296 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@318 $generated@@185 $generated@@185)) (= (type $generated@@577) $generated@@67)) (= (type $generated@@578) $generated@@67)) (= ($generated@@140 $generated@@576 ($generated@@447 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@576) $generated@@579))) (and ($generated@@207 ($generated@@85 ($generated@@420 $generated@@576) $generated@@579) $generated@@578) ($generated@@207 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@576) $generated@@579))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@140 $generated@@576 ($generated@@447 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@336 $generated@@185 $generated@@185)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) (= ($generated@@140 $generated@@580 ($generated@@455 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@580) $generated@@583))) (and ($generated@@207 ($generated@@85 ($generated@@430 $generated@@580) $generated@@583) $generated@@582) ($generated@@207 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@580) $generated@@583))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@140 $generated@@580 ($generated@@455 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 Int) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@67) (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@586) $generated@@81)) (and (and ($generated@@164 $generated@@585) (and (not (= $generated@@586 $generated@@138)) (= ($generated@@139 $generated@@586) ($generated@@137 $generated@@584)))) (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@136 $generated@@586))))) ($generated@@207 ($generated@@87 ($generated@@85 $generated@@585 $generated@@586) ($generated@@217 $generated@@587)) $generated@@584))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@585 $generated@@586) ($generated@@217 $generated@@587)) ($generated@@137 $generated@@584))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@185) (= (type $generated@@591) $generated@@185)) (< ($generated@@588 $generated@@590) ($generated@@589 ($generated@@206 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@206 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@185) (= (type $generated@@593) $generated@@185)) (< ($generated@@588 $generated@@593) ($generated@@589 ($generated@@206 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@206 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@185) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) $generated@@67)) ($generated@@207 $generated@@594 ($generated@@447 $generated@@595 $generated@@596))) (and (= ($generated@@296 ($generated@@419 ($generated@@318 $generated@@185 $generated@@185) $generated@@594)) $generated@@594) ($generated@@140 ($generated@@419 ($generated@@318 $generated@@185 $generated@@185) $generated@@594) ($generated@@447 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@207 $generated@@594 ($generated@@447 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@185) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) $generated@@67)) ($generated@@207 $generated@@597 ($generated@@455 $generated@@598 $generated@@599))) (and (= ($generated@@296 ($generated@@419 ($generated@@336 $generated@@185 $generated@@185) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@419 ($generated@@336 $generated@@185 $generated@@185) $generated@@597) ($generated@@455 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@207 $generated@@597 ($generated@@455 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@67) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) $generated@@185)) ($generated@@207 $generated@@602 ($generated@@175 $generated@@600 $generated@@601))) (and (= ($generated@@296 ($generated@@419 $generated@@176 $generated@@602)) $generated@@602) ($generated@@140 ($generated@@419 $generated@@176 $generated@@602) ($generated@@175 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@207 $generated@@602 ($generated@@175 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
 (not ($generated@@0 ($generated@@85 ($generated@@476 $generated@@604) $generated@@603))))
 :pattern ( (let (($generated@@604 (type $generated@@603)))
($generated@@85 ($generated@@476 $generated@@604) $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@607) $generated@@81)) (=> (and (and (and ($generated@@164 $generated@@605) ($generated@@164 $generated@@606)) ($generated@@145 $generated@@605 $generated@@606)) (= ($generated@@85 $generated@@605 $generated@@607) ($generated@@85 $generated@@606 $generated@@607))) (= ($generated@@215 $generated@@605 $generated@@607) ($generated@@215 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@215 $generated@@606 $generated@@607) ($generated@@145 $generated@@605 $generated@@606))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@614 T@T) ($generated@@615 T@T) ) (= ($generated@@1 ($generated@@610 $generated@@614 $generated@@615)) 20)) (forall (($generated@@616 T@T) ($generated@@617 T@T) ) (! (= ($generated@@611 ($generated@@610 $generated@@616 $generated@@617)) $generated@@616)
 :pattern ( ($generated@@610 $generated@@616 $generated@@617))
))) (forall (($generated@@618 T@T) ($generated@@619 T@T) ) (! (= ($generated@@612 ($generated@@610 $generated@@618 $generated@@619)) $generated@@619)
 :pattern ( ($generated@@610 $generated@@618 $generated@@619))
))) (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (! (let (($generated@@623 ($generated@@612 (type $generated@@620))))
(= (type ($generated@@608 $generated@@620 $generated@@621 $generated@@622)) $generated@@623))
 :pattern ( ($generated@@608 $generated@@620 $generated@@621 $generated@@622))
))) (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
(let (($generated@@629 (type $generated@@625)))
(= (type ($generated@@613 $generated@@624 $generated@@625 $generated@@626 $generated@@627)) ($generated@@610 $generated@@629 $generated@@628))))
 :pattern ( ($generated@@613 $generated@@624 $generated@@625 $generated@@626 $generated@@627))
))) (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@612 (type $generated@@630))))
 (=> (= (type $generated@@633) $generated@@634) (= ($generated@@608 ($generated@@613 $generated@@630 $generated@@631 $generated@@632 $generated@@633) $generated@@631 $generated@@632) $generated@@633)))
 :weight 0
))) (and (and (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (or (= $generated@@637 $generated@@639) (= ($generated@@608 ($generated@@613 $generated@@636 $generated@@637 $generated@@638 $generated@@635) $generated@@639 $generated@@640) ($generated@@608 $generated@@636 $generated@@639 $generated@@640)))
 :weight 0
)) (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (or (= $generated@@644 $generated@@646) (= ($generated@@608 ($generated@@613 $generated@@642 $generated@@643 $generated@@644 $generated@@641) $generated@@645 $generated@@646) ($generated@@608 $generated@@642 $generated@@645 $generated@@646)))
 :weight 0
))) (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (or true (= ($generated@@608 ($generated@@613 $generated@@648 $generated@@649 $generated@@650 $generated@@647) $generated@@651 $generated@@652) ($generated@@608 $generated@@648 $generated@@651 $generated@@652)))
 :weight 0
)))) (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (! (= (type ($generated@@609 $generated@@653 $generated@@654 $generated@@655 $generated@@656)) ($generated@@610 $generated@@81 $generated@@4))
 :pattern ( ($generated@@609 $generated@@653 $generated@@654 $generated@@655 $generated@@656))
))))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (! (let (($generated@@663 ($generated@@70 (type $generated@@662))))
 (=> (and (and (and (and (and (= (type $generated@@657) $generated@@81) (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@659) ($generated@@69 $generated@@4))) (= (type $generated@@660) $generated@@81)) (= (type $generated@@661) $generated@@81)) (= (type $generated@@662) ($generated@@69 $generated@@663))) (= ($generated@@0 ($generated@@608 ($generated@@609 $generated@@657 $generated@@658 $generated@@659 $generated@@660) $generated@@661 $generated@@662))  (=> (and (not (= $generated@@661 $generated@@657)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@658 $generated@@661) $generated@@659))) (= $generated@@661 $generated@@660)))))
 :pattern ( ($generated@@608 ($generated@@609 $generated@@657 $generated@@658 $generated@@659 $generated@@660) $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@665) $generated@@81)) (= ($generated@@198 ($generated@@215 $generated@@664 $generated@@665)) ($generated@@136 $generated@@665)))
 :pattern ( ($generated@@198 ($generated@@215 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@67) (= (type $generated@@667) $generated@@67)) (and (= ($generated@@76 ($generated@@175 $generated@@666 $generated@@667)) $generated@@64) (= ($generated@@312 ($generated@@175 $generated@@666 $generated@@667)) $generated@@66)))
 :pattern ( ($generated@@175 $generated@@666 $generated@@667))
)))
(assert  (and (forall (($generated@@670 T@U) ) (! (let (($generated@@671 ($generated@@156 (type $generated@@670))))
(= (type ($generated@@668 $generated@@670)) ($generated@@155 $generated@@671)))
 :pattern ( ($generated@@668 $generated@@670))
)) (forall (($generated@@672 T@U) ) (! (let (($generated@@673 ($generated@@156 (type $generated@@672))))
(= (type ($generated@@669 $generated@@672)) $generated@@673))
 :pattern ( ($generated@@669 $generated@@672))
))))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (! (let (($generated@@676 (type $generated@@675)))
 (=> (= (type $generated@@674) ($generated@@155 $generated@@676)) (and (= ($generated@@668 ($generated@@216 $generated@@674 $generated@@675)) $generated@@674) (= ($generated@@669 ($generated@@216 $generated@@674 $generated@@675)) $generated@@675))))
 :pattern ( ($generated@@216 $generated@@674 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@176) (= ($generated@@588 ($generated@@296 $generated@@677)) ($generated@@589 $generated@@677)))
 :pattern ( ($generated@@588 ($generated@@296 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ) (! (let (($generated@@679 ($generated@@156 (type $generated@@678))))
 (=> (= (type $generated@@678) ($generated@@155 $generated@@679)) (= ($generated@@283 ($generated@@152 $generated@@678)) ($generated@@198 $generated@@678))))
 :pattern ( ($generated@@283 ($generated@@152 $generated@@678)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@680) $generated@@185) ($generated@@207 $generated@@680 ($generated@@79 0))) (and (= ($generated@@296 ($generated@@419 $generated@@2 $generated@@680)) $generated@@680) ($generated@@140 ($generated@@419 ($generated@@80 $generated@@185 $generated@@4) $generated@@680) ($generated@@79 0))))
 :pattern ( ($generated@@207 $generated@@680 ($generated@@79 0)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@185) (= (type $generated@@682) $generated@@67)) ($generated@@207 $generated@@681 ($generated@@241 $generated@@682))) (and (= ($generated@@296 ($generated@@419 ($generated@@80 $generated@@185 $generated@@4) $generated@@681)) $generated@@681) ($generated@@140 ($generated@@419 ($generated@@80 $generated@@185 $generated@@4) $generated@@681) ($generated@@241 $generated@@682))))
 :pattern ( ($generated@@207 $generated@@681 ($generated@@241 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@683) $generated@@185) (= (type $generated@@684) $generated@@67)) ($generated@@207 $generated@@683 ($generated@@246 $generated@@684))) (and (= ($generated@@296 ($generated@@419 ($generated@@80 $generated@@185 $generated@@4) $generated@@683)) $generated@@683) ($generated@@140 ($generated@@419 ($generated@@80 $generated@@185 $generated@@4) $generated@@683) ($generated@@246 $generated@@684))))
 :pattern ( ($generated@@207 $generated@@683 ($generated@@246 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@185) (= (type $generated@@686) $generated@@67)) ($generated@@207 $generated@@685 ($generated@@190 $generated@@686))) (and (= ($generated@@296 ($generated@@419 ($generated@@80 $generated@@185 $generated@@2) $generated@@685)) $generated@@685) ($generated@@140 ($generated@@419 ($generated@@80 $generated@@185 $generated@@2) $generated@@685) ($generated@@190 $generated@@686))))
 :pattern ( ($generated@@207 $generated@@685 ($generated@@190 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@185) (= (type $generated@@688) $generated@@67)) ($generated@@207 $generated@@687 ($generated@@257 $generated@@688))) (and (= ($generated@@296 ($generated@@419 ($generated@@155 $generated@@185) $generated@@687)) $generated@@687) ($generated@@140 ($generated@@419 ($generated@@155 $generated@@185) $generated@@687) ($generated@@257 $generated@@688))))
 :pattern ( ($generated@@207 $generated@@687 ($generated@@257 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@67) (= (type $generated@@690) $generated@@185)) ($generated@@207 $generated@@690 ($generated@@137 $generated@@689))) (and (= ($generated@@296 ($generated@@419 $generated@@81 $generated@@690)) $generated@@690) ($generated@@140 ($generated@@419 $generated@@81 $generated@@690) ($generated@@137 $generated@@689))))
 :pattern ( ($generated@@207 $generated@@690 ($generated@@137 $generated@@689)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@67) (= (type $generated@@692) $generated@@185)) ($generated@@207 $generated@@692 ($generated@@169 $generated@@691))) (and (= ($generated@@296 ($generated@@419 $generated@@81 $generated@@692)) $generated@@692) ($generated@@140 ($generated@@419 $generated@@81 $generated@@692) ($generated@@169 $generated@@691))))
 :pattern ( ($generated@@207 $generated@@692 ($generated@@169 $generated@@691)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (! (let (($generated@@695 (type $generated@@694)))
 (=> (= (type $generated@@693) ($generated@@155 $generated@@695)) (= ($generated@@152 ($generated@@216 $generated@@693 $generated@@694)) ($generated@@284 ($generated@@152 $generated@@693) $generated@@694))))
 :pattern ( ($generated@@152 ($generated@@216 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@696) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@697) $generated@@67)) (= (type $generated@@698) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@696 ($generated@@190 $generated@@697) $generated@@698) (forall (($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@699) $generated@@185) (< 0 ($generated ($generated@@85 $generated@@696 $generated@@699)))) ($generated@@266 $generated@@699 $generated@@697 $generated@@698))
 :pattern ( ($generated@@85 $generated@@696 $generated@@699))
))))
 :pattern ( ($generated@@78 $generated@@696 ($generated@@190 $generated@@697) $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (and (= (type $generated@@700) $generated@@176) (= (type $generated@@701) $generated@@67)) (= (type $generated@@702) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@164 $generated@@702) (and ($generated@@174 $generated@@700) (exists (($generated@@703 T@U) ) (!  (and (= (type $generated@@703) $generated@@67) ($generated@@78 $generated@@700 ($generated@@175 $generated@@701 $generated@@703) $generated@@702))
 :pattern ( ($generated@@78 $generated@@700 ($generated@@175 $generated@@701 $generated@@703) $generated@@702))
))))) ($generated@@266 ($generated@@183 $generated@@700) $generated@@701 $generated@@702))
 :pattern ( ($generated@@266 ($generated@@183 $generated@@700) $generated@@701 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) $generated@@176) (= (type $generated@@705) $generated@@67)) (= (type $generated@@706) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@164 $generated@@706) (and ($generated@@174 $generated@@704) (exists (($generated@@707 T@U) ) (!  (and (= (type $generated@@707) $generated@@67) ($generated@@78 $generated@@704 ($generated@@175 $generated@@707 $generated@@705) $generated@@706))
 :pattern ( ($generated@@78 $generated@@704 ($generated@@175 $generated@@707 $generated@@705) $generated@@706))
))))) ($generated@@266 ($generated@@184 $generated@@704) $generated@@705 $generated@@706))
 :pattern ( ($generated@@266 ($generated@@184 $generated@@704) $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ) (! (let (($generated@@711 (type $generated@@709)))
 (=> (and (and (= (type $generated@@708) ($generated@@80 $generated@@711 $generated@@2)) (= (type $generated@@710) $generated@@711)) (not (= $generated@@709 $generated@@710))) (= ($generated ($generated@@85 $generated@@708 $generated@@710)) ($generated ($generated@@85 ($generated@@284 $generated@@708 $generated@@709) $generated@@710)))))
 :pattern ( ($generated@@284 $generated@@708 $generated@@709) ($generated@@85 $generated@@708 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) $generated@@185) (= (type $generated@@713) $generated@@185)) (= ($generated@@206 ($generated@@253 $generated@@712) ($generated@@253 $generated@@713)) ($generated@@253 ($generated@@206 $generated@@712 $generated@@713))))
 :pattern ( ($generated@@206 ($generated@@253 $generated@@712) ($generated@@253 $generated@@713)))
)))
(assert (forall (($generated@@714 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@251 $generated@@714))) ($generated@@253 ($generated@@296 ($generated@@8 $generated@@714))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@251 $generated@@714))))
)))
(assert (forall (($generated@@715 T@U) ) (! (= ($generated@@296 ($generated@@253 $generated@@715)) ($generated@@253 ($generated@@296 $generated@@715)))
 :pattern ( ($generated@@296 ($generated@@253 $generated@@715)))
)))
(assert (forall (($generated@@716 T@U) ) (! (let (($generated@@717 ($generated@@156 (type $generated@@716))))
 (=> (and (= (type $generated@@716) ($generated@@155 $generated@@717)) (= ($generated@@198 $generated@@716) 0)) (= $generated@@716 ($generated@@153 $generated@@717))))
 :pattern ( ($generated@@198 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 Int) ) (! (let (($generated@@720 ($generated@@156 (type $generated@@718))))
 (=> (and (= (type $generated@@718) ($generated@@155 $generated@@720)) (= $generated@@719 0)) (= ($generated@@214 $generated@@718 $generated@@719) ($generated@@153 $generated@@720))))
 :pattern ( ($generated@@214 $generated@@718 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (! (let (($generated@@724 (type $generated@@722)))
 (=> (and (and (= (type $generated@@721) ($generated@@80 $generated@@724 $generated@@2)) (= (type $generated@@723) $generated@@2)) (<= 0 ($generated $generated@@723))) (= ($generated@@283 ($generated@@86 $generated@@721 $generated@@722 $generated@@723)) (+ (- ($generated@@283 $generated@@721) ($generated ($generated@@85 $generated@@721 $generated@@722))) ($generated $generated@@723)))))
 :pattern ( ($generated@@283 ($generated@@86 $generated@@721 $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@725) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@726) $generated@@2)) ($generated@@78 $generated@@726 $generated@@46 $generated@@725))
 :pattern ( ($generated@@78 $generated@@726 $generated@@46 $generated@@725))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@727) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@728) $generated@@3)) ($generated@@78 $generated@@728 $generated@@47 $generated@@727))
 :pattern ( ($generated@@78 $generated@@728 $generated@@47 $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@729) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@730) $generated@@4)) ($generated@@78 $generated@@730 $generated@@44 $generated@@729))
 :pattern ( ($generated@@78 $generated@@730 $generated@@44 $generated@@729))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@732) $generated@@500)) ($generated@@78 $generated@@732 $generated@@45 $generated@@731))
 :pattern ( ($generated@@78 $generated@@732 $generated@@45 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@734) $generated@@185)) ($generated@@78 $generated@@734 $generated@@48 $generated@@733))
 :pattern ( ($generated@@78 $generated@@734 $generated@@48 $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@735) ($generated@@155 $generated@@185)) (= (type $generated@@736) $generated@@67)) (= ($generated@@140 $generated@@735 ($generated@@257 $generated@@736)) (forall (($generated@@737 Int) ) (!  (=> (and (<= 0 $generated@@737) (< $generated@@737 ($generated@@198 $generated@@735))) ($generated@@207 ($generated@@197 $generated@@735 $generated@@737) $generated@@736))
 :pattern ( ($generated@@197 $generated@@735 $generated@@737))
))))
 :pattern ( ($generated@@140 $generated@@735 ($generated@@257 $generated@@736)))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 Int) ) (!  (=> (= (type $generated@@738) ($generated@@155 $generated@@185)) (=> (and (<= 0 $generated@@739) (< $generated@@739 ($generated@@198 $generated@@738))) (< ($generated@@589 ($generated@@419 $generated@@176 ($generated@@197 $generated@@738 $generated@@739))) ($generated@@275 $generated@@738))))
 :pattern ( ($generated@@589 ($generated@@419 $generated@@176 ($generated@@197 $generated@@738 $generated@@739))))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (and (= (type $generated@@740) ($generated@@318 $generated@@185 $generated@@185)) (= (type $generated@@741) $generated@@67)) (= (type $generated@@742) $generated@@67)) ($generated@@140 $generated@@740 ($generated@@447 $generated@@741 $generated@@742))) (and (and ($generated@@140 ($generated@@316 $generated@@740) ($generated@@241 $generated@@741)) ($generated@@140 ($generated@@375 $generated@@740) ($generated@@241 $generated@@742))) ($generated@@140 ($generated@@418 $generated@@740) ($generated@@241 ($generated@@175 $generated@@741 $generated@@742)))))
 :pattern ( ($generated@@140 $generated@@740 ($generated@@447 $generated@@741 $generated@@742)))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (and (and (= (type $generated@@743) ($generated@@336 $generated@@185 $generated@@185)) (= (type $generated@@744) $generated@@67)) (= (type $generated@@745) $generated@@67)) ($generated@@140 $generated@@743 ($generated@@455 $generated@@744 $generated@@745))) (and (and ($generated@@140 ($generated@@334 $generated@@743) ($generated@@246 $generated@@744)) ($generated@@140 ($generated@@386 $generated@@743) ($generated@@246 $generated@@745))) ($generated@@140 ($generated@@429 $generated@@743) ($generated@@246 ($generated@@175 $generated@@744 $generated@@745)))))
 :pattern ( ($generated@@140 $generated@@743 ($generated@@455 $generated@@744 $generated@@745)))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@2) ($generated@@140 $generated@@746 $generated@@46))
 :pattern ( ($generated@@140 $generated@@746 $generated@@46))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) $generated@@3) ($generated@@140 $generated@@747 $generated@@47))
 :pattern ( ($generated@@140 $generated@@747 $generated@@47))
)))
(assert (forall (($generated@@748 T@U) ) (!  (=> (= (type $generated@@748) $generated@@4) ($generated@@140 $generated@@748 $generated@@44))
 :pattern ( ($generated@@140 $generated@@748 $generated@@44))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) $generated@@500) ($generated@@140 $generated@@749 $generated@@45))
 :pattern ( ($generated@@140 $generated@@749 $generated@@45))
)))
(assert (forall (($generated@@750 T@U) ) (!  (=> (= (type $generated@@750) $generated@@185) ($generated@@140 $generated@@750 $generated@@48))
 :pattern ( ($generated@@140 $generated@@750 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@751 () Int)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () T@U)
(declare-fun $generated@@754 (T@U) Bool)
(declare-fun $generated@@755 () T@U)
(declare-fun $generated@@756 () T@U)
(declare-fun $generated@@757 () Int)
(assert  (and (and (and (= (type $generated@@752) $generated@@81) (= (type $generated@@753) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@755) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@756) ($generated@@610 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@758  (=> (and (<= ($generated@@251 0) $generated@@751) (< $generated@@751 ($generated@@136 $generated@@752))) (=> (and (and ($generated@@164 $generated@@753) ($generated@@754 $generated@@753)) (and (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) $generated@@81) (=> (and (not (= $generated@@759 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@755 $generated@@759) $generated@@60))) (or (= ($generated@@85 $generated@@753 $generated@@759) ($generated@@85 $generated@@755 $generated@@759)) (= $generated@@759 $generated@@752))))
 :pattern ( ($generated@@85 $generated@@753 $generated@@759))
)) ($generated@@145 $generated@@755 $generated@@753))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@752 $generated@@138))) (=> (not (= $generated@@752 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 (+ $generated@@751 1)) (<= (+ $generated@@751 1) ($generated@@136 $generated@@752)))) (=> (and (<= 0 (+ $generated@@751 1)) (<= (+ $generated@@751 1) ($generated@@136 $generated@@752))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@752 $generated@@138))) (=> (not (= $generated@@752 $generated@@138)) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 $generated@@751) (<= $generated@@751 ($generated@@136 $generated@@752))))))))))))))
(let (($generated@@760  (=> (and (< $generated@@751 ($generated@@251 0)) (= (ControlFlow 0 8) 2)) $generated@@758)))
(let (($generated@@761  (=> (<= ($generated@@251 0) $generated@@751) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not (= $generated@@752 $generated@@138))) (=> (not (= $generated@@752 $generated@@138)) (=> (= (ControlFlow 0 6) 2) $generated@@758))))))
(let (($generated@@762  (=> (= $generated@@756 ($generated@@609 $generated@@138 $generated@@755 $generated@@60 $generated@@752)) (and (=> (= (ControlFlow 0 9) 6) $generated@@761) (=> (= (ControlFlow 0 9) 8) $generated@@760)))))
(let (($generated@@763  (=> (and ($generated@@164 $generated@@755) ($generated@@754 $generated@@755)) (=> (and (and ($generated@@140 $generated@@752 ($generated@@169 $generated@@46)) ($generated@@78 $generated@@752 ($generated@@169 $generated@@46) $generated@@755)) (and (= 1 $generated@@757) (= (ControlFlow 0 10) 9))) $generated@@762))))
$generated@@763))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@T) T@U)
(declare-fun $generated@@170 (T@T) T@U)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@185 (Int Int) Int)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U) T@U)
(declare-fun $generated@@195 () T@T)
(declare-fun $generated@@201 (T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@209 (T@U Int) T@U)
(declare-fun $generated@@210 (T@U T@U) T@U)
(declare-fun $generated@@211 (T@U) Int)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@229 (T@U Int) T@U)
(declare-fun $generated@@230 (T@U Int T@U) T@U)
(declare-fun $generated@@246 (T@U Int) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (Int) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (Int) Int)
(declare-fun $generated@@305 (Int) Int)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@332 (T@U T@U) Bool)
(declare-fun $generated@@341 (T@U) Int)
(declare-fun $generated@@349 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@T) T@U)
(declare-fun $generated@@394 (T@T T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@396 (T@T) T@T)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@T T@T) T@U)
(declare-fun $generated@@412 (T@T T@T) T@T)
(declare-fun $generated@@413 (T@T) T@T)
(declare-fun $generated@@414 (T@T) T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@482 (T@U T@U) Bool)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@T T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@531 (T@U T@U) T@U)
(declare-fun $generated@@539 (T@U T@U) T@U)
(declare-fun $generated@@563 (T@T) T@U)
(declare-fun $generated@@587 () T@T)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@625 (T@U) T@U)
(declare-fun $generated@@629 (T@U) T@U)
(declare-fun $generated@@637 (T@U) T@U)
(declare-fun $generated@@641 (T@U) T@U)
(declare-fun $generated@@653 (T@U) Int)
(declare-fun $generated@@655 (T@U) T@U)
(declare-fun $generated@@659 (T@U) T@U)
(declare-fun $generated@@663 (T@U) T@U)
(declare-fun $generated@@667 (T@U) T@U)
(declare-fun $generated@@672 (T@U) Int)
(declare-fun $generated@@674 (T@U) T@U)
(declare-fun $generated@@677 (T@U) T@U)
(declare-fun $generated@@703 (T@U) Int)
(declare-fun $generated@@704 (T@U) Int)
(declare-fun $generated@@726 (T@U T@U T@U) T@U)
(declare-fun $generated@@727 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@728 (T@T T@T) T@T)
(declare-fun $generated@@729 (T@T) T@T)
(declare-fun $generated@@730 (T@T) T@T)
(declare-fun $generated@@731 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@790 (T@U) T@U)
(declare-fun $generated@@791 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert  (and (and (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@83 (type $generated@@149))))
(= (type ($generated@@146 $generated@@149 $generated@@150)) ($generated@@80 $generated@@151 $generated@@2)))
 :pattern ( ($generated@@146 $generated@@149 $generated@@150))
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@83 (type $generated@@152))))
(= (type ($generated@@147 $generated@@152 $generated@@153)) ($generated@@80 $generated@@154 $generated@@2)))
 :pattern ( ($generated@@147 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@83 (type $generated@@155))))
(= (type ($generated@@148 $generated@@155 $generated@@156)) ($generated@@80 $generated@@157 $generated@@2)))
 :pattern ( ($generated@@148 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@83 (type $generated@@158))))
 (=> (and (= (type $generated@@158) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@159) ($generated@@80 $generated@@160 $generated@@2))) (and (= (+ (+ ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) ($generated@@145 ($generated@@146 $generated@@159 $generated@@158))) (* 2 ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))) ($generated@@145 ($generated@@148 $generated@@158 $generated@@159))) (= ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) (- ($generated@@145 $generated@@158) ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@163) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@161 $generated@@162 $generated@@163)) (forall (($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@162 $generated@@164) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@163 $generated@@164) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@163 $generated@@164) $generated@@60))
)))
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167)  (or (= $generated@@166 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@167 $generated@@166) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167))
)))
(assert  (and (and (and (and (forall (($generated@@173 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@173)) 14)) (forall (($generated@@174 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@172 (type $generated@@175))))
(= (type ($generated@@168 $generated@@175)) ($generated@@80 $generated@@176 $generated@@2)))
 :pattern ( ($generated@@168 $generated@@175))
))) (forall (($generated@@177 T@T) ) (! (= (type ($generated@@169 $generated@@177)) ($generated@@171 $generated@@177))
 :pattern ( ($generated@@169 $generated@@177))
))) (forall (($generated@@178 T@T) ) (! (= (type ($generated@@170 $generated@@178)) ($generated@@80 $generated@@178 $generated@@2))
 :pattern ( ($generated@@170 $generated@@178))
))))
(assert (forall (($generated@@179 T@T) ) (= ($generated@@168 ($generated@@169 $generated@@179)) ($generated@@170 $generated@@179))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@67) (= (type $generated@@182) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@183) $generated@@81)) (and (and ($generated@@180 $generated@@182) (and (not (= $generated@@183 $generated@@138)) (= ($generated@@139 $generated@@183) ($generated@@137 $generated@@181)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@182 $generated@@183) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@183)) $generated@@46 $generated@@182))
 :pattern ( ($generated@@136 $generated@@183) ($generated@@87 ($generated@@85 $generated@@182 $generated@@183) $generated@@60) ($generated@@137 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@2) ($generated@@140 $generated@@184 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@184 ($generated@@79 0)))
)))
(assert (forall (($generated@@186 Int) ($generated@@187 Int) ) (!  (or (= ($generated@@185 $generated@@186 $generated@@187) $generated@@186) (= ($generated@@185 $generated@@186 $generated@@187) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@67)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@67) (= (type $generated@@191) $generated@@81)) (= (type $generated@@192) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@191 ($generated@@188 $generated@@190) $generated@@192) ($generated@@78 $generated@@191 ($generated@@137 $generated@@190) $generated@@192)))
 :pattern ( ($generated@@78 $generated@@191 ($generated@@188 $generated@@190) $generated@@192))
)))
(assert  (and (= ($generated@@1 $generated@@195) 15) (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@196 $generated@@197)) $generated@@67)
 :pattern ( ($generated@@194 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (and (= (type $generated@@198) $generated@@67) (= (type $generated@@199) $generated@@67)) (= (type $generated@@200) $generated@@195)) ($generated@@140 $generated@@200 ($generated@@194 $generated@@198 $generated@@199))) ($generated@@193 $generated@@200))
 :pattern ( ($generated@@193 $generated@@200) ($generated@@140 $generated@@200 ($generated@@194 $generated@@198 $generated@@199)))
)))
(assert  (and (and (= ($generated@@1 $generated@@204) 16) (forall (($generated@@205 T@U) ) (! (= (type ($generated@@202 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@203 $generated@@206)) $generated@@204)
 :pattern ( ($generated@@203 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) $generated@@195) (= (type $generated@@208) $generated@@195)) true) (= ($generated@@201 $generated@@207 $generated@@208)  (and (= ($generated@@202 $generated@@207) ($generated@@202 $generated@@208)) (= ($generated@@203 $generated@@207) ($generated@@203 $generated@@208)))))
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
)))
(assert  (and (forall (($generated@@212 T@U) ($generated@@213 Int) ) (! (let (($generated@@214 ($generated@@172 (type $generated@@212))))
(= (type ($generated@@209 $generated@@212 $generated@@213)) ($generated@@171 $generated@@214)))
 :pattern ( ($generated@@209 $generated@@212 $generated@@213))
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(= (type ($generated@@210 $generated@@215 $generated@@216)) ($generated@@171 $generated@@217)))
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Int) ) (! (let (($generated@@221 (type $generated@@219)))
 (=> (= (type $generated@@218) ($generated@@171 $generated@@221)) (=> (and (<= 0 $generated@@220) (<= $generated@@220 ($generated@@211 $generated@@218))) (= ($generated@@209 ($generated@@210 $generated@@218 $generated@@219) $generated@@220) ($generated@@210 ($generated@@209 $generated@@218 $generated@@220) $generated@@219)))))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@218 $generated@@219) $generated@@220))
)))
(assert (forall (($generated@@224 T@U) ) (! (= (type ($generated@@222 $generated@@224)) $generated@@67)
 :pattern ( ($generated@@222 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (= (type $generated@@225) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@226) $generated@@67)) ($generated@@140 $generated@@225 ($generated@@222 $generated@@226))) ($generated@@223 $generated@@225))
 :pattern ( ($generated@@140 $generated@@225 ($generated@@222 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@172 (type $generated@@227))))
 (=> (= (type $generated@@227) ($generated@@171 $generated@@228)) ($generated@@223 ($generated@@168 $generated@@227))))
 :pattern ( ($generated@@168 $generated@@227))
)))
(assert  (and (forall (($generated@@231 T@U) ($generated@@232 Int) ) (! (let (($generated@@233 ($generated@@172 (type $generated@@231))))
(= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)) (forall (($generated@@234 T@U) ($generated@@235 Int) ($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(= (type ($generated@@230 $generated@@234 $generated@@235 $generated@@236)) ($generated@@171 $generated@@237)))
 :pattern ( ($generated@@230 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ($generated@@240 T@U) ($generated@@241 Int) ) (! (let (($generated@@242 (type $generated@@240)))
 (=> (= (type $generated@@238) ($generated@@171 $generated@@242)) (=> (and (<= 0 $generated@@241) (< $generated@@241 ($generated@@211 $generated@@238))) (and (=> (= $generated@@239 $generated@@241) (= ($generated@@229 ($generated@@230 $generated@@238 $generated@@239 $generated@@240) $generated@@241) $generated@@240)) (=> (not (= $generated@@239 $generated@@241)) (= ($generated@@229 ($generated@@230 $generated@@238 $generated@@239 $generated@@240) $generated@@241) ($generated@@229 $generated@@238 $generated@@241)))))))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@238 $generated@@239 $generated@@240) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@83 (type $generated@@243))))
 (=> (and (= (type $generated@@243) ($generated@@80 $generated@@245 $generated@@2)) (= (type $generated@@244) ($generated@@80 $generated@@245 $generated@@2))) (= ($generated@@147 ($generated@@147 $generated@@243 $generated@@244) $generated@@244) ($generated@@147 $generated@@243 $generated@@244))))
 :pattern ( ($generated@@147 ($generated@@147 $generated@@243 $generated@@244) $generated@@244))
)))
(assert  (and (forall (($generated@@248 T@U) ($generated@@249 Int) ) (! (let (($generated@@250 ($generated@@172 (type $generated@@248))))
(= (type ($generated@@246 $generated@@248 $generated@@249)) ($generated@@171 $generated@@250)))
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)) (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@172 (type $generated@@251))))
(= (type ($generated@@247 $generated@@251 $generated@@252)) ($generated@@171 $generated@@253)))
 :pattern ( ($generated@@247 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 Int) ) (! (let (($generated@@257 ($generated@@172 (type $generated@@254))))
 (=> (and (and (= (type $generated@@254) ($generated@@171 $generated@@257)) (= (type $generated@@255) ($generated@@171 $generated@@257))) (= $generated@@256 ($generated@@211 $generated@@254))) (and (= ($generated@@246 ($generated@@247 $generated@@254 $generated@@255) $generated@@256) $generated@@254) (= ($generated@@209 ($generated@@247 $generated@@254 $generated@@255) $generated@@256) $generated@@255))))
 :pattern ( ($generated@@246 ($generated@@247 $generated@@254 $generated@@255) $generated@@256))
 :pattern ( ($generated@@209 ($generated@@247 $generated@@254 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
 (=> (= (type $generated@@258) ($generated@@171 $generated@@260)) (= (exists (($generated@@261 Int) ) (!  (and (and (<= 0 $generated@@261) (< $generated@@261 ($generated@@211 $generated@@258))) (= $generated@@259 ($generated@@229 $generated@@258 $generated@@261)))
 :pattern ( ($generated@@229 $generated@@258 $generated@@261))
)) (< 0 ($generated ($generated@@85 ($generated@@168 $generated@@258) $generated@@259))))))
 :pattern ( ($generated@@85 ($generated@@168 $generated@@258) $generated@@259))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@262 $generated@@264 $generated@@265)) $generated@@195)
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) $generated@@67) (= (type $generated@@267) $generated@@67)) (= (type $generated@@268) $generated@@204)) (= (type $generated@@269) $generated@@204)) (= ($generated@@140 ($generated@@262 $generated@@268 $generated@@269) ($generated@@194 $generated@@266 $generated@@267))  (and ($generated@@263 $generated@@268 $generated@@266) ($generated@@263 $generated@@269 $generated@@267))))
 :pattern ( ($generated@@140 ($generated@@262 $generated@@268 $generated@@269) ($generated@@194 $generated@@266 $generated@@267)))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) ($generated@@171 $generated@@204))
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 Int) ) (! (= (type ($generated@@271 $generated@@274)) ($generated@@69 $generated@@204))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 Int) ($generated@@278 Int) ) (!  (=> (and (= (type $generated@@275) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@276) $generated@@81)) (=> (and (and (= (+ $generated@@277 1) $generated@@278) (<= 0 $generated@@277)) (<= $generated@@278 ($generated@@136 $generated@@276))) (= ($generated@@246 ($generated@@270 $generated@@275 $generated@@276) $generated@@278) ($generated@@210 ($generated@@246 ($generated@@270 $generated@@275 $generated@@276) $generated@@277) ($generated@@87 ($generated@@85 $generated@@275 $generated@@276) ($generated@@271 $generated@@277))))))
 :pattern ( ($generated@@246 ($generated@@270 $generated@@275 $generated@@276) $generated@@277) ($generated@@246 ($generated@@270 $generated@@275 $generated@@276) $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 T@U) ($generated@@282 Int) ) (! (let (($generated@@283 (type $generated@@281)))
 (=> (= (type $generated@@279) ($generated@@171 $generated@@283)) (=> (and (and (<= 0 $generated@@282) (<= $generated@@282 $generated@@280)) (< $generated@@280 ($generated@@211 $generated@@279))) (= ($generated@@209 ($generated@@230 $generated@@279 $generated@@280 $generated@@281) $generated@@282) ($generated@@230 ($generated@@209 $generated@@279 $generated@@282) (- $generated@@280 $generated@@282) $generated@@281)))))
 :pattern ( ($generated@@209 ($generated@@230 $generated@@279 $generated@@280 $generated@@281) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
 (=> (and (= (type $generated@@284) ($generated@@80 $generated@@287 $generated@@2)) (= (type $generated@@285) ($generated@@80 $generated@@287 $generated@@2))) (= ($generated ($generated@@85 ($generated@@148 $generated@@284 $generated@@285) $generated@@286)) (+ ($generated ($generated@@85 $generated@@284 $generated@@286)) ($generated ($generated@@85 $generated@@285 $generated@@286))))))
 :pattern ( ($generated@@85 ($generated@@148 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@195) (= (type $generated@@289) $generated@@195)) (= ($generated@@201 $generated@@288 $generated@@289) (= $generated@@288 $generated@@289)))
 :pattern ( ($generated@@201 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 Int) ) (! (let (($generated@@292 ($generated@@172 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@171 $generated@@292)) (= $generated@@291 0)) (= ($generated@@209 $generated@@290 $generated@@291) $generated@@290)))
 :pattern ( ($generated@@209 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@67)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@296) $generated@@67)) (= ($generated@@140 $generated@@295 ($generated@@293 $generated@@296)) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@204) ($generated@@0 ($generated@@85 $generated@@295 $generated@@297))) ($generated@@263 $generated@@297 $generated@@296))
 :pattern ( ($generated@@85 $generated@@295 $generated@@297))
))))
 :pattern ( ($generated@@140 $generated@@295 ($generated@@293 $generated@@296)))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@67)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@301) $generated@@67)) (= ($generated@@140 $generated@@300 ($generated@@298 $generated@@301)) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@204) ($generated@@0 ($generated@@85 $generated@@300 $generated@@302))) ($generated@@263 $generated@@302 $generated@@301))
 :pattern ( ($generated@@85 $generated@@300 $generated@@302))
))))
 :pattern ( ($generated@@140 $generated@@300 ($generated@@298 $generated@@301)))
)))
(assert (forall (($generated@@304 Int) ) (!  (=> (<= 0 $generated@@304) (= ($generated@@303 $generated@@304) $generated@@304))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@305 $generated@@306) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 (type $generated@@308)))
(= (type ($generated@@307 $generated@@308)) $generated@@309))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= ($generated@@307 $generated@@310) $generated@@310)
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@67)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (= (type $generated@@313) ($generated@@171 $generated@@204)) (= (type $generated@@314) $generated@@204)) (= (type $generated@@315) $generated@@67)) (and ($generated@@140 $generated@@313 ($generated@@311 $generated@@315)) ($generated@@263 $generated@@314 $generated@@315))) ($generated@@140 ($generated@@210 $generated@@313 $generated@@314) ($generated@@311 $generated@@315)))
 :pattern ( ($generated@@140 ($generated@@210 $generated@@313 $generated@@314) ($generated@@311 $generated@@315)))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 Int) ($generated@@318 Int) ) (! (let (($generated@@319 ($generated@@172 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@171 $generated@@319)) (=> (and (and (<= 0 $generated@@318) (< $generated@@318 $generated@@317)) (< $generated@@318 ($generated@@211 $generated@@316))) (= ($generated@@229 ($generated@@246 $generated@@316 $generated@@317) $generated@@318) ($generated@@229 $generated@@316 $generated@@318)))))
 :weight 25
 :pattern ( ($generated@@229 ($generated@@246 $generated@@316 $generated@@317) $generated@@318))
 :pattern ( ($generated@@229 $generated@@316 $generated@@318) ($generated@@246 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@321) $generated@@67) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) $generated@@204)) (= (type $generated@@324) $generated@@204)) (= (type $generated@@325) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@180 $generated@@325)) (= ($generated@@78 ($generated@@262 $generated@@323 $generated@@324) ($generated@@194 $generated@@321 $generated@@322) $generated@@325)  (and ($generated@@320 $generated@@323 $generated@@321 $generated@@325) ($generated@@320 $generated@@324 $generated@@322 $generated@@325))))
 :pattern ( ($generated@@78 ($generated@@262 $generated@@323 $generated@@324) ($generated@@194 $generated@@321 $generated@@322) $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (! (let (($generated@@328 ($generated@@172 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@171 $generated@@328)) (=> (and (<= 0 $generated@@327) (<= $generated@@327 ($generated@@211 $generated@@326))) (= ($generated@@211 ($generated@@209 $generated@@326 $generated@@327)) (- ($generated@@211 $generated@@326) $generated@@327)))))
 :pattern ( ($generated@@211 ($generated@@209 $generated@@326 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@71)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@195) (= ($generated@@193 $generated@@331) (= ($generated@@329 $generated@@331) $generated@@63)))
 :pattern ( ($generated@@193 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@172 (type $generated@@333))))
 (=> (and (= (type $generated@@333) ($generated@@171 $generated@@335)) (= (type $generated@@334) ($generated@@171 $generated@@335))) (= ($generated@@332 $generated@@333 $generated@@334)  (and (= ($generated@@211 $generated@@333) ($generated@@211 $generated@@334)) (forall (($generated@@336 Int) ) (!  (=> (and (<= 0 $generated@@336) (< $generated@@336 ($generated@@211 $generated@@333))) (= ($generated@@229 $generated@@333 $generated@@336) ($generated@@229 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@229 $generated@@333 $generated@@336))
 :pattern ( ($generated@@229 $generated@@334 $generated@@336))
))))))
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
 (=> (and (= (type $generated@@337) ($generated@@80 $generated@@340 $generated@@2)) (= (type $generated@@338) ($generated@@80 $generated@@340 $generated@@2))) (= ($generated ($generated@@85 ($generated@@146 $generated@@337 $generated@@338) $generated@@339)) ($generated@@303 (- ($generated ($generated@@85 $generated@@337 $generated@@339)) ($generated ($generated@@85 $generated@@338 $generated@@339)))))))
 :pattern ( ($generated@@85 ($generated@@146 $generated@@337 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 Int) ) (! (let (($generated@@344 ($generated@@172 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@171 $generated@@344)) (=> (and (<= 0 $generated@@343) (< $generated@@343 ($generated@@211 $generated@@342))) (< ($generated@@341 ($generated@@246 $generated@@342 $generated@@343)) ($generated@@341 $generated@@342)))))
 :pattern ( ($generated@@341 ($generated@@246 $generated@@342 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@195) ($generated@@193 $generated@@345)) (exists (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (and (and (= (type $generated@@346) $generated@@204) (= (type $generated@@347) $generated@@204)) (= $generated@@345 ($generated@@262 $generated@@346 $generated@@347)))
 :no-pattern (type $generated@@346)
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
)))
 :pattern ( ($generated@@193 $generated@@345))
)))
(assert (forall (($generated@@348 T@T) ) (! (= ($generated@@211 ($generated@@169 $generated@@348)) 0)
 :pattern ( ($generated@@169 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= (type ($generated@@349 $generated@@350 $generated@@351)) ($generated@@80 $generated@@352 $generated@@2)))
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
 (=> (= (type $generated@@353) ($generated@@80 $generated@@355 $generated@@2)) (= ($generated@@145 ($generated@@349 $generated@@353 $generated@@354)) (+ ($generated@@145 $generated@@353) 1))))
 :pattern ( ($generated@@145 ($generated@@349 $generated@@353 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 Int) ) (! (let (($generated@@358 ($generated@@172 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@171 $generated@@358)) (=> (and (< 0 $generated@@357) (<= $generated@@357 ($generated@@211 $generated@@356))) (< ($generated@@341 ($generated@@209 $generated@@356 $generated@@357)) ($generated@@341 $generated@@356)))))
 :pattern ( ($generated@@341 ($generated@@209 $generated@@356 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
 (=> (= (type $generated@@359) ($generated@@171 $generated@@361)) (= ($generated@@211 ($generated@@210 $generated@@359 $generated@@360)) (+ 1 ($generated@@211 $generated@@359)))))
 :pattern ( ($generated@@210 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@67) (= (type $generated@@363) $generated@@81)) (= ($generated@@140 $generated@@363 ($generated@@188 $generated@@362))  (and ($generated@@140 $generated@@363 ($generated@@137 $generated@@362)) (not (= $generated@@363 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@363 ($generated@@188 $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@204)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@67) (= (type $generated@@368) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@320 ($generated@@364 $generated@@366) $generated@@367 $generated@@368) ($generated@@78 $generated@@366 $generated@@367 $generated@@368)))
 :pattern ( ($generated@@320 ($generated@@364 $generated@@366) $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@369) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@370) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@371) $generated@@204)) (= (type $generated@@372) $generated@@67)) ($generated@@161 $generated@@369 $generated@@370)) ($generated@@320 $generated@@371 $generated@@372 $generated@@369)) ($generated@@320 $generated@@371 $generated@@372 $generated@@370))
 :pattern ( ($generated@@161 $generated@@369 $generated@@370) ($generated@@320 $generated@@371 $generated@@372 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@374) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@376) $generated@@67)) ($generated@@161 $generated@@373 $generated@@374)) ($generated@@78 $generated@@375 $generated@@376 $generated@@373)) ($generated@@78 $generated@@375 $generated@@376 $generated@@374))
 :pattern ( ($generated@@161 $generated@@373 $generated@@374) ($generated@@78 $generated@@375 $generated@@376 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 Int) ($generated@@379 Int) ) (! (let (($generated@@380 ($generated@@172 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@171 $generated@@380)) (=> (and (and (<= 0 $generated@@378) (<= 0 $generated@@379)) (< $generated@@379 (- ($generated@@211 $generated@@377) $generated@@378))) (= ($generated@@229 ($generated@@209 $generated@@377 $generated@@378) $generated@@379) ($generated@@229 $generated@@377 (+ $generated@@379 $generated@@378))))))
 :weight 25
 :pattern ( ($generated@@229 ($generated@@209 $generated@@377 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@83 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@80 $generated@@382 $generated@@2)) (and (= (= ($generated@@145 $generated@@381) 0) (= $generated@@381 ($generated@@170 $generated@@382))) (=> (not (= ($generated@@145 $generated@@381) 0)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (< 0 ($generated ($generated@@85 $generated@@381 $generated@@383))))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@145 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ) (! (= (type ($generated@@384 $generated@@385)) $generated@@72)
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@386)) $generated@@61) (= ($generated@@384 ($generated@@137 $generated@@386)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@67) (and (= ($generated@@76 ($generated@@188 $generated@@387)) $generated@@62) (= ($generated@@384 ($generated@@188 $generated@@387)) $generated@@65)))
 :pattern ( ($generated@@188 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
 (=> (and (and (= (type $generated@@388) ($generated@@80 $generated@@391 $generated@@2)) (= (type $generated@@389) ($generated@@80 $generated@@391 $generated@@2))) (<= ($generated ($generated@@85 $generated@@388 $generated@@390)) ($generated ($generated@@85 $generated@@389 $generated@@390)))) (= ($generated ($generated@@85 ($generated@@146 $generated@@388 $generated@@389) $generated@@390)) 0)))
 :pattern ( ($generated@@146 $generated@@388 $generated@@389) ($generated@@85 $generated@@389 $generated@@390) ($generated@@85 $generated@@388 $generated@@390))
)))
(assert  (and (and (and (and (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (= ($generated@@1 ($generated@@394 $generated@@397 $generated@@398)) 17)) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@395 ($generated@@394 $generated@@399 $generated@@400)) $generated@@399)
 :pattern ( ($generated@@394 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= ($generated@@396 ($generated@@394 $generated@@401 $generated@@402)) $generated@@402)
 :pattern ( ($generated@@394 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@395 (type $generated@@403))))
(= (type ($generated@@392 $generated@@403)) ($generated@@80 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@403))
))) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= (type ($generated@@393 $generated@@405 $generated@@406)) ($generated@@394 $generated@@405 $generated@@406))
 :pattern ( ($generated@@393 $generated@@405 $generated@@406))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@T) ) (! (let (($generated@@409 (type $generated@@407)))
 (not ($generated@@0 ($generated@@85 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407))))
 :pattern ( (let (($generated@@409 (type $generated@@407)))
($generated@@85 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407)))
)))
(assert  (and (and (and (and (forall (($generated@@415 T@T) ($generated@@416 T@T) ) (= ($generated@@1 ($generated@@412 $generated@@415 $generated@@416)) 18)) (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (! (= ($generated@@413 ($generated@@412 $generated@@417 $generated@@418)) $generated@@417)
 :pattern ( ($generated@@412 $generated@@417 $generated@@418))
))) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= ($generated@@414 ($generated@@412 $generated@@419 $generated@@420)) $generated@@420)
 :pattern ( ($generated@@412 $generated@@419 $generated@@420))
))) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@413 (type $generated@@421))))
(= (type ($generated@@410 $generated@@421)) ($generated@@80 $generated@@422 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@421))
))) (forall (($generated@@423 T@T) ($generated@@424 T@T) ) (! (= (type ($generated@@411 $generated@@423 $generated@@424)) ($generated@@412 $generated@@423 $generated@@424))
 :pattern ( ($generated@@411 $generated@@423 $generated@@424))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@T) ) (! (let (($generated@@427 (type $generated@@425)))
 (not ($generated@@0 ($generated@@85 ($generated@@410 ($generated@@411 $generated@@427 $generated@@426)) $generated@@425))))
 :pattern ( (let (($generated@@427 (type $generated@@425)))
($generated@@85 ($generated@@410 ($generated@@411 $generated@@427 $generated@@426)) $generated@@425)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@83 (type $generated@@428))))
 (=> (and (= (type $generated@@428) ($generated@@80 $generated@@430 $generated@@2)) (= (type $generated@@429) ($generated@@80 $generated@@430 $generated@@2))) (= ($generated@@145 ($generated@@148 $generated@@428 $generated@@429)) (+ ($generated@@145 $generated@@428) ($generated@@145 $generated@@429)))))
 :pattern ( ($generated@@145 ($generated@@148 $generated@@428 $generated@@429)))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@172 (type $generated@@431))))
 (=> (and (= (type $generated@@431) ($generated@@171 $generated@@433)) (= (type $generated@@432) ($generated@@171 $generated@@433))) (= ($generated@@211 ($generated@@247 $generated@@431 $generated@@432)) (+ ($generated@@211 $generated@@431) ($generated@@211 $generated@@432)))))
 :pattern ( ($generated@@211 ($generated@@247 $generated@@431 $generated@@432)))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@83 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@80 $generated@@435 $generated@@2)) (= ($generated@@223 $generated@@434) (forall (($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@435) (and (<= 0 ($generated ($generated@@85 $generated@@434 $generated@@436))) (<= ($generated ($generated@@85 $generated@@434 $generated@@436)) ($generated@@145 $generated@@434))))
 :pattern ( ($generated@@85 $generated@@434 $generated@@436))
)))))
 :pattern ( ($generated@@223 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@81)) (= ($generated@@140 $generated@@438 ($generated@@137 $generated@@437))  (or (= $generated@@438 $generated@@138) (= ($generated@@139 $generated@@438) ($generated@@137 $generated@@437)))))
 :pattern ( ($generated@@140 $generated@@438 ($generated@@137 $generated@@437)))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
 (=> (= (type $generated@@439) ($generated@@80 $generated@@441 $generated@@2)) (= ($generated ($generated@@85 ($generated@@349 $generated@@439 $generated@@440) $generated@@440)) (+ ($generated ($generated@@85 $generated@@439 $generated@@440)) 1))))
 :pattern ( ($generated@@349 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 Int) ($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
 (=> (= (type $generated@@442) ($generated@@171 $generated@@445)) (and (=> (= $generated@@443 ($generated@@211 $generated@@442)) (= ($generated@@229 ($generated@@210 $generated@@442 $generated@@444) $generated@@443) $generated@@444)) (=> (not (= $generated@@443 ($generated@@211 $generated@@442))) (= ($generated@@229 ($generated@@210 $generated@@442 $generated@@444) $generated@@443) ($generated@@229 $generated@@442 $generated@@443))))))
 :pattern ( ($generated@@229 ($generated@@210 $generated@@442 $generated@@444) $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@447)))
 (=> (and (and (= (type $generated@@446) ($generated@@80 $generated@@449 $generated@@2)) (= (type $generated@@448) $generated@@449)) (< 0 ($generated ($generated@@85 $generated@@446 $generated@@448)))) (< 0 ($generated ($generated@@85 ($generated@@349 $generated@@446 $generated@@447) $generated@@448)))))
 :pattern ( ($generated@@349 $generated@@446 $generated@@447) ($generated@@85 $generated@@446 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@396 (type $generated@@450))))
(let (($generated@@452 ($generated@@395 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@394 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@393 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@450) $generated@@453)))
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@392 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@396 (type $generated@@455))))
(= (type ($generated@@454 $generated@@455)) ($generated@@80 $generated@@456 $generated@@4)))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@396 (type $generated@@457))))
(let (($generated@@459 ($generated@@395 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@394 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@393 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@458) ($generated@@0 ($generated@@85 ($generated@@454 $generated@@457) $generated@@460)))
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@454 $generated@@457))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@414 (type $generated@@461))))
(let (($generated@@463 ($generated@@413 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@412 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@411 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ) (!  (and (= (type $generated@@464) $generated@@463) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@461) $generated@@464)))
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@410 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@414 (type $generated@@466))))
(= (type ($generated@@465 $generated@@466)) ($generated@@80 $generated@@467 $generated@@4)))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@414 (type $generated@@468))))
(let (($generated@@470 ($generated@@413 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@412 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@411 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ) (!  (and (= (type $generated@@471) $generated@@469) ($generated@@0 ($generated@@85 ($generated@@465 $generated@@468) $generated@@471)))
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@465 $generated@@468))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@473)))
 (=> (and (= (type $generated@@472) ($generated@@80 $generated@@475 $generated@@2)) (= (type $generated@@474) $generated@@475)) (= (< 0 ($generated ($generated@@85 ($generated@@349 $generated@@472 $generated@@473) $generated@@474)))  (or (= $generated@@474 $generated@@473) (< 0 ($generated ($generated@@85 $generated@@472 $generated@@474)))))))
 :pattern ( ($generated@@85 ($generated@@349 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@477) $generated@@81)) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@211 ($generated@@270 $generated@@476 $generated@@477)))) (= ($generated@@229 ($generated@@270 $generated@@476 $generated@@477) $generated@@478) ($generated@@87 ($generated@@85 $generated@@476 $generated@@477) ($generated@@271 $generated@@478))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@476 $generated@@477) ($generated@@271 $generated@@478)))
 :pattern ( ($generated@@229 ($generated@@270 $generated@@476 $generated@@477) $generated@@478))
)))
 :pattern ( ($generated@@270 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@480) $generated@@67)) (= ($generated@@140 $generated@@479 ($generated@@222 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@204) (< 0 ($generated ($generated@@85 $generated@@479 $generated@@481)))) ($generated@@263 $generated@@481 $generated@@480))
 :pattern ( ($generated@@85 $generated@@479 $generated@@481))
))))
 :pattern ( ($generated@@140 $generated@@479 ($generated@@222 $generated@@480)))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@83 (type $generated@@483))))
 (=> (and (= (type $generated@@483) ($generated@@80 $generated@@485 $generated@@2)) (= (type $generated@@484) ($generated@@80 $generated@@485 $generated@@2))) (= ($generated@@482 $generated@@483 $generated@@484) (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@485) (= ($generated ($generated@@85 $generated@@483 $generated@@486)) ($generated ($generated@@85 $generated@@484 $generated@@486))))
 :pattern ( ($generated@@85 $generated@@483 $generated@@486))
 :pattern ( ($generated@@85 $generated@@484 $generated@@486))
)))))
 :pattern ( ($generated@@482 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 Int) ($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 (type $generated@@489)))
 (=> (= (type $generated@@487) ($generated@@171 $generated@@491)) (=> (and (and (<= 0 $generated@@488) (< $generated@@488 $generated@@490)) (<= $generated@@490 ($generated@@211 $generated@@487))) (= ($generated@@209 ($generated@@230 $generated@@487 $generated@@488 $generated@@489) $generated@@490) ($generated@@209 $generated@@487 $generated@@490)))))
 :pattern ( ($generated@@209 ($generated@@230 $generated@@487 $generated@@488 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@492 ($generated@@293 $generated@@493) $generated@@494) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@204) ($generated@@0 ($generated@@85 $generated@@492 $generated@@495))) ($generated@@320 $generated@@495 $generated@@493 $generated@@494))
 :pattern ( ($generated@@85 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@78 $generated@@492 ($generated@@293 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@497) $generated@@67)) (= (type $generated@@498) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@496 ($generated@@298 $generated@@497) $generated@@498) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@204) ($generated@@0 ($generated@@85 $generated@@496 $generated@@499))) ($generated@@320 $generated@@499 $generated@@497 $generated@@498))
 :pattern ( ($generated@@85 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@78 $generated@@496 ($generated@@298 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(= ($generated ($generated@@85 ($generated@@170 $generated@@501) $generated@@500)) 0))
 :pattern ( (let (($generated@@501 (type $generated@@500)))
($generated@@85 ($generated@@170 $generated@@501) $generated@@500)))
)))
(assert  (and (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@502 $generated@@505)) ($generated@@80 $generated@@204 $generated@@4))
 :pattern ( ($generated@@502 $generated@@505))
)) (forall (($generated@@506 T@T) ($generated@@507 T@U) ) (! (= (type ($generated@@503 $generated@@506 $generated@@507)) $generated@@506)
 :pattern ( ($generated@@503 $generated@@506 $generated@@507))
))) (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@396 (type $generated@@508))))
(let (($generated@@510 ($generated@@395 (type $generated@@508))))
(= (type ($generated@@504 $generated@@508)) ($generated@@80 $generated@@510 $generated@@509))))
 :pattern ( ($generated@@504 $generated@@508))
))))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) ($generated@@394 $generated@@204 $generated@@204)) (= (type $generated@@512) $generated@@204)) (= ($generated@@0 ($generated@@85 ($generated@@502 $generated@@511) $generated@@512))  (and ($generated@@0 ($generated@@85 ($generated@@392 $generated@@511) ($generated@@202 ($generated@@503 $generated@@195 $generated@@512)))) (= ($generated@@85 ($generated@@504 $generated@@511) ($generated@@202 ($generated@@503 $generated@@195 $generated@@512))) ($generated@@203 ($generated@@503 $generated@@195 $generated@@512))))))
 :pattern ( ($generated@@85 ($generated@@502 $generated@@511) $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) ($generated@@80 $generated@@204 $generated@@4))
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@414 (type $generated@@516))))
(let (($generated@@518 ($generated@@413 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516)) ($generated@@80 $generated@@518 $generated@@517))))
 :pattern ( ($generated@@514 $generated@@516))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) ($generated@@412 $generated@@204 $generated@@204)) (= (type $generated@@520) $generated@@204)) (= ($generated@@0 ($generated@@85 ($generated@@513 $generated@@519) $generated@@520))  (and ($generated@@0 ($generated@@85 ($generated@@410 $generated@@519) ($generated@@202 ($generated@@503 $generated@@195 $generated@@520)))) (= ($generated@@85 ($generated@@514 $generated@@519) ($generated@@202 ($generated@@503 $generated@@195 $generated@@520))) ($generated@@203 ($generated@@503 $generated@@195 $generated@@520))))))
 :pattern ( ($generated@@85 ($generated@@513 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(let (($generated@@524 ($generated@@395 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@394 $generated@@524 $generated@@523)) (= ($generated@@0 ($generated@@85 ($generated@@454 $generated@@521) $generated@@522)) (exists (($generated@@525 T@U) ) (!  (and (= (type $generated@@525) $generated@@524) (and ($generated@@0 ($generated@@85 ($generated@@392 $generated@@521) $generated@@525)) (= $generated@@522 ($generated@@85 ($generated@@504 $generated@@521) $generated@@525))))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@521) $generated@@525))
 :pattern ( ($generated@@85 ($generated@@504 $generated@@521) $generated@@525))
))))))
 :pattern ( ($generated@@85 ($generated@@454 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(let (($generated@@529 ($generated@@413 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@412 $generated@@529 $generated@@528)) (= ($generated@@0 ($generated@@85 ($generated@@465 $generated@@526) $generated@@527)) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@529) (and ($generated@@0 ($generated@@85 ($generated@@410 $generated@@526) $generated@@530)) (= $generated@@527 ($generated@@85 ($generated@@514 $generated@@526) $generated@@530))))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@526) $generated@@530))
 :pattern ( ($generated@@85 ($generated@@514 $generated@@526) $generated@@530))
))))))
 :pattern ( ($generated@@85 ($generated@@465 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (! (= (type ($generated@@531 $generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) ($generated@@394 $generated@@204 $generated@@204)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@534 ($generated@@531 $generated@@535 $generated@@536) $generated@@537) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@534) $generated@@538))) (and ($generated@@320 ($generated@@85 ($generated@@504 $generated@@534) $generated@@538) $generated@@536 $generated@@537) ($generated@@320 $generated@@538 $generated@@535 $generated@@537)))
 :pattern ( ($generated@@85 ($generated@@504 $generated@@534) $generated@@538))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@534) $generated@@538))
))))
 :pattern ( ($generated@@78 $generated@@534 ($generated@@531 $generated@@535 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (! (= (type ($generated@@539 $generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) ($generated@@412 $generated@@204 $generated@@204)) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@542 ($generated@@539 $generated@@543 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@542) $generated@@546))) (and ($generated@@320 ($generated@@85 ($generated@@514 $generated@@542) $generated@@546) $generated@@544 $generated@@545) ($generated@@320 $generated@@546 $generated@@543 $generated@@545)))
 :pattern ( ($generated@@85 ($generated@@514 $generated@@542) $generated@@546))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@542) $generated@@546))
))))
 :pattern ( ($generated@@78 $generated@@542 ($generated@@539 $generated@@543 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@83 (type $generated@@547))))
 (=> (and (and (= (type $generated@@547) ($generated@@80 $generated@@549 $generated@@2)) (= (type $generated@@548) ($generated@@80 $generated@@549 $generated@@2))) ($generated@@482 $generated@@547 $generated@@548)) (= $generated@@547 $generated@@548)))
 :pattern ( ($generated@@482 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@172 (type $generated@@550))))
 (=> (and (and (= (type $generated@@550) ($generated@@171 $generated@@552)) (= (type $generated@@551) ($generated@@171 $generated@@552))) ($generated@@332 $generated@@550 $generated@@551)) (= $generated@@550 $generated@@551)))
 :pattern ( ($generated@@332 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 Int) ) (! (let (($generated@@555 ($generated@@172 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@171 $generated@@555)) (=> (and (<= 0 $generated@@554) (<= $generated@@554 ($generated@@211 $generated@@553))) (= ($generated@@211 ($generated@@246 $generated@@553 $generated@@554)) $generated@@554))))
 :pattern ( ($generated@@211 ($generated@@246 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@556) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@557) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@558) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@556 $generated@@558))) (and ($generated@@161 $generated@@556 $generated@@557) ($generated@@161 $generated@@557 $generated@@558))) ($generated@@161 $generated@@556 $generated@@558))
 :pattern ( ($generated@@161 $generated@@556 $generated@@557) ($generated@@161 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 Int) ) (!  (=> (and (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@561) $generated@@81)) (=> (and (and (and ($generated@@180 $generated@@560) (and (not (= $generated@@561 $generated@@138)) (= ($generated@@139 $generated@@561) ($generated@@137 $generated@@559)))) (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@136 $generated@@561)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@560 $generated@@561) $generated@@60))) ($generated@@320 ($generated@@87 ($generated@@85 $generated@@560 $generated@@561) ($generated@@271 $generated@@562)) $generated@@559 $generated@@560)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@560 $generated@@561) ($generated@@271 $generated@@562)) ($generated@@137 $generated@@559))
)))
(assert (forall (($generated@@564 T@T) ) (! (= (type ($generated@@563 $generated@@564)) ($generated@@80 $generated@@564 $generated@@4))
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@414 (type $generated@@565))))
(let (($generated@@567 ($generated@@413 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@412 $generated@@567 $generated@@566)) (= (= $generated@@565 ($generated@@411 $generated@@567 $generated@@566)) (= ($generated@@410 $generated@@565) ($generated@@563 $generated@@567))))))
 :pattern ( ($generated@@410 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@414 (type $generated@@568))))
(let (($generated@@570 ($generated@@413 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@412 $generated@@570 $generated@@569)) (= (= $generated@@568 ($generated@@411 $generated@@570 $generated@@569)) (= ($generated@@465 $generated@@568) ($generated@@563 $generated@@569))))))
 :pattern ( ($generated@@465 $generated@@568))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@414 (type $generated@@571))))
(let (($generated@@573 ($generated@@413 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@412 $generated@@573 $generated@@572)) (= (= $generated@@571 ($generated@@411 $generated@@573 $generated@@572)) (= ($generated@@513 $generated@@571) ($generated@@563 $generated@@204))))))
 :pattern ( ($generated@@513 $generated@@571))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@396 (type $generated@@574))))
(let (($generated@@576 ($generated@@395 (type $generated@@574))))
 (=> (= (type $generated@@574) ($generated@@394 $generated@@576 $generated@@575)) (or (= $generated@@574 ($generated@@393 $generated@@576 $generated@@575)) (exists (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (and (and (= (type $generated@@577) $generated@@204) (= (type $generated@@578) $generated@@204)) ($generated@@0 ($generated@@85 ($generated@@502 $generated@@574) ($generated@@364 ($generated@@262 $generated@@577 $generated@@578)))))
 :no-pattern (type $generated@@577)
 :no-pattern (type $generated@@578)
 :no-pattern ($generated $generated@@577)
 :no-pattern ($generated@@0 $generated@@577)
 :no-pattern ($generated $generated@@578)
 :no-pattern ($generated@@0 $generated@@578)
))))))
 :pattern ( ($generated@@502 $generated@@574))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@414 (type $generated@@579))))
(let (($generated@@581 ($generated@@413 (type $generated@@579))))
 (=> (= (type $generated@@579) ($generated@@412 $generated@@581 $generated@@580)) (or (= $generated@@579 ($generated@@411 $generated@@581 $generated@@580)) (exists (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (and (and (= (type $generated@@582) $generated@@204) (= (type $generated@@583) $generated@@204)) ($generated@@0 ($generated@@85 ($generated@@513 $generated@@579) ($generated@@364 ($generated@@262 $generated@@582 $generated@@583)))))
 :no-pattern (type $generated@@582)
 :no-pattern (type $generated@@583)
 :no-pattern ($generated $generated@@582)
 :no-pattern ($generated@@0 $generated@@582)
 :no-pattern ($generated $generated@@583)
 :no-pattern ($generated@@0 $generated@@583)
))))))
 :pattern ( ($generated@@513 $generated@@579))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@204) ($generated@@263 $generated@@584 $generated@@46)) (and (= ($generated@@364 ($generated@@503 $generated@@2 $generated@@584)) $generated@@584) ($generated@@140 ($generated@@503 $generated@@2 $generated@@584) $generated@@46)))
 :pattern ( ($generated@@263 $generated@@584 $generated@@46))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@204) ($generated@@263 $generated@@585 $generated@@47)) (and (= ($generated@@364 ($generated@@503 $generated@@3 $generated@@585)) $generated@@585) ($generated@@140 ($generated@@503 $generated@@3 $generated@@585) $generated@@47)))
 :pattern ( ($generated@@263 $generated@@585 $generated@@47))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@204) ($generated@@263 $generated@@586 $generated@@44)) (and (= ($generated@@364 ($generated@@503 $generated@@4 $generated@@586)) $generated@@586) ($generated@@140 ($generated@@503 $generated@@4 $generated@@586) $generated@@44)))
 :pattern ( ($generated@@263 $generated@@586 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@587) 19))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@204) ($generated@@263 $generated@@588 $generated@@45)) (and (= ($generated@@364 ($generated@@503 $generated@@587 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@503 $generated@@587 $generated@@588) $generated@@45)))
 :pattern ( ($generated@@263 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@67) (= ($generated@@263 ($generated@@364 $generated@@589) $generated@@590) ($generated@@140 $generated@@589 $generated@@590)))
 :pattern ( ($generated@@263 ($generated@@364 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ($generated@@593 T@U) ($generated@@594 Int) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (= (type $generated@@591) ($generated@@171 $generated@@595)) (=> (and (<= $generated@@594 $generated@@592) (< $generated@@592 ($generated@@211 $generated@@591))) (= ($generated@@246 ($generated@@230 $generated@@591 $generated@@592 $generated@@593) $generated@@594) ($generated@@246 $generated@@591 $generated@@594)))))
 :pattern ( ($generated@@246 ($generated@@230 $generated@@591 $generated@@592 $generated@@593) $generated@@594))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
(= (type ($generated@@596 $generated@@597)) ($generated@@80 $generated@@598 $generated@@2)))
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (= (type $generated@@600) $generated@@601) (and (= (= ($generated ($generated@@85 ($generated@@596 $generated@@599) $generated@@600)) 1) (= $generated@@599 $generated@@600)) (= (= ($generated ($generated@@85 ($generated@@596 $generated@@599) $generated@@600)) 0) (not (= $generated@@599 $generated@@600))))))
 :pattern ( ($generated@@85 ($generated@@596 $generated@@599) $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@81) (<= 0 ($generated@@136 $generated@@602)))
 :no-pattern (type $generated@@602)
 :no-pattern ($generated $generated@@602)
 :no-pattern ($generated@@0 $generated@@602)
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@83 (type $generated@@603))))
 (=> (= (type $generated@@603) ($generated@@80 $generated@@604 $generated@@2)) (<= 0 ($generated@@145 $generated@@603))))
 :pattern ( ($generated@@145 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@172 (type $generated@@605))))
 (=> (= (type $generated@@605) ($generated@@171 $generated@@606)) (<= 0 ($generated@@211 $generated@@605))))
 :pattern ( ($generated@@211 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ($generated@@609 Int) ) (! (let (($generated@@610 ($generated@@172 (type $generated@@607))))
 (=> (= (type $generated@@607) ($generated@@171 $generated@@610)) (=> (and (and (<= 0 $generated@@608) (< $generated@@608 $generated@@609)) (<= $generated@@609 ($generated@@211 $generated@@607))) (< ($generated@@341 ($generated@@247 ($generated@@246 $generated@@607 $generated@@608) ($generated@@209 $generated@@607 $generated@@609))) ($generated@@341 $generated@@607)))))
 :pattern ( ($generated@@341 ($generated@@247 ($generated@@246 $generated@@607 $generated@@608) ($generated@@209 $generated@@607 $generated@@609))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@613)))
 (=> (and (= (type $generated@@611) ($generated@@80 $generated@@614 $generated@@2)) (= (type $generated@@612) ($generated@@80 $generated@@614 $generated@@2))) (= ($generated ($generated@@85 ($generated@@147 $generated@@611 $generated@@612) $generated@@613)) ($generated@@185 ($generated ($generated@@85 $generated@@611 $generated@@613)) ($generated ($generated@@85 $generated@@612 $generated@@613))))))
 :pattern ( ($generated@@85 ($generated@@147 $generated@@611 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@67)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@67) (= (type $generated@@618) $generated@@67)) (= ($generated@@615 ($generated@@531 $generated@@617 $generated@@618)) $generated@@617))
 :pattern ( ($generated@@531 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@67)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@67) (= (type $generated@@622) $generated@@67)) (= ($generated@@619 ($generated@@531 $generated@@621 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@531 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@67) (= (type $generated@@624) $generated@@67)) (= ($generated@@76 ($generated@@531 $generated@@623 $generated@@624)) $generated@@58))
 :pattern ( ($generated@@531 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ) (! (= (type ($generated@@625 $generated@@626)) $generated@@67)
 :pattern ( ($generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@67) (= (type $generated@@628) $generated@@67)) (= ($generated@@625 ($generated@@539 $generated@@627 $generated@@628)) $generated@@627))
 :pattern ( ($generated@@539 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ) (! (= (type ($generated@@629 $generated@@630)) $generated@@67)
 :pattern ( ($generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@67) (= (type $generated@@632) $generated@@67)) (= ($generated@@629 ($generated@@539 $generated@@631 $generated@@632)) $generated@@632))
 :pattern ( ($generated@@539 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@67) (= (type $generated@@634) $generated@@67)) (= ($generated@@76 ($generated@@539 $generated@@633 $generated@@634)) $generated@@59))
 :pattern ( ($generated@@539 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@204) (= (type $generated@@636) $generated@@204)) (= ($generated@@329 ($generated@@262 $generated@@635 $generated@@636)) $generated@@63))
 :pattern ( ($generated@@262 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ) (! (= (type ($generated@@637 $generated@@638)) $generated@@67)
 :pattern ( ($generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@67) (= (type $generated@@640) $generated@@67)) (= ($generated@@637 ($generated@@194 $generated@@639 $generated@@640)) $generated@@639))
 :pattern ( ($generated@@194 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ) (! (= (type ($generated@@641 $generated@@642)) $generated@@67)
 :pattern ( ($generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@67) (= (type $generated@@644) $generated@@67)) (= ($generated@@641 ($generated@@194 $generated@@643 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@194 $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@204) (= (type $generated@@646) $generated@@204)) (= ($generated@@202 ($generated@@262 $generated@@645 $generated@@646)) $generated@@645))
 :pattern ( ($generated@@262 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@204) (= (type $generated@@648) $generated@@204)) (= ($generated@@203 ($generated@@262 $generated@@647 $generated@@648)) $generated@@648))
 :pattern ( ($generated@@262 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@649) ($generated@@171 $generated@@204)) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@649 ($generated@@311 $generated@@650) $generated@@651) (forall (($generated@@652 Int) ) (!  (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@211 $generated@@649))) ($generated@@320 ($generated@@229 $generated@@649 $generated@@652) $generated@@650 $generated@@651))
 :pattern ( ($generated@@229 $generated@@649 $generated@@652))
))))
 :pattern ( ($generated@@78 $generated@@649 ($generated@@311 $generated@@650) $generated@@651))
)))
(assert (forall (($generated@@654 Int) ) (! (= ($generated@@653 ($generated@@79 $generated@@654)) $generated@@654)
 :pattern ( ($generated@@79 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ) (! (= (type ($generated@@655 $generated@@656)) $generated@@67)
 :pattern ( ($generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@67) (= ($generated@@655 ($generated@@293 $generated@@657)) $generated@@657))
 :pattern ( ($generated@@293 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@67) (= ($generated@@76 ($generated@@293 $generated@@658)) $generated@@54))
 :pattern ( ($generated@@293 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ) (! (= (type ($generated@@659 $generated@@660)) $generated@@67)
 :pattern ( ($generated@@659 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@67) (= ($generated@@659 ($generated@@298 $generated@@661)) $generated@@661))
 :pattern ( ($generated@@298 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@67) (= ($generated@@76 ($generated@@298 $generated@@662)) $generated@@55))
 :pattern ( ($generated@@298 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ) (! (= (type ($generated@@663 $generated@@664)) $generated@@67)
 :pattern ( ($generated@@663 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@67) (= ($generated@@663 ($generated@@222 $generated@@665)) $generated@@665))
 :pattern ( ($generated@@222 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@67) (= ($generated@@76 ($generated@@222 $generated@@666)) $generated@@56))
 :pattern ( ($generated@@222 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ) (! (= (type ($generated@@667 $generated@@668)) $generated@@67)
 :pattern ( ($generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@67) (= ($generated@@667 ($generated@@311 $generated@@669)) $generated@@669))
 :pattern ( ($generated@@311 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@67) (= ($generated@@76 ($generated@@311 $generated@@670)) $generated@@57))
 :pattern ( ($generated@@311 $generated@@670))
)))
(assert (forall (($generated@@671 Int) ) (! (= ($generated@@75 ($generated@@271 $generated@@671)) 1)
 :pattern ( ($generated@@271 $generated@@671))
)))
(assert (forall (($generated@@673 Int) ) (! (= ($generated@@672 ($generated@@271 $generated@@673)) $generated@@673)
 :pattern ( ($generated@@271 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ) (! (= (type ($generated@@674 $generated@@675)) $generated@@67)
 :pattern ( ($generated@@674 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@67) (= ($generated@@674 ($generated@@137 $generated@@676)) $generated@@676))
 :pattern ( ($generated@@137 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ) (! (= (type ($generated@@677 $generated@@678)) $generated@@67)
 :pattern ( ($generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@67) (= ($generated@@677 ($generated@@188 $generated@@679)) $generated@@679))
 :pattern ( ($generated@@188 $generated@@679))
)))
(assert (forall (($generated@@680 T@U) ) (! (let (($generated@@681 (type $generated@@680)))
(= ($generated@@503 $generated@@681 ($generated@@364 $generated@@680)) $generated@@680))
 :pattern ( ($generated@@364 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@682) ($generated@@394 $generated@@204 $generated@@204)) (= (type $generated@@683) $generated@@67)) (= (type $generated@@684) $generated@@67)) (= ($generated@@140 $generated@@682 ($generated@@531 $generated@@683 $generated@@684)) (forall (($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@682) $generated@@685))) (and ($generated@@263 ($generated@@85 ($generated@@504 $generated@@682) $generated@@685) $generated@@684) ($generated@@263 $generated@@685 $generated@@683)))
 :pattern ( ($generated@@85 ($generated@@504 $generated@@682) $generated@@685))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@682) $generated@@685))
))))
 :pattern ( ($generated@@140 $generated@@682 ($generated@@531 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@686) ($generated@@412 $generated@@204 $generated@@204)) (= (type $generated@@687) $generated@@67)) (= (type $generated@@688) $generated@@67)) (= ($generated@@140 $generated@@686 ($generated@@539 $generated@@687 $generated@@688)) (forall (($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@686) $generated@@689))) (and ($generated@@263 ($generated@@85 ($generated@@514 $generated@@686) $generated@@689) $generated@@688) ($generated@@263 $generated@@689 $generated@@687)))
 :pattern ( ($generated@@85 ($generated@@514 $generated@@686) $generated@@689))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@686) $generated@@689))
))))
 :pattern ( ($generated@@140 $generated@@686 ($generated@@539 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 Int) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@692) $generated@@204)) (= (type $generated@@693) $generated@@81)) (and (<= 0 $generated@@691) (< $generated@@691 ($generated@@136 $generated@@693)))) (= ($generated@@270 ($generated@@86 $generated@@690 $generated@@693 ($generated@@88 ($generated@@85 $generated@@690 $generated@@693) ($generated@@271 $generated@@691) $generated@@692)) $generated@@693) ($generated@@230 ($generated@@270 $generated@@690 $generated@@693) $generated@@691 $generated@@692)))
 :pattern ( ($generated@@270 ($generated@@86 $generated@@690 $generated@@693 ($generated@@88 ($generated@@85 $generated@@690 $generated@@693) ($generated@@271 $generated@@691) $generated@@692)) $generated@@693))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 Int) ) (!  (=> (and (and (and (= (type $generated@@694) $generated@@67) (= (type $generated@@695) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@696) $generated@@81)) (and (and ($generated@@180 $generated@@695) (and (not (= $generated@@696 $generated@@138)) (= ($generated@@139 $generated@@696) ($generated@@137 $generated@@694)))) (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@136 $generated@@696))))) ($generated@@263 ($generated@@87 ($generated@@85 $generated@@695 $generated@@696) ($generated@@271 $generated@@697)) $generated@@694))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@695 $generated@@696) ($generated@@271 $generated@@697)) ($generated@@137 $generated@@694))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 Int) ($generated@@700 T@U) ($generated@@701 T@U) ) (! (let (($generated@@702 (type $generated@@700)))
 (=> (and (and (= (type $generated@@698) ($generated@@171 $generated@@702)) (= (type $generated@@701) $generated@@702)) (and (<= 0 $generated@@699) (< $generated@@699 ($generated@@211 $generated@@698)))) (= ($generated ($generated@@85 ($generated@@168 ($generated@@230 $generated@@698 $generated@@699 $generated@@700)) $generated@@701)) ($generated ($generated@@85 ($generated@@148 ($generated@@146 ($generated@@168 $generated@@698) ($generated@@596 ($generated@@229 $generated@@698 $generated@@699))) ($generated@@596 $generated@@700)) $generated@@701)))))
 :pattern ( ($generated@@85 ($generated@@168 ($generated@@230 $generated@@698 $generated@@699 $generated@@700)) $generated@@701))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@204) (= (type $generated@@706) $generated@@204)) (< ($generated@@703 $generated@@705) ($generated@@704 ($generated@@262 $generated@@705 $generated@@706))))
 :pattern ( ($generated@@262 $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@204) (= (type $generated@@708) $generated@@204)) (< ($generated@@703 $generated@@708) ($generated@@704 ($generated@@262 $generated@@707 $generated@@708))))
 :pattern ( ($generated@@262 $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (! (let (($generated@@711 ($generated@@83 (type $generated@@709))))
 (=> (and (= (type $generated@@709) ($generated@@80 $generated@@711 $generated@@2)) (= (type $generated@@710) ($generated@@80 $generated@@711 $generated@@2))) (= ($generated@@147 $generated@@709 ($generated@@147 $generated@@709 $generated@@710)) ($generated@@147 $generated@@709 $generated@@710))))
 :pattern ( ($generated@@147 $generated@@709 ($generated@@147 $generated@@709 $generated@@710)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (and (= (type $generated@@712) $generated@@204) (= (type $generated@@713) $generated@@67)) (= (type $generated@@714) $generated@@67)) ($generated@@263 $generated@@712 ($generated@@531 $generated@@713 $generated@@714))) (and (= ($generated@@364 ($generated@@503 ($generated@@394 $generated@@204 $generated@@204) $generated@@712)) $generated@@712) ($generated@@140 ($generated@@503 ($generated@@394 $generated@@204 $generated@@204) $generated@@712) ($generated@@531 $generated@@713 $generated@@714))))
 :pattern ( ($generated@@263 $generated@@712 ($generated@@531 $generated@@713 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (and (= (type $generated@@715) $generated@@204) (= (type $generated@@716) $generated@@67)) (= (type $generated@@717) $generated@@67)) ($generated@@263 $generated@@715 ($generated@@539 $generated@@716 $generated@@717))) (and (= ($generated@@364 ($generated@@503 ($generated@@412 $generated@@204 $generated@@204) $generated@@715)) $generated@@715) ($generated@@140 ($generated@@503 ($generated@@412 $generated@@204 $generated@@204) $generated@@715) ($generated@@539 $generated@@716 $generated@@717))))
 :pattern ( ($generated@@263 $generated@@715 ($generated@@539 $generated@@716 $generated@@717)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (and (= (type $generated@@718) $generated@@67) (= (type $generated@@719) $generated@@67)) (= (type $generated@@720) $generated@@204)) ($generated@@263 $generated@@720 ($generated@@194 $generated@@718 $generated@@719))) (and (= ($generated@@364 ($generated@@503 $generated@@195 $generated@@720)) $generated@@720) ($generated@@140 ($generated@@503 $generated@@195 $generated@@720) ($generated@@194 $generated@@718 $generated@@719))))
 :pattern ( ($generated@@263 $generated@@720 ($generated@@194 $generated@@718 $generated@@719)))
)))
(assert (forall (($generated@@721 T@U) ) (! (let (($generated@@722 (type $generated@@721)))
 (not ($generated@@0 ($generated@@85 ($generated@@563 $generated@@722) $generated@@721))))
 :pattern ( (let (($generated@@722 (type $generated@@721)))
($generated@@85 ($generated@@563 $generated@@722) $generated@@721)))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@723) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@724) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@725) $generated@@81)) (=> (and (and (and ($generated@@180 $generated@@723) ($generated@@180 $generated@@724)) ($generated@@161 $generated@@723 $generated@@724)) (= ($generated@@85 $generated@@723 $generated@@725) ($generated@@85 $generated@@724 $generated@@725))) (= ($generated@@270 $generated@@723 $generated@@725) ($generated@@270 $generated@@724 $generated@@725))))
 :pattern ( ($generated@@270 $generated@@724 $generated@@725) ($generated@@161 $generated@@723 $generated@@724))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@732 T@T) ($generated@@733 T@T) ) (= ($generated@@1 ($generated@@728 $generated@@732 $generated@@733)) 20)) (forall (($generated@@734 T@T) ($generated@@735 T@T) ) (! (= ($generated@@729 ($generated@@728 $generated@@734 $generated@@735)) $generated@@734)
 :pattern ( ($generated@@728 $generated@@734 $generated@@735))
))) (forall (($generated@@736 T@T) ($generated@@737 T@T) ) (! (= ($generated@@730 ($generated@@728 $generated@@736 $generated@@737)) $generated@@737)
 :pattern ( ($generated@@728 $generated@@736 $generated@@737))
))) (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ) (! (let (($generated@@741 ($generated@@730 (type $generated@@738))))
(= (type ($generated@@726 $generated@@738 $generated@@739 $generated@@740)) $generated@@741))
 :pattern ( ($generated@@726 $generated@@738 $generated@@739 $generated@@740))
))) (forall (($generated@@742 T@U) ($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ) (! (let (($generated@@746 (type $generated@@745)))
(let (($generated@@747 (type $generated@@743)))
(= (type ($generated@@731 $generated@@742 $generated@@743 $generated@@744 $generated@@745)) ($generated@@728 $generated@@747 $generated@@746))))
 :pattern ( ($generated@@731 $generated@@742 $generated@@743 $generated@@744 $generated@@745))
))) (forall (($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (! (let (($generated@@752 ($generated@@730 (type $generated@@748))))
 (=> (= (type $generated@@751) $generated@@752) (= ($generated@@726 ($generated@@731 $generated@@748 $generated@@749 $generated@@750 $generated@@751) $generated@@749 $generated@@750) $generated@@751)))
 :weight 0
))) (and (and (forall (($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (or (= $generated@@755 $generated@@757) (= ($generated@@726 ($generated@@731 $generated@@754 $generated@@755 $generated@@756 $generated@@753) $generated@@757 $generated@@758) ($generated@@726 $generated@@754 $generated@@757 $generated@@758)))
 :weight 0
)) (forall (($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ($generated@@763 T@U) ($generated@@764 T@U) ) (!  (or (= $generated@@762 $generated@@764) (= ($generated@@726 ($generated@@731 $generated@@760 $generated@@761 $generated@@762 $generated@@759) $generated@@763 $generated@@764) ($generated@@726 $generated@@760 $generated@@763 $generated@@764)))
 :weight 0
))) (forall (($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ($generated@@769 T@U) ($generated@@770 T@U) ) (!  (or true (= ($generated@@726 ($generated@@731 $generated@@766 $generated@@767 $generated@@768 $generated@@765) $generated@@769 $generated@@770) ($generated@@726 $generated@@766 $generated@@769 $generated@@770)))
 :weight 0
)))) (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ($generated@@774 T@U) ) (! (= (type ($generated@@727 $generated@@771 $generated@@772 $generated@@773 $generated@@774)) ($generated@@728 $generated@@81 $generated@@4))
 :pattern ( ($generated@@727 $generated@@771 $generated@@772 $generated@@773 $generated@@774))
))))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ($generated@@779 T@U) ($generated@@780 T@U) ) (! (let (($generated@@781 ($generated@@70 (type $generated@@780))))
 (=> (and (and (and (and (and (= (type $generated@@775) $generated@@81) (= (type $generated@@776) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@777) ($generated@@69 $generated@@4))) (= (type $generated@@778) $generated@@81)) (= (type $generated@@779) $generated@@81)) (= (type $generated@@780) ($generated@@69 $generated@@781))) (= ($generated@@0 ($generated@@726 ($generated@@727 $generated@@775 $generated@@776 $generated@@777 $generated@@778) $generated@@779 $generated@@780))  (=> (and (not (= $generated@@779 $generated@@775)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@776 $generated@@779) $generated@@777))) (= $generated@@779 $generated@@778)))))
 :pattern ( ($generated@@726 ($generated@@727 $generated@@775 $generated@@776 $generated@@777 $generated@@778) $generated@@779 $generated@@780))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 Int) ($generated@@784 T@U) ) (! (let (($generated@@785 (type $generated@@784)))
 (=> (= (type $generated@@782) ($generated@@171 $generated@@785)) (=> (and (<= 0 $generated@@783) (< $generated@@783 ($generated@@211 $generated@@782))) (= ($generated@@211 ($generated@@230 $generated@@782 $generated@@783 $generated@@784)) ($generated@@211 $generated@@782)))))
 :pattern ( ($generated@@211 ($generated@@230 $generated@@782 $generated@@783 $generated@@784)))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@786) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@787) $generated@@81)) (= ($generated@@211 ($generated@@270 $generated@@786 $generated@@787)) ($generated@@136 $generated@@787)))
 :pattern ( ($generated@@211 ($generated@@270 $generated@@786 $generated@@787)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ) (!  (=> (and (= (type $generated@@788) $generated@@67) (= (type $generated@@789) $generated@@67)) (and (= ($generated@@76 ($generated@@194 $generated@@788 $generated@@789)) $generated@@64) (= ($generated@@384 ($generated@@194 $generated@@788 $generated@@789)) $generated@@66)))
 :pattern ( ($generated@@194 $generated@@788 $generated@@789))
)))
(assert  (and (forall (($generated@@792 T@U) ) (! (let (($generated@@793 ($generated@@172 (type $generated@@792))))
(= (type ($generated@@790 $generated@@792)) ($generated@@171 $generated@@793)))
 :pattern ( ($generated@@790 $generated@@792))
)) (forall (($generated@@794 T@U) ) (! (let (($generated@@795 ($generated@@172 (type $generated@@794))))
(= (type ($generated@@791 $generated@@794)) $generated@@795))
 :pattern ( ($generated@@791 $generated@@794))
))))
(assert (forall (($generated@@796 T@U) ($generated@@797 T@U) ) (! (let (($generated@@798 (type $generated@@797)))
 (=> (= (type $generated@@796) ($generated@@171 $generated@@798)) (and (= ($generated@@790 ($generated@@210 $generated@@796 $generated@@797)) $generated@@796) (= ($generated@@791 ($generated@@210 $generated@@796 $generated@@797)) $generated@@797))))
 :pattern ( ($generated@@210 $generated@@796 $generated@@797))
)))
(assert (forall (($generated@@799 T@U) ) (!  (=> (= (type $generated@@799) $generated@@195) (= ($generated@@703 ($generated@@364 $generated@@799)) ($generated@@704 $generated@@799)))
 :pattern ( ($generated@@703 ($generated@@364 $generated@@799)))
)))
(assert (forall (($generated@@800 T@U) ) (! (let (($generated@@801 (type $generated@@800)))
(= ($generated@@596 $generated@@800) ($generated@@349 ($generated@@170 $generated@@801) $generated@@800)))
 :pattern ( ($generated@@596 $generated@@800))
)))
(assert (forall (($generated@@802 T@U) ) (! (let (($generated@@803 ($generated@@172 (type $generated@@802))))
 (=> (= (type $generated@@802) ($generated@@171 $generated@@803)) (= ($generated@@145 ($generated@@168 $generated@@802)) ($generated@@211 $generated@@802))))
 :pattern ( ($generated@@145 ($generated@@168 $generated@@802)))
)))
(assert (forall (($generated@@804 Int) ($generated@@805 Int) ) (! (= (<= $generated@@804 $generated@@805) (= ($generated@@185 $generated@@804 $generated@@805) $generated@@804))
 :pattern ( ($generated@@185 $generated@@804 $generated@@805))
)))
(assert (forall (($generated@@806 Int) ($generated@@807 Int) ) (! (= (<= $generated@@807 $generated@@806) (= ($generated@@185 $generated@@806 $generated@@807) $generated@@807))
 :pattern ( ($generated@@185 $generated@@806 $generated@@807))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (and (= (type $generated@@808) $generated@@204) ($generated@@263 $generated@@808 ($generated@@79 0))) (and (= ($generated@@364 ($generated@@503 $generated@@2 $generated@@808)) $generated@@808) ($generated@@140 ($generated@@503 ($generated@@80 $generated@@204 $generated@@4) $generated@@808) ($generated@@79 0))))
 :pattern ( ($generated@@263 $generated@@808 ($generated@@79 0)))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ) (!  (=> (and (and (= (type $generated@@809) $generated@@204) (= (type $generated@@810) $generated@@67)) ($generated@@263 $generated@@809 ($generated@@293 $generated@@810))) (and (= ($generated@@364 ($generated@@503 ($generated@@80 $generated@@204 $generated@@4) $generated@@809)) $generated@@809) ($generated@@140 ($generated@@503 ($generated@@80 $generated@@204 $generated@@4) $generated@@809) ($generated@@293 $generated@@810))))
 :pattern ( ($generated@@263 $generated@@809 ($generated@@293 $generated@@810)))
)))
(assert (forall (($generated@@811 T@U) ($generated@@812 T@U) ) (!  (=> (and (and (= (type $generated@@811) $generated@@204) (= (type $generated@@812) $generated@@67)) ($generated@@263 $generated@@811 ($generated@@298 $generated@@812))) (and (= ($generated@@364 ($generated@@503 ($generated@@80 $generated@@204 $generated@@4) $generated@@811)) $generated@@811) ($generated@@140 ($generated@@503 ($generated@@80 $generated@@204 $generated@@4) $generated@@811) ($generated@@298 $generated@@812))))
 :pattern ( ($generated@@263 $generated@@811 ($generated@@298 $generated@@812)))
)))
(assert (forall (($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (and (= (type $generated@@813) $generated@@204) (= (type $generated@@814) $generated@@67)) ($generated@@263 $generated@@813 ($generated@@222 $generated@@814))) (and (= ($generated@@364 ($generated@@503 ($generated@@80 $generated@@204 $generated@@2) $generated@@813)) $generated@@813) ($generated@@140 ($generated@@503 ($generated@@80 $generated@@204 $generated@@2) $generated@@813) ($generated@@222 $generated@@814))))
 :pattern ( ($generated@@263 $generated@@813 ($generated@@222 $generated@@814)))
)))
(assert (forall (($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (and (= (type $generated@@815) $generated@@204) (= (type $generated@@816) $generated@@67)) ($generated@@263 $generated@@815 ($generated@@311 $generated@@816))) (and (= ($generated@@364 ($generated@@503 ($generated@@171 $generated@@204) $generated@@815)) $generated@@815) ($generated@@140 ($generated@@503 ($generated@@171 $generated@@204) $generated@@815) ($generated@@311 $generated@@816))))
 :pattern ( ($generated@@263 $generated@@815 ($generated@@311 $generated@@816)))
)))
(assert (forall (($generated@@817 T@U) ($generated@@818 T@U) ) (!  (=> (and (and (= (type $generated@@817) $generated@@67) (= (type $generated@@818) $generated@@204)) ($generated@@263 $generated@@818 ($generated@@137 $generated@@817))) (and (= ($generated@@364 ($generated@@503 $generated@@81 $generated@@818)) $generated@@818) ($generated@@140 ($generated@@503 $generated@@81 $generated@@818) ($generated@@137 $generated@@817))))
 :pattern ( ($generated@@263 $generated@@818 ($generated@@137 $generated@@817)))
)))
(assert (forall (($generated@@819 T@U) ($generated@@820 T@U) ) (!  (=> (and (and (= (type $generated@@819) $generated@@67) (= (type $generated@@820) $generated@@204)) ($generated@@263 $generated@@820 ($generated@@188 $generated@@819))) (and (= ($generated@@364 ($generated@@503 $generated@@81 $generated@@820)) $generated@@820) ($generated@@140 ($generated@@503 $generated@@81 $generated@@820) ($generated@@188 $generated@@819))))
 :pattern ( ($generated@@263 $generated@@820 ($generated@@188 $generated@@819)))
)))
(assert (forall (($generated@@821 T@U) ($generated@@822 T@U) ) (! (let (($generated@@823 (type $generated@@822)))
 (=> (= (type $generated@@821) ($generated@@171 $generated@@823)) (= ($generated@@168 ($generated@@210 $generated@@821 $generated@@822)) ($generated@@349 ($generated@@168 $generated@@821) $generated@@822))))
 :pattern ( ($generated@@168 ($generated@@210 $generated@@821 $generated@@822)))
)))
(assert (forall (($generated@@824 T@U) ($generated@@825 T@U) ($generated@@826 T@U) ($generated@@827 T@U) ) (! (let (($generated@@828 (type $generated@@827)))
 (=> (and (and (and (= (type $generated@@824) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@825) $generated@@81)) (= (type $generated@@826) ($generated@@69 $generated@@828))) ($generated@@180 ($generated@@86 $generated@@824 $generated@@825 ($generated@@88 ($generated@@85 $generated@@824 $generated@@825) $generated@@826 $generated@@827)))) ($generated@@161 $generated@@824 ($generated@@86 $generated@@824 $generated@@825 ($generated@@88 ($generated@@85 $generated@@824 $generated@@825) $generated@@826 $generated@@827)))))
 :pattern ( ($generated@@86 $generated@@824 $generated@@825 ($generated@@88 ($generated@@85 $generated@@824 $generated@@825) $generated@@826 $generated@@827)))
)))
(assert (forall (($generated@@829 T@U) ($generated@@830 Int) ($generated@@831 Int) ) (! (let (($generated@@832 ($generated@@172 (type $generated@@829))))
 (=> (= (type $generated@@829) ($generated@@171 $generated@@832)) (=> (and (and (<= 0 $generated@@830) (<= $generated@@830 $generated@@831)) (< $generated@@831 ($generated@@211 $generated@@829))) (= ($generated@@229 ($generated@@209 $generated@@829 $generated@@830) (- $generated@@831 $generated@@830)) ($generated@@229 $generated@@829 $generated@@831)))))
 :weight 25
 :pattern ( ($generated@@229 $generated@@829 $generated@@831) ($generated@@209 $generated@@829 $generated@@830))
)))
(assert (forall (($generated@@833 T@U) ($generated@@834 T@U) ($generated@@835 T@U) ) (!  (=> (and (and (= (type $generated@@833) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@834) $generated@@67)) (= (type $generated@@835) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@833 ($generated@@222 $generated@@834) $generated@@835) (forall (($generated@@836 T@U) ) (!  (=> (and (= (type $generated@@836) $generated@@204) (< 0 ($generated ($generated@@85 $generated@@833 $generated@@836)))) ($generated@@320 $generated@@836 $generated@@834 $generated@@835))
 :pattern ( ($generated@@85 $generated@@833 $generated@@836))
))))
 :pattern ( ($generated@@78 $generated@@833 ($generated@@222 $generated@@834) $generated@@835))
)))
(assert (forall (($generated@@837 T@U) ($generated@@838 Int) ($generated@@839 Int) ) (! (let (($generated@@840 ($generated@@172 (type $generated@@837))))
 (=> (= (type $generated@@837) ($generated@@171 $generated@@840)) (=> (and (and (<= 0 $generated@@838) (<= 0 $generated@@839)) (<= (+ $generated@@838 $generated@@839) ($generated@@211 $generated@@837))) (= ($generated@@209 ($generated@@209 $generated@@837 $generated@@838) $generated@@839) ($generated@@209 $generated@@837 (+ $generated@@838 $generated@@839))))))
 :pattern ( ($generated@@209 ($generated@@209 $generated@@837 $generated@@838) $generated@@839))
)))
(assert (forall (($generated@@841 T@U) ($generated@@842 T@U) ($generated@@843 T@U) ) (!  (=> (and (and (and (= (type $generated@@841) $generated@@195) (= (type $generated@@842) $generated@@67)) (= (type $generated@@843) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@180 $generated@@843) (and ($generated@@193 $generated@@841) (exists (($generated@@844 T@U) ) (!  (and (= (type $generated@@844) $generated@@67) ($generated@@78 $generated@@841 ($generated@@194 $generated@@842 $generated@@844) $generated@@843))
 :pattern ( ($generated@@78 $generated@@841 ($generated@@194 $generated@@842 $generated@@844) $generated@@843))
))))) ($generated@@320 ($generated@@202 $generated@@841) $generated@@842 $generated@@843))
 :pattern ( ($generated@@320 ($generated@@202 $generated@@841) $generated@@842 $generated@@843))
)))
(assert (forall (($generated@@845 T@U) ($generated@@846 T@U) ($generated@@847 T@U) ) (!  (=> (and (and (and (= (type $generated@@845) $generated@@195) (= (type $generated@@846) $generated@@67)) (= (type $generated@@847) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@180 $generated@@847) (and ($generated@@193 $generated@@845) (exists (($generated@@848 T@U) ) (!  (and (= (type $generated@@848) $generated@@67) ($generated@@78 $generated@@845 ($generated@@194 $generated@@848 $generated@@846) $generated@@847))
 :pattern ( ($generated@@78 $generated@@845 ($generated@@194 $generated@@848 $generated@@846) $generated@@847))
))))) ($generated@@320 ($generated@@203 $generated@@845) $generated@@846 $generated@@847))
 :pattern ( ($generated@@320 ($generated@@203 $generated@@845) $generated@@846 $generated@@847))
)))
(assert (forall (($generated@@849 T@U) ($generated@@850 T@U) ($generated@@851 T@U) ) (! (let (($generated@@852 (type $generated@@850)))
 (=> (and (and (= (type $generated@@849) ($generated@@80 $generated@@852 $generated@@2)) (= (type $generated@@851) $generated@@852)) (not (= $generated@@850 $generated@@851))) (= ($generated ($generated@@85 $generated@@849 $generated@@851)) ($generated ($generated@@85 ($generated@@349 $generated@@849 $generated@@850) $generated@@851)))))
 :pattern ( ($generated@@349 $generated@@849 $generated@@850) ($generated@@85 $generated@@849 $generated@@851))
)))
(assert (forall (($generated@@853 T@U) ($generated@@854 T@U) ($generated@@855 Int) ) (! (let (($generated@@856 ($generated@@172 (type $generated@@853))))
 (=> (and (= (type $generated@@853) ($generated@@171 $generated@@856)) (= (type $generated@@854) ($generated@@171 $generated@@856))) (and (=> (< $generated@@855 ($generated@@211 $generated@@853)) (= ($generated@@229 ($generated@@247 $generated@@853 $generated@@854) $generated@@855) ($generated@@229 $generated@@853 $generated@@855))) (=> (<= ($generated@@211 $generated@@853) $generated@@855) (= ($generated@@229 ($generated@@247 $generated@@853 $generated@@854) $generated@@855) ($generated@@229 $generated@@854 (- $generated@@855 ($generated@@211 $generated@@853))))))))
 :pattern ( ($generated@@229 ($generated@@247 $generated@@853 $generated@@854) $generated@@855))
)))
(assert (forall (($generated@@857 Int) ) (!  (=> (< $generated@@857 0) (= ($generated@@303 $generated@@857) 0))
 :pattern ( ($generated@@303 $generated@@857))
)))
(assert (forall (($generated@@858 T@U) ($generated@@859 T@U) ) (!  (=> (and (= (type $generated@@858) $generated@@204) (= (type $generated@@859) $generated@@204)) (= ($generated@@262 ($generated@@307 $generated@@858) ($generated@@307 $generated@@859)) ($generated@@307 ($generated@@262 $generated@@858 $generated@@859))))
 :pattern ( ($generated@@262 ($generated@@307 $generated@@858) ($generated@@307 $generated@@859)))
)))
(assert (forall (($generated@@860 Int) ) (! (= ($generated@@364 ($generated@@8 ($generated@@305 $generated@@860))) ($generated@@307 ($generated@@364 ($generated@@8 $generated@@860))))
 :pattern ( ($generated@@364 ($generated@@8 ($generated@@305 $generated@@860))))
)))
(assert (forall (($generated@@861 T@U) ) (! (= ($generated@@364 ($generated@@307 $generated@@861)) ($generated@@307 ($generated@@364 $generated@@861)))
 :pattern ( ($generated@@364 ($generated@@307 $generated@@861)))
)))
(assert (forall (($generated@@862 T@U) ($generated@@863 T@U) ) (! (let (($generated@@864 ($generated@@172 (type $generated@@862))))
 (=> (and (= (type $generated@@862) ($generated@@171 $generated@@864)) (= (type $generated@@863) ($generated@@171 $generated@@864))) (= ($generated@@168 ($generated@@247 $generated@@862 $generated@@863)) ($generated@@148 ($generated@@168 $generated@@862) ($generated@@168 $generated@@863)))))
 :pattern ( ($generated@@168 ($generated@@247 $generated@@862 $generated@@863)))
)))
(assert (forall (($generated@@865 T@U) ) (! (let (($generated@@866 ($generated@@172 (type $generated@@865))))
 (=> (and (= (type $generated@@865) ($generated@@171 $generated@@866)) (= ($generated@@211 $generated@@865) 0)) (= $generated@@865 ($generated@@169 $generated@@866))))
 :pattern ( ($generated@@211 $generated@@865))
)))
(assert (forall (($generated@@867 T@U) ($generated@@868 Int) ) (! (let (($generated@@869 ($generated@@172 (type $generated@@867))))
 (=> (and (= (type $generated@@867) ($generated@@171 $generated@@869)) (= $generated@@868 0)) (= ($generated@@246 $generated@@867 $generated@@868) ($generated@@169 $generated@@869))))
 :pattern ( ($generated@@246 $generated@@867 $generated@@868))
)))
(assert (forall (($generated@@870 T@U) ($generated@@871 T@U) ($generated@@872 T@U) ) (! (let (($generated@@873 (type $generated@@871)))
 (=> (and (and (= (type $generated@@870) ($generated@@80 $generated@@873 $generated@@2)) (= (type $generated@@872) $generated@@2)) (<= 0 ($generated $generated@@872))) (= ($generated@@145 ($generated@@86 $generated@@870 $generated@@871 $generated@@872)) (+ (- ($generated@@145 $generated@@870) ($generated ($generated@@85 $generated@@870 $generated@@871))) ($generated $generated@@872)))))
 :pattern ( ($generated@@145 ($generated@@86 $generated@@870 $generated@@871 $generated@@872)))
)))
(assert (forall (($generated@@874 T@U) ($generated@@875 T@U) ) (!  (=> (and (= (type $generated@@874) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@875) $generated@@2)) ($generated@@78 $generated@@875 $generated@@46 $generated@@874))
 :pattern ( ($generated@@78 $generated@@875 $generated@@46 $generated@@874))
)))
(assert (forall (($generated@@876 T@U) ($generated@@877 T@U) ) (!  (=> (and (= (type $generated@@876) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@877) $generated@@3)) ($generated@@78 $generated@@877 $generated@@47 $generated@@876))
 :pattern ( ($generated@@78 $generated@@877 $generated@@47 $generated@@876))
)))
(assert (forall (($generated@@878 T@U) ($generated@@879 T@U) ) (!  (=> (and (= (type $generated@@878) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@879) $generated@@4)) ($generated@@78 $generated@@879 $generated@@44 $generated@@878))
 :pattern ( ($generated@@78 $generated@@879 $generated@@44 $generated@@878))
)))
(assert (forall (($generated@@880 T@U) ($generated@@881 T@U) ) (!  (=> (and (= (type $generated@@880) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@881) $generated@@587)) ($generated@@78 $generated@@881 $generated@@45 $generated@@880))
 :pattern ( ($generated@@78 $generated@@881 $generated@@45 $generated@@880))
)))
(assert (forall (($generated@@882 T@U) ($generated@@883 T@U) ) (!  (=> (and (= (type $generated@@882) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@883) $generated@@204)) ($generated@@78 $generated@@883 $generated@@48 $generated@@882))
 :pattern ( ($generated@@78 $generated@@883 $generated@@48 $generated@@882))
)))
(assert (forall (($generated@@884 T@U) ($generated@@885 Int) ($generated@@886 T@U) ($generated@@887 Int) ) (! (let (($generated@@888 (type $generated@@886)))
 (=> (= (type $generated@@884) ($generated@@171 $generated@@888)) (=> (and (and (<= 0 $generated@@885) (< $generated@@885 $generated@@887)) (<= $generated@@887 ($generated@@211 $generated@@884))) (= ($generated@@246 ($generated@@230 $generated@@884 $generated@@885 $generated@@886) $generated@@887) ($generated@@230 ($generated@@246 $generated@@884 $generated@@887) $generated@@885 $generated@@886)))))
 :pattern ( ($generated@@246 ($generated@@230 $generated@@884 $generated@@885 $generated@@886) $generated@@887))
)))
(assert (forall (($generated@@889 T@U) ($generated@@890 T@U) ) (!  (=> (and (= (type $generated@@889) ($generated@@171 $generated@@204)) (= (type $generated@@890) $generated@@67)) (= ($generated@@140 $generated@@889 ($generated@@311 $generated@@890)) (forall (($generated@@891 Int) ) (!  (=> (and (<= 0 $generated@@891) (< $generated@@891 ($generated@@211 $generated@@889))) ($generated@@263 ($generated@@229 $generated@@889 $generated@@891) $generated@@890))
 :pattern ( ($generated@@229 $generated@@889 $generated@@891))
))))
 :pattern ( ($generated@@140 $generated@@889 ($generated@@311 $generated@@890)))
)))
(assert (forall (($generated@@892 T@U) ($generated@@893 Int) ) (!  (=> (= (type $generated@@892) ($generated@@171 $generated@@204)) (=> (and (<= 0 $generated@@893) (< $generated@@893 ($generated@@211 $generated@@892))) (< ($generated@@704 ($generated@@503 $generated@@195 ($generated@@229 $generated@@892 $generated@@893))) ($generated@@341 $generated@@892))))
 :pattern ( ($generated@@704 ($generated@@503 $generated@@195 ($generated@@229 $generated@@892 $generated@@893))))
)))
(assert (forall (($generated@@894 T@U) ($generated@@895 T@U) ($generated@@896 T@U) ) (!  (=> (and (and (and (= (type $generated@@894) ($generated@@394 $generated@@204 $generated@@204)) (= (type $generated@@895) $generated@@67)) (= (type $generated@@896) $generated@@67)) ($generated@@140 $generated@@894 ($generated@@531 $generated@@895 $generated@@896))) (and (and ($generated@@140 ($generated@@392 $generated@@894) ($generated@@293 $generated@@895)) ($generated@@140 ($generated@@454 $generated@@894) ($generated@@293 $generated@@896))) ($generated@@140 ($generated@@502 $generated@@894) ($generated@@293 ($generated@@194 $generated@@895 $generated@@896)))))
 :pattern ( ($generated@@140 $generated@@894 ($generated@@531 $generated@@895 $generated@@896)))
)))
(assert (forall (($generated@@897 T@U) ($generated@@898 T@U) ($generated@@899 T@U) ) (!  (=> (and (and (and (= (type $generated@@897) ($generated@@412 $generated@@204 $generated@@204)) (= (type $generated@@898) $generated@@67)) (= (type $generated@@899) $generated@@67)) ($generated@@140 $generated@@897 ($generated@@539 $generated@@898 $generated@@899))) (and (and ($generated@@140 ($generated@@410 $generated@@897) ($generated@@298 $generated@@898)) ($generated@@140 ($generated@@465 $generated@@897) ($generated@@298 $generated@@899))) ($generated@@140 ($generated@@513 $generated@@897) ($generated@@298 ($generated@@194 $generated@@898 $generated@@899)))))
 :pattern ( ($generated@@140 $generated@@897 ($generated@@539 $generated@@898 $generated@@899)))
)))
(assert (forall (($generated@@900 T@U) ) (!  (=> (= (type $generated@@900) $generated@@2) ($generated@@140 $generated@@900 $generated@@46))
 :pattern ( ($generated@@140 $generated@@900 $generated@@46))
)))
(assert (forall (($generated@@901 T@U) ) (!  (=> (= (type $generated@@901) $generated@@3) ($generated@@140 $generated@@901 $generated@@47))
 :pattern ( ($generated@@140 $generated@@901 $generated@@47))
)))
(assert (forall (($generated@@902 T@U) ) (!  (=> (= (type $generated@@902) $generated@@4) ($generated@@140 $generated@@902 $generated@@44))
 :pattern ( ($generated@@140 $generated@@902 $generated@@44))
)))
(assert (forall (($generated@@903 T@U) ) (!  (=> (= (type $generated@@903) $generated@@587) ($generated@@140 $generated@@903 $generated@@45))
 :pattern ( ($generated@@140 $generated@@903 $generated@@45))
)))
(assert (forall (($generated@@904 T@U) ) (!  (=> (= (type $generated@@904) $generated@@204) ($generated@@140 $generated@@904 $generated@@48))
 :pattern ( ($generated@@140 $generated@@904 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@905 () T@U)
(declare-fun $generated@@906 () T@U)
(declare-fun $generated@@907 () T@U)
(declare-fun $generated@@908 () Int)
(declare-fun $generated@@909 () T@U)
(declare-fun $generated@@910 () Int)
(declare-fun $generated@@911 (T@U) Bool)
(declare-fun $generated@@912 () Int)
(assert  (and (and (and (= (type $generated@@905) ($generated@@728 $generated@@81 $generated@@4)) (= (type $generated@@906) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@907) $generated@@81)) (= (type $generated@@909) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@913  (=> (= $generated@@905 ($generated@@727 $generated@@138 $generated@@906 $generated@@60 $generated@@907)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 $generated@@908) (< $generated@@908 ($generated@@136 $generated@@907)))) (=> (and (<= 0 $generated@@908) (< $generated@@908 ($generated@@136 $generated@@907))) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@0 ($generated@@726 $generated@@905 $generated@@907 ($generated@@271 $generated@@908)))) (=> ($generated@@0 ($generated@@726 $generated@@905 $generated@@907 ($generated@@271 $generated@@908))) (=> (and (= $generated@@909 ($generated@@86 $generated@@906 $generated@@907 ($generated@@88 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@908) ($generated@@364 ($generated@@8 $generated@@910))))) ($generated@@180 $generated@@909)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 (+ $generated@@908 1)) (<= (+ $generated@@908 1) ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@908) (<= $generated@@908 ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@332 ($generated@@246 ($generated@@270 $generated@@909 $generated@@907) (+ $generated@@908 1)) ($generated@@247 ($generated@@246 ($generated@@270 $generated@@909 $generated@@907) $generated@@908) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@364 ($generated@@8 $generated@@910)))))) (=> ($generated@@332 ($generated@@246 ($generated@@270 $generated@@909 $generated@@907) (+ $generated@@908 1)) ($generated@@247 ($generated@@246 ($generated@@270 $generated@@909 $generated@@907) $generated@@908) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@364 ($generated@@8 $generated@@910))))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@482 ($generated@@168 ($generated@@246 ($generated@@270 $generated@@909 $generated@@907) (+ $generated@@908 1))) ($generated@@148 ($generated@@168 ($generated@@246 ($generated@@270 $generated@@909 $generated@@907) $generated@@908)) ($generated@@349 ($generated@@170 $generated@@204) ($generated@@364 ($generated@@8 $generated@@910))))))))))))))))))))))))
(let (($generated@@914  (=> (and (and (and ($generated@@180 $generated@@906) ($generated@@911 $generated@@906)) (and ($generated@@140 $generated@@907 ($generated@@188 $generated@@46)) ($generated@@78 $generated@@907 ($generated@@188 $generated@@46) $generated@@906))) (and (and (= 1 $generated@@912) (<= ($generated@@305 0) $generated@@908)) (and (< $generated@@908 ($generated@@136 $generated@@907)) (= (ControlFlow 0 11) 2)))) $generated@@913)))
$generated@@914)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@T) T@U)
(declare-fun $generated@@154 (T@T) T@U)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@197 (T@U Int) T@U)
(declare-fun $generated@@198 (T@U) Int)
(declare-fun $generated@@206 (T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U) Bool)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (Int) Int)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@269 (T@T T@T) T@U)
(declare-fun $generated@@270 (T@T T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@331 (T@U T@U) T@U)
(declare-fun $generated@@332 (Int) T@U)
(declare-fun $generated@@342 (T@U T@U) Bool)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@546 (T@U T@U T@U) T@U)
(declare-fun $generated@@547 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@548 (T@T T@T) T@T)
(declare-fun $generated@@549 (T@T) T@T)
(declare-fun $generated@@550 (T@T) T@T)
(declare-fun $generated@@551 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@657 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert  (and (and (and (and (forall (($generated@@157 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@157)) 14)) (forall (($generated@@158 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@156 (type $generated@@159))))
(= (type ($generated@@152 $generated@@159)) ($generated@@80 $generated@@160 $generated@@2)))
 :pattern ( ($generated@@152 $generated@@159))
))) (forall (($generated@@161 T@T) ) (! (= (type ($generated@@153 $generated@@161)) ($generated@@155 $generated@@161))
 :pattern ( ($generated@@153 $generated@@161))
))) (forall (($generated@@162 T@T) ) (! (= (type ($generated@@154 $generated@@162)) ($generated@@80 $generated@@162 $generated@@2))
 :pattern ( ($generated@@154 $generated@@162))
))))
(assert (forall (($generated@@163 T@T) ) (= ($generated@@152 ($generated@@153 $generated@@163)) ($generated@@154 $generated@@163))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@167) $generated@@81)) (and (and ($generated@@164 $generated@@166) (and (not (= $generated@@167 $generated@@138)) (= ($generated@@139 $generated@@167) ($generated@@137 $generated@@165)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@166 $generated@@167) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@167)) $generated@@46 $generated@@166))
 :pattern ( ($generated@@136 $generated@@167) ($generated@@87 ($generated@@85 $generated@@166 $generated@@167) $generated@@60) ($generated@@137 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@140 $generated@@168 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@168 ($generated@@79 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@67)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@67) (= (type $generated@@172) $generated@@81)) (= (type $generated@@173) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@78 $generated@@172 ($generated@@137 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@78 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 15) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@67)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@67) (= (type $generated@@180) $generated@@67)) (= (type $generated@@181) $generated@@176)) ($generated@@140 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@140 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (and (= ($generated@@1 $generated@@185) 16) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@186))
))) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@185)
 :pattern ( ($generated@@184 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@176) (= (type $generated@@189) $generated@@176)) true) (= ($generated@@182 $generated@@188 $generated@@189)  (and (= ($generated@@183 $generated@@188) ($generated@@183 $generated@@189)) (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)))))
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@67)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@194) $generated@@67)) ($generated@@140 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@140 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@156 (type $generated@@195))))
 (=> (= (type $generated@@195) ($generated@@155 $generated@@196)) ($generated@@191 ($generated@@152 $generated@@195))))
 :pattern ( ($generated@@152 $generated@@195))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 Int) ) (! (let (($generated@@201 ($generated@@156 (type $generated@@199))))
(= (type ($generated@@197 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@197 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
 (=> (= (type $generated@@202) ($generated@@155 $generated@@204)) (= (exists (($generated@@205 Int) ) (!  (and (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@198 $generated@@202))) (= $generated@@203 ($generated@@197 $generated@@202 $generated@@205)))
 :pattern ( ($generated@@197 $generated@@202 $generated@@205))
)) (< 0 ($generated ($generated@@85 ($generated@@152 $generated@@202) $generated@@203))))))
 :pattern ( ($generated@@85 ($generated@@152 $generated@@202) $generated@@203))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= (type ($generated@@206 $generated@@208 $generated@@209)) $generated@@176)
 :pattern ( ($generated@@206 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@185)) (= (type $generated@@213) $generated@@185)) (= ($generated@@140 ($generated@@206 $generated@@212 $generated@@213) ($generated@@175 $generated@@210 $generated@@211))  (and ($generated@@207 $generated@@212 $generated@@210) ($generated@@207 $generated@@213 $generated@@211))))
 :pattern ( ($generated@@140 ($generated@@206 $generated@@212 $generated@@213) ($generated@@175 $generated@@210 $generated@@211)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@176) (= (type $generated@@215) $generated@@176)) (= ($generated@@182 $generated@@214 $generated@@215) (= $generated@@214 $generated@@215)))
 :pattern ( ($generated@@182 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (= (type ($generated@@216 $generated@@217)) $generated@@67)
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@219) $generated@@67)) (= ($generated@@140 $generated@@218 ($generated@@216 $generated@@219)) (forall (($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@220) $generated@@185) ($generated@@0 ($generated@@85 $generated@@218 $generated@@220))) ($generated@@207 $generated@@220 $generated@@219))
 :pattern ( ($generated@@85 $generated@@218 $generated@@220))
))))
 :pattern ( ($generated@@140 $generated@@218 ($generated@@216 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@67)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@224) $generated@@67)) (= ($generated@@140 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@185) ($generated@@0 ($generated@@85 $generated@@223 $generated@@225))) ($generated@@207 $generated@@225 $generated@@224))
 :pattern ( ($generated@@85 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@140 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 Int) ) (! (= ($generated@@226 $generated@@227) $generated@@227)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(= (type ($generated@@228 $generated@@229)) $generated@@230))
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= ($generated@@228 $generated@@231) $generated@@231)
 :pattern ( ($generated@@228 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) $generated@@67) (= (type $generated@@234) $generated@@67)) (= (type $generated@@235) $generated@@185)) (= (type $generated@@236) $generated@@185)) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@164 $generated@@237)) (= ($generated@@78 ($generated@@206 $generated@@235 $generated@@236) ($generated@@175 $generated@@233 $generated@@234) $generated@@237)  (and ($generated@@232 $generated@@235 $generated@@233 $generated@@237) ($generated@@232 $generated@@236 $generated@@234 $generated@@237))))
 :pattern ( ($generated@@78 ($generated@@206 $generated@@235 $generated@@236) ($generated@@175 $generated@@233 $generated@@234) $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@71)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ) (!  (=> (= (type $generated@@240) $generated@@176) (= ($generated@@174 $generated@@240) (= ($generated@@238 $generated@@240) $generated@@63)))
 :pattern ( ($generated@@174 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@176) ($generated@@174 $generated@@241)) (exists (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (and (and (= (type $generated@@242) $generated@@185) (= (type $generated@@243) $generated@@185)) (= $generated@@241 ($generated@@206 $generated@@242 $generated@@243)))
 :no-pattern (type $generated@@242)
 :no-pattern (type $generated@@243)
 :no-pattern ($generated $generated@@242)
 :no-pattern ($generated@@0 $generated@@242)
 :no-pattern ($generated $generated@@243)
 :no-pattern ($generated@@0 $generated@@243)
)))
 :pattern ( ($generated@@174 $generated@@241))
)))
(assert (forall (($generated@@244 T@T) ) (! (= ($generated@@198 ($generated@@153 $generated@@244)) 0)
 :pattern ( ($generated@@153 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@67) (= (type $generated@@246) $generated@@81)) (= ($generated@@140 $generated@@246 ($generated@@169 $generated@@245))  (and ($generated@@140 $generated@@246 ($generated@@137 $generated@@245)) (not (= $generated@@246 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@246 ($generated@@169 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@185)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@232 ($generated@@247 $generated@@249) $generated@@250 $generated@@251) ($generated@@78 $generated@@249 $generated@@250 $generated@@251)))
 :pattern ( ($generated@@232 ($generated@@247 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@253) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@254) $generated@@185)) (= (type $generated@@255) $generated@@67)) ($generated@@145 $generated@@252 $generated@@253)) ($generated@@232 $generated@@254 $generated@@255 $generated@@252)) ($generated@@232 $generated@@254 $generated@@255 $generated@@253))
 :pattern ( ($generated@@145 $generated@@252 $generated@@253) ($generated@@232 $generated@@254 $generated@@255 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@256) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@257) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@259) $generated@@67)) ($generated@@145 $generated@@256 $generated@@257)) ($generated@@78 $generated@@258 $generated@@259 $generated@@256)) ($generated@@78 $generated@@258 $generated@@259 $generated@@257))
 :pattern ( ($generated@@145 $generated@@256 $generated@@257) ($generated@@78 $generated@@258 $generated@@259 $generated@@256))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@83 (type $generated@@261))))
 (=> (= (type $generated@@261) ($generated@@80 $generated@@262 $generated@@2)) (and (= (= ($generated@@260 $generated@@261) 0) (= $generated@@261 ($generated@@154 $generated@@262))) (=> (not (= ($generated@@260 $generated@@261) 0)) (exists (($generated@@263 T@U) ) (!  (and (= (type $generated@@263) $generated@@262) (< 0 ($generated ($generated@@85 $generated@@261 $generated@@263))))
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
))))))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@72)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@266)) $generated@@61) (= ($generated@@264 ($generated@@137 $generated@@266)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@67) (and (= ($generated@@76 ($generated@@169 $generated@@267)) $generated@@62) (= ($generated@@264 ($generated@@169 $generated@@267)) $generated@@65)))
 :pattern ( ($generated@@169 $generated@@267))
)))
(assert  (and (and (and (and (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@273 $generated@@274)) 17)) (forall (($generated@@275 T@T) ($generated@@276 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@275 $generated@@276)) $generated@@275)
 :pattern ( ($generated@@270 $generated@@275 $generated@@276))
))) (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@270 $generated@@277 $generated@@278)) $generated@@278)
 :pattern ( ($generated@@270 $generated@@277 $generated@@278))
))) (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@271 (type $generated@@279))))
(= (type ($generated@@268 $generated@@279)) ($generated@@80 $generated@@280 $generated@@4)))
 :pattern ( ($generated@@268 $generated@@279))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= (type ($generated@@269 $generated@@281 $generated@@282)) ($generated@@270 $generated@@281 $generated@@282))
 :pattern ( ($generated@@269 $generated@@281 $generated@@282))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@T) ) (! (let (($generated@@285 (type $generated@@283)))
 (not ($generated@@0 ($generated@@85 ($generated@@268 ($generated@@269 $generated@@285 $generated@@284)) $generated@@283))))
 :pattern ( (let (($generated@@285 (type $generated@@283)))
($generated@@85 ($generated@@268 ($generated@@269 $generated@@285 $generated@@284)) $generated@@283)))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@80 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@85 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@85 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@83 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@80 $generated@@305 $generated@@2)) (= ($generated@@191 $generated@@304) (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@305) (and (<= 0 ($generated ($generated@@85 $generated@@304 $generated@@306))) (<= ($generated ($generated@@85 $generated@@304 $generated@@306)) ($generated@@260 $generated@@304))))
 :pattern ( ($generated@@85 $generated@@304 $generated@@306))
)))))
 :pattern ( ($generated@@191 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@67) (= (type $generated@@308) $generated@@81)) (= ($generated@@140 $generated@@308 ($generated@@137 $generated@@307))  (or (= $generated@@308 $generated@@138) (= ($generated@@139 $generated@@308) ($generated@@137 $generated@@307)))))
 :pattern ( ($generated@@140 $generated@@308 ($generated@@137 $generated@@307)))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@272 (type $generated@@309))))
(let (($generated@@311 ($generated@@271 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@270 $generated@@311 $generated@@310)) (or (= $generated@@309 ($generated@@269 $generated@@311 $generated@@310)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@311) ($generated@@0 ($generated@@85 ($generated@@268 $generated@@309) $generated@@312)))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
))))))
 :pattern ( ($generated@@268 $generated@@309))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@272 (type $generated@@314))))
(= (type ($generated@@313 $generated@@314)) ($generated@@80 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@272 (type $generated@@316))))
(let (($generated@@318 ($generated@@271 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@270 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@269 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@317) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@290 (type $generated@@320))))
(let (($generated@@322 ($generated@@289 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@288 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@287 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@85 ($generated@@286 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@286 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@290 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@80 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@290 (type $generated@@327))))
(let (($generated@@329 ($generated@@289 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@288 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@287 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert  (and (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (= (type ($generated@@331 $generated@@333 $generated@@334)) ($generated@@155 $generated@@185))
 :pattern ( ($generated@@331 $generated@@333 $generated@@334))
)) (forall (($generated@@335 Int) ) (! (= (type ($generated@@332 $generated@@335)) ($generated@@69 $generated@@185))
 :pattern ( ($generated@@332 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@337) $generated@@81)) (forall (($generated@@338 Int) ) (!  (=> (and (<= 0 $generated@@338) (< $generated@@338 ($generated@@198 ($generated@@331 $generated@@336 $generated@@337)))) (= ($generated@@197 ($generated@@331 $generated@@336 $generated@@337) $generated@@338) ($generated@@87 ($generated@@85 $generated@@336 $generated@@337) ($generated@@332 $generated@@338))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@336 $generated@@337) ($generated@@332 $generated@@338)))
 :pattern ( ($generated@@197 ($generated@@331 $generated@@336 $generated@@337) $generated@@338))
)))
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@340) $generated@@67)) (= ($generated@@140 $generated@@339 ($generated@@190 $generated@@340)) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@185) (< 0 ($generated ($generated@@85 $generated@@339 $generated@@341)))) ($generated@@207 $generated@@341 $generated@@340))
 :pattern ( ($generated@@85 $generated@@339 $generated@@341))
))))
 :pattern ( ($generated@@140 $generated@@339 ($generated@@190 $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@83 (type $generated@@343))))
 (=> (and (= (type $generated@@343) ($generated@@80 $generated@@345 $generated@@2)) (= (type $generated@@344) ($generated@@80 $generated@@345 $generated@@2))) (= ($generated@@342 $generated@@343 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (= ($generated ($generated@@85 $generated@@343 $generated@@346)) ($generated ($generated@@85 $generated@@344 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@343 $generated@@346))
 :pattern ( ($generated@@85 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@348) $generated@@67)) (= (type $generated@@349) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@347 ($generated@@216 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@185) ($generated@@0 ($generated@@85 $generated@@347 $generated@@350))) ($generated@@232 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@85 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@78 $generated@@347 ($generated@@216 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@352) $generated@@67)) (= (type $generated@@353) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@351 ($generated@@221 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@185) ($generated@@0 ($generated@@85 $generated@@351 $generated@@354))) ($generated@@232 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@85 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@78 $generated@@351 ($generated@@221 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@85 ($generated@@154 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@85 ($generated@@154 $generated@@356) $generated@@355)))
)))
(assert  (and (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@357 $generated@@360)) ($generated@@80 $generated@@185 $generated@@4))
 :pattern ( ($generated@@357 $generated@@360))
)) (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@358 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@272 (type $generated@@363))))
(let (($generated@@365 ($generated@@271 (type $generated@@363))))
(= (type ($generated@@359 $generated@@363)) ($generated@@80 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@359 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@270 $generated@@185 $generated@@185)) (= (type $generated@@367) $generated@@185)) (= ($generated@@0 ($generated@@85 ($generated@@357 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@85 ($generated@@268 $generated@@366) ($generated@@183 ($generated@@358 $generated@@176 $generated@@367)))) (= ($generated@@85 ($generated@@359 $generated@@366) ($generated@@183 ($generated@@358 $generated@@176 $generated@@367))) ($generated@@184 ($generated@@358 $generated@@176 $generated@@367))))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@80 $generated@@185 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@290 (type $generated@@371))))
(let (($generated@@373 ($generated@@289 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@80 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@288 $generated@@185 $generated@@185)) (= (type $generated@@375) $generated@@185)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@85 ($generated@@286 $generated@@374) ($generated@@183 ($generated@@358 $generated@@176 $generated@@375)))) (= ($generated@@85 ($generated@@369 $generated@@374) ($generated@@183 ($generated@@358 $generated@@176 $generated@@375))) ($generated@@184 ($generated@@358 $generated@@176 $generated@@375))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@271 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@270 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@85 ($generated@@313 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@85 ($generated@@268 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@85 ($generated@@359 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@85 ($generated@@268 $generated@@376) $generated@@380))
 :pattern ( ($generated@@85 ($generated@@359 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@289 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@288 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@85 ($generated@@324 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@85 ($generated@@286 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@85 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@85 ($generated@@286 $generated@@381) $generated@@385))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@67)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@270 $generated@@185 $generated@@185)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) $generated@@67)) (= (type $generated@@392) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@268 $generated@@389) $generated@@393))) (and ($generated@@232 ($generated@@85 ($generated@@359 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@232 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@85 ($generated@@359 $generated@@389) $generated@@393))
 :pattern ( ($generated@@85 ($generated@@268 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@78 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@288 $generated@@185 $generated@@185)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@286 $generated@@397) $generated@@401))) (and ($generated@@232 ($generated@@85 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@232 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@85 ($generated@@286 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@78 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@83 (type $generated@@402))))
 (=> (and (and (= (type $generated@@402) ($generated@@80 $generated@@404 $generated@@2)) (= (type $generated@@403) ($generated@@80 $generated@@404 $generated@@2))) ($generated@@342 $generated@@402 $generated@@403)) (= $generated@@402 $generated@@403)))
 :pattern ( ($generated@@342 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@405) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@406) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@407) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@405 $generated@@407))) (and ($generated@@145 $generated@@405 $generated@@406) ($generated@@145 $generated@@406 $generated@@407))) ($generated@@145 $generated@@405 $generated@@407))
 :pattern ( ($generated@@145 $generated@@405 $generated@@406) ($generated@@145 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 Int) ) (!  (=> (and (and (= (type $generated@@408) $generated@@67) (= (type $generated@@409) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@410) $generated@@81)) (=> (and (and (and ($generated@@164 $generated@@409) (and (not (= $generated@@410 $generated@@138)) (= ($generated@@139 $generated@@410) ($generated@@137 $generated@@408)))) (and (<= 0 $generated@@411) (< $generated@@411 ($generated@@136 $generated@@410)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@409 $generated@@410) $generated@@60))) ($generated@@232 ($generated@@87 ($generated@@85 $generated@@409 $generated@@410) ($generated@@332 $generated@@411)) $generated@@408 $generated@@409)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@409 $generated@@410) ($generated@@332 $generated@@411)) ($generated@@137 $generated@@408))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@80 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@290 (type $generated@@414))))
(let (($generated@@416 ($generated@@289 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@288 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@287 $generated@@416 $generated@@415)) (= ($generated@@286 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@286 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@290 (type $generated@@417))))
(let (($generated@@419 ($generated@@289 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@288 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@287 $generated@@419 $generated@@418)) (= ($generated@@324 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@324 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@290 (type $generated@@420))))
(let (($generated@@422 ($generated@@289 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@288 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@287 $generated@@422 $generated@@421)) (= ($generated@@368 $generated@@420) ($generated@@412 $generated@@185))))))
 :pattern ( ($generated@@368 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@272 (type $generated@@423))))
(let (($generated@@425 ($generated@@271 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@270 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@269 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@185) (= (type $generated@@427) $generated@@185)) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@423) ($generated@@247 ($generated@@206 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@357 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@290 (type $generated@@428))))
(let (($generated@@430 ($generated@@289 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@288 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@287 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@185) (= (type $generated@@432) $generated@@185)) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@428) ($generated@@247 ($generated@@206 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@368 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@185) ($generated@@207 $generated@@433 $generated@@46)) (and (= ($generated@@247 ($generated@@358 $generated@@2 $generated@@433)) $generated@@433) ($generated@@140 ($generated@@358 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@207 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@185) ($generated@@207 $generated@@434 $generated@@47)) (and (= ($generated@@247 ($generated@@358 $generated@@3 $generated@@434)) $generated@@434) ($generated@@140 ($generated@@358 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@207 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@185) ($generated@@207 $generated@@435 $generated@@44)) (and (= ($generated@@247 ($generated@@358 $generated@@4 $generated@@435)) $generated@@435) ($generated@@140 ($generated@@358 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@207 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 19))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@185) ($generated@@207 $generated@@437 $generated@@45)) (and (= ($generated@@247 ($generated@@358 $generated@@436 $generated@@437)) $generated@@437) ($generated@@140 ($generated@@358 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@207 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@67) (= ($generated@@207 ($generated@@247 $generated@@438) $generated@@439) ($generated@@140 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@207 ($generated@@247 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@81) (<= 0 ($generated@@136 $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@83 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@80 $generated@@442 $generated@@2)) (<= 0 ($generated@@260 $generated@@441))))
 :pattern ( ($generated@@260 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@156 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@155 $generated@@444)) (<= 0 ($generated@@198 $generated@@443))))
 :pattern ( ($generated@@198 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@386 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@386 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@386 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@386 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@76 ($generated@@386 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@386 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@394 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@394 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@394 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@394 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@76 ($generated@@394 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@394 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@185) (= (type $generated@@466) $generated@@185)) (= ($generated@@238 ($generated@@206 $generated@@465 $generated@@466)) $generated@@63))
 :pattern ( ($generated@@206 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@175 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@175 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@175 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@175 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@185) (= (type $generated@@476) $generated@@185)) (= ($generated@@183 ($generated@@206 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@206 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@185) (= (type $generated@@478) $generated@@185)) (= ($generated@@184 ($generated@@206 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@206 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@155 $generated@@185)) (= (type $generated@@482) $generated@@67)) (= (type $generated@@483) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@481 ($generated@@479 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@198 $generated@@481))) ($generated@@232 ($generated@@197 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@197 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@78 $generated@@481 ($generated@@479 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@79 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@79 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@487 ($generated@@216 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@216 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@76 ($generated@@216 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@216 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@491 ($generated@@221 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@221 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@76 ($generated@@221 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@221 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@190 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@190 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@76 ($generated@@190 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@479 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@479 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@76 ($generated@@479 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@502))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@75 ($generated@@332 $generated@@503)) 1)
 :pattern ( ($generated@@332 $generated@@503))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@332 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@332 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@506 ($generated@@137 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@137 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@169 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@169 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@358 $generated@@513 ($generated@@247 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@247 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@270 $generated@@185 $generated@@185)) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) (= ($generated@@140 $generated@@514 ($generated@@386 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@268 $generated@@514) $generated@@517))) (and ($generated@@207 ($generated@@85 ($generated@@359 $generated@@514) $generated@@517) $generated@@516) ($generated@@207 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@85 ($generated@@359 $generated@@514) $generated@@517))
 :pattern ( ($generated@@85 ($generated@@268 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@140 $generated@@514 ($generated@@386 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@288 $generated@@185 $generated@@185)) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@67)) (= ($generated@@140 $generated@@518 ($generated@@394 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@286 $generated@@518) $generated@@521))) (and ($generated@@207 ($generated@@85 ($generated@@369 $generated@@518) $generated@@521) $generated@@520) ($generated@@207 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@518) $generated@@521))
 :pattern ( ($generated@@85 ($generated@@286 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@140 $generated@@518 ($generated@@394 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 Int) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@524) $generated@@81)) (and (and ($generated@@164 $generated@@523) (and (not (= $generated@@524 $generated@@138)) (= ($generated@@139 $generated@@524) ($generated@@137 $generated@@522)))) (and (<= 0 $generated@@525) (< $generated@@525 ($generated@@136 $generated@@524))))) ($generated@@207 ($generated@@87 ($generated@@85 $generated@@523 $generated@@524) ($generated@@332 $generated@@525)) $generated@@522))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@523 $generated@@524) ($generated@@332 $generated@@525)) ($generated@@137 $generated@@522))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@185) (= (type $generated@@529) $generated@@185)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@206 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@206 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@185) (= (type $generated@@531) $generated@@185)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@206 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@206 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@185) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@207 $generated@@532 ($generated@@386 $generated@@533 $generated@@534))) (and (= ($generated@@247 ($generated@@358 ($generated@@270 $generated@@185 $generated@@185) $generated@@532)) $generated@@532) ($generated@@140 ($generated@@358 ($generated@@270 $generated@@185 $generated@@185) $generated@@532) ($generated@@386 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@207 $generated@@532 ($generated@@386 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@185) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@67)) ($generated@@207 $generated@@535 ($generated@@394 $generated@@536 $generated@@537))) (and (= ($generated@@247 ($generated@@358 ($generated@@288 $generated@@185 $generated@@185) $generated@@535)) $generated@@535) ($generated@@140 ($generated@@358 ($generated@@288 $generated@@185 $generated@@185) $generated@@535) ($generated@@394 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@207 $generated@@535 ($generated@@394 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@67) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@185)) ($generated@@207 $generated@@540 ($generated@@175 $generated@@538 $generated@@539))) (and (= ($generated@@247 ($generated@@358 $generated@@176 $generated@@540)) $generated@@540) ($generated@@140 ($generated@@358 $generated@@176 $generated@@540) ($generated@@175 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@207 $generated@@540 ($generated@@175 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@85 ($generated@@412 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@85 ($generated@@412 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@544) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@545) $generated@@81)) (=> (and (and (and ($generated@@164 $generated@@543) ($generated@@164 $generated@@544)) ($generated@@145 $generated@@543 $generated@@544)) (= ($generated@@85 $generated@@543 $generated@@545) ($generated@@85 $generated@@544 $generated@@545))) (= ($generated@@331 $generated@@543 $generated@@545) ($generated@@331 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@331 $generated@@544 $generated@@545) ($generated@@145 $generated@@543 $generated@@544))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@552 T@T) ($generated@@553 T@T) ) (= ($generated@@1 ($generated@@548 $generated@@552 $generated@@553)) 20)) (forall (($generated@@554 T@T) ($generated@@555 T@T) ) (! (= ($generated@@549 ($generated@@548 $generated@@554 $generated@@555)) $generated@@554)
 :pattern ( ($generated@@548 $generated@@554 $generated@@555))
))) (forall (($generated@@556 T@T) ($generated@@557 T@T) ) (! (= ($generated@@550 ($generated@@548 $generated@@556 $generated@@557)) $generated@@557)
 :pattern ( ($generated@@548 $generated@@556 $generated@@557))
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@550 (type $generated@@558))))
(= (type ($generated@@546 $generated@@558 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@546 $generated@@558 $generated@@559 $generated@@560))
))) (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
(let (($generated@@567 (type $generated@@563)))
(= (type ($generated@@551 $generated@@562 $generated@@563 $generated@@564 $generated@@565)) ($generated@@548 $generated@@567 $generated@@566))))
 :pattern ( ($generated@@551 $generated@@562 $generated@@563 $generated@@564 $generated@@565))
))) (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@550 (type $generated@@568))))
 (=> (= (type $generated@@571) $generated@@572) (= ($generated@@546 ($generated@@551 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@569 $generated@@570) $generated@@571)))
 :weight 0
))) (and (and (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (or (= $generated@@575 $generated@@577) (= ($generated@@546 ($generated@@551 $generated@@574 $generated@@575 $generated@@576 $generated@@573) $generated@@577 $generated@@578) ($generated@@546 $generated@@574 $generated@@577 $generated@@578)))
 :weight 0
)) (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (or (= $generated@@582 $generated@@584) (= ($generated@@546 ($generated@@551 $generated@@580 $generated@@581 $generated@@582 $generated@@579) $generated@@583 $generated@@584) ($generated@@546 $generated@@580 $generated@@583 $generated@@584)))
 :weight 0
))) (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (or true (= ($generated@@546 ($generated@@551 $generated@@586 $generated@@587 $generated@@588 $generated@@585) $generated@@589 $generated@@590) ($generated@@546 $generated@@586 $generated@@589 $generated@@590)))
 :weight 0
)))) (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (= (type ($generated@@547 $generated@@591 $generated@@592 $generated@@593 $generated@@594)) ($generated@@548 $generated@@81 $generated@@4))
 :pattern ( ($generated@@547 $generated@@591 $generated@@592 $generated@@593 $generated@@594))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@70 (type $generated@@600))))
 (=> (and (and (and (and (and (= (type $generated@@595) $generated@@81) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@597) ($generated@@69 $generated@@4))) (= (type $generated@@598) $generated@@81)) (= (type $generated@@599) $generated@@81)) (= (type $generated@@600) ($generated@@69 $generated@@601))) (= ($generated@@0 ($generated@@546 ($generated@@547 $generated@@595 $generated@@596 $generated@@597 $generated@@598) $generated@@599 $generated@@600))  (=> (and (not (= $generated@@599 $generated@@595)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@596 $generated@@599) $generated@@597))) (= $generated@@599 $generated@@598)))))
 :pattern ( ($generated@@546 ($generated@@547 $generated@@595 $generated@@596 $generated@@597 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@603) $generated@@81)) (= ($generated@@198 ($generated@@331 $generated@@602 $generated@@603)) ($generated@@136 $generated@@603)))
 :pattern ( ($generated@@198 ($generated@@331 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@67) (= (type $generated@@605) $generated@@67)) (and (= ($generated@@76 ($generated@@175 $generated@@604 $generated@@605)) $generated@@64) (= ($generated@@264 ($generated@@175 $generated@@604 $generated@@605)) $generated@@66)))
 :pattern ( ($generated@@175 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@176) (= ($generated@@526 ($generated@@247 $generated@@606)) ($generated@@527 $generated@@606)))
 :pattern ( ($generated@@526 ($generated@@247 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@156 (type $generated@@607))))
 (=> (= (type $generated@@607) ($generated@@155 $generated@@608)) (= ($generated@@260 ($generated@@152 $generated@@607)) ($generated@@198 $generated@@607))))
 :pattern ( ($generated@@260 ($generated@@152 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@185) ($generated@@207 $generated@@609 ($generated@@79 0))) (and (= ($generated@@247 ($generated@@358 $generated@@2 $generated@@609)) $generated@@609) ($generated@@140 ($generated@@358 ($generated@@80 $generated@@185 $generated@@4) $generated@@609) ($generated@@79 0))))
 :pattern ( ($generated@@207 $generated@@609 ($generated@@79 0)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@185) (= (type $generated@@611) $generated@@67)) ($generated@@207 $generated@@610 ($generated@@216 $generated@@611))) (and (= ($generated@@247 ($generated@@358 ($generated@@80 $generated@@185 $generated@@4) $generated@@610)) $generated@@610) ($generated@@140 ($generated@@358 ($generated@@80 $generated@@185 $generated@@4) $generated@@610) ($generated@@216 $generated@@611))))
 :pattern ( ($generated@@207 $generated@@610 ($generated@@216 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@185) (= (type $generated@@613) $generated@@67)) ($generated@@207 $generated@@612 ($generated@@221 $generated@@613))) (and (= ($generated@@247 ($generated@@358 ($generated@@80 $generated@@185 $generated@@4) $generated@@612)) $generated@@612) ($generated@@140 ($generated@@358 ($generated@@80 $generated@@185 $generated@@4) $generated@@612) ($generated@@221 $generated@@613))))
 :pattern ( ($generated@@207 $generated@@612 ($generated@@221 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@185) (= (type $generated@@615) $generated@@67)) ($generated@@207 $generated@@614 ($generated@@190 $generated@@615))) (and (= ($generated@@247 ($generated@@358 ($generated@@80 $generated@@185 $generated@@2) $generated@@614)) $generated@@614) ($generated@@140 ($generated@@358 ($generated@@80 $generated@@185 $generated@@2) $generated@@614) ($generated@@190 $generated@@615))))
 :pattern ( ($generated@@207 $generated@@614 ($generated@@190 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@185) (= (type $generated@@617) $generated@@67)) ($generated@@207 $generated@@616 ($generated@@479 $generated@@617))) (and (= ($generated@@247 ($generated@@358 ($generated@@155 $generated@@185) $generated@@616)) $generated@@616) ($generated@@140 ($generated@@358 ($generated@@155 $generated@@185) $generated@@616) ($generated@@479 $generated@@617))))
 :pattern ( ($generated@@207 $generated@@616 ($generated@@479 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@67) (= (type $generated@@619) $generated@@185)) ($generated@@207 $generated@@619 ($generated@@137 $generated@@618))) (and (= ($generated@@247 ($generated@@358 $generated@@81 $generated@@619)) $generated@@619) ($generated@@140 ($generated@@358 $generated@@81 $generated@@619) ($generated@@137 $generated@@618))))
 :pattern ( ($generated@@207 $generated@@619 ($generated@@137 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@67) (= (type $generated@@621) $generated@@185)) ($generated@@207 $generated@@621 ($generated@@169 $generated@@620))) (and (= ($generated@@247 ($generated@@358 $generated@@81 $generated@@621)) $generated@@621) ($generated@@140 ($generated@@358 $generated@@81 $generated@@621) ($generated@@169 $generated@@620))))
 :pattern ( ($generated@@207 $generated@@621 ($generated@@169 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@622 ($generated@@190 $generated@@623) $generated@@624) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@185) (< 0 ($generated ($generated@@85 $generated@@622 $generated@@625)))) ($generated@@232 $generated@@625 $generated@@623 $generated@@624))
 :pattern ( ($generated@@85 $generated@@622 $generated@@625))
))))
 :pattern ( ($generated@@78 $generated@@622 ($generated@@190 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@176) (= (type $generated@@627) $generated@@67)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@164 $generated@@628) (and ($generated@@174 $generated@@626) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@67) ($generated@@78 $generated@@626 ($generated@@175 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@175 $generated@@627 $generated@@629) $generated@@628))
))))) ($generated@@232 ($generated@@183 $generated@@626) $generated@@627 $generated@@628))
 :pattern ( ($generated@@232 ($generated@@183 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@176) (= (type $generated@@631) $generated@@67)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@164 $generated@@632) (and ($generated@@174 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@67) ($generated@@78 $generated@@630 ($generated@@175 $generated@@633 $generated@@631) $generated@@632))
 :pattern ( ($generated@@78 $generated@@630 ($generated@@175 $generated@@633 $generated@@631) $generated@@632))
))))) ($generated@@232 ($generated@@184 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@232 ($generated@@184 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@185) (= (type $generated@@635) $generated@@185)) (= ($generated@@206 ($generated@@228 $generated@@634) ($generated@@228 $generated@@635)) ($generated@@228 ($generated@@206 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@206 ($generated@@228 $generated@@634) ($generated@@228 $generated@@635)))
)))
(assert (forall (($generated@@636 Int) ) (! (= ($generated@@247 ($generated@@8 ($generated@@226 $generated@@636))) ($generated@@228 ($generated@@247 ($generated@@8 $generated@@636))))
 :pattern ( ($generated@@247 ($generated@@8 ($generated@@226 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ) (! (= ($generated@@247 ($generated@@228 $generated@@637)) ($generated@@228 ($generated@@247 $generated@@637)))
 :pattern ( ($generated@@247 ($generated@@228 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (! (let (($generated@@639 ($generated@@156 (type $generated@@638))))
 (=> (and (= (type $generated@@638) ($generated@@155 $generated@@639)) (= ($generated@@198 $generated@@638) 0)) (= $generated@@638 ($generated@@153 $generated@@639))))
 :pattern ( ($generated@@198 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (! (let (($generated@@643 (type $generated@@641)))
 (=> (and (and (= (type $generated@@640) ($generated@@80 $generated@@643 $generated@@2)) (= (type $generated@@642) $generated@@2)) (<= 0 ($generated $generated@@642))) (= ($generated@@260 ($generated@@86 $generated@@640 $generated@@641 $generated@@642)) (+ (- ($generated@@260 $generated@@640) ($generated ($generated@@85 $generated@@640 $generated@@641))) ($generated $generated@@642)))))
 :pattern ( ($generated@@260 ($generated@@86 $generated@@640 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@2)) ($generated@@78 $generated@@645 $generated@@46 $generated@@644))
 :pattern ( ($generated@@78 $generated@@645 $generated@@46 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@647) $generated@@3)) ($generated@@78 $generated@@647 $generated@@47 $generated@@646))
 :pattern ( ($generated@@78 $generated@@647 $generated@@47 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@4)) ($generated@@78 $generated@@649 $generated@@44 $generated@@648))
 :pattern ( ($generated@@78 $generated@@649 $generated@@44 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@651) $generated@@436)) ($generated@@78 $generated@@651 $generated@@45 $generated@@650))
 :pattern ( ($generated@@78 $generated@@651 $generated@@45 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@653) $generated@@185)) ($generated@@78 $generated@@653 $generated@@48 $generated@@652))
 :pattern ( ($generated@@78 $generated@@653 $generated@@48 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@155 $generated@@185)) (= (type $generated@@655) $generated@@67)) (= ($generated@@140 $generated@@654 ($generated@@479 $generated@@655)) (forall (($generated@@656 Int) ) (!  (=> (and (<= 0 $generated@@656) (< $generated@@656 ($generated@@198 $generated@@654))) ($generated@@207 ($generated@@197 $generated@@654 $generated@@656) $generated@@655))
 :pattern ( ($generated@@197 $generated@@654 $generated@@656))
))))
 :pattern ( ($generated@@140 $generated@@654 ($generated@@479 $generated@@655)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 Int) ) (!  (=> (= (type $generated@@658) ($generated@@155 $generated@@185)) (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@198 $generated@@658))) (< ($generated@@527 ($generated@@358 $generated@@176 ($generated@@197 $generated@@658 $generated@@659))) ($generated@@657 $generated@@658))))
 :pattern ( ($generated@@527 ($generated@@358 $generated@@176 ($generated@@197 $generated@@658 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@270 $generated@@185 $generated@@185)) (= (type $generated@@661) $generated@@67)) (= (type $generated@@662) $generated@@67)) ($generated@@140 $generated@@660 ($generated@@386 $generated@@661 $generated@@662))) (and (and ($generated@@140 ($generated@@268 $generated@@660) ($generated@@216 $generated@@661)) ($generated@@140 ($generated@@313 $generated@@660) ($generated@@216 $generated@@662))) ($generated@@140 ($generated@@357 $generated@@660) ($generated@@216 ($generated@@175 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@140 $generated@@660 ($generated@@386 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@288 $generated@@185 $generated@@185)) (= (type $generated@@664) $generated@@67)) (= (type $generated@@665) $generated@@67)) ($generated@@140 $generated@@663 ($generated@@394 $generated@@664 $generated@@665))) (and (and ($generated@@140 ($generated@@286 $generated@@663) ($generated@@221 $generated@@664)) ($generated@@140 ($generated@@324 $generated@@663) ($generated@@221 $generated@@665))) ($generated@@140 ($generated@@368 $generated@@663) ($generated@@221 ($generated@@175 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@140 $generated@@663 ($generated@@394 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@2) ($generated@@140 $generated@@666 $generated@@46))
 :pattern ( ($generated@@140 $generated@@666 $generated@@46))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@3) ($generated@@140 $generated@@667 $generated@@47))
 :pattern ( ($generated@@140 $generated@@667 $generated@@47))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@4) ($generated@@140 $generated@@668 $generated@@44))
 :pattern ( ($generated@@140 $generated@@668 $generated@@44))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@436) ($generated@@140 $generated@@669 $generated@@45))
 :pattern ( ($generated@@140 $generated@@669 $generated@@45))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@185) ($generated@@140 $generated@@670 $generated@@48))
 :pattern ( ($generated@@140 $generated@@670 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 (T@U) Bool)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(assert  (and (and (and (= (type $generated@@672) $generated@@81) (= (type $generated@@676) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@675) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@678) ($generated@@548 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@680 true))
(let (($generated@@681  (=> (and (=> (and (and (<= ($generated@@226 0) $generated@@671) (< $generated@@671 ($generated@@136 $generated@@672))) (not (or (= $generated@@671 $generated@@673) (= $generated@@671 $generated@@674)))) (= ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@675 $generated@@672) ($generated@@332 $generated@@671)))) ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@676 $generated@@672) ($generated@@332 $generated@@671)))))) (= (ControlFlow 0 9) 1)) $generated@@680)))
(let (($generated@@682  (=> (<= ($generated@@226 0) $generated@@671) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (=> (and (< $generated@@671 ($generated@@136 $generated@@672)) (not (or (= $generated@@671 $generated@@673) (= $generated@@671 $generated@@674)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@136 $generated@@672))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676)) (=> ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@136 $generated@@672))) (=> (and (= ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@675 $generated@@672) ($generated@@332 $generated@@671)))) ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@676 $generated@@672) ($generated@@332 $generated@@671))))) (= (ControlFlow 0 2) 1)) $generated@@680)))))))))))))))))
(let (($generated@@683  (=> (and (and (and (<= ($generated@@226 0) $generated@@673) (< $generated@@673 $generated@@674)) (< $generated@@674 ($generated@@136 $generated@@672))) (and (and ($generated@@164 $generated@@675) ($generated@@677 $generated@@675)) (and (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@81) (=> (and (not (= $generated@@684 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@676 $generated@@684) $generated@@60))) (or (= ($generated@@85 $generated@@675 $generated@@684) ($generated@@85 $generated@@676 $generated@@684)) (= $generated@@684 $generated@@672))))
 :pattern ( ($generated@@85 $generated@@675 $generated@@684))
)) ($generated@@145 $generated@@676 $generated@@675)))) (and (=> (= (ControlFlow 0 10) (- 0 23)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 22)) ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676)) (=> ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676) (and (=> (= (ControlFlow 0 10) (- 0 21)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (=> ($generated@@342 ($generated@@152 ($generated@@331 $generated@@676 $generated@@672)) ($generated@@152 ($generated@@331 $generated@@675 $generated@@672))) (and (=> (= (ControlFlow 0 10) (- 0 20)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 19)) (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@672))) (and (=> (= (ControlFlow 0 10) (- 0 18)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 17)) ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676)) (=> ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676) (and (=> (= (ControlFlow 0 10) (- 0 16)) (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@136 $generated@@672))) (=> (= ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@675 $generated@@672) ($generated@@332 $generated@@674)))) ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@676 $generated@@672) ($generated@@332 $generated@@673))))) (and (=> (= (ControlFlow 0 10) (- 0 15)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 14)) (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@136 $generated@@672))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676)) (=> ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@672))) (=> (= ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@675 $generated@@672) ($generated@@332 $generated@@673)))) ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@676 $generated@@672) ($generated@@332 $generated@@674))))) (and (=> (= (ControlFlow 0 10) 2) $generated@@682) (=> (= (ControlFlow 0 10) 9) $generated@@681))))))))))))))))))))))))))))))))))
(let (($generated@@685  (=> (and (not (and (<= ($generated@@226 0) $generated@@673) (< $generated@@673 $generated@@674))) (= (ControlFlow 0 26) 10)) $generated@@683)))
(let (($generated@@686  (=> (and (<= ($generated@@226 0) $generated@@673) (< $generated@@673 $generated@@674)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (=> (= (ControlFlow 0 24) 10) $generated@@683))))))
(let (($generated@@687  (=> (< $generated@@673 ($generated@@226 0)) (and (=> (= (ControlFlow 0 28) 24) $generated@@686) (=> (= (ControlFlow 0 28) 26) $generated@@685)))))
(let (($generated@@688  (=> (<= ($generated@@226 0) $generated@@673) (and (=> (= (ControlFlow 0 27) 24) $generated@@686) (=> (= (ControlFlow 0 27) 26) $generated@@685)))))
(let (($generated@@689  (=> (= $generated@@678 ($generated@@547 $generated@@138 $generated@@676 $generated@@60 $generated@@672)) (and (=> (= (ControlFlow 0 29) 27) $generated@@688) (=> (= (ControlFlow 0 29) 28) $generated@@687)))))
(let (($generated@@690  (=> (and ($generated@@164 $generated@@676) ($generated@@677 $generated@@676)) (=> (and (and ($generated@@140 $generated@@672 ($generated@@169 $generated@@46)) ($generated@@78 $generated@@672 ($generated@@169 $generated@@46) $generated@@676)) (and (= 1 $generated@@679) (= (ControlFlow 0 30) 29))) $generated@@689))))
$generated@@690)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@T) T@U)
(declare-fun $generated@@170 (T@T) T@U)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@185 (Int Int) Int)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U) T@U)
(declare-fun $generated@@195 () T@T)
(declare-fun $generated@@201 (T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@209 (T@U Int) T@U)
(declare-fun $generated@@210 (T@U T@U) T@U)
(declare-fun $generated@@211 (T@U) Int)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@229 (T@U Int) T@U)
(declare-fun $generated@@230 (T@U Int T@U) T@U)
(declare-fun $generated@@246 (T@U Int) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (Int) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (Int) Int)
(declare-fun $generated@@305 (Int) Int)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@332 (T@U T@U) Bool)
(declare-fun $generated@@341 (T@U) Int)
(declare-fun $generated@@349 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@T) T@U)
(declare-fun $generated@@394 (T@T T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@396 (T@T) T@T)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@T T@T) T@U)
(declare-fun $generated@@412 (T@T T@T) T@T)
(declare-fun $generated@@413 (T@T) T@T)
(declare-fun $generated@@414 (T@T) T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@482 (T@U T@U) Bool)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@T T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@531 (T@U T@U) T@U)
(declare-fun $generated@@539 (T@U T@U) T@U)
(declare-fun $generated@@563 (T@T) T@U)
(declare-fun $generated@@587 () T@T)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@625 (T@U) T@U)
(declare-fun $generated@@629 (T@U) T@U)
(declare-fun $generated@@637 (T@U) T@U)
(declare-fun $generated@@641 (T@U) T@U)
(declare-fun $generated@@653 (T@U) Int)
(declare-fun $generated@@655 (T@U) T@U)
(declare-fun $generated@@659 (T@U) T@U)
(declare-fun $generated@@663 (T@U) T@U)
(declare-fun $generated@@667 (T@U) T@U)
(declare-fun $generated@@672 (T@U) Int)
(declare-fun $generated@@674 (T@U) T@U)
(declare-fun $generated@@677 (T@U) T@U)
(declare-fun $generated@@703 (T@U) Int)
(declare-fun $generated@@704 (T@U) Int)
(declare-fun $generated@@726 (T@U T@U T@U) T@U)
(declare-fun $generated@@727 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@728 (T@T T@T) T@T)
(declare-fun $generated@@729 (T@T) T@T)
(declare-fun $generated@@730 (T@T) T@T)
(declare-fun $generated@@731 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@790 (T@U) T@U)
(declare-fun $generated@@791 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert  (and (and (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@83 (type $generated@@149))))
(= (type ($generated@@146 $generated@@149 $generated@@150)) ($generated@@80 $generated@@151 $generated@@2)))
 :pattern ( ($generated@@146 $generated@@149 $generated@@150))
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@83 (type $generated@@152))))
(= (type ($generated@@147 $generated@@152 $generated@@153)) ($generated@@80 $generated@@154 $generated@@2)))
 :pattern ( ($generated@@147 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@83 (type $generated@@155))))
(= (type ($generated@@148 $generated@@155 $generated@@156)) ($generated@@80 $generated@@157 $generated@@2)))
 :pattern ( ($generated@@148 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@83 (type $generated@@158))))
 (=> (and (= (type $generated@@158) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@159) ($generated@@80 $generated@@160 $generated@@2))) (and (= (+ (+ ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) ($generated@@145 ($generated@@146 $generated@@159 $generated@@158))) (* 2 ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))) ($generated@@145 ($generated@@148 $generated@@158 $generated@@159))) (= ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) (- ($generated@@145 $generated@@158) ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@163) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@161 $generated@@162 $generated@@163)) (forall (($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@162 $generated@@164) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@163 $generated@@164) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@163 $generated@@164) $generated@@60))
)))
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167)  (or (= $generated@@166 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@167 $generated@@166) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167))
)))
(assert  (and (and (and (and (forall (($generated@@173 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@173)) 14)) (forall (($generated@@174 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@172 (type $generated@@175))))
(= (type ($generated@@168 $generated@@175)) ($generated@@80 $generated@@176 $generated@@2)))
 :pattern ( ($generated@@168 $generated@@175))
))) (forall (($generated@@177 T@T) ) (! (= (type ($generated@@169 $generated@@177)) ($generated@@171 $generated@@177))
 :pattern ( ($generated@@169 $generated@@177))
))) (forall (($generated@@178 T@T) ) (! (= (type ($generated@@170 $generated@@178)) ($generated@@80 $generated@@178 $generated@@2))
 :pattern ( ($generated@@170 $generated@@178))
))))
(assert (forall (($generated@@179 T@T) ) (= ($generated@@168 ($generated@@169 $generated@@179)) ($generated@@170 $generated@@179))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@67) (= (type $generated@@182) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@183) $generated@@81)) (and (and ($generated@@180 $generated@@182) (and (not (= $generated@@183 $generated@@138)) (= ($generated@@139 $generated@@183) ($generated@@137 $generated@@181)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@182 $generated@@183) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@183)) $generated@@46 $generated@@182))
 :pattern ( ($generated@@136 $generated@@183) ($generated@@87 ($generated@@85 $generated@@182 $generated@@183) $generated@@60) ($generated@@137 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@2) ($generated@@140 $generated@@184 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@184 ($generated@@79 0)))
)))
(assert (forall (($generated@@186 Int) ($generated@@187 Int) ) (!  (or (= ($generated@@185 $generated@@186 $generated@@187) $generated@@186) (= ($generated@@185 $generated@@186 $generated@@187) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@67)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@67) (= (type $generated@@191) $generated@@81)) (= (type $generated@@192) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@191 ($generated@@188 $generated@@190) $generated@@192) ($generated@@78 $generated@@191 ($generated@@137 $generated@@190) $generated@@192)))
 :pattern ( ($generated@@78 $generated@@191 ($generated@@188 $generated@@190) $generated@@192))
)))
(assert  (and (= ($generated@@1 $generated@@195) 15) (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@196 $generated@@197)) $generated@@67)
 :pattern ( ($generated@@194 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (and (= (type $generated@@198) $generated@@67) (= (type $generated@@199) $generated@@67)) (= (type $generated@@200) $generated@@195)) ($generated@@140 $generated@@200 ($generated@@194 $generated@@198 $generated@@199))) ($generated@@193 $generated@@200))
 :pattern ( ($generated@@193 $generated@@200) ($generated@@140 $generated@@200 ($generated@@194 $generated@@198 $generated@@199)))
)))
(assert  (and (and (= ($generated@@1 $generated@@204) 16) (forall (($generated@@205 T@U) ) (! (= (type ($generated@@202 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@203 $generated@@206)) $generated@@204)
 :pattern ( ($generated@@203 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) $generated@@195) (= (type $generated@@208) $generated@@195)) true) (= ($generated@@201 $generated@@207 $generated@@208)  (and (= ($generated@@202 $generated@@207) ($generated@@202 $generated@@208)) (= ($generated@@203 $generated@@207) ($generated@@203 $generated@@208)))))
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
)))
(assert  (and (forall (($generated@@212 T@U) ($generated@@213 Int) ) (! (let (($generated@@214 ($generated@@172 (type $generated@@212))))
(= (type ($generated@@209 $generated@@212 $generated@@213)) ($generated@@171 $generated@@214)))
 :pattern ( ($generated@@209 $generated@@212 $generated@@213))
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(= (type ($generated@@210 $generated@@215 $generated@@216)) ($generated@@171 $generated@@217)))
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Int) ) (! (let (($generated@@221 (type $generated@@219)))
 (=> (= (type $generated@@218) ($generated@@171 $generated@@221)) (=> (and (<= 0 $generated@@220) (<= $generated@@220 ($generated@@211 $generated@@218))) (= ($generated@@209 ($generated@@210 $generated@@218 $generated@@219) $generated@@220) ($generated@@210 ($generated@@209 $generated@@218 $generated@@220) $generated@@219)))))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@218 $generated@@219) $generated@@220))
)))
(assert (forall (($generated@@224 T@U) ) (! (= (type ($generated@@222 $generated@@224)) $generated@@67)
 :pattern ( ($generated@@222 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (= (type $generated@@225) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@226) $generated@@67)) ($generated@@140 $generated@@225 ($generated@@222 $generated@@226))) ($generated@@223 $generated@@225))
 :pattern ( ($generated@@140 $generated@@225 ($generated@@222 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@172 (type $generated@@227))))
 (=> (= (type $generated@@227) ($generated@@171 $generated@@228)) ($generated@@223 ($generated@@168 $generated@@227))))
 :pattern ( ($generated@@168 $generated@@227))
)))
(assert  (and (forall (($generated@@231 T@U) ($generated@@232 Int) ) (! (let (($generated@@233 ($generated@@172 (type $generated@@231))))
(= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)) (forall (($generated@@234 T@U) ($generated@@235 Int) ($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(= (type ($generated@@230 $generated@@234 $generated@@235 $generated@@236)) ($generated@@171 $generated@@237)))
 :pattern ( ($generated@@230 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ($generated@@240 T@U) ($generated@@241 Int) ) (! (let (($generated@@242 (type $generated@@240)))
 (=> (= (type $generated@@238) ($generated@@171 $generated@@242)) (=> (and (<= 0 $generated@@241) (< $generated@@241 ($generated@@211 $generated@@238))) (and (=> (= $generated@@239 $generated@@241) (= ($generated@@229 ($generated@@230 $generated@@238 $generated@@239 $generated@@240) $generated@@241) $generated@@240)) (=> (not (= $generated@@239 $generated@@241)) (= ($generated@@229 ($generated@@230 $generated@@238 $generated@@239 $generated@@240) $generated@@241) ($generated@@229 $generated@@238 $generated@@241)))))))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@238 $generated@@239 $generated@@240) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@83 (type $generated@@243))))
 (=> (and (= (type $generated@@243) ($generated@@80 $generated@@245 $generated@@2)) (= (type $generated@@244) ($generated@@80 $generated@@245 $generated@@2))) (= ($generated@@147 ($generated@@147 $generated@@243 $generated@@244) $generated@@244) ($generated@@147 $generated@@243 $generated@@244))))
 :pattern ( ($generated@@147 ($generated@@147 $generated@@243 $generated@@244) $generated@@244))
)))
(assert  (and (forall (($generated@@248 T@U) ($generated@@249 Int) ) (! (let (($generated@@250 ($generated@@172 (type $generated@@248))))
(= (type ($generated@@246 $generated@@248 $generated@@249)) ($generated@@171 $generated@@250)))
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)) (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@172 (type $generated@@251))))
(= (type ($generated@@247 $generated@@251 $generated@@252)) ($generated@@171 $generated@@253)))
 :pattern ( ($generated@@247 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 Int) ) (! (let (($generated@@257 ($generated@@172 (type $generated@@254))))
 (=> (and (and (= (type $generated@@254) ($generated@@171 $generated@@257)) (= (type $generated@@255) ($generated@@171 $generated@@257))) (= $generated@@256 ($generated@@211 $generated@@254))) (and (= ($generated@@246 ($generated@@247 $generated@@254 $generated@@255) $generated@@256) $generated@@254) (= ($generated@@209 ($generated@@247 $generated@@254 $generated@@255) $generated@@256) $generated@@255))))
 :pattern ( ($generated@@246 ($generated@@247 $generated@@254 $generated@@255) $generated@@256))
 :pattern ( ($generated@@209 ($generated@@247 $generated@@254 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
 (=> (= (type $generated@@258) ($generated@@171 $generated@@260)) (= (exists (($generated@@261 Int) ) (!  (and (and (<= 0 $generated@@261) (< $generated@@261 ($generated@@211 $generated@@258))) (= $generated@@259 ($generated@@229 $generated@@258 $generated@@261)))
 :pattern ( ($generated@@229 $generated@@258 $generated@@261))
)) (< 0 ($generated ($generated@@85 ($generated@@168 $generated@@258) $generated@@259))))))
 :pattern ( ($generated@@85 ($generated@@168 $generated@@258) $generated@@259))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@262 $generated@@264 $generated@@265)) $generated@@195)
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) $generated@@67) (= (type $generated@@267) $generated@@67)) (= (type $generated@@268) $generated@@204)) (= (type $generated@@269) $generated@@204)) (= ($generated@@140 ($generated@@262 $generated@@268 $generated@@269) ($generated@@194 $generated@@266 $generated@@267))  (and ($generated@@263 $generated@@268 $generated@@266) ($generated@@263 $generated@@269 $generated@@267))))
 :pattern ( ($generated@@140 ($generated@@262 $generated@@268 $generated@@269) ($generated@@194 $generated@@266 $generated@@267)))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) ($generated@@171 $generated@@204))
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 Int) ) (! (= (type ($generated@@271 $generated@@274)) ($generated@@69 $generated@@204))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 Int) ($generated@@278 Int) ) (!  (=> (and (= (type $generated@@275) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@276) $generated@@81)) (=> (and (and (= (+ $generated@@277 1) $generated@@278) (<= 0 $generated@@277)) (<= $generated@@278 ($generated@@136 $generated@@276))) (= ($generated@@246 ($generated@@270 $generated@@275 $generated@@276) $generated@@278) ($generated@@210 ($generated@@246 ($generated@@270 $generated@@275 $generated@@276) $generated@@277) ($generated@@87 ($generated@@85 $generated@@275 $generated@@276) ($generated@@271 $generated@@277))))))
 :pattern ( ($generated@@246 ($generated@@270 $generated@@275 $generated@@276) $generated@@277) ($generated@@246 ($generated@@270 $generated@@275 $generated@@276) $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 T@U) ($generated@@282 Int) ) (! (let (($generated@@283 (type $generated@@281)))
 (=> (= (type $generated@@279) ($generated@@171 $generated@@283)) (=> (and (and (<= 0 $generated@@282) (<= $generated@@282 $generated@@280)) (< $generated@@280 ($generated@@211 $generated@@279))) (= ($generated@@209 ($generated@@230 $generated@@279 $generated@@280 $generated@@281) $generated@@282) ($generated@@230 ($generated@@209 $generated@@279 $generated@@282) (- $generated@@280 $generated@@282) $generated@@281)))))
 :pattern ( ($generated@@209 ($generated@@230 $generated@@279 $generated@@280 $generated@@281) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
 (=> (and (= (type $generated@@284) ($generated@@80 $generated@@287 $generated@@2)) (= (type $generated@@285) ($generated@@80 $generated@@287 $generated@@2))) (= ($generated ($generated@@85 ($generated@@148 $generated@@284 $generated@@285) $generated@@286)) (+ ($generated ($generated@@85 $generated@@284 $generated@@286)) ($generated ($generated@@85 $generated@@285 $generated@@286))))))
 :pattern ( ($generated@@85 ($generated@@148 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@195) (= (type $generated@@289) $generated@@195)) (= ($generated@@201 $generated@@288 $generated@@289) (= $generated@@288 $generated@@289)))
 :pattern ( ($generated@@201 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 Int) ) (! (let (($generated@@292 ($generated@@172 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@171 $generated@@292)) (= $generated@@291 0)) (= ($generated@@209 $generated@@290 $generated@@291) $generated@@290)))
 :pattern ( ($generated@@209 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@67)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@296) $generated@@67)) (= ($generated@@140 $generated@@295 ($generated@@293 $generated@@296)) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@204) ($generated@@0 ($generated@@85 $generated@@295 $generated@@297))) ($generated@@263 $generated@@297 $generated@@296))
 :pattern ( ($generated@@85 $generated@@295 $generated@@297))
))))
 :pattern ( ($generated@@140 $generated@@295 ($generated@@293 $generated@@296)))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@67)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@301) $generated@@67)) (= ($generated@@140 $generated@@300 ($generated@@298 $generated@@301)) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@204) ($generated@@0 ($generated@@85 $generated@@300 $generated@@302))) ($generated@@263 $generated@@302 $generated@@301))
 :pattern ( ($generated@@85 $generated@@300 $generated@@302))
))))
 :pattern ( ($generated@@140 $generated@@300 ($generated@@298 $generated@@301)))
)))
(assert (forall (($generated@@304 Int) ) (!  (=> (<= 0 $generated@@304) (= ($generated@@303 $generated@@304) $generated@@304))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@305 $generated@@306) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 (type $generated@@308)))
(= (type ($generated@@307 $generated@@308)) $generated@@309))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= ($generated@@307 $generated@@310) $generated@@310)
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@67)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (= (type $generated@@313) ($generated@@171 $generated@@204)) (= (type $generated@@314) $generated@@204)) (= (type $generated@@315) $generated@@67)) (and ($generated@@140 $generated@@313 ($generated@@311 $generated@@315)) ($generated@@263 $generated@@314 $generated@@315))) ($generated@@140 ($generated@@210 $generated@@313 $generated@@314) ($generated@@311 $generated@@315)))
 :pattern ( ($generated@@140 ($generated@@210 $generated@@313 $generated@@314) ($generated@@311 $generated@@315)))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 Int) ($generated@@318 Int) ) (! (let (($generated@@319 ($generated@@172 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@171 $generated@@319)) (=> (and (and (<= 0 $generated@@318) (< $generated@@318 $generated@@317)) (< $generated@@318 ($generated@@211 $generated@@316))) (= ($generated@@229 ($generated@@246 $generated@@316 $generated@@317) $generated@@318) ($generated@@229 $generated@@316 $generated@@318)))))
 :weight 25
 :pattern ( ($generated@@229 ($generated@@246 $generated@@316 $generated@@317) $generated@@318))
 :pattern ( ($generated@@229 $generated@@316 $generated@@318) ($generated@@246 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@321) $generated@@67) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) $generated@@204)) (= (type $generated@@324) $generated@@204)) (= (type $generated@@325) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@180 $generated@@325)) (= ($generated@@78 ($generated@@262 $generated@@323 $generated@@324) ($generated@@194 $generated@@321 $generated@@322) $generated@@325)  (and ($generated@@320 $generated@@323 $generated@@321 $generated@@325) ($generated@@320 $generated@@324 $generated@@322 $generated@@325))))
 :pattern ( ($generated@@78 ($generated@@262 $generated@@323 $generated@@324) ($generated@@194 $generated@@321 $generated@@322) $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (! (let (($generated@@328 ($generated@@172 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@171 $generated@@328)) (=> (and (<= 0 $generated@@327) (<= $generated@@327 ($generated@@211 $generated@@326))) (= ($generated@@211 ($generated@@209 $generated@@326 $generated@@327)) (- ($generated@@211 $generated@@326) $generated@@327)))))
 :pattern ( ($generated@@211 ($generated@@209 $generated@@326 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@71)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@195) (= ($generated@@193 $generated@@331) (= ($generated@@329 $generated@@331) $generated@@63)))
 :pattern ( ($generated@@193 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@172 (type $generated@@333))))
 (=> (and (= (type $generated@@333) ($generated@@171 $generated@@335)) (= (type $generated@@334) ($generated@@171 $generated@@335))) (= ($generated@@332 $generated@@333 $generated@@334)  (and (= ($generated@@211 $generated@@333) ($generated@@211 $generated@@334)) (forall (($generated@@336 Int) ) (!  (=> (and (<= 0 $generated@@336) (< $generated@@336 ($generated@@211 $generated@@333))) (= ($generated@@229 $generated@@333 $generated@@336) ($generated@@229 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@229 $generated@@333 $generated@@336))
 :pattern ( ($generated@@229 $generated@@334 $generated@@336))
))))))
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
 (=> (and (= (type $generated@@337) ($generated@@80 $generated@@340 $generated@@2)) (= (type $generated@@338) ($generated@@80 $generated@@340 $generated@@2))) (= ($generated ($generated@@85 ($generated@@146 $generated@@337 $generated@@338) $generated@@339)) ($generated@@303 (- ($generated ($generated@@85 $generated@@337 $generated@@339)) ($generated ($generated@@85 $generated@@338 $generated@@339)))))))
 :pattern ( ($generated@@85 ($generated@@146 $generated@@337 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 Int) ) (! (let (($generated@@344 ($generated@@172 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@171 $generated@@344)) (=> (and (<= 0 $generated@@343) (< $generated@@343 ($generated@@211 $generated@@342))) (< ($generated@@341 ($generated@@246 $generated@@342 $generated@@343)) ($generated@@341 $generated@@342)))))
 :pattern ( ($generated@@341 ($generated@@246 $generated@@342 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@195) ($generated@@193 $generated@@345)) (exists (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (and (and (= (type $generated@@346) $generated@@204) (= (type $generated@@347) $generated@@204)) (= $generated@@345 ($generated@@262 $generated@@346 $generated@@347)))
 :no-pattern (type $generated@@346)
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
)))
 :pattern ( ($generated@@193 $generated@@345))
)))
(assert (forall (($generated@@348 T@T) ) (! (= ($generated@@211 ($generated@@169 $generated@@348)) 0)
 :pattern ( ($generated@@169 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= (type ($generated@@349 $generated@@350 $generated@@351)) ($generated@@80 $generated@@352 $generated@@2)))
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
 (=> (= (type $generated@@353) ($generated@@80 $generated@@355 $generated@@2)) (= ($generated@@145 ($generated@@349 $generated@@353 $generated@@354)) (+ ($generated@@145 $generated@@353) 1))))
 :pattern ( ($generated@@145 ($generated@@349 $generated@@353 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 Int) ) (! (let (($generated@@358 ($generated@@172 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@171 $generated@@358)) (=> (and (< 0 $generated@@357) (<= $generated@@357 ($generated@@211 $generated@@356))) (< ($generated@@341 ($generated@@209 $generated@@356 $generated@@357)) ($generated@@341 $generated@@356)))))
 :pattern ( ($generated@@341 ($generated@@209 $generated@@356 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
 (=> (= (type $generated@@359) ($generated@@171 $generated@@361)) (= ($generated@@211 ($generated@@210 $generated@@359 $generated@@360)) (+ 1 ($generated@@211 $generated@@359)))))
 :pattern ( ($generated@@210 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@67) (= (type $generated@@363) $generated@@81)) (= ($generated@@140 $generated@@363 ($generated@@188 $generated@@362))  (and ($generated@@140 $generated@@363 ($generated@@137 $generated@@362)) (not (= $generated@@363 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@363 ($generated@@188 $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@204)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@67) (= (type $generated@@368) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@320 ($generated@@364 $generated@@366) $generated@@367 $generated@@368) ($generated@@78 $generated@@366 $generated@@367 $generated@@368)))
 :pattern ( ($generated@@320 ($generated@@364 $generated@@366) $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@369) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@370) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@371) $generated@@204)) (= (type $generated@@372) $generated@@67)) ($generated@@161 $generated@@369 $generated@@370)) ($generated@@320 $generated@@371 $generated@@372 $generated@@369)) ($generated@@320 $generated@@371 $generated@@372 $generated@@370))
 :pattern ( ($generated@@161 $generated@@369 $generated@@370) ($generated@@320 $generated@@371 $generated@@372 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@374) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@376) $generated@@67)) ($generated@@161 $generated@@373 $generated@@374)) ($generated@@78 $generated@@375 $generated@@376 $generated@@373)) ($generated@@78 $generated@@375 $generated@@376 $generated@@374))
 :pattern ( ($generated@@161 $generated@@373 $generated@@374) ($generated@@78 $generated@@375 $generated@@376 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 Int) ($generated@@379 Int) ) (! (let (($generated@@380 ($generated@@172 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@171 $generated@@380)) (=> (and (and (<= 0 $generated@@378) (<= 0 $generated@@379)) (< $generated@@379 (- ($generated@@211 $generated@@377) $generated@@378))) (= ($generated@@229 ($generated@@209 $generated@@377 $generated@@378) $generated@@379) ($generated@@229 $generated@@377 (+ $generated@@379 $generated@@378))))))
 :weight 25
 :pattern ( ($generated@@229 ($generated@@209 $generated@@377 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@83 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@80 $generated@@382 $generated@@2)) (and (= (= ($generated@@145 $generated@@381) 0) (= $generated@@381 ($generated@@170 $generated@@382))) (=> (not (= ($generated@@145 $generated@@381) 0)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (< 0 ($generated ($generated@@85 $generated@@381 $generated@@383))))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@145 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ) (! (= (type ($generated@@384 $generated@@385)) $generated@@72)
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@386)) $generated@@61) (= ($generated@@384 ($generated@@137 $generated@@386)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@67) (and (= ($generated@@76 ($generated@@188 $generated@@387)) $generated@@62) (= ($generated@@384 ($generated@@188 $generated@@387)) $generated@@65)))
 :pattern ( ($generated@@188 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
 (=> (and (and (= (type $generated@@388) ($generated@@80 $generated@@391 $generated@@2)) (= (type $generated@@389) ($generated@@80 $generated@@391 $generated@@2))) (<= ($generated ($generated@@85 $generated@@388 $generated@@390)) ($generated ($generated@@85 $generated@@389 $generated@@390)))) (= ($generated ($generated@@85 ($generated@@146 $generated@@388 $generated@@389) $generated@@390)) 0)))
 :pattern ( ($generated@@146 $generated@@388 $generated@@389) ($generated@@85 $generated@@389 $generated@@390) ($generated@@85 $generated@@388 $generated@@390))
)))
(assert  (and (and (and (and (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (= ($generated@@1 ($generated@@394 $generated@@397 $generated@@398)) 17)) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@395 ($generated@@394 $generated@@399 $generated@@400)) $generated@@399)
 :pattern ( ($generated@@394 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= ($generated@@396 ($generated@@394 $generated@@401 $generated@@402)) $generated@@402)
 :pattern ( ($generated@@394 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@395 (type $generated@@403))))
(= (type ($generated@@392 $generated@@403)) ($generated@@80 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@403))
))) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= (type ($generated@@393 $generated@@405 $generated@@406)) ($generated@@394 $generated@@405 $generated@@406))
 :pattern ( ($generated@@393 $generated@@405 $generated@@406))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@T) ) (! (let (($generated@@409 (type $generated@@407)))
 (not ($generated@@0 ($generated@@85 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407))))
 :pattern ( (let (($generated@@409 (type $generated@@407)))
($generated@@85 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407)))
)))
(assert  (and (and (and (and (forall (($generated@@415 T@T) ($generated@@416 T@T) ) (= ($generated@@1 ($generated@@412 $generated@@415 $generated@@416)) 18)) (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (! (= ($generated@@413 ($generated@@412 $generated@@417 $generated@@418)) $generated@@417)
 :pattern ( ($generated@@412 $generated@@417 $generated@@418))
))) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= ($generated@@414 ($generated@@412 $generated@@419 $generated@@420)) $generated@@420)
 :pattern ( ($generated@@412 $generated@@419 $generated@@420))
))) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@413 (type $generated@@421))))
(= (type ($generated@@410 $generated@@421)) ($generated@@80 $generated@@422 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@421))
))) (forall (($generated@@423 T@T) ($generated@@424 T@T) ) (! (= (type ($generated@@411 $generated@@423 $generated@@424)) ($generated@@412 $generated@@423 $generated@@424))
 :pattern ( ($generated@@411 $generated@@423 $generated@@424))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@T) ) (! (let (($generated@@427 (type $generated@@425)))
 (not ($generated@@0 ($generated@@85 ($generated@@410 ($generated@@411 $generated@@427 $generated@@426)) $generated@@425))))
 :pattern ( (let (($generated@@427 (type $generated@@425)))
($generated@@85 ($generated@@410 ($generated@@411 $generated@@427 $generated@@426)) $generated@@425)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@83 (type $generated@@428))))
 (=> (and (= (type $generated@@428) ($generated@@80 $generated@@430 $generated@@2)) (= (type $generated@@429) ($generated@@80 $generated@@430 $generated@@2))) (= ($generated@@145 ($generated@@148 $generated@@428 $generated@@429)) (+ ($generated@@145 $generated@@428) ($generated@@145 $generated@@429)))))
 :pattern ( ($generated@@145 ($generated@@148 $generated@@428 $generated@@429)))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@172 (type $generated@@431))))
 (=> (and (= (type $generated@@431) ($generated@@171 $generated@@433)) (= (type $generated@@432) ($generated@@171 $generated@@433))) (= ($generated@@211 ($generated@@247 $generated@@431 $generated@@432)) (+ ($generated@@211 $generated@@431) ($generated@@211 $generated@@432)))))
 :pattern ( ($generated@@211 ($generated@@247 $generated@@431 $generated@@432)))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@83 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@80 $generated@@435 $generated@@2)) (= ($generated@@223 $generated@@434) (forall (($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@435) (and (<= 0 ($generated ($generated@@85 $generated@@434 $generated@@436))) (<= ($generated ($generated@@85 $generated@@434 $generated@@436)) ($generated@@145 $generated@@434))))
 :pattern ( ($generated@@85 $generated@@434 $generated@@436))
)))))
 :pattern ( ($generated@@223 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@81)) (= ($generated@@140 $generated@@438 ($generated@@137 $generated@@437))  (or (= $generated@@438 $generated@@138) (= ($generated@@139 $generated@@438) ($generated@@137 $generated@@437)))))
 :pattern ( ($generated@@140 $generated@@438 ($generated@@137 $generated@@437)))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
 (=> (= (type $generated@@439) ($generated@@80 $generated@@441 $generated@@2)) (= ($generated ($generated@@85 ($generated@@349 $generated@@439 $generated@@440) $generated@@440)) (+ ($generated ($generated@@85 $generated@@439 $generated@@440)) 1))))
 :pattern ( ($generated@@349 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 Int) ($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
 (=> (= (type $generated@@442) ($generated@@171 $generated@@445)) (and (=> (= $generated@@443 ($generated@@211 $generated@@442)) (= ($generated@@229 ($generated@@210 $generated@@442 $generated@@444) $generated@@443) $generated@@444)) (=> (not (= $generated@@443 ($generated@@211 $generated@@442))) (= ($generated@@229 ($generated@@210 $generated@@442 $generated@@444) $generated@@443) ($generated@@229 $generated@@442 $generated@@443))))))
 :pattern ( ($generated@@229 ($generated@@210 $generated@@442 $generated@@444) $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@447)))
 (=> (and (and (= (type $generated@@446) ($generated@@80 $generated@@449 $generated@@2)) (= (type $generated@@448) $generated@@449)) (< 0 ($generated ($generated@@85 $generated@@446 $generated@@448)))) (< 0 ($generated ($generated@@85 ($generated@@349 $generated@@446 $generated@@447) $generated@@448)))))
 :pattern ( ($generated@@349 $generated@@446 $generated@@447) ($generated@@85 $generated@@446 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@396 (type $generated@@450))))
(let (($generated@@452 ($generated@@395 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@394 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@393 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@450) $generated@@453)))
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@392 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@396 (type $generated@@455))))
(= (type ($generated@@454 $generated@@455)) ($generated@@80 $generated@@456 $generated@@4)))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@396 (type $generated@@457))))
(let (($generated@@459 ($generated@@395 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@394 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@393 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@458) ($generated@@0 ($generated@@85 ($generated@@454 $generated@@457) $generated@@460)))
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@454 $generated@@457))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@414 (type $generated@@461))))
(let (($generated@@463 ($generated@@413 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@412 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@411 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ) (!  (and (= (type $generated@@464) $generated@@463) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@461) $generated@@464)))
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@410 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@414 (type $generated@@466))))
(= (type ($generated@@465 $generated@@466)) ($generated@@80 $generated@@467 $generated@@4)))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@414 (type $generated@@468))))
(let (($generated@@470 ($generated@@413 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@412 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@411 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ) (!  (and (= (type $generated@@471) $generated@@469) ($generated@@0 ($generated@@85 ($generated@@465 $generated@@468) $generated@@471)))
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@465 $generated@@468))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@473)))
 (=> (and (= (type $generated@@472) ($generated@@80 $generated@@475 $generated@@2)) (= (type $generated@@474) $generated@@475)) (= (< 0 ($generated ($generated@@85 ($generated@@349 $generated@@472 $generated@@473) $generated@@474)))  (or (= $generated@@474 $generated@@473) (< 0 ($generated ($generated@@85 $generated@@472 $generated@@474)))))))
 :pattern ( ($generated@@85 ($generated@@349 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@477) $generated@@81)) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@211 ($generated@@270 $generated@@476 $generated@@477)))) (= ($generated@@229 ($generated@@270 $generated@@476 $generated@@477) $generated@@478) ($generated@@87 ($generated@@85 $generated@@476 $generated@@477) ($generated@@271 $generated@@478))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@476 $generated@@477) ($generated@@271 $generated@@478)))
 :pattern ( ($generated@@229 ($generated@@270 $generated@@476 $generated@@477) $generated@@478))
)))
 :pattern ( ($generated@@270 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@480) $generated@@67)) (= ($generated@@140 $generated@@479 ($generated@@222 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@204) (< 0 ($generated ($generated@@85 $generated@@479 $generated@@481)))) ($generated@@263 $generated@@481 $generated@@480))
 :pattern ( ($generated@@85 $generated@@479 $generated@@481))
))))
 :pattern ( ($generated@@140 $generated@@479 ($generated@@222 $generated@@480)))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@83 (type $generated@@483))))
 (=> (and (= (type $generated@@483) ($generated@@80 $generated@@485 $generated@@2)) (= (type $generated@@484) ($generated@@80 $generated@@485 $generated@@2))) (= ($generated@@482 $generated@@483 $generated@@484) (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@485) (= ($generated ($generated@@85 $generated@@483 $generated@@486)) ($generated ($generated@@85 $generated@@484 $generated@@486))))
 :pattern ( ($generated@@85 $generated@@483 $generated@@486))
 :pattern ( ($generated@@85 $generated@@484 $generated@@486))
)))))
 :pattern ( ($generated@@482 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 Int) ($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 (type $generated@@489)))
 (=> (= (type $generated@@487) ($generated@@171 $generated@@491)) (=> (and (and (<= 0 $generated@@488) (< $generated@@488 $generated@@490)) (<= $generated@@490 ($generated@@211 $generated@@487))) (= ($generated@@209 ($generated@@230 $generated@@487 $generated@@488 $generated@@489) $generated@@490) ($generated@@209 $generated@@487 $generated@@490)))))
 :pattern ( ($generated@@209 ($generated@@230 $generated@@487 $generated@@488 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@492 ($generated@@293 $generated@@493) $generated@@494) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@204) ($generated@@0 ($generated@@85 $generated@@492 $generated@@495))) ($generated@@320 $generated@@495 $generated@@493 $generated@@494))
 :pattern ( ($generated@@85 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@78 $generated@@492 ($generated@@293 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@497) $generated@@67)) (= (type $generated@@498) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@496 ($generated@@298 $generated@@497) $generated@@498) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@204) ($generated@@0 ($generated@@85 $generated@@496 $generated@@499))) ($generated@@320 $generated@@499 $generated@@497 $generated@@498))
 :pattern ( ($generated@@85 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@78 $generated@@496 ($generated@@298 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(= ($generated ($generated@@85 ($generated@@170 $generated@@501) $generated@@500)) 0))
 :pattern ( (let (($generated@@501 (type $generated@@500)))
($generated@@85 ($generated@@170 $generated@@501) $generated@@500)))
)))
(assert  (and (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@502 $generated@@505)) ($generated@@80 $generated@@204 $generated@@4))
 :pattern ( ($generated@@502 $generated@@505))
)) (forall (($generated@@506 T@T) ($generated@@507 T@U) ) (! (= (type ($generated@@503 $generated@@506 $generated@@507)) $generated@@506)
 :pattern ( ($generated@@503 $generated@@506 $generated@@507))
))) (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@396 (type $generated@@508))))
(let (($generated@@510 ($generated@@395 (type $generated@@508))))
(= (type ($generated@@504 $generated@@508)) ($generated@@80 $generated@@510 $generated@@509))))
 :pattern ( ($generated@@504 $generated@@508))
))))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) ($generated@@394 $generated@@204 $generated@@204)) (= (type $generated@@512) $generated@@204)) (= ($generated@@0 ($generated@@85 ($generated@@502 $generated@@511) $generated@@512))  (and ($generated@@0 ($generated@@85 ($generated@@392 $generated@@511) ($generated@@202 ($generated@@503 $generated@@195 $generated@@512)))) (= ($generated@@85 ($generated@@504 $generated@@511) ($generated@@202 ($generated@@503 $generated@@195 $generated@@512))) ($generated@@203 ($generated@@503 $generated@@195 $generated@@512))))))
 :pattern ( ($generated@@85 ($generated@@502 $generated@@511) $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) ($generated@@80 $generated@@204 $generated@@4))
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@414 (type $generated@@516))))
(let (($generated@@518 ($generated@@413 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516)) ($generated@@80 $generated@@518 $generated@@517))))
 :pattern ( ($generated@@514 $generated@@516))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) ($generated@@412 $generated@@204 $generated@@204)) (= (type $generated@@520) $generated@@204)) (= ($generated@@0 ($generated@@85 ($generated@@513 $generated@@519) $generated@@520))  (and ($generated@@0 ($generated@@85 ($generated@@410 $generated@@519) ($generated@@202 ($generated@@503 $generated@@195 $generated@@520)))) (= ($generated@@85 ($generated@@514 $generated@@519) ($generated@@202 ($generated@@503 $generated@@195 $generated@@520))) ($generated@@203 ($generated@@503 $generated@@195 $generated@@520))))))
 :pattern ( ($generated@@85 ($generated@@513 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(let (($generated@@524 ($generated@@395 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@394 $generated@@524 $generated@@523)) (= ($generated@@0 ($generated@@85 ($generated@@454 $generated@@521) $generated@@522)) (exists (($generated@@525 T@U) ) (!  (and (= (type $generated@@525) $generated@@524) (and ($generated@@0 ($generated@@85 ($generated@@392 $generated@@521) $generated@@525)) (= $generated@@522 ($generated@@85 ($generated@@504 $generated@@521) $generated@@525))))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@521) $generated@@525))
 :pattern ( ($generated@@85 ($generated@@504 $generated@@521) $generated@@525))
))))))
 :pattern ( ($generated@@85 ($generated@@454 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(let (($generated@@529 ($generated@@413 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@412 $generated@@529 $generated@@528)) (= ($generated@@0 ($generated@@85 ($generated@@465 $generated@@526) $generated@@527)) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@529) (and ($generated@@0 ($generated@@85 ($generated@@410 $generated@@526) $generated@@530)) (= $generated@@527 ($generated@@85 ($generated@@514 $generated@@526) $generated@@530))))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@526) $generated@@530))
 :pattern ( ($generated@@85 ($generated@@514 $generated@@526) $generated@@530))
))))))
 :pattern ( ($generated@@85 ($generated@@465 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (! (= (type ($generated@@531 $generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) ($generated@@394 $generated@@204 $generated@@204)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@534 ($generated@@531 $generated@@535 $generated@@536) $generated@@537) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@534) $generated@@538))) (and ($generated@@320 ($generated@@85 ($generated@@504 $generated@@534) $generated@@538) $generated@@536 $generated@@537) ($generated@@320 $generated@@538 $generated@@535 $generated@@537)))
 :pattern ( ($generated@@85 ($generated@@504 $generated@@534) $generated@@538))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@534) $generated@@538))
))))
 :pattern ( ($generated@@78 $generated@@534 ($generated@@531 $generated@@535 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (! (= (type ($generated@@539 $generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) ($generated@@412 $generated@@204 $generated@@204)) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@542 ($generated@@539 $generated@@543 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@542) $generated@@546))) (and ($generated@@320 ($generated@@85 ($generated@@514 $generated@@542) $generated@@546) $generated@@544 $generated@@545) ($generated@@320 $generated@@546 $generated@@543 $generated@@545)))
 :pattern ( ($generated@@85 ($generated@@514 $generated@@542) $generated@@546))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@542) $generated@@546))
))))
 :pattern ( ($generated@@78 $generated@@542 ($generated@@539 $generated@@543 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@83 (type $generated@@547))))
 (=> (and (and (= (type $generated@@547) ($generated@@80 $generated@@549 $generated@@2)) (= (type $generated@@548) ($generated@@80 $generated@@549 $generated@@2))) ($generated@@482 $generated@@547 $generated@@548)) (= $generated@@547 $generated@@548)))
 :pattern ( ($generated@@482 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@172 (type $generated@@550))))
 (=> (and (and (= (type $generated@@550) ($generated@@171 $generated@@552)) (= (type $generated@@551) ($generated@@171 $generated@@552))) ($generated@@332 $generated@@550 $generated@@551)) (= $generated@@550 $generated@@551)))
 :pattern ( ($generated@@332 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 Int) ) (! (let (($generated@@555 ($generated@@172 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@171 $generated@@555)) (=> (and (<= 0 $generated@@554) (<= $generated@@554 ($generated@@211 $generated@@553))) (= ($generated@@211 ($generated@@246 $generated@@553 $generated@@554)) $generated@@554))))
 :pattern ( ($generated@@211 ($generated@@246 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@556) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@557) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@558) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@556 $generated@@558))) (and ($generated@@161 $generated@@556 $generated@@557) ($generated@@161 $generated@@557 $generated@@558))) ($generated@@161 $generated@@556 $generated@@558))
 :pattern ( ($generated@@161 $generated@@556 $generated@@557) ($generated@@161 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 Int) ) (!  (=> (and (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@561) $generated@@81)) (=> (and (and (and ($generated@@180 $generated@@560) (and (not (= $generated@@561 $generated@@138)) (= ($generated@@139 $generated@@561) ($generated@@137 $generated@@559)))) (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@136 $generated@@561)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@560 $generated@@561) $generated@@60))) ($generated@@320 ($generated@@87 ($generated@@85 $generated@@560 $generated@@561) ($generated@@271 $generated@@562)) $generated@@559 $generated@@560)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@560 $generated@@561) ($generated@@271 $generated@@562)) ($generated@@137 $generated@@559))
)))
(assert (forall (($generated@@564 T@T) ) (! (= (type ($generated@@563 $generated@@564)) ($generated@@80 $generated@@564 $generated@@4))
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@414 (type $generated@@565))))
(let (($generated@@567 ($generated@@413 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@412 $generated@@567 $generated@@566)) (= (= $generated@@565 ($generated@@411 $generated@@567 $generated@@566)) (= ($generated@@410 $generated@@565) ($generated@@563 $generated@@567))))))
 :pattern ( ($generated@@410 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@414 (type $generated@@568))))
(let (($generated@@570 ($generated@@413 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@412 $generated@@570 $generated@@569)) (= (= $generated@@568 ($generated@@411 $generated@@570 $generated@@569)) (= ($generated@@465 $generated@@568) ($generated@@563 $generated@@569))))))
 :pattern ( ($generated@@465 $generated@@568))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@414 (type $generated@@571))))
(let (($generated@@573 ($generated@@413 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@412 $generated@@573 $generated@@572)) (= (= $generated@@571 ($generated@@411 $generated@@573 $generated@@572)) (= ($generated@@513 $generated@@571) ($generated@@563 $generated@@204))))))
 :pattern ( ($generated@@513 $generated@@571))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@396 (type $generated@@574))))
(let (($generated@@576 ($generated@@395 (type $generated@@574))))
 (=> (= (type $generated@@574) ($generated@@394 $generated@@576 $generated@@575)) (or (= $generated@@574 ($generated@@393 $generated@@576 $generated@@575)) (exists (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (and (and (= (type $generated@@577) $generated@@204) (= (type $generated@@578) $generated@@204)) ($generated@@0 ($generated@@85 ($generated@@502 $generated@@574) ($generated@@364 ($generated@@262 $generated@@577 $generated@@578)))))
 :no-pattern (type $generated@@577)
 :no-pattern (type $generated@@578)
 :no-pattern ($generated $generated@@577)
 :no-pattern ($generated@@0 $generated@@577)
 :no-pattern ($generated $generated@@578)
 :no-pattern ($generated@@0 $generated@@578)
))))))
 :pattern ( ($generated@@502 $generated@@574))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@414 (type $generated@@579))))
(let (($generated@@581 ($generated@@413 (type $generated@@579))))
 (=> (= (type $generated@@579) ($generated@@412 $generated@@581 $generated@@580)) (or (= $generated@@579 ($generated@@411 $generated@@581 $generated@@580)) (exists (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (and (and (= (type $generated@@582) $generated@@204) (= (type $generated@@583) $generated@@204)) ($generated@@0 ($generated@@85 ($generated@@513 $generated@@579) ($generated@@364 ($generated@@262 $generated@@582 $generated@@583)))))
 :no-pattern (type $generated@@582)
 :no-pattern (type $generated@@583)
 :no-pattern ($generated $generated@@582)
 :no-pattern ($generated@@0 $generated@@582)
 :no-pattern ($generated $generated@@583)
 :no-pattern ($generated@@0 $generated@@583)
))))))
 :pattern ( ($generated@@513 $generated@@579))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@204) ($generated@@263 $generated@@584 $generated@@46)) (and (= ($generated@@364 ($generated@@503 $generated@@2 $generated@@584)) $generated@@584) ($generated@@140 ($generated@@503 $generated@@2 $generated@@584) $generated@@46)))
 :pattern ( ($generated@@263 $generated@@584 $generated@@46))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@204) ($generated@@263 $generated@@585 $generated@@47)) (and (= ($generated@@364 ($generated@@503 $generated@@3 $generated@@585)) $generated@@585) ($generated@@140 ($generated@@503 $generated@@3 $generated@@585) $generated@@47)))
 :pattern ( ($generated@@263 $generated@@585 $generated@@47))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@204) ($generated@@263 $generated@@586 $generated@@44)) (and (= ($generated@@364 ($generated@@503 $generated@@4 $generated@@586)) $generated@@586) ($generated@@140 ($generated@@503 $generated@@4 $generated@@586) $generated@@44)))
 :pattern ( ($generated@@263 $generated@@586 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@587) 19))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@204) ($generated@@263 $generated@@588 $generated@@45)) (and (= ($generated@@364 ($generated@@503 $generated@@587 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@503 $generated@@587 $generated@@588) $generated@@45)))
 :pattern ( ($generated@@263 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@67) (= ($generated@@263 ($generated@@364 $generated@@589) $generated@@590) ($generated@@140 $generated@@589 $generated@@590)))
 :pattern ( ($generated@@263 ($generated@@364 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ($generated@@593 T@U) ($generated@@594 Int) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (= (type $generated@@591) ($generated@@171 $generated@@595)) (=> (and (<= $generated@@594 $generated@@592) (< $generated@@592 ($generated@@211 $generated@@591))) (= ($generated@@246 ($generated@@230 $generated@@591 $generated@@592 $generated@@593) $generated@@594) ($generated@@246 $generated@@591 $generated@@594)))))
 :pattern ( ($generated@@246 ($generated@@230 $generated@@591 $generated@@592 $generated@@593) $generated@@594))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
(= (type ($generated@@596 $generated@@597)) ($generated@@80 $generated@@598 $generated@@2)))
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (= (type $generated@@600) $generated@@601) (and (= (= ($generated ($generated@@85 ($generated@@596 $generated@@599) $generated@@600)) 1) (= $generated@@599 $generated@@600)) (= (= ($generated ($generated@@85 ($generated@@596 $generated@@599) $generated@@600)) 0) (not (= $generated@@599 $generated@@600))))))
 :pattern ( ($generated@@85 ($generated@@596 $generated@@599) $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@81) (<= 0 ($generated@@136 $generated@@602)))
 :no-pattern (type $generated@@602)
 :no-pattern ($generated $generated@@602)
 :no-pattern ($generated@@0 $generated@@602)
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@83 (type $generated@@603))))
 (=> (= (type $generated@@603) ($generated@@80 $generated@@604 $generated@@2)) (<= 0 ($generated@@145 $generated@@603))))
 :pattern ( ($generated@@145 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@172 (type $generated@@605))))
 (=> (= (type $generated@@605) ($generated@@171 $generated@@606)) (<= 0 ($generated@@211 $generated@@605))))
 :pattern ( ($generated@@211 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ($generated@@609 Int) ) (! (let (($generated@@610 ($generated@@172 (type $generated@@607))))
 (=> (= (type $generated@@607) ($generated@@171 $generated@@610)) (=> (and (and (<= 0 $generated@@608) (< $generated@@608 $generated@@609)) (<= $generated@@609 ($generated@@211 $generated@@607))) (< ($generated@@341 ($generated@@247 ($generated@@246 $generated@@607 $generated@@608) ($generated@@209 $generated@@607 $generated@@609))) ($generated@@341 $generated@@607)))))
 :pattern ( ($generated@@341 ($generated@@247 ($generated@@246 $generated@@607 $generated@@608) ($generated@@209 $generated@@607 $generated@@609))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@613)))
 (=> (and (= (type $generated@@611) ($generated@@80 $generated@@614 $generated@@2)) (= (type $generated@@612) ($generated@@80 $generated@@614 $generated@@2))) (= ($generated ($generated@@85 ($generated@@147 $generated@@611 $generated@@612) $generated@@613)) ($generated@@185 ($generated ($generated@@85 $generated@@611 $generated@@613)) ($generated ($generated@@85 $generated@@612 $generated@@613))))))
 :pattern ( ($generated@@85 ($generated@@147 $generated@@611 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@67)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@67) (= (type $generated@@618) $generated@@67)) (= ($generated@@615 ($generated@@531 $generated@@617 $generated@@618)) $generated@@617))
 :pattern ( ($generated@@531 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@67)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@67) (= (type $generated@@622) $generated@@67)) (= ($generated@@619 ($generated@@531 $generated@@621 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@531 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@67) (= (type $generated@@624) $generated@@67)) (= ($generated@@76 ($generated@@531 $generated@@623 $generated@@624)) $generated@@58))
 :pattern ( ($generated@@531 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ) (! (= (type ($generated@@625 $generated@@626)) $generated@@67)
 :pattern ( ($generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@67) (= (type $generated@@628) $generated@@67)) (= ($generated@@625 ($generated@@539 $generated@@627 $generated@@628)) $generated@@627))
 :pattern ( ($generated@@539 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ) (! (= (type ($generated@@629 $generated@@630)) $generated@@67)
 :pattern ( ($generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@67) (= (type $generated@@632) $generated@@67)) (= ($generated@@629 ($generated@@539 $generated@@631 $generated@@632)) $generated@@632))
 :pattern ( ($generated@@539 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@67) (= (type $generated@@634) $generated@@67)) (= ($generated@@76 ($generated@@539 $generated@@633 $generated@@634)) $generated@@59))
 :pattern ( ($generated@@539 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@204) (= (type $generated@@636) $generated@@204)) (= ($generated@@329 ($generated@@262 $generated@@635 $generated@@636)) $generated@@63))
 :pattern ( ($generated@@262 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ) (! (= (type ($generated@@637 $generated@@638)) $generated@@67)
 :pattern ( ($generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@67) (= (type $generated@@640) $generated@@67)) (= ($generated@@637 ($generated@@194 $generated@@639 $generated@@640)) $generated@@639))
 :pattern ( ($generated@@194 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ) (! (= (type ($generated@@641 $generated@@642)) $generated@@67)
 :pattern ( ($generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@67) (= (type $generated@@644) $generated@@67)) (= ($generated@@641 ($generated@@194 $generated@@643 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@194 $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@204) (= (type $generated@@646) $generated@@204)) (= ($generated@@202 ($generated@@262 $generated@@645 $generated@@646)) $generated@@645))
 :pattern ( ($generated@@262 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@204) (= (type $generated@@648) $generated@@204)) (= ($generated@@203 ($generated@@262 $generated@@647 $generated@@648)) $generated@@648))
 :pattern ( ($generated@@262 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@649) ($generated@@171 $generated@@204)) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@649 ($generated@@311 $generated@@650) $generated@@651) (forall (($generated@@652 Int) ) (!  (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@211 $generated@@649))) ($generated@@320 ($generated@@229 $generated@@649 $generated@@652) $generated@@650 $generated@@651))
 :pattern ( ($generated@@229 $generated@@649 $generated@@652))
))))
 :pattern ( ($generated@@78 $generated@@649 ($generated@@311 $generated@@650) $generated@@651))
)))
(assert (forall (($generated@@654 Int) ) (! (= ($generated@@653 ($generated@@79 $generated@@654)) $generated@@654)
 :pattern ( ($generated@@79 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ) (! (= (type ($generated@@655 $generated@@656)) $generated@@67)
 :pattern ( ($generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@67) (= ($generated@@655 ($generated@@293 $generated@@657)) $generated@@657))
 :pattern ( ($generated@@293 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@67) (= ($generated@@76 ($generated@@293 $generated@@658)) $generated@@54))
 :pattern ( ($generated@@293 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ) (! (= (type ($generated@@659 $generated@@660)) $generated@@67)
 :pattern ( ($generated@@659 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@67) (= ($generated@@659 ($generated@@298 $generated@@661)) $generated@@661))
 :pattern ( ($generated@@298 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@67) (= ($generated@@76 ($generated@@298 $generated@@662)) $generated@@55))
 :pattern ( ($generated@@298 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ) (! (= (type ($generated@@663 $generated@@664)) $generated@@67)
 :pattern ( ($generated@@663 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@67) (= ($generated@@663 ($generated@@222 $generated@@665)) $generated@@665))
 :pattern ( ($generated@@222 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@67) (= ($generated@@76 ($generated@@222 $generated@@666)) $generated@@56))
 :pattern ( ($generated@@222 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ) (! (= (type ($generated@@667 $generated@@668)) $generated@@67)
 :pattern ( ($generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@67) (= ($generated@@667 ($generated@@311 $generated@@669)) $generated@@669))
 :pattern ( ($generated@@311 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@67) (= ($generated@@76 ($generated@@311 $generated@@670)) $generated@@57))
 :pattern ( ($generated@@311 $generated@@670))
)))
(assert (forall (($generated@@671 Int) ) (! (= ($generated@@75 ($generated@@271 $generated@@671)) 1)
 :pattern ( ($generated@@271 $generated@@671))
)))
(assert (forall (($generated@@673 Int) ) (! (= ($generated@@672 ($generated@@271 $generated@@673)) $generated@@673)
 :pattern ( ($generated@@271 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ) (! (= (type ($generated@@674 $generated@@675)) $generated@@67)
 :pattern ( ($generated@@674 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@67) (= ($generated@@674 ($generated@@137 $generated@@676)) $generated@@676))
 :pattern ( ($generated@@137 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ) (! (= (type ($generated@@677 $generated@@678)) $generated@@67)
 :pattern ( ($generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@67) (= ($generated@@677 ($generated@@188 $generated@@679)) $generated@@679))
 :pattern ( ($generated@@188 $generated@@679))
)))
(assert (forall (($generated@@680 T@U) ) (! (let (($generated@@681 (type $generated@@680)))
(= ($generated@@503 $generated@@681 ($generated@@364 $generated@@680)) $generated@@680))
 :pattern ( ($generated@@364 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@682) ($generated@@394 $generated@@204 $generated@@204)) (= (type $generated@@683) $generated@@67)) (= (type $generated@@684) $generated@@67)) (= ($generated@@140 $generated@@682 ($generated@@531 $generated@@683 $generated@@684)) (forall (($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@682) $generated@@685))) (and ($generated@@263 ($generated@@85 ($generated@@504 $generated@@682) $generated@@685) $generated@@684) ($generated@@263 $generated@@685 $generated@@683)))
 :pattern ( ($generated@@85 ($generated@@504 $generated@@682) $generated@@685))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@682) $generated@@685))
))))
 :pattern ( ($generated@@140 $generated@@682 ($generated@@531 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@686) ($generated@@412 $generated@@204 $generated@@204)) (= (type $generated@@687) $generated@@67)) (= (type $generated@@688) $generated@@67)) (= ($generated@@140 $generated@@686 ($generated@@539 $generated@@687 $generated@@688)) (forall (($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@686) $generated@@689))) (and ($generated@@263 ($generated@@85 ($generated@@514 $generated@@686) $generated@@689) $generated@@688) ($generated@@263 $generated@@689 $generated@@687)))
 :pattern ( ($generated@@85 ($generated@@514 $generated@@686) $generated@@689))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@686) $generated@@689))
))))
 :pattern ( ($generated@@140 $generated@@686 ($generated@@539 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 Int) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@692) $generated@@204)) (= (type $generated@@693) $generated@@81)) (and (<= 0 $generated@@691) (< $generated@@691 ($generated@@136 $generated@@693)))) (= ($generated@@270 ($generated@@86 $generated@@690 $generated@@693 ($generated@@88 ($generated@@85 $generated@@690 $generated@@693) ($generated@@271 $generated@@691) $generated@@692)) $generated@@693) ($generated@@230 ($generated@@270 $generated@@690 $generated@@693) $generated@@691 $generated@@692)))
 :pattern ( ($generated@@270 ($generated@@86 $generated@@690 $generated@@693 ($generated@@88 ($generated@@85 $generated@@690 $generated@@693) ($generated@@271 $generated@@691) $generated@@692)) $generated@@693))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 Int) ) (!  (=> (and (and (and (= (type $generated@@694) $generated@@67) (= (type $generated@@695) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@696) $generated@@81)) (and (and ($generated@@180 $generated@@695) (and (not (= $generated@@696 $generated@@138)) (= ($generated@@139 $generated@@696) ($generated@@137 $generated@@694)))) (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@136 $generated@@696))))) ($generated@@263 ($generated@@87 ($generated@@85 $generated@@695 $generated@@696) ($generated@@271 $generated@@697)) $generated@@694))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@695 $generated@@696) ($generated@@271 $generated@@697)) ($generated@@137 $generated@@694))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 Int) ($generated@@700 T@U) ($generated@@701 T@U) ) (! (let (($generated@@702 (type $generated@@700)))
 (=> (and (and (= (type $generated@@698) ($generated@@171 $generated@@702)) (= (type $generated@@701) $generated@@702)) (and (<= 0 $generated@@699) (< $generated@@699 ($generated@@211 $generated@@698)))) (= ($generated ($generated@@85 ($generated@@168 ($generated@@230 $generated@@698 $generated@@699 $generated@@700)) $generated@@701)) ($generated ($generated@@85 ($generated@@148 ($generated@@146 ($generated@@168 $generated@@698) ($generated@@596 ($generated@@229 $generated@@698 $generated@@699))) ($generated@@596 $generated@@700)) $generated@@701)))))
 :pattern ( ($generated@@85 ($generated@@168 ($generated@@230 $generated@@698 $generated@@699 $generated@@700)) $generated@@701))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@204) (= (type $generated@@706) $generated@@204)) (< ($generated@@703 $generated@@705) ($generated@@704 ($generated@@262 $generated@@705 $generated@@706))))
 :pattern ( ($generated@@262 $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@204) (= (type $generated@@708) $generated@@204)) (< ($generated@@703 $generated@@708) ($generated@@704 ($generated@@262 $generated@@707 $generated@@708))))
 :pattern ( ($generated@@262 $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (! (let (($generated@@711 ($generated@@83 (type $generated@@709))))
 (=> (and (= (type $generated@@709) ($generated@@80 $generated@@711 $generated@@2)) (= (type $generated@@710) ($generated@@80 $generated@@711 $generated@@2))) (= ($generated@@147 $generated@@709 ($generated@@147 $generated@@709 $generated@@710)) ($generated@@147 $generated@@709 $generated@@710))))
 :pattern ( ($generated@@147 $generated@@709 ($generated@@147 $generated@@709 $generated@@710)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (and (= (type $generated@@712) $generated@@204) (= (type $generated@@713) $generated@@67)) (= (type $generated@@714) $generated@@67)) ($generated@@263 $generated@@712 ($generated@@531 $generated@@713 $generated@@714))) (and (= ($generated@@364 ($generated@@503 ($generated@@394 $generated@@204 $generated@@204) $generated@@712)) $generated@@712) ($generated@@140 ($generated@@503 ($generated@@394 $generated@@204 $generated@@204) $generated@@712) ($generated@@531 $generated@@713 $generated@@714))))
 :pattern ( ($generated@@263 $generated@@712 ($generated@@531 $generated@@713 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (and (= (type $generated@@715) $generated@@204) (= (type $generated@@716) $generated@@67)) (= (type $generated@@717) $generated@@67)) ($generated@@263 $generated@@715 ($generated@@539 $generated@@716 $generated@@717))) (and (= ($generated@@364 ($generated@@503 ($generated@@412 $generated@@204 $generated@@204) $generated@@715)) $generated@@715) ($generated@@140 ($generated@@503 ($generated@@412 $generated@@204 $generated@@204) $generated@@715) ($generated@@539 $generated@@716 $generated@@717))))
 :pattern ( ($generated@@263 $generated@@715 ($generated@@539 $generated@@716 $generated@@717)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (and (= (type $generated@@718) $generated@@67) (= (type $generated@@719) $generated@@67)) (= (type $generated@@720) $generated@@204)) ($generated@@263 $generated@@720 ($generated@@194 $generated@@718 $generated@@719))) (and (= ($generated@@364 ($generated@@503 $generated@@195 $generated@@720)) $generated@@720) ($generated@@140 ($generated@@503 $generated@@195 $generated@@720) ($generated@@194 $generated@@718 $generated@@719))))
 :pattern ( ($generated@@263 $generated@@720 ($generated@@194 $generated@@718 $generated@@719)))
)))
(assert (forall (($generated@@721 T@U) ) (! (let (($generated@@722 (type $generated@@721)))
 (not ($generated@@0 ($generated@@85 ($generated@@563 $generated@@722) $generated@@721))))
 :pattern ( (let (($generated@@722 (type $generated@@721)))
($generated@@85 ($generated@@563 $generated@@722) $generated@@721)))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@723) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@724) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@725) $generated@@81)) (=> (and (and (and ($generated@@180 $generated@@723) ($generated@@180 $generated@@724)) ($generated@@161 $generated@@723 $generated@@724)) (= ($generated@@85 $generated@@723 $generated@@725) ($generated@@85 $generated@@724 $generated@@725))) (= ($generated@@270 $generated@@723 $generated@@725) ($generated@@270 $generated@@724 $generated@@725))))
 :pattern ( ($generated@@270 $generated@@724 $generated@@725) ($generated@@161 $generated@@723 $generated@@724))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@732 T@T) ($generated@@733 T@T) ) (= ($generated@@1 ($generated@@728 $generated@@732 $generated@@733)) 20)) (forall (($generated@@734 T@T) ($generated@@735 T@T) ) (! (= ($generated@@729 ($generated@@728 $generated@@734 $generated@@735)) $generated@@734)
 :pattern ( ($generated@@728 $generated@@734 $generated@@735))
))) (forall (($generated@@736 T@T) ($generated@@737 T@T) ) (! (= ($generated@@730 ($generated@@728 $generated@@736 $generated@@737)) $generated@@737)
 :pattern ( ($generated@@728 $generated@@736 $generated@@737))
))) (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ) (! (let (($generated@@741 ($generated@@730 (type $generated@@738))))
(= (type ($generated@@726 $generated@@738 $generated@@739 $generated@@740)) $generated@@741))
 :pattern ( ($generated@@726 $generated@@738 $generated@@739 $generated@@740))
))) (forall (($generated@@742 T@U) ($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ) (! (let (($generated@@746 (type $generated@@745)))
(let (($generated@@747 (type $generated@@743)))
(= (type ($generated@@731 $generated@@742 $generated@@743 $generated@@744 $generated@@745)) ($generated@@728 $generated@@747 $generated@@746))))
 :pattern ( ($generated@@731 $generated@@742 $generated@@743 $generated@@744 $generated@@745))
))) (forall (($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (! (let (($generated@@752 ($generated@@730 (type $generated@@748))))
 (=> (= (type $generated@@751) $generated@@752) (= ($generated@@726 ($generated@@731 $generated@@748 $generated@@749 $generated@@750 $generated@@751) $generated@@749 $generated@@750) $generated@@751)))
 :weight 0
))) (and (and (forall (($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (or (= $generated@@755 $generated@@757) (= ($generated@@726 ($generated@@731 $generated@@754 $generated@@755 $generated@@756 $generated@@753) $generated@@757 $generated@@758) ($generated@@726 $generated@@754 $generated@@757 $generated@@758)))
 :weight 0
)) (forall (($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ($generated@@763 T@U) ($generated@@764 T@U) ) (!  (or (= $generated@@762 $generated@@764) (= ($generated@@726 ($generated@@731 $generated@@760 $generated@@761 $generated@@762 $generated@@759) $generated@@763 $generated@@764) ($generated@@726 $generated@@760 $generated@@763 $generated@@764)))
 :weight 0
))) (forall (($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ($generated@@769 T@U) ($generated@@770 T@U) ) (!  (or true (= ($generated@@726 ($generated@@731 $generated@@766 $generated@@767 $generated@@768 $generated@@765) $generated@@769 $generated@@770) ($generated@@726 $generated@@766 $generated@@769 $generated@@770)))
 :weight 0
)))) (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ($generated@@774 T@U) ) (! (= (type ($generated@@727 $generated@@771 $generated@@772 $generated@@773 $generated@@774)) ($generated@@728 $generated@@81 $generated@@4))
 :pattern ( ($generated@@727 $generated@@771 $generated@@772 $generated@@773 $generated@@774))
))))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ($generated@@779 T@U) ($generated@@780 T@U) ) (! (let (($generated@@781 ($generated@@70 (type $generated@@780))))
 (=> (and (and (and (and (and (= (type $generated@@775) $generated@@81) (= (type $generated@@776) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@777) ($generated@@69 $generated@@4))) (= (type $generated@@778) $generated@@81)) (= (type $generated@@779) $generated@@81)) (= (type $generated@@780) ($generated@@69 $generated@@781))) (= ($generated@@0 ($generated@@726 ($generated@@727 $generated@@775 $generated@@776 $generated@@777 $generated@@778) $generated@@779 $generated@@780))  (=> (and (not (= $generated@@779 $generated@@775)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@776 $generated@@779) $generated@@777))) (= $generated@@779 $generated@@778)))))
 :pattern ( ($generated@@726 ($generated@@727 $generated@@775 $generated@@776 $generated@@777 $generated@@778) $generated@@779 $generated@@780))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 Int) ($generated@@784 T@U) ) (! (let (($generated@@785 (type $generated@@784)))
 (=> (= (type $generated@@782) ($generated@@171 $generated@@785)) (=> (and (<= 0 $generated@@783) (< $generated@@783 ($generated@@211 $generated@@782))) (= ($generated@@211 ($generated@@230 $generated@@782 $generated@@783 $generated@@784)) ($generated@@211 $generated@@782)))))
 :pattern ( ($generated@@211 ($generated@@230 $generated@@782 $generated@@783 $generated@@784)))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@786) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@787) $generated@@81)) (= ($generated@@211 ($generated@@270 $generated@@786 $generated@@787)) ($generated@@136 $generated@@787)))
 :pattern ( ($generated@@211 ($generated@@270 $generated@@786 $generated@@787)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ) (!  (=> (and (= (type $generated@@788) $generated@@67) (= (type $generated@@789) $generated@@67)) (and (= ($generated@@76 ($generated@@194 $generated@@788 $generated@@789)) $generated@@64) (= ($generated@@384 ($generated@@194 $generated@@788 $generated@@789)) $generated@@66)))
 :pattern ( ($generated@@194 $generated@@788 $generated@@789))
)))
(assert  (and (forall (($generated@@792 T@U) ) (! (let (($generated@@793 ($generated@@172 (type $generated@@792))))
(= (type ($generated@@790 $generated@@792)) ($generated@@171 $generated@@793)))
 :pattern ( ($generated@@790 $generated@@792))
)) (forall (($generated@@794 T@U) ) (! (let (($generated@@795 ($generated@@172 (type $generated@@794))))
(= (type ($generated@@791 $generated@@794)) $generated@@795))
 :pattern ( ($generated@@791 $generated@@794))
))))
(assert (forall (($generated@@796 T@U) ($generated@@797 T@U) ) (! (let (($generated@@798 (type $generated@@797)))
 (=> (= (type $generated@@796) ($generated@@171 $generated@@798)) (and (= ($generated@@790 ($generated@@210 $generated@@796 $generated@@797)) $generated@@796) (= ($generated@@791 ($generated@@210 $generated@@796 $generated@@797)) $generated@@797))))
 :pattern ( ($generated@@210 $generated@@796 $generated@@797))
)))
(assert (forall (($generated@@799 T@U) ) (!  (=> (= (type $generated@@799) $generated@@195) (= ($generated@@703 ($generated@@364 $generated@@799)) ($generated@@704 $generated@@799)))
 :pattern ( ($generated@@703 ($generated@@364 $generated@@799)))
)))
(assert (forall (($generated@@800 T@U) ) (! (let (($generated@@801 (type $generated@@800)))
(= ($generated@@596 $generated@@800) ($generated@@349 ($generated@@170 $generated@@801) $generated@@800)))
 :pattern ( ($generated@@596 $generated@@800))
)))
(assert (forall (($generated@@802 T@U) ) (! (let (($generated@@803 ($generated@@172 (type $generated@@802))))
 (=> (= (type $generated@@802) ($generated@@171 $generated@@803)) (= ($generated@@145 ($generated@@168 $generated@@802)) ($generated@@211 $generated@@802))))
 :pattern ( ($generated@@145 ($generated@@168 $generated@@802)))
)))
(assert (forall (($generated@@804 Int) ($generated@@805 Int) ) (! (= (<= $generated@@804 $generated@@805) (= ($generated@@185 $generated@@804 $generated@@805) $generated@@804))
 :pattern ( ($generated@@185 $generated@@804 $generated@@805))
)))
(assert (forall (($generated@@806 Int) ($generated@@807 Int) ) (! (= (<= $generated@@807 $generated@@806) (= ($generated@@185 $generated@@806 $generated@@807) $generated@@807))
 :pattern ( ($generated@@185 $generated@@806 $generated@@807))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (and (= (type $generated@@808) $generated@@204) ($generated@@263 $generated@@808 ($generated@@79 0))) (and (= ($generated@@364 ($generated@@503 $generated@@2 $generated@@808)) $generated@@808) ($generated@@140 ($generated@@503 ($generated@@80 $generated@@204 $generated@@4) $generated@@808) ($generated@@79 0))))
 :pattern ( ($generated@@263 $generated@@808 ($generated@@79 0)))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ) (!  (=> (and (and (= (type $generated@@809) $generated@@204) (= (type $generated@@810) $generated@@67)) ($generated@@263 $generated@@809 ($generated@@293 $generated@@810))) (and (= ($generated@@364 ($generated@@503 ($generated@@80 $generated@@204 $generated@@4) $generated@@809)) $generated@@809) ($generated@@140 ($generated@@503 ($generated@@80 $generated@@204 $generated@@4) $generated@@809) ($generated@@293 $generated@@810))))
 :pattern ( ($generated@@263 $generated@@809 ($generated@@293 $generated@@810)))
)))
(assert (forall (($generated@@811 T@U) ($generated@@812 T@U) ) (!  (=> (and (and (= (type $generated@@811) $generated@@204) (= (type $generated@@812) $generated@@67)) ($generated@@263 $generated@@811 ($generated@@298 $generated@@812))) (and (= ($generated@@364 ($generated@@503 ($generated@@80 $generated@@204 $generated@@4) $generated@@811)) $generated@@811) ($generated@@140 ($generated@@503 ($generated@@80 $generated@@204 $generated@@4) $generated@@811) ($generated@@298 $generated@@812))))
 :pattern ( ($generated@@263 $generated@@811 ($generated@@298 $generated@@812)))
)))
(assert (forall (($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (and (= (type $generated@@813) $generated@@204) (= (type $generated@@814) $generated@@67)) ($generated@@263 $generated@@813 ($generated@@222 $generated@@814))) (and (= ($generated@@364 ($generated@@503 ($generated@@80 $generated@@204 $generated@@2) $generated@@813)) $generated@@813) ($generated@@140 ($generated@@503 ($generated@@80 $generated@@204 $generated@@2) $generated@@813) ($generated@@222 $generated@@814))))
 :pattern ( ($generated@@263 $generated@@813 ($generated@@222 $generated@@814)))
)))
(assert (forall (($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (and (= (type $generated@@815) $generated@@204) (= (type $generated@@816) $generated@@67)) ($generated@@263 $generated@@815 ($generated@@311 $generated@@816))) (and (= ($generated@@364 ($generated@@503 ($generated@@171 $generated@@204) $generated@@815)) $generated@@815) ($generated@@140 ($generated@@503 ($generated@@171 $generated@@204) $generated@@815) ($generated@@311 $generated@@816))))
 :pattern ( ($generated@@263 $generated@@815 ($generated@@311 $generated@@816)))
)))
(assert (forall (($generated@@817 T@U) ($generated@@818 T@U) ) (!  (=> (and (and (= (type $generated@@817) $generated@@67) (= (type $generated@@818) $generated@@204)) ($generated@@263 $generated@@818 ($generated@@137 $generated@@817))) (and (= ($generated@@364 ($generated@@503 $generated@@81 $generated@@818)) $generated@@818) ($generated@@140 ($generated@@503 $generated@@81 $generated@@818) ($generated@@137 $generated@@817))))
 :pattern ( ($generated@@263 $generated@@818 ($generated@@137 $generated@@817)))
)))
(assert (forall (($generated@@819 T@U) ($generated@@820 T@U) ) (!  (=> (and (and (= (type $generated@@819) $generated@@67) (= (type $generated@@820) $generated@@204)) ($generated@@263 $generated@@820 ($generated@@188 $generated@@819))) (and (= ($generated@@364 ($generated@@503 $generated@@81 $generated@@820)) $generated@@820) ($generated@@140 ($generated@@503 $generated@@81 $generated@@820) ($generated@@188 $generated@@819))))
 :pattern ( ($generated@@263 $generated@@820 ($generated@@188 $generated@@819)))
)))
(assert (forall (($generated@@821 T@U) ($generated@@822 T@U) ) (! (let (($generated@@823 (type $generated@@822)))
 (=> (= (type $generated@@821) ($generated@@171 $generated@@823)) (= ($generated@@168 ($generated@@210 $generated@@821 $generated@@822)) ($generated@@349 ($generated@@168 $generated@@821) $generated@@822))))
 :pattern ( ($generated@@168 ($generated@@210 $generated@@821 $generated@@822)))
)))
(assert (forall (($generated@@824 T@U) ($generated@@825 T@U) ($generated@@826 T@U) ($generated@@827 T@U) ) (! (let (($generated@@828 (type $generated@@827)))
 (=> (and (and (and (= (type $generated@@824) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@825) $generated@@81)) (= (type $generated@@826) ($generated@@69 $generated@@828))) ($generated@@180 ($generated@@86 $generated@@824 $generated@@825 ($generated@@88 ($generated@@85 $generated@@824 $generated@@825) $generated@@826 $generated@@827)))) ($generated@@161 $generated@@824 ($generated@@86 $generated@@824 $generated@@825 ($generated@@88 ($generated@@85 $generated@@824 $generated@@825) $generated@@826 $generated@@827)))))
 :pattern ( ($generated@@86 $generated@@824 $generated@@825 ($generated@@88 ($generated@@85 $generated@@824 $generated@@825) $generated@@826 $generated@@827)))
)))
(assert (forall (($generated@@829 T@U) ($generated@@830 Int) ($generated@@831 Int) ) (! (let (($generated@@832 ($generated@@172 (type $generated@@829))))
 (=> (= (type $generated@@829) ($generated@@171 $generated@@832)) (=> (and (and (<= 0 $generated@@830) (<= $generated@@830 $generated@@831)) (< $generated@@831 ($generated@@211 $generated@@829))) (= ($generated@@229 ($generated@@209 $generated@@829 $generated@@830) (- $generated@@831 $generated@@830)) ($generated@@229 $generated@@829 $generated@@831)))))
 :weight 25
 :pattern ( ($generated@@229 $generated@@829 $generated@@831) ($generated@@209 $generated@@829 $generated@@830))
)))
(assert (forall (($generated@@833 T@U) ($generated@@834 T@U) ($generated@@835 T@U) ) (!  (=> (and (and (= (type $generated@@833) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@834) $generated@@67)) (= (type $generated@@835) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@833 ($generated@@222 $generated@@834) $generated@@835) (forall (($generated@@836 T@U) ) (!  (=> (and (= (type $generated@@836) $generated@@204) (< 0 ($generated ($generated@@85 $generated@@833 $generated@@836)))) ($generated@@320 $generated@@836 $generated@@834 $generated@@835))
 :pattern ( ($generated@@85 $generated@@833 $generated@@836))
))))
 :pattern ( ($generated@@78 $generated@@833 ($generated@@222 $generated@@834) $generated@@835))
)))
(assert (forall (($generated@@837 T@U) ($generated@@838 Int) ($generated@@839 Int) ) (! (let (($generated@@840 ($generated@@172 (type $generated@@837))))
 (=> (= (type $generated@@837) ($generated@@171 $generated@@840)) (=> (and (and (<= 0 $generated@@838) (<= 0 $generated@@839)) (<= (+ $generated@@838 $generated@@839) ($generated@@211 $generated@@837))) (= ($generated@@209 ($generated@@209 $generated@@837 $generated@@838) $generated@@839) ($generated@@209 $generated@@837 (+ $generated@@838 $generated@@839))))))
 :pattern ( ($generated@@209 ($generated@@209 $generated@@837 $generated@@838) $generated@@839))
)))
(assert (forall (($generated@@841 T@U) ($generated@@842 T@U) ($generated@@843 T@U) ) (!  (=> (and (and (and (= (type $generated@@841) $generated@@195) (= (type $generated@@842) $generated@@67)) (= (type $generated@@843) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@180 $generated@@843) (and ($generated@@193 $generated@@841) (exists (($generated@@844 T@U) ) (!  (and (= (type $generated@@844) $generated@@67) ($generated@@78 $generated@@841 ($generated@@194 $generated@@842 $generated@@844) $generated@@843))
 :pattern ( ($generated@@78 $generated@@841 ($generated@@194 $generated@@842 $generated@@844) $generated@@843))
))))) ($generated@@320 ($generated@@202 $generated@@841) $generated@@842 $generated@@843))
 :pattern ( ($generated@@320 ($generated@@202 $generated@@841) $generated@@842 $generated@@843))
)))
(assert (forall (($generated@@845 T@U) ($generated@@846 T@U) ($generated@@847 T@U) ) (!  (=> (and (and (and (= (type $generated@@845) $generated@@195) (= (type $generated@@846) $generated@@67)) (= (type $generated@@847) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@180 $generated@@847) (and ($generated@@193 $generated@@845) (exists (($generated@@848 T@U) ) (!  (and (= (type $generated@@848) $generated@@67) ($generated@@78 $generated@@845 ($generated@@194 $generated@@848 $generated@@846) $generated@@847))
 :pattern ( ($generated@@78 $generated@@845 ($generated@@194 $generated@@848 $generated@@846) $generated@@847))
))))) ($generated@@320 ($generated@@203 $generated@@845) $generated@@846 $generated@@847))
 :pattern ( ($generated@@320 ($generated@@203 $generated@@845) $generated@@846 $generated@@847))
)))
(assert (forall (($generated@@849 T@U) ($generated@@850 T@U) ($generated@@851 T@U) ) (! (let (($generated@@852 (type $generated@@850)))
 (=> (and (and (= (type $generated@@849) ($generated@@80 $generated@@852 $generated@@2)) (= (type $generated@@851) $generated@@852)) (not (= $generated@@850 $generated@@851))) (= ($generated ($generated@@85 $generated@@849 $generated@@851)) ($generated ($generated@@85 ($generated@@349 $generated@@849 $generated@@850) $generated@@851)))))
 :pattern ( ($generated@@349 $generated@@849 $generated@@850) ($generated@@85 $generated@@849 $generated@@851))
)))
(assert (forall (($generated@@853 T@U) ($generated@@854 T@U) ($generated@@855 Int) ) (! (let (($generated@@856 ($generated@@172 (type $generated@@853))))
 (=> (and (= (type $generated@@853) ($generated@@171 $generated@@856)) (= (type $generated@@854) ($generated@@171 $generated@@856))) (and (=> (< $generated@@855 ($generated@@211 $generated@@853)) (= ($generated@@229 ($generated@@247 $generated@@853 $generated@@854) $generated@@855) ($generated@@229 $generated@@853 $generated@@855))) (=> (<= ($generated@@211 $generated@@853) $generated@@855) (= ($generated@@229 ($generated@@247 $generated@@853 $generated@@854) $generated@@855) ($generated@@229 $generated@@854 (- $generated@@855 ($generated@@211 $generated@@853))))))))
 :pattern ( ($generated@@229 ($generated@@247 $generated@@853 $generated@@854) $generated@@855))
)))
(assert (forall (($generated@@857 Int) ) (!  (=> (< $generated@@857 0) (= ($generated@@303 $generated@@857) 0))
 :pattern ( ($generated@@303 $generated@@857))
)))
(assert (forall (($generated@@858 T@U) ($generated@@859 T@U) ) (!  (=> (and (= (type $generated@@858) $generated@@204) (= (type $generated@@859) $generated@@204)) (= ($generated@@262 ($generated@@307 $generated@@858) ($generated@@307 $generated@@859)) ($generated@@307 ($generated@@262 $generated@@858 $generated@@859))))
 :pattern ( ($generated@@262 ($generated@@307 $generated@@858) ($generated@@307 $generated@@859)))
)))
(assert (forall (($generated@@860 Int) ) (! (= ($generated@@364 ($generated@@8 ($generated@@305 $generated@@860))) ($generated@@307 ($generated@@364 ($generated@@8 $generated@@860))))
 :pattern ( ($generated@@364 ($generated@@8 ($generated@@305 $generated@@860))))
)))
(assert (forall (($generated@@861 T@U) ) (! (= ($generated@@364 ($generated@@307 $generated@@861)) ($generated@@307 ($generated@@364 $generated@@861)))
 :pattern ( ($generated@@364 ($generated@@307 $generated@@861)))
)))
(assert (forall (($generated@@862 T@U) ($generated@@863 T@U) ) (! (let (($generated@@864 ($generated@@172 (type $generated@@862))))
 (=> (and (= (type $generated@@862) ($generated@@171 $generated@@864)) (= (type $generated@@863) ($generated@@171 $generated@@864))) (= ($generated@@168 ($generated@@247 $generated@@862 $generated@@863)) ($generated@@148 ($generated@@168 $generated@@862) ($generated@@168 $generated@@863)))))
 :pattern ( ($generated@@168 ($generated@@247 $generated@@862 $generated@@863)))
)))
(assert (forall (($generated@@865 T@U) ) (! (let (($generated@@866 ($generated@@172 (type $generated@@865))))
 (=> (and (= (type $generated@@865) ($generated@@171 $generated@@866)) (= ($generated@@211 $generated@@865) 0)) (= $generated@@865 ($generated@@169 $generated@@866))))
 :pattern ( ($generated@@211 $generated@@865))
)))
(assert (forall (($generated@@867 T@U) ($generated@@868 Int) ) (! (let (($generated@@869 ($generated@@172 (type $generated@@867))))
 (=> (and (= (type $generated@@867) ($generated@@171 $generated@@869)) (= $generated@@868 0)) (= ($generated@@246 $generated@@867 $generated@@868) ($generated@@169 $generated@@869))))
 :pattern ( ($generated@@246 $generated@@867 $generated@@868))
)))
(assert (forall (($generated@@870 T@U) ($generated@@871 T@U) ($generated@@872 T@U) ) (! (let (($generated@@873 (type $generated@@871)))
 (=> (and (and (= (type $generated@@870) ($generated@@80 $generated@@873 $generated@@2)) (= (type $generated@@872) $generated@@2)) (<= 0 ($generated $generated@@872))) (= ($generated@@145 ($generated@@86 $generated@@870 $generated@@871 $generated@@872)) (+ (- ($generated@@145 $generated@@870) ($generated ($generated@@85 $generated@@870 $generated@@871))) ($generated $generated@@872)))))
 :pattern ( ($generated@@145 ($generated@@86 $generated@@870 $generated@@871 $generated@@872)))
)))
(assert (forall (($generated@@874 T@U) ($generated@@875 T@U) ) (!  (=> (and (= (type $generated@@874) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@875) $generated@@2)) ($generated@@78 $generated@@875 $generated@@46 $generated@@874))
 :pattern ( ($generated@@78 $generated@@875 $generated@@46 $generated@@874))
)))
(assert (forall (($generated@@876 T@U) ($generated@@877 T@U) ) (!  (=> (and (= (type $generated@@876) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@877) $generated@@3)) ($generated@@78 $generated@@877 $generated@@47 $generated@@876))
 :pattern ( ($generated@@78 $generated@@877 $generated@@47 $generated@@876))
)))
(assert (forall (($generated@@878 T@U) ($generated@@879 T@U) ) (!  (=> (and (= (type $generated@@878) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@879) $generated@@4)) ($generated@@78 $generated@@879 $generated@@44 $generated@@878))
 :pattern ( ($generated@@78 $generated@@879 $generated@@44 $generated@@878))
)))
(assert (forall (($generated@@880 T@U) ($generated@@881 T@U) ) (!  (=> (and (= (type $generated@@880) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@881) $generated@@587)) ($generated@@78 $generated@@881 $generated@@45 $generated@@880))
 :pattern ( ($generated@@78 $generated@@881 $generated@@45 $generated@@880))
)))
(assert (forall (($generated@@882 T@U) ($generated@@883 T@U) ) (!  (=> (and (= (type $generated@@882) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@883) $generated@@204)) ($generated@@78 $generated@@883 $generated@@48 $generated@@882))
 :pattern ( ($generated@@78 $generated@@883 $generated@@48 $generated@@882))
)))
(assert (forall (($generated@@884 T@U) ($generated@@885 Int) ($generated@@886 T@U) ($generated@@887 Int) ) (! (let (($generated@@888 (type $generated@@886)))
 (=> (= (type $generated@@884) ($generated@@171 $generated@@888)) (=> (and (and (<= 0 $generated@@885) (< $generated@@885 $generated@@887)) (<= $generated@@887 ($generated@@211 $generated@@884))) (= ($generated@@246 ($generated@@230 $generated@@884 $generated@@885 $generated@@886) $generated@@887) ($generated@@230 ($generated@@246 $generated@@884 $generated@@887) $generated@@885 $generated@@886)))))
 :pattern ( ($generated@@246 ($generated@@230 $generated@@884 $generated@@885 $generated@@886) $generated@@887))
)))
(assert (forall (($generated@@889 T@U) ($generated@@890 T@U) ) (!  (=> (and (= (type $generated@@889) ($generated@@171 $generated@@204)) (= (type $generated@@890) $generated@@67)) (= ($generated@@140 $generated@@889 ($generated@@311 $generated@@890)) (forall (($generated@@891 Int) ) (!  (=> (and (<= 0 $generated@@891) (< $generated@@891 ($generated@@211 $generated@@889))) ($generated@@263 ($generated@@229 $generated@@889 $generated@@891) $generated@@890))
 :pattern ( ($generated@@229 $generated@@889 $generated@@891))
))))
 :pattern ( ($generated@@140 $generated@@889 ($generated@@311 $generated@@890)))
)))
(assert (forall (($generated@@892 T@U) ($generated@@893 Int) ) (!  (=> (= (type $generated@@892) ($generated@@171 $generated@@204)) (=> (and (<= 0 $generated@@893) (< $generated@@893 ($generated@@211 $generated@@892))) (< ($generated@@704 ($generated@@503 $generated@@195 ($generated@@229 $generated@@892 $generated@@893))) ($generated@@341 $generated@@892))))
 :pattern ( ($generated@@704 ($generated@@503 $generated@@195 ($generated@@229 $generated@@892 $generated@@893))))
)))
(assert (forall (($generated@@894 T@U) ($generated@@895 T@U) ($generated@@896 T@U) ) (!  (=> (and (and (and (= (type $generated@@894) ($generated@@394 $generated@@204 $generated@@204)) (= (type $generated@@895) $generated@@67)) (= (type $generated@@896) $generated@@67)) ($generated@@140 $generated@@894 ($generated@@531 $generated@@895 $generated@@896))) (and (and ($generated@@140 ($generated@@392 $generated@@894) ($generated@@293 $generated@@895)) ($generated@@140 ($generated@@454 $generated@@894) ($generated@@293 $generated@@896))) ($generated@@140 ($generated@@502 $generated@@894) ($generated@@293 ($generated@@194 $generated@@895 $generated@@896)))))
 :pattern ( ($generated@@140 $generated@@894 ($generated@@531 $generated@@895 $generated@@896)))
)))
(assert (forall (($generated@@897 T@U) ($generated@@898 T@U) ($generated@@899 T@U) ) (!  (=> (and (and (and (= (type $generated@@897) ($generated@@412 $generated@@204 $generated@@204)) (= (type $generated@@898) $generated@@67)) (= (type $generated@@899) $generated@@67)) ($generated@@140 $generated@@897 ($generated@@539 $generated@@898 $generated@@899))) (and (and ($generated@@140 ($generated@@410 $generated@@897) ($generated@@298 $generated@@898)) ($generated@@140 ($generated@@465 $generated@@897) ($generated@@298 $generated@@899))) ($generated@@140 ($generated@@513 $generated@@897) ($generated@@298 ($generated@@194 $generated@@898 $generated@@899)))))
 :pattern ( ($generated@@140 $generated@@897 ($generated@@539 $generated@@898 $generated@@899)))
)))
(assert (forall (($generated@@900 T@U) ) (!  (=> (= (type $generated@@900) $generated@@2) ($generated@@140 $generated@@900 $generated@@46))
 :pattern ( ($generated@@140 $generated@@900 $generated@@46))
)))
(assert (forall (($generated@@901 T@U) ) (!  (=> (= (type $generated@@901) $generated@@3) ($generated@@140 $generated@@901 $generated@@47))
 :pattern ( ($generated@@140 $generated@@901 $generated@@47))
)))
(assert (forall (($generated@@902 T@U) ) (!  (=> (= (type $generated@@902) $generated@@4) ($generated@@140 $generated@@902 $generated@@44))
 :pattern ( ($generated@@140 $generated@@902 $generated@@44))
)))
(assert (forall (($generated@@903 T@U) ) (!  (=> (= (type $generated@@903) $generated@@587) ($generated@@140 $generated@@903 $generated@@45))
 :pattern ( ($generated@@140 $generated@@903 $generated@@45))
)))
(assert (forall (($generated@@904 T@U) ) (!  (=> (= (type $generated@@904) $generated@@204) ($generated@@140 $generated@@904 $generated@@48))
 :pattern ( ($generated@@140 $generated@@904 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@905 () T@U)
(declare-fun $generated@@906 () T@U)
(declare-fun $generated@@907 () T@U)
(declare-fun $generated@@908 () Int)
(declare-fun $generated@@909 () Int)
(declare-fun $generated@@910 () T@U)
(declare-fun $generated@@911 () T@U)
(declare-fun $generated@@912 () T@U)
(declare-fun $generated@@913 () Int)
(declare-fun $generated@@914 () Int)
(declare-fun $generated@@915 () T@U)
(declare-fun $generated@@916 () T@U)
(declare-fun $generated@@917 (T@U) Bool)
(declare-fun $generated@@918 () T@U)
(declare-fun $generated@@919 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@905) ($generated@@728 $generated@@81 $generated@@4)) (= (type $generated@@906) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@907) $generated@@81)) (= (type $generated@@910) ($generated@@171 $generated@@204))) (= (type $generated@@911) ($generated@@69 $generated@@204))) (= (type $generated@@912) ($generated@@69 $generated@@204))) (= (type $generated@@915) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@916) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@918) ($generated@@171 $generated@@204))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 57) (let (($generated@@920  (=> (= $generated@@905 ($generated@@727 $generated@@138 $generated@@906 $generated@@60 $generated@@907)) (and (=> (= (ControlFlow 0 2) (- 0 56)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 55)) (and (<= 0 $generated@@908) (<= $generated@@908 ($generated@@136 $generated@@907)))) (=> (and (<= 0 $generated@@908) (<= $generated@@908 ($generated@@136 $generated@@907))) (and (=> (= (ControlFlow 0 2) (- 0 54)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 53)) (and (<= 0 $generated@@908) (< $generated@@908 ($generated@@136 $generated@@907)))) (=> (and (<= 0 $generated@@908) (< $generated@@908 ($generated@@136 $generated@@907))) (and (=> (= (ControlFlow 0 2) (- 0 52)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 51)) (and (<= 0 (+ $generated@@908 1)) (<= (+ $generated@@908 1) ($generated@@136 $generated@@907)))) (=> (and (<= 0 (+ $generated@@908 1)) (<= (+ $generated@@908 1) ($generated@@136 $generated@@907))) (and (=> (= (ControlFlow 0 2) (- 0 50)) (and (<= (+ $generated@@908 1) $generated@@909) (<= $generated@@909 ($generated@@136 $generated@@907)))) (=> (and (<= (+ $generated@@908 1) $generated@@909) (<= $generated@@909 ($generated@@136 $generated@@907))) (and (=> (= (ControlFlow 0 2) (- 0 49)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 48)) (and (<= 0 $generated@@909) (< $generated@@909 ($generated@@136 $generated@@907)))) (=> (and (<= 0 $generated@@909) (< $generated@@909 ($generated@@136 $generated@@907))) (and (=> (= (ControlFlow 0 2) (- 0 47)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 46)) (and (<= 0 (+ $generated@@909 1)) (<= (+ $generated@@909 1) ($generated@@136 $generated@@907)))) (=> (and (<= 0 (+ $generated@@909 1)) (<= (+ $generated@@909 1) ($generated@@136 $generated@@907))) (=> (= $generated@@910 ($generated@@247 ($generated@@247 ($generated@@247 ($generated@@247 ($generated@@246 ($generated@@270 $generated@@906 $generated@@907) $generated@@908) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@908)))) ($generated@@209 ($generated@@246 ($generated@@270 $generated@@906 $generated@@907) $generated@@909) (+ $generated@@908 1))) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@909)))) ($generated@@209 ($generated@@270 $generated@@906 $generated@@907) (+ $generated@@909 1)))) (and (=> (= (ControlFlow 0 2) (- 0 45)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 44)) ($generated@@332 ($generated@@270 $generated@@906 $generated@@907) $generated@@910)) (=> ($generated@@332 ($generated@@270 $generated@@906 $generated@@907) $generated@@910) (and (=> (= (ControlFlow 0 2) (- 0 43)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 42)) (and (<= 0 $generated@@908) (< $generated@@908 ($generated@@136 $generated@@907)))) (=> (and (<= 0 $generated@@908) (< $generated@@908 ($generated@@136 $generated@@907))) (=> (= $generated@@911 ($generated@@271 $generated@@908)) (and (=> (= (ControlFlow 0 2) (- 0 41)) ($generated@@0 ($generated@@726 $generated@@905 $generated@@907 $generated@@911))) (=> ($generated@@0 ($generated@@726 $generated@@905 $generated@@907 $generated@@911)) (and (=> (= (ControlFlow 0 2) (- 0 40)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 39)) (and (<= 0 $generated@@909) (< $generated@@909 ($generated@@136 $generated@@907)))) (=> (and (<= 0 $generated@@909) (< $generated@@909 ($generated@@136 $generated@@907))) (=> (= $generated@@912 ($generated@@271 $generated@@909)) (and (=> (= (ControlFlow 0 2) (- 0 38)) ($generated@@0 ($generated@@726 $generated@@905 $generated@@907 $generated@@912))) (=> ($generated@@0 ($generated@@726 $generated@@905 $generated@@907 $generated@@912)) (and (=> (= (ControlFlow 0 2) (- 0 37)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 36)) (and (<= 0 $generated@@909) (< $generated@@909 ($generated@@136 $generated@@907)))) (=> (and (<= 0 $generated@@909) (< $generated@@909 ($generated@@136 $generated@@907))) (=> (= $generated@@913 ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@909))))) (and (=> (= (ControlFlow 0 2) (- 0 35)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 34)) (and (<= 0 $generated@@908) (< $generated@@908 ($generated@@136 $generated@@907)))) (=> (and (<= 0 $generated@@908) (< $generated@@908 ($generated@@136 $generated@@907))) (=> (= $generated@@914 ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@908))))) (and (=> (= (ControlFlow 0 2) (- 0 33)) (or (or (not (= $generated@@907 $generated@@907)) (not (= $generated@@909 $generated@@908))) (= ($generated@@364 ($generated@@8 $generated@@914)) ($generated@@364 ($generated@@8 $generated@@913))))) (=> (or (or (not (= $generated@@907 $generated@@907)) (not (= $generated@@909 $generated@@908))) (= ($generated@@364 ($generated@@8 $generated@@914)) ($generated@@364 ($generated@@8 $generated@@913)))) (=> (and (and (= $generated@@915 ($generated@@86 $generated@@906 $generated@@907 ($generated@@88 ($generated@@85 $generated@@906 $generated@@907) $generated@@911 ($generated@@364 ($generated@@8 $generated@@913))))) ($generated@@180 $generated@@915)) (and (= $generated@@916 ($generated@@86 $generated@@915 $generated@@907 ($generated@@88 ($generated@@85 $generated@@915 $generated@@907) $generated@@912 ($generated@@364 ($generated@@8 $generated@@914))))) ($generated@@180 $generated@@916))) (and (=> (= (ControlFlow 0 2) (- 0 32)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 31)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 30)) (and (<= 0 $generated@@908) (<= $generated@@908 ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 29)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 28)) (and (<= 0 $generated@@908) (< $generated@@908 ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 27)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 26)) (and (<= 0 (+ $generated@@908 1)) (<= (+ $generated@@908 1) ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 25)) (and (<= (+ $generated@@908 1) $generated@@909) (<= $generated@@909 ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 24)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 23)) (and (<= 0 $generated@@909) (< $generated@@909 ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 22)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 21)) (and (<= 0 (+ $generated@@909 1)) (<= (+ $generated@@909 1) ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 20)) ($generated@@332 ($generated@@270 $generated@@916 $generated@@907) ($generated@@247 ($generated@@247 ($generated@@247 ($generated@@247 ($generated@@246 ($generated@@270 $generated@@916 $generated@@907) $generated@@908) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@87 ($generated@@85 $generated@@916 $generated@@907) ($generated@@271 $generated@@908)))) ($generated@@209 ($generated@@246 ($generated@@270 $generated@@916 $generated@@907) $generated@@909) (+ $generated@@908 1))) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@87 ($generated@@85 $generated@@916 $generated@@907) ($generated@@271 $generated@@909)))) ($generated@@209 ($generated@@270 $generated@@916 $generated@@907) (+ $generated@@909 1))))) (=> ($generated@@332 ($generated@@270 $generated@@916 $generated@@907) ($generated@@247 ($generated@@247 ($generated@@247 ($generated@@247 ($generated@@246 ($generated@@270 $generated@@916 $generated@@907) $generated@@908) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@87 ($generated@@85 $generated@@916 $generated@@907) ($generated@@271 $generated@@908)))) ($generated@@209 ($generated@@246 ($generated@@270 $generated@@916 $generated@@907) $generated@@909) (+ $generated@@908 1))) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@87 ($generated@@85 $generated@@916 $generated@@907) ($generated@@271 $generated@@909)))) ($generated@@209 ($generated@@270 $generated@@916 $generated@@907) (+ $generated@@909 1)))) (and (=> (= (ControlFlow 0 2) (- 0 19)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= 0 $generated@@908) (<= $generated@@908 ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 16)) ($generated@@78 $generated@@907 ($generated@@137 $generated@@46) $generated@@906)) (=> ($generated@@78 $generated@@907 ($generated@@137 $generated@@46) $generated@@906) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= 0 $generated@@908) (< $generated@@908 ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= 0 (+ $generated@@908 1)) (<= (+ $generated@@908 1) ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= (+ $generated@@908 1) $generated@@909) (<= $generated@@909 ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@78 $generated@@907 ($generated@@137 $generated@@46) $generated@@906)) (=> ($generated@@78 $generated@@907 ($generated@@137 $generated@@46) $generated@@906) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 $generated@@909) (< $generated@@909 ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@907 $generated@@138))) (=> (not (= $generated@@907 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 (+ $generated@@909 1)) (<= (+ $generated@@909 1) ($generated@@136 $generated@@907)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@332 $generated@@910 ($generated@@247 ($generated@@247 ($generated@@247 ($generated@@247 ($generated@@246 ($generated@@270 $generated@@916 $generated@@907) $generated@@908) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@908)))) ($generated@@209 ($generated@@246 ($generated@@270 $generated@@916 $generated@@907) $generated@@909) (+ $generated@@908 1))) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@909)))) ($generated@@209 ($generated@@270 $generated@@916 $generated@@907) (+ $generated@@909 1))))) (=> ($generated@@332 $generated@@910 ($generated@@247 ($generated@@247 ($generated@@247 ($generated@@247 ($generated@@246 ($generated@@270 $generated@@916 $generated@@907) $generated@@908) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@908)))) ($generated@@209 ($generated@@246 ($generated@@270 $generated@@916 $generated@@907) $generated@@909) (+ $generated@@908 1))) ($generated@@210 ($generated@@169 $generated@@204) ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@909)))) ($generated@@209 ($generated@@270 $generated@@916 $generated@@907) (+ $generated@@909 1)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@482 ($generated@@168 ($generated@@270 $generated@@906 $generated@@907)) ($generated@@168 ($generated@@270 $generated@@916 $generated@@907)))) (=> ($generated@@482 ($generated@@168 ($generated@@270 $generated@@906 $generated@@907)) ($generated@@168 ($generated@@270 $generated@@916 $generated@@907))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@916 $generated@@907) ($generated@@271 $generated@@909)))) ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@908)))))) (=> (= ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@916 $generated@@907) ($generated@@271 $generated@@909)))) ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@908))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@916 $generated@@907) ($generated@@271 $generated@@908)))) ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@909)))))) (=> (= ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@916 $generated@@907) ($generated@@271 $generated@@908)))) ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@909))))) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@921 Int) ) (!  (=> true (=> (and (and (<= ($generated@@305 0) $generated@@921) (< $generated@@921 ($generated@@136 $generated@@907))) (not (or (= $generated@@921 $generated@@908) (= $generated@@921 $generated@@909)))) (= ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@916 $generated@@907) ($generated@@271 $generated@@921)))) ($generated ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@921)))))))
 :pattern ( ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@906 $generated@@907) ($generated@@271 $generated@@921))))
 :pattern ( ($generated@@503 $generated@@2 ($generated@@87 ($generated@@85 $generated@@916 $generated@@907) ($generated@@271 $generated@@921))))
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@922  (=> (and (and ($generated@@180 $generated@@906) ($generated@@917 $generated@@906)) (and ($generated@@140 $generated@@907 ($generated@@188 $generated@@46)) ($generated@@78 $generated@@907 ($generated@@188 $generated@@46) $generated@@906))) (=> (and (and (and (and ($generated@@140 $generated@@918 ($generated@@311 $generated@@46)) ($generated@@78 $generated@@918 ($generated@@311 $generated@@46) $generated@@906)) true) (= 1 $generated@@919)) (and (and (<= ($generated@@305 0) $generated@@908) (< $generated@@908 $generated@@909)) (and (< $generated@@909 ($generated@@136 $generated@@907)) (= (ControlFlow 0 57) 2)))) $generated@@920))))
$generated@@922)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@T) T@U)
(declare-fun $generated@@154 (T@T) T@U)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@197 (T@U Int) T@U)
(declare-fun $generated@@198 (T@U) Int)
(declare-fun $generated@@206 (T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U) Bool)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (Int) Int)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@269 (T@T T@T) T@U)
(declare-fun $generated@@270 (T@T T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@331 (T@U T@U) T@U)
(declare-fun $generated@@332 (Int) T@U)
(declare-fun $generated@@342 (T@U T@U) Bool)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@546 (T@U T@U T@U) T@U)
(declare-fun $generated@@547 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@548 (T@T T@T) T@T)
(declare-fun $generated@@549 (T@T) T@T)
(declare-fun $generated@@550 (T@T) T@T)
(declare-fun $generated@@551 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@657 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert  (and (and (and (and (forall (($generated@@157 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@157)) 14)) (forall (($generated@@158 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@156 (type $generated@@159))))
(= (type ($generated@@152 $generated@@159)) ($generated@@80 $generated@@160 $generated@@2)))
 :pattern ( ($generated@@152 $generated@@159))
))) (forall (($generated@@161 T@T) ) (! (= (type ($generated@@153 $generated@@161)) ($generated@@155 $generated@@161))
 :pattern ( ($generated@@153 $generated@@161))
))) (forall (($generated@@162 T@T) ) (! (= (type ($generated@@154 $generated@@162)) ($generated@@80 $generated@@162 $generated@@2))
 :pattern ( ($generated@@154 $generated@@162))
))))
(assert (forall (($generated@@163 T@T) ) (= ($generated@@152 ($generated@@153 $generated@@163)) ($generated@@154 $generated@@163))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@167) $generated@@81)) (and (and ($generated@@164 $generated@@166) (and (not (= $generated@@167 $generated@@138)) (= ($generated@@139 $generated@@167) ($generated@@137 $generated@@165)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@166 $generated@@167) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@167)) $generated@@46 $generated@@166))
 :pattern ( ($generated@@136 $generated@@167) ($generated@@87 ($generated@@85 $generated@@166 $generated@@167) $generated@@60) ($generated@@137 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@140 $generated@@168 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@168 ($generated@@79 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@67)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@67) (= (type $generated@@172) $generated@@81)) (= (type $generated@@173) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@78 $generated@@172 ($generated@@137 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@78 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 15) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@67)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@67) (= (type $generated@@180) $generated@@67)) (= (type $generated@@181) $generated@@176)) ($generated@@140 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@140 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (and (= ($generated@@1 $generated@@185) 16) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@186))
))) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@185)
 :pattern ( ($generated@@184 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@176) (= (type $generated@@189) $generated@@176)) true) (= ($generated@@182 $generated@@188 $generated@@189)  (and (= ($generated@@183 $generated@@188) ($generated@@183 $generated@@189)) (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)))))
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@67)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@194) $generated@@67)) ($generated@@140 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@140 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@156 (type $generated@@195))))
 (=> (= (type $generated@@195) ($generated@@155 $generated@@196)) ($generated@@191 ($generated@@152 $generated@@195))))
 :pattern ( ($generated@@152 $generated@@195))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 Int) ) (! (let (($generated@@201 ($generated@@156 (type $generated@@199))))
(= (type ($generated@@197 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@197 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
 (=> (= (type $generated@@202) ($generated@@155 $generated@@204)) (= (exists (($generated@@205 Int) ) (!  (and (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@198 $generated@@202))) (= $generated@@203 ($generated@@197 $generated@@202 $generated@@205)))
 :pattern ( ($generated@@197 $generated@@202 $generated@@205))
)) (< 0 ($generated ($generated@@85 ($generated@@152 $generated@@202) $generated@@203))))))
 :pattern ( ($generated@@85 ($generated@@152 $generated@@202) $generated@@203))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= (type ($generated@@206 $generated@@208 $generated@@209)) $generated@@176)
 :pattern ( ($generated@@206 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@185)) (= (type $generated@@213) $generated@@185)) (= ($generated@@140 ($generated@@206 $generated@@212 $generated@@213) ($generated@@175 $generated@@210 $generated@@211))  (and ($generated@@207 $generated@@212 $generated@@210) ($generated@@207 $generated@@213 $generated@@211))))
 :pattern ( ($generated@@140 ($generated@@206 $generated@@212 $generated@@213) ($generated@@175 $generated@@210 $generated@@211)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@176) (= (type $generated@@215) $generated@@176)) (= ($generated@@182 $generated@@214 $generated@@215) (= $generated@@214 $generated@@215)))
 :pattern ( ($generated@@182 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (= (type ($generated@@216 $generated@@217)) $generated@@67)
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@219) $generated@@67)) (= ($generated@@140 $generated@@218 ($generated@@216 $generated@@219)) (forall (($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@220) $generated@@185) ($generated@@0 ($generated@@85 $generated@@218 $generated@@220))) ($generated@@207 $generated@@220 $generated@@219))
 :pattern ( ($generated@@85 $generated@@218 $generated@@220))
))))
 :pattern ( ($generated@@140 $generated@@218 ($generated@@216 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@67)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@224) $generated@@67)) (= ($generated@@140 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@185) ($generated@@0 ($generated@@85 $generated@@223 $generated@@225))) ($generated@@207 $generated@@225 $generated@@224))
 :pattern ( ($generated@@85 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@140 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 Int) ) (! (= ($generated@@226 $generated@@227) $generated@@227)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(= (type ($generated@@228 $generated@@229)) $generated@@230))
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= ($generated@@228 $generated@@231) $generated@@231)
 :pattern ( ($generated@@228 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) $generated@@67) (= (type $generated@@234) $generated@@67)) (= (type $generated@@235) $generated@@185)) (= (type $generated@@236) $generated@@185)) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@164 $generated@@237)) (= ($generated@@78 ($generated@@206 $generated@@235 $generated@@236) ($generated@@175 $generated@@233 $generated@@234) $generated@@237)  (and ($generated@@232 $generated@@235 $generated@@233 $generated@@237) ($generated@@232 $generated@@236 $generated@@234 $generated@@237))))
 :pattern ( ($generated@@78 ($generated@@206 $generated@@235 $generated@@236) ($generated@@175 $generated@@233 $generated@@234) $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@71)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ) (!  (=> (= (type $generated@@240) $generated@@176) (= ($generated@@174 $generated@@240) (= ($generated@@238 $generated@@240) $generated@@63)))
 :pattern ( ($generated@@174 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@176) ($generated@@174 $generated@@241)) (exists (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (and (and (= (type $generated@@242) $generated@@185) (= (type $generated@@243) $generated@@185)) (= $generated@@241 ($generated@@206 $generated@@242 $generated@@243)))
 :no-pattern (type $generated@@242)
 :no-pattern (type $generated@@243)
 :no-pattern ($generated $generated@@242)
 :no-pattern ($generated@@0 $generated@@242)
 :no-pattern ($generated $generated@@243)
 :no-pattern ($generated@@0 $generated@@243)
)))
 :pattern ( ($generated@@174 $generated@@241))
)))
(assert (forall (($generated@@244 T@T) ) (! (= ($generated@@198 ($generated@@153 $generated@@244)) 0)
 :pattern ( ($generated@@153 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@67) (= (type $generated@@246) $generated@@81)) (= ($generated@@140 $generated@@246 ($generated@@169 $generated@@245))  (and ($generated@@140 $generated@@246 ($generated@@137 $generated@@245)) (not (= $generated@@246 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@246 ($generated@@169 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@185)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@232 ($generated@@247 $generated@@249) $generated@@250 $generated@@251) ($generated@@78 $generated@@249 $generated@@250 $generated@@251)))
 :pattern ( ($generated@@232 ($generated@@247 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@253) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@254) $generated@@185)) (= (type $generated@@255) $generated@@67)) ($generated@@145 $generated@@252 $generated@@253)) ($generated@@232 $generated@@254 $generated@@255 $generated@@252)) ($generated@@232 $generated@@254 $generated@@255 $generated@@253))
 :pattern ( ($generated@@145 $generated@@252 $generated@@253) ($generated@@232 $generated@@254 $generated@@255 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@256) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@257) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@259) $generated@@67)) ($generated@@145 $generated@@256 $generated@@257)) ($generated@@78 $generated@@258 $generated@@259 $generated@@256)) ($generated@@78 $generated@@258 $generated@@259 $generated@@257))
 :pattern ( ($generated@@145 $generated@@256 $generated@@257) ($generated@@78 $generated@@258 $generated@@259 $generated@@256))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@83 (type $generated@@261))))
 (=> (= (type $generated@@261) ($generated@@80 $generated@@262 $generated@@2)) (and (= (= ($generated@@260 $generated@@261) 0) (= $generated@@261 ($generated@@154 $generated@@262))) (=> (not (= ($generated@@260 $generated@@261) 0)) (exists (($generated@@263 T@U) ) (!  (and (= (type $generated@@263) $generated@@262) (< 0 ($generated ($generated@@85 $generated@@261 $generated@@263))))
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
))))))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@72)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@266)) $generated@@61) (= ($generated@@264 ($generated@@137 $generated@@266)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@67) (and (= ($generated@@76 ($generated@@169 $generated@@267)) $generated@@62) (= ($generated@@264 ($generated@@169 $generated@@267)) $generated@@65)))
 :pattern ( ($generated@@169 $generated@@267))
)))
(assert  (and (and (and (and (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@273 $generated@@274)) 17)) (forall (($generated@@275 T@T) ($generated@@276 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@275 $generated@@276)) $generated@@275)
 :pattern ( ($generated@@270 $generated@@275 $generated@@276))
))) (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@270 $generated@@277 $generated@@278)) $generated@@278)
 :pattern ( ($generated@@270 $generated@@277 $generated@@278))
))) (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@271 (type $generated@@279))))
(= (type ($generated@@268 $generated@@279)) ($generated@@80 $generated@@280 $generated@@4)))
 :pattern ( ($generated@@268 $generated@@279))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= (type ($generated@@269 $generated@@281 $generated@@282)) ($generated@@270 $generated@@281 $generated@@282))
 :pattern ( ($generated@@269 $generated@@281 $generated@@282))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@T) ) (! (let (($generated@@285 (type $generated@@283)))
 (not ($generated@@0 ($generated@@85 ($generated@@268 ($generated@@269 $generated@@285 $generated@@284)) $generated@@283))))
 :pattern ( (let (($generated@@285 (type $generated@@283)))
($generated@@85 ($generated@@268 ($generated@@269 $generated@@285 $generated@@284)) $generated@@283)))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@80 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@85 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@85 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@83 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@80 $generated@@305 $generated@@2)) (= ($generated@@191 $generated@@304) (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@305) (and (<= 0 ($generated ($generated@@85 $generated@@304 $generated@@306))) (<= ($generated ($generated@@85 $generated@@304 $generated@@306)) ($generated@@260 $generated@@304))))
 :pattern ( ($generated@@85 $generated@@304 $generated@@306))
)))))
 :pattern ( ($generated@@191 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@67) (= (type $generated@@308) $generated@@81)) (= ($generated@@140 $generated@@308 ($generated@@137 $generated@@307))  (or (= $generated@@308 $generated@@138) (= ($generated@@139 $generated@@308) ($generated@@137 $generated@@307)))))
 :pattern ( ($generated@@140 $generated@@308 ($generated@@137 $generated@@307)))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@272 (type $generated@@309))))
(let (($generated@@311 ($generated@@271 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@270 $generated@@311 $generated@@310)) (or (= $generated@@309 ($generated@@269 $generated@@311 $generated@@310)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@311) ($generated@@0 ($generated@@85 ($generated@@268 $generated@@309) $generated@@312)))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
))))))
 :pattern ( ($generated@@268 $generated@@309))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@272 (type $generated@@314))))
(= (type ($generated@@313 $generated@@314)) ($generated@@80 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@272 (type $generated@@316))))
(let (($generated@@318 ($generated@@271 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@270 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@269 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@317) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@290 (type $generated@@320))))
(let (($generated@@322 ($generated@@289 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@288 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@287 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@85 ($generated@@286 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@286 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@290 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@80 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@290 (type $generated@@327))))
(let (($generated@@329 ($generated@@289 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@288 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@287 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert  (and (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (= (type ($generated@@331 $generated@@333 $generated@@334)) ($generated@@155 $generated@@185))
 :pattern ( ($generated@@331 $generated@@333 $generated@@334))
)) (forall (($generated@@335 Int) ) (! (= (type ($generated@@332 $generated@@335)) ($generated@@69 $generated@@185))
 :pattern ( ($generated@@332 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@337) $generated@@81)) (forall (($generated@@338 Int) ) (!  (=> (and (<= 0 $generated@@338) (< $generated@@338 ($generated@@198 ($generated@@331 $generated@@336 $generated@@337)))) (= ($generated@@197 ($generated@@331 $generated@@336 $generated@@337) $generated@@338) ($generated@@87 ($generated@@85 $generated@@336 $generated@@337) ($generated@@332 $generated@@338))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@336 $generated@@337) ($generated@@332 $generated@@338)))
 :pattern ( ($generated@@197 ($generated@@331 $generated@@336 $generated@@337) $generated@@338))
)))
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@340) $generated@@67)) (= ($generated@@140 $generated@@339 ($generated@@190 $generated@@340)) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@185) (< 0 ($generated ($generated@@85 $generated@@339 $generated@@341)))) ($generated@@207 $generated@@341 $generated@@340))
 :pattern ( ($generated@@85 $generated@@339 $generated@@341))
))))
 :pattern ( ($generated@@140 $generated@@339 ($generated@@190 $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@83 (type $generated@@343))))
 (=> (and (= (type $generated@@343) ($generated@@80 $generated@@345 $generated@@2)) (= (type $generated@@344) ($generated@@80 $generated@@345 $generated@@2))) (= ($generated@@342 $generated@@343 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (= ($generated ($generated@@85 $generated@@343 $generated@@346)) ($generated ($generated@@85 $generated@@344 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@343 $generated@@346))
 :pattern ( ($generated@@85 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@348) $generated@@67)) (= (type $generated@@349) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@347 ($generated@@216 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@185) ($generated@@0 ($generated@@85 $generated@@347 $generated@@350))) ($generated@@232 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@85 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@78 $generated@@347 ($generated@@216 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@352) $generated@@67)) (= (type $generated@@353) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@351 ($generated@@221 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@185) ($generated@@0 ($generated@@85 $generated@@351 $generated@@354))) ($generated@@232 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@85 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@78 $generated@@351 ($generated@@221 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@85 ($generated@@154 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@85 ($generated@@154 $generated@@356) $generated@@355)))
)))
(assert  (and (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@357 $generated@@360)) ($generated@@80 $generated@@185 $generated@@4))
 :pattern ( ($generated@@357 $generated@@360))
)) (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@358 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@272 (type $generated@@363))))
(let (($generated@@365 ($generated@@271 (type $generated@@363))))
(= (type ($generated@@359 $generated@@363)) ($generated@@80 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@359 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@270 $generated@@185 $generated@@185)) (= (type $generated@@367) $generated@@185)) (= ($generated@@0 ($generated@@85 ($generated@@357 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@85 ($generated@@268 $generated@@366) ($generated@@183 ($generated@@358 $generated@@176 $generated@@367)))) (= ($generated@@85 ($generated@@359 $generated@@366) ($generated@@183 ($generated@@358 $generated@@176 $generated@@367))) ($generated@@184 ($generated@@358 $generated@@176 $generated@@367))))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@80 $generated@@185 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@290 (type $generated@@371))))
(let (($generated@@373 ($generated@@289 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@80 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@288 $generated@@185 $generated@@185)) (= (type $generated@@375) $generated@@185)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@85 ($generated@@286 $generated@@374) ($generated@@183 ($generated@@358 $generated@@176 $generated@@375)))) (= ($generated@@85 ($generated@@369 $generated@@374) ($generated@@183 ($generated@@358 $generated@@176 $generated@@375))) ($generated@@184 ($generated@@358 $generated@@176 $generated@@375))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@271 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@270 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@85 ($generated@@313 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@85 ($generated@@268 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@85 ($generated@@359 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@85 ($generated@@268 $generated@@376) $generated@@380))
 :pattern ( ($generated@@85 ($generated@@359 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@289 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@288 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@85 ($generated@@324 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@85 ($generated@@286 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@85 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@85 ($generated@@286 $generated@@381) $generated@@385))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@67)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@270 $generated@@185 $generated@@185)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) $generated@@67)) (= (type $generated@@392) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@268 $generated@@389) $generated@@393))) (and ($generated@@232 ($generated@@85 ($generated@@359 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@232 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@85 ($generated@@359 $generated@@389) $generated@@393))
 :pattern ( ($generated@@85 ($generated@@268 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@78 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@288 $generated@@185 $generated@@185)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@286 $generated@@397) $generated@@401))) (and ($generated@@232 ($generated@@85 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@232 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@85 ($generated@@286 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@78 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@83 (type $generated@@402))))
 (=> (and (and (= (type $generated@@402) ($generated@@80 $generated@@404 $generated@@2)) (= (type $generated@@403) ($generated@@80 $generated@@404 $generated@@2))) ($generated@@342 $generated@@402 $generated@@403)) (= $generated@@402 $generated@@403)))
 :pattern ( ($generated@@342 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@405) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@406) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@407) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@405 $generated@@407))) (and ($generated@@145 $generated@@405 $generated@@406) ($generated@@145 $generated@@406 $generated@@407))) ($generated@@145 $generated@@405 $generated@@407))
 :pattern ( ($generated@@145 $generated@@405 $generated@@406) ($generated@@145 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 Int) ) (!  (=> (and (and (= (type $generated@@408) $generated@@67) (= (type $generated@@409) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@410) $generated@@81)) (=> (and (and (and ($generated@@164 $generated@@409) (and (not (= $generated@@410 $generated@@138)) (= ($generated@@139 $generated@@410) ($generated@@137 $generated@@408)))) (and (<= 0 $generated@@411) (< $generated@@411 ($generated@@136 $generated@@410)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@409 $generated@@410) $generated@@60))) ($generated@@232 ($generated@@87 ($generated@@85 $generated@@409 $generated@@410) ($generated@@332 $generated@@411)) $generated@@408 $generated@@409)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@409 $generated@@410) ($generated@@332 $generated@@411)) ($generated@@137 $generated@@408))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@80 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@290 (type $generated@@414))))
(let (($generated@@416 ($generated@@289 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@288 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@287 $generated@@416 $generated@@415)) (= ($generated@@286 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@286 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@290 (type $generated@@417))))
(let (($generated@@419 ($generated@@289 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@288 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@287 $generated@@419 $generated@@418)) (= ($generated@@324 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@324 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@290 (type $generated@@420))))
(let (($generated@@422 ($generated@@289 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@288 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@287 $generated@@422 $generated@@421)) (= ($generated@@368 $generated@@420) ($generated@@412 $generated@@185))))))
 :pattern ( ($generated@@368 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@272 (type $generated@@423))))
(let (($generated@@425 ($generated@@271 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@270 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@269 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@185) (= (type $generated@@427) $generated@@185)) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@423) ($generated@@247 ($generated@@206 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@357 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@290 (type $generated@@428))))
(let (($generated@@430 ($generated@@289 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@288 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@287 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@185) (= (type $generated@@432) $generated@@185)) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@428) ($generated@@247 ($generated@@206 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@368 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@185) ($generated@@207 $generated@@433 $generated@@46)) (and (= ($generated@@247 ($generated@@358 $generated@@2 $generated@@433)) $generated@@433) ($generated@@140 ($generated@@358 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@207 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@185) ($generated@@207 $generated@@434 $generated@@47)) (and (= ($generated@@247 ($generated@@358 $generated@@3 $generated@@434)) $generated@@434) ($generated@@140 ($generated@@358 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@207 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@185) ($generated@@207 $generated@@435 $generated@@44)) (and (= ($generated@@247 ($generated@@358 $generated@@4 $generated@@435)) $generated@@435) ($generated@@140 ($generated@@358 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@207 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 19))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@185) ($generated@@207 $generated@@437 $generated@@45)) (and (= ($generated@@247 ($generated@@358 $generated@@436 $generated@@437)) $generated@@437) ($generated@@140 ($generated@@358 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@207 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@67) (= ($generated@@207 ($generated@@247 $generated@@438) $generated@@439) ($generated@@140 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@207 ($generated@@247 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@81) (<= 0 ($generated@@136 $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@83 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@80 $generated@@442 $generated@@2)) (<= 0 ($generated@@260 $generated@@441))))
 :pattern ( ($generated@@260 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@156 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@155 $generated@@444)) (<= 0 ($generated@@198 $generated@@443))))
 :pattern ( ($generated@@198 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@386 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@386 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@386 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@386 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@76 ($generated@@386 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@386 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@394 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@394 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@394 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@394 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@76 ($generated@@394 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@394 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@185) (= (type $generated@@466) $generated@@185)) (= ($generated@@238 ($generated@@206 $generated@@465 $generated@@466)) $generated@@63))
 :pattern ( ($generated@@206 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@175 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@175 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@175 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@175 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@185) (= (type $generated@@476) $generated@@185)) (= ($generated@@183 ($generated@@206 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@206 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@185) (= (type $generated@@478) $generated@@185)) (= ($generated@@184 ($generated@@206 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@206 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@155 $generated@@185)) (= (type $generated@@482) $generated@@67)) (= (type $generated@@483) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@481 ($generated@@479 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@198 $generated@@481))) ($generated@@232 ($generated@@197 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@197 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@78 $generated@@481 ($generated@@479 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@79 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@79 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@487 ($generated@@216 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@216 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@76 ($generated@@216 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@216 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@491 ($generated@@221 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@221 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@76 ($generated@@221 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@221 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@190 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@190 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@76 ($generated@@190 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@479 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@479 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@76 ($generated@@479 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@502))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@75 ($generated@@332 $generated@@503)) 1)
 :pattern ( ($generated@@332 $generated@@503))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@332 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@332 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@506 ($generated@@137 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@137 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@169 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@169 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@358 $generated@@513 ($generated@@247 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@247 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@270 $generated@@185 $generated@@185)) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) (= ($generated@@140 $generated@@514 ($generated@@386 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@268 $generated@@514) $generated@@517))) (and ($generated@@207 ($generated@@85 ($generated@@359 $generated@@514) $generated@@517) $generated@@516) ($generated@@207 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@85 ($generated@@359 $generated@@514) $generated@@517))
 :pattern ( ($generated@@85 ($generated@@268 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@140 $generated@@514 ($generated@@386 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@288 $generated@@185 $generated@@185)) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@67)) (= ($generated@@140 $generated@@518 ($generated@@394 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@286 $generated@@518) $generated@@521))) (and ($generated@@207 ($generated@@85 ($generated@@369 $generated@@518) $generated@@521) $generated@@520) ($generated@@207 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@518) $generated@@521))
 :pattern ( ($generated@@85 ($generated@@286 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@140 $generated@@518 ($generated@@394 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 Int) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@524) $generated@@81)) (and (and ($generated@@164 $generated@@523) (and (not (= $generated@@524 $generated@@138)) (= ($generated@@139 $generated@@524) ($generated@@137 $generated@@522)))) (and (<= 0 $generated@@525) (< $generated@@525 ($generated@@136 $generated@@524))))) ($generated@@207 ($generated@@87 ($generated@@85 $generated@@523 $generated@@524) ($generated@@332 $generated@@525)) $generated@@522))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@523 $generated@@524) ($generated@@332 $generated@@525)) ($generated@@137 $generated@@522))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@185) (= (type $generated@@529) $generated@@185)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@206 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@206 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@185) (= (type $generated@@531) $generated@@185)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@206 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@206 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@185) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@207 $generated@@532 ($generated@@386 $generated@@533 $generated@@534))) (and (= ($generated@@247 ($generated@@358 ($generated@@270 $generated@@185 $generated@@185) $generated@@532)) $generated@@532) ($generated@@140 ($generated@@358 ($generated@@270 $generated@@185 $generated@@185) $generated@@532) ($generated@@386 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@207 $generated@@532 ($generated@@386 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@185) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@67)) ($generated@@207 $generated@@535 ($generated@@394 $generated@@536 $generated@@537))) (and (= ($generated@@247 ($generated@@358 ($generated@@288 $generated@@185 $generated@@185) $generated@@535)) $generated@@535) ($generated@@140 ($generated@@358 ($generated@@288 $generated@@185 $generated@@185) $generated@@535) ($generated@@394 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@207 $generated@@535 ($generated@@394 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@67) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@185)) ($generated@@207 $generated@@540 ($generated@@175 $generated@@538 $generated@@539))) (and (= ($generated@@247 ($generated@@358 $generated@@176 $generated@@540)) $generated@@540) ($generated@@140 ($generated@@358 $generated@@176 $generated@@540) ($generated@@175 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@207 $generated@@540 ($generated@@175 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@85 ($generated@@412 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@85 ($generated@@412 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@544) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@545) $generated@@81)) (=> (and (and (and ($generated@@164 $generated@@543) ($generated@@164 $generated@@544)) ($generated@@145 $generated@@543 $generated@@544)) (= ($generated@@85 $generated@@543 $generated@@545) ($generated@@85 $generated@@544 $generated@@545))) (= ($generated@@331 $generated@@543 $generated@@545) ($generated@@331 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@331 $generated@@544 $generated@@545) ($generated@@145 $generated@@543 $generated@@544))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@552 T@T) ($generated@@553 T@T) ) (= ($generated@@1 ($generated@@548 $generated@@552 $generated@@553)) 20)) (forall (($generated@@554 T@T) ($generated@@555 T@T) ) (! (= ($generated@@549 ($generated@@548 $generated@@554 $generated@@555)) $generated@@554)
 :pattern ( ($generated@@548 $generated@@554 $generated@@555))
))) (forall (($generated@@556 T@T) ($generated@@557 T@T) ) (! (= ($generated@@550 ($generated@@548 $generated@@556 $generated@@557)) $generated@@557)
 :pattern ( ($generated@@548 $generated@@556 $generated@@557))
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@550 (type $generated@@558))))
(= (type ($generated@@546 $generated@@558 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@546 $generated@@558 $generated@@559 $generated@@560))
))) (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
(let (($generated@@567 (type $generated@@563)))
(= (type ($generated@@551 $generated@@562 $generated@@563 $generated@@564 $generated@@565)) ($generated@@548 $generated@@567 $generated@@566))))
 :pattern ( ($generated@@551 $generated@@562 $generated@@563 $generated@@564 $generated@@565))
))) (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@550 (type $generated@@568))))
 (=> (= (type $generated@@571) $generated@@572) (= ($generated@@546 ($generated@@551 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@569 $generated@@570) $generated@@571)))
 :weight 0
))) (and (and (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (or (= $generated@@575 $generated@@577) (= ($generated@@546 ($generated@@551 $generated@@574 $generated@@575 $generated@@576 $generated@@573) $generated@@577 $generated@@578) ($generated@@546 $generated@@574 $generated@@577 $generated@@578)))
 :weight 0
)) (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (or (= $generated@@582 $generated@@584) (= ($generated@@546 ($generated@@551 $generated@@580 $generated@@581 $generated@@582 $generated@@579) $generated@@583 $generated@@584) ($generated@@546 $generated@@580 $generated@@583 $generated@@584)))
 :weight 0
))) (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (or true (= ($generated@@546 ($generated@@551 $generated@@586 $generated@@587 $generated@@588 $generated@@585) $generated@@589 $generated@@590) ($generated@@546 $generated@@586 $generated@@589 $generated@@590)))
 :weight 0
)))) (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (= (type ($generated@@547 $generated@@591 $generated@@592 $generated@@593 $generated@@594)) ($generated@@548 $generated@@81 $generated@@4))
 :pattern ( ($generated@@547 $generated@@591 $generated@@592 $generated@@593 $generated@@594))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@70 (type $generated@@600))))
 (=> (and (and (and (and (and (= (type $generated@@595) $generated@@81) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@597) ($generated@@69 $generated@@4))) (= (type $generated@@598) $generated@@81)) (= (type $generated@@599) $generated@@81)) (= (type $generated@@600) ($generated@@69 $generated@@601))) (= ($generated@@0 ($generated@@546 ($generated@@547 $generated@@595 $generated@@596 $generated@@597 $generated@@598) $generated@@599 $generated@@600))  (=> (and (not (= $generated@@599 $generated@@595)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@596 $generated@@599) $generated@@597))) (= $generated@@599 $generated@@598)))))
 :pattern ( ($generated@@546 ($generated@@547 $generated@@595 $generated@@596 $generated@@597 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@603) $generated@@81)) (= ($generated@@198 ($generated@@331 $generated@@602 $generated@@603)) ($generated@@136 $generated@@603)))
 :pattern ( ($generated@@198 ($generated@@331 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@67) (= (type $generated@@605) $generated@@67)) (and (= ($generated@@76 ($generated@@175 $generated@@604 $generated@@605)) $generated@@64) (= ($generated@@264 ($generated@@175 $generated@@604 $generated@@605)) $generated@@66)))
 :pattern ( ($generated@@175 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@176) (= ($generated@@526 ($generated@@247 $generated@@606)) ($generated@@527 $generated@@606)))
 :pattern ( ($generated@@526 ($generated@@247 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@156 (type $generated@@607))))
 (=> (= (type $generated@@607) ($generated@@155 $generated@@608)) (= ($generated@@260 ($generated@@152 $generated@@607)) ($generated@@198 $generated@@607))))
 :pattern ( ($generated@@260 ($generated@@152 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@185) ($generated@@207 $generated@@609 ($generated@@79 0))) (and (= ($generated@@247 ($generated@@358 $generated@@2 $generated@@609)) $generated@@609) ($generated@@140 ($generated@@358 ($generated@@80 $generated@@185 $generated@@4) $generated@@609) ($generated@@79 0))))
 :pattern ( ($generated@@207 $generated@@609 ($generated@@79 0)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@185) (= (type $generated@@611) $generated@@67)) ($generated@@207 $generated@@610 ($generated@@216 $generated@@611))) (and (= ($generated@@247 ($generated@@358 ($generated@@80 $generated@@185 $generated@@4) $generated@@610)) $generated@@610) ($generated@@140 ($generated@@358 ($generated@@80 $generated@@185 $generated@@4) $generated@@610) ($generated@@216 $generated@@611))))
 :pattern ( ($generated@@207 $generated@@610 ($generated@@216 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@185) (= (type $generated@@613) $generated@@67)) ($generated@@207 $generated@@612 ($generated@@221 $generated@@613))) (and (= ($generated@@247 ($generated@@358 ($generated@@80 $generated@@185 $generated@@4) $generated@@612)) $generated@@612) ($generated@@140 ($generated@@358 ($generated@@80 $generated@@185 $generated@@4) $generated@@612) ($generated@@221 $generated@@613))))
 :pattern ( ($generated@@207 $generated@@612 ($generated@@221 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@185) (= (type $generated@@615) $generated@@67)) ($generated@@207 $generated@@614 ($generated@@190 $generated@@615))) (and (= ($generated@@247 ($generated@@358 ($generated@@80 $generated@@185 $generated@@2) $generated@@614)) $generated@@614) ($generated@@140 ($generated@@358 ($generated@@80 $generated@@185 $generated@@2) $generated@@614) ($generated@@190 $generated@@615))))
 :pattern ( ($generated@@207 $generated@@614 ($generated@@190 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@185) (= (type $generated@@617) $generated@@67)) ($generated@@207 $generated@@616 ($generated@@479 $generated@@617))) (and (= ($generated@@247 ($generated@@358 ($generated@@155 $generated@@185) $generated@@616)) $generated@@616) ($generated@@140 ($generated@@358 ($generated@@155 $generated@@185) $generated@@616) ($generated@@479 $generated@@617))))
 :pattern ( ($generated@@207 $generated@@616 ($generated@@479 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@67) (= (type $generated@@619) $generated@@185)) ($generated@@207 $generated@@619 ($generated@@137 $generated@@618))) (and (= ($generated@@247 ($generated@@358 $generated@@81 $generated@@619)) $generated@@619) ($generated@@140 ($generated@@358 $generated@@81 $generated@@619) ($generated@@137 $generated@@618))))
 :pattern ( ($generated@@207 $generated@@619 ($generated@@137 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@67) (= (type $generated@@621) $generated@@185)) ($generated@@207 $generated@@621 ($generated@@169 $generated@@620))) (and (= ($generated@@247 ($generated@@358 $generated@@81 $generated@@621)) $generated@@621) ($generated@@140 ($generated@@358 $generated@@81 $generated@@621) ($generated@@169 $generated@@620))))
 :pattern ( ($generated@@207 $generated@@621 ($generated@@169 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@622 ($generated@@190 $generated@@623) $generated@@624) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@185) (< 0 ($generated ($generated@@85 $generated@@622 $generated@@625)))) ($generated@@232 $generated@@625 $generated@@623 $generated@@624))
 :pattern ( ($generated@@85 $generated@@622 $generated@@625))
))))
 :pattern ( ($generated@@78 $generated@@622 ($generated@@190 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@176) (= (type $generated@@627) $generated@@67)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@164 $generated@@628) (and ($generated@@174 $generated@@626) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@67) ($generated@@78 $generated@@626 ($generated@@175 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@175 $generated@@627 $generated@@629) $generated@@628))
))))) ($generated@@232 ($generated@@183 $generated@@626) $generated@@627 $generated@@628))
 :pattern ( ($generated@@232 ($generated@@183 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@176) (= (type $generated@@631) $generated@@67)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@164 $generated@@632) (and ($generated@@174 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@67) ($generated@@78 $generated@@630 ($generated@@175 $generated@@633 $generated@@631) $generated@@632))
 :pattern ( ($generated@@78 $generated@@630 ($generated@@175 $generated@@633 $generated@@631) $generated@@632))
))))) ($generated@@232 ($generated@@184 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@232 ($generated@@184 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@185) (= (type $generated@@635) $generated@@185)) (= ($generated@@206 ($generated@@228 $generated@@634) ($generated@@228 $generated@@635)) ($generated@@228 ($generated@@206 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@206 ($generated@@228 $generated@@634) ($generated@@228 $generated@@635)))
)))
(assert (forall (($generated@@636 Int) ) (! (= ($generated@@247 ($generated@@8 ($generated@@226 $generated@@636))) ($generated@@228 ($generated@@247 ($generated@@8 $generated@@636))))
 :pattern ( ($generated@@247 ($generated@@8 ($generated@@226 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ) (! (= ($generated@@247 ($generated@@228 $generated@@637)) ($generated@@228 ($generated@@247 $generated@@637)))
 :pattern ( ($generated@@247 ($generated@@228 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (! (let (($generated@@639 ($generated@@156 (type $generated@@638))))
 (=> (and (= (type $generated@@638) ($generated@@155 $generated@@639)) (= ($generated@@198 $generated@@638) 0)) (= $generated@@638 ($generated@@153 $generated@@639))))
 :pattern ( ($generated@@198 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (! (let (($generated@@643 (type $generated@@641)))
 (=> (and (and (= (type $generated@@640) ($generated@@80 $generated@@643 $generated@@2)) (= (type $generated@@642) $generated@@2)) (<= 0 ($generated $generated@@642))) (= ($generated@@260 ($generated@@86 $generated@@640 $generated@@641 $generated@@642)) (+ (- ($generated@@260 $generated@@640) ($generated ($generated@@85 $generated@@640 $generated@@641))) ($generated $generated@@642)))))
 :pattern ( ($generated@@260 ($generated@@86 $generated@@640 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@2)) ($generated@@78 $generated@@645 $generated@@46 $generated@@644))
 :pattern ( ($generated@@78 $generated@@645 $generated@@46 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@647) $generated@@3)) ($generated@@78 $generated@@647 $generated@@47 $generated@@646))
 :pattern ( ($generated@@78 $generated@@647 $generated@@47 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@4)) ($generated@@78 $generated@@649 $generated@@44 $generated@@648))
 :pattern ( ($generated@@78 $generated@@649 $generated@@44 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@651) $generated@@436)) ($generated@@78 $generated@@651 $generated@@45 $generated@@650))
 :pattern ( ($generated@@78 $generated@@651 $generated@@45 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@653) $generated@@185)) ($generated@@78 $generated@@653 $generated@@48 $generated@@652))
 :pattern ( ($generated@@78 $generated@@653 $generated@@48 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@155 $generated@@185)) (= (type $generated@@655) $generated@@67)) (= ($generated@@140 $generated@@654 ($generated@@479 $generated@@655)) (forall (($generated@@656 Int) ) (!  (=> (and (<= 0 $generated@@656) (< $generated@@656 ($generated@@198 $generated@@654))) ($generated@@207 ($generated@@197 $generated@@654 $generated@@656) $generated@@655))
 :pattern ( ($generated@@197 $generated@@654 $generated@@656))
))))
 :pattern ( ($generated@@140 $generated@@654 ($generated@@479 $generated@@655)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 Int) ) (!  (=> (= (type $generated@@658) ($generated@@155 $generated@@185)) (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@198 $generated@@658))) (< ($generated@@527 ($generated@@358 $generated@@176 ($generated@@197 $generated@@658 $generated@@659))) ($generated@@657 $generated@@658))))
 :pattern ( ($generated@@527 ($generated@@358 $generated@@176 ($generated@@197 $generated@@658 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@270 $generated@@185 $generated@@185)) (= (type $generated@@661) $generated@@67)) (= (type $generated@@662) $generated@@67)) ($generated@@140 $generated@@660 ($generated@@386 $generated@@661 $generated@@662))) (and (and ($generated@@140 ($generated@@268 $generated@@660) ($generated@@216 $generated@@661)) ($generated@@140 ($generated@@313 $generated@@660) ($generated@@216 $generated@@662))) ($generated@@140 ($generated@@357 $generated@@660) ($generated@@216 ($generated@@175 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@140 $generated@@660 ($generated@@386 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@288 $generated@@185 $generated@@185)) (= (type $generated@@664) $generated@@67)) (= (type $generated@@665) $generated@@67)) ($generated@@140 $generated@@663 ($generated@@394 $generated@@664 $generated@@665))) (and (and ($generated@@140 ($generated@@286 $generated@@663) ($generated@@221 $generated@@664)) ($generated@@140 ($generated@@324 $generated@@663) ($generated@@221 $generated@@665))) ($generated@@140 ($generated@@368 $generated@@663) ($generated@@221 ($generated@@175 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@140 $generated@@663 ($generated@@394 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@2) ($generated@@140 $generated@@666 $generated@@46))
 :pattern ( ($generated@@140 $generated@@666 $generated@@46))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@3) ($generated@@140 $generated@@667 $generated@@47))
 :pattern ( ($generated@@140 $generated@@667 $generated@@47))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@4) ($generated@@140 $generated@@668 $generated@@44))
 :pattern ( ($generated@@140 $generated@@668 $generated@@44))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@436) ($generated@@140 $generated@@669 $generated@@45))
 :pattern ( ($generated@@140 $generated@@669 $generated@@45))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@185) ($generated@@140 $generated@@670 $generated@@48))
 :pattern ( ($generated@@140 $generated@@670 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 (T@U) Bool)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(assert  (and (and (and (= (type $generated@@672) $generated@@81) (= (type $generated@@676) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@675) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@678) ($generated@@548 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@680 true))
(let (($generated@@681  (=> (and (=> (and (and (<= ($generated@@226 0) $generated@@671) (< $generated@@671 ($generated@@136 $generated@@672))) (not (or (= $generated@@671 $generated@@673) (= $generated@@671 $generated@@674)))) (= ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@675 $generated@@672) ($generated@@332 $generated@@671)))) ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@676 $generated@@672) ($generated@@332 $generated@@671)))))) (= (ControlFlow 0 9) 1)) $generated@@680)))
(let (($generated@@682  (=> (<= ($generated@@226 0) $generated@@671) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (=> (and (< $generated@@671 ($generated@@136 $generated@@672)) (not (or (= $generated@@671 $generated@@673) (= $generated@@671 $generated@@674)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@136 $generated@@672))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676)) (=> ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@136 $generated@@672))) (=> (and (= ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@675 $generated@@672) ($generated@@332 $generated@@671)))) ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@676 $generated@@672) ($generated@@332 $generated@@671))))) (= (ControlFlow 0 2) 1)) $generated@@680)))))))))))))))))
(let (($generated@@683  (=> (and (and (and (<= ($generated@@226 0) $generated@@673) (< $generated@@673 $generated@@674)) (< $generated@@674 ($generated@@136 $generated@@672))) (and (and ($generated@@164 $generated@@675) ($generated@@677 $generated@@675)) (and (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@81) (=> (and (not (= $generated@@684 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@676 $generated@@684) $generated@@60))) (or (= ($generated@@85 $generated@@675 $generated@@684) ($generated@@85 $generated@@676 $generated@@684)) (= $generated@@684 $generated@@672))))
 :pattern ( ($generated@@85 $generated@@675 $generated@@684))
)) ($generated@@145 $generated@@676 $generated@@675)))) (and (=> (= (ControlFlow 0 10) (- 0 23)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 22)) ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676)) (=> ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676) (and (=> (= (ControlFlow 0 10) (- 0 21)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (=> ($generated@@342 ($generated@@152 ($generated@@331 $generated@@676 $generated@@672)) ($generated@@152 ($generated@@331 $generated@@675 $generated@@672))) (and (=> (= (ControlFlow 0 10) (- 0 20)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 19)) (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@672))) (and (=> (= (ControlFlow 0 10) (- 0 18)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 17)) ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676)) (=> ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676) (and (=> (= (ControlFlow 0 10) (- 0 16)) (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@136 $generated@@672))) (=> (= ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@675 $generated@@672) ($generated@@332 $generated@@674)))) ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@676 $generated@@672) ($generated@@332 $generated@@673))))) (and (=> (= (ControlFlow 0 10) (- 0 15)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 14)) (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@136 $generated@@672))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676)) (=> ($generated@@78 $generated@@672 ($generated@@137 $generated@@46) $generated@@676) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@672)))) (=> (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@672))) (=> (= ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@675 $generated@@672) ($generated@@332 $generated@@673)))) ($generated ($generated@@358 $generated@@2 ($generated@@87 ($generated@@85 $generated@@676 $generated@@672) ($generated@@332 $generated@@674))))) (and (=> (= (ControlFlow 0 10) 2) $generated@@682) (=> (= (ControlFlow 0 10) 9) $generated@@681))))))))))))))))))))))))))))))))))
(let (($generated@@685  (=> (and (not (and (<= ($generated@@226 0) $generated@@673) (< $generated@@673 $generated@@674))) (= (ControlFlow 0 26) 10)) $generated@@683)))
(let (($generated@@686  (=> (and (<= ($generated@@226 0) $generated@@673) (< $generated@@673 $generated@@674)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (not (= $generated@@672 $generated@@138))) (=> (not (= $generated@@672 $generated@@138)) (=> (= (ControlFlow 0 24) 10) $generated@@683))))))
(let (($generated@@687  (=> (< $generated@@673 ($generated@@226 0)) (and (=> (= (ControlFlow 0 28) 24) $generated@@686) (=> (= (ControlFlow 0 28) 26) $generated@@685)))))
(let (($generated@@688  (=> (<= ($generated@@226 0) $generated@@673) (and (=> (= (ControlFlow 0 27) 24) $generated@@686) (=> (= (ControlFlow 0 27) 26) $generated@@685)))))
(let (($generated@@689  (=> (= $generated@@678 ($generated@@547 $generated@@138 $generated@@676 $generated@@60 $generated@@672)) (and (=> (= (ControlFlow 0 29) 27) $generated@@688) (=> (= (ControlFlow 0 29) 28) $generated@@687)))))
(let (($generated@@690  (=> (and ($generated@@164 $generated@@676) ($generated@@677 $generated@@676)) (=> (and (and ($generated@@140 $generated@@672 ($generated@@169 $generated@@46)) ($generated@@78 $generated@@672 ($generated@@169 $generated@@46) $generated@@676)) (and (= 1 $generated@@679) (= (ControlFlow 0 30) 29))) $generated@@689))))
$generated@@690)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@T) T@U)
(declare-fun $generated@@170 (T@T) T@U)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@185 (Int Int) Int)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U) T@U)
(declare-fun $generated@@195 () T@T)
(declare-fun $generated@@201 (T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 (T@U) Bool)
(declare-fun $generated@@216 (T@U Int) T@U)
(declare-fun $generated@@217 (T@U Int T@U) T@U)
(declare-fun $generated@@218 (T@U) Int)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (Int) Int)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@287 (T@U T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@398 (Int) T@U)
(declare-fun $generated@@408 (T@U T@U) Bool)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@T T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@478 (T@T) T@U)
(declare-fun $generated@@502 () T@T)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(declare-fun $generated@@634 (T@U T@U T@U) T@U)
(declare-fun $generated@@635 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@636 (T@T T@T) T@T)
(declare-fun $generated@@637 (T@T) T@T)
(declare-fun $generated@@638 (T@T) T@T)
(declare-fun $generated@@639 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@765 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert  (and (and (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@83 (type $generated@@149))))
(= (type ($generated@@146 $generated@@149 $generated@@150)) ($generated@@80 $generated@@151 $generated@@2)))
 :pattern ( ($generated@@146 $generated@@149 $generated@@150))
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@83 (type $generated@@152))))
(= (type ($generated@@147 $generated@@152 $generated@@153)) ($generated@@80 $generated@@154 $generated@@2)))
 :pattern ( ($generated@@147 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@83 (type $generated@@155))))
(= (type ($generated@@148 $generated@@155 $generated@@156)) ($generated@@80 $generated@@157 $generated@@2)))
 :pattern ( ($generated@@148 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@83 (type $generated@@158))))
 (=> (and (= (type $generated@@158) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@159) ($generated@@80 $generated@@160 $generated@@2))) (and (= (+ (+ ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) ($generated@@145 ($generated@@146 $generated@@159 $generated@@158))) (* 2 ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))) ($generated@@145 ($generated@@148 $generated@@158 $generated@@159))) (= ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) (- ($generated@@145 $generated@@158) ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@163) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@161 $generated@@162 $generated@@163)) (forall (($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@162 $generated@@164) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@163 $generated@@164) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@163 $generated@@164) $generated@@60))
)))
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167)  (or (= $generated@@166 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@167 $generated@@166) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167))
)))
(assert  (and (and (and (and (forall (($generated@@173 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@173)) 14)) (forall (($generated@@174 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@172 (type $generated@@175))))
(= (type ($generated@@168 $generated@@175)) ($generated@@80 $generated@@176 $generated@@2)))
 :pattern ( ($generated@@168 $generated@@175))
))) (forall (($generated@@177 T@T) ) (! (= (type ($generated@@169 $generated@@177)) ($generated@@171 $generated@@177))
 :pattern ( ($generated@@169 $generated@@177))
))) (forall (($generated@@178 T@T) ) (! (= (type ($generated@@170 $generated@@178)) ($generated@@80 $generated@@178 $generated@@2))
 :pattern ( ($generated@@170 $generated@@178))
))))
(assert (forall (($generated@@179 T@T) ) (= ($generated@@168 ($generated@@169 $generated@@179)) ($generated@@170 $generated@@179))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@67) (= (type $generated@@182) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@183) $generated@@81)) (and (and ($generated@@180 $generated@@182) (and (not (= $generated@@183 $generated@@138)) (= ($generated@@139 $generated@@183) ($generated@@137 $generated@@181)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@182 $generated@@183) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@183)) $generated@@46 $generated@@182))
 :pattern ( ($generated@@136 $generated@@183) ($generated@@87 ($generated@@85 $generated@@182 $generated@@183) $generated@@60) ($generated@@137 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@2) ($generated@@140 $generated@@184 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@184 ($generated@@79 0)))
)))
(assert (forall (($generated@@186 Int) ($generated@@187 Int) ) (!  (or (= ($generated@@185 $generated@@186 $generated@@187) $generated@@186) (= ($generated@@185 $generated@@186 $generated@@187) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@67)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@67) (= (type $generated@@191) $generated@@81)) (= (type $generated@@192) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@191 ($generated@@188 $generated@@190) $generated@@192) ($generated@@78 $generated@@191 ($generated@@137 $generated@@190) $generated@@192)))
 :pattern ( ($generated@@78 $generated@@191 ($generated@@188 $generated@@190) $generated@@192))
)))
(assert  (and (= ($generated@@1 $generated@@195) 15) (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@196 $generated@@197)) $generated@@67)
 :pattern ( ($generated@@194 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (and (= (type $generated@@198) $generated@@67) (= (type $generated@@199) $generated@@67)) (= (type $generated@@200) $generated@@195)) ($generated@@140 $generated@@200 ($generated@@194 $generated@@198 $generated@@199))) ($generated@@193 $generated@@200))
 :pattern ( ($generated@@193 $generated@@200) ($generated@@140 $generated@@200 ($generated@@194 $generated@@198 $generated@@199)))
)))
(assert  (and (and (= ($generated@@1 $generated@@204) 16) (forall (($generated@@205 T@U) ) (! (= (type ($generated@@202 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@203 $generated@@206)) $generated@@204)
 :pattern ( ($generated@@203 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) $generated@@195) (= (type $generated@@208) $generated@@195)) true) (= ($generated@@201 $generated@@207 $generated@@208)  (and (= ($generated@@202 $generated@@207) ($generated@@202 $generated@@208)) (= ($generated@@203 $generated@@207) ($generated@@203 $generated@@208)))))
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@67)
 :pattern ( ($generated@@209 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (= (type $generated@@212) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@213) $generated@@67)) ($generated@@140 $generated@@212 ($generated@@209 $generated@@213))) ($generated@@210 $generated@@212))
 :pattern ( ($generated@@140 $generated@@212 ($generated@@209 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@172 (type $generated@@214))))
 (=> (= (type $generated@@214) ($generated@@171 $generated@@215)) ($generated@@210 ($generated@@168 $generated@@214))))
 :pattern ( ($generated@@168 $generated@@214))
)))
(assert  (and (forall (($generated@@219 T@U) ($generated@@220 Int) ) (! (let (($generated@@221 ($generated@@172 (type $generated@@219))))
(= (type ($generated@@216 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@216 $generated@@219 $generated@@220))
)) (forall (($generated@@222 T@U) ($generated@@223 Int) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(= (type ($generated@@217 $generated@@222 $generated@@223 $generated@@224)) ($generated@@171 $generated@@225)))
 :pattern ( ($generated@@217 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 Int) ($generated@@228 T@U) ($generated@@229 Int) ) (! (let (($generated@@230 (type $generated@@228)))
 (=> (= (type $generated@@226) ($generated@@171 $generated@@230)) (=> (and (<= 0 $generated@@229) (< $generated@@229 ($generated@@218 $generated@@226))) (and (=> (= $generated@@227 $generated@@229) (= ($generated@@216 ($generated@@217 $generated@@226 $generated@@227 $generated@@228) $generated@@229) $generated@@228)) (=> (not (= $generated@@227 $generated@@229)) (= ($generated@@216 ($generated@@217 $generated@@226 $generated@@227 $generated@@228) $generated@@229) ($generated@@216 $generated@@226 $generated@@229)))))))
 :pattern ( ($generated@@216 ($generated@@217 $generated@@226 $generated@@227 $generated@@228) $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@83 (type $generated@@231))))
 (=> (and (= (type $generated@@231) ($generated@@80 $generated@@233 $generated@@2)) (= (type $generated@@232) ($generated@@80 $generated@@233 $generated@@2))) (= ($generated@@147 ($generated@@147 $generated@@231 $generated@@232) $generated@@232) ($generated@@147 $generated@@231 $generated@@232))))
 :pattern ( ($generated@@147 ($generated@@147 $generated@@231 $generated@@232) $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 (type $generated@@235)))
 (=> (= (type $generated@@234) ($generated@@171 $generated@@236)) (= (exists (($generated@@237 Int) ) (!  (and (and (<= 0 $generated@@237) (< $generated@@237 ($generated@@218 $generated@@234))) (= $generated@@235 ($generated@@216 $generated@@234 $generated@@237)))
 :pattern ( ($generated@@216 $generated@@234 $generated@@237))
)) (< 0 ($generated ($generated@@85 ($generated@@168 $generated@@234) $generated@@235))))))
 :pattern ( ($generated@@85 ($generated@@168 $generated@@234) $generated@@235))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@195)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@204)) (= (type $generated@@245) $generated@@204)) (= ($generated@@140 ($generated@@238 $generated@@244 $generated@@245) ($generated@@194 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@140 ($generated@@238 $generated@@244 $generated@@245) ($generated@@194 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
 (=> (and (= (type $generated@@246) ($generated@@80 $generated@@249 $generated@@2)) (= (type $generated@@247) ($generated@@80 $generated@@249 $generated@@2))) (= ($generated ($generated@@85 ($generated@@148 $generated@@246 $generated@@247) $generated@@248)) (+ ($generated ($generated@@85 $generated@@246 $generated@@248)) ($generated ($generated@@85 $generated@@247 $generated@@248))))))
 :pattern ( ($generated@@85 ($generated@@148 $generated@@246 $generated@@247) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@195) (= (type $generated@@251) $generated@@195)) (= ($generated@@201 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@201 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@67)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@255) $generated@@67)) (= ($generated@@140 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@204) ($generated@@0 ($generated@@85 $generated@@254 $generated@@256))) ($generated@@239 $generated@@256 $generated@@255))
 :pattern ( ($generated@@85 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@140 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@67)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@260) $generated@@67)) (= ($generated@@140 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@204) ($generated@@0 ($generated@@85 $generated@@259 $generated@@261))) ($generated@@239 $generated@@261 $generated@@260))
 :pattern ( ($generated@@85 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@140 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 Int) ) (!  (=> (<= 0 $generated@@263) (= ($generated@@262 $generated@@263) $generated@@263))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@264 $generated@@265) $generated@@265)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@67) (= (type $generated@@272) $generated@@67)) (= (type $generated@@273) $generated@@204)) (= (type $generated@@274) $generated@@204)) (= (type $generated@@275) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@180 $generated@@275)) (= ($generated@@78 ($generated@@238 $generated@@273 $generated@@274) ($generated@@194 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@78 ($generated@@238 $generated@@273 $generated@@274) ($generated@@194 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@71)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@195) (= ($generated@@193 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@63)))
 :pattern ( ($generated@@193 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 (type $generated@@281)))
 (=> (and (= (type $generated@@279) ($generated@@80 $generated@@282 $generated@@2)) (= (type $generated@@280) ($generated@@80 $generated@@282 $generated@@2))) (= ($generated ($generated@@85 ($generated@@146 $generated@@279 $generated@@280) $generated@@281)) ($generated@@262 (- ($generated ($generated@@85 $generated@@279 $generated@@281)) ($generated ($generated@@85 $generated@@280 $generated@@281)))))))
 :pattern ( ($generated@@85 ($generated@@146 $generated@@279 $generated@@280) $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@195) ($generated@@193 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@204) (= (type $generated@@285) $generated@@204)) (= $generated@@283 ($generated@@238 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@193 $generated@@283))
)))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@218 ($generated@@169 $generated@@286)) 0)
 :pattern ( ($generated@@169 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
(= (type ($generated@@287 $generated@@288 $generated@@289)) ($generated@@80 $generated@@290 $generated@@2)))
 :pattern ( ($generated@@287 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 (type $generated@@292)))
 (=> (= (type $generated@@291) ($generated@@80 $generated@@293 $generated@@2)) (= ($generated@@145 ($generated@@287 $generated@@291 $generated@@292)) (+ ($generated@@145 $generated@@291) 1))))
 :pattern ( ($generated@@145 ($generated@@287 $generated@@291 $generated@@292)))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@67) (= (type $generated@@295) $generated@@81)) (= ($generated@@140 $generated@@295 ($generated@@188 $generated@@294))  (and ($generated@@140 $generated@@295 ($generated@@137 $generated@@294)) (not (= $generated@@295 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@295 ($generated@@188 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@204)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@67) (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@270 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@78 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@270 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@302) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@303) $generated@@204)) (= (type $generated@@304) $generated@@67)) ($generated@@161 $generated@@301 $generated@@302)) ($generated@@270 $generated@@303 $generated@@304 $generated@@301)) ($generated@@270 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@161 $generated@@301 $generated@@302) ($generated@@270 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@306) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@308) $generated@@67)) ($generated@@161 $generated@@305 $generated@@306)) ($generated@@78 $generated@@307 $generated@@308 $generated@@305)) ($generated@@78 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@161 $generated@@305 $generated@@306) ($generated@@78 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@83 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@80 $generated@@310 $generated@@2)) (and (= (= ($generated@@145 $generated@@309) 0) (= $generated@@309 ($generated@@170 $generated@@310))) (=> (not (= ($generated@@145 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@85 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@145 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@72)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@314)) $generated@@61) (= ($generated@@312 ($generated@@137 $generated@@314)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@67) (and (= ($generated@@76 ($generated@@188 $generated@@315)) $generated@@62) (= ($generated@@312 ($generated@@188 $generated@@315)) $generated@@65)))
 :pattern ( ($generated@@188 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (! (let (($generated@@319 (type $generated@@318)))
 (=> (and (and (= (type $generated@@316) ($generated@@80 $generated@@319 $generated@@2)) (= (type $generated@@317) ($generated@@80 $generated@@319 $generated@@2))) (<= ($generated ($generated@@85 $generated@@316 $generated@@318)) ($generated ($generated@@85 $generated@@317 $generated@@318)))) (= ($generated ($generated@@85 ($generated@@146 $generated@@316 $generated@@317) $generated@@318)) 0)))
 :pattern ( ($generated@@146 $generated@@316 $generated@@317) ($generated@@85 $generated@@317 $generated@@318) ($generated@@85 $generated@@316 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 17)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@80 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 18)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@80 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@85 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@85 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@83 (type $generated@@356))))
 (=> (and (= (type $generated@@356) ($generated@@80 $generated@@358 $generated@@2)) (= (type $generated@@357) ($generated@@80 $generated@@358 $generated@@2))) (= ($generated@@145 ($generated@@148 $generated@@356 $generated@@357)) (+ ($generated@@145 $generated@@356) ($generated@@145 $generated@@357)))))
 :pattern ( ($generated@@145 ($generated@@148 $generated@@356 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@83 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@80 $generated@@360 $generated@@2)) (= ($generated@@210 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@85 $generated@@359 $generated@@361))) (<= ($generated ($generated@@85 $generated@@359 $generated@@361)) ($generated@@145 $generated@@359))))
 :pattern ( ($generated@@85 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@210 $generated@@359))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@67) (= (type $generated@@363) $generated@@81)) (= ($generated@@140 $generated@@363 ($generated@@137 $generated@@362))  (or (= $generated@@363 $generated@@138) (= ($generated@@139 $generated@@363) ($generated@@137 $generated@@362)))))
 :pattern ( ($generated@@140 $generated@@363 ($generated@@137 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (=> (= (type $generated@@364) ($generated@@80 $generated@@366 $generated@@2)) (= ($generated ($generated@@85 ($generated@@287 $generated@@364 $generated@@365) $generated@@365)) (+ ($generated ($generated@@85 $generated@@364 $generated@@365)) 1))))
 :pattern ( ($generated@@287 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@368)))
 (=> (and (and (= (type $generated@@367) ($generated@@80 $generated@@370 $generated@@2)) (= (type $generated@@369) $generated@@370)) (< 0 ($generated ($generated@@85 $generated@@367 $generated@@369)))) (< 0 ($generated ($generated@@85 ($generated@@287 $generated@@367 $generated@@368) $generated@@369)))))
 :pattern ( ($generated@@287 $generated@@367 $generated@@368) ($generated@@85 $generated@@367 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@324 (type $generated@@371))))
(let (($generated@@373 ($generated@@323 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@322 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@321 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@320 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@324 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@80 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@324 (type $generated@@378))))
(let (($generated@@380 ($generated@@323 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@322 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@321 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@342 (type $generated@@382))))
(let (($generated@@384 ($generated@@341 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@340 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@339 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@85 ($generated@@338 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@338 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@342 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@80 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@342 (type $generated@@389))))
(let (($generated@@391 ($generated@@341 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@340 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@339 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@394)))
 (=> (and (= (type $generated@@393) ($generated@@80 $generated@@396 $generated@@2)) (= (type $generated@@395) $generated@@396)) (= (< 0 ($generated ($generated@@85 ($generated@@287 $generated@@393 $generated@@394) $generated@@395)))  (or (= $generated@@395 $generated@@394) (< 0 ($generated ($generated@@85 $generated@@393 $generated@@395)))))))
 :pattern ( ($generated@@85 ($generated@@287 $generated@@393 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@397 $generated@@399 $generated@@400)) ($generated@@171 $generated@@204))
 :pattern ( ($generated@@397 $generated@@399 $generated@@400))
)) (forall (($generated@@401 Int) ) (! (= (type ($generated@@398 $generated@@401)) ($generated@@69 $generated@@204))
 :pattern ( ($generated@@398 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@403) $generated@@81)) (forall (($generated@@404 Int) ) (!  (=> (and (<= 0 $generated@@404) (< $generated@@404 ($generated@@218 ($generated@@397 $generated@@402 $generated@@403)))) (= ($generated@@216 ($generated@@397 $generated@@402 $generated@@403) $generated@@404) ($generated@@87 ($generated@@85 $generated@@402 $generated@@403) ($generated@@398 $generated@@404))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@402 $generated@@403) ($generated@@398 $generated@@404)))
 :pattern ( ($generated@@216 ($generated@@397 $generated@@402 $generated@@403) $generated@@404))
)))
 :pattern ( ($generated@@397 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@406) $generated@@67)) (= ($generated@@140 $generated@@405 ($generated@@209 $generated@@406)) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@204) (< 0 ($generated ($generated@@85 $generated@@405 $generated@@407)))) ($generated@@239 $generated@@407 $generated@@406))
 :pattern ( ($generated@@85 $generated@@405 $generated@@407))
))))
 :pattern ( ($generated@@140 $generated@@405 ($generated@@209 $generated@@406)))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@83 (type $generated@@409))))
 (=> (and (= (type $generated@@409) ($generated@@80 $generated@@411 $generated@@2)) (= (type $generated@@410) ($generated@@80 $generated@@411 $generated@@2))) (= ($generated@@408 $generated@@409 $generated@@410) (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@411) (= ($generated ($generated@@85 $generated@@409 $generated@@412)) ($generated ($generated@@85 $generated@@410 $generated@@412))))
 :pattern ( ($generated@@85 $generated@@409 $generated@@412))
 :pattern ( ($generated@@85 $generated@@410 $generated@@412))
)))))
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@414) $generated@@67)) (= (type $generated@@415) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@413 ($generated@@252 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@204) ($generated@@0 ($generated@@85 $generated@@413 $generated@@416))) ($generated@@270 $generated@@416 $generated@@414 $generated@@415))
 :pattern ( ($generated@@85 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@78 $generated@@413 ($generated@@252 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@417 ($generated@@257 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@204) ($generated@@0 ($generated@@85 $generated@@417 $generated@@420))) ($generated@@270 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@85 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@78 $generated@@417 ($generated@@257 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated ($generated@@85 ($generated@@170 $generated@@422) $generated@@421)) 0))
 :pattern ( (let (($generated@@422 (type $generated@@421)))
($generated@@85 ($generated@@170 $generated@@422) $generated@@421)))
)))
(assert  (and (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@423 $generated@@426)) ($generated@@80 $generated@@204 $generated@@4))
 :pattern ( ($generated@@423 $generated@@426))
)) (forall (($generated@@427 T@T) ($generated@@428 T@U) ) (! (= (type ($generated@@424 $generated@@427 $generated@@428)) $generated@@427)
 :pattern ( ($generated@@424 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@324 (type $generated@@429))))
(let (($generated@@431 ($generated@@323 (type $generated@@429))))
(= (type ($generated@@425 $generated@@429)) ($generated@@80 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@425 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@322 $generated@@204 $generated@@204)) (= (type $generated@@433) $generated@@204)) (= ($generated@@0 ($generated@@85 ($generated@@423 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@432) ($generated@@202 ($generated@@424 $generated@@195 $generated@@433)))) (= ($generated@@85 ($generated@@425 $generated@@432) ($generated@@202 ($generated@@424 $generated@@195 $generated@@433))) ($generated@@203 ($generated@@424 $generated@@195 $generated@@433))))))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@432) $generated@@433))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) ($generated@@80 $generated@@204 $generated@@4))
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@342 (type $generated@@437))))
(let (($generated@@439 ($generated@@341 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437)) ($generated@@80 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@435 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@340 $generated@@204 $generated@@204)) (= (type $generated@@441) $generated@@204)) (= ($generated@@0 ($generated@@85 ($generated@@434 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@85 ($generated@@338 $generated@@440) ($generated@@202 ($generated@@424 $generated@@195 $generated@@441)))) (= ($generated@@85 ($generated@@435 $generated@@440) ($generated@@202 ($generated@@424 $generated@@195 $generated@@441))) ($generated@@203 ($generated@@424 $generated@@195 $generated@@441))))))
 :pattern ( ($generated@@85 ($generated@@434 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@323 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@322 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@85 ($generated@@375 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@85 ($generated@@425 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@425 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@341 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@340 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@85 ($generated@@338 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@85 ($generated@@435 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@85 ($generated@@338 $generated@@447) $generated@@451))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@322 $generated@@204 $generated@@204)) (= (type $generated@@456) $generated@@67)) (= (type $generated@@457) $generated@@67)) (= (type $generated@@458) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@455) $generated@@459))) (and ($generated@@270 ($generated@@85 ($generated@@425 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@270 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@85 ($generated@@425 $generated@@455) $generated@@459))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@78 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@340 $generated@@204 $generated@@204)) (= (type $generated@@464) $generated@@67)) (= (type $generated@@465) $generated@@67)) (= (type $generated@@466) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@338 $generated@@463) $generated@@467))) (and ($generated@@270 ($generated@@85 ($generated@@435 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@270 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@463) $generated@@467))
 :pattern ( ($generated@@85 ($generated@@338 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@78 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@83 (type $generated@@468))))
 (=> (and (and (= (type $generated@@468) ($generated@@80 $generated@@470 $generated@@2)) (= (type $generated@@469) ($generated@@80 $generated@@470 $generated@@2))) ($generated@@408 $generated@@468 $generated@@469)) (= $generated@@468 $generated@@469)))
 :pattern ( ($generated@@408 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@471) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@472) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@473) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@471 $generated@@473))) (and ($generated@@161 $generated@@471 $generated@@472) ($generated@@161 $generated@@472 $generated@@473))) ($generated@@161 $generated@@471 $generated@@473))
 :pattern ( ($generated@@161 $generated@@471 $generated@@472) ($generated@@161 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 Int) ) (!  (=> (and (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@476) $generated@@81)) (=> (and (and (and ($generated@@180 $generated@@475) (and (not (= $generated@@476 $generated@@138)) (= ($generated@@139 $generated@@476) ($generated@@137 $generated@@474)))) (and (<= 0 $generated@@477) (< $generated@@477 ($generated@@136 $generated@@476)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@475 $generated@@476) $generated@@60))) ($generated@@270 ($generated@@87 ($generated@@85 $generated@@475 $generated@@476) ($generated@@398 $generated@@477)) $generated@@474 $generated@@475)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@475 $generated@@476) ($generated@@398 $generated@@477)) ($generated@@137 $generated@@474))
)))
(assert (forall (($generated@@479 T@T) ) (! (= (type ($generated@@478 $generated@@479)) ($generated@@80 $generated@@479 $generated@@4))
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@342 (type $generated@@480))))
(let (($generated@@482 ($generated@@341 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@340 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@339 $generated@@482 $generated@@481)) (= ($generated@@338 $generated@@480) ($generated@@478 $generated@@482))))))
 :pattern ( ($generated@@338 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@342 (type $generated@@483))))
(let (($generated@@485 ($generated@@341 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@340 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@339 $generated@@485 $generated@@484)) (= ($generated@@386 $generated@@483) ($generated@@478 $generated@@484))))))
 :pattern ( ($generated@@386 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@342 (type $generated@@486))))
(let (($generated@@488 ($generated@@341 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@340 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@339 $generated@@488 $generated@@487)) (= ($generated@@434 $generated@@486) ($generated@@478 $generated@@204))))))
 :pattern ( ($generated@@434 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@324 (type $generated@@489))))
(let (($generated@@491 ($generated@@323 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@322 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@321 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@204) (= (type $generated@@493) $generated@@204)) ($generated@@0 ($generated@@85 ($generated@@423 $generated@@489) ($generated@@296 ($generated@@238 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@423 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@342 (type $generated@@494))))
(let (($generated@@496 ($generated@@341 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@340 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@339 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@204) (= (type $generated@@498) $generated@@204)) ($generated@@0 ($generated@@85 ($generated@@434 $generated@@494) ($generated@@296 ($generated@@238 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@434 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@204) ($generated@@239 $generated@@499 $generated@@46)) (and (= ($generated@@296 ($generated@@424 $generated@@2 $generated@@499)) $generated@@499) ($generated@@140 ($generated@@424 $generated@@2 $generated@@499) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@499 $generated@@46))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@204) ($generated@@239 $generated@@500 $generated@@47)) (and (= ($generated@@296 ($generated@@424 $generated@@3 $generated@@500)) $generated@@500) ($generated@@140 ($generated@@424 $generated@@3 $generated@@500) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@500 $generated@@47))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@204) ($generated@@239 $generated@@501 $generated@@44)) (and (= ($generated@@296 ($generated@@424 $generated@@4 $generated@@501)) $generated@@501) ($generated@@140 ($generated@@424 $generated@@4 $generated@@501) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@501 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@502) 19))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@204) ($generated@@239 $generated@@503 $generated@@45)) (and (= ($generated@@296 ($generated@@424 $generated@@502 $generated@@503)) $generated@@503) ($generated@@140 ($generated@@424 $generated@@502 $generated@@503) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@503 $generated@@45))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@239 ($generated@@296 $generated@@504) $generated@@505) ($generated@@140 $generated@@504 $generated@@505)))
 :pattern ( ($generated@@239 ($generated@@296 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= (type ($generated@@506 $generated@@507)) ($generated@@80 $generated@@508 $generated@@2)))
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@509)))
 (=> (= (type $generated@@510) $generated@@511) (and (= (= ($generated ($generated@@85 ($generated@@506 $generated@@509) $generated@@510)) 1) (= $generated@@509 $generated@@510)) (= (= ($generated ($generated@@85 ($generated@@506 $generated@@509) $generated@@510)) 0) (not (= $generated@@509 $generated@@510))))))
 :pattern ( ($generated@@85 ($generated@@506 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@81) (<= 0 ($generated@@136 $generated@@512)))
 :no-pattern (type $generated@@512)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@83 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@80 $generated@@514 $generated@@2)) (<= 0 ($generated@@145 $generated@@513))))
 :pattern ( ($generated@@145 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@172 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@171 $generated@@516)) (<= 0 ($generated@@218 $generated@@515))))
 :pattern ( ($generated@@218 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
 (=> (and (= (type $generated@@517) ($generated@@80 $generated@@520 $generated@@2)) (= (type $generated@@518) ($generated@@80 $generated@@520 $generated@@2))) (= ($generated ($generated@@85 ($generated@@147 $generated@@517 $generated@@518) $generated@@519)) ($generated@@185 ($generated ($generated@@85 $generated@@517 $generated@@519)) ($generated ($generated@@85 $generated@@518 $generated@@519))))))
 :pattern ( ($generated@@85 ($generated@@147 $generated@@517 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@67) (= (type $generated@@524) $generated@@67)) (= ($generated@@521 ($generated@@452 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@452 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (= ($generated@@525 ($generated@@452 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@452 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@67) (= (type $generated@@530) $generated@@67)) (= ($generated@@76 ($generated@@452 $generated@@529 $generated@@530)) $generated@@58))
 :pattern ( ($generated@@452 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= ($generated@@531 ($generated@@460 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@460 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@67)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (= ($generated@@535 ($generated@@460 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@460 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@67) (= (type $generated@@540) $generated@@67)) (= ($generated@@76 ($generated@@460 $generated@@539 $generated@@540)) $generated@@59))
 :pattern ( ($generated@@460 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@204) (= (type $generated@@542) $generated@@204)) (= ($generated@@276 ($generated@@238 $generated@@541 $generated@@542)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@67)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@67) (= (type $generated@@546) $generated@@67)) (= ($generated@@543 ($generated@@194 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@194 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@67)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@67)) (= ($generated@@547 ($generated@@194 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@194 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@204) (= (type $generated@@552) $generated@@204)) (= ($generated@@202 ($generated@@238 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@238 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@204) (= (type $generated@@554) $generated@@204)) (= ($generated@@203 ($generated@@238 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@238 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@67)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@171 $generated@@204)) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@557 ($generated@@555 $generated@@558) $generated@@559) (forall (($generated@@560 Int) ) (!  (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@218 $generated@@557))) ($generated@@270 ($generated@@216 $generated@@557 $generated@@560) $generated@@558 $generated@@559))
 :pattern ( ($generated@@216 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@78 $generated@@557 ($generated@@555 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@561 ($generated@@79 $generated@@562)) $generated@@562)
 :pattern ( ($generated@@79 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@67)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@67) (= ($generated@@563 ($generated@@252 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@252 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@67) (= ($generated@@76 ($generated@@252 $generated@@566)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@67)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@67) (= ($generated@@567 ($generated@@257 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@257 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@67) (= ($generated@@76 ($generated@@257 $generated@@570)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@67)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@67) (= ($generated@@571 ($generated@@209 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@209 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@67) (= ($generated@@76 ($generated@@209 $generated@@574)) $generated@@56))
 :pattern ( ($generated@@209 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@67)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@67) (= ($generated@@575 ($generated@@555 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@555 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@67) (= ($generated@@76 ($generated@@555 $generated@@578)) $generated@@57))
 :pattern ( ($generated@@555 $generated@@578))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@75 ($generated@@398 $generated@@579)) 1)
 :pattern ( ($generated@@398 $generated@@579))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@580 ($generated@@398 $generated@@581)) $generated@@581)
 :pattern ( ($generated@@398 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@67)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@67) (= ($generated@@582 ($generated@@137 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@137 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@67)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@67) (= ($generated@@585 ($generated@@188 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@188 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
(= ($generated@@424 $generated@@589 ($generated@@296 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@296 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@322 $generated@@204 $generated@@204)) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) (= ($generated@@140 $generated@@590 ($generated@@452 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@590) $generated@@593))) (and ($generated@@239 ($generated@@85 ($generated@@425 $generated@@590) $generated@@593) $generated@@592) ($generated@@239 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@85 ($generated@@425 $generated@@590) $generated@@593))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@140 $generated@@590 ($generated@@452 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@340 $generated@@204 $generated@@204)) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) $generated@@67)) (= ($generated@@140 $generated@@594 ($generated@@460 $generated@@595 $generated@@596)) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@338 $generated@@594) $generated@@597))) (and ($generated@@239 ($generated@@85 ($generated@@435 $generated@@594) $generated@@597) $generated@@596) ($generated@@239 $generated@@597 $generated@@595)))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@594) $generated@@597))
 :pattern ( ($generated@@85 ($generated@@338 $generated@@594) $generated@@597))
))))
 :pattern ( ($generated@@140 $generated@@594 ($generated@@460 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@600) $generated@@204)) (= (type $generated@@601) $generated@@81)) (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@136 $generated@@601)))) (= ($generated@@397 ($generated@@86 $generated@@598 $generated@@601 ($generated@@88 ($generated@@85 $generated@@598 $generated@@601) ($generated@@398 $generated@@599) $generated@@600)) $generated@@601) ($generated@@217 ($generated@@397 $generated@@598 $generated@@601) $generated@@599 $generated@@600)))
 :pattern ( ($generated@@397 ($generated@@86 $generated@@598 $generated@@601 ($generated@@88 ($generated@@85 $generated@@598 $generated@@601) ($generated@@398 $generated@@599) $generated@@600)) $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@67) (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@604) $generated@@81)) (and (and ($generated@@180 $generated@@603) (and (not (= $generated@@604 $generated@@138)) (= ($generated@@139 $generated@@604) ($generated@@137 $generated@@602)))) (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@136 $generated@@604))))) ($generated@@239 ($generated@@87 ($generated@@85 $generated@@603 $generated@@604) ($generated@@398 $generated@@605)) $generated@@602))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@603 $generated@@604) ($generated@@398 $generated@@605)) ($generated@@137 $generated@@602))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@608)))
 (=> (and (and (= (type $generated@@606) ($generated@@171 $generated@@610)) (= (type $generated@@609) $generated@@610)) (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@218 $generated@@606)))) (= ($generated ($generated@@85 ($generated@@168 ($generated@@217 $generated@@606 $generated@@607 $generated@@608)) $generated@@609)) ($generated ($generated@@85 ($generated@@148 ($generated@@146 ($generated@@168 $generated@@606) ($generated@@506 ($generated@@216 $generated@@606 $generated@@607))) ($generated@@506 $generated@@608)) $generated@@609)))))
 :pattern ( ($generated@@85 ($generated@@168 ($generated@@217 $generated@@606 $generated@@607 $generated@@608)) $generated@@609))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@204) (= (type $generated@@614) $generated@@204)) (< ($generated@@611 $generated@@613) ($generated@@612 ($generated@@238 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@238 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@204) (= (type $generated@@616) $generated@@204)) (< ($generated@@611 $generated@@616) ($generated@@612 ($generated@@238 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@238 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@83 (type $generated@@617))))
 (=> (and (= (type $generated@@617) ($generated@@80 $generated@@619 $generated@@2)) (= (type $generated@@618) ($generated@@80 $generated@@619 $generated@@2))) (= ($generated@@147 $generated@@617 ($generated@@147 $generated@@617 $generated@@618)) ($generated@@147 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@147 $generated@@617 ($generated@@147 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@204) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@239 $generated@@620 ($generated@@452 $generated@@621 $generated@@622))) (and (= ($generated@@296 ($generated@@424 ($generated@@322 $generated@@204 $generated@@204) $generated@@620)) $generated@@620) ($generated@@140 ($generated@@424 ($generated@@322 $generated@@204 $generated@@204) $generated@@620) ($generated@@452 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@239 $generated@@620 ($generated@@452 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@204) (= (type $generated@@624) $generated@@67)) (= (type $generated@@625) $generated@@67)) ($generated@@239 $generated@@623 ($generated@@460 $generated@@624 $generated@@625))) (and (= ($generated@@296 ($generated@@424 ($generated@@340 $generated@@204 $generated@@204) $generated@@623)) $generated@@623) ($generated@@140 ($generated@@424 ($generated@@340 $generated@@204 $generated@@204) $generated@@623) ($generated@@460 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@239 $generated@@623 ($generated@@460 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@67) (= (type $generated@@627) $generated@@67)) (= (type $generated@@628) $generated@@204)) ($generated@@239 $generated@@628 ($generated@@194 $generated@@626 $generated@@627))) (and (= ($generated@@296 ($generated@@424 $generated@@195 $generated@@628)) $generated@@628) ($generated@@140 ($generated@@424 $generated@@195 $generated@@628) ($generated@@194 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@239 $generated@@628 ($generated@@194 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@629)))
 (not ($generated@@0 ($generated@@85 ($generated@@478 $generated@@630) $generated@@629))))
 :pattern ( (let (($generated@@630 (type $generated@@629)))
($generated@@85 ($generated@@478 $generated@@630) $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@633) $generated@@81)) (=> (and (and (and ($generated@@180 $generated@@631) ($generated@@180 $generated@@632)) ($generated@@161 $generated@@631 $generated@@632)) (= ($generated@@85 $generated@@631 $generated@@633) ($generated@@85 $generated@@632 $generated@@633))) (= ($generated@@397 $generated@@631 $generated@@633) ($generated@@397 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@397 $generated@@632 $generated@@633) ($generated@@161 $generated@@631 $generated@@632))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@640 T@T) ($generated@@641 T@T) ) (= ($generated@@1 ($generated@@636 $generated@@640 $generated@@641)) 20)) (forall (($generated@@642 T@T) ($generated@@643 T@T) ) (! (= ($generated@@637 ($generated@@636 $generated@@642 $generated@@643)) $generated@@642)
 :pattern ( ($generated@@636 $generated@@642 $generated@@643))
))) (forall (($generated@@644 T@T) ($generated@@645 T@T) ) (! (= ($generated@@638 ($generated@@636 $generated@@644 $generated@@645)) $generated@@645)
 :pattern ( ($generated@@636 $generated@@644 $generated@@645))
))) (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 ($generated@@638 (type $generated@@646))))
(= (type ($generated@@634 $generated@@646 $generated@@647 $generated@@648)) $generated@@649))
 :pattern ( ($generated@@634 $generated@@646 $generated@@647 $generated@@648))
))) (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@653)))
(let (($generated@@655 (type $generated@@651)))
(= (type ($generated@@639 $generated@@650 $generated@@651 $generated@@652 $generated@@653)) ($generated@@636 $generated@@655 $generated@@654))))
 :pattern ( ($generated@@639 $generated@@650 $generated@@651 $generated@@652 $generated@@653))
))) (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 ($generated@@638 (type $generated@@656))))
 (=> (= (type $generated@@659) $generated@@660) (= ($generated@@634 ($generated@@639 $generated@@656 $generated@@657 $generated@@658 $generated@@659) $generated@@657 $generated@@658) $generated@@659)))
 :weight 0
))) (and (and (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (or (= $generated@@663 $generated@@665) (= ($generated@@634 ($generated@@639 $generated@@662 $generated@@663 $generated@@664 $generated@@661) $generated@@665 $generated@@666) ($generated@@634 $generated@@662 $generated@@665 $generated@@666)))
 :weight 0
)) (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (or (= $generated@@670 $generated@@672) (= ($generated@@634 ($generated@@639 $generated@@668 $generated@@669 $generated@@670 $generated@@667) $generated@@671 $generated@@672) ($generated@@634 $generated@@668 $generated@@671 $generated@@672)))
 :weight 0
))) (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (or true (= ($generated@@634 ($generated@@639 $generated@@674 $generated@@675 $generated@@676 $generated@@673) $generated@@677 $generated@@678) ($generated@@634 $generated@@674 $generated@@677 $generated@@678)))
 :weight 0
)))) (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (! (= (type ($generated@@635 $generated@@679 $generated@@680 $generated@@681 $generated@@682)) ($generated@@636 $generated@@81 $generated@@4))
 :pattern ( ($generated@@635 $generated@@679 $generated@@680 $generated@@681 $generated@@682))
))))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (! (let (($generated@@689 ($generated@@70 (type $generated@@688))))
 (=> (and (and (and (and (and (= (type $generated@@683) $generated@@81) (= (type $generated@@684) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@685) ($generated@@69 $generated@@4))) (= (type $generated@@686) $generated@@81)) (= (type $generated@@687) $generated@@81)) (= (type $generated@@688) ($generated@@69 $generated@@689))) (= ($generated@@0 ($generated@@634 ($generated@@635 $generated@@683 $generated@@684 $generated@@685 $generated@@686) $generated@@687 $generated@@688))  (=> (and (not (= $generated@@687 $generated@@683)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@684 $generated@@687) $generated@@685))) (= $generated@@687 $generated@@686)))))
 :pattern ( ($generated@@634 ($generated@@635 $generated@@683 $generated@@684 $generated@@685 $generated@@686) $generated@@687 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 Int) ($generated@@692 T@U) ) (! (let (($generated@@693 (type $generated@@692)))
 (=> (= (type $generated@@690) ($generated@@171 $generated@@693)) (=> (and (<= 0 $generated@@691) (< $generated@@691 ($generated@@218 $generated@@690))) (= ($generated@@218 ($generated@@217 $generated@@690 $generated@@691 $generated@@692)) ($generated@@218 $generated@@690)))))
 :pattern ( ($generated@@218 ($generated@@217 $generated@@690 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@695) $generated@@81)) (= ($generated@@218 ($generated@@397 $generated@@694 $generated@@695)) ($generated@@136 $generated@@695)))
 :pattern ( ($generated@@218 ($generated@@397 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@67) (= (type $generated@@697) $generated@@67)) (and (= ($generated@@76 ($generated@@194 $generated@@696 $generated@@697)) $generated@@64) (= ($generated@@312 ($generated@@194 $generated@@696 $generated@@697)) $generated@@66)))
 :pattern ( ($generated@@194 $generated@@696 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@195) (= ($generated@@611 ($generated@@296 $generated@@698)) ($generated@@612 $generated@@698)))
 :pattern ( ($generated@@611 ($generated@@296 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ) (! (let (($generated@@700 (type $generated@@699)))
(= ($generated@@506 $generated@@699) ($generated@@287 ($generated@@170 $generated@@700) $generated@@699)))
 :pattern ( ($generated@@506 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ) (! (let (($generated@@702 ($generated@@172 (type $generated@@701))))
 (=> (= (type $generated@@701) ($generated@@171 $generated@@702)) (= ($generated@@145 ($generated@@168 $generated@@701)) ($generated@@218 $generated@@701))))
 :pattern ( ($generated@@145 ($generated@@168 $generated@@701)))
)))
(assert (forall (($generated@@703 Int) ($generated@@704 Int) ) (! (= (<= $generated@@703 $generated@@704) (= ($generated@@185 $generated@@703 $generated@@704) $generated@@703))
 :pattern ( ($generated@@185 $generated@@703 $generated@@704))
)))
(assert (forall (($generated@@705 Int) ($generated@@706 Int) ) (! (= (<= $generated@@706 $generated@@705) (= ($generated@@185 $generated@@705 $generated@@706) $generated@@706))
 :pattern ( ($generated@@185 $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@204) ($generated@@239 $generated@@707 ($generated@@79 0))) (and (= ($generated@@296 ($generated@@424 $generated@@2 $generated@@707)) $generated@@707) ($generated@@140 ($generated@@424 ($generated@@80 $generated@@204 $generated@@4) $generated@@707) ($generated@@79 0))))
 :pattern ( ($generated@@239 $generated@@707 ($generated@@79 0)))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (= (type $generated@@708) $generated@@204) (= (type $generated@@709) $generated@@67)) ($generated@@239 $generated@@708 ($generated@@252 $generated@@709))) (and (= ($generated@@296 ($generated@@424 ($generated@@80 $generated@@204 $generated@@4) $generated@@708)) $generated@@708) ($generated@@140 ($generated@@424 ($generated@@80 $generated@@204 $generated@@4) $generated@@708) ($generated@@252 $generated@@709))))
 :pattern ( ($generated@@239 $generated@@708 ($generated@@252 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (= (type $generated@@710) $generated@@204) (= (type $generated@@711) $generated@@67)) ($generated@@239 $generated@@710 ($generated@@257 $generated@@711))) (and (= ($generated@@296 ($generated@@424 ($generated@@80 $generated@@204 $generated@@4) $generated@@710)) $generated@@710) ($generated@@140 ($generated@@424 ($generated@@80 $generated@@204 $generated@@4) $generated@@710) ($generated@@257 $generated@@711))))
 :pattern ( ($generated@@239 $generated@@710 ($generated@@257 $generated@@711)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (= (type $generated@@712) $generated@@204) (= (type $generated@@713) $generated@@67)) ($generated@@239 $generated@@712 ($generated@@209 $generated@@713))) (and (= ($generated@@296 ($generated@@424 ($generated@@80 $generated@@204 $generated@@2) $generated@@712)) $generated@@712) ($generated@@140 ($generated@@424 ($generated@@80 $generated@@204 $generated@@2) $generated@@712) ($generated@@209 $generated@@713))))
 :pattern ( ($generated@@239 $generated@@712 ($generated@@209 $generated@@713)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (= (type $generated@@714) $generated@@204) (= (type $generated@@715) $generated@@67)) ($generated@@239 $generated@@714 ($generated@@555 $generated@@715))) (and (= ($generated@@296 ($generated@@424 ($generated@@171 $generated@@204) $generated@@714)) $generated@@714) ($generated@@140 ($generated@@424 ($generated@@171 $generated@@204) $generated@@714) ($generated@@555 $generated@@715))))
 :pattern ( ($generated@@239 $generated@@714 ($generated@@555 $generated@@715)))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (= (type $generated@@716) $generated@@67) (= (type $generated@@717) $generated@@204)) ($generated@@239 $generated@@717 ($generated@@137 $generated@@716))) (and (= ($generated@@296 ($generated@@424 $generated@@81 $generated@@717)) $generated@@717) ($generated@@140 ($generated@@424 $generated@@81 $generated@@717) ($generated@@137 $generated@@716))))
 :pattern ( ($generated@@239 $generated@@717 ($generated@@137 $generated@@716)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (= (type $generated@@718) $generated@@67) (= (type $generated@@719) $generated@@204)) ($generated@@239 $generated@@719 ($generated@@188 $generated@@718))) (and (= ($generated@@296 ($generated@@424 $generated@@81 $generated@@719)) $generated@@719) ($generated@@140 ($generated@@424 $generated@@81 $generated@@719) ($generated@@188 $generated@@718))))
 :pattern ( ($generated@@239 $generated@@719 ($generated@@188 $generated@@718)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (! (let (($generated@@724 (type $generated@@723)))
 (=> (and (and (and (= (type $generated@@720) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@721) $generated@@81)) (= (type $generated@@722) ($generated@@69 $generated@@724))) ($generated@@180 ($generated@@86 $generated@@720 $generated@@721 ($generated@@88 ($generated@@85 $generated@@720 $generated@@721) $generated@@722 $generated@@723)))) ($generated@@161 $generated@@720 ($generated@@86 $generated@@720 $generated@@721 ($generated@@88 ($generated@@85 $generated@@720 $generated@@721) $generated@@722 $generated@@723)))))
 :pattern ( ($generated@@86 $generated@@720 $generated@@721 ($generated@@88 ($generated@@85 $generated@@720 $generated@@721) $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@725) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@726) $generated@@67)) (= (type $generated@@727) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@725 ($generated@@209 $generated@@726) $generated@@727) (forall (($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@728) $generated@@204) (< 0 ($generated ($generated@@85 $generated@@725 $generated@@728)))) ($generated@@270 $generated@@728 $generated@@726 $generated@@727))
 :pattern ( ($generated@@85 $generated@@725 $generated@@728))
))))
 :pattern ( ($generated@@78 $generated@@725 ($generated@@209 $generated@@726) $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (and (= (type $generated@@729) $generated@@195) (= (type $generated@@730) $generated@@67)) (= (type $generated@@731) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@180 $generated@@731) (and ($generated@@193 $generated@@729) (exists (($generated@@732 T@U) ) (!  (and (= (type $generated@@732) $generated@@67) ($generated@@78 $generated@@729 ($generated@@194 $generated@@730 $generated@@732) $generated@@731))
 :pattern ( ($generated@@78 $generated@@729 ($generated@@194 $generated@@730 $generated@@732) $generated@@731))
))))) ($generated@@270 ($generated@@202 $generated@@729) $generated@@730 $generated@@731))
 :pattern ( ($generated@@270 ($generated@@202 $generated@@729) $generated@@730 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (and (= (type $generated@@733) $generated@@195) (= (type $generated@@734) $generated@@67)) (= (type $generated@@735) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@180 $generated@@735) (and ($generated@@193 $generated@@733) (exists (($generated@@736 T@U) ) (!  (and (= (type $generated@@736) $generated@@67) ($generated@@78 $generated@@733 ($generated@@194 $generated@@736 $generated@@734) $generated@@735))
 :pattern ( ($generated@@78 $generated@@733 ($generated@@194 $generated@@736 $generated@@734) $generated@@735))
))))) ($generated@@270 ($generated@@203 $generated@@733) $generated@@734 $generated@@735))
 :pattern ( ($generated@@270 ($generated@@203 $generated@@733) $generated@@734 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ) (! (let (($generated@@740 (type $generated@@738)))
 (=> (and (and (= (type $generated@@737) ($generated@@80 $generated@@740 $generated@@2)) (= (type $generated@@739) $generated@@740)) (not (= $generated@@738 $generated@@739))) (= ($generated ($generated@@85 $generated@@737 $generated@@739)) ($generated ($generated@@85 ($generated@@287 $generated@@737 $generated@@738) $generated@@739)))))
 :pattern ( ($generated@@287 $generated@@737 $generated@@738) ($generated@@85 $generated@@737 $generated@@739))
)))
(assert (forall (($generated@@741 Int) ) (!  (=> (< $generated@@741 0) (= ($generated@@262 $generated@@741) 0))
 :pattern ( ($generated@@262 $generated@@741))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) $generated@@204) (= (type $generated@@743) $generated@@204)) (= ($generated@@238 ($generated@@266 $generated@@742) ($generated@@266 $generated@@743)) ($generated@@266 ($generated@@238 $generated@@742 $generated@@743))))
 :pattern ( ($generated@@238 ($generated@@266 $generated@@742) ($generated@@266 $generated@@743)))
)))
(assert (forall (($generated@@744 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@264 $generated@@744))) ($generated@@266 ($generated@@296 ($generated@@8 $generated@@744))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@264 $generated@@744))))
)))
(assert (forall (($generated@@745 T@U) ) (! (= ($generated@@296 ($generated@@266 $generated@@745)) ($generated@@266 ($generated@@296 $generated@@745)))
 :pattern ( ($generated@@296 ($generated@@266 $generated@@745)))
)))
(assert (forall (($generated@@746 T@U) ) (! (let (($generated@@747 ($generated@@172 (type $generated@@746))))
 (=> (and (= (type $generated@@746) ($generated@@171 $generated@@747)) (= ($generated@@218 $generated@@746) 0)) (= $generated@@746 ($generated@@169 $generated@@747))))
 :pattern ( ($generated@@218 $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ) (! (let (($generated@@751 (type $generated@@749)))
 (=> (and (and (= (type $generated@@748) ($generated@@80 $generated@@751 $generated@@2)) (= (type $generated@@750) $generated@@2)) (<= 0 ($generated $generated@@750))) (= ($generated@@145 ($generated@@86 $generated@@748 $generated@@749 $generated@@750)) (+ (- ($generated@@145 $generated@@748) ($generated ($generated@@85 $generated@@748 $generated@@749))) ($generated $generated@@750)))))
 :pattern ( ($generated@@145 ($generated@@86 $generated@@748 $generated@@749 $generated@@750)))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@752) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@753) $generated@@2)) ($generated@@78 $generated@@753 $generated@@46 $generated@@752))
 :pattern ( ($generated@@78 $generated@@753 $generated@@46 $generated@@752))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (= (type $generated@@754) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@755) $generated@@3)) ($generated@@78 $generated@@755 $generated@@47 $generated@@754))
 :pattern ( ($generated@@78 $generated@@755 $generated@@47 $generated@@754))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (= (type $generated@@756) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@757) $generated@@4)) ($generated@@78 $generated@@757 $generated@@44 $generated@@756))
 :pattern ( ($generated@@78 $generated@@757 $generated@@44 $generated@@756))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@758) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@759) $generated@@502)) ($generated@@78 $generated@@759 $generated@@45 $generated@@758))
 :pattern ( ($generated@@78 $generated@@759 $generated@@45 $generated@@758))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ) (!  (=> (and (= (type $generated@@760) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@761) $generated@@204)) ($generated@@78 $generated@@761 $generated@@48 $generated@@760))
 :pattern ( ($generated@@78 $generated@@761 $generated@@48 $generated@@760))
)))
(assert (forall (($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (= (type $generated@@762) ($generated@@171 $generated@@204)) (= (type $generated@@763) $generated@@67)) (= ($generated@@140 $generated@@762 ($generated@@555 $generated@@763)) (forall (($generated@@764 Int) ) (!  (=> (and (<= 0 $generated@@764) (< $generated@@764 ($generated@@218 $generated@@762))) ($generated@@239 ($generated@@216 $generated@@762 $generated@@764) $generated@@763))
 :pattern ( ($generated@@216 $generated@@762 $generated@@764))
))))
 :pattern ( ($generated@@140 $generated@@762 ($generated@@555 $generated@@763)))
)))
(assert (forall (($generated@@766 T@U) ($generated@@767 Int) ) (!  (=> (= (type $generated@@766) ($generated@@171 $generated@@204)) (=> (and (<= 0 $generated@@767) (< $generated@@767 ($generated@@218 $generated@@766))) (< ($generated@@612 ($generated@@424 $generated@@195 ($generated@@216 $generated@@766 $generated@@767))) ($generated@@765 $generated@@766))))
 :pattern ( ($generated@@612 ($generated@@424 $generated@@195 ($generated@@216 $generated@@766 $generated@@767))))
)))
(assert (forall (($generated@@768 T@U) ($generated@@769 T@U) ($generated@@770 T@U) ) (!  (=> (and (and (and (= (type $generated@@768) ($generated@@322 $generated@@204 $generated@@204)) (= (type $generated@@769) $generated@@67)) (= (type $generated@@770) $generated@@67)) ($generated@@140 $generated@@768 ($generated@@452 $generated@@769 $generated@@770))) (and (and ($generated@@140 ($generated@@320 $generated@@768) ($generated@@252 $generated@@769)) ($generated@@140 ($generated@@375 $generated@@768) ($generated@@252 $generated@@770))) ($generated@@140 ($generated@@423 $generated@@768) ($generated@@252 ($generated@@194 $generated@@769 $generated@@770)))))
 :pattern ( ($generated@@140 $generated@@768 ($generated@@452 $generated@@769 $generated@@770)))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (and (and (= (type $generated@@771) ($generated@@340 $generated@@204 $generated@@204)) (= (type $generated@@772) $generated@@67)) (= (type $generated@@773) $generated@@67)) ($generated@@140 $generated@@771 ($generated@@460 $generated@@772 $generated@@773))) (and (and ($generated@@140 ($generated@@338 $generated@@771) ($generated@@257 $generated@@772)) ($generated@@140 ($generated@@386 $generated@@771) ($generated@@257 $generated@@773))) ($generated@@140 ($generated@@434 $generated@@771) ($generated@@257 ($generated@@194 $generated@@772 $generated@@773)))))
 :pattern ( ($generated@@140 $generated@@771 ($generated@@460 $generated@@772 $generated@@773)))
)))
(assert (forall (($generated@@774 T@U) ) (!  (=> (= (type $generated@@774) $generated@@2) ($generated@@140 $generated@@774 $generated@@46))
 :pattern ( ($generated@@140 $generated@@774 $generated@@46))
)))
(assert (forall (($generated@@775 T@U) ) (!  (=> (= (type $generated@@775) $generated@@3) ($generated@@140 $generated@@775 $generated@@47))
 :pattern ( ($generated@@140 $generated@@775 $generated@@47))
)))
(assert (forall (($generated@@776 T@U) ) (!  (=> (= (type $generated@@776) $generated@@4) ($generated@@140 $generated@@776 $generated@@44))
 :pattern ( ($generated@@140 $generated@@776 $generated@@44))
)))
(assert (forall (($generated@@777 T@U) ) (!  (=> (= (type $generated@@777) $generated@@502) ($generated@@140 $generated@@777 $generated@@45))
 :pattern ( ($generated@@140 $generated@@777 $generated@@45))
)))
(assert (forall (($generated@@778 T@U) ) (!  (=> (= (type $generated@@778) $generated@@204) ($generated@@140 $generated@@778 $generated@@48))
 :pattern ( ($generated@@140 $generated@@778 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@779 () T@U)
(declare-fun $generated@@780 () T@U)
(declare-fun $generated@@781 () T@U)
(declare-fun $generated@@782 () Int)
(declare-fun $generated@@783 () T@U)
(declare-fun $generated@@784 () Int)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () Int)
(declare-fun $generated@@787 () Int)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () T@U)
(declare-fun $generated@@790 (T@U) Bool)
(declare-fun $generated@@791 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@779) ($generated@@636 $generated@@81 $generated@@4)) (= (type $generated@@780) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@781) $generated@@81)) (= (type $generated@@783) ($generated@@69 $generated@@204))) (= (type $generated@@785) ($generated@@69 $generated@@204))) (= (type $generated@@788) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@789) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@792  (=> (= $generated@@779 ($generated@@635 $generated@@138 $generated@@780 $generated@@60 $generated@@781)) (and (=> (= (ControlFlow 0 2) (- 0 16)) (not (= $generated@@781 $generated@@138))) (=> (not (= $generated@@781 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= 0 $generated@@782) (< $generated@@782 ($generated@@136 $generated@@781)))) (=> (and (<= 0 $generated@@782) (< $generated@@782 ($generated@@136 $generated@@781))) (=> (= $generated@@783 ($generated@@398 $generated@@782)) (and (=> (= (ControlFlow 0 2) (- 0 14)) ($generated@@0 ($generated@@634 $generated@@779 $generated@@781 $generated@@783))) (=> ($generated@@0 ($generated@@634 $generated@@779 $generated@@781 $generated@@783)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (not (= $generated@@781 $generated@@138))) (=> (not (= $generated@@781 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= 0 $generated@@784) (< $generated@@784 ($generated@@136 $generated@@781)))) (=> (and (<= 0 $generated@@784) (< $generated@@784 ($generated@@136 $generated@@781))) (=> (= $generated@@785 ($generated@@398 $generated@@784)) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@0 ($generated@@634 $generated@@779 $generated@@781 $generated@@785))) (=> ($generated@@0 ($generated@@634 $generated@@779 $generated@@781 $generated@@785)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (not (= $generated@@781 $generated@@138))) (=> (not (= $generated@@781 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 $generated@@784) (< $generated@@784 ($generated@@136 $generated@@781)))) (=> (and (<= 0 $generated@@784) (< $generated@@784 ($generated@@136 $generated@@781))) (=> (= $generated@@786 ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@780 $generated@@781) ($generated@@398 $generated@@784))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@781 $generated@@138))) (=> (not (= $generated@@781 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 $generated@@782) (< $generated@@782 ($generated@@136 $generated@@781)))) (=> (and (<= 0 $generated@@782) (< $generated@@782 ($generated@@136 $generated@@781))) (=> (= $generated@@787 ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@780 $generated@@781) ($generated@@398 $generated@@782))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (or (not (= $generated@@781 $generated@@781)) (not (= $generated@@784 $generated@@782))) (= ($generated@@296 ($generated@@8 $generated@@787)) ($generated@@296 ($generated@@8 $generated@@786))))) (=> (or (or (not (= $generated@@781 $generated@@781)) (not (= $generated@@784 $generated@@782))) (= ($generated@@296 ($generated@@8 $generated@@787)) ($generated@@296 ($generated@@8 $generated@@786)))) (=> (and (and (= $generated@@788 ($generated@@86 $generated@@780 $generated@@781 ($generated@@88 ($generated@@85 $generated@@780 $generated@@781) $generated@@783 ($generated@@296 ($generated@@8 $generated@@786))))) ($generated@@180 $generated@@788)) (and (= $generated@@789 ($generated@@86 $generated@@788 $generated@@781 ($generated@@88 ($generated@@85 $generated@@788 $generated@@781) $generated@@785 ($generated@@296 ($generated@@8 $generated@@787))))) ($generated@@180 $generated@@789))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@408 ($generated@@168 ($generated@@397 $generated@@780 $generated@@781)) ($generated@@168 ($generated@@397 $generated@@789 $generated@@781)))) (=> ($generated@@408 ($generated@@168 ($generated@@397 $generated@@780 $generated@@781)) ($generated@@168 ($generated@@397 $generated@@789 $generated@@781))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@789 $generated@@781) ($generated@@398 $generated@@784)))) ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@780 $generated@@781) ($generated@@398 $generated@@782)))))) (=> (= ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@789 $generated@@781) ($generated@@398 $generated@@784)))) ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@780 $generated@@781) ($generated@@398 $generated@@782))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@789 $generated@@781) ($generated@@398 $generated@@782)))) ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@780 $generated@@781) ($generated@@398 $generated@@784)))))) (=> (= ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@789 $generated@@781) ($generated@@398 $generated@@782)))) ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@780 $generated@@781) ($generated@@398 $generated@@784))))) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@793 Int) ) (!  (=> true (=> (and (and (<= ($generated@@264 0) $generated@@793) (< $generated@@793 ($generated@@136 $generated@@781))) (not (or (= $generated@@793 $generated@@782) (= $generated@@793 $generated@@784)))) (= ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@789 $generated@@781) ($generated@@398 $generated@@793)))) ($generated ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@780 $generated@@781) ($generated@@398 $generated@@793)))))))
 :pattern ( ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@780 $generated@@781) ($generated@@398 $generated@@793))))
 :pattern ( ($generated@@424 $generated@@2 ($generated@@87 ($generated@@85 $generated@@789 $generated@@781) ($generated@@398 $generated@@793))))
)))))))))))))))))))))))))))))))))))))))
(let (($generated@@794  (=> (and ($generated@@180 $generated@@780) ($generated@@790 $generated@@780)) (=> (and (and (and ($generated@@140 $generated@@781 ($generated@@188 $generated@@46)) ($generated@@78 $generated@@781 ($generated@@188 $generated@@46) $generated@@780)) (= 1 $generated@@791)) (and (and (<= ($generated@@264 0) $generated@@782) (< $generated@@782 $generated@@784)) (and (< $generated@@784 ($generated@@136 $generated@@781)) (= (ControlFlow 0 17) 2)))) $generated@@792))))
$generated@@794)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@T) T@U)
(declare-fun $generated@@154 (T@T) T@U)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@190 (T@U Int) T@U)
(declare-fun $generated@@191 (T@U T@U) T@U)
(declare-fun $generated@@192 (T@U) Int)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@210 (T@U Int) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U Int) T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 (Int) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@T T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@U T@U) T@U)
(declare-fun $generated@@486 (T@T) T@U)
(declare-fun $generated@@510 () T@T)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@599 (T@U) Int)
(declare-fun $generated@@618 (T@U T@U T@U) T@U)
(declare-fun $generated@@619 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@620 (T@T T@T) T@T)
(declare-fun $generated@@621 (T@T) T@T)
(declare-fun $generated@@622 (T@T) T@T)
(declare-fun $generated@@623 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@678 (T@U) T@U)
(declare-fun $generated@@679 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert  (and (and (and (and (forall (($generated@@157 T@T) ) (= ($generated@@1 ($generated@@155 $generated@@157)) 14)) (forall (($generated@@158 T@T) ) (! (= ($generated@@156 ($generated@@155 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@156 (type $generated@@159))))
(= (type ($generated@@152 $generated@@159)) ($generated@@80 $generated@@160 $generated@@2)))
 :pattern ( ($generated@@152 $generated@@159))
))) (forall (($generated@@161 T@T) ) (! (= (type ($generated@@153 $generated@@161)) ($generated@@155 $generated@@161))
 :pattern ( ($generated@@153 $generated@@161))
))) (forall (($generated@@162 T@T) ) (! (= (type ($generated@@154 $generated@@162)) ($generated@@80 $generated@@162 $generated@@2))
 :pattern ( ($generated@@154 $generated@@162))
))))
(assert (forall (($generated@@163 T@T) ) (= ($generated@@152 ($generated@@153 $generated@@163)) ($generated@@154 $generated@@163))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@167) $generated@@81)) (and (and ($generated@@164 $generated@@166) (and (not (= $generated@@167 $generated@@138)) (= ($generated@@139 $generated@@167) ($generated@@137 $generated@@165)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@166 $generated@@167) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@167)) $generated@@46 $generated@@166))
 :pattern ( ($generated@@136 $generated@@167) ($generated@@87 ($generated@@85 $generated@@166 $generated@@167) $generated@@60) ($generated@@137 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@140 $generated@@168 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@168 ($generated@@79 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@67)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@67) (= (type $generated@@172) $generated@@81)) (= (type $generated@@173) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@78 $generated@@172 ($generated@@137 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@78 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 15) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@67)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@67) (= (type $generated@@180) $generated@@67)) (= (type $generated@@181) $generated@@176)) ($generated@@140 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@140 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (and (= ($generated@@1 $generated@@185) 16) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@186))
))) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@185)
 :pattern ( ($generated@@184 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@176) (= (type $generated@@189) $generated@@176)) true) (= ($generated@@182 $generated@@188 $generated@@189)  (and (= ($generated@@183 $generated@@188) ($generated@@183 $generated@@189)) (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)))))
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
)))
(assert  (and (forall (($generated@@193 T@U) ($generated@@194 Int) ) (! (let (($generated@@195 ($generated@@156 (type $generated@@193))))
(= (type ($generated@@190 $generated@@193 $generated@@194)) ($generated@@155 $generated@@195)))
 :pattern ( ($generated@@190 $generated@@193 $generated@@194))
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(= (type ($generated@@191 $generated@@196 $generated@@197)) ($generated@@155 $generated@@198)))
 :pattern ( ($generated@@191 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Int) ) (! (let (($generated@@202 (type $generated@@200)))
 (=> (= (type $generated@@199) ($generated@@155 $generated@@202)) (=> (and (<= 0 $generated@@201) (<= $generated@@201 ($generated@@192 $generated@@199))) (= ($generated@@190 ($generated@@191 $generated@@199 $generated@@200) $generated@@201) ($generated@@191 ($generated@@190 $generated@@199 $generated@@201) $generated@@200)))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@199 $generated@@200) $generated@@201))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@205)) $generated@@67)
 :pattern ( ($generated@@203 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (= (type $generated@@206) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@207) $generated@@67)) ($generated@@140 $generated@@206 ($generated@@203 $generated@@207))) ($generated@@204 $generated@@206))
 :pattern ( ($generated@@140 $generated@@206 ($generated@@203 $generated@@207)))
)))
(assert (forall (($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@156 (type $generated@@208))))
 (=> (= (type $generated@@208) ($generated@@155 $generated@@209)) ($generated@@204 ($generated@@152 $generated@@208))))
 :pattern ( ($generated@@152 $generated@@208))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 Int) ) (! (let (($generated@@213 ($generated@@156 (type $generated@@211))))
(= (type ($generated@@210 $generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@210 $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
 (=> (= (type $generated@@214) ($generated@@155 $generated@@216)) (= (exists (($generated@@217 Int) ) (!  (and (and (<= 0 $generated@@217) (< $generated@@217 ($generated@@192 $generated@@214))) (= $generated@@215 ($generated@@210 $generated@@214 $generated@@217)))
 :pattern ( ($generated@@210 $generated@@214 $generated@@217))
)) (< 0 ($generated ($generated@@85 ($generated@@152 $generated@@214) $generated@@215))))))
 :pattern ( ($generated@@85 ($generated@@152 $generated@@214) $generated@@215))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@218 $generated@@220 $generated@@221)) $generated@@176)
 :pattern ( ($generated@@218 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@67) (= (type $generated@@223) $generated@@67)) (= (type $generated@@224) $generated@@185)) (= (type $generated@@225) $generated@@185)) (= ($generated@@140 ($generated@@218 $generated@@224 $generated@@225) ($generated@@175 $generated@@222 $generated@@223))  (and ($generated@@219 $generated@@224 $generated@@222) ($generated@@219 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@140 ($generated@@218 $generated@@224 $generated@@225) ($generated@@175 $generated@@222 $generated@@223)))
)))
(assert  (and (and (forall (($generated@@229 T@U) ($generated@@230 Int) ) (! (let (($generated@@231 ($generated@@156 (type $generated@@229))))
(= (type ($generated@@226 $generated@@229 $generated@@230)) ($generated@@155 $generated@@231)))
 :pattern ( ($generated@@226 $generated@@229 $generated@@230))
)) (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@227 $generated@@232 $generated@@233)) ($generated@@155 $generated@@185))
 :pattern ( ($generated@@227 $generated@@232 $generated@@233))
))) (forall (($generated@@234 Int) ) (! (= (type ($generated@@228 $generated@@234)) ($generated@@69 $generated@@185))
 :pattern ( ($generated@@228 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Int) ($generated@@238 Int) ) (!  (=> (and (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@236) $generated@@81)) (=> (and (and (= (+ $generated@@237 1) $generated@@238) (<= 0 $generated@@237)) (<= $generated@@238 ($generated@@136 $generated@@236))) (= ($generated@@226 ($generated@@227 $generated@@235 $generated@@236) $generated@@238) ($generated@@191 ($generated@@226 ($generated@@227 $generated@@235 $generated@@236) $generated@@237) ($generated@@87 ($generated@@85 $generated@@235 $generated@@236) ($generated@@228 $generated@@237))))))
 :pattern ( ($generated@@226 ($generated@@227 $generated@@235 $generated@@236) $generated@@237) ($generated@@226 ($generated@@227 $generated@@235 $generated@@236) $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@176) (= (type $generated@@240) $generated@@176)) (= ($generated@@182 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@182 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 Int) ) (! (let (($generated@@243 ($generated@@156 (type $generated@@241))))
 (=> (and (= (type $generated@@241) ($generated@@155 $generated@@243)) (= $generated@@242 0)) (= ($generated@@190 $generated@@241 $generated@@242) $generated@@241)))
 :pattern ( ($generated@@190 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@67)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@247) $generated@@67)) (= ($generated@@140 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@185) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@219 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@140 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@185) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@219 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@67)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) ($generated@@155 $generated@@185)) (= (type $generated@@263) $generated@@185)) (= (type $generated@@264) $generated@@67)) (and ($generated@@140 $generated@@262 ($generated@@260 $generated@@264)) ($generated@@219 $generated@@263 $generated@@264))) ($generated@@140 ($generated@@191 $generated@@262 $generated@@263) ($generated@@260 $generated@@264)))
 :pattern ( ($generated@@140 ($generated@@191 $generated@@262 $generated@@263) ($generated@@260 $generated@@264)))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 Int) ($generated@@267 Int) ) (! (let (($generated@@268 ($generated@@156 (type $generated@@265))))
 (=> (= (type $generated@@265) ($generated@@155 $generated@@268)) (=> (and (and (<= 0 $generated@@267) (< $generated@@267 $generated@@266)) (< $generated@@267 ($generated@@192 $generated@@265))) (= ($generated@@210 ($generated@@226 $generated@@265 $generated@@266) $generated@@267) ($generated@@210 $generated@@265 $generated@@267)))))
 :weight 25
 :pattern ( ($generated@@210 ($generated@@226 $generated@@265 $generated@@266) $generated@@267))
 :pattern ( ($generated@@210 $generated@@265 $generated@@267) ($generated@@226 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@67) (= (type $generated@@271) $generated@@67)) (= (type $generated@@272) $generated@@185)) (= (type $generated@@273) $generated@@185)) (= (type $generated@@274) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@164 $generated@@274)) (= ($generated@@78 ($generated@@218 $generated@@272 $generated@@273) ($generated@@175 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@78 ($generated@@218 $generated@@272 $generated@@273) ($generated@@175 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 Int) ) (! (let (($generated@@277 ($generated@@156 (type $generated@@275))))
 (=> (= (type $generated@@275) ($generated@@155 $generated@@277)) (=> (and (<= 0 $generated@@276) (<= $generated@@276 ($generated@@192 $generated@@275))) (= ($generated@@192 ($generated@@190 $generated@@275 $generated@@276)) (- ($generated@@192 $generated@@275) $generated@@276)))))
 :pattern ( ($generated@@192 ($generated@@190 $generated@@275 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@71)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@176) (= ($generated@@174 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@63)))
 :pattern ( ($generated@@174 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 Int) ) (! (let (($generated@@284 ($generated@@156 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@155 $generated@@284)) (=> (and (<= 0 $generated@@283) (< $generated@@283 ($generated@@192 $generated@@282))) (< ($generated@@281 ($generated@@226 $generated@@282 $generated@@283)) ($generated@@281 $generated@@282)))))
 :pattern ( ($generated@@281 ($generated@@226 $generated@@282 $generated@@283)))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@176) ($generated@@174 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@185) (= (type $generated@@287) $generated@@185)) (= $generated@@285 ($generated@@218 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@174 $generated@@285))
)))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@192 ($generated@@153 $generated@@288)) 0)
 :pattern ( ($generated@@153 $generated@@288))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 (type $generated@@292)))
(= (type ($generated@@290 $generated@@291 $generated@@292)) ($generated@@80 $generated@@293 $generated@@2)))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
 (=> (= (type $generated@@294) ($generated@@80 $generated@@296 $generated@@2)) (= ($generated@@289 ($generated@@290 $generated@@294 $generated@@295)) (+ ($generated@@289 $generated@@294) 1))))
 :pattern ( ($generated@@289 ($generated@@290 $generated@@294 $generated@@295)))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 Int) ) (! (let (($generated@@299 ($generated@@156 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@155 $generated@@299)) (=> (and (< 0 $generated@@298) (<= $generated@@298 ($generated@@192 $generated@@297))) (< ($generated@@281 ($generated@@190 $generated@@297 $generated@@298)) ($generated@@281 $generated@@297)))))
 :pattern ( ($generated@@281 ($generated@@190 $generated@@297 $generated@@298)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 (type $generated@@301)))
 (=> (= (type $generated@@300) ($generated@@155 $generated@@302)) (= ($generated@@192 ($generated@@191 $generated@@300 $generated@@301)) (+ 1 ($generated@@192 $generated@@300)))))
 :pattern ( ($generated@@191 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@67) (= (type $generated@@304) $generated@@81)) (= ($generated@@140 $generated@@304 ($generated@@169 $generated@@303))  (and ($generated@@140 $generated@@304 ($generated@@137 $generated@@303)) (not (= $generated@@304 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@304 ($generated@@169 $generated@@303)))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@185)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@67) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@269 ($generated@@305 $generated@@307) $generated@@308 $generated@@309) ($generated@@78 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@269 ($generated@@305 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@311) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@312) $generated@@185)) (= (type $generated@@313) $generated@@67)) ($generated@@145 $generated@@310 $generated@@311)) ($generated@@269 $generated@@312 $generated@@313 $generated@@310)) ($generated@@269 $generated@@312 $generated@@313 $generated@@311))
 :pattern ( ($generated@@145 $generated@@310 $generated@@311) ($generated@@269 $generated@@312 $generated@@313 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@314) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@315) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@317) $generated@@67)) ($generated@@145 $generated@@314 $generated@@315)) ($generated@@78 $generated@@316 $generated@@317 $generated@@314)) ($generated@@78 $generated@@316 $generated@@317 $generated@@315))
 :pattern ( ($generated@@145 $generated@@314 $generated@@315) ($generated@@78 $generated@@316 $generated@@317 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 Int) ($generated@@320 Int) ) (! (let (($generated@@321 ($generated@@156 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@155 $generated@@321)) (=> (and (and (<= 0 $generated@@319) (<= 0 $generated@@320)) (< $generated@@320 (- ($generated@@192 $generated@@318) $generated@@319))) (= ($generated@@210 ($generated@@190 $generated@@318 $generated@@319) $generated@@320) ($generated@@210 $generated@@318 (+ $generated@@320 $generated@@319))))))
 :weight 25
 :pattern ( ($generated@@210 ($generated@@190 $generated@@318 $generated@@319) $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@83 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@80 $generated@@323 $generated@@2)) (and (= (= ($generated@@289 $generated@@322) 0) (= $generated@@322 ($generated@@154 $generated@@323))) (=> (not (= ($generated@@289 $generated@@322) 0)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) (< 0 ($generated ($generated@@85 $generated@@322 $generated@@324))))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@289 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@72)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@327)) $generated@@61) (= ($generated@@325 ($generated@@137 $generated@@327)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@67) (and (= ($generated@@76 ($generated@@169 $generated@@328)) $generated@@62) (= ($generated@@325 ($generated@@169 $generated@@328)) $generated@@65)))
 :pattern ( ($generated@@169 $generated@@328))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 17)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@80 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@85 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@85 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 18)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@83 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@80 $generated@@366 $generated@@2)) (= ($generated@@204 $generated@@365) (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@366) (and (<= 0 ($generated ($generated@@85 $generated@@365 $generated@@367))) (<= ($generated ($generated@@85 $generated@@365 $generated@@367)) ($generated@@289 $generated@@365))))
 :pattern ( ($generated@@85 $generated@@365 $generated@@367))
)))))
 :pattern ( ($generated@@204 $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@67) (= (type $generated@@369) $generated@@81)) (= ($generated@@140 $generated@@369 ($generated@@137 $generated@@368))  (or (= $generated@@369 $generated@@138) (= ($generated@@139 $generated@@369) ($generated@@137 $generated@@368)))))
 :pattern ( ($generated@@140 $generated@@369 ($generated@@137 $generated@@368)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
 (=> (= (type $generated@@370) ($generated@@80 $generated@@372 $generated@@2)) (= ($generated ($generated@@85 ($generated@@290 $generated@@370 $generated@@371) $generated@@371)) (+ ($generated ($generated@@85 $generated@@370 $generated@@371)) 1))))
 :pattern ( ($generated@@290 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 Int) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
 (=> (= (type $generated@@373) ($generated@@155 $generated@@376)) (and (=> (= $generated@@374 ($generated@@192 $generated@@373)) (= ($generated@@210 ($generated@@191 $generated@@373 $generated@@375) $generated@@374) $generated@@375)) (=> (not (= $generated@@374 ($generated@@192 $generated@@373))) (= ($generated@@210 ($generated@@191 $generated@@373 $generated@@375) $generated@@374) ($generated@@210 $generated@@373 $generated@@374))))))
 :pattern ( ($generated@@210 ($generated@@191 $generated@@373 $generated@@375) $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@378)))
 (=> (and (and (= (type $generated@@377) ($generated@@80 $generated@@380 $generated@@2)) (= (type $generated@@379) $generated@@380)) (< 0 ($generated ($generated@@85 $generated@@377 $generated@@379)))) (< 0 ($generated ($generated@@85 ($generated@@290 $generated@@377 $generated@@378) $generated@@379)))))
 :pattern ( ($generated@@290 $generated@@377 $generated@@378) ($generated@@85 $generated@@377 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@333 (type $generated@@381))))
(let (($generated@@383 ($generated@@332 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@331 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@330 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@329 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@333 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@80 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@333 (type $generated@@388))))
(let (($generated@@390 ($generated@@332 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@331 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@330 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@85 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@351 (type $generated@@392))))
(let (($generated@@394 ($generated@@350 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@349 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@348 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@347 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@351 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@80 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@351 (type $generated@@399))))
(let (($generated@@401 ($generated@@350 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@349 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@348 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@85 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@404)))
 (=> (and (= (type $generated@@403) ($generated@@80 $generated@@406 $generated@@2)) (= (type $generated@@405) $generated@@406)) (= (< 0 ($generated ($generated@@85 ($generated@@290 $generated@@403 $generated@@404) $generated@@405)))  (or (= $generated@@405 $generated@@404) (< 0 ($generated ($generated@@85 $generated@@403 $generated@@405)))))))
 :pattern ( ($generated@@85 ($generated@@290 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@408) $generated@@81)) (forall (($generated@@409 Int) ) (!  (=> (and (<= 0 $generated@@409) (< $generated@@409 ($generated@@192 ($generated@@227 $generated@@407 $generated@@408)))) (= ($generated@@210 ($generated@@227 $generated@@407 $generated@@408) $generated@@409) ($generated@@87 ($generated@@85 $generated@@407 $generated@@408) ($generated@@228 $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@407 $generated@@408) ($generated@@228 $generated@@409)))
 :pattern ( ($generated@@210 ($generated@@227 $generated@@407 $generated@@408) $generated@@409))
)))
 :pattern ( ($generated@@227 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@411) $generated@@67)) (= ($generated@@140 $generated@@410 ($generated@@203 $generated@@411)) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@185) (< 0 ($generated ($generated@@85 $generated@@410 $generated@@412)))) ($generated@@219 $generated@@412 $generated@@411))
 :pattern ( ($generated@@85 $generated@@410 $generated@@412))
))))
 :pattern ( ($generated@@140 $generated@@410 ($generated@@203 $generated@@411)))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@83 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@80 $generated@@416 $generated@@2)) (= (type $generated@@415) ($generated@@80 $generated@@416 $generated@@2))) (= ($generated@@413 $generated@@414 $generated@@415) (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@416) (= ($generated ($generated@@85 $generated@@414 $generated@@417)) ($generated ($generated@@85 $generated@@415 $generated@@417))))
 :pattern ( ($generated@@85 $generated@@414 $generated@@417))
 :pattern ( ($generated@@85 $generated@@415 $generated@@417))
)))))
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@244 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@185) ($generated@@0 ($generated@@85 $generated@@418 $generated@@421))) ($generated@@269 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@85 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@244 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@80 $generated@@185 $generated@@4)) (= (type $generated@@423) $generated@@67)) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@422 ($generated@@249 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@185) ($generated@@0 ($generated@@85 $generated@@422 $generated@@425))) ($generated@@269 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@85 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@78 $generated@@422 ($generated@@249 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@85 ($generated@@154 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@85 ($generated@@154 $generated@@427) $generated@@426)))
)))
(assert  (and (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@428 $generated@@431)) ($generated@@80 $generated@@185 $generated@@4))
 :pattern ( ($generated@@428 $generated@@431))
)) (forall (($generated@@432 T@T) ($generated@@433 T@U) ) (! (= (type ($generated@@429 $generated@@432 $generated@@433)) $generated@@432)
 :pattern ( ($generated@@429 $generated@@432 $generated@@433))
))) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@333 (type $generated@@434))))
(let (($generated@@436 ($generated@@332 (type $generated@@434))))
(= (type ($generated@@430 $generated@@434)) ($generated@@80 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@430 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@331 $generated@@185 $generated@@185)) (= (type $generated@@438) $generated@@185)) (= ($generated@@0 ($generated@@85 ($generated@@428 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@85 ($generated@@329 $generated@@437) ($generated@@183 ($generated@@429 $generated@@176 $generated@@438)))) (= ($generated@@85 ($generated@@430 $generated@@437) ($generated@@183 ($generated@@429 $generated@@176 $generated@@438))) ($generated@@184 ($generated@@429 $generated@@176 $generated@@438))))))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@437) $generated@@438))
)))
(assert  (and (forall (($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@441)) ($generated@@80 $generated@@185 $generated@@4))
 :pattern ( ($generated@@439 $generated@@441))
)) (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@351 (type $generated@@442))))
(let (($generated@@444 ($generated@@350 (type $generated@@442))))
(= (type ($generated@@440 $generated@@442)) ($generated@@80 $generated@@444 $generated@@443))))
 :pattern ( ($generated@@440 $generated@@442))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@349 $generated@@185 $generated@@185)) (= (type $generated@@446) $generated@@185)) (= ($generated@@0 ($generated@@85 ($generated@@439 $generated@@445) $generated@@446))  (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@445) ($generated@@183 ($generated@@429 $generated@@176 $generated@@446)))) (= ($generated@@85 ($generated@@440 $generated@@445) ($generated@@183 ($generated@@429 $generated@@176 $generated@@446))) ($generated@@184 ($generated@@429 $generated@@176 $generated@@446))))))
 :pattern ( ($generated@@85 ($generated@@439 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@332 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@331 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@85 ($generated@@385 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@85 ($generated@@329 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@85 ($generated@@430 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@447) $generated@@451))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@350 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@349 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@85 ($generated@@396 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@85 ($generated@@440 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@452) $generated@@456))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@331 $generated@@185 $generated@@185)) (= (type $generated@@461) $generated@@67)) (= (type $generated@@462) $generated@@67)) (= (type $generated@@463) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@460) $generated@@464))) (and ($generated@@269 ($generated@@85 ($generated@@430 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@269 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@460) $generated@@464))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@78 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (= (type $generated@@468) ($generated@@349 $generated@@185 $generated@@185)) (= (type $generated@@469) $generated@@67)) (= (type $generated@@470) $generated@@67)) (= (type $generated@@471) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@468) $generated@@472))) (and ($generated@@269 ($generated@@85 ($generated@@440 $generated@@468) $generated@@472) $generated@@470 $generated@@471) ($generated@@269 $generated@@472 $generated@@469 $generated@@471)))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@468) $generated@@472))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@468) $generated@@472))
))))
 :pattern ( ($generated@@78 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@83 (type $generated@@473))))
 (=> (and (and (= (type $generated@@473) ($generated@@80 $generated@@475 $generated@@2)) (= (type $generated@@474) ($generated@@80 $generated@@475 $generated@@2))) ($generated@@413 $generated@@473 $generated@@474)) (= $generated@@473 $generated@@474)))
 :pattern ( ($generated@@413 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 Int) ) (! (let (($generated@@478 ($generated@@156 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@155 $generated@@478)) (=> (and (<= 0 $generated@@477) (<= $generated@@477 ($generated@@192 $generated@@476))) (= ($generated@@192 ($generated@@226 $generated@@476 $generated@@477)) $generated@@477))))
 :pattern ( ($generated@@192 ($generated@@226 $generated@@476 $generated@@477)))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@479) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@480) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@481) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@479 $generated@@481))) (and ($generated@@145 $generated@@479 $generated@@480) ($generated@@145 $generated@@480 $generated@@481))) ($generated@@145 $generated@@479 $generated@@481))
 :pattern ( ($generated@@145 $generated@@479 $generated@@480) ($generated@@145 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 Int) ) (!  (=> (and (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@484) $generated@@81)) (=> (and (and (and ($generated@@164 $generated@@483) (and (not (= $generated@@484 $generated@@138)) (= ($generated@@139 $generated@@484) ($generated@@137 $generated@@482)))) (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@136 $generated@@484)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@483 $generated@@484) $generated@@60))) ($generated@@269 ($generated@@87 ($generated@@85 $generated@@483 $generated@@484) ($generated@@228 $generated@@485)) $generated@@482 $generated@@483)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@483 $generated@@484) ($generated@@228 $generated@@485)) ($generated@@137 $generated@@482))
)))
(assert (forall (($generated@@487 T@T) ) (! (= (type ($generated@@486 $generated@@487)) ($generated@@80 $generated@@487 $generated@@4))
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@351 (type $generated@@488))))
(let (($generated@@490 ($generated@@350 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@349 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@348 $generated@@490 $generated@@489)) (= ($generated@@347 $generated@@488) ($generated@@486 $generated@@490))))))
 :pattern ( ($generated@@347 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@351 (type $generated@@491))))
(let (($generated@@493 ($generated@@350 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@349 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@348 $generated@@493 $generated@@492)) (= ($generated@@396 $generated@@491) ($generated@@486 $generated@@492))))))
 :pattern ( ($generated@@396 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@351 (type $generated@@494))))
(let (($generated@@496 ($generated@@350 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@349 $generated@@496 $generated@@495)) (= (= $generated@@494 ($generated@@348 $generated@@496 $generated@@495)) (= ($generated@@439 $generated@@494) ($generated@@486 $generated@@185))))))
 :pattern ( ($generated@@439 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@333 (type $generated@@497))))
(let (($generated@@499 ($generated@@332 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@331 $generated@@499 $generated@@498)) (or (= $generated@@497 ($generated@@330 $generated@@499 $generated@@498)) (exists (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (and (and (= (type $generated@@500) $generated@@185) (= (type $generated@@501) $generated@@185)) ($generated@@0 ($generated@@85 ($generated@@428 $generated@@497) ($generated@@305 ($generated@@218 $generated@@500 $generated@@501)))))
 :no-pattern (type $generated@@500)
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@428 $generated@@497))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@351 (type $generated@@502))))
(let (($generated@@504 ($generated@@350 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@349 $generated@@504 $generated@@503)) (or (= $generated@@502 ($generated@@348 $generated@@504 $generated@@503)) (exists (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (and (and (= (type $generated@@505) $generated@@185) (= (type $generated@@506) $generated@@185)) ($generated@@0 ($generated@@85 ($generated@@439 $generated@@502) ($generated@@305 ($generated@@218 $generated@@505 $generated@@506)))))
 :no-pattern (type $generated@@505)
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
))))))
 :pattern ( ($generated@@439 $generated@@502))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@185) ($generated@@219 $generated@@507 $generated@@46)) (and (= ($generated@@305 ($generated@@429 $generated@@2 $generated@@507)) $generated@@507) ($generated@@140 ($generated@@429 $generated@@2 $generated@@507) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@507 $generated@@46))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@185) ($generated@@219 $generated@@508 $generated@@47)) (and (= ($generated@@305 ($generated@@429 $generated@@3 $generated@@508)) $generated@@508) ($generated@@140 ($generated@@429 $generated@@3 $generated@@508) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@508 $generated@@47))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@185) ($generated@@219 $generated@@509 $generated@@44)) (and (= ($generated@@305 ($generated@@429 $generated@@4 $generated@@509)) $generated@@509) ($generated@@140 ($generated@@429 $generated@@4 $generated@@509) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@509 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@510) 19))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@185) ($generated@@219 $generated@@511 $generated@@45)) (and (= ($generated@@305 ($generated@@429 $generated@@510 $generated@@511)) $generated@@511) ($generated@@140 ($generated@@429 $generated@@510 $generated@@511) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@511 $generated@@45))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@219 ($generated@@305 $generated@@512) $generated@@513) ($generated@@140 $generated@@512 $generated@@513)))
 :pattern ( ($generated@@219 ($generated@@305 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@81) (<= 0 ($generated@@136 $generated@@514)))
 :no-pattern (type $generated@@514)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@83 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@80 $generated@@516 $generated@@2)) (<= 0 ($generated@@289 $generated@@515))))
 :pattern ( ($generated@@289 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@156 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@155 $generated@@518)) (<= 0 ($generated@@192 $generated@@517))))
 :pattern ( ($generated@@192 $generated@@517))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) $generated@@67)) (= ($generated@@519 ($generated@@457 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@457 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (= ($generated@@523 ($generated@@457 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@457 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (= ($generated@@76 ($generated@@457 $generated@@527 $generated@@528)) $generated@@58))
 :pattern ( ($generated@@457 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@67) (= (type $generated@@532) $generated@@67)) (= ($generated@@529 ($generated@@465 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@465 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@67)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= ($generated@@533 ($generated@@465 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@465 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (= ($generated@@76 ($generated@@465 $generated@@537 $generated@@538)) $generated@@59))
 :pattern ( ($generated@@465 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@185) (= (type $generated@@540) $generated@@185)) (= ($generated@@278 ($generated@@218 $generated@@539 $generated@@540)) $generated@@63))
 :pattern ( ($generated@@218 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@67) (= (type $generated@@544) $generated@@67)) (= ($generated@@541 ($generated@@175 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@175 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@67)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@67) (= (type $generated@@548) $generated@@67)) (= ($generated@@545 ($generated@@175 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@175 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@185) (= (type $generated@@550) $generated@@185)) (= ($generated@@183 ($generated@@218 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@218 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@185) (= (type $generated@@552) $generated@@185)) (= ($generated@@184 ($generated@@218 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@218 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@155 $generated@@185)) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@553 ($generated@@260 $generated@@554) $generated@@555) (forall (($generated@@556 Int) ) (!  (=> (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@192 $generated@@553))) ($generated@@269 ($generated@@210 $generated@@553 $generated@@556) $generated@@554 $generated@@555))
 :pattern ( ($generated@@210 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@78 $generated@@553 ($generated@@260 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@557 ($generated@@79 $generated@@558)) $generated@@558)
 :pattern ( ($generated@@79 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@67)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@67) (= ($generated@@559 ($generated@@244 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@244 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@67) (= ($generated@@76 ($generated@@244 $generated@@562)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@67)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@67) (= ($generated@@563 ($generated@@249 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@249 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@67) (= ($generated@@76 ($generated@@249 $generated@@566)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@67)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@67) (= ($generated@@567 ($generated@@203 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@203 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@67) (= ($generated@@76 ($generated@@203 $generated@@570)) $generated@@56))
 :pattern ( ($generated@@203 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@67)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@67) (= ($generated@@571 ($generated@@260 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@260 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@67) (= ($generated@@76 ($generated@@260 $generated@@574)) $generated@@57))
 :pattern ( ($generated@@260 $generated@@574))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@75 ($generated@@228 $generated@@575)) 1)
 :pattern ( ($generated@@228 $generated@@575))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@576 ($generated@@228 $generated@@577)) $generated@@577)
 :pattern ( ($generated@@228 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@67)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@67) (= ($generated@@578 ($generated@@137 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@137 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@67)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@67) (= ($generated@@581 ($generated@@169 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@169 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
(= ($generated@@429 $generated@@585 ($generated@@305 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@305 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@331 $generated@@185 $generated@@185)) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) $generated@@67)) (= ($generated@@140 $generated@@586 ($generated@@457 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@586) $generated@@589))) (and ($generated@@219 ($generated@@85 ($generated@@430 $generated@@586) $generated@@589) $generated@@588) ($generated@@219 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@586) $generated@@589))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@140 $generated@@586 ($generated@@457 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@349 $generated@@185 $generated@@185)) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) (= ($generated@@140 $generated@@590 ($generated@@465 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@185) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@590) $generated@@593))) (and ($generated@@219 ($generated@@85 ($generated@@440 $generated@@590) $generated@@593) $generated@@592) ($generated@@219 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@590) $generated@@593))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@140 $generated@@590 ($generated@@465 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@67) (= (type $generated@@595) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@596) $generated@@81)) (and (and ($generated@@164 $generated@@595) (and (not (= $generated@@596 $generated@@138)) (= ($generated@@139 $generated@@596) ($generated@@137 $generated@@594)))) (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@136 $generated@@596))))) ($generated@@219 ($generated@@87 ($generated@@85 $generated@@595 $generated@@596) ($generated@@228 $generated@@597)) $generated@@594))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@595 $generated@@596) ($generated@@228 $generated@@597)) ($generated@@137 $generated@@594))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@185) (= (type $generated@@601) $generated@@185)) (< ($generated@@598 $generated@@600) ($generated@@599 ($generated@@218 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@218 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@185) (= (type $generated@@603) $generated@@185)) (< ($generated@@598 $generated@@603) ($generated@@599 ($generated@@218 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@218 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@185) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) $generated@@67)) ($generated@@219 $generated@@604 ($generated@@457 $generated@@605 $generated@@606))) (and (= ($generated@@305 ($generated@@429 ($generated@@331 $generated@@185 $generated@@185) $generated@@604)) $generated@@604) ($generated@@140 ($generated@@429 ($generated@@331 $generated@@185 $generated@@185) $generated@@604) ($generated@@457 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@219 $generated@@604 ($generated@@457 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@185) (= (type $generated@@608) $generated@@67)) (= (type $generated@@609) $generated@@67)) ($generated@@219 $generated@@607 ($generated@@465 $generated@@608 $generated@@609))) (and (= ($generated@@305 ($generated@@429 ($generated@@349 $generated@@185 $generated@@185) $generated@@607)) $generated@@607) ($generated@@140 ($generated@@429 ($generated@@349 $generated@@185 $generated@@185) $generated@@607) ($generated@@465 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@219 $generated@@607 ($generated@@465 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@67) (= (type $generated@@611) $generated@@67)) (= (type $generated@@612) $generated@@185)) ($generated@@219 $generated@@612 ($generated@@175 $generated@@610 $generated@@611))) (and (= ($generated@@305 ($generated@@429 $generated@@176 $generated@@612)) $generated@@612) ($generated@@140 ($generated@@429 $generated@@176 $generated@@612) ($generated@@175 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@219 $generated@@612 ($generated@@175 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@613)))
 (not ($generated@@0 ($generated@@85 ($generated@@486 $generated@@614) $generated@@613))))
 :pattern ( (let (($generated@@614 (type $generated@@613)))
($generated@@85 ($generated@@486 $generated@@614) $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@617) $generated@@81)) (=> (and (and (and ($generated@@164 $generated@@615) ($generated@@164 $generated@@616)) ($generated@@145 $generated@@615 $generated@@616)) (= ($generated@@85 $generated@@615 $generated@@617) ($generated@@85 $generated@@616 $generated@@617))) (= ($generated@@227 $generated@@615 $generated@@617) ($generated@@227 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@227 $generated@@616 $generated@@617) ($generated@@145 $generated@@615 $generated@@616))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@624 T@T) ($generated@@625 T@T) ) (= ($generated@@1 ($generated@@620 $generated@@624 $generated@@625)) 20)) (forall (($generated@@626 T@T) ($generated@@627 T@T) ) (! (= ($generated@@621 ($generated@@620 $generated@@626 $generated@@627)) $generated@@626)
 :pattern ( ($generated@@620 $generated@@626 $generated@@627))
))) (forall (($generated@@628 T@T) ($generated@@629 T@T) ) (! (= ($generated@@622 ($generated@@620 $generated@@628 $generated@@629)) $generated@@629)
 :pattern ( ($generated@@620 $generated@@628 $generated@@629))
))) (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 ($generated@@622 (type $generated@@630))))
(= (type ($generated@@618 $generated@@630 $generated@@631 $generated@@632)) $generated@@633))
 :pattern ( ($generated@@618 $generated@@630 $generated@@631 $generated@@632))
))) (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@637)))
(let (($generated@@639 (type $generated@@635)))
(= (type ($generated@@623 $generated@@634 $generated@@635 $generated@@636 $generated@@637)) ($generated@@620 $generated@@639 $generated@@638))))
 :pattern ( ($generated@@623 $generated@@634 $generated@@635 $generated@@636 $generated@@637))
))) (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 ($generated@@622 (type $generated@@640))))
 (=> (= (type $generated@@643) $generated@@644) (= ($generated@@618 ($generated@@623 $generated@@640 $generated@@641 $generated@@642 $generated@@643) $generated@@641 $generated@@642) $generated@@643)))
 :weight 0
))) (and (and (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (or (= $generated@@647 $generated@@649) (= ($generated@@618 ($generated@@623 $generated@@646 $generated@@647 $generated@@648 $generated@@645) $generated@@649 $generated@@650) ($generated@@618 $generated@@646 $generated@@649 $generated@@650)))
 :weight 0
)) (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (or (= $generated@@654 $generated@@656) (= ($generated@@618 ($generated@@623 $generated@@652 $generated@@653 $generated@@654 $generated@@651) $generated@@655 $generated@@656) ($generated@@618 $generated@@652 $generated@@655 $generated@@656)))
 :weight 0
))) (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (or true (= ($generated@@618 ($generated@@623 $generated@@658 $generated@@659 $generated@@660 $generated@@657) $generated@@661 $generated@@662) ($generated@@618 $generated@@658 $generated@@661 $generated@@662)))
 :weight 0
)))) (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (! (= (type ($generated@@619 $generated@@663 $generated@@664 $generated@@665 $generated@@666)) ($generated@@620 $generated@@81 $generated@@4))
 :pattern ( ($generated@@619 $generated@@663 $generated@@664 $generated@@665 $generated@@666))
))))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (! (let (($generated@@673 ($generated@@70 (type $generated@@672))))
 (=> (and (and (and (and (and (= (type $generated@@667) $generated@@81) (= (type $generated@@668) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@669) ($generated@@69 $generated@@4))) (= (type $generated@@670) $generated@@81)) (= (type $generated@@671) $generated@@81)) (= (type $generated@@672) ($generated@@69 $generated@@673))) (= ($generated@@0 ($generated@@618 ($generated@@619 $generated@@667 $generated@@668 $generated@@669 $generated@@670) $generated@@671 $generated@@672))  (=> (and (not (= $generated@@671 $generated@@667)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@668 $generated@@671) $generated@@669))) (= $generated@@671 $generated@@670)))))
 :pattern ( ($generated@@618 ($generated@@619 $generated@@667 $generated@@668 $generated@@669 $generated@@670) $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@675) $generated@@81)) (= ($generated@@192 ($generated@@227 $generated@@674 $generated@@675)) ($generated@@136 $generated@@675)))
 :pattern ( ($generated@@192 ($generated@@227 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) $generated@@67) (= (type $generated@@677) $generated@@67)) (and (= ($generated@@76 ($generated@@175 $generated@@676 $generated@@677)) $generated@@64) (= ($generated@@325 ($generated@@175 $generated@@676 $generated@@677)) $generated@@66)))
 :pattern ( ($generated@@175 $generated@@676 $generated@@677))
)))
(assert  (and (forall (($generated@@680 T@U) ) (! (let (($generated@@681 ($generated@@156 (type $generated@@680))))
(= (type ($generated@@678 $generated@@680)) ($generated@@155 $generated@@681)))
 :pattern ( ($generated@@678 $generated@@680))
)) (forall (($generated@@682 T@U) ) (! (let (($generated@@683 ($generated@@156 (type $generated@@682))))
(= (type ($generated@@679 $generated@@682)) $generated@@683))
 :pattern ( ($generated@@679 $generated@@682))
))))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (! (let (($generated@@686 (type $generated@@685)))
 (=> (= (type $generated@@684) ($generated@@155 $generated@@686)) (and (= ($generated@@678 ($generated@@191 $generated@@684 $generated@@685)) $generated@@684) (= ($generated@@679 ($generated@@191 $generated@@684 $generated@@685)) $generated@@685))))
 :pattern ( ($generated@@191 $generated@@684 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@176) (= ($generated@@598 ($generated@@305 $generated@@687)) ($generated@@599 $generated@@687)))
 :pattern ( ($generated@@598 ($generated@@305 $generated@@687)))
)))
(assert (forall (($generated@@688 T@U) ) (! (let (($generated@@689 ($generated@@156 (type $generated@@688))))
 (=> (= (type $generated@@688) ($generated@@155 $generated@@689)) (= ($generated@@289 ($generated@@152 $generated@@688)) ($generated@@192 $generated@@688))))
 :pattern ( ($generated@@289 ($generated@@152 $generated@@688)))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@185) ($generated@@219 $generated@@690 ($generated@@79 0))) (and (= ($generated@@305 ($generated@@429 $generated@@2 $generated@@690)) $generated@@690) ($generated@@140 ($generated@@429 ($generated@@80 $generated@@185 $generated@@4) $generated@@690) ($generated@@79 0))))
 :pattern ( ($generated@@219 $generated@@690 ($generated@@79 0)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@185) (= (type $generated@@692) $generated@@67)) ($generated@@219 $generated@@691 ($generated@@244 $generated@@692))) (and (= ($generated@@305 ($generated@@429 ($generated@@80 $generated@@185 $generated@@4) $generated@@691)) $generated@@691) ($generated@@140 ($generated@@429 ($generated@@80 $generated@@185 $generated@@4) $generated@@691) ($generated@@244 $generated@@692))))
 :pattern ( ($generated@@219 $generated@@691 ($generated@@244 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (= (type $generated@@693) $generated@@185) (= (type $generated@@694) $generated@@67)) ($generated@@219 $generated@@693 ($generated@@249 $generated@@694))) (and (= ($generated@@305 ($generated@@429 ($generated@@80 $generated@@185 $generated@@4) $generated@@693)) $generated@@693) ($generated@@140 ($generated@@429 ($generated@@80 $generated@@185 $generated@@4) $generated@@693) ($generated@@249 $generated@@694))))
 :pattern ( ($generated@@219 $generated@@693 ($generated@@249 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@695) $generated@@185) (= (type $generated@@696) $generated@@67)) ($generated@@219 $generated@@695 ($generated@@203 $generated@@696))) (and (= ($generated@@305 ($generated@@429 ($generated@@80 $generated@@185 $generated@@2) $generated@@695)) $generated@@695) ($generated@@140 ($generated@@429 ($generated@@80 $generated@@185 $generated@@2) $generated@@695) ($generated@@203 $generated@@696))))
 :pattern ( ($generated@@219 $generated@@695 ($generated@@203 $generated@@696)))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@697) $generated@@185) (= (type $generated@@698) $generated@@67)) ($generated@@219 $generated@@697 ($generated@@260 $generated@@698))) (and (= ($generated@@305 ($generated@@429 ($generated@@155 $generated@@185) $generated@@697)) $generated@@697) ($generated@@140 ($generated@@429 ($generated@@155 $generated@@185) $generated@@697) ($generated@@260 $generated@@698))))
 :pattern ( ($generated@@219 $generated@@697 ($generated@@260 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@699) $generated@@67) (= (type $generated@@700) $generated@@185)) ($generated@@219 $generated@@700 ($generated@@137 $generated@@699))) (and (= ($generated@@305 ($generated@@429 $generated@@81 $generated@@700)) $generated@@700) ($generated@@140 ($generated@@429 $generated@@81 $generated@@700) ($generated@@137 $generated@@699))))
 :pattern ( ($generated@@219 $generated@@700 ($generated@@137 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@701) $generated@@67) (= (type $generated@@702) $generated@@185)) ($generated@@219 $generated@@702 ($generated@@169 $generated@@701))) (and (= ($generated@@305 ($generated@@429 $generated@@81 $generated@@702)) $generated@@702) ($generated@@140 ($generated@@429 $generated@@81 $generated@@702) ($generated@@169 $generated@@701))))
 :pattern ( ($generated@@219 $generated@@702 ($generated@@169 $generated@@701)))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (! (let (($generated@@705 (type $generated@@704)))
 (=> (= (type $generated@@703) ($generated@@155 $generated@@705)) (= ($generated@@152 ($generated@@191 $generated@@703 $generated@@704)) ($generated@@290 ($generated@@152 $generated@@703) $generated@@704))))
 :pattern ( ($generated@@152 ($generated@@191 $generated@@703 $generated@@704)))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 Int) ($generated@@708 Int) ) (! (let (($generated@@709 ($generated@@156 (type $generated@@706))))
 (=> (= (type $generated@@706) ($generated@@155 $generated@@709)) (=> (and (and (<= 0 $generated@@707) (<= $generated@@707 $generated@@708)) (< $generated@@708 ($generated@@192 $generated@@706))) (= ($generated@@210 ($generated@@190 $generated@@706 $generated@@707) (- $generated@@708 $generated@@707)) ($generated@@210 $generated@@706 $generated@@708)))))
 :weight 25
 :pattern ( ($generated@@210 $generated@@706 $generated@@708) ($generated@@190 $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (= (type $generated@@710) ($generated@@80 $generated@@185 $generated@@2)) (= (type $generated@@711) $generated@@67)) (= (type $generated@@712) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@710 ($generated@@203 $generated@@711) $generated@@712) (forall (($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@713) $generated@@185) (< 0 ($generated ($generated@@85 $generated@@710 $generated@@713)))) ($generated@@269 $generated@@713 $generated@@711 $generated@@712))
 :pattern ( ($generated@@85 $generated@@710 $generated@@713))
))))
 :pattern ( ($generated@@78 $generated@@710 ($generated@@203 $generated@@711) $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 Int) ($generated@@716 Int) ) (! (let (($generated@@717 ($generated@@156 (type $generated@@714))))
 (=> (= (type $generated@@714) ($generated@@155 $generated@@717)) (=> (and (and (<= 0 $generated@@715) (<= 0 $generated@@716)) (<= (+ $generated@@715 $generated@@716) ($generated@@192 $generated@@714))) (= ($generated@@190 ($generated@@190 $generated@@714 $generated@@715) $generated@@716) ($generated@@190 $generated@@714 (+ $generated@@715 $generated@@716))))))
 :pattern ( ($generated@@190 ($generated@@190 $generated@@714 $generated@@715) $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (and (= (type $generated@@718) $generated@@176) (= (type $generated@@719) $generated@@67)) (= (type $generated@@720) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@164 $generated@@720) (and ($generated@@174 $generated@@718) (exists (($generated@@721 T@U) ) (!  (and (= (type $generated@@721) $generated@@67) ($generated@@78 $generated@@718 ($generated@@175 $generated@@719 $generated@@721) $generated@@720))
 :pattern ( ($generated@@78 $generated@@718 ($generated@@175 $generated@@719 $generated@@721) $generated@@720))
))))) ($generated@@269 ($generated@@183 $generated@@718) $generated@@719 $generated@@720))
 :pattern ( ($generated@@269 ($generated@@183 $generated@@718) $generated@@719 $generated@@720))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (and (= (type $generated@@722) $generated@@176) (= (type $generated@@723) $generated@@67)) (= (type $generated@@724) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@164 $generated@@724) (and ($generated@@174 $generated@@722) (exists (($generated@@725 T@U) ) (!  (and (= (type $generated@@725) $generated@@67) ($generated@@78 $generated@@722 ($generated@@175 $generated@@725 $generated@@723) $generated@@724))
 :pattern ( ($generated@@78 $generated@@722 ($generated@@175 $generated@@725 $generated@@723) $generated@@724))
))))) ($generated@@269 ($generated@@184 $generated@@722) $generated@@723 $generated@@724))
 :pattern ( ($generated@@269 ($generated@@184 $generated@@722) $generated@@723 $generated@@724))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ($generated@@728 T@U) ) (! (let (($generated@@729 (type $generated@@727)))
 (=> (and (and (= (type $generated@@726) ($generated@@80 $generated@@729 $generated@@2)) (= (type $generated@@728) $generated@@729)) (not (= $generated@@727 $generated@@728))) (= ($generated ($generated@@85 $generated@@726 $generated@@728)) ($generated ($generated@@85 ($generated@@290 $generated@@726 $generated@@727) $generated@@728)))))
 :pattern ( ($generated@@290 $generated@@726 $generated@@727) ($generated@@85 $generated@@726 $generated@@728))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (= (type $generated@@730) $generated@@185) (= (type $generated@@731) $generated@@185)) (= ($generated@@218 ($generated@@256 $generated@@730) ($generated@@256 $generated@@731)) ($generated@@256 ($generated@@218 $generated@@730 $generated@@731))))
 :pattern ( ($generated@@218 ($generated@@256 $generated@@730) ($generated@@256 $generated@@731)))
)))
(assert (forall (($generated@@732 Int) ) (! (= ($generated@@305 ($generated@@8 ($generated@@254 $generated@@732))) ($generated@@256 ($generated@@305 ($generated@@8 $generated@@732))))
 :pattern ( ($generated@@305 ($generated@@8 ($generated@@254 $generated@@732))))
)))
(assert (forall (($generated@@733 T@U) ) (! (= ($generated@@305 ($generated@@256 $generated@@733)) ($generated@@256 ($generated@@305 $generated@@733)))
 :pattern ( ($generated@@305 ($generated@@256 $generated@@733)))
)))
(assert (forall (($generated@@734 T@U) ) (! (let (($generated@@735 ($generated@@156 (type $generated@@734))))
 (=> (and (= (type $generated@@734) ($generated@@155 $generated@@735)) (= ($generated@@192 $generated@@734) 0)) (= $generated@@734 ($generated@@153 $generated@@735))))
 :pattern ( ($generated@@192 $generated@@734))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 Int) ) (! (let (($generated@@738 ($generated@@156 (type $generated@@736))))
 (=> (and (= (type $generated@@736) ($generated@@155 $generated@@738)) (= $generated@@737 0)) (= ($generated@@226 $generated@@736 $generated@@737) ($generated@@153 $generated@@738))))
 :pattern ( ($generated@@226 $generated@@736 $generated@@737))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ($generated@@741 T@U) ) (! (let (($generated@@742 (type $generated@@740)))
 (=> (and (and (= (type $generated@@739) ($generated@@80 $generated@@742 $generated@@2)) (= (type $generated@@741) $generated@@2)) (<= 0 ($generated $generated@@741))) (= ($generated@@289 ($generated@@86 $generated@@739 $generated@@740 $generated@@741)) (+ (- ($generated@@289 $generated@@739) ($generated ($generated@@85 $generated@@739 $generated@@740))) ($generated $generated@@741)))))
 :pattern ( ($generated@@289 ($generated@@86 $generated@@739 $generated@@740 $generated@@741)))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (= (type $generated@@743) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@744) $generated@@2)) ($generated@@78 $generated@@744 $generated@@46 $generated@@743))
 :pattern ( ($generated@@78 $generated@@744 $generated@@46 $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (= (type $generated@@745) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@746) $generated@@3)) ($generated@@78 $generated@@746 $generated@@47 $generated@@745))
 :pattern ( ($generated@@78 $generated@@746 $generated@@47 $generated@@745))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@747) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@748) $generated@@4)) ($generated@@78 $generated@@748 $generated@@44 $generated@@747))
 :pattern ( ($generated@@78 $generated@@748 $generated@@44 $generated@@747))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (= (type $generated@@749) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@750) $generated@@510)) ($generated@@78 $generated@@750 $generated@@45 $generated@@749))
 :pattern ( ($generated@@78 $generated@@750 $generated@@45 $generated@@749))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (= (type $generated@@751) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@752) $generated@@185)) ($generated@@78 $generated@@752 $generated@@48 $generated@@751))
 :pattern ( ($generated@@78 $generated@@752 $generated@@48 $generated@@751))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (= (type $generated@@753) ($generated@@155 $generated@@185)) (= (type $generated@@754) $generated@@67)) (= ($generated@@140 $generated@@753 ($generated@@260 $generated@@754)) (forall (($generated@@755 Int) ) (!  (=> (and (<= 0 $generated@@755) (< $generated@@755 ($generated@@192 $generated@@753))) ($generated@@219 ($generated@@210 $generated@@753 $generated@@755) $generated@@754))
 :pattern ( ($generated@@210 $generated@@753 $generated@@755))
))))
 :pattern ( ($generated@@140 $generated@@753 ($generated@@260 $generated@@754)))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 Int) ) (!  (=> (= (type $generated@@756) ($generated@@155 $generated@@185)) (=> (and (<= 0 $generated@@757) (< $generated@@757 ($generated@@192 $generated@@756))) (< ($generated@@599 ($generated@@429 $generated@@176 ($generated@@210 $generated@@756 $generated@@757))) ($generated@@281 $generated@@756))))
 :pattern ( ($generated@@599 ($generated@@429 $generated@@176 ($generated@@210 $generated@@756 $generated@@757))))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (and (and (= (type $generated@@758) ($generated@@331 $generated@@185 $generated@@185)) (= (type $generated@@759) $generated@@67)) (= (type $generated@@760) $generated@@67)) ($generated@@140 $generated@@758 ($generated@@457 $generated@@759 $generated@@760))) (and (and ($generated@@140 ($generated@@329 $generated@@758) ($generated@@244 $generated@@759)) ($generated@@140 ($generated@@385 $generated@@758) ($generated@@244 $generated@@760))) ($generated@@140 ($generated@@428 $generated@@758) ($generated@@244 ($generated@@175 $generated@@759 $generated@@760)))))
 :pattern ( ($generated@@140 $generated@@758 ($generated@@457 $generated@@759 $generated@@760)))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (and (and (= (type $generated@@761) ($generated@@349 $generated@@185 $generated@@185)) (= (type $generated@@762) $generated@@67)) (= (type $generated@@763) $generated@@67)) ($generated@@140 $generated@@761 ($generated@@465 $generated@@762 $generated@@763))) (and (and ($generated@@140 ($generated@@347 $generated@@761) ($generated@@249 $generated@@762)) ($generated@@140 ($generated@@396 $generated@@761) ($generated@@249 $generated@@763))) ($generated@@140 ($generated@@439 $generated@@761) ($generated@@249 ($generated@@175 $generated@@762 $generated@@763)))))
 :pattern ( ($generated@@140 $generated@@761 ($generated@@465 $generated@@762 $generated@@763)))
)))
(assert (forall (($generated@@764 T@U) ) (!  (=> (= (type $generated@@764) $generated@@2) ($generated@@140 $generated@@764 $generated@@46))
 :pattern ( ($generated@@140 $generated@@764 $generated@@46))
)))
(assert (forall (($generated@@765 T@U) ) (!  (=> (= (type $generated@@765) $generated@@3) ($generated@@140 $generated@@765 $generated@@47))
 :pattern ( ($generated@@140 $generated@@765 $generated@@47))
)))
(assert (forall (($generated@@766 T@U) ) (!  (=> (= (type $generated@@766) $generated@@4) ($generated@@140 $generated@@766 $generated@@44))
 :pattern ( ($generated@@140 $generated@@766 $generated@@44))
)))
(assert (forall (($generated@@767 T@U) ) (!  (=> (= (type $generated@@767) $generated@@510) ($generated@@140 $generated@@767 $generated@@45))
 :pattern ( ($generated@@140 $generated@@767 $generated@@45))
)))
(assert (forall (($generated@@768 T@U) ) (!  (=> (= (type $generated@@768) $generated@@185) ($generated@@140 $generated@@768 $generated@@48))
 :pattern ( ($generated@@140 $generated@@768 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@769 () Int)
(declare-fun $generated@@770 () Int)
(declare-fun $generated@@771 () Int)
(declare-fun $generated@@772 () Int)
(declare-fun $generated@@773 () T@U)
(declare-fun $generated@@774 () T@U)
(declare-fun $generated@@775 () T@U)
(declare-fun $generated@@776 (T@U) Bool)
(declare-fun $generated@@777 () T@U)
(declare-fun $generated@@778 () Int)
(assert  (and (and (and (= (type $generated@@774) $generated@@81) (= (type $generated@@775) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@773) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@777) ($generated@@620 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 35) (let (($generated@@779 true))
(let (($generated@@780  (=> (and (=> (and (and (<= ($generated@@254 0) $generated@@769) (< $generated@@769 $generated@@770)) (not (or (= $generated@@769 $generated@@771) (= $generated@@769 $generated@@772)))) (= ($generated ($generated@@429 $generated@@2 ($generated@@87 ($generated@@85 $generated@@773 $generated@@774) ($generated@@228 $generated@@769)))) ($generated ($generated@@429 $generated@@2 ($generated@@87 ($generated@@85 $generated@@775 $generated@@774) ($generated@@228 $generated@@769)))))) (= (ControlFlow 0 8) 1)) $generated@@779)))
(let (($generated@@781  (=> (<= ($generated@@254 0) $generated@@769) (=> (and (< $generated@@769 $generated@@770) (not (or (= $generated@@769 $generated@@771) (= $generated@@769 $generated@@772)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@774 $generated@@138))) (=> (not (= $generated@@774 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 $generated@@769) (< $generated@@769 ($generated@@136 $generated@@774)))) (=> (and (<= 0 $generated@@769) (< $generated@@769 ($generated@@136 $generated@@774))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@774 $generated@@138))) (=> (not (= $generated@@774 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@78 $generated@@774 ($generated@@137 $generated@@46) $generated@@775)) (=> ($generated@@78 $generated@@774 ($generated@@137 $generated@@46) $generated@@775) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@769) (< $generated@@769 ($generated@@136 $generated@@774)))) (=> (and (<= 0 $generated@@769) (< $generated@@769 ($generated@@136 $generated@@774))) (=> (and (= ($generated ($generated@@429 $generated@@2 ($generated@@87 ($generated@@85 $generated@@773 $generated@@774) ($generated@@228 $generated@@769)))) ($generated ($generated@@429 $generated@@2 ($generated@@87 ($generated@@85 $generated@@775 $generated@@774) ($generated@@228 $generated@@769))))) (= (ControlFlow 0 2) 1)) $generated@@779)))))))))))))))
(let (($generated@@782  (=> (and (and (and (and (<= ($generated@@254 0) $generated@@771) (< $generated@@771 $generated@@772)) (< $generated@@772 $generated@@770)) (<= $generated@@770 ($generated@@136 $generated@@774))) (and (and ($generated@@164 $generated@@773) ($generated@@776 $generated@@773)) (and (forall (($generated@@783 T@U) ) (!  (=> (= (type $generated@@783) $generated@@81) (=> (and (not (= $generated@@783 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@775 $generated@@783) $generated@@60))) (or (= ($generated@@85 $generated@@773 $generated@@783) ($generated@@85 $generated@@775 $generated@@783)) (= $generated@@783 $generated@@774))))
 :pattern ( ($generated@@85 $generated@@773 $generated@@783))
)) ($generated@@145 $generated@@775 $generated@@773)))) (and (=> (= (ControlFlow 0 9) (- 0 26)) (not (= $generated@@774 $generated@@138))) (=> (not (= $generated@@774 $generated@@138)) (and (=> (= (ControlFlow 0 9) (- 0 25)) (and (<= 0 ($generated@@254 0)) (<= ($generated@@254 0) ($generated@@136 $generated@@774)))) (=> (and (<= 0 ($generated@@254 0)) (<= ($generated@@254 0) ($generated@@136 $generated@@774))) (and (=> (= (ControlFlow 0 9) (- 0 24)) (and (<= ($generated@@254 0) $generated@@770) (<= $generated@@770 ($generated@@136 $generated@@774)))) (=> (and (<= ($generated@@254 0) $generated@@770) (<= $generated@@770 ($generated@@136 $generated@@774))) (and (=> (= (ControlFlow 0 9) (- 0 23)) (not (= $generated@@774 $generated@@138))) (=> (not (= $generated@@774 $generated@@138)) (and (=> (= (ControlFlow 0 9) (- 0 22)) ($generated@@78 $generated@@774 ($generated@@137 $generated@@46) $generated@@775)) (=> ($generated@@78 $generated@@774 ($generated@@137 $generated@@46) $generated@@775) (and (=> (= (ControlFlow 0 9) (- 0 21)) (and (<= 0 ($generated@@254 0)) (<= ($generated@@254 0) ($generated@@136 $generated@@774)))) (=> (and (<= 0 ($generated@@254 0)) (<= ($generated@@254 0) ($generated@@136 $generated@@774))) (and (=> (= (ControlFlow 0 9) (- 0 20)) (and (<= ($generated@@254 0) $generated@@770) (<= $generated@@770 ($generated@@136 $generated@@774)))) (=> (and (<= ($generated@@254 0) $generated@@770) (<= $generated@@770 ($generated@@136 $generated@@774))) (=> ($generated@@413 ($generated@@152 ($generated@@190 ($generated@@226 ($generated@@227 $generated@@773 $generated@@774) $generated@@770) ($generated@@254 0))) ($generated@@152 ($generated@@190 ($generated@@226 ($generated@@227 $generated@@775 $generated@@774) $generated@@770) ($generated@@254 0)))) (and (=> (= (ControlFlow 0 9) (- 0 19)) (not (= $generated@@774 $generated@@138))) (=> (not (= $generated@@774 $generated@@138)) (and (=> (= (ControlFlow 0 9) (- 0 18)) (and (<= 0 $generated@@772) (< $generated@@772 ($generated@@136 $generated@@774)))) (=> (and (<= 0 $generated@@772) (< $generated@@772 ($generated@@136 $generated@@774))) (and (=> (= (ControlFlow 0 9) (- 0 17)) (not (= $generated@@774 $generated@@138))) (=> (not (= $generated@@774 $generated@@138)) (and (=> (= (ControlFlow 0 9) (- 0 16)) ($generated@@78 $generated@@774 ($generated@@137 $generated@@46) $generated@@775)) (=> ($generated@@78 $generated@@774 ($generated@@137 $generated@@46) $generated@@775) (and (=> (= (ControlFlow 0 9) (- 0 15)) (and (<= 0 $generated@@771) (< $generated@@771 ($generated@@136 $generated@@774)))) (=> (and (<= 0 $generated@@771) (< $generated@@771 ($generated@@136 $generated@@774))) (=> (= ($generated ($generated@@429 $generated@@2 ($generated@@87 ($generated@@85 $generated@@773 $generated@@774) ($generated@@228 $generated@@772)))) ($generated ($generated@@429 $generated@@2 ($generated@@87 ($generated@@85 $generated@@775 $generated@@774) ($generated@@228 $generated@@771))))) (and (=> (= (ControlFlow 0 9) (- 0 14)) (not (= $generated@@774 $generated@@138))) (=> (not (= $generated@@774 $generated@@138)) (and (=> (= (ControlFlow 0 9) (- 0 13)) (and (<= 0 $generated@@771) (< $generated@@771 ($generated@@136 $generated@@774)))) (=> (and (<= 0 $generated@@771) (< $generated@@771 ($generated@@136 $generated@@774))) (and (=> (= (ControlFlow 0 9) (- 0 12)) (not (= $generated@@774 $generated@@138))) (=> (not (= $generated@@774 $generated@@138)) (and (=> (= (ControlFlow 0 9) (- 0 11)) ($generated@@78 $generated@@774 ($generated@@137 $generated@@46) $generated@@775)) (=> ($generated@@78 $generated@@774 ($generated@@137 $generated@@46) $generated@@775) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 $generated@@772) (< $generated@@772 ($generated@@136 $generated@@774)))) (=> (and (<= 0 $generated@@772) (< $generated@@772 ($generated@@136 $generated@@774))) (=> (= ($generated ($generated@@429 $generated@@2 ($generated@@87 ($generated@@85 $generated@@773 $generated@@774) ($generated@@228 $generated@@771)))) ($generated ($generated@@429 $generated@@2 ($generated@@87 ($generated@@85 $generated@@775 $generated@@774) ($generated@@228 $generated@@772))))) (and (=> (= (ControlFlow 0 9) 2) $generated@@781) (=> (= (ControlFlow 0 9) 8) $generated@@780))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@784  (=> (and (not (and (and (<= ($generated@@254 0) $generated@@771) (< $generated@@771 $generated@@772)) (< $generated@@772 $generated@@770))) (= (ControlFlow 0 29) 9)) $generated@@782)))
(let (($generated@@785  (=> (and (and (<= ($generated@@254 0) $generated@@771) (< $generated@@771 $generated@@772)) (< $generated@@772 $generated@@770)) (and (=> (= (ControlFlow 0 27) (- 0 28)) (not (= $generated@@774 $generated@@138))) (=> (not (= $generated@@774 $generated@@138)) (=> (= (ControlFlow 0 27) 9) $generated@@782))))))
(let (($generated@@786  (=> (not (and (<= ($generated@@254 0) $generated@@771) (< $generated@@771 $generated@@772))) (and (=> (= (ControlFlow 0 31) 27) $generated@@785) (=> (= (ControlFlow 0 31) 29) $generated@@784)))))
(let (($generated@@787  (=> (and (<= ($generated@@254 0) $generated@@771) (< $generated@@771 $generated@@772)) (and (=> (= (ControlFlow 0 30) 27) $generated@@785) (=> (= (ControlFlow 0 30) 29) $generated@@784)))))
(let (($generated@@788  (=> (< $generated@@771 ($generated@@254 0)) (and (=> (= (ControlFlow 0 33) 30) $generated@@787) (=> (= (ControlFlow 0 33) 31) $generated@@786)))))
(let (($generated@@789  (=> (<= ($generated@@254 0) $generated@@771) (and (=> (= (ControlFlow 0 32) 30) $generated@@787) (=> (= (ControlFlow 0 32) 31) $generated@@786)))))
(let (($generated@@790  (=> (= $generated@@777 ($generated@@619 $generated@@138 $generated@@775 $generated@@60 $generated@@774)) (and (=> (= (ControlFlow 0 34) 32) $generated@@789) (=> (= (ControlFlow 0 34) 33) $generated@@788)))))
(let (($generated@@791  (=> (and ($generated@@164 $generated@@775) ($generated@@776 $generated@@775)) (=> (and (and ($generated@@140 $generated@@774 ($generated@@169 $generated@@46)) ($generated@@78 $generated@@774 ($generated@@169 $generated@@46) $generated@@775)) (and (= 1 $generated@@778) (= (ControlFlow 0 35) 34))) $generated@@790))))
$generated@@791)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@T) T@U)
(declare-fun $generated@@170 (T@T) T@U)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@185 (Int Int) Int)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U) T@U)
(declare-fun $generated@@195 () T@T)
(declare-fun $generated@@201 (T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@209 (T@U Int) T@U)
(declare-fun $generated@@210 (T@U T@U) T@U)
(declare-fun $generated@@211 (T@U) Int)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@229 (T@U Int) T@U)
(declare-fun $generated@@230 (T@U Int T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U Int) T@U)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@260 (Int) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (Int) Int)
(declare-fun $generated@@297 (Int) Int)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@312 (T@U T@U T@U) Bool)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@336 (T@U T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@T T@T) T@U)
(declare-fun $generated@@381 (T@T T@T) T@T)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@T T@T) T@U)
(declare-fun $generated@@399 (T@T T@T) T@T)
(declare-fun $generated@@400 (T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@466 (T@U T@U) Bool)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@T T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@515 (T@U T@U) T@U)
(declare-fun $generated@@523 (T@U T@U) T@U)
(declare-fun $generated@@544 (T@T) T@U)
(declare-fun $generated@@568 () T@T)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@630 (T@U) Int)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@636 (T@U) T@U)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@644 (T@U) T@U)
(declare-fun $generated@@649 (T@U) Int)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@654 (T@U) T@U)
(declare-fun $generated@@680 (T@U) Int)
(declare-fun $generated@@681 (T@U) Int)
(declare-fun $generated@@703 (T@U T@U T@U) T@U)
(declare-fun $generated@@704 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@705 (T@T T@T) T@T)
(declare-fun $generated@@706 (T@T) T@T)
(declare-fun $generated@@707 (T@T) T@T)
(declare-fun $generated@@708 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@767 (T@U) T@U)
(declare-fun $generated@@768 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert  (and (and (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@83 (type $generated@@149))))
(= (type ($generated@@146 $generated@@149 $generated@@150)) ($generated@@80 $generated@@151 $generated@@2)))
 :pattern ( ($generated@@146 $generated@@149 $generated@@150))
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@83 (type $generated@@152))))
(= (type ($generated@@147 $generated@@152 $generated@@153)) ($generated@@80 $generated@@154 $generated@@2)))
 :pattern ( ($generated@@147 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@83 (type $generated@@155))))
(= (type ($generated@@148 $generated@@155 $generated@@156)) ($generated@@80 $generated@@157 $generated@@2)))
 :pattern ( ($generated@@148 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@83 (type $generated@@158))))
 (=> (and (= (type $generated@@158) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@159) ($generated@@80 $generated@@160 $generated@@2))) (and (= (+ (+ ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) ($generated@@145 ($generated@@146 $generated@@159 $generated@@158))) (* 2 ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))) ($generated@@145 ($generated@@148 $generated@@158 $generated@@159))) (= ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) (- ($generated@@145 $generated@@158) ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@163) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@161 $generated@@162 $generated@@163)) (forall (($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@162 $generated@@164) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@163 $generated@@164) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@163 $generated@@164) $generated@@60))
)))
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167)  (or (= $generated@@166 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@167 $generated@@166) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167))
)))
(assert  (and (and (and (and (forall (($generated@@173 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@173)) 14)) (forall (($generated@@174 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@172 (type $generated@@175))))
(= (type ($generated@@168 $generated@@175)) ($generated@@80 $generated@@176 $generated@@2)))
 :pattern ( ($generated@@168 $generated@@175))
))) (forall (($generated@@177 T@T) ) (! (= (type ($generated@@169 $generated@@177)) ($generated@@171 $generated@@177))
 :pattern ( ($generated@@169 $generated@@177))
))) (forall (($generated@@178 T@T) ) (! (= (type ($generated@@170 $generated@@178)) ($generated@@80 $generated@@178 $generated@@2))
 :pattern ( ($generated@@170 $generated@@178))
))))
(assert (forall (($generated@@179 T@T) ) (= ($generated@@168 ($generated@@169 $generated@@179)) ($generated@@170 $generated@@179))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@67) (= (type $generated@@182) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@183) $generated@@81)) (and (and ($generated@@180 $generated@@182) (and (not (= $generated@@183 $generated@@138)) (= ($generated@@139 $generated@@183) ($generated@@137 $generated@@181)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@182 $generated@@183) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@183)) $generated@@46 $generated@@182))
 :pattern ( ($generated@@136 $generated@@183) ($generated@@87 ($generated@@85 $generated@@182 $generated@@183) $generated@@60) ($generated@@137 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@2) ($generated@@140 $generated@@184 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@184 ($generated@@79 0)))
)))
(assert (forall (($generated@@186 Int) ($generated@@187 Int) ) (!  (or (= ($generated@@185 $generated@@186 $generated@@187) $generated@@186) (= ($generated@@185 $generated@@186 $generated@@187) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@67)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@67) (= (type $generated@@191) $generated@@81)) (= (type $generated@@192) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@191 ($generated@@188 $generated@@190) $generated@@192) ($generated@@78 $generated@@191 ($generated@@137 $generated@@190) $generated@@192)))
 :pattern ( ($generated@@78 $generated@@191 ($generated@@188 $generated@@190) $generated@@192))
)))
(assert  (and (= ($generated@@1 $generated@@195) 15) (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@196 $generated@@197)) $generated@@67)
 :pattern ( ($generated@@194 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (and (= (type $generated@@198) $generated@@67) (= (type $generated@@199) $generated@@67)) (= (type $generated@@200) $generated@@195)) ($generated@@140 $generated@@200 ($generated@@194 $generated@@198 $generated@@199))) ($generated@@193 $generated@@200))
 :pattern ( ($generated@@193 $generated@@200) ($generated@@140 $generated@@200 ($generated@@194 $generated@@198 $generated@@199)))
)))
(assert  (and (and (= ($generated@@1 $generated@@204) 16) (forall (($generated@@205 T@U) ) (! (= (type ($generated@@202 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@203 $generated@@206)) $generated@@204)
 :pattern ( ($generated@@203 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) $generated@@195) (= (type $generated@@208) $generated@@195)) true) (= ($generated@@201 $generated@@207 $generated@@208)  (and (= ($generated@@202 $generated@@207) ($generated@@202 $generated@@208)) (= ($generated@@203 $generated@@207) ($generated@@203 $generated@@208)))))
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
)))
(assert  (and (forall (($generated@@212 T@U) ($generated@@213 Int) ) (! (let (($generated@@214 ($generated@@172 (type $generated@@212))))
(= (type ($generated@@209 $generated@@212 $generated@@213)) ($generated@@171 $generated@@214)))
 :pattern ( ($generated@@209 $generated@@212 $generated@@213))
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(= (type ($generated@@210 $generated@@215 $generated@@216)) ($generated@@171 $generated@@217)))
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Int) ) (! (let (($generated@@221 (type $generated@@219)))
 (=> (= (type $generated@@218) ($generated@@171 $generated@@221)) (=> (and (<= 0 $generated@@220) (<= $generated@@220 ($generated@@211 $generated@@218))) (= ($generated@@209 ($generated@@210 $generated@@218 $generated@@219) $generated@@220) ($generated@@210 ($generated@@209 $generated@@218 $generated@@220) $generated@@219)))))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@218 $generated@@219) $generated@@220))
)))
(assert (forall (($generated@@224 T@U) ) (! (= (type ($generated@@222 $generated@@224)) $generated@@67)
 :pattern ( ($generated@@222 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (= (type $generated@@225) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@226) $generated@@67)) ($generated@@140 $generated@@225 ($generated@@222 $generated@@226))) ($generated@@223 $generated@@225))
 :pattern ( ($generated@@140 $generated@@225 ($generated@@222 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@172 (type $generated@@227))))
 (=> (= (type $generated@@227) ($generated@@171 $generated@@228)) ($generated@@223 ($generated@@168 $generated@@227))))
 :pattern ( ($generated@@168 $generated@@227))
)))
(assert  (and (forall (($generated@@231 T@U) ($generated@@232 Int) ) (! (let (($generated@@233 ($generated@@172 (type $generated@@231))))
(= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)) (forall (($generated@@234 T@U) ($generated@@235 Int) ($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(= (type ($generated@@230 $generated@@234 $generated@@235 $generated@@236)) ($generated@@171 $generated@@237)))
 :pattern ( ($generated@@230 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ($generated@@240 T@U) ($generated@@241 Int) ) (! (let (($generated@@242 (type $generated@@240)))
 (=> (= (type $generated@@238) ($generated@@171 $generated@@242)) (=> (and (<= 0 $generated@@241) (< $generated@@241 ($generated@@211 $generated@@238))) (and (=> (= $generated@@239 $generated@@241) (= ($generated@@229 ($generated@@230 $generated@@238 $generated@@239 $generated@@240) $generated@@241) $generated@@240)) (=> (not (= $generated@@239 $generated@@241)) (= ($generated@@229 ($generated@@230 $generated@@238 $generated@@239 $generated@@240) $generated@@241) ($generated@@229 $generated@@238 $generated@@241)))))))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@238 $generated@@239 $generated@@240) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@83 (type $generated@@243))))
 (=> (and (= (type $generated@@243) ($generated@@80 $generated@@245 $generated@@2)) (= (type $generated@@244) ($generated@@80 $generated@@245 $generated@@2))) (= ($generated@@147 ($generated@@147 $generated@@243 $generated@@244) $generated@@244) ($generated@@147 $generated@@243 $generated@@244))))
 :pattern ( ($generated@@147 ($generated@@147 $generated@@243 $generated@@244) $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
 (=> (= (type $generated@@246) ($generated@@171 $generated@@248)) (= (exists (($generated@@249 Int) ) (!  (and (and (<= 0 $generated@@249) (< $generated@@249 ($generated@@211 $generated@@246))) (= $generated@@247 ($generated@@229 $generated@@246 $generated@@249)))
 :pattern ( ($generated@@229 $generated@@246 $generated@@249))
)) (< 0 ($generated ($generated@@85 ($generated@@168 $generated@@246) $generated@@247))))))
 :pattern ( ($generated@@85 ($generated@@168 $generated@@246) $generated@@247))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@195)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@204)) (= (type $generated@@257) $generated@@204)) (= ($generated@@140 ($generated@@250 $generated@@256 $generated@@257) ($generated@@194 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@140 ($generated@@250 $generated@@256 $generated@@257) ($generated@@194 $generated@@254 $generated@@255)))
)))
(assert  (and (and (forall (($generated@@261 T@U) ($generated@@262 Int) ) (! (let (($generated@@263 ($generated@@172 (type $generated@@261))))
(= (type ($generated@@258 $generated@@261 $generated@@262)) ($generated@@171 $generated@@263)))
 :pattern ( ($generated@@258 $generated@@261 $generated@@262))
)) (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@259 $generated@@264 $generated@@265)) ($generated@@171 $generated@@204))
 :pattern ( ($generated@@259 $generated@@264 $generated@@265))
))) (forall (($generated@@266 Int) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@69 $generated@@204))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Int) ($generated@@270 Int) ) (!  (=> (and (= (type $generated@@267) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@268) $generated@@81)) (=> (and (and (= (+ $generated@@269 1) $generated@@270) (<= 0 $generated@@269)) (<= $generated@@270 ($generated@@136 $generated@@268))) (= ($generated@@258 ($generated@@259 $generated@@267 $generated@@268) $generated@@270) ($generated@@210 ($generated@@258 ($generated@@259 $generated@@267 $generated@@268) $generated@@269) ($generated@@87 ($generated@@85 $generated@@267 $generated@@268) ($generated@@260 $generated@@269))))))
 :pattern ( ($generated@@258 ($generated@@259 $generated@@267 $generated@@268) $generated@@269) ($generated@@258 ($generated@@259 $generated@@267 $generated@@268) $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 Int) ($generated@@273 T@U) ($generated@@274 Int) ) (! (let (($generated@@275 (type $generated@@273)))
 (=> (= (type $generated@@271) ($generated@@171 $generated@@275)) (=> (and (and (<= 0 $generated@@274) (<= $generated@@274 $generated@@272)) (< $generated@@272 ($generated@@211 $generated@@271))) (= ($generated@@209 ($generated@@230 $generated@@271 $generated@@272 $generated@@273) $generated@@274) ($generated@@230 ($generated@@209 $generated@@271 $generated@@274) (- $generated@@272 $generated@@274) $generated@@273)))))
 :pattern ( ($generated@@209 ($generated@@230 $generated@@271 $generated@@272 $generated@@273) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
 (=> (and (= (type $generated@@276) ($generated@@80 $generated@@279 $generated@@2)) (= (type $generated@@277) ($generated@@80 $generated@@279 $generated@@2))) (= ($generated ($generated@@85 ($generated@@148 $generated@@276 $generated@@277) $generated@@278)) (+ ($generated ($generated@@85 $generated@@276 $generated@@278)) ($generated ($generated@@85 $generated@@277 $generated@@278))))))
 :pattern ( ($generated@@85 ($generated@@148 $generated@@276 $generated@@277) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@195) (= (type $generated@@281) $generated@@195)) (= ($generated@@201 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@201 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 Int) ) (! (let (($generated@@284 ($generated@@172 (type $generated@@282))))
 (=> (and (= (type $generated@@282) ($generated@@171 $generated@@284)) (= $generated@@283 0)) (= ($generated@@209 $generated@@282 $generated@@283) $generated@@282)))
 :pattern ( ($generated@@209 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@67)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@288) $generated@@67)) (= ($generated@@140 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@204) ($generated@@0 ($generated@@85 $generated@@287 $generated@@289))) ($generated@@251 $generated@@289 $generated@@288))
 :pattern ( ($generated@@85 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@140 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@67)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@293) $generated@@67)) (= ($generated@@140 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@204) ($generated@@0 ($generated@@85 $generated@@292 $generated@@294))) ($generated@@251 $generated@@294 $generated@@293))
 :pattern ( ($generated@@85 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@140 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@296 Int) ) (!  (=> (<= 0 $generated@@296) (= ($generated@@295 $generated@@296) $generated@@296))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 Int) ) (! (= ($generated@@297 $generated@@298) $generated@@298)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 (type $generated@@300)))
(= (type ($generated@@299 $generated@@300)) $generated@@301))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= ($generated@@299 $generated@@302) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@67)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (= (type $generated@@305) ($generated@@171 $generated@@204)) (= (type $generated@@306) $generated@@204)) (= (type $generated@@307) $generated@@67)) (and ($generated@@140 $generated@@305 ($generated@@303 $generated@@307)) ($generated@@251 $generated@@306 $generated@@307))) ($generated@@140 ($generated@@210 $generated@@305 $generated@@306) ($generated@@303 $generated@@307)))
 :pattern ( ($generated@@140 ($generated@@210 $generated@@305 $generated@@306) ($generated@@303 $generated@@307)))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 Int) ($generated@@310 Int) ) (! (let (($generated@@311 ($generated@@172 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@171 $generated@@311)) (=> (and (and (<= 0 $generated@@310) (< $generated@@310 $generated@@309)) (< $generated@@310 ($generated@@211 $generated@@308))) (= ($generated@@229 ($generated@@258 $generated@@308 $generated@@309) $generated@@310) ($generated@@229 $generated@@308 $generated@@310)))))
 :weight 25
 :pattern ( ($generated@@229 ($generated@@258 $generated@@308 $generated@@309) $generated@@310))
 :pattern ( ($generated@@229 $generated@@308 $generated@@310) ($generated@@258 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) $generated@@67) (= (type $generated@@314) $generated@@67)) (= (type $generated@@315) $generated@@204)) (= (type $generated@@316) $generated@@204)) (= (type $generated@@317) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@180 $generated@@317)) (= ($generated@@78 ($generated@@250 $generated@@315 $generated@@316) ($generated@@194 $generated@@313 $generated@@314) $generated@@317)  (and ($generated@@312 $generated@@315 $generated@@313 $generated@@317) ($generated@@312 $generated@@316 $generated@@314 $generated@@317))))
 :pattern ( ($generated@@78 ($generated@@250 $generated@@315 $generated@@316) ($generated@@194 $generated@@313 $generated@@314) $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@172 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@171 $generated@@320)) (=> (and (<= 0 $generated@@319) (<= $generated@@319 ($generated@@211 $generated@@318))) (= ($generated@@211 ($generated@@209 $generated@@318 $generated@@319)) (- ($generated@@211 $generated@@318) $generated@@319)))))
 :pattern ( ($generated@@211 ($generated@@209 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@71)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@195) (= ($generated@@193 $generated@@323) (= ($generated@@321 $generated@@323) $generated@@63)))
 :pattern ( ($generated@@193 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 (type $generated@@326)))
 (=> (and (= (type $generated@@324) ($generated@@80 $generated@@327 $generated@@2)) (= (type $generated@@325) ($generated@@80 $generated@@327 $generated@@2))) (= ($generated ($generated@@85 ($generated@@146 $generated@@324 $generated@@325) $generated@@326)) ($generated@@295 (- ($generated ($generated@@85 $generated@@324 $generated@@326)) ($generated ($generated@@85 $generated@@325 $generated@@326)))))))
 :pattern ( ($generated@@85 ($generated@@146 $generated@@324 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 Int) ) (! (let (($generated@@331 ($generated@@172 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@171 $generated@@331)) (=> (and (<= 0 $generated@@330) (< $generated@@330 ($generated@@211 $generated@@329))) (< ($generated@@328 ($generated@@258 $generated@@329 $generated@@330)) ($generated@@328 $generated@@329)))))
 :pattern ( ($generated@@328 ($generated@@258 $generated@@329 $generated@@330)))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@195) ($generated@@193 $generated@@332)) (exists (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (and (and (= (type $generated@@333) $generated@@204) (= (type $generated@@334) $generated@@204)) (= $generated@@332 ($generated@@250 $generated@@333 $generated@@334)))
 :no-pattern (type $generated@@333)
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
)))
 :pattern ( ($generated@@193 $generated@@332))
)))
(assert (forall (($generated@@335 T@T) ) (! (= ($generated@@211 ($generated@@169 $generated@@335)) 0)
 :pattern ( ($generated@@169 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= (type ($generated@@336 $generated@@337 $generated@@338)) ($generated@@80 $generated@@339 $generated@@2)))
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
 (=> (= (type $generated@@340) ($generated@@80 $generated@@342 $generated@@2)) (= ($generated@@145 ($generated@@336 $generated@@340 $generated@@341)) (+ ($generated@@145 $generated@@340) 1))))
 :pattern ( ($generated@@145 ($generated@@336 $generated@@340 $generated@@341)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 Int) ) (! (let (($generated@@345 ($generated@@172 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@171 $generated@@345)) (=> (and (< 0 $generated@@344) (<= $generated@@344 ($generated@@211 $generated@@343))) (< ($generated@@328 ($generated@@209 $generated@@343 $generated@@344)) ($generated@@328 $generated@@343)))))
 :pattern ( ($generated@@328 ($generated@@209 $generated@@343 $generated@@344)))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (! (let (($generated@@348 (type $generated@@347)))
 (=> (= (type $generated@@346) ($generated@@171 $generated@@348)) (= ($generated@@211 ($generated@@210 $generated@@346 $generated@@347)) (+ 1 ($generated@@211 $generated@@346)))))
 :pattern ( ($generated@@210 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@81)) (= ($generated@@140 $generated@@350 ($generated@@188 $generated@@349))  (and ($generated@@140 $generated@@350 ($generated@@137 $generated@@349)) (not (= $generated@@350 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@188 $generated@@349)))
)))
(assert (forall (($generated@@352 T@U) ) (! (= (type ($generated@@351 $generated@@352)) $generated@@204)
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@67) (= (type $generated@@355) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@312 ($generated@@351 $generated@@353) $generated@@354 $generated@@355) ($generated@@78 $generated@@353 $generated@@354 $generated@@355)))
 :pattern ( ($generated@@312 ($generated@@351 $generated@@353) $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@356) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@357) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@358) $generated@@204)) (= (type $generated@@359) $generated@@67)) ($generated@@161 $generated@@356 $generated@@357)) ($generated@@312 $generated@@358 $generated@@359 $generated@@356)) ($generated@@312 $generated@@358 $generated@@359 $generated@@357))
 :pattern ( ($generated@@161 $generated@@356 $generated@@357) ($generated@@312 $generated@@358 $generated@@359 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@360) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@361) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@363) $generated@@67)) ($generated@@161 $generated@@360 $generated@@361)) ($generated@@78 $generated@@362 $generated@@363 $generated@@360)) ($generated@@78 $generated@@362 $generated@@363 $generated@@361))
 :pattern ( ($generated@@161 $generated@@360 $generated@@361) ($generated@@78 $generated@@362 $generated@@363 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 Int) ($generated@@366 Int) ) (! (let (($generated@@367 ($generated@@172 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@171 $generated@@367)) (=> (and (and (<= 0 $generated@@365) (<= 0 $generated@@366)) (< $generated@@366 (- ($generated@@211 $generated@@364) $generated@@365))) (= ($generated@@229 ($generated@@209 $generated@@364 $generated@@365) $generated@@366) ($generated@@229 $generated@@364 (+ $generated@@366 $generated@@365))))))
 :weight 25
 :pattern ( ($generated@@229 ($generated@@209 $generated@@364 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@83 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@80 $generated@@369 $generated@@2)) (and (= (= ($generated@@145 $generated@@368) 0) (= $generated@@368 ($generated@@170 $generated@@369))) (=> (not (= ($generated@@145 $generated@@368) 0)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (< 0 ($generated ($generated@@85 $generated@@368 $generated@@370))))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@145 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (= (type ($generated@@371 $generated@@372)) $generated@@72)
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@373)) $generated@@61) (= ($generated@@371 ($generated@@137 $generated@@373)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@67) (and (= ($generated@@76 ($generated@@188 $generated@@374)) $generated@@62) (= ($generated@@371 ($generated@@188 $generated@@374)) $generated@@65)))
 :pattern ( ($generated@@188 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (=> (and (and (= (type $generated@@375) ($generated@@80 $generated@@378 $generated@@2)) (= (type $generated@@376) ($generated@@80 $generated@@378 $generated@@2))) (<= ($generated ($generated@@85 $generated@@375 $generated@@377)) ($generated ($generated@@85 $generated@@376 $generated@@377)))) (= ($generated ($generated@@85 ($generated@@146 $generated@@375 $generated@@376) $generated@@377)) 0)))
 :pattern ( ($generated@@146 $generated@@375 $generated@@376) ($generated@@85 $generated@@376 $generated@@377) ($generated@@85 $generated@@375 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (= ($generated@@1 ($generated@@381 $generated@@384 $generated@@385)) 17)) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= ($generated@@382 ($generated@@381 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@381 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= ($generated@@383 ($generated@@381 $generated@@388 $generated@@389)) $generated@@389)
 :pattern ( ($generated@@381 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@382 (type $generated@@390))))
(= (type ($generated@@379 $generated@@390)) ($generated@@80 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@390))
))) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= (type ($generated@@380 $generated@@392 $generated@@393)) ($generated@@381 $generated@@392 $generated@@393))
 :pattern ( ($generated@@380 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@T) ) (! (let (($generated@@396 (type $generated@@394)))
 (not ($generated@@0 ($generated@@85 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394))))
 :pattern ( (let (($generated@@396 (type $generated@@394)))
($generated@@85 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394)))
)))
(assert  (and (and (and (and (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (= ($generated@@1 ($generated@@399 $generated@@402 $generated@@403)) 18)) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= ($generated@@400 ($generated@@399 $generated@@404 $generated@@405)) $generated@@404)
 :pattern ( ($generated@@399 $generated@@404 $generated@@405))
))) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= ($generated@@401 ($generated@@399 $generated@@406 $generated@@407)) $generated@@407)
 :pattern ( ($generated@@399 $generated@@406 $generated@@407))
))) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@400 (type $generated@@408))))
(= (type ($generated@@397 $generated@@408)) ($generated@@80 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@408))
))) (forall (($generated@@410 T@T) ($generated@@411 T@T) ) (! (= (type ($generated@@398 $generated@@410 $generated@@411)) ($generated@@399 $generated@@410 $generated@@411))
 :pattern ( ($generated@@398 $generated@@410 $generated@@411))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@T) ) (! (let (($generated@@414 (type $generated@@412)))
 (not ($generated@@0 ($generated@@85 ($generated@@397 ($generated@@398 $generated@@414 $generated@@413)) $generated@@412))))
 :pattern ( (let (($generated@@414 (type $generated@@412)))
($generated@@85 ($generated@@397 ($generated@@398 $generated@@414 $generated@@413)) $generated@@412)))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@83 (type $generated@@415))))
 (=> (and (= (type $generated@@415) ($generated@@80 $generated@@417 $generated@@2)) (= (type $generated@@416) ($generated@@80 $generated@@417 $generated@@2))) (= ($generated@@145 ($generated@@148 $generated@@415 $generated@@416)) (+ ($generated@@145 $generated@@415) ($generated@@145 $generated@@416)))))
 :pattern ( ($generated@@145 ($generated@@148 $generated@@415 $generated@@416)))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@83 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@80 $generated@@419 $generated@@2)) (= ($generated@@223 $generated@@418) (forall (($generated@@420 T@U) ) (!  (=> (= (type $generated@@420) $generated@@419) (and (<= 0 ($generated ($generated@@85 $generated@@418 $generated@@420))) (<= ($generated ($generated@@85 $generated@@418 $generated@@420)) ($generated@@145 $generated@@418))))
 :pattern ( ($generated@@85 $generated@@418 $generated@@420))
)))))
 :pattern ( ($generated@@223 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@67) (= (type $generated@@422) $generated@@81)) (= ($generated@@140 $generated@@422 ($generated@@137 $generated@@421))  (or (= $generated@@422 $generated@@138) (= ($generated@@139 $generated@@422) ($generated@@137 $generated@@421)))))
 :pattern ( ($generated@@140 $generated@@422 ($generated@@137 $generated@@421)))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
 (=> (= (type $generated@@423) ($generated@@80 $generated@@425 $generated@@2)) (= ($generated ($generated@@85 ($generated@@336 $generated@@423 $generated@@424) $generated@@424)) (+ ($generated ($generated@@85 $generated@@423 $generated@@424)) 1))))
 :pattern ( ($generated@@336 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 Int) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
 (=> (= (type $generated@@426) ($generated@@171 $generated@@429)) (and (=> (= $generated@@427 ($generated@@211 $generated@@426)) (= ($generated@@229 ($generated@@210 $generated@@426 $generated@@428) $generated@@427) $generated@@428)) (=> (not (= $generated@@427 ($generated@@211 $generated@@426))) (= ($generated@@229 ($generated@@210 $generated@@426 $generated@@428) $generated@@427) ($generated@@229 $generated@@426 $generated@@427))))))
 :pattern ( ($generated@@229 ($generated@@210 $generated@@426 $generated@@428) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@431)))
 (=> (and (and (= (type $generated@@430) ($generated@@80 $generated@@433 $generated@@2)) (= (type $generated@@432) $generated@@433)) (< 0 ($generated ($generated@@85 $generated@@430 $generated@@432)))) (< 0 ($generated ($generated@@85 ($generated@@336 $generated@@430 $generated@@431) $generated@@432)))))
 :pattern ( ($generated@@336 $generated@@430 $generated@@431) ($generated@@85 $generated@@430 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@383 (type $generated@@434))))
(let (($generated@@436 ($generated@@382 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@381 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@380 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@379 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@383 (type $generated@@439))))
(= (type ($generated@@438 $generated@@439)) ($generated@@80 $generated@@440 $generated@@4)))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@383 (type $generated@@441))))
(let (($generated@@443 ($generated@@382 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@381 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@380 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@442) ($generated@@0 ($generated@@85 ($generated@@438 $generated@@441) $generated@@444)))
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@438 $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@401 (type $generated@@445))))
(let (($generated@@447 ($generated@@400 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@399 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@398 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@397 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@401 (type $generated@@450))))
(= (type ($generated@@449 $generated@@450)) ($generated@@80 $generated@@451 $generated@@4)))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@401 (type $generated@@452))))
(let (($generated@@454 ($generated@@400 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@399 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@398 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@453) ($generated@@0 ($generated@@85 ($generated@@449 $generated@@452) $generated@@455)))
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@449 $generated@@452))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@457)))
 (=> (and (= (type $generated@@456) ($generated@@80 $generated@@459 $generated@@2)) (= (type $generated@@458) $generated@@459)) (= (< 0 ($generated ($generated@@85 ($generated@@336 $generated@@456 $generated@@457) $generated@@458)))  (or (= $generated@@458 $generated@@457) (< 0 ($generated ($generated@@85 $generated@@456 $generated@@458)))))))
 :pattern ( ($generated@@85 ($generated@@336 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@461) $generated@@81)) (forall (($generated@@462 Int) ) (!  (=> (and (<= 0 $generated@@462) (< $generated@@462 ($generated@@211 ($generated@@259 $generated@@460 $generated@@461)))) (= ($generated@@229 ($generated@@259 $generated@@460 $generated@@461) $generated@@462) ($generated@@87 ($generated@@85 $generated@@460 $generated@@461) ($generated@@260 $generated@@462))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@460 $generated@@461) ($generated@@260 $generated@@462)))
 :pattern ( ($generated@@229 ($generated@@259 $generated@@460 $generated@@461) $generated@@462))
)))
 :pattern ( ($generated@@259 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@464) $generated@@67)) (= ($generated@@140 $generated@@463 ($generated@@222 $generated@@464)) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@204) (< 0 ($generated ($generated@@85 $generated@@463 $generated@@465)))) ($generated@@251 $generated@@465 $generated@@464))
 :pattern ( ($generated@@85 $generated@@463 $generated@@465))
))))
 :pattern ( ($generated@@140 $generated@@463 ($generated@@222 $generated@@464)))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@83 (type $generated@@467))))
 (=> (and (= (type $generated@@467) ($generated@@80 $generated@@469 $generated@@2)) (= (type $generated@@468) ($generated@@80 $generated@@469 $generated@@2))) (= ($generated@@466 $generated@@467 $generated@@468) (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@469) (= ($generated ($generated@@85 $generated@@467 $generated@@470)) ($generated ($generated@@85 $generated@@468 $generated@@470))))
 :pattern ( ($generated@@85 $generated@@467 $generated@@470))
 :pattern ( ($generated@@85 $generated@@468 $generated@@470))
)))))
 :pattern ( ($generated@@466 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 Int) ($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 (type $generated@@473)))
 (=> (= (type $generated@@471) ($generated@@171 $generated@@475)) (=> (and (and (<= 0 $generated@@472) (< $generated@@472 $generated@@474)) (<= $generated@@474 ($generated@@211 $generated@@471))) (= ($generated@@209 ($generated@@230 $generated@@471 $generated@@472 $generated@@473) $generated@@474) ($generated@@209 $generated@@471 $generated@@474)))))
 :pattern ( ($generated@@209 ($generated@@230 $generated@@471 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@476 ($generated@@285 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@204) ($generated@@0 ($generated@@85 $generated@@476 $generated@@479))) ($generated@@312 $generated@@479 $generated@@477 $generated@@478))
 :pattern ( ($generated@@85 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@78 $generated@@476 ($generated@@285 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@481) $generated@@67)) (= (type $generated@@482) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@480 ($generated@@290 $generated@@481) $generated@@482) (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@204) ($generated@@0 ($generated@@85 $generated@@480 $generated@@483))) ($generated@@312 $generated@@483 $generated@@481 $generated@@482))
 :pattern ( ($generated@@85 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@78 $generated@@480 ($generated@@290 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated ($generated@@85 ($generated@@170 $generated@@485) $generated@@484)) 0))
 :pattern ( (let (($generated@@485 (type $generated@@484)))
($generated@@85 ($generated@@170 $generated@@485) $generated@@484)))
)))
(assert  (and (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@486 $generated@@489)) ($generated@@80 $generated@@204 $generated@@4))
 :pattern ( ($generated@@486 $generated@@489))
)) (forall (($generated@@490 T@T) ($generated@@491 T@U) ) (! (= (type ($generated@@487 $generated@@490 $generated@@491)) $generated@@490)
 :pattern ( ($generated@@487 $generated@@490 $generated@@491))
))) (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@383 (type $generated@@492))))
(let (($generated@@494 ($generated@@382 (type $generated@@492))))
(= (type ($generated@@488 $generated@@492)) ($generated@@80 $generated@@494 $generated@@493))))
 :pattern ( ($generated@@488 $generated@@492))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) ($generated@@381 $generated@@204 $generated@@204)) (= (type $generated@@496) $generated@@204)) (= ($generated@@0 ($generated@@85 ($generated@@486 $generated@@495) $generated@@496))  (and ($generated@@0 ($generated@@85 ($generated@@379 $generated@@495) ($generated@@202 ($generated@@487 $generated@@195 $generated@@496)))) (= ($generated@@85 ($generated@@488 $generated@@495) ($generated@@202 ($generated@@487 $generated@@195 $generated@@496))) ($generated@@203 ($generated@@487 $generated@@195 $generated@@496))))))
 :pattern ( ($generated@@85 ($generated@@486 $generated@@495) $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) ($generated@@80 $generated@@204 $generated@@4))
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@401 (type $generated@@500))))
(let (($generated@@502 ($generated@@400 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500)) ($generated@@80 $generated@@502 $generated@@501))))
 :pattern ( ($generated@@498 $generated@@500))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) ($generated@@399 $generated@@204 $generated@@204)) (= (type $generated@@504) $generated@@204)) (= ($generated@@0 ($generated@@85 ($generated@@497 $generated@@503) $generated@@504))  (and ($generated@@0 ($generated@@85 ($generated@@397 $generated@@503) ($generated@@202 ($generated@@487 $generated@@195 $generated@@504)))) (= ($generated@@85 ($generated@@498 $generated@@503) ($generated@@202 ($generated@@487 $generated@@195 $generated@@504))) ($generated@@203 ($generated@@487 $generated@@195 $generated@@504))))))
 :pattern ( ($generated@@85 ($generated@@497 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(let (($generated@@508 ($generated@@382 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@381 $generated@@508 $generated@@507)) (= ($generated@@0 ($generated@@85 ($generated@@438 $generated@@505) $generated@@506)) (exists (($generated@@509 T@U) ) (!  (and (= (type $generated@@509) $generated@@508) (and ($generated@@0 ($generated@@85 ($generated@@379 $generated@@505) $generated@@509)) (= $generated@@506 ($generated@@85 ($generated@@488 $generated@@505) $generated@@509))))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@505) $generated@@509))
 :pattern ( ($generated@@85 ($generated@@488 $generated@@505) $generated@@509))
))))))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(let (($generated@@513 ($generated@@400 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@399 $generated@@513 $generated@@512)) (= ($generated@@0 ($generated@@85 ($generated@@449 $generated@@510) $generated@@511)) (exists (($generated@@514 T@U) ) (!  (and (= (type $generated@@514) $generated@@513) (and ($generated@@0 ($generated@@85 ($generated@@397 $generated@@510) $generated@@514)) (= $generated@@511 ($generated@@85 ($generated@@498 $generated@@510) $generated@@514))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@510) $generated@@514))
 :pattern ( ($generated@@85 ($generated@@498 $generated@@510) $generated@@514))
))))))
 :pattern ( ($generated@@85 ($generated@@449 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (= (type ($generated@@515 $generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@515 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) ($generated@@381 $generated@@204 $generated@@204)) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@518 ($generated@@515 $generated@@519 $generated@@520) $generated@@521) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@518) $generated@@522))) (and ($generated@@312 ($generated@@85 ($generated@@488 $generated@@518) $generated@@522) $generated@@520 $generated@@521) ($generated@@312 $generated@@522 $generated@@519 $generated@@521)))
 :pattern ( ($generated@@85 ($generated@@488 $generated@@518) $generated@@522))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@518) $generated@@522))
))))
 :pattern ( ($generated@@78 $generated@@518 ($generated@@515 $generated@@519 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) ($generated@@399 $generated@@204 $generated@@204)) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@526 ($generated@@523 $generated@@527 $generated@@528) $generated@@529) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@526) $generated@@530))) (and ($generated@@312 ($generated@@85 ($generated@@498 $generated@@526) $generated@@530) $generated@@528 $generated@@529) ($generated@@312 $generated@@530 $generated@@527 $generated@@529)))
 :pattern ( ($generated@@85 ($generated@@498 $generated@@526) $generated@@530))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@526) $generated@@530))
))))
 :pattern ( ($generated@@78 $generated@@526 ($generated@@523 $generated@@527 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@83 (type $generated@@531))))
 (=> (and (and (= (type $generated@@531) ($generated@@80 $generated@@533 $generated@@2)) (= (type $generated@@532) ($generated@@80 $generated@@533 $generated@@2))) ($generated@@466 $generated@@531 $generated@@532)) (= $generated@@531 $generated@@532)))
 :pattern ( ($generated@@466 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 Int) ) (! (let (($generated@@536 ($generated@@172 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@171 $generated@@536)) (=> (and (<= 0 $generated@@535) (<= $generated@@535 ($generated@@211 $generated@@534))) (= ($generated@@211 ($generated@@258 $generated@@534 $generated@@535)) $generated@@535))))
 :pattern ( ($generated@@211 ($generated@@258 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@537) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@538) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@539) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@537 $generated@@539))) (and ($generated@@161 $generated@@537 $generated@@538) ($generated@@161 $generated@@538 $generated@@539))) ($generated@@161 $generated@@537 $generated@@539))
 :pattern ( ($generated@@161 $generated@@537 $generated@@538) ($generated@@161 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 Int) ) (!  (=> (and (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@542) $generated@@81)) (=> (and (and (and ($generated@@180 $generated@@541) (and (not (= $generated@@542 $generated@@138)) (= ($generated@@139 $generated@@542) ($generated@@137 $generated@@540)))) (and (<= 0 $generated@@543) (< $generated@@543 ($generated@@136 $generated@@542)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@541 $generated@@542) $generated@@60))) ($generated@@312 ($generated@@87 ($generated@@85 $generated@@541 $generated@@542) ($generated@@260 $generated@@543)) $generated@@540 $generated@@541)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@541 $generated@@542) ($generated@@260 $generated@@543)) ($generated@@137 $generated@@540))
)))
(assert (forall (($generated@@545 T@T) ) (! (= (type ($generated@@544 $generated@@545)) ($generated@@80 $generated@@545 $generated@@4))
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@401 (type $generated@@546))))
(let (($generated@@548 ($generated@@400 (type $generated@@546))))
 (=> (= (type $generated@@546) ($generated@@399 $generated@@548 $generated@@547)) (= (= $generated@@546 ($generated@@398 $generated@@548 $generated@@547)) (= ($generated@@397 $generated@@546) ($generated@@544 $generated@@548))))))
 :pattern ( ($generated@@397 $generated@@546))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@401 (type $generated@@549))))
(let (($generated@@551 ($generated@@400 (type $generated@@549))))
 (=> (= (type $generated@@549) ($generated@@399 $generated@@551 $generated@@550)) (= (= $generated@@549 ($generated@@398 $generated@@551 $generated@@550)) (= ($generated@@449 $generated@@549) ($generated@@544 $generated@@550))))))
 :pattern ( ($generated@@449 $generated@@549))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@401 (type $generated@@552))))
(let (($generated@@554 ($generated@@400 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@399 $generated@@554 $generated@@553)) (= (= $generated@@552 ($generated@@398 $generated@@554 $generated@@553)) (= ($generated@@497 $generated@@552) ($generated@@544 $generated@@204))))))
 :pattern ( ($generated@@497 $generated@@552))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@383 (type $generated@@555))))
(let (($generated@@557 ($generated@@382 (type $generated@@555))))
 (=> (= (type $generated@@555) ($generated@@381 $generated@@557 $generated@@556)) (or (= $generated@@555 ($generated@@380 $generated@@557 $generated@@556)) (exists (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (and (and (= (type $generated@@558) $generated@@204) (= (type $generated@@559) $generated@@204)) ($generated@@0 ($generated@@85 ($generated@@486 $generated@@555) ($generated@@351 ($generated@@250 $generated@@558 $generated@@559)))))
 :no-pattern (type $generated@@558)
 :no-pattern (type $generated@@559)
 :no-pattern ($generated $generated@@558)
 :no-pattern ($generated@@0 $generated@@558)
 :no-pattern ($generated $generated@@559)
 :no-pattern ($generated@@0 $generated@@559)
))))))
 :pattern ( ($generated@@486 $generated@@555))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@401 (type $generated@@560))))
(let (($generated@@562 ($generated@@400 (type $generated@@560))))
 (=> (= (type $generated@@560) ($generated@@399 $generated@@562 $generated@@561)) (or (= $generated@@560 ($generated@@398 $generated@@562 $generated@@561)) (exists (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (and (and (= (type $generated@@563) $generated@@204) (= (type $generated@@564) $generated@@204)) ($generated@@0 ($generated@@85 ($generated@@497 $generated@@560) ($generated@@351 ($generated@@250 $generated@@563 $generated@@564)))))
 :no-pattern (type $generated@@563)
 :no-pattern (type $generated@@564)
 :no-pattern ($generated $generated@@563)
 :no-pattern ($generated@@0 $generated@@563)
 :no-pattern ($generated $generated@@564)
 :no-pattern ($generated@@0 $generated@@564)
))))))
 :pattern ( ($generated@@497 $generated@@560))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@204) ($generated@@251 $generated@@565 $generated@@46)) (and (= ($generated@@351 ($generated@@487 $generated@@2 $generated@@565)) $generated@@565) ($generated@@140 ($generated@@487 $generated@@2 $generated@@565) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@565 $generated@@46))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@204) ($generated@@251 $generated@@566 $generated@@47)) (and (= ($generated@@351 ($generated@@487 $generated@@3 $generated@@566)) $generated@@566) ($generated@@140 ($generated@@487 $generated@@3 $generated@@566) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@566 $generated@@47))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@204) ($generated@@251 $generated@@567 $generated@@44)) (and (= ($generated@@351 ($generated@@487 $generated@@4 $generated@@567)) $generated@@567) ($generated@@140 ($generated@@487 $generated@@4 $generated@@567) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@567 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@568) 19))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@204) ($generated@@251 $generated@@569 $generated@@45)) (and (= ($generated@@351 ($generated@@487 $generated@@568 $generated@@569)) $generated@@569) ($generated@@140 ($generated@@487 $generated@@568 $generated@@569) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@569 $generated@@45))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@67) (= ($generated@@251 ($generated@@351 $generated@@570) $generated@@571) ($generated@@140 $generated@@570 $generated@@571)))
 :pattern ( ($generated@@251 ($generated@@351 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 Int) ($generated@@574 T@U) ($generated@@575 Int) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (= (type $generated@@572) ($generated@@171 $generated@@576)) (=> (and (<= $generated@@575 $generated@@573) (< $generated@@573 ($generated@@211 $generated@@572))) (= ($generated@@258 ($generated@@230 $generated@@572 $generated@@573 $generated@@574) $generated@@575) ($generated@@258 $generated@@572 $generated@@575)))))
 :pattern ( ($generated@@258 ($generated@@230 $generated@@572 $generated@@573 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
(= (type ($generated@@577 $generated@@578)) ($generated@@80 $generated@@579 $generated@@2)))
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (= (type $generated@@581) $generated@@582) (and (= (= ($generated ($generated@@85 ($generated@@577 $generated@@580) $generated@@581)) 1) (= $generated@@580 $generated@@581)) (= (= ($generated ($generated@@85 ($generated@@577 $generated@@580) $generated@@581)) 0) (not (= $generated@@580 $generated@@581))))))
 :pattern ( ($generated@@85 ($generated@@577 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@81) (<= 0 ($generated@@136 $generated@@583)))
 :no-pattern (type $generated@@583)
 :no-pattern ($generated $generated@@583)
 :no-pattern ($generated@@0 $generated@@583)
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@83 (type $generated@@584))))
 (=> (= (type $generated@@584) ($generated@@80 $generated@@585 $generated@@2)) (<= 0 ($generated@@145 $generated@@584))))
 :pattern ( ($generated@@145 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@172 (type $generated@@586))))
 (=> (= (type $generated@@586) ($generated@@171 $generated@@587)) (<= 0 ($generated@@211 $generated@@586))))
 :pattern ( ($generated@@211 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (=> (and (= (type $generated@@588) ($generated@@80 $generated@@591 $generated@@2)) (= (type $generated@@589) ($generated@@80 $generated@@591 $generated@@2))) (= ($generated ($generated@@85 ($generated@@147 $generated@@588 $generated@@589) $generated@@590)) ($generated@@185 ($generated ($generated@@85 $generated@@588 $generated@@590)) ($generated ($generated@@85 $generated@@589 $generated@@590))))))
 :pattern ( ($generated@@85 ($generated@@147 $generated@@588 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@67)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@67) (= (type $generated@@595) $generated@@67)) (= ($generated@@592 ($generated@@515 $generated@@594 $generated@@595)) $generated@@594))
 :pattern ( ($generated@@515 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@67)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@67) (= (type $generated@@599) $generated@@67)) (= ($generated@@596 ($generated@@515 $generated@@598 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@515 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@67) (= (type $generated@@601) $generated@@67)) (= ($generated@@76 ($generated@@515 $generated@@600 $generated@@601)) $generated@@58))
 :pattern ( ($generated@@515 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@67)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@67) (= (type $generated@@605) $generated@@67)) (= ($generated@@602 ($generated@@523 $generated@@604 $generated@@605)) $generated@@604))
 :pattern ( ($generated@@523 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@67)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@67) (= (type $generated@@609) $generated@@67)) (= ($generated@@606 ($generated@@523 $generated@@608 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@523 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@67) (= (type $generated@@611) $generated@@67)) (= ($generated@@76 ($generated@@523 $generated@@610 $generated@@611)) $generated@@59))
 :pattern ( ($generated@@523 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@204) (= (type $generated@@613) $generated@@204)) (= ($generated@@321 ($generated@@250 $generated@@612 $generated@@613)) $generated@@63))
 :pattern ( ($generated@@250 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@67)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@67) (= (type $generated@@617) $generated@@67)) (= ($generated@@614 ($generated@@194 $generated@@616 $generated@@617)) $generated@@616))
 :pattern ( ($generated@@194 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@67)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@67) (= (type $generated@@621) $generated@@67)) (= ($generated@@618 ($generated@@194 $generated@@620 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@194 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@204) (= (type $generated@@623) $generated@@204)) (= ($generated@@202 ($generated@@250 $generated@@622 $generated@@623)) $generated@@622))
 :pattern ( ($generated@@250 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@204) (= (type $generated@@625) $generated@@204)) (= ($generated@@203 ($generated@@250 $generated@@624 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@250 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@171 $generated@@204)) (= (type $generated@@627) $generated@@67)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@626 ($generated@@303 $generated@@627) $generated@@628) (forall (($generated@@629 Int) ) (!  (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@211 $generated@@626))) ($generated@@312 ($generated@@229 $generated@@626 $generated@@629) $generated@@627 $generated@@628))
 :pattern ( ($generated@@229 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@303 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@630 ($generated@@79 $generated@@631)) $generated@@631)
 :pattern ( ($generated@@79 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@67)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@67) (= ($generated@@632 ($generated@@285 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@285 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@67) (= ($generated@@76 ($generated@@285 $generated@@635)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ) (! (= (type ($generated@@636 $generated@@637)) $generated@@67)
 :pattern ( ($generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@67) (= ($generated@@636 ($generated@@290 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@290 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@67) (= ($generated@@76 ($generated@@290 $generated@@639)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (! (= (type ($generated@@640 $generated@@641)) $generated@@67)
 :pattern ( ($generated@@640 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@67) (= ($generated@@640 ($generated@@222 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@222 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@67) (= ($generated@@76 ($generated@@222 $generated@@643)) $generated@@56))
 :pattern ( ($generated@@222 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ) (! (= (type ($generated@@644 $generated@@645)) $generated@@67)
 :pattern ( ($generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@67) (= ($generated@@644 ($generated@@303 $generated@@646)) $generated@@646))
 :pattern ( ($generated@@303 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@67) (= ($generated@@76 ($generated@@303 $generated@@647)) $generated@@57))
 :pattern ( ($generated@@303 $generated@@647))
)))
(assert (forall (($generated@@648 Int) ) (! (= ($generated@@75 ($generated@@260 $generated@@648)) 1)
 :pattern ( ($generated@@260 $generated@@648))
)))
(assert (forall (($generated@@650 Int) ) (! (= ($generated@@649 ($generated@@260 $generated@@650)) $generated@@650)
 :pattern ( ($generated@@260 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@67)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@67) (= ($generated@@651 ($generated@@137 $generated@@653)) $generated@@653))
 :pattern ( ($generated@@137 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ) (! (= (type ($generated@@654 $generated@@655)) $generated@@67)
 :pattern ( ($generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@67) (= ($generated@@654 ($generated@@188 $generated@@656)) $generated@@656))
 :pattern ( ($generated@@188 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (! (let (($generated@@658 (type $generated@@657)))
(= ($generated@@487 $generated@@658 ($generated@@351 $generated@@657)) $generated@@657))
 :pattern ( ($generated@@351 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@381 $generated@@204 $generated@@204)) (= (type $generated@@660) $generated@@67)) (= (type $generated@@661) $generated@@67)) (= ($generated@@140 $generated@@659 ($generated@@515 $generated@@660 $generated@@661)) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@659) $generated@@662))) (and ($generated@@251 ($generated@@85 ($generated@@488 $generated@@659) $generated@@662) $generated@@661) ($generated@@251 $generated@@662 $generated@@660)))
 :pattern ( ($generated@@85 ($generated@@488 $generated@@659) $generated@@662))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@659) $generated@@662))
))))
 :pattern ( ($generated@@140 $generated@@659 ($generated@@515 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@663) ($generated@@399 $generated@@204 $generated@@204)) (= (type $generated@@664) $generated@@67)) (= (type $generated@@665) $generated@@67)) (= ($generated@@140 $generated@@663 ($generated@@523 $generated@@664 $generated@@665)) (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@663) $generated@@666))) (and ($generated@@251 ($generated@@85 ($generated@@498 $generated@@663) $generated@@666) $generated@@665) ($generated@@251 $generated@@666 $generated@@664)))
 :pattern ( ($generated@@85 ($generated@@498 $generated@@663) $generated@@666))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@663) $generated@@666))
))))
 :pattern ( ($generated@@140 $generated@@663 ($generated@@523 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 Int) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@669) $generated@@204)) (= (type $generated@@670) $generated@@81)) (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@136 $generated@@670)))) (= ($generated@@259 ($generated@@86 $generated@@667 $generated@@670 ($generated@@88 ($generated@@85 $generated@@667 $generated@@670) ($generated@@260 $generated@@668) $generated@@669)) $generated@@670) ($generated@@230 ($generated@@259 $generated@@667 $generated@@670) $generated@@668 $generated@@669)))
 :pattern ( ($generated@@259 ($generated@@86 $generated@@667 $generated@@670 ($generated@@88 ($generated@@85 $generated@@667 $generated@@670) ($generated@@260 $generated@@668) $generated@@669)) $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 Int) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@67) (= (type $generated@@672) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@673) $generated@@81)) (and (and ($generated@@180 $generated@@672) (and (not (= $generated@@673 $generated@@138)) (= ($generated@@139 $generated@@673) ($generated@@137 $generated@@671)))) (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@136 $generated@@673))))) ($generated@@251 ($generated@@87 ($generated@@85 $generated@@672 $generated@@673) ($generated@@260 $generated@@674)) $generated@@671))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@672 $generated@@673) ($generated@@260 $generated@@674)) ($generated@@137 $generated@@671))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ($generated@@677 T@U) ($generated@@678 T@U) ) (! (let (($generated@@679 (type $generated@@677)))
 (=> (and (and (= (type $generated@@675) ($generated@@171 $generated@@679)) (= (type $generated@@678) $generated@@679)) (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@211 $generated@@675)))) (= ($generated ($generated@@85 ($generated@@168 ($generated@@230 $generated@@675 $generated@@676 $generated@@677)) $generated@@678)) ($generated ($generated@@85 ($generated@@148 ($generated@@146 ($generated@@168 $generated@@675) ($generated@@577 ($generated@@229 $generated@@675 $generated@@676))) ($generated@@577 $generated@@677)) $generated@@678)))))
 :pattern ( ($generated@@85 ($generated@@168 ($generated@@230 $generated@@675 $generated@@676 $generated@@677)) $generated@@678))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@204) (= (type $generated@@683) $generated@@204)) (< ($generated@@680 $generated@@682) ($generated@@681 ($generated@@250 $generated@@682 $generated@@683))))
 :pattern ( ($generated@@250 $generated@@682 $generated@@683))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) $generated@@204) (= (type $generated@@685) $generated@@204)) (< ($generated@@680 $generated@@685) ($generated@@681 ($generated@@250 $generated@@684 $generated@@685))))
 :pattern ( ($generated@@250 $generated@@684 $generated@@685))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (! (let (($generated@@688 ($generated@@83 (type $generated@@686))))
 (=> (and (= (type $generated@@686) ($generated@@80 $generated@@688 $generated@@2)) (= (type $generated@@687) ($generated@@80 $generated@@688 $generated@@2))) (= ($generated@@147 $generated@@686 ($generated@@147 $generated@@686 $generated@@687)) ($generated@@147 $generated@@686 $generated@@687))))
 :pattern ( ($generated@@147 $generated@@686 ($generated@@147 $generated@@686 $generated@@687)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) $generated@@204) (= (type $generated@@690) $generated@@67)) (= (type $generated@@691) $generated@@67)) ($generated@@251 $generated@@689 ($generated@@515 $generated@@690 $generated@@691))) (and (= ($generated@@351 ($generated@@487 ($generated@@381 $generated@@204 $generated@@204) $generated@@689)) $generated@@689) ($generated@@140 ($generated@@487 ($generated@@381 $generated@@204 $generated@@204) $generated@@689) ($generated@@515 $generated@@690 $generated@@691))))
 :pattern ( ($generated@@251 $generated@@689 ($generated@@515 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@204) (= (type $generated@@693) $generated@@67)) (= (type $generated@@694) $generated@@67)) ($generated@@251 $generated@@692 ($generated@@523 $generated@@693 $generated@@694))) (and (= ($generated@@351 ($generated@@487 ($generated@@399 $generated@@204 $generated@@204) $generated@@692)) $generated@@692) ($generated@@140 ($generated@@487 ($generated@@399 $generated@@204 $generated@@204) $generated@@692) ($generated@@523 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@251 $generated@@692 ($generated@@523 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) $generated@@67) (= (type $generated@@696) $generated@@67)) (= (type $generated@@697) $generated@@204)) ($generated@@251 $generated@@697 ($generated@@194 $generated@@695 $generated@@696))) (and (= ($generated@@351 ($generated@@487 $generated@@195 $generated@@697)) $generated@@697) ($generated@@140 ($generated@@487 $generated@@195 $generated@@697) ($generated@@194 $generated@@695 $generated@@696))))
 :pattern ( ($generated@@251 $generated@@697 ($generated@@194 $generated@@695 $generated@@696)))
)))
(assert (forall (($generated@@698 T@U) ) (! (let (($generated@@699 (type $generated@@698)))
 (not ($generated@@0 ($generated@@85 ($generated@@544 $generated@@699) $generated@@698))))
 :pattern ( (let (($generated@@699 (type $generated@@698)))
($generated@@85 ($generated@@544 $generated@@699) $generated@@698)))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@700) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@701) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@702) $generated@@81)) (=> (and (and (and ($generated@@180 $generated@@700) ($generated@@180 $generated@@701)) ($generated@@161 $generated@@700 $generated@@701)) (= ($generated@@85 $generated@@700 $generated@@702) ($generated@@85 $generated@@701 $generated@@702))) (= ($generated@@259 $generated@@700 $generated@@702) ($generated@@259 $generated@@701 $generated@@702))))
 :pattern ( ($generated@@259 $generated@@701 $generated@@702) ($generated@@161 $generated@@700 $generated@@701))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@709 T@T) ($generated@@710 T@T) ) (= ($generated@@1 ($generated@@705 $generated@@709 $generated@@710)) 20)) (forall (($generated@@711 T@T) ($generated@@712 T@T) ) (! (= ($generated@@706 ($generated@@705 $generated@@711 $generated@@712)) $generated@@711)
 :pattern ( ($generated@@705 $generated@@711 $generated@@712))
))) (forall (($generated@@713 T@T) ($generated@@714 T@T) ) (! (= ($generated@@707 ($generated@@705 $generated@@713 $generated@@714)) $generated@@714)
 :pattern ( ($generated@@705 $generated@@713 $generated@@714))
))) (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (! (let (($generated@@718 ($generated@@707 (type $generated@@715))))
(= (type ($generated@@703 $generated@@715 $generated@@716 $generated@@717)) $generated@@718))
 :pattern ( ($generated@@703 $generated@@715 $generated@@716 $generated@@717))
))) (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (! (let (($generated@@723 (type $generated@@722)))
(let (($generated@@724 (type $generated@@720)))
(= (type ($generated@@708 $generated@@719 $generated@@720 $generated@@721 $generated@@722)) ($generated@@705 $generated@@724 $generated@@723))))
 :pattern ( ($generated@@708 $generated@@719 $generated@@720 $generated@@721 $generated@@722))
))) (forall (($generated@@725 T@U) ($generated@@726 T@U) ($generated@@727 T@U) ($generated@@728 T@U) ) (! (let (($generated@@729 ($generated@@707 (type $generated@@725))))
 (=> (= (type $generated@@728) $generated@@729) (= ($generated@@703 ($generated@@708 $generated@@725 $generated@@726 $generated@@727 $generated@@728) $generated@@726 $generated@@727) $generated@@728)))
 :weight 0
))) (and (and (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 T@U) ) (!  (or (= $generated@@732 $generated@@734) (= ($generated@@703 ($generated@@708 $generated@@731 $generated@@732 $generated@@733 $generated@@730) $generated@@734 $generated@@735) ($generated@@703 $generated@@731 $generated@@734 $generated@@735)))
 :weight 0
)) (forall (($generated@@736 T@U) ($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ($generated@@741 T@U) ) (!  (or (= $generated@@739 $generated@@741) (= ($generated@@703 ($generated@@708 $generated@@737 $generated@@738 $generated@@739 $generated@@736) $generated@@740 $generated@@741) ($generated@@703 $generated@@737 $generated@@740 $generated@@741)))
 :weight 0
))) (forall (($generated@@742 T@U) ($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ) (!  (or true (= ($generated@@703 ($generated@@708 $generated@@743 $generated@@744 $generated@@745 $generated@@742) $generated@@746 $generated@@747) ($generated@@703 $generated@@743 $generated@@746 $generated@@747)))
 :weight 0
)))) (forall (($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (! (= (type ($generated@@704 $generated@@748 $generated@@749 $generated@@750 $generated@@751)) ($generated@@705 $generated@@81 $generated@@4))
 :pattern ( ($generated@@704 $generated@@748 $generated@@749 $generated@@750 $generated@@751))
))))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ) (! (let (($generated@@758 ($generated@@70 (type $generated@@757))))
 (=> (and (and (and (and (and (= (type $generated@@752) $generated@@81) (= (type $generated@@753) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@754) ($generated@@69 $generated@@4))) (= (type $generated@@755) $generated@@81)) (= (type $generated@@756) $generated@@81)) (= (type $generated@@757) ($generated@@69 $generated@@758))) (= ($generated@@0 ($generated@@703 ($generated@@704 $generated@@752 $generated@@753 $generated@@754 $generated@@755) $generated@@756 $generated@@757))  (=> (and (not (= $generated@@756 $generated@@752)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@753 $generated@@756) $generated@@754))) (= $generated@@756 $generated@@755)))))
 :pattern ( ($generated@@703 ($generated@@704 $generated@@752 $generated@@753 $generated@@754 $generated@@755) $generated@@756 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 Int) ($generated@@761 T@U) ) (! (let (($generated@@762 (type $generated@@761)))
 (=> (= (type $generated@@759) ($generated@@171 $generated@@762)) (=> (and (<= 0 $generated@@760) (< $generated@@760 ($generated@@211 $generated@@759))) (= ($generated@@211 ($generated@@230 $generated@@759 $generated@@760 $generated@@761)) ($generated@@211 $generated@@759)))))
 :pattern ( ($generated@@211 ($generated@@230 $generated@@759 $generated@@760 $generated@@761)))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (= (type $generated@@763) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@764) $generated@@81)) (= ($generated@@211 ($generated@@259 $generated@@763 $generated@@764)) ($generated@@136 $generated@@764)))
 :pattern ( ($generated@@211 ($generated@@259 $generated@@763 $generated@@764)))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) $generated@@67) (= (type $generated@@766) $generated@@67)) (and (= ($generated@@76 ($generated@@194 $generated@@765 $generated@@766)) $generated@@64) (= ($generated@@371 ($generated@@194 $generated@@765 $generated@@766)) $generated@@66)))
 :pattern ( ($generated@@194 $generated@@765 $generated@@766))
)))
(assert  (and (forall (($generated@@769 T@U) ) (! (let (($generated@@770 ($generated@@172 (type $generated@@769))))
(= (type ($generated@@767 $generated@@769)) ($generated@@171 $generated@@770)))
 :pattern ( ($generated@@767 $generated@@769))
)) (forall (($generated@@771 T@U) ) (! (let (($generated@@772 ($generated@@172 (type $generated@@771))))
(= (type ($generated@@768 $generated@@771)) $generated@@772))
 :pattern ( ($generated@@768 $generated@@771))
))))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ) (! (let (($generated@@775 (type $generated@@774)))
 (=> (= (type $generated@@773) ($generated@@171 $generated@@775)) (and (= ($generated@@767 ($generated@@210 $generated@@773 $generated@@774)) $generated@@773) (= ($generated@@768 ($generated@@210 $generated@@773 $generated@@774)) $generated@@774))))
 :pattern ( ($generated@@210 $generated@@773 $generated@@774))
)))
(assert (forall (($generated@@776 T@U) ) (!  (=> (= (type $generated@@776) $generated@@195) (= ($generated@@680 ($generated@@351 $generated@@776)) ($generated@@681 $generated@@776)))
 :pattern ( ($generated@@680 ($generated@@351 $generated@@776)))
)))
(assert (forall (($generated@@777 T@U) ) (! (let (($generated@@778 (type $generated@@777)))
(= ($generated@@577 $generated@@777) ($generated@@336 ($generated@@170 $generated@@778) $generated@@777)))
 :pattern ( ($generated@@577 $generated@@777))
)))
(assert (forall (($generated@@779 T@U) ) (! (let (($generated@@780 ($generated@@172 (type $generated@@779))))
 (=> (= (type $generated@@779) ($generated@@171 $generated@@780)) (= ($generated@@145 ($generated@@168 $generated@@779)) ($generated@@211 $generated@@779))))
 :pattern ( ($generated@@145 ($generated@@168 $generated@@779)))
)))
(assert (forall (($generated@@781 Int) ($generated@@782 Int) ) (! (= (<= $generated@@781 $generated@@782) (= ($generated@@185 $generated@@781 $generated@@782) $generated@@781))
 :pattern ( ($generated@@185 $generated@@781 $generated@@782))
)))
(assert (forall (($generated@@783 Int) ($generated@@784 Int) ) (! (= (<= $generated@@784 $generated@@783) (= ($generated@@185 $generated@@783 $generated@@784) $generated@@784))
 :pattern ( ($generated@@185 $generated@@783 $generated@@784))
)))
(assert (forall (($generated@@785 T@U) ) (!  (=> (and (= (type $generated@@785) $generated@@204) ($generated@@251 $generated@@785 ($generated@@79 0))) (and (= ($generated@@351 ($generated@@487 $generated@@2 $generated@@785)) $generated@@785) ($generated@@140 ($generated@@487 ($generated@@80 $generated@@204 $generated@@4) $generated@@785) ($generated@@79 0))))
 :pattern ( ($generated@@251 $generated@@785 ($generated@@79 0)))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (and (= (type $generated@@786) $generated@@204) (= (type $generated@@787) $generated@@67)) ($generated@@251 $generated@@786 ($generated@@285 $generated@@787))) (and (= ($generated@@351 ($generated@@487 ($generated@@80 $generated@@204 $generated@@4) $generated@@786)) $generated@@786) ($generated@@140 ($generated@@487 ($generated@@80 $generated@@204 $generated@@4) $generated@@786) ($generated@@285 $generated@@787))))
 :pattern ( ($generated@@251 $generated@@786 ($generated@@285 $generated@@787)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ) (!  (=> (and (and (= (type $generated@@788) $generated@@204) (= (type $generated@@789) $generated@@67)) ($generated@@251 $generated@@788 ($generated@@290 $generated@@789))) (and (= ($generated@@351 ($generated@@487 ($generated@@80 $generated@@204 $generated@@4) $generated@@788)) $generated@@788) ($generated@@140 ($generated@@487 ($generated@@80 $generated@@204 $generated@@4) $generated@@788) ($generated@@290 $generated@@789))))
 :pattern ( ($generated@@251 $generated@@788 ($generated@@290 $generated@@789)))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (and (= (type $generated@@790) $generated@@204) (= (type $generated@@791) $generated@@67)) ($generated@@251 $generated@@790 ($generated@@222 $generated@@791))) (and (= ($generated@@351 ($generated@@487 ($generated@@80 $generated@@204 $generated@@2) $generated@@790)) $generated@@790) ($generated@@140 ($generated@@487 ($generated@@80 $generated@@204 $generated@@2) $generated@@790) ($generated@@222 $generated@@791))))
 :pattern ( ($generated@@251 $generated@@790 ($generated@@222 $generated@@791)))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ) (!  (=> (and (and (= (type $generated@@792) $generated@@204) (= (type $generated@@793) $generated@@67)) ($generated@@251 $generated@@792 ($generated@@303 $generated@@793))) (and (= ($generated@@351 ($generated@@487 ($generated@@171 $generated@@204) $generated@@792)) $generated@@792) ($generated@@140 ($generated@@487 ($generated@@171 $generated@@204) $generated@@792) ($generated@@303 $generated@@793))))
 :pattern ( ($generated@@251 $generated@@792 ($generated@@303 $generated@@793)))
)))
(assert (forall (($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (and (= (type $generated@@794) $generated@@67) (= (type $generated@@795) $generated@@204)) ($generated@@251 $generated@@795 ($generated@@137 $generated@@794))) (and (= ($generated@@351 ($generated@@487 $generated@@81 $generated@@795)) $generated@@795) ($generated@@140 ($generated@@487 $generated@@81 $generated@@795) ($generated@@137 $generated@@794))))
 :pattern ( ($generated@@251 $generated@@795 ($generated@@137 $generated@@794)))
)))
(assert (forall (($generated@@796 T@U) ($generated@@797 T@U) ) (!  (=> (and (and (= (type $generated@@796) $generated@@67) (= (type $generated@@797) $generated@@204)) ($generated@@251 $generated@@797 ($generated@@188 $generated@@796))) (and (= ($generated@@351 ($generated@@487 $generated@@81 $generated@@797)) $generated@@797) ($generated@@140 ($generated@@487 $generated@@81 $generated@@797) ($generated@@188 $generated@@796))))
 :pattern ( ($generated@@251 $generated@@797 ($generated@@188 $generated@@796)))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ) (! (let (($generated@@800 (type $generated@@799)))
 (=> (= (type $generated@@798) ($generated@@171 $generated@@800)) (= ($generated@@168 ($generated@@210 $generated@@798 $generated@@799)) ($generated@@336 ($generated@@168 $generated@@798) $generated@@799))))
 :pattern ( ($generated@@168 ($generated@@210 $generated@@798 $generated@@799)))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ) (! (let (($generated@@805 (type $generated@@804)))
 (=> (and (and (and (= (type $generated@@801) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@802) $generated@@81)) (= (type $generated@@803) ($generated@@69 $generated@@805))) ($generated@@180 ($generated@@86 $generated@@801 $generated@@802 ($generated@@88 ($generated@@85 $generated@@801 $generated@@802) $generated@@803 $generated@@804)))) ($generated@@161 $generated@@801 ($generated@@86 $generated@@801 $generated@@802 ($generated@@88 ($generated@@85 $generated@@801 $generated@@802) $generated@@803 $generated@@804)))))
 :pattern ( ($generated@@86 $generated@@801 $generated@@802 ($generated@@88 ($generated@@85 $generated@@801 $generated@@802) $generated@@803 $generated@@804)))
)))
(assert (forall (($generated@@806 T@U) ($generated@@807 Int) ($generated@@808 Int) ) (! (let (($generated@@809 ($generated@@172 (type $generated@@806))))
 (=> (= (type $generated@@806) ($generated@@171 $generated@@809)) (=> (and (and (<= 0 $generated@@807) (<= $generated@@807 $generated@@808)) (< $generated@@808 ($generated@@211 $generated@@806))) (= ($generated@@229 ($generated@@209 $generated@@806 $generated@@807) (- $generated@@808 $generated@@807)) ($generated@@229 $generated@@806 $generated@@808)))))
 :weight 25
 :pattern ( ($generated@@229 $generated@@806 $generated@@808) ($generated@@209 $generated@@806 $generated@@807))
)))
(assert (forall (($generated@@810 T@U) ($generated@@811 T@U) ($generated@@812 T@U) ) (!  (=> (and (and (= (type $generated@@810) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@811) $generated@@67)) (= (type $generated@@812) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@810 ($generated@@222 $generated@@811) $generated@@812) (forall (($generated@@813 T@U) ) (!  (=> (and (= (type $generated@@813) $generated@@204) (< 0 ($generated ($generated@@85 $generated@@810 $generated@@813)))) ($generated@@312 $generated@@813 $generated@@811 $generated@@812))
 :pattern ( ($generated@@85 $generated@@810 $generated@@813))
))))
 :pattern ( ($generated@@78 $generated@@810 ($generated@@222 $generated@@811) $generated@@812))
)))
(assert (forall (($generated@@814 T@U) ($generated@@815 Int) ($generated@@816 Int) ) (! (let (($generated@@817 ($generated@@172 (type $generated@@814))))
 (=> (= (type $generated@@814) ($generated@@171 $generated@@817)) (=> (and (and (<= 0 $generated@@815) (<= 0 $generated@@816)) (<= (+ $generated@@815 $generated@@816) ($generated@@211 $generated@@814))) (= ($generated@@209 ($generated@@209 $generated@@814 $generated@@815) $generated@@816) ($generated@@209 $generated@@814 (+ $generated@@815 $generated@@816))))))
 :pattern ( ($generated@@209 ($generated@@209 $generated@@814 $generated@@815) $generated@@816))
)))
(assert (forall (($generated@@818 T@U) ($generated@@819 T@U) ($generated@@820 T@U) ) (!  (=> (and (and (and (= (type $generated@@818) $generated@@195) (= (type $generated@@819) $generated@@67)) (= (type $generated@@820) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@180 $generated@@820) (and ($generated@@193 $generated@@818) (exists (($generated@@821 T@U) ) (!  (and (= (type $generated@@821) $generated@@67) ($generated@@78 $generated@@818 ($generated@@194 $generated@@819 $generated@@821) $generated@@820))
 :pattern ( ($generated@@78 $generated@@818 ($generated@@194 $generated@@819 $generated@@821) $generated@@820))
))))) ($generated@@312 ($generated@@202 $generated@@818) $generated@@819 $generated@@820))
 :pattern ( ($generated@@312 ($generated@@202 $generated@@818) $generated@@819 $generated@@820))
)))
(assert (forall (($generated@@822 T@U) ($generated@@823 T@U) ($generated@@824 T@U) ) (!  (=> (and (and (and (= (type $generated@@822) $generated@@195) (= (type $generated@@823) $generated@@67)) (= (type $generated@@824) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@180 $generated@@824) (and ($generated@@193 $generated@@822) (exists (($generated@@825 T@U) ) (!  (and (= (type $generated@@825) $generated@@67) ($generated@@78 $generated@@822 ($generated@@194 $generated@@825 $generated@@823) $generated@@824))
 :pattern ( ($generated@@78 $generated@@822 ($generated@@194 $generated@@825 $generated@@823) $generated@@824))
))))) ($generated@@312 ($generated@@203 $generated@@822) $generated@@823 $generated@@824))
 :pattern ( ($generated@@312 ($generated@@203 $generated@@822) $generated@@823 $generated@@824))
)))
(assert (forall (($generated@@826 T@U) ($generated@@827 T@U) ($generated@@828 T@U) ) (! (let (($generated@@829 (type $generated@@827)))
 (=> (and (and (= (type $generated@@826) ($generated@@80 $generated@@829 $generated@@2)) (= (type $generated@@828) $generated@@829)) (not (= $generated@@827 $generated@@828))) (= ($generated ($generated@@85 $generated@@826 $generated@@828)) ($generated ($generated@@85 ($generated@@336 $generated@@826 $generated@@827) $generated@@828)))))
 :pattern ( ($generated@@336 $generated@@826 $generated@@827) ($generated@@85 $generated@@826 $generated@@828))
)))
(assert (forall (($generated@@830 Int) ) (!  (=> (< $generated@@830 0) (= ($generated@@295 $generated@@830) 0))
 :pattern ( ($generated@@295 $generated@@830))
)))
(assert (forall (($generated@@831 T@U) ($generated@@832 T@U) ) (!  (=> (and (= (type $generated@@831) $generated@@204) (= (type $generated@@832) $generated@@204)) (= ($generated@@250 ($generated@@299 $generated@@831) ($generated@@299 $generated@@832)) ($generated@@299 ($generated@@250 $generated@@831 $generated@@832))))
 :pattern ( ($generated@@250 ($generated@@299 $generated@@831) ($generated@@299 $generated@@832)))
)))
(assert (forall (($generated@@833 Int) ) (! (= ($generated@@351 ($generated@@8 ($generated@@297 $generated@@833))) ($generated@@299 ($generated@@351 ($generated@@8 $generated@@833))))
 :pattern ( ($generated@@351 ($generated@@8 ($generated@@297 $generated@@833))))
)))
(assert (forall (($generated@@834 T@U) ) (! (= ($generated@@351 ($generated@@299 $generated@@834)) ($generated@@299 ($generated@@351 $generated@@834)))
 :pattern ( ($generated@@351 ($generated@@299 $generated@@834)))
)))
(assert (forall (($generated@@835 T@U) ) (! (let (($generated@@836 ($generated@@172 (type $generated@@835))))
 (=> (and (= (type $generated@@835) ($generated@@171 $generated@@836)) (= ($generated@@211 $generated@@835) 0)) (= $generated@@835 ($generated@@169 $generated@@836))))
 :pattern ( ($generated@@211 $generated@@835))
)))
(assert (forall (($generated@@837 T@U) ($generated@@838 Int) ) (! (let (($generated@@839 ($generated@@172 (type $generated@@837))))
 (=> (and (= (type $generated@@837) ($generated@@171 $generated@@839)) (= $generated@@838 0)) (= ($generated@@258 $generated@@837 $generated@@838) ($generated@@169 $generated@@839))))
 :pattern ( ($generated@@258 $generated@@837 $generated@@838))
)))
(assert (forall (($generated@@840 T@U) ($generated@@841 T@U) ($generated@@842 T@U) ) (! (let (($generated@@843 (type $generated@@841)))
 (=> (and (and (= (type $generated@@840) ($generated@@80 $generated@@843 $generated@@2)) (= (type $generated@@842) $generated@@2)) (<= 0 ($generated $generated@@842))) (= ($generated@@145 ($generated@@86 $generated@@840 $generated@@841 $generated@@842)) (+ (- ($generated@@145 $generated@@840) ($generated ($generated@@85 $generated@@840 $generated@@841))) ($generated $generated@@842)))))
 :pattern ( ($generated@@145 ($generated@@86 $generated@@840 $generated@@841 $generated@@842)))
)))
(assert (forall (($generated@@844 T@U) ($generated@@845 T@U) ) (!  (=> (and (= (type $generated@@844) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@845) $generated@@2)) ($generated@@78 $generated@@845 $generated@@46 $generated@@844))
 :pattern ( ($generated@@78 $generated@@845 $generated@@46 $generated@@844))
)))
(assert (forall (($generated@@846 T@U) ($generated@@847 T@U) ) (!  (=> (and (= (type $generated@@846) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@847) $generated@@3)) ($generated@@78 $generated@@847 $generated@@47 $generated@@846))
 :pattern ( ($generated@@78 $generated@@847 $generated@@47 $generated@@846))
)))
(assert (forall (($generated@@848 T@U) ($generated@@849 T@U) ) (!  (=> (and (= (type $generated@@848) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@849) $generated@@4)) ($generated@@78 $generated@@849 $generated@@44 $generated@@848))
 :pattern ( ($generated@@78 $generated@@849 $generated@@44 $generated@@848))
)))
(assert (forall (($generated@@850 T@U) ($generated@@851 T@U) ) (!  (=> (and (= (type $generated@@850) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@851) $generated@@568)) ($generated@@78 $generated@@851 $generated@@45 $generated@@850))
 :pattern ( ($generated@@78 $generated@@851 $generated@@45 $generated@@850))
)))
(assert (forall (($generated@@852 T@U) ($generated@@853 T@U) ) (!  (=> (and (= (type $generated@@852) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@853) $generated@@204)) ($generated@@78 $generated@@853 $generated@@48 $generated@@852))
 :pattern ( ($generated@@78 $generated@@853 $generated@@48 $generated@@852))
)))
(assert (forall (($generated@@854 T@U) ($generated@@855 Int) ($generated@@856 T@U) ($generated@@857 Int) ) (! (let (($generated@@858 (type $generated@@856)))
 (=> (= (type $generated@@854) ($generated@@171 $generated@@858)) (=> (and (and (<= 0 $generated@@855) (< $generated@@855 $generated@@857)) (<= $generated@@857 ($generated@@211 $generated@@854))) (= ($generated@@258 ($generated@@230 $generated@@854 $generated@@855 $generated@@856) $generated@@857) ($generated@@230 ($generated@@258 $generated@@854 $generated@@857) $generated@@855 $generated@@856)))))
 :pattern ( ($generated@@258 ($generated@@230 $generated@@854 $generated@@855 $generated@@856) $generated@@857))
)))
(assert (forall (($generated@@859 T@U) ($generated@@860 T@U) ) (!  (=> (and (= (type $generated@@859) ($generated@@171 $generated@@204)) (= (type $generated@@860) $generated@@67)) (= ($generated@@140 $generated@@859 ($generated@@303 $generated@@860)) (forall (($generated@@861 Int) ) (!  (=> (and (<= 0 $generated@@861) (< $generated@@861 ($generated@@211 $generated@@859))) ($generated@@251 ($generated@@229 $generated@@859 $generated@@861) $generated@@860))
 :pattern ( ($generated@@229 $generated@@859 $generated@@861))
))))
 :pattern ( ($generated@@140 $generated@@859 ($generated@@303 $generated@@860)))
)))
(assert (forall (($generated@@862 T@U) ($generated@@863 Int) ) (!  (=> (= (type $generated@@862) ($generated@@171 $generated@@204)) (=> (and (<= 0 $generated@@863) (< $generated@@863 ($generated@@211 $generated@@862))) (< ($generated@@681 ($generated@@487 $generated@@195 ($generated@@229 $generated@@862 $generated@@863))) ($generated@@328 $generated@@862))))
 :pattern ( ($generated@@681 ($generated@@487 $generated@@195 ($generated@@229 $generated@@862 $generated@@863))))
)))
(assert (forall (($generated@@864 T@U) ($generated@@865 T@U) ($generated@@866 T@U) ) (!  (=> (and (and (and (= (type $generated@@864) ($generated@@381 $generated@@204 $generated@@204)) (= (type $generated@@865) $generated@@67)) (= (type $generated@@866) $generated@@67)) ($generated@@140 $generated@@864 ($generated@@515 $generated@@865 $generated@@866))) (and (and ($generated@@140 ($generated@@379 $generated@@864) ($generated@@285 $generated@@865)) ($generated@@140 ($generated@@438 $generated@@864) ($generated@@285 $generated@@866))) ($generated@@140 ($generated@@486 $generated@@864) ($generated@@285 ($generated@@194 $generated@@865 $generated@@866)))))
 :pattern ( ($generated@@140 $generated@@864 ($generated@@515 $generated@@865 $generated@@866)))
)))
(assert (forall (($generated@@867 T@U) ($generated@@868 T@U) ($generated@@869 T@U) ) (!  (=> (and (and (and (= (type $generated@@867) ($generated@@399 $generated@@204 $generated@@204)) (= (type $generated@@868) $generated@@67)) (= (type $generated@@869) $generated@@67)) ($generated@@140 $generated@@867 ($generated@@523 $generated@@868 $generated@@869))) (and (and ($generated@@140 ($generated@@397 $generated@@867) ($generated@@290 $generated@@868)) ($generated@@140 ($generated@@449 $generated@@867) ($generated@@290 $generated@@869))) ($generated@@140 ($generated@@497 $generated@@867) ($generated@@290 ($generated@@194 $generated@@868 $generated@@869)))))
 :pattern ( ($generated@@140 $generated@@867 ($generated@@523 $generated@@868 $generated@@869)))
)))
(assert (forall (($generated@@870 T@U) ) (!  (=> (= (type $generated@@870) $generated@@2) ($generated@@140 $generated@@870 $generated@@46))
 :pattern ( ($generated@@140 $generated@@870 $generated@@46))
)))
(assert (forall (($generated@@871 T@U) ) (!  (=> (= (type $generated@@871) $generated@@3) ($generated@@140 $generated@@871 $generated@@47))
 :pattern ( ($generated@@140 $generated@@871 $generated@@47))
)))
(assert (forall (($generated@@872 T@U) ) (!  (=> (= (type $generated@@872) $generated@@4) ($generated@@140 $generated@@872 $generated@@44))
 :pattern ( ($generated@@140 $generated@@872 $generated@@44))
)))
(assert (forall (($generated@@873 T@U) ) (!  (=> (= (type $generated@@873) $generated@@568) ($generated@@140 $generated@@873 $generated@@45))
 :pattern ( ($generated@@140 $generated@@873 $generated@@45))
)))
(assert (forall (($generated@@874 T@U) ) (!  (=> (= (type $generated@@874) $generated@@204) ($generated@@140 $generated@@874 $generated@@48))
 :pattern ( ($generated@@140 $generated@@874 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@875 () T@U)
(declare-fun $generated@@876 () T@U)
(declare-fun $generated@@877 () T@U)
(declare-fun $generated@@878 () Int)
(declare-fun $generated@@879 () T@U)
(declare-fun $generated@@880 () Int)
(declare-fun $generated@@881 () T@U)
(declare-fun $generated@@882 () Int)
(declare-fun $generated@@883 () Int)
(declare-fun $generated@@884 () T@U)
(declare-fun $generated@@885 () T@U)
(declare-fun $generated@@886 () Int)
(declare-fun $generated@@887 (T@U) Bool)
(declare-fun $generated@@888 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@875) ($generated@@705 $generated@@81 $generated@@4)) (= (type $generated@@876) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@877) $generated@@81)) (= (type $generated@@879) ($generated@@69 $generated@@204))) (= (type $generated@@881) ($generated@@69 $generated@@204))) (= (type $generated@@884) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@885) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@889  (=> (= $generated@@875 ($generated@@704 $generated@@138 $generated@@876 $generated@@60 $generated@@877)) (and (=> (= (ControlFlow 0 2) (- 0 16)) (not (= $generated@@877 $generated@@138))) (=> (not (= $generated@@877 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= 0 $generated@@878) (< $generated@@878 ($generated@@136 $generated@@877)))) (=> (and (<= 0 $generated@@878) (< $generated@@878 ($generated@@136 $generated@@877))) (=> (= $generated@@879 ($generated@@260 $generated@@878)) (and (=> (= (ControlFlow 0 2) (- 0 14)) ($generated@@0 ($generated@@703 $generated@@875 $generated@@877 $generated@@879))) (=> ($generated@@0 ($generated@@703 $generated@@875 $generated@@877 $generated@@879)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (not (= $generated@@877 $generated@@138))) (=> (not (= $generated@@877 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= 0 $generated@@880) (< $generated@@880 ($generated@@136 $generated@@877)))) (=> (and (<= 0 $generated@@880) (< $generated@@880 ($generated@@136 $generated@@877))) (=> (= $generated@@881 ($generated@@260 $generated@@880)) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@0 ($generated@@703 $generated@@875 $generated@@877 $generated@@881))) (=> ($generated@@0 ($generated@@703 $generated@@875 $generated@@877 $generated@@881)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (not (= $generated@@877 $generated@@138))) (=> (not (= $generated@@877 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 $generated@@880) (< $generated@@880 ($generated@@136 $generated@@877)))) (=> (and (<= 0 $generated@@880) (< $generated@@880 ($generated@@136 $generated@@877))) (=> (= $generated@@882 ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@876 $generated@@877) ($generated@@260 $generated@@880))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@877 $generated@@138))) (=> (not (= $generated@@877 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 $generated@@878) (< $generated@@878 ($generated@@136 $generated@@877)))) (=> (and (<= 0 $generated@@878) (< $generated@@878 ($generated@@136 $generated@@877))) (=> (= $generated@@883 ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@876 $generated@@877) ($generated@@260 $generated@@878))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (or (not (= $generated@@877 $generated@@877)) (not (= $generated@@880 $generated@@878))) (= ($generated@@351 ($generated@@8 $generated@@883)) ($generated@@351 ($generated@@8 $generated@@882))))) (=> (or (or (not (= $generated@@877 $generated@@877)) (not (= $generated@@880 $generated@@878))) (= ($generated@@351 ($generated@@8 $generated@@883)) ($generated@@351 ($generated@@8 $generated@@882)))) (=> (and (and (= $generated@@884 ($generated@@86 $generated@@876 $generated@@877 ($generated@@88 ($generated@@85 $generated@@876 $generated@@877) $generated@@879 ($generated@@351 ($generated@@8 $generated@@882))))) ($generated@@180 $generated@@884)) (and (= $generated@@885 ($generated@@86 $generated@@884 $generated@@877 ($generated@@88 ($generated@@85 $generated@@884 $generated@@877) $generated@@881 ($generated@@351 ($generated@@8 $generated@@883))))) ($generated@@180 $generated@@885))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@466 ($generated@@168 ($generated@@209 ($generated@@258 ($generated@@259 $generated@@885 $generated@@877) $generated@@886) ($generated@@297 0))) ($generated@@168 ($generated@@209 ($generated@@258 ($generated@@259 $generated@@876 $generated@@877) $generated@@886) ($generated@@297 0))))) (=> ($generated@@466 ($generated@@168 ($generated@@209 ($generated@@258 ($generated@@259 $generated@@885 $generated@@877) $generated@@886) ($generated@@297 0))) ($generated@@168 ($generated@@209 ($generated@@258 ($generated@@259 $generated@@876 $generated@@877) $generated@@886) ($generated@@297 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@885 $generated@@877) ($generated@@260 $generated@@880)))) ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@876 $generated@@877) ($generated@@260 $generated@@878)))))) (=> (= ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@885 $generated@@877) ($generated@@260 $generated@@880)))) ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@876 $generated@@877) ($generated@@260 $generated@@878))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@885 $generated@@877) ($generated@@260 $generated@@878)))) ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@876 $generated@@877) ($generated@@260 $generated@@880)))))) (=> (= ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@885 $generated@@877) ($generated@@260 $generated@@878)))) ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@876 $generated@@877) ($generated@@260 $generated@@880))))) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@890 Int) ) (!  (=> true (=> (and (and (<= ($generated@@297 0) $generated@@890) (< $generated@@890 $generated@@886)) (not (or (= $generated@@890 $generated@@878) (= $generated@@890 $generated@@880)))) (= ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@885 $generated@@877) ($generated@@260 $generated@@890)))) ($generated ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@876 $generated@@877) ($generated@@260 $generated@@890)))))))
 :pattern ( ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@876 $generated@@877) ($generated@@260 $generated@@890))))
 :pattern ( ($generated@@487 $generated@@2 ($generated@@87 ($generated@@85 $generated@@885 $generated@@877) ($generated@@260 $generated@@890))))
)))))))))))))))))))))))))))))))))))))))
(let (($generated@@891  (=> (and ($generated@@180 $generated@@876) ($generated@@887 $generated@@876)) (=> (and (and (and ($generated@@140 $generated@@877 ($generated@@188 $generated@@46)) ($generated@@78 $generated@@877 ($generated@@188 $generated@@46) $generated@@876)) (and (= 1 $generated@@888) (<= ($generated@@297 0) $generated@@878))) (and (and (< $generated@@878 $generated@@880) (< $generated@@880 $generated@@886)) (and (<= $generated@@886 ($generated@@136 $generated@@877)) (= (ControlFlow 0 17) 2)))) $generated@@889))))
$generated@@891)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Int)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@T) T@U)
(declare-fun $generated@@150 (T@T) T@U)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@162 (Int Int) Int)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@188 (T@U Int) T@U)
(declare-fun $generated@@189 (T@U Int T@U) T@U)
(declare-fun $generated@@190 (T@U) Int)
(declare-fun $generated@@203 (T@U T@U T@U) T@U)
(declare-fun $generated@@204 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@205 (T@T T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (Int) Int)
(declare-fun $generated@@292 (Int) Int)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Bool)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@316 (T@U T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@T T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@T T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@T) T@U)
(declare-fun $generated@@500 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@677 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@79 (type $generated@@136))))
(= (type ($generated@@133 $generated@@136 $generated@@137)) ($generated@@76 $generated@@138 $generated@@2)))
 :pattern ( ($generated@@133 $generated@@136 $generated@@137))
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@79 (type $generated@@139))))
(= (type ($generated@@134 $generated@@139 $generated@@140)) ($generated@@76 $generated@@141 $generated@@2)))
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@79 (type $generated@@142))))
(= (type ($generated@@135 $generated@@142 $generated@@143)) ($generated@@76 $generated@@144 $generated@@2)))
 :pattern ( ($generated@@135 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@79 (type $generated@@145))))
 (=> (and (= (type $generated@@145) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@146) ($generated@@76 $generated@@147 $generated@@2))) (and (= (+ (+ ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)) ($generated@@132 ($generated@@133 $generated@@146 $generated@@145))) (* 2 ($generated@@132 ($generated@@134 $generated@@145 $generated@@146)))) ($generated@@132 ($generated@@135 $generated@@145 $generated@@146))) (= ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)) (- ($generated@@132 $generated@@145) ($generated@@132 ($generated@@134 $generated@@145 $generated@@146)))))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)))
)))
(assert  (and (and (and (and (forall (($generated@@153 T@T) ) (= ($generated@@1 ($generated@@151 $generated@@153)) 14)) (forall (($generated@@154 T@T) ) (! (= ($generated@@152 ($generated@@151 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@152 (type $generated@@155))))
(= (type ($generated@@148 $generated@@155)) ($generated@@76 $generated@@156 $generated@@2)))
 :pattern ( ($generated@@148 $generated@@155))
))) (forall (($generated@@157 T@T) ) (! (= (type ($generated@@149 $generated@@157)) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@149 $generated@@157))
))) (forall (($generated@@158 T@T) ) (! (= (type ($generated@@150 $generated@@158)) ($generated@@76 $generated@@158 $generated@@2))
 :pattern ( ($generated@@150 $generated@@158))
))))
(assert (forall (($generated@@159 T@T) ) (= ($generated@@148 ($generated@@149 $generated@@159)) ($generated@@150 $generated@@159))))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@160 $generated@@161 ($generated@@75 0)))
 :pattern ( ($generated@@160 $generated@@161 ($generated@@75 0)))
)))
(assert (forall (($generated@@163 Int) ($generated@@164 Int) ) (!  (or (= ($generated@@162 $generated@@163 $generated@@164) $generated@@163) (= ($generated@@162 $generated@@163 $generated@@164) $generated@@164))
 :pattern ( ($generated@@162 $generated@@163 $generated@@164))
)))
(assert  (and (= ($generated@@1 $generated@@167) 15) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@168 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@166 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@64) (= (type $generated@@171) $generated@@64)) (= (type $generated@@172) $generated@@167)) ($generated@@160 $generated@@172 ($generated@@166 $generated@@170 $generated@@171))) ($generated@@165 $generated@@172))
 :pattern ( ($generated@@165 $generated@@172) ($generated@@160 $generated@@172 ($generated@@166 $generated@@170 $generated@@171)))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 16) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@175 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@167) (= (type $generated@@180) $generated@@167)) true) (= ($generated@@173 $generated@@179 $generated@@180)  (and (= ($generated@@174 $generated@@179) ($generated@@174 $generated@@180)) (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)))))
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@64)
 :pattern ( ($generated@@181 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) ($generated@@76 $generated@@176 $generated@@2)) (= (type $generated@@185) $generated@@64)) ($generated@@160 $generated@@184 ($generated@@181 $generated@@185))) ($generated@@182 $generated@@184))
 :pattern ( ($generated@@160 $generated@@184 ($generated@@181 $generated@@185)))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@152 (type $generated@@186))))
 (=> (= (type $generated@@186) ($generated@@151 $generated@@187)) ($generated@@182 ($generated@@148 $generated@@186))))
 :pattern ( ($generated@@148 $generated@@186))
)))
(assert  (and (forall (($generated@@191 T@U) ($generated@@192 Int) ) (! (let (($generated@@193 ($generated@@152 (type $generated@@191))))
(= (type ($generated@@188 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@188 $generated@@191 $generated@@192))
)) (forall (($generated@@194 T@U) ($generated@@195 Int) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(= (type ($generated@@189 $generated@@194 $generated@@195 $generated@@196)) ($generated@@151 $generated@@197)))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195 $generated@@196))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 Int) ($generated@@200 T@U) ($generated@@201 Int) ) (! (let (($generated@@202 (type $generated@@200)))
 (=> (= (type $generated@@198) ($generated@@151 $generated@@202)) (=> (and (<= 0 $generated@@201) (< $generated@@201 ($generated@@190 $generated@@198))) (and (=> (= $generated@@199 $generated@@201) (= ($generated@@188 ($generated@@189 $generated@@198 $generated@@199 $generated@@200) $generated@@201) $generated@@200)) (=> (not (= $generated@@199 $generated@@201)) (= ($generated@@188 ($generated@@189 $generated@@198 $generated@@199 $generated@@200) $generated@@201) ($generated@@188 $generated@@198 $generated@@201)))))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@198 $generated@@199 $generated@@200) $generated@@201))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@205 $generated@@209 $generated@@210)) 17)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@205 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@207 ($generated@@205 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@205 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@203 $generated@@215 $generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@203 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 (type $generated@@222)))
(let (($generated@@224 (type $generated@@220)))
(= (type ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@205 $generated@@224 $generated@@223))))
 :pattern ( ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@207 (type $generated@@225))))
 (=> (= (type $generated@@228) $generated@@229) (= ($generated@@203 ($generated@@208 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@226 $generated@@227) $generated@@228)))
 :weight 0
))) (and (and (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@203 ($generated@@208 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@203 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@203 ($generated@@208 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@203 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or true (= ($generated@@203 ($generated@@208 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@203 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
)))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ) (! (= (type ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@205 $generated@@77 $generated@@4))
 :pattern ( ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@67 (type $generated@@257))))
 (=> (and (and (and (and (= (type $generated@@252) $generated@@77) (= (type $generated@@253) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@254) ($generated@@66 $generated@@4))) (= (type $generated@@256) $generated@@77)) (= (type $generated@@257) ($generated@@66 $generated@@258))) (= ($generated@@0 ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (not (= $generated@@256 $generated@@252)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@253 $generated@@256) $generated@@254))) $generated@@255))))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@79 (type $generated@@259))))
 (=> (and (= (type $generated@@259) ($generated@@76 $generated@@261 $generated@@2)) (= (type $generated@@260) ($generated@@76 $generated@@261 $generated@@2))) (= ($generated@@134 ($generated@@134 $generated@@259 $generated@@260) $generated@@260) ($generated@@134 $generated@@259 $generated@@260))))
 :pattern ( ($generated@@134 ($generated@@134 $generated@@259 $generated@@260) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
 (=> (= (type $generated@@262) ($generated@@151 $generated@@264)) (= (exists (($generated@@265 Int) ) (!  (and (and (<= 0 $generated@@265) (< $generated@@265 ($generated@@190 $generated@@262))) (= $generated@@263 ($generated@@188 $generated@@262 $generated@@265)))
 :pattern ( ($generated@@188 $generated@@262 $generated@@265))
)) (< 0 ($generated ($generated@@81 ($generated@@148 $generated@@262) $generated@@263))))))
 :pattern ( ($generated@@81 ($generated@@148 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@268 $generated@@269)) $generated@@167)
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@270) $generated@@64) (= (type $generated@@271) $generated@@64)) (= (type $generated@@272) $generated@@176)) (= (type $generated@@273) $generated@@176)) (= ($generated@@160 ($generated@@266 $generated@@272 $generated@@273) ($generated@@166 $generated@@270 $generated@@271))  (and ($generated@@267 $generated@@272 $generated@@270) ($generated@@267 $generated@@273 $generated@@271))))
 :pattern ( ($generated@@160 ($generated@@266 $generated@@272 $generated@@273) ($generated@@166 $generated@@270 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
 (=> (and (= (type $generated@@274) ($generated@@76 $generated@@277 $generated@@2)) (= (type $generated@@275) ($generated@@76 $generated@@277 $generated@@2))) (= ($generated ($generated@@81 ($generated@@135 $generated@@274 $generated@@275) $generated@@276)) (+ ($generated ($generated@@81 $generated@@274 $generated@@276)) ($generated ($generated@@81 $generated@@275 $generated@@276))))))
 :pattern ( ($generated@@81 ($generated@@135 $generated@@274 $generated@@275) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@167) (= (type $generated@@279) $generated@@167)) (= ($generated@@173 $generated@@278 $generated@@279) (= $generated@@278 $generated@@279)))
 :pattern ( ($generated@@173 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@64)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@76 $generated@@176 $generated@@4)) (= (type $generated@@283) $generated@@64)) (= ($generated@@160 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@176) ($generated@@0 ($generated@@81 $generated@@282 $generated@@284))) ($generated@@267 $generated@@284 $generated@@283))
 :pattern ( ($generated@@81 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@160 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@64)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@76 $generated@@176 $generated@@4)) (= (type $generated@@288) $generated@@64)) (= ($generated@@160 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@176) ($generated@@0 ($generated@@81 $generated@@287 $generated@@289))) ($generated@@267 $generated@@289 $generated@@288))
 :pattern ( ($generated@@81 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@160 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 Int) ) (!  (=> (<= 0 $generated@@291) (= ($generated@@290 $generated@@291) $generated@@291))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 Int) ) (! (= ($generated@@292 $generated@@293) $generated@@293)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
(= (type ($generated@@294 $generated@@295)) $generated@@296))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= ($generated@@294 $generated@@297) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@64) (= (type $generated@@301) $generated@@64)) (= (type $generated@@302) $generated@@176)) (= (type $generated@@303) $generated@@176)) (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@298 $generated@@304)) (= ($generated@@74 ($generated@@266 $generated@@302 $generated@@303) ($generated@@166 $generated@@300 $generated@@301) $generated@@304)  (and ($generated@@299 $generated@@302 $generated@@300 $generated@@304) ($generated@@299 $generated@@303 $generated@@301 $generated@@304))))
 :pattern ( ($generated@@74 ($generated@@266 $generated@@302 $generated@@303) ($generated@@166 $generated@@300 $generated@@301) $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@68)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@167) (= ($generated@@165 $generated@@307) (= ($generated@@305 $generated@@307) $generated@@61)))
 :pattern ( ($generated@@165 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (! (let (($generated@@311 (type $generated@@310)))
 (=> (and (= (type $generated@@308) ($generated@@76 $generated@@311 $generated@@2)) (= (type $generated@@309) ($generated@@76 $generated@@311 $generated@@2))) (= ($generated ($generated@@81 ($generated@@133 $generated@@308 $generated@@309) $generated@@310)) ($generated@@290 (- ($generated ($generated@@81 $generated@@308 $generated@@310)) ($generated ($generated@@81 $generated@@309 $generated@@310)))))))
 :pattern ( ($generated@@81 ($generated@@133 $generated@@308 $generated@@309) $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@167) ($generated@@165 $generated@@312)) (exists (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (and (and (= (type $generated@@313) $generated@@176) (= (type $generated@@314) $generated@@176)) (= $generated@@312 ($generated@@266 $generated@@313 $generated@@314)))
 :no-pattern (type $generated@@313)
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@165 $generated@@312))
)))
(assert (forall (($generated@@315 T@T) ) (! (= ($generated@@190 ($generated@@149 $generated@@315)) 0)
 :pattern ( ($generated@@149 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (! (let (($generated@@319 (type $generated@@318)))
(= (type ($generated@@316 $generated@@317 $generated@@318)) ($generated@@76 $generated@@319 $generated@@2)))
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (! (let (($generated@@322 (type $generated@@321)))
 (=> (= (type $generated@@320) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@132 ($generated@@316 $generated@@320 $generated@@321)) (+ ($generated@@132 $generated@@320) 1))))
 :pattern ( ($generated@@132 ($generated@@316 $generated@@320 $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@176)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@64) (= (type $generated@@327) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@299 ($generated@@323 $generated@@325) $generated@@326 $generated@@327) ($generated@@74 $generated@@325 $generated@@326 $generated@@327)))
 :pattern ( ($generated@@299 ($generated@@323 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@79 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@76 $generated@@329 $generated@@2)) (and (= (= ($generated@@132 $generated@@328) 0) (= $generated@@328 ($generated@@150 $generated@@329))) (=> (not (= ($generated@@132 $generated@@328) 0)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330))))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@132 $generated@@328))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (and (and (= (type $generated@@331) ($generated@@76 $generated@@334 $generated@@2)) (= (type $generated@@332) ($generated@@76 $generated@@334 $generated@@2))) (<= ($generated ($generated@@81 $generated@@331 $generated@@333)) ($generated ($generated@@81 $generated@@332 $generated@@333)))) (= ($generated ($generated@@81 ($generated@@133 $generated@@331 $generated@@332) $generated@@333)) 0)))
 :pattern ( ($generated@@133 $generated@@331 $generated@@332) ($generated@@81 $generated@@332 $generated@@333) ($generated@@81 $generated@@331 $generated@@333))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 18)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@81 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@81 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert  (and (and (and (and (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@358 $generated@@359)) 19)) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@355 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@355 $generated@@362 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@355 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@356 (type $generated@@364))))
(= (type ($generated@@353 $generated@@364)) ($generated@@76 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@364))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@354 $generated@@366 $generated@@367)) ($generated@@355 $generated@@366 $generated@@367))
 :pattern ( ($generated@@354 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@81 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@81 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@79 (type $generated@@371))))
 (=> (and (= (type $generated@@371) ($generated@@76 $generated@@373 $generated@@2)) (= (type $generated@@372) ($generated@@76 $generated@@373 $generated@@2))) (= ($generated@@132 ($generated@@135 $generated@@371 $generated@@372)) (+ ($generated@@132 $generated@@371) ($generated@@132 $generated@@372)))))
 :pattern ( ($generated@@132 ($generated@@135 $generated@@371 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@79 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@76 $generated@@375 $generated@@2)) (= ($generated@@182 $generated@@374) (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@375) (and (<= 0 ($generated ($generated@@81 $generated@@374 $generated@@376))) (<= ($generated ($generated@@81 $generated@@374 $generated@@376)) ($generated@@132 $generated@@374))))
 :pattern ( ($generated@@81 $generated@@374 $generated@@376))
)))))
 :pattern ( ($generated@@182 $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (=> (= (type $generated@@377) ($generated@@76 $generated@@379 $generated@@2)) (= ($generated ($generated@@81 ($generated@@316 $generated@@377 $generated@@378) $generated@@378)) (+ ($generated ($generated@@81 $generated@@377 $generated@@378)) 1))))
 :pattern ( ($generated@@316 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@381)))
 (=> (and (and (= (type $generated@@380) ($generated@@76 $generated@@383 $generated@@2)) (= (type $generated@@382) $generated@@383)) (< 0 ($generated ($generated@@81 $generated@@380 $generated@@382)))) (< 0 ($generated ($generated@@81 ($generated@@316 $generated@@380 $generated@@381) $generated@@382)))))
 :pattern ( ($generated@@316 $generated@@380 $generated@@381) ($generated@@81 $generated@@380 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@339 (type $generated@@384))))
(let (($generated@@386 ($generated@@338 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@337 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@336 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@335 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@339 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@339 (type $generated@@391))))
(let (($generated@@393 ($generated@@338 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@337 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@336 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@81 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@357 (type $generated@@395))))
(let (($generated@@397 ($generated@@356 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@355 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@354 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@353 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@357 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@76 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@357 (type $generated@@402))))
(let (($generated@@404 ($generated@@356 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@355 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@354 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@81 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@407)))
 (=> (and (= (type $generated@@406) ($generated@@76 $generated@@409 $generated@@2)) (= (type $generated@@408) $generated@@409)) (= (< 0 ($generated ($generated@@81 ($generated@@316 $generated@@406 $generated@@407) $generated@@408)))  (or (= $generated@@408 $generated@@407) (< 0 ($generated ($generated@@81 $generated@@406 $generated@@408)))))))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@76 $generated@@176 $generated@@2)) (= (type $generated@@411) $generated@@64)) (= ($generated@@160 $generated@@410 ($generated@@181 $generated@@411)) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@176) (< 0 ($generated ($generated@@81 $generated@@410 $generated@@412)))) ($generated@@267 $generated@@412 $generated@@411))
 :pattern ( ($generated@@81 $generated@@410 $generated@@412))
))))
 :pattern ( ($generated@@160 $generated@@410 ($generated@@181 $generated@@411)))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@79 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@76 $generated@@416 $generated@@2)) (= (type $generated@@415) ($generated@@76 $generated@@416 $generated@@2))) (= ($generated@@413 $generated@@414 $generated@@415) (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@416) (= ($generated ($generated@@81 $generated@@414 $generated@@417)) ($generated ($generated@@81 $generated@@415 $generated@@417))))
 :pattern ( ($generated@@81 $generated@@414 $generated@@417))
 :pattern ( ($generated@@81 $generated@@415 $generated@@417))
)))))
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@76 $generated@@176 $generated@@4)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@418 ($generated@@280 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@176) ($generated@@0 ($generated@@81 $generated@@418 $generated@@421))) ($generated@@299 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@81 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@418 ($generated@@280 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@76 $generated@@176 $generated@@4)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@422 ($generated@@285 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@176) ($generated@@0 ($generated@@81 $generated@@422 $generated@@425))) ($generated@@299 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@81 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@74 $generated@@422 ($generated@@285 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@81 ($generated@@150 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@81 ($generated@@150 $generated@@427) $generated@@426)))
)))
(assert  (and (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@428 $generated@@431)) ($generated@@76 $generated@@176 $generated@@4))
 :pattern ( ($generated@@428 $generated@@431))
)) (forall (($generated@@432 T@T) ($generated@@433 T@U) ) (! (= (type ($generated@@429 $generated@@432 $generated@@433)) $generated@@432)
 :pattern ( ($generated@@429 $generated@@432 $generated@@433))
))) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@339 (type $generated@@434))))
(let (($generated@@436 ($generated@@338 (type $generated@@434))))
(= (type ($generated@@430 $generated@@434)) ($generated@@76 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@430 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@337 $generated@@176 $generated@@176)) (= (type $generated@@438) $generated@@176)) (= ($generated@@0 ($generated@@81 ($generated@@428 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@81 ($generated@@335 $generated@@437) ($generated@@174 ($generated@@429 $generated@@167 $generated@@438)))) (= ($generated@@81 ($generated@@430 $generated@@437) ($generated@@174 ($generated@@429 $generated@@167 $generated@@438))) ($generated@@175 ($generated@@429 $generated@@167 $generated@@438))))))
 :pattern ( ($generated@@81 ($generated@@428 $generated@@437) $generated@@438))
)))
(assert  (and (forall (($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@441)) ($generated@@76 $generated@@176 $generated@@4))
 :pattern ( ($generated@@439 $generated@@441))
)) (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@357 (type $generated@@442))))
(let (($generated@@444 ($generated@@356 (type $generated@@442))))
(= (type ($generated@@440 $generated@@442)) ($generated@@76 $generated@@444 $generated@@443))))
 :pattern ( ($generated@@440 $generated@@442))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@355 $generated@@176 $generated@@176)) (= (type $generated@@446) $generated@@176)) (= ($generated@@0 ($generated@@81 ($generated@@439 $generated@@445) $generated@@446))  (and ($generated@@0 ($generated@@81 ($generated@@353 $generated@@445) ($generated@@174 ($generated@@429 $generated@@167 $generated@@446)))) (= ($generated@@81 ($generated@@440 $generated@@445) ($generated@@174 ($generated@@429 $generated@@167 $generated@@446))) ($generated@@175 ($generated@@429 $generated@@167 $generated@@446))))))
 :pattern ( ($generated@@81 ($generated@@439 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@338 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@81 ($generated@@388 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@81 ($generated@@335 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@81 ($generated@@430 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@447) $generated@@451))
 :pattern ( ($generated@@81 ($generated@@430 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@356 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@355 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@81 ($generated@@399 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@81 ($generated@@353 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@81 ($generated@@440 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@452) $generated@@456))
 :pattern ( ($generated@@81 ($generated@@440 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@337 $generated@@176 $generated@@176)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) $generated@@64)) (= (type $generated@@463) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@176) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@460) $generated@@464))) (and ($generated@@299 ($generated@@81 ($generated@@430 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@299 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@81 ($generated@@430 $generated@@460) $generated@@464))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (= (type $generated@@468) ($generated@@355 $generated@@176 $generated@@176)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) $generated@@64)) (= (type $generated@@471) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@176) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@468) $generated@@472))) (and ($generated@@299 ($generated@@81 ($generated@@440 $generated@@468) $generated@@472) $generated@@470 $generated@@471) ($generated@@299 $generated@@472 $generated@@469 $generated@@471)))
 :pattern ( ($generated@@81 ($generated@@440 $generated@@468) $generated@@472))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@468) $generated@@472))
))))
 :pattern ( ($generated@@74 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@79 (type $generated@@473))))
 (=> (and (and (= (type $generated@@473) ($generated@@76 $generated@@475 $generated@@2)) (= (type $generated@@474) ($generated@@76 $generated@@475 $generated@@2))) ($generated@@413 $generated@@473 $generated@@474)) (= $generated@@473 $generated@@474)))
 :pattern ( ($generated@@413 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@477 T@T) ) (! (= (type ($generated@@476 $generated@@477)) ($generated@@76 $generated@@477 $generated@@4))
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@357 (type $generated@@478))))
(let (($generated@@480 ($generated@@356 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@355 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@354 $generated@@480 $generated@@479)) (= ($generated@@353 $generated@@478) ($generated@@476 $generated@@480))))))
 :pattern ( ($generated@@353 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@357 (type $generated@@481))))
(let (($generated@@483 ($generated@@356 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@355 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@354 $generated@@483 $generated@@482)) (= ($generated@@399 $generated@@481) ($generated@@476 $generated@@482))))))
 :pattern ( ($generated@@399 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@357 (type $generated@@484))))
(let (($generated@@486 ($generated@@356 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@355 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@354 $generated@@486 $generated@@485)) (= ($generated@@439 $generated@@484) ($generated@@476 $generated@@176))))))
 :pattern ( ($generated@@439 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@339 (type $generated@@487))))
(let (($generated@@489 ($generated@@338 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@337 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@336 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@176) (= (type $generated@@491) $generated@@176)) ($generated@@0 ($generated@@81 ($generated@@428 $generated@@487) ($generated@@323 ($generated@@266 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@428 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@357 (type $generated@@492))))
(let (($generated@@494 ($generated@@356 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@355 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@354 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@176) (= (type $generated@@496) $generated@@176)) ($generated@@0 ($generated@@81 ($generated@@439 $generated@@492) ($generated@@323 ($generated@@266 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@439 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@176) ($generated@@267 $generated@@497 $generated@@46)) (and (= ($generated@@323 ($generated@@429 $generated@@2 $generated@@497)) $generated@@497) ($generated@@160 ($generated@@429 $generated@@2 $generated@@497) $generated@@46)))
 :pattern ( ($generated@@267 $generated@@497 $generated@@46))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@176) ($generated@@267 $generated@@498 $generated@@47)) (and (= ($generated@@323 ($generated@@429 $generated@@3 $generated@@498)) $generated@@498) ($generated@@160 ($generated@@429 $generated@@3 $generated@@498) $generated@@47)))
 :pattern ( ($generated@@267 $generated@@498 $generated@@47))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@176) ($generated@@267 $generated@@499 $generated@@44)) (and (= ($generated@@323 ($generated@@429 $generated@@4 $generated@@499)) $generated@@499) ($generated@@160 ($generated@@429 $generated@@4 $generated@@499) $generated@@44)))
 :pattern ( ($generated@@267 $generated@@499 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@500) 20))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@176) ($generated@@267 $generated@@501 $generated@@45)) (and (= ($generated@@323 ($generated@@429 $generated@@500 $generated@@501)) $generated@@501) ($generated@@160 ($generated@@429 $generated@@500 $generated@@501) $generated@@45)))
 :pattern ( ($generated@@267 $generated@@501 $generated@@45))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@267 ($generated@@323 $generated@@502) $generated@@503) ($generated@@160 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@267 ($generated@@323 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= (type ($generated@@504 $generated@@505)) ($generated@@76 $generated@@506 $generated@@2)))
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@507)))
 (=> (= (type $generated@@508) $generated@@509) (and (= (= ($generated ($generated@@81 ($generated@@504 $generated@@507) $generated@@508)) 1) (= $generated@@507 $generated@@508)) (= (= ($generated ($generated@@81 ($generated@@504 $generated@@507) $generated@@508)) 0) (not (= $generated@@507 $generated@@508))))))
 :pattern ( ($generated@@81 ($generated@@504 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@79 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@76 $generated@@511 $generated@@2)) (<= 0 ($generated@@132 $generated@@510))))
 :pattern ( ($generated@@132 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@152 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@151 $generated@@513)) (<= 0 ($generated@@190 $generated@@512))))
 :pattern ( ($generated@@190 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
 (=> (and (= (type $generated@@514) ($generated@@76 $generated@@517 $generated@@2)) (= (type $generated@@515) ($generated@@76 $generated@@517 $generated@@2))) (= ($generated ($generated@@81 ($generated@@134 $generated@@514 $generated@@515) $generated@@516)) ($generated@@162 ($generated ($generated@@81 $generated@@514 $generated@@516)) ($generated ($generated@@81 $generated@@515 $generated@@516))))))
 :pattern ( ($generated@@81 ($generated@@134 $generated@@514 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= ($generated@@518 ($generated@@457 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@457 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@457 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@457 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (= ($generated@@72 ($generated@@457 $generated@@526 $generated@@527)) $generated@@58))
 :pattern ( ($generated@@457 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@64)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@528 ($generated@@465 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@465 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= ($generated@@532 ($generated@@465 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@465 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@72 ($generated@@465 $generated@@536 $generated@@537)) $generated@@59))
 :pattern ( ($generated@@465 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@176) (= (type $generated@@539) $generated@@176)) (= ($generated@@305 ($generated@@266 $generated@@538 $generated@@539)) $generated@@61))
 :pattern ( ($generated@@266 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@64)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@540 ($generated@@166 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@166 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@166 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@166 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@176) (= (type $generated@@549) $generated@@176)) (= ($generated@@174 ($generated@@266 $generated@@548 $generated@@549)) $generated@@548))
 :pattern ( ($generated@@266 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@176) (= (type $generated@@551) $generated@@176)) (= ($generated@@175 ($generated@@266 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@266 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@151 $generated@@176)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@552 $generated@@555) $generated@@556) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@190 $generated@@554))) ($generated@@299 ($generated@@188 $generated@@554 $generated@@557) $generated@@555 $generated@@556))
 :pattern ( ($generated@@188 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@552 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@558 ($generated@@75 $generated@@559)) $generated@@559)
 :pattern ( ($generated@@75 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@64) (= ($generated@@560 ($generated@@280 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@280 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@64) (= ($generated@@72 ($generated@@280 $generated@@563)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@64)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@64) (= ($generated@@564 ($generated@@285 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@285 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@64) (= ($generated@@72 ($generated@@285 $generated@@567)) $generated@@55))
 :pattern ( ($generated@@285 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@64)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@568 ($generated@@181 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@181 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@72 ($generated@@181 $generated@@571)) $generated@@56))
 :pattern ( ($generated@@181 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@64)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@572 ($generated@@552 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@552 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@72 ($generated@@552 $generated@@575)) $generated@@57))
 :pattern ( ($generated@@552 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
(= ($generated@@429 $generated@@577 ($generated@@323 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@323 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@337 $generated@@176 $generated@@176)) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) $generated@@64)) (= ($generated@@160 $generated@@578 ($generated@@457 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@176) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@578) $generated@@581))) (and ($generated@@267 ($generated@@81 ($generated@@430 $generated@@578) $generated@@581) $generated@@580) ($generated@@267 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@81 ($generated@@430 $generated@@578) $generated@@581))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@160 $generated@@578 ($generated@@457 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@355 $generated@@176 $generated@@176)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) (= ($generated@@160 $generated@@582 ($generated@@465 $generated@@583 $generated@@584)) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@176) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@582) $generated@@585))) (and ($generated@@267 ($generated@@81 ($generated@@440 $generated@@582) $generated@@585) $generated@@584) ($generated@@267 $generated@@585 $generated@@583)))
 :pattern ( ($generated@@81 ($generated@@440 $generated@@582) $generated@@585))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@582) $generated@@585))
))))
 :pattern ( ($generated@@160 $generated@@582 ($generated@@465 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 Int) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@586) ($generated@@151 $generated@@590)) (= (type $generated@@589) $generated@@590)) (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@190 $generated@@586)))) (= ($generated ($generated@@81 ($generated@@148 ($generated@@189 $generated@@586 $generated@@587 $generated@@588)) $generated@@589)) ($generated ($generated@@81 ($generated@@135 ($generated@@133 ($generated@@148 $generated@@586) ($generated@@504 ($generated@@188 $generated@@586 $generated@@587))) ($generated@@504 $generated@@588)) $generated@@589)))))
 :pattern ( ($generated@@81 ($generated@@148 ($generated@@189 $generated@@586 $generated@@587 $generated@@588)) $generated@@589))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@176) (= (type $generated@@594) $generated@@176)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@266 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@266 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@176) (= (type $generated@@596) $generated@@176)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@266 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@266 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@79 (type $generated@@597))))
 (=> (and (= (type $generated@@597) ($generated@@76 $generated@@599 $generated@@2)) (= (type $generated@@598) ($generated@@76 $generated@@599 $generated@@2))) (= ($generated@@134 $generated@@597 ($generated@@134 $generated@@597 $generated@@598)) ($generated@@134 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@134 $generated@@597 ($generated@@134 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@176) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@267 $generated@@600 ($generated@@457 $generated@@601 $generated@@602))) (and (= ($generated@@323 ($generated@@429 ($generated@@337 $generated@@176 $generated@@176) $generated@@600)) $generated@@600) ($generated@@160 ($generated@@429 ($generated@@337 $generated@@176 $generated@@176) $generated@@600) ($generated@@457 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@267 $generated@@600 ($generated@@457 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@176) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@267 $generated@@603 ($generated@@465 $generated@@604 $generated@@605))) (and (= ($generated@@323 ($generated@@429 ($generated@@355 $generated@@176 $generated@@176) $generated@@603)) $generated@@603) ($generated@@160 ($generated@@429 ($generated@@355 $generated@@176 $generated@@176) $generated@@603) ($generated@@465 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@267 $generated@@603 ($generated@@465 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@64) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@176)) ($generated@@267 $generated@@608 ($generated@@166 $generated@@606 $generated@@607))) (and (= ($generated@@323 ($generated@@429 $generated@@167 $generated@@608)) $generated@@608) ($generated@@160 ($generated@@429 $generated@@167 $generated@@608) ($generated@@166 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@267 $generated@@608 ($generated@@166 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@81 ($generated@@476 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@81 ($generated@@476 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@613)))
 (=> (= (type $generated@@611) ($generated@@151 $generated@@614)) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@190 $generated@@611))) (= ($generated@@190 ($generated@@189 $generated@@611 $generated@@612 $generated@@613)) ($generated@@190 $generated@@611)))))
 :pattern ( ($generated@@190 ($generated@@189 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@69)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@64) (= (type $generated@@618) $generated@@64)) (and (= ($generated@@72 ($generated@@166 $generated@@617 $generated@@618)) $generated@@62) (= ($generated@@615 ($generated@@166 $generated@@617 $generated@@618)) $generated@@63)))
 :pattern ( ($generated@@166 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@167) (= ($generated@@591 ($generated@@323 $generated@@619)) ($generated@@592 $generated@@619)))
 :pattern ( ($generated@@591 ($generated@@323 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@620)))
(= ($generated@@504 $generated@@620) ($generated@@316 ($generated@@150 $generated@@621) $generated@@620)))
 :pattern ( ($generated@@504 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ) (! (let (($generated@@623 ($generated@@152 (type $generated@@622))))
 (=> (= (type $generated@@622) ($generated@@151 $generated@@623)) (= ($generated@@132 ($generated@@148 $generated@@622)) ($generated@@190 $generated@@622))))
 :pattern ( ($generated@@132 ($generated@@148 $generated@@622)))
)))
(assert (forall (($generated@@624 Int) ($generated@@625 Int) ) (! (= (<= $generated@@624 $generated@@625) (= ($generated@@162 $generated@@624 $generated@@625) $generated@@624))
 :pattern ( ($generated@@162 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 Int) ($generated@@627 Int) ) (! (= (<= $generated@@627 $generated@@626) (= ($generated@@162 $generated@@626 $generated@@627) $generated@@627))
 :pattern ( ($generated@@162 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@176) ($generated@@267 $generated@@628 ($generated@@75 0))) (and (= ($generated@@323 ($generated@@429 $generated@@2 $generated@@628)) $generated@@628) ($generated@@160 ($generated@@429 ($generated@@76 $generated@@176 $generated@@4) $generated@@628) ($generated@@75 0))))
 :pattern ( ($generated@@267 $generated@@628 ($generated@@75 0)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@176) (= (type $generated@@630) $generated@@64)) ($generated@@267 $generated@@629 ($generated@@280 $generated@@630))) (and (= ($generated@@323 ($generated@@429 ($generated@@76 $generated@@176 $generated@@4) $generated@@629)) $generated@@629) ($generated@@160 ($generated@@429 ($generated@@76 $generated@@176 $generated@@4) $generated@@629) ($generated@@280 $generated@@630))))
 :pattern ( ($generated@@267 $generated@@629 ($generated@@280 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@176) (= (type $generated@@632) $generated@@64)) ($generated@@267 $generated@@631 ($generated@@285 $generated@@632))) (and (= ($generated@@323 ($generated@@429 ($generated@@76 $generated@@176 $generated@@4) $generated@@631)) $generated@@631) ($generated@@160 ($generated@@429 ($generated@@76 $generated@@176 $generated@@4) $generated@@631) ($generated@@285 $generated@@632))))
 :pattern ( ($generated@@267 $generated@@631 ($generated@@285 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@176) (= (type $generated@@634) $generated@@64)) ($generated@@267 $generated@@633 ($generated@@181 $generated@@634))) (and (= ($generated@@323 ($generated@@429 ($generated@@76 $generated@@176 $generated@@2) $generated@@633)) $generated@@633) ($generated@@160 ($generated@@429 ($generated@@76 $generated@@176 $generated@@2) $generated@@633) ($generated@@181 $generated@@634))))
 :pattern ( ($generated@@267 $generated@@633 ($generated@@181 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@176) (= (type $generated@@636) $generated@@64)) ($generated@@267 $generated@@635 ($generated@@552 $generated@@636))) (and (= ($generated@@323 ($generated@@429 ($generated@@151 $generated@@176) $generated@@635)) $generated@@635) ($generated@@160 ($generated@@429 ($generated@@151 $generated@@176) $generated@@635) ($generated@@552 $generated@@636))))
 :pattern ( ($generated@@267 $generated@@635 ($generated@@552 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@637) ($generated@@76 $generated@@176 $generated@@2)) (= (type $generated@@638) $generated@@64)) (= (type $generated@@639) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@637 ($generated@@181 $generated@@638) $generated@@639) (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@176) (< 0 ($generated ($generated@@81 $generated@@637 $generated@@640)))) ($generated@@299 $generated@@640 $generated@@638 $generated@@639))
 :pattern ( ($generated@@81 $generated@@637 $generated@@640))
))))
 :pattern ( ($generated@@74 $generated@@637 ($generated@@181 $generated@@638) $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@167) (= (type $generated@@642) $generated@@64)) (= (type $generated@@643) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@298 $generated@@643) (and ($generated@@165 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@64) ($generated@@74 $generated@@641 ($generated@@166 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@74 $generated@@641 ($generated@@166 $generated@@642 $generated@@644) $generated@@643))
))))) ($generated@@299 ($generated@@174 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@299 ($generated@@174 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) $generated@@167) (= (type $generated@@646) $generated@@64)) (= (type $generated@@647) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@298 $generated@@647) (and ($generated@@165 $generated@@645) (exists (($generated@@648 T@U) ) (!  (and (= (type $generated@@648) $generated@@64) ($generated@@74 $generated@@645 ($generated@@166 $generated@@648 $generated@@646) $generated@@647))
 :pattern ( ($generated@@74 $generated@@645 ($generated@@166 $generated@@648 $generated@@646) $generated@@647))
))))) ($generated@@299 ($generated@@175 $generated@@645) $generated@@646 $generated@@647))
 :pattern ( ($generated@@299 ($generated@@175 $generated@@645) $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@650)))
 (=> (and (and (= (type $generated@@649) ($generated@@76 $generated@@652 $generated@@2)) (= (type $generated@@651) $generated@@652)) (not (= $generated@@650 $generated@@651))) (= ($generated ($generated@@81 $generated@@649 $generated@@651)) ($generated ($generated@@81 ($generated@@316 $generated@@649 $generated@@650) $generated@@651)))))
 :pattern ( ($generated@@316 $generated@@649 $generated@@650) ($generated@@81 $generated@@649 $generated@@651))
)))
(assert (forall (($generated@@653 Int) ) (!  (=> (< $generated@@653 0) (= ($generated@@290 $generated@@653) 0))
 :pattern ( ($generated@@290 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@176) (= (type $generated@@655) $generated@@176)) (= ($generated@@266 ($generated@@294 $generated@@654) ($generated@@294 $generated@@655)) ($generated@@294 ($generated@@266 $generated@@654 $generated@@655))))
 :pattern ( ($generated@@266 ($generated@@294 $generated@@654) ($generated@@294 $generated@@655)))
)))
(assert (forall (($generated@@656 Int) ) (! (= ($generated@@323 ($generated@@8 ($generated@@292 $generated@@656))) ($generated@@294 ($generated@@323 ($generated@@8 $generated@@656))))
 :pattern ( ($generated@@323 ($generated@@8 ($generated@@292 $generated@@656))))
)))
(assert (forall (($generated@@657 T@U) ) (! (= ($generated@@323 ($generated@@294 $generated@@657)) ($generated@@294 ($generated@@323 $generated@@657)))
 :pattern ( ($generated@@323 ($generated@@294 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ) (! (let (($generated@@659 ($generated@@152 (type $generated@@658))))
 (=> (and (= (type $generated@@658) ($generated@@151 $generated@@659)) (= ($generated@@190 $generated@@658) 0)) (= $generated@@658 ($generated@@149 $generated@@659))))
 :pattern ( ($generated@@190 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (! (let (($generated@@663 (type $generated@@661)))
 (=> (and (and (= (type $generated@@660) ($generated@@76 $generated@@663 $generated@@2)) (= (type $generated@@662) $generated@@2)) (<= 0 ($generated $generated@@662))) (= ($generated@@132 ($generated@@82 $generated@@660 $generated@@661 $generated@@662)) (+ (- ($generated@@132 $generated@@660) ($generated ($generated@@81 $generated@@660 $generated@@661))) ($generated $generated@@662)))))
 :pattern ( ($generated@@132 ($generated@@82 $generated@@660 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@665) $generated@@2)) ($generated@@74 $generated@@665 $generated@@46 $generated@@664))
 :pattern ( ($generated@@74 $generated@@665 $generated@@46 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@667) $generated@@3)) ($generated@@74 $generated@@667 $generated@@47 $generated@@666))
 :pattern ( ($generated@@74 $generated@@667 $generated@@47 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@669) $generated@@4)) ($generated@@74 $generated@@669 $generated@@44 $generated@@668))
 :pattern ( ($generated@@74 $generated@@669 $generated@@44 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@671) $generated@@500)) ($generated@@74 $generated@@671 $generated@@45 $generated@@670))
 :pattern ( ($generated@@74 $generated@@671 $generated@@45 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@673) $generated@@176)) ($generated@@74 $generated@@673 $generated@@48 $generated@@672))
 :pattern ( ($generated@@74 $generated@@673 $generated@@48 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@151 $generated@@176)) (= (type $generated@@675) $generated@@64)) (= ($generated@@160 $generated@@674 ($generated@@552 $generated@@675)) (forall (($generated@@676 Int) ) (!  (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@190 $generated@@674))) ($generated@@267 ($generated@@188 $generated@@674 $generated@@676) $generated@@675))
 :pattern ( ($generated@@188 $generated@@674 $generated@@676))
))))
 :pattern ( ($generated@@160 $generated@@674 ($generated@@552 $generated@@675)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 Int) ) (!  (=> (= (type $generated@@678) ($generated@@151 $generated@@176)) (=> (and (<= 0 $generated@@679) (< $generated@@679 ($generated@@190 $generated@@678))) (< ($generated@@592 ($generated@@429 $generated@@167 ($generated@@188 $generated@@678 $generated@@679))) ($generated@@677 $generated@@678))))
 :pattern ( ($generated@@592 ($generated@@429 $generated@@167 ($generated@@188 $generated@@678 $generated@@679))))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@337 $generated@@176 $generated@@176)) (= (type $generated@@681) $generated@@64)) (= (type $generated@@682) $generated@@64)) ($generated@@160 $generated@@680 ($generated@@457 $generated@@681 $generated@@682))) (and (and ($generated@@160 ($generated@@335 $generated@@680) ($generated@@280 $generated@@681)) ($generated@@160 ($generated@@388 $generated@@680) ($generated@@280 $generated@@682))) ($generated@@160 ($generated@@428 $generated@@680) ($generated@@280 ($generated@@166 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@160 $generated@@680 ($generated@@457 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) ($generated@@355 $generated@@176 $generated@@176)) (= (type $generated@@684) $generated@@64)) (= (type $generated@@685) $generated@@64)) ($generated@@160 $generated@@683 ($generated@@465 $generated@@684 $generated@@685))) (and (and ($generated@@160 ($generated@@353 $generated@@683) ($generated@@285 $generated@@684)) ($generated@@160 ($generated@@399 $generated@@683) ($generated@@285 $generated@@685))) ($generated@@160 ($generated@@439 $generated@@683) ($generated@@285 ($generated@@166 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@160 $generated@@683 ($generated@@465 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@2) ($generated@@160 $generated@@686 $generated@@46))
 :pattern ( ($generated@@160 $generated@@686 $generated@@46))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@3) ($generated@@160 $generated@@687 $generated@@47))
 :pattern ( ($generated@@160 $generated@@687 $generated@@47))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@4) ($generated@@160 $generated@@688 $generated@@44))
 :pattern ( ($generated@@160 $generated@@688 $generated@@44))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@500) ($generated@@160 $generated@@689 $generated@@45))
 :pattern ( ($generated@@160 $generated@@689 $generated@@45))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@176) ($generated@@160 $generated@@690 $generated@@48))
 :pattern ( ($generated@@160 $generated@@690 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 (T@U) Bool)
(declare-fun $generated@@696 () Int)
(assert  (and (and (and (= (type $generated@@691) ($generated@@205 $generated@@77 $generated@@4)) (= (type $generated@@692) $generated@@77)) (= (type $generated@@693) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@694) ($generated@@151 $generated@@176))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@697  (=> (= $generated@@691 ($generated@@204 $generated@@692 $generated@@693 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= 0 ($generated@@292 3)) (< ($generated@@292 3) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (and (<= 0 ($generated@@292 3)) (< ($generated@@292 3) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 16)) ($generated@@413 ($generated@@148 ($generated@@189 $generated@@694 ($generated@@292 3) ($generated@@323 ($generated@@8 ($generated@@292 2))))) ($generated@@135 ($generated@@133 ($generated@@148 $generated@@694) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@188 $generated@@694 ($generated@@292 3)))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@323 ($generated@@8 ($generated@@292 2))))))) (=> ($generated@@413 ($generated@@148 ($generated@@189 $generated@@694 ($generated@@292 3) ($generated@@323 ($generated@@8 ($generated@@292 2))))) ($generated@@135 ($generated@@133 ($generated@@148 $generated@@694) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@188 $generated@@694 ($generated@@292 3)))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@323 ($generated@@8 ($generated@@292 2)))))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= 0 ($generated@@292 2)) (< ($generated@@292 2) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= 0 ($generated@@292 3)) (< ($generated@@292 3) ($generated@@190 ($generated@@189 $generated@@694 ($generated@@292 2) ($generated@@323 ($generated@@8 ($generated@@292 1)))))))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= 0 ($generated@@292 2)) (< ($generated@@292 2) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= 0 ($generated@@292 3)) (< ($generated@@292 3) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@413 ($generated@@148 ($generated@@189 ($generated@@189 $generated@@694 ($generated@@292 2) ($generated@@323 ($generated@@8 ($generated@@292 1)))) ($generated@@292 3) ($generated@@323 ($generated@@8 ($generated@@292 2))))) ($generated@@135 ($generated@@133 ($generated@@135 ($generated@@133 ($generated@@148 $generated@@694) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@188 $generated@@694 ($generated@@292 2)))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@323 ($generated@@8 ($generated@@292 1))))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@188 $generated@@694 ($generated@@292 3)))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@323 ($generated@@8 ($generated@@292 2))))))) (=> ($generated@@413 ($generated@@148 ($generated@@189 ($generated@@189 $generated@@694 ($generated@@292 2) ($generated@@323 ($generated@@8 ($generated@@292 1)))) ($generated@@292 3) ($generated@@323 ($generated@@8 ($generated@@292 2))))) ($generated@@135 ($generated@@133 ($generated@@135 ($generated@@133 ($generated@@148 $generated@@694) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@188 $generated@@694 ($generated@@292 2)))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@323 ($generated@@8 ($generated@@292 1))))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@188 $generated@@694 ($generated@@292 3)))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@323 ($generated@@8 ($generated@@292 2)))))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= 0 ($generated@@292 2)) (< ($generated@@292 2) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 ($generated@@292 3)) (< ($generated@@292 3) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= 0 ($generated@@292 3)) (< ($generated@@292 3) ($generated@@190 ($generated@@189 $generated@@694 ($generated@@292 2) ($generated@@188 $generated@@694 ($generated@@292 3))))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 ($generated@@292 2)) (< ($generated@@292 2) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 ($generated@@292 2)) (< ($generated@@292 2) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@292 3)) (< ($generated@@292 3) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@292 3)) (< ($generated@@292 3) ($generated@@190 $generated@@694)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@292 2)) (< ($generated@@292 2) ($generated@@190 $generated@@694)))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@413 ($generated@@148 ($generated@@189 ($generated@@189 $generated@@694 ($generated@@292 2) ($generated@@188 $generated@@694 ($generated@@292 3))) ($generated@@292 3) ($generated@@188 $generated@@694 ($generated@@292 2)))) ($generated@@135 ($generated@@133 ($generated@@135 ($generated@@133 ($generated@@148 $generated@@694) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@188 $generated@@694 ($generated@@292 2)))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@188 $generated@@694 ($generated@@292 3)))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@188 $generated@@694 ($generated@@292 3)))) ($generated@@316 ($generated@@150 $generated@@176) ($generated@@188 $generated@@694 ($generated@@292 2)))))))))))))))))))))))))))
(let (($generated@@698  (=> (and ($generated@@298 $generated@@693) ($generated@@695 $generated@@693)) (=> (and (and (and ($generated@@160 $generated@@694 ($generated@@552 $generated@@46)) ($generated@@74 $generated@@694 ($generated@@552 $generated@@46) $generated@@693)) (= 0 $generated@@696)) (and (> ($generated@@190 $generated@@694) 4) (= (ControlFlow 0 19) 2))) $generated@@697))))
$generated@@698)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@T) T@U)
(declare-fun $generated@@170 (T@T) T@U)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@185 (Int Int) Int)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U) T@U)
(declare-fun $generated@@195 () T@T)
(declare-fun $generated@@201 (T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@209 (T@U Int) T@U)
(declare-fun $generated@@210 (T@U T@U) T@U)
(declare-fun $generated@@211 (T@U) Int)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@232 (T@U Int) T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U Int) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (Int) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (Int) Int)
(declare-fun $generated@@282 (Int) Int)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@297 (T@U T@U T@U) Bool)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@321 (T@U T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@T) T@U)
(declare-fun $generated@@366 (T@T T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@T T@T) T@U)
(declare-fun $generated@@384 (T@T T@T) T@T)
(declare-fun $generated@@385 (T@T) T@T)
(declare-fun $generated@@386 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) Bool)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@467 (T@T T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@495 (T@U T@U) T@U)
(declare-fun $generated@@503 (T@U T@U) T@U)
(declare-fun $generated@@524 (T@T) T@U)
(declare-fun $generated@@548 () T@T)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@618 (T@U) Int)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@640 (T@U) Int)
(declare-fun $generated@@641 (T@U) Int)
(declare-fun $generated@@663 (T@U T@U T@U) T@U)
(declare-fun $generated@@664 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@665 (T@T T@T) T@T)
(declare-fun $generated@@666 (T@T) T@T)
(declare-fun $generated@@667 (T@T) T@T)
(declare-fun $generated@@668 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@723 (T@U) T@U)
(declare-fun $generated@@724 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert  (and (and (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@83 (type $generated@@149))))
(= (type ($generated@@146 $generated@@149 $generated@@150)) ($generated@@80 $generated@@151 $generated@@2)))
 :pattern ( ($generated@@146 $generated@@149 $generated@@150))
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@83 (type $generated@@152))))
(= (type ($generated@@147 $generated@@152 $generated@@153)) ($generated@@80 $generated@@154 $generated@@2)))
 :pattern ( ($generated@@147 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@83 (type $generated@@155))))
(= (type ($generated@@148 $generated@@155 $generated@@156)) ($generated@@80 $generated@@157 $generated@@2)))
 :pattern ( ($generated@@148 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@83 (type $generated@@158))))
 (=> (and (= (type $generated@@158) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@159) ($generated@@80 $generated@@160 $generated@@2))) (and (= (+ (+ ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) ($generated@@145 ($generated@@146 $generated@@159 $generated@@158))) (* 2 ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))) ($generated@@145 ($generated@@148 $generated@@158 $generated@@159))) (= ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) (- ($generated@@145 $generated@@158) ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@163) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@161 $generated@@162 $generated@@163)) (forall (($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@162 $generated@@164) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@163 $generated@@164) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@163 $generated@@164) $generated@@60))
)))
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167)  (or (= $generated@@166 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@167 $generated@@166) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167))
)))
(assert  (and (and (and (and (forall (($generated@@173 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@173)) 14)) (forall (($generated@@174 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@172 (type $generated@@175))))
(= (type ($generated@@168 $generated@@175)) ($generated@@80 $generated@@176 $generated@@2)))
 :pattern ( ($generated@@168 $generated@@175))
))) (forall (($generated@@177 T@T) ) (! (= (type ($generated@@169 $generated@@177)) ($generated@@171 $generated@@177))
 :pattern ( ($generated@@169 $generated@@177))
))) (forall (($generated@@178 T@T) ) (! (= (type ($generated@@170 $generated@@178)) ($generated@@80 $generated@@178 $generated@@2))
 :pattern ( ($generated@@170 $generated@@178))
))))
(assert (forall (($generated@@179 T@T) ) (= ($generated@@168 ($generated@@169 $generated@@179)) ($generated@@170 $generated@@179))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@67) (= (type $generated@@182) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@183) $generated@@81)) (and (and ($generated@@180 $generated@@182) (and (not (= $generated@@183 $generated@@138)) (= ($generated@@139 $generated@@183) ($generated@@137 $generated@@181)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@182 $generated@@183) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@183)) $generated@@46 $generated@@182))
 :pattern ( ($generated@@136 $generated@@183) ($generated@@87 ($generated@@85 $generated@@182 $generated@@183) $generated@@60) ($generated@@137 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@2) ($generated@@140 $generated@@184 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@184 ($generated@@79 0)))
)))
(assert (forall (($generated@@186 Int) ($generated@@187 Int) ) (!  (or (= ($generated@@185 $generated@@186 $generated@@187) $generated@@186) (= ($generated@@185 $generated@@186 $generated@@187) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@67)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@67) (= (type $generated@@191) $generated@@81)) (= (type $generated@@192) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@191 ($generated@@188 $generated@@190) $generated@@192) ($generated@@78 $generated@@191 ($generated@@137 $generated@@190) $generated@@192)))
 :pattern ( ($generated@@78 $generated@@191 ($generated@@188 $generated@@190) $generated@@192))
)))
(assert  (and (= ($generated@@1 $generated@@195) 15) (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@196 $generated@@197)) $generated@@67)
 :pattern ( ($generated@@194 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (and (= (type $generated@@198) $generated@@67) (= (type $generated@@199) $generated@@67)) (= (type $generated@@200) $generated@@195)) ($generated@@140 $generated@@200 ($generated@@194 $generated@@198 $generated@@199))) ($generated@@193 $generated@@200))
 :pattern ( ($generated@@193 $generated@@200) ($generated@@140 $generated@@200 ($generated@@194 $generated@@198 $generated@@199)))
)))
(assert  (and (and (= ($generated@@1 $generated@@204) 16) (forall (($generated@@205 T@U) ) (! (= (type ($generated@@202 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@203 $generated@@206)) $generated@@204)
 :pattern ( ($generated@@203 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) $generated@@195) (= (type $generated@@208) $generated@@195)) true) (= ($generated@@201 $generated@@207 $generated@@208)  (and (= ($generated@@202 $generated@@207) ($generated@@202 $generated@@208)) (= ($generated@@203 $generated@@207) ($generated@@203 $generated@@208)))))
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
)))
(assert  (and (forall (($generated@@212 T@U) ($generated@@213 Int) ) (! (let (($generated@@214 ($generated@@172 (type $generated@@212))))
(= (type ($generated@@209 $generated@@212 $generated@@213)) ($generated@@171 $generated@@214)))
 :pattern ( ($generated@@209 $generated@@212 $generated@@213))
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(= (type ($generated@@210 $generated@@215 $generated@@216)) ($generated@@171 $generated@@217)))
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Int) ) (! (let (($generated@@221 (type $generated@@219)))
 (=> (= (type $generated@@218) ($generated@@171 $generated@@221)) (=> (and (<= 0 $generated@@220) (<= $generated@@220 ($generated@@211 $generated@@218))) (= ($generated@@209 ($generated@@210 $generated@@218 $generated@@219) $generated@@220) ($generated@@210 ($generated@@209 $generated@@218 $generated@@220) $generated@@219)))))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@218 $generated@@219) $generated@@220))
)))
(assert (forall (($generated@@224 T@U) ) (! (= (type ($generated@@222 $generated@@224)) $generated@@67)
 :pattern ( ($generated@@222 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (= (type $generated@@225) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@226) $generated@@67)) ($generated@@140 $generated@@225 ($generated@@222 $generated@@226))) ($generated@@223 $generated@@225))
 :pattern ( ($generated@@140 $generated@@225 ($generated@@222 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@172 (type $generated@@227))))
 (=> (= (type $generated@@227) ($generated@@171 $generated@@228)) ($generated@@223 ($generated@@168 $generated@@227))))
 :pattern ( ($generated@@168 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@83 (type $generated@@229))))
 (=> (and (= (type $generated@@229) ($generated@@80 $generated@@231 $generated@@2)) (= (type $generated@@230) ($generated@@80 $generated@@231 $generated@@2))) (= ($generated@@147 ($generated@@147 $generated@@229 $generated@@230) $generated@@230) ($generated@@147 $generated@@229 $generated@@230))))
 :pattern ( ($generated@@147 ($generated@@147 $generated@@229 $generated@@230) $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 Int) ) (! (let (($generated@@235 ($generated@@172 (type $generated@@233))))
(= (type ($generated@@232 $generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
 (=> (= (type $generated@@236) ($generated@@171 $generated@@238)) (= (exists (($generated@@239 Int) ) (!  (and (and (<= 0 $generated@@239) (< $generated@@239 ($generated@@211 $generated@@236))) (= $generated@@237 ($generated@@232 $generated@@236 $generated@@239)))
 :pattern ( ($generated@@232 $generated@@236 $generated@@239))
)) (< 0 ($generated ($generated@@85 ($generated@@168 $generated@@236) $generated@@237))))))
 :pattern ( ($generated@@85 ($generated@@168 $generated@@236) $generated@@237))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@195)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@67) (= (type $generated@@245) $generated@@67)) (= (type $generated@@246) $generated@@204)) (= (type $generated@@247) $generated@@204)) (= ($generated@@140 ($generated@@240 $generated@@246 $generated@@247) ($generated@@194 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@140 ($generated@@240 $generated@@246 $generated@@247) ($generated@@194 $generated@@244 $generated@@245)))
)))
(assert  (and (and (forall (($generated@@251 T@U) ($generated@@252 Int) ) (! (let (($generated@@253 ($generated@@172 (type $generated@@251))))
(= (type ($generated@@248 $generated@@251 $generated@@252)) ($generated@@171 $generated@@253)))
 :pattern ( ($generated@@248 $generated@@251 $generated@@252))
)) (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@249 $generated@@254 $generated@@255)) ($generated@@171 $generated@@204))
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))) (forall (($generated@@256 Int) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@69 $generated@@204))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Int) ($generated@@260 Int) ) (!  (=> (and (= (type $generated@@257) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@258) $generated@@81)) (=> (and (and (= (+ $generated@@259 1) $generated@@260) (<= 0 $generated@@259)) (<= $generated@@260 ($generated@@136 $generated@@258))) (= ($generated@@248 ($generated@@249 $generated@@257 $generated@@258) $generated@@260) ($generated@@210 ($generated@@248 ($generated@@249 $generated@@257 $generated@@258) $generated@@259) ($generated@@87 ($generated@@85 $generated@@257 $generated@@258) ($generated@@250 $generated@@259))))))
 :pattern ( ($generated@@248 ($generated@@249 $generated@@257 $generated@@258) $generated@@259) ($generated@@248 ($generated@@249 $generated@@257 $generated@@258) $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
 (=> (and (= (type $generated@@261) ($generated@@80 $generated@@264 $generated@@2)) (= (type $generated@@262) ($generated@@80 $generated@@264 $generated@@2))) (= ($generated ($generated@@85 ($generated@@148 $generated@@261 $generated@@262) $generated@@263)) (+ ($generated ($generated@@85 $generated@@261 $generated@@263)) ($generated ($generated@@85 $generated@@262 $generated@@263))))))
 :pattern ( ($generated@@85 ($generated@@148 $generated@@261 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@195) (= (type $generated@@266) $generated@@195)) (= ($generated@@201 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@201 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 Int) ) (! (let (($generated@@269 ($generated@@172 (type $generated@@267))))
 (=> (and (= (type $generated@@267) ($generated@@171 $generated@@269)) (= $generated@@268 0)) (= ($generated@@209 $generated@@267 $generated@@268) $generated@@267)))
 :pattern ( ($generated@@209 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@67)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@273) $generated@@67)) (= ($generated@@140 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@204) ($generated@@0 ($generated@@85 $generated@@272 $generated@@274))) ($generated@@241 $generated@@274 $generated@@273))
 :pattern ( ($generated@@85 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@140 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@67)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@278) $generated@@67)) (= ($generated@@140 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@204) ($generated@@0 ($generated@@85 $generated@@277 $generated@@279))) ($generated@@241 $generated@@279 $generated@@278))
 :pattern ( ($generated@@85 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@140 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 Int) ) (!  (=> (<= 0 $generated@@281) (= ($generated@@280 $generated@@281) $generated@@281))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 Int) ) (! (= ($generated@@282 $generated@@283) $generated@@283)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
(= (type ($generated@@284 $generated@@285)) $generated@@286))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= ($generated@@284 $generated@@287) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@67)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) ($generated@@171 $generated@@204)) (= (type $generated@@291) $generated@@204)) (= (type $generated@@292) $generated@@67)) (and ($generated@@140 $generated@@290 ($generated@@288 $generated@@292)) ($generated@@241 $generated@@291 $generated@@292))) ($generated@@140 ($generated@@210 $generated@@290 $generated@@291) ($generated@@288 $generated@@292)))
 :pattern ( ($generated@@140 ($generated@@210 $generated@@290 $generated@@291) ($generated@@288 $generated@@292)))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 Int) ) (! (let (($generated@@296 ($generated@@172 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@171 $generated@@296)) (=> (and (and (<= 0 $generated@@295) (< $generated@@295 $generated@@294)) (< $generated@@295 ($generated@@211 $generated@@293))) (= ($generated@@232 ($generated@@248 $generated@@293 $generated@@294) $generated@@295) ($generated@@232 $generated@@293 $generated@@295)))))
 :weight 25
 :pattern ( ($generated@@232 ($generated@@248 $generated@@293 $generated@@294) $generated@@295))
 :pattern ( ($generated@@232 $generated@@293 $generated@@295) ($generated@@248 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@298) $generated@@67) (= (type $generated@@299) $generated@@67)) (= (type $generated@@300) $generated@@204)) (= (type $generated@@301) $generated@@204)) (= (type $generated@@302) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@180 $generated@@302)) (= ($generated@@78 ($generated@@240 $generated@@300 $generated@@301) ($generated@@194 $generated@@298 $generated@@299) $generated@@302)  (and ($generated@@297 $generated@@300 $generated@@298 $generated@@302) ($generated@@297 $generated@@301 $generated@@299 $generated@@302))))
 :pattern ( ($generated@@78 ($generated@@240 $generated@@300 $generated@@301) ($generated@@194 $generated@@298 $generated@@299) $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 Int) ) (! (let (($generated@@305 ($generated@@172 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@171 $generated@@305)) (=> (and (<= 0 $generated@@304) (<= $generated@@304 ($generated@@211 $generated@@303))) (= ($generated@@211 ($generated@@209 $generated@@303 $generated@@304)) (- ($generated@@211 $generated@@303) $generated@@304)))))
 :pattern ( ($generated@@211 ($generated@@209 $generated@@303 $generated@@304)))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@71)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@195) (= ($generated@@193 $generated@@308) (= ($generated@@306 $generated@@308) $generated@@63)))
 :pattern ( ($generated@@193 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (! (let (($generated@@312 (type $generated@@311)))
 (=> (and (= (type $generated@@309) ($generated@@80 $generated@@312 $generated@@2)) (= (type $generated@@310) ($generated@@80 $generated@@312 $generated@@2))) (= ($generated ($generated@@85 ($generated@@146 $generated@@309 $generated@@310) $generated@@311)) ($generated@@280 (- ($generated ($generated@@85 $generated@@309 $generated@@311)) ($generated ($generated@@85 $generated@@310 $generated@@311)))))))
 :pattern ( ($generated@@85 ($generated@@146 $generated@@309 $generated@@310) $generated@@311))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 Int) ) (! (let (($generated@@316 ($generated@@172 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@171 $generated@@316)) (=> (and (<= 0 $generated@@315) (< $generated@@315 ($generated@@211 $generated@@314))) (< ($generated@@313 ($generated@@248 $generated@@314 $generated@@315)) ($generated@@313 $generated@@314)))))
 :pattern ( ($generated@@313 ($generated@@248 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@195) ($generated@@193 $generated@@317)) (exists (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (and (and (= (type $generated@@318) $generated@@204) (= (type $generated@@319) $generated@@204)) (= $generated@@317 ($generated@@240 $generated@@318 $generated@@319)))
 :no-pattern (type $generated@@318)
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
)))
 :pattern ( ($generated@@193 $generated@@317))
)))
(assert (forall (($generated@@320 T@T) ) (! (= ($generated@@211 ($generated@@169 $generated@@320)) 0)
 :pattern ( ($generated@@169 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (! (let (($generated@@324 (type $generated@@323)))
(= (type ($generated@@321 $generated@@322 $generated@@323)) ($generated@@80 $generated@@324 $generated@@2)))
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 (type $generated@@326)))
 (=> (= (type $generated@@325) ($generated@@80 $generated@@327 $generated@@2)) (= ($generated@@145 ($generated@@321 $generated@@325 $generated@@326)) (+ ($generated@@145 $generated@@325) 1))))
 :pattern ( ($generated@@145 ($generated@@321 $generated@@325 $generated@@326)))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@172 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@171 $generated@@330)) (=> (and (< 0 $generated@@329) (<= $generated@@329 ($generated@@211 $generated@@328))) (< ($generated@@313 ($generated@@209 $generated@@328 $generated@@329)) ($generated@@313 $generated@@328)))))
 :pattern ( ($generated@@313 ($generated@@209 $generated@@328 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (! (let (($generated@@333 (type $generated@@332)))
 (=> (= (type $generated@@331) ($generated@@171 $generated@@333)) (= ($generated@@211 ($generated@@210 $generated@@331 $generated@@332)) (+ 1 ($generated@@211 $generated@@331)))))
 :pattern ( ($generated@@210 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@67) (= (type $generated@@335) $generated@@81)) (= ($generated@@140 $generated@@335 ($generated@@188 $generated@@334))  (and ($generated@@140 $generated@@335 ($generated@@137 $generated@@334)) (not (= $generated@@335 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@335 ($generated@@188 $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@204)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@67) (= (type $generated@@340) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@297 ($generated@@336 $generated@@338) $generated@@339 $generated@@340) ($generated@@78 $generated@@338 $generated@@339 $generated@@340)))
 :pattern ( ($generated@@297 ($generated@@336 $generated@@338) $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@341) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@342) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@343) $generated@@204)) (= (type $generated@@344) $generated@@67)) ($generated@@161 $generated@@341 $generated@@342)) ($generated@@297 $generated@@343 $generated@@344 $generated@@341)) ($generated@@297 $generated@@343 $generated@@344 $generated@@342))
 :pattern ( ($generated@@161 $generated@@341 $generated@@342) ($generated@@297 $generated@@343 $generated@@344 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@345) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@346) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@348) $generated@@67)) ($generated@@161 $generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@348 $generated@@345)) ($generated@@78 $generated@@347 $generated@@348 $generated@@346))
 :pattern ( ($generated@@161 $generated@@345 $generated@@346) ($generated@@78 $generated@@347 $generated@@348 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 Int) ($generated@@351 Int) ) (! (let (($generated@@352 ($generated@@172 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@171 $generated@@352)) (=> (and (and (<= 0 $generated@@350) (<= 0 $generated@@351)) (< $generated@@351 (- ($generated@@211 $generated@@349) $generated@@350))) (= ($generated@@232 ($generated@@209 $generated@@349 $generated@@350) $generated@@351) ($generated@@232 $generated@@349 (+ $generated@@351 $generated@@350))))))
 :weight 25
 :pattern ( ($generated@@232 ($generated@@209 $generated@@349 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@83 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@80 $generated@@354 $generated@@2)) (and (= (= ($generated@@145 $generated@@353) 0) (= $generated@@353 ($generated@@170 $generated@@354))) (=> (not (= ($generated@@145 $generated@@353) 0)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (< 0 ($generated ($generated@@85 $generated@@353 $generated@@355))))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@145 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (= (type ($generated@@356 $generated@@357)) $generated@@72)
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@358)) $generated@@61) (= ($generated@@356 ($generated@@137 $generated@@358)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@67) (and (= ($generated@@76 ($generated@@188 $generated@@359)) $generated@@62) (= ($generated@@356 ($generated@@188 $generated@@359)) $generated@@65)))
 :pattern ( ($generated@@188 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
 (=> (and (and (= (type $generated@@360) ($generated@@80 $generated@@363 $generated@@2)) (= (type $generated@@361) ($generated@@80 $generated@@363 $generated@@2))) (<= ($generated ($generated@@85 $generated@@360 $generated@@362)) ($generated ($generated@@85 $generated@@361 $generated@@362)))) (= ($generated ($generated@@85 ($generated@@146 $generated@@360 $generated@@361) $generated@@362)) 0)))
 :pattern ( ($generated@@146 $generated@@360 $generated@@361) ($generated@@85 $generated@@361 $generated@@362) ($generated@@85 $generated@@360 $generated@@362))
)))
(assert  (and (and (and (and (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (= ($generated@@1 ($generated@@366 $generated@@369 $generated@@370)) 17)) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@367 ($generated@@366 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@366 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@368 ($generated@@366 $generated@@373 $generated@@374)) $generated@@374)
 :pattern ( ($generated@@366 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@367 (type $generated@@375))))
(= (type ($generated@@364 $generated@@375)) ($generated@@80 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@375))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= (type ($generated@@365 $generated@@377 $generated@@378)) ($generated@@366 $generated@@377 $generated@@378))
 :pattern ( ($generated@@365 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@T) ) (! (let (($generated@@381 (type $generated@@379)))
 (not ($generated@@0 ($generated@@85 ($generated@@364 ($generated@@365 $generated@@381 $generated@@380)) $generated@@379))))
 :pattern ( (let (($generated@@381 (type $generated@@379)))
($generated@@85 ($generated@@364 ($generated@@365 $generated@@381 $generated@@380)) $generated@@379)))
)))
(assert  (and (and (and (and (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (= ($generated@@1 ($generated@@384 $generated@@387 $generated@@388)) 18)) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@385 ($generated@@384 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@384 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (! (= ($generated@@386 ($generated@@384 $generated@@391 $generated@@392)) $generated@@392)
 :pattern ( ($generated@@384 $generated@@391 $generated@@392))
))) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@385 (type $generated@@393))))
(= (type ($generated@@382 $generated@@393)) ($generated@@80 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@393))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= (type ($generated@@383 $generated@@395 $generated@@396)) ($generated@@384 $generated@@395 $generated@@396))
 :pattern ( ($generated@@383 $generated@@395 $generated@@396))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@T) ) (! (let (($generated@@399 (type $generated@@397)))
 (not ($generated@@0 ($generated@@85 ($generated@@382 ($generated@@383 $generated@@399 $generated@@398)) $generated@@397))))
 :pattern ( (let (($generated@@399 (type $generated@@397)))
($generated@@85 ($generated@@382 ($generated@@383 $generated@@399 $generated@@398)) $generated@@397)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@83 (type $generated@@400))))
 (=> (and (= (type $generated@@400) ($generated@@80 $generated@@402 $generated@@2)) (= (type $generated@@401) ($generated@@80 $generated@@402 $generated@@2))) (= ($generated@@145 ($generated@@148 $generated@@400 $generated@@401)) (+ ($generated@@145 $generated@@400) ($generated@@145 $generated@@401)))))
 :pattern ( ($generated@@145 ($generated@@148 $generated@@400 $generated@@401)))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@83 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@80 $generated@@404 $generated@@2)) (= ($generated@@223 $generated@@403) (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@404) (and (<= 0 ($generated ($generated@@85 $generated@@403 $generated@@405))) (<= ($generated ($generated@@85 $generated@@403 $generated@@405)) ($generated@@145 $generated@@403))))
 :pattern ( ($generated@@85 $generated@@403 $generated@@405))
)))))
 :pattern ( ($generated@@223 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@67) (= (type $generated@@407) $generated@@81)) (= ($generated@@140 $generated@@407 ($generated@@137 $generated@@406))  (or (= $generated@@407 $generated@@138) (= ($generated@@139 $generated@@407) ($generated@@137 $generated@@406)))))
 :pattern ( ($generated@@140 $generated@@407 ($generated@@137 $generated@@406)))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
 (=> (= (type $generated@@408) ($generated@@80 $generated@@410 $generated@@2)) (= ($generated ($generated@@85 ($generated@@321 $generated@@408 $generated@@409) $generated@@409)) (+ ($generated ($generated@@85 $generated@@408 $generated@@409)) 1))))
 :pattern ( ($generated@@321 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 Int) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
 (=> (= (type $generated@@411) ($generated@@171 $generated@@414)) (and (=> (= $generated@@412 ($generated@@211 $generated@@411)) (= ($generated@@232 ($generated@@210 $generated@@411 $generated@@413) $generated@@412) $generated@@413)) (=> (not (= $generated@@412 ($generated@@211 $generated@@411))) (= ($generated@@232 ($generated@@210 $generated@@411 $generated@@413) $generated@@412) ($generated@@232 $generated@@411 $generated@@412))))))
 :pattern ( ($generated@@232 ($generated@@210 $generated@@411 $generated@@413) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@416)))
 (=> (and (and (= (type $generated@@415) ($generated@@80 $generated@@418 $generated@@2)) (= (type $generated@@417) $generated@@418)) (< 0 ($generated ($generated@@85 $generated@@415 $generated@@417)))) (< 0 ($generated ($generated@@85 ($generated@@321 $generated@@415 $generated@@416) $generated@@417)))))
 :pattern ( ($generated@@321 $generated@@415 $generated@@416) ($generated@@85 $generated@@415 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@368 (type $generated@@419))))
(let (($generated@@421 ($generated@@367 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@366 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@365 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) ($generated@@0 ($generated@@85 ($generated@@364 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@364 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@368 (type $generated@@424))))
(= (type ($generated@@423 $generated@@424)) ($generated@@80 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@368 (type $generated@@426))))
(let (($generated@@428 ($generated@@367 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@366 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@365 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@427) ($generated@@0 ($generated@@85 ($generated@@423 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@423 $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@386 (type $generated@@430))))
(let (($generated@@432 ($generated@@385 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@384 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@383 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) ($generated@@0 ($generated@@85 ($generated@@382 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@382 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@386 (type $generated@@435))))
(= (type ($generated@@434 $generated@@435)) ($generated@@80 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@386 (type $generated@@437))))
(let (($generated@@439 ($generated@@385 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@384 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@383 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@438) ($generated@@0 ($generated@@85 ($generated@@434 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@434 $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@442)))
 (=> (and (= (type $generated@@441) ($generated@@80 $generated@@444 $generated@@2)) (= (type $generated@@443) $generated@@444)) (= (< 0 ($generated ($generated@@85 ($generated@@321 $generated@@441 $generated@@442) $generated@@443)))  (or (= $generated@@443 $generated@@442) (< 0 ($generated ($generated@@85 $generated@@441 $generated@@443)))))))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@446) $generated@@81)) (forall (($generated@@447 Int) ) (!  (=> (and (<= 0 $generated@@447) (< $generated@@447 ($generated@@211 ($generated@@249 $generated@@445 $generated@@446)))) (= ($generated@@232 ($generated@@249 $generated@@445 $generated@@446) $generated@@447) ($generated@@87 ($generated@@85 $generated@@445 $generated@@446) ($generated@@250 $generated@@447))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@445 $generated@@446) ($generated@@250 $generated@@447)))
 :pattern ( ($generated@@232 ($generated@@249 $generated@@445 $generated@@446) $generated@@447))
)))
 :pattern ( ($generated@@249 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@449) $generated@@67)) (= ($generated@@140 $generated@@448 ($generated@@222 $generated@@449)) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@204) (< 0 ($generated ($generated@@85 $generated@@448 $generated@@450)))) ($generated@@241 $generated@@450 $generated@@449))
 :pattern ( ($generated@@85 $generated@@448 $generated@@450))
))))
 :pattern ( ($generated@@140 $generated@@448 ($generated@@222 $generated@@449)))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@83 (type $generated@@452))))
 (=> (and (= (type $generated@@452) ($generated@@80 $generated@@454 $generated@@2)) (= (type $generated@@453) ($generated@@80 $generated@@454 $generated@@2))) (= ($generated@@451 $generated@@452 $generated@@453) (forall (($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@454) (= ($generated ($generated@@85 $generated@@452 $generated@@455)) ($generated ($generated@@85 $generated@@453 $generated@@455))))
 :pattern ( ($generated@@85 $generated@@452 $generated@@455))
 :pattern ( ($generated@@85 $generated@@453 $generated@@455))
)))))
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (= (type $generated@@456) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@457) $generated@@67)) (= (type $generated@@458) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@456 ($generated@@270 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@204) ($generated@@0 ($generated@@85 $generated@@456 $generated@@459))) ($generated@@297 $generated@@459 $generated@@457 $generated@@458))
 :pattern ( ($generated@@85 $generated@@456 $generated@@459))
))))
 :pattern ( ($generated@@78 $generated@@456 ($generated@@270 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@80 $generated@@204 $generated@@4)) (= (type $generated@@461) $generated@@67)) (= (type $generated@@462) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@460 ($generated@@275 $generated@@461) $generated@@462) (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@204) ($generated@@0 ($generated@@85 $generated@@460 $generated@@463))) ($generated@@297 $generated@@463 $generated@@461 $generated@@462))
 :pattern ( ($generated@@85 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@78 $generated@@460 ($generated@@275 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@464)))
(= ($generated ($generated@@85 ($generated@@170 $generated@@465) $generated@@464)) 0))
 :pattern ( (let (($generated@@465 (type $generated@@464)))
($generated@@85 ($generated@@170 $generated@@465) $generated@@464)))
)))
(assert  (and (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@466 $generated@@469)) ($generated@@80 $generated@@204 $generated@@4))
 :pattern ( ($generated@@466 $generated@@469))
)) (forall (($generated@@470 T@T) ($generated@@471 T@U) ) (! (= (type ($generated@@467 $generated@@470 $generated@@471)) $generated@@470)
 :pattern ( ($generated@@467 $generated@@470 $generated@@471))
))) (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@368 (type $generated@@472))))
(let (($generated@@474 ($generated@@367 (type $generated@@472))))
(= (type ($generated@@468 $generated@@472)) ($generated@@80 $generated@@474 $generated@@473))))
 :pattern ( ($generated@@468 $generated@@472))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) ($generated@@366 $generated@@204 $generated@@204)) (= (type $generated@@476) $generated@@204)) (= ($generated@@0 ($generated@@85 ($generated@@466 $generated@@475) $generated@@476))  (and ($generated@@0 ($generated@@85 ($generated@@364 $generated@@475) ($generated@@202 ($generated@@467 $generated@@195 $generated@@476)))) (= ($generated@@85 ($generated@@468 $generated@@475) ($generated@@202 ($generated@@467 $generated@@195 $generated@@476))) ($generated@@203 ($generated@@467 $generated@@195 $generated@@476))))))
 :pattern ( ($generated@@85 ($generated@@466 $generated@@475) $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) ($generated@@80 $generated@@204 $generated@@4))
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@386 (type $generated@@480))))
(let (($generated@@482 ($generated@@385 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480)) ($generated@@80 $generated@@482 $generated@@481))))
 :pattern ( ($generated@@478 $generated@@480))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) ($generated@@384 $generated@@204 $generated@@204)) (= (type $generated@@484) $generated@@204)) (= ($generated@@0 ($generated@@85 ($generated@@477 $generated@@483) $generated@@484))  (and ($generated@@0 ($generated@@85 ($generated@@382 $generated@@483) ($generated@@202 ($generated@@467 $generated@@195 $generated@@484)))) (= ($generated@@85 ($generated@@478 $generated@@483) ($generated@@202 ($generated@@467 $generated@@195 $generated@@484))) ($generated@@203 ($generated@@467 $generated@@195 $generated@@484))))))
 :pattern ( ($generated@@85 ($generated@@477 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(let (($generated@@488 ($generated@@367 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@366 $generated@@488 $generated@@487)) (= ($generated@@0 ($generated@@85 ($generated@@423 $generated@@485) $generated@@486)) (exists (($generated@@489 T@U) ) (!  (and (= (type $generated@@489) $generated@@488) (and ($generated@@0 ($generated@@85 ($generated@@364 $generated@@485) $generated@@489)) (= $generated@@486 ($generated@@85 ($generated@@468 $generated@@485) $generated@@489))))
 :pattern ( ($generated@@85 ($generated@@364 $generated@@485) $generated@@489))
 :pattern ( ($generated@@85 ($generated@@468 $generated@@485) $generated@@489))
))))))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
(let (($generated@@493 ($generated@@385 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@384 $generated@@493 $generated@@492)) (= ($generated@@0 ($generated@@85 ($generated@@434 $generated@@490) $generated@@491)) (exists (($generated@@494 T@U) ) (!  (and (= (type $generated@@494) $generated@@493) (and ($generated@@0 ($generated@@85 ($generated@@382 $generated@@490) $generated@@494)) (= $generated@@491 ($generated@@85 ($generated@@478 $generated@@490) $generated@@494))))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@490) $generated@@494))
 :pattern ( ($generated@@85 ($generated@@478 $generated@@490) $generated@@494))
))))))
 :pattern ( ($generated@@85 ($generated@@434 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) ($generated@@366 $generated@@204 $generated@@204)) (= (type $generated@@499) $generated@@67)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@498 ($generated@@495 $generated@@499 $generated@@500) $generated@@501) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@364 $generated@@498) $generated@@502))) (and ($generated@@297 ($generated@@85 ($generated@@468 $generated@@498) $generated@@502) $generated@@500 $generated@@501) ($generated@@297 $generated@@502 $generated@@499 $generated@@501)))
 :pattern ( ($generated@@85 ($generated@@468 $generated@@498) $generated@@502))
 :pattern ( ($generated@@85 ($generated@@364 $generated@@498) $generated@@502))
))))
 :pattern ( ($generated@@78 $generated@@498 ($generated@@495 $generated@@499 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) ($generated@@384 $generated@@204 $generated@@204)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) $generated@@67)) (= (type $generated@@509) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@506 ($generated@@503 $generated@@507 $generated@@508) $generated@@509) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@382 $generated@@506) $generated@@510))) (and ($generated@@297 ($generated@@85 ($generated@@478 $generated@@506) $generated@@510) $generated@@508 $generated@@509) ($generated@@297 $generated@@510 $generated@@507 $generated@@509)))
 :pattern ( ($generated@@85 ($generated@@478 $generated@@506) $generated@@510))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@506) $generated@@510))
))))
 :pattern ( ($generated@@78 $generated@@506 ($generated@@503 $generated@@507 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@83 (type $generated@@511))))
 (=> (and (and (= (type $generated@@511) ($generated@@80 $generated@@513 $generated@@2)) (= (type $generated@@512) ($generated@@80 $generated@@513 $generated@@2))) ($generated@@451 $generated@@511 $generated@@512)) (= $generated@@511 $generated@@512)))
 :pattern ( ($generated@@451 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 Int) ) (! (let (($generated@@516 ($generated@@172 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@171 $generated@@516)) (=> (and (<= 0 $generated@@515) (<= $generated@@515 ($generated@@211 $generated@@514))) (= ($generated@@211 ($generated@@248 $generated@@514 $generated@@515)) $generated@@515))))
 :pattern ( ($generated@@211 ($generated@@248 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@517) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@518) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@519) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@517 $generated@@519))) (and ($generated@@161 $generated@@517 $generated@@518) ($generated@@161 $generated@@518 $generated@@519))) ($generated@@161 $generated@@517 $generated@@519))
 :pattern ( ($generated@@161 $generated@@517 $generated@@518) ($generated@@161 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 Int) ) (!  (=> (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@522) $generated@@81)) (=> (and (and (and ($generated@@180 $generated@@521) (and (not (= $generated@@522 $generated@@138)) (= ($generated@@139 $generated@@522) ($generated@@137 $generated@@520)))) (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@136 $generated@@522)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@521 $generated@@522) $generated@@60))) ($generated@@297 ($generated@@87 ($generated@@85 $generated@@521 $generated@@522) ($generated@@250 $generated@@523)) $generated@@520 $generated@@521)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@521 $generated@@522) ($generated@@250 $generated@@523)) ($generated@@137 $generated@@520))
)))
(assert (forall (($generated@@525 T@T) ) (! (= (type ($generated@@524 $generated@@525)) ($generated@@80 $generated@@525 $generated@@4))
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@386 (type $generated@@526))))
(let (($generated@@528 ($generated@@385 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@384 $generated@@528 $generated@@527)) (= (= $generated@@526 ($generated@@383 $generated@@528 $generated@@527)) (= ($generated@@382 $generated@@526) ($generated@@524 $generated@@528))))))
 :pattern ( ($generated@@382 $generated@@526))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@386 (type $generated@@529))))
(let (($generated@@531 ($generated@@385 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@384 $generated@@531 $generated@@530)) (= (= $generated@@529 ($generated@@383 $generated@@531 $generated@@530)) (= ($generated@@434 $generated@@529) ($generated@@524 $generated@@530))))))
 :pattern ( ($generated@@434 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@386 (type $generated@@532))))
(let (($generated@@534 ($generated@@385 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@384 $generated@@534 $generated@@533)) (= (= $generated@@532 ($generated@@383 $generated@@534 $generated@@533)) (= ($generated@@477 $generated@@532) ($generated@@524 $generated@@204))))))
 :pattern ( ($generated@@477 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@368 (type $generated@@535))))
(let (($generated@@537 ($generated@@367 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@366 $generated@@537 $generated@@536)) (or (= $generated@@535 ($generated@@365 $generated@@537 $generated@@536)) (exists (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (and (and (= (type $generated@@538) $generated@@204) (= (type $generated@@539) $generated@@204)) ($generated@@0 ($generated@@85 ($generated@@466 $generated@@535) ($generated@@336 ($generated@@240 $generated@@538 $generated@@539)))))
 :no-pattern (type $generated@@538)
 :no-pattern (type $generated@@539)
 :no-pattern ($generated $generated@@538)
 :no-pattern ($generated@@0 $generated@@538)
 :no-pattern ($generated $generated@@539)
 :no-pattern ($generated@@0 $generated@@539)
))))))
 :pattern ( ($generated@@466 $generated@@535))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@386 (type $generated@@540))))
(let (($generated@@542 ($generated@@385 (type $generated@@540))))
 (=> (= (type $generated@@540) ($generated@@384 $generated@@542 $generated@@541)) (or (= $generated@@540 ($generated@@383 $generated@@542 $generated@@541)) (exists (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (and (and (= (type $generated@@543) $generated@@204) (= (type $generated@@544) $generated@@204)) ($generated@@0 ($generated@@85 ($generated@@477 $generated@@540) ($generated@@336 ($generated@@240 $generated@@543 $generated@@544)))))
 :no-pattern (type $generated@@543)
 :no-pattern (type $generated@@544)
 :no-pattern ($generated $generated@@543)
 :no-pattern ($generated@@0 $generated@@543)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
))))))
 :pattern ( ($generated@@477 $generated@@540))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@204) ($generated@@241 $generated@@545 $generated@@46)) (and (= ($generated@@336 ($generated@@467 $generated@@2 $generated@@545)) $generated@@545) ($generated@@140 ($generated@@467 $generated@@2 $generated@@545) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@545 $generated@@46))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@204) ($generated@@241 $generated@@546 $generated@@47)) (and (= ($generated@@336 ($generated@@467 $generated@@3 $generated@@546)) $generated@@546) ($generated@@140 ($generated@@467 $generated@@3 $generated@@546) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@546 $generated@@47))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@204) ($generated@@241 $generated@@547 $generated@@44)) (and (= ($generated@@336 ($generated@@467 $generated@@4 $generated@@547)) $generated@@547) ($generated@@140 ($generated@@467 $generated@@4 $generated@@547) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@547 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@548) 19))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@204) ($generated@@241 $generated@@549 $generated@@45)) (and (= ($generated@@336 ($generated@@467 $generated@@548 $generated@@549)) $generated@@549) ($generated@@140 ($generated@@467 $generated@@548 $generated@@549) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@549 $generated@@45))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@67) (= ($generated@@241 ($generated@@336 $generated@@550) $generated@@551) ($generated@@140 $generated@@550 $generated@@551)))
 :pattern ( ($generated@@241 ($generated@@336 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@81) (<= 0 ($generated@@136 $generated@@552)))
 :no-pattern (type $generated@@552)
 :no-pattern ($generated $generated@@552)
 :no-pattern ($generated@@0 $generated@@552)
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@83 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@80 $generated@@554 $generated@@2)) (<= 0 ($generated@@145 $generated@@553))))
 :pattern ( ($generated@@145 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@172 (type $generated@@555))))
 (=> (= (type $generated@@555) ($generated@@171 $generated@@556)) (<= 0 ($generated@@211 $generated@@555))))
 :pattern ( ($generated@@211 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (=> (and (= (type $generated@@557) ($generated@@80 $generated@@560 $generated@@2)) (= (type $generated@@558) ($generated@@80 $generated@@560 $generated@@2))) (= ($generated ($generated@@85 ($generated@@147 $generated@@557 $generated@@558) $generated@@559)) ($generated@@185 ($generated ($generated@@85 $generated@@557 $generated@@559)) ($generated ($generated@@85 $generated@@558 $generated@@559))))))
 :pattern ( ($generated@@85 ($generated@@147 $generated@@557 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@67)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@67) (= (type $generated@@564) $generated@@67)) (= ($generated@@561 ($generated@@495 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@495 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@67)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@67) (= (type $generated@@568) $generated@@67)) (= ($generated@@565 ($generated@@495 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@495 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@67) (= (type $generated@@570) $generated@@67)) (= ($generated@@76 ($generated@@495 $generated@@569 $generated@@570)) $generated@@58))
 :pattern ( ($generated@@495 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@67)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@67)) (= ($generated@@571 ($generated@@503 $generated@@573 $generated@@574)) $generated@@573))
 :pattern ( ($generated@@503 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@67)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@67) (= (type $generated@@578) $generated@@67)) (= ($generated@@575 ($generated@@503 $generated@@577 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@503 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@67) (= (type $generated@@580) $generated@@67)) (= ($generated@@76 ($generated@@503 $generated@@579 $generated@@580)) $generated@@59))
 :pattern ( ($generated@@503 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@204) (= (type $generated@@582) $generated@@204)) (= ($generated@@306 ($generated@@240 $generated@@581 $generated@@582)) $generated@@63))
 :pattern ( ($generated@@240 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@67)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@67) (= (type $generated@@586) $generated@@67)) (= ($generated@@583 ($generated@@194 $generated@@585 $generated@@586)) $generated@@585))
 :pattern ( ($generated@@194 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@67)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@67)) (= ($generated@@587 ($generated@@194 $generated@@589 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@194 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@204) (= (type $generated@@592) $generated@@204)) (= ($generated@@202 ($generated@@240 $generated@@591 $generated@@592)) $generated@@591))
 :pattern ( ($generated@@240 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@204) (= (type $generated@@594) $generated@@204)) (= ($generated@@203 ($generated@@240 $generated@@593 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@240 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@171 $generated@@204)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@595 ($generated@@288 $generated@@596) $generated@@597) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@211 $generated@@595))) ($generated@@297 ($generated@@232 $generated@@595 $generated@@598) $generated@@596 $generated@@597))
 :pattern ( ($generated@@232 $generated@@595 $generated@@598))
))))
 :pattern ( ($generated@@78 $generated@@595 ($generated@@288 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@599 ($generated@@79 $generated@@600)) $generated@@600)
 :pattern ( ($generated@@79 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@67)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@67) (= ($generated@@601 ($generated@@270 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@270 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@67) (= ($generated@@76 ($generated@@270 $generated@@604)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@67)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@67) (= ($generated@@605 ($generated@@275 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@275 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@67) (= ($generated@@76 ($generated@@275 $generated@@608)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@67)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@67) (= ($generated@@609 ($generated@@222 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@222 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@67) (= ($generated@@76 ($generated@@222 $generated@@612)) $generated@@56))
 :pattern ( ($generated@@222 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@67)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@67) (= ($generated@@613 ($generated@@288 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@288 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@67) (= ($generated@@76 ($generated@@288 $generated@@616)) $generated@@57))
 :pattern ( ($generated@@288 $generated@@616))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@75 ($generated@@250 $generated@@617)) 1)
 :pattern ( ($generated@@250 $generated@@617))
)))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@618 ($generated@@250 $generated@@619)) $generated@@619)
 :pattern ( ($generated@@250 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@67)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@67) (= ($generated@@620 ($generated@@137 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@137 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@67)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@67) (= ($generated@@623 ($generated@@188 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@188 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@626)))
(= ($generated@@467 $generated@@627 ($generated@@336 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@336 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@628) ($generated@@366 $generated@@204 $generated@@204)) (= (type $generated@@629) $generated@@67)) (= (type $generated@@630) $generated@@67)) (= ($generated@@140 $generated@@628 ($generated@@495 $generated@@629 $generated@@630)) (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@364 $generated@@628) $generated@@631))) (and ($generated@@241 ($generated@@85 ($generated@@468 $generated@@628) $generated@@631) $generated@@630) ($generated@@241 $generated@@631 $generated@@629)))
 :pattern ( ($generated@@85 ($generated@@468 $generated@@628) $generated@@631))
 :pattern ( ($generated@@85 ($generated@@364 $generated@@628) $generated@@631))
))))
 :pattern ( ($generated@@140 $generated@@628 ($generated@@495 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@384 $generated@@204 $generated@@204)) (= (type $generated@@633) $generated@@67)) (= (type $generated@@634) $generated@@67)) (= ($generated@@140 $generated@@632 ($generated@@503 $generated@@633 $generated@@634)) (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@204) ($generated@@0 ($generated@@85 ($generated@@382 $generated@@632) $generated@@635))) (and ($generated@@241 ($generated@@85 ($generated@@478 $generated@@632) $generated@@635) $generated@@634) ($generated@@241 $generated@@635 $generated@@633)))
 :pattern ( ($generated@@85 ($generated@@478 $generated@@632) $generated@@635))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@632) $generated@@635))
))))
 :pattern ( ($generated@@140 $generated@@632 ($generated@@503 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 Int) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@67) (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@638) $generated@@81)) (and (and ($generated@@180 $generated@@637) (and (not (= $generated@@638 $generated@@138)) (= ($generated@@139 $generated@@638) ($generated@@137 $generated@@636)))) (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@136 $generated@@638))))) ($generated@@241 ($generated@@87 ($generated@@85 $generated@@637 $generated@@638) ($generated@@250 $generated@@639)) $generated@@636))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@637 $generated@@638) ($generated@@250 $generated@@639)) ($generated@@137 $generated@@636))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@204) (= (type $generated@@643) $generated@@204)) (< ($generated@@640 $generated@@642) ($generated@@641 ($generated@@240 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@240 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@204) (= (type $generated@@645) $generated@@204)) (< ($generated@@640 $generated@@645) ($generated@@641 ($generated@@240 $generated@@644 $generated@@645))))
 :pattern ( ($generated@@240 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@83 (type $generated@@646))))
 (=> (and (= (type $generated@@646) ($generated@@80 $generated@@648 $generated@@2)) (= (type $generated@@647) ($generated@@80 $generated@@648 $generated@@2))) (= ($generated@@147 $generated@@646 ($generated@@147 $generated@@646 $generated@@647)) ($generated@@147 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@147 $generated@@646 ($generated@@147 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@204) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@67)) ($generated@@241 $generated@@649 ($generated@@495 $generated@@650 $generated@@651))) (and (= ($generated@@336 ($generated@@467 ($generated@@366 $generated@@204 $generated@@204) $generated@@649)) $generated@@649) ($generated@@140 ($generated@@467 ($generated@@366 $generated@@204 $generated@@204) $generated@@649) ($generated@@495 $generated@@650 $generated@@651))))
 :pattern ( ($generated@@241 $generated@@649 ($generated@@495 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@204) (= (type $generated@@653) $generated@@67)) (= (type $generated@@654) $generated@@67)) ($generated@@241 $generated@@652 ($generated@@503 $generated@@653 $generated@@654))) (and (= ($generated@@336 ($generated@@467 ($generated@@384 $generated@@204 $generated@@204) $generated@@652)) $generated@@652) ($generated@@140 ($generated@@467 ($generated@@384 $generated@@204 $generated@@204) $generated@@652) ($generated@@503 $generated@@653 $generated@@654))))
 :pattern ( ($generated@@241 $generated@@652 ($generated@@503 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@67) (= (type $generated@@656) $generated@@67)) (= (type $generated@@657) $generated@@204)) ($generated@@241 $generated@@657 ($generated@@194 $generated@@655 $generated@@656))) (and (= ($generated@@336 ($generated@@467 $generated@@195 $generated@@657)) $generated@@657) ($generated@@140 ($generated@@467 $generated@@195 $generated@@657) ($generated@@194 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@241 $generated@@657 ($generated@@194 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ) (! (let (($generated@@659 (type $generated@@658)))
 (not ($generated@@0 ($generated@@85 ($generated@@524 $generated@@659) $generated@@658))))
 :pattern ( (let (($generated@@659 (type $generated@@658)))
($generated@@85 ($generated@@524 $generated@@659) $generated@@658)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@660) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@662) $generated@@81)) (=> (and (and (and ($generated@@180 $generated@@660) ($generated@@180 $generated@@661)) ($generated@@161 $generated@@660 $generated@@661)) (= ($generated@@85 $generated@@660 $generated@@662) ($generated@@85 $generated@@661 $generated@@662))) (= ($generated@@249 $generated@@660 $generated@@662) ($generated@@249 $generated@@661 $generated@@662))))
 :pattern ( ($generated@@249 $generated@@661 $generated@@662) ($generated@@161 $generated@@660 $generated@@661))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@669 T@T) ($generated@@670 T@T) ) (= ($generated@@1 ($generated@@665 $generated@@669 $generated@@670)) 20)) (forall (($generated@@671 T@T) ($generated@@672 T@T) ) (! (= ($generated@@666 ($generated@@665 $generated@@671 $generated@@672)) $generated@@671)
 :pattern ( ($generated@@665 $generated@@671 $generated@@672))
))) (forall (($generated@@673 T@T) ($generated@@674 T@T) ) (! (= ($generated@@667 ($generated@@665 $generated@@673 $generated@@674)) $generated@@674)
 :pattern ( ($generated@@665 $generated@@673 $generated@@674))
))) (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (! (let (($generated@@678 ($generated@@667 (type $generated@@675))))
(= (type ($generated@@663 $generated@@675 $generated@@676 $generated@@677)) $generated@@678))
 :pattern ( ($generated@@663 $generated@@675 $generated@@676 $generated@@677))
))) (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (! (let (($generated@@683 (type $generated@@682)))
(let (($generated@@684 (type $generated@@680)))
(= (type ($generated@@668 $generated@@679 $generated@@680 $generated@@681 $generated@@682)) ($generated@@665 $generated@@684 $generated@@683))))
 :pattern ( ($generated@@668 $generated@@679 $generated@@680 $generated@@681 $generated@@682))
))) (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (! (let (($generated@@689 ($generated@@667 (type $generated@@685))))
 (=> (= (type $generated@@688) $generated@@689) (= ($generated@@663 ($generated@@668 $generated@@685 $generated@@686 $generated@@687 $generated@@688) $generated@@686 $generated@@687) $generated@@688)))
 :weight 0
))) (and (and (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (or (= $generated@@692 $generated@@694) (= ($generated@@663 ($generated@@668 $generated@@691 $generated@@692 $generated@@693 $generated@@690) $generated@@694 $generated@@695) ($generated@@663 $generated@@691 $generated@@694 $generated@@695)))
 :weight 0
)) (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (or (= $generated@@699 $generated@@701) (= ($generated@@663 ($generated@@668 $generated@@697 $generated@@698 $generated@@699 $generated@@696) $generated@@700 $generated@@701) ($generated@@663 $generated@@697 $generated@@700 $generated@@701)))
 :weight 0
))) (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (or true (= ($generated@@663 ($generated@@668 $generated@@703 $generated@@704 $generated@@705 $generated@@702) $generated@@706 $generated@@707) ($generated@@663 $generated@@703 $generated@@706 $generated@@707)))
 :weight 0
)))) (forall (($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (! (= (type ($generated@@664 $generated@@708 $generated@@709 $generated@@710 $generated@@711)) ($generated@@665 $generated@@81 $generated@@4))
 :pattern ( ($generated@@664 $generated@@708 $generated@@709 $generated@@710 $generated@@711))
))))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (! (let (($generated@@718 ($generated@@70 (type $generated@@717))))
 (=> (and (and (and (and (and (= (type $generated@@712) $generated@@81) (= (type $generated@@713) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@714) ($generated@@69 $generated@@4))) (= (type $generated@@715) $generated@@81)) (= (type $generated@@716) $generated@@81)) (= (type $generated@@717) ($generated@@69 $generated@@718))) (= ($generated@@0 ($generated@@663 ($generated@@664 $generated@@712 $generated@@713 $generated@@714 $generated@@715) $generated@@716 $generated@@717))  (=> (and (not (= $generated@@716 $generated@@712)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@713 $generated@@716) $generated@@714))) (= $generated@@716 $generated@@715)))))
 :pattern ( ($generated@@663 ($generated@@664 $generated@@712 $generated@@713 $generated@@714 $generated@@715) $generated@@716 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@720) $generated@@81)) (= ($generated@@211 ($generated@@249 $generated@@719 $generated@@720)) ($generated@@136 $generated@@720)))
 :pattern ( ($generated@@211 ($generated@@249 $generated@@719 $generated@@720)))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@67) (= (type $generated@@722) $generated@@67)) (and (= ($generated@@76 ($generated@@194 $generated@@721 $generated@@722)) $generated@@64) (= ($generated@@356 ($generated@@194 $generated@@721 $generated@@722)) $generated@@66)))
 :pattern ( ($generated@@194 $generated@@721 $generated@@722))
)))
(assert  (and (forall (($generated@@725 T@U) ) (! (let (($generated@@726 ($generated@@172 (type $generated@@725))))
(= (type ($generated@@723 $generated@@725)) ($generated@@171 $generated@@726)))
 :pattern ( ($generated@@723 $generated@@725))
)) (forall (($generated@@727 T@U) ) (! (let (($generated@@728 ($generated@@172 (type $generated@@727))))
(= (type ($generated@@724 $generated@@727)) $generated@@728))
 :pattern ( ($generated@@724 $generated@@727))
))))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (! (let (($generated@@731 (type $generated@@730)))
 (=> (= (type $generated@@729) ($generated@@171 $generated@@731)) (and (= ($generated@@723 ($generated@@210 $generated@@729 $generated@@730)) $generated@@729) (= ($generated@@724 ($generated@@210 $generated@@729 $generated@@730)) $generated@@730))))
 :pattern ( ($generated@@210 $generated@@729 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ) (!  (=> (= (type $generated@@732) $generated@@195) (= ($generated@@640 ($generated@@336 $generated@@732)) ($generated@@641 $generated@@732)))
 :pattern ( ($generated@@640 ($generated@@336 $generated@@732)))
)))
(assert (forall (($generated@@733 T@U) ) (! (let (($generated@@734 ($generated@@172 (type $generated@@733))))
 (=> (= (type $generated@@733) ($generated@@171 $generated@@734)) (= ($generated@@145 ($generated@@168 $generated@@733)) ($generated@@211 $generated@@733))))
 :pattern ( ($generated@@145 ($generated@@168 $generated@@733)))
)))
(assert (forall (($generated@@735 Int) ($generated@@736 Int) ) (! (= (<= $generated@@735 $generated@@736) (= ($generated@@185 $generated@@735 $generated@@736) $generated@@735))
 :pattern ( ($generated@@185 $generated@@735 $generated@@736))
)))
(assert (forall (($generated@@737 Int) ($generated@@738 Int) ) (! (= (<= $generated@@738 $generated@@737) (= ($generated@@185 $generated@@737 $generated@@738) $generated@@738))
 :pattern ( ($generated@@185 $generated@@737 $generated@@738))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@739) $generated@@204) ($generated@@241 $generated@@739 ($generated@@79 0))) (and (= ($generated@@336 ($generated@@467 $generated@@2 $generated@@739)) $generated@@739) ($generated@@140 ($generated@@467 ($generated@@80 $generated@@204 $generated@@4) $generated@@739) ($generated@@79 0))))
 :pattern ( ($generated@@241 $generated@@739 ($generated@@79 0)))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (and (= (type $generated@@740) $generated@@204) (= (type $generated@@741) $generated@@67)) ($generated@@241 $generated@@740 ($generated@@270 $generated@@741))) (and (= ($generated@@336 ($generated@@467 ($generated@@80 $generated@@204 $generated@@4) $generated@@740)) $generated@@740) ($generated@@140 ($generated@@467 ($generated@@80 $generated@@204 $generated@@4) $generated@@740) ($generated@@270 $generated@@741))))
 :pattern ( ($generated@@241 $generated@@740 ($generated@@270 $generated@@741)))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (and (= (type $generated@@742) $generated@@204) (= (type $generated@@743) $generated@@67)) ($generated@@241 $generated@@742 ($generated@@275 $generated@@743))) (and (= ($generated@@336 ($generated@@467 ($generated@@80 $generated@@204 $generated@@4) $generated@@742)) $generated@@742) ($generated@@140 ($generated@@467 ($generated@@80 $generated@@204 $generated@@4) $generated@@742) ($generated@@275 $generated@@743))))
 :pattern ( ($generated@@241 $generated@@742 ($generated@@275 $generated@@743)))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (and (= (type $generated@@744) $generated@@204) (= (type $generated@@745) $generated@@67)) ($generated@@241 $generated@@744 ($generated@@222 $generated@@745))) (and (= ($generated@@336 ($generated@@467 ($generated@@80 $generated@@204 $generated@@2) $generated@@744)) $generated@@744) ($generated@@140 ($generated@@467 ($generated@@80 $generated@@204 $generated@@2) $generated@@744) ($generated@@222 $generated@@745))))
 :pattern ( ($generated@@241 $generated@@744 ($generated@@222 $generated@@745)))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (and (= (type $generated@@746) $generated@@204) (= (type $generated@@747) $generated@@67)) ($generated@@241 $generated@@746 ($generated@@288 $generated@@747))) (and (= ($generated@@336 ($generated@@467 ($generated@@171 $generated@@204) $generated@@746)) $generated@@746) ($generated@@140 ($generated@@467 ($generated@@171 $generated@@204) $generated@@746) ($generated@@288 $generated@@747))))
 :pattern ( ($generated@@241 $generated@@746 ($generated@@288 $generated@@747)))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (and (= (type $generated@@748) $generated@@67) (= (type $generated@@749) $generated@@204)) ($generated@@241 $generated@@749 ($generated@@137 $generated@@748))) (and (= ($generated@@336 ($generated@@467 $generated@@81 $generated@@749)) $generated@@749) ($generated@@140 ($generated@@467 $generated@@81 $generated@@749) ($generated@@137 $generated@@748))))
 :pattern ( ($generated@@241 $generated@@749 ($generated@@137 $generated@@748)))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (and (= (type $generated@@750) $generated@@67) (= (type $generated@@751) $generated@@204)) ($generated@@241 $generated@@751 ($generated@@188 $generated@@750))) (and (= ($generated@@336 ($generated@@467 $generated@@81 $generated@@751)) $generated@@751) ($generated@@140 ($generated@@467 $generated@@81 $generated@@751) ($generated@@188 $generated@@750))))
 :pattern ( ($generated@@241 $generated@@751 ($generated@@188 $generated@@750)))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (! (let (($generated@@754 (type $generated@@753)))
 (=> (= (type $generated@@752) ($generated@@171 $generated@@754)) (= ($generated@@168 ($generated@@210 $generated@@752 $generated@@753)) ($generated@@321 ($generated@@168 $generated@@752) $generated@@753))))
 :pattern ( ($generated@@168 ($generated@@210 $generated@@752 $generated@@753)))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 Int) ($generated@@757 Int) ) (! (let (($generated@@758 ($generated@@172 (type $generated@@755))))
 (=> (= (type $generated@@755) ($generated@@171 $generated@@758)) (=> (and (and (<= 0 $generated@@756) (<= $generated@@756 $generated@@757)) (< $generated@@757 ($generated@@211 $generated@@755))) (= ($generated@@232 ($generated@@209 $generated@@755 $generated@@756) (- $generated@@757 $generated@@756)) ($generated@@232 $generated@@755 $generated@@757)))))
 :weight 25
 :pattern ( ($generated@@232 $generated@@755 $generated@@757) ($generated@@209 $generated@@755 $generated@@756))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ) (!  (=> (and (and (= (type $generated@@759) ($generated@@80 $generated@@204 $generated@@2)) (= (type $generated@@760) $generated@@67)) (= (type $generated@@761) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@759 ($generated@@222 $generated@@760) $generated@@761) (forall (($generated@@762 T@U) ) (!  (=> (and (= (type $generated@@762) $generated@@204) (< 0 ($generated ($generated@@85 $generated@@759 $generated@@762)))) ($generated@@297 $generated@@762 $generated@@760 $generated@@761))
 :pattern ( ($generated@@85 $generated@@759 $generated@@762))
))))
 :pattern ( ($generated@@78 $generated@@759 ($generated@@222 $generated@@760) $generated@@761))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 Int) ($generated@@765 Int) ) (! (let (($generated@@766 ($generated@@172 (type $generated@@763))))
 (=> (= (type $generated@@763) ($generated@@171 $generated@@766)) (=> (and (and (<= 0 $generated@@764) (<= 0 $generated@@765)) (<= (+ $generated@@764 $generated@@765) ($generated@@211 $generated@@763))) (= ($generated@@209 ($generated@@209 $generated@@763 $generated@@764) $generated@@765) ($generated@@209 $generated@@763 (+ $generated@@764 $generated@@765))))))
 :pattern ( ($generated@@209 ($generated@@209 $generated@@763 $generated@@764) $generated@@765))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ($generated@@769 T@U) ) (!  (=> (and (and (and (= (type $generated@@767) $generated@@195) (= (type $generated@@768) $generated@@67)) (= (type $generated@@769) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@180 $generated@@769) (and ($generated@@193 $generated@@767) (exists (($generated@@770 T@U) ) (!  (and (= (type $generated@@770) $generated@@67) ($generated@@78 $generated@@767 ($generated@@194 $generated@@768 $generated@@770) $generated@@769))
 :pattern ( ($generated@@78 $generated@@767 ($generated@@194 $generated@@768 $generated@@770) $generated@@769))
))))) ($generated@@297 ($generated@@202 $generated@@767) $generated@@768 $generated@@769))
 :pattern ( ($generated@@297 ($generated@@202 $generated@@767) $generated@@768 $generated@@769))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (and (and (= (type $generated@@771) $generated@@195) (= (type $generated@@772) $generated@@67)) (= (type $generated@@773) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@180 $generated@@773) (and ($generated@@193 $generated@@771) (exists (($generated@@774 T@U) ) (!  (and (= (type $generated@@774) $generated@@67) ($generated@@78 $generated@@771 ($generated@@194 $generated@@774 $generated@@772) $generated@@773))
 :pattern ( ($generated@@78 $generated@@771 ($generated@@194 $generated@@774 $generated@@772) $generated@@773))
))))) ($generated@@297 ($generated@@203 $generated@@771) $generated@@772 $generated@@773))
 :pattern ( ($generated@@297 ($generated@@203 $generated@@771) $generated@@772 $generated@@773))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ) (! (let (($generated@@778 (type $generated@@776)))
 (=> (and (and (= (type $generated@@775) ($generated@@80 $generated@@778 $generated@@2)) (= (type $generated@@777) $generated@@778)) (not (= $generated@@776 $generated@@777))) (= ($generated ($generated@@85 $generated@@775 $generated@@777)) ($generated ($generated@@85 ($generated@@321 $generated@@775 $generated@@776) $generated@@777)))))
 :pattern ( ($generated@@321 $generated@@775 $generated@@776) ($generated@@85 $generated@@775 $generated@@777))
)))
(assert (forall (($generated@@779 Int) ) (!  (=> (< $generated@@779 0) (= ($generated@@280 $generated@@779) 0))
 :pattern ( ($generated@@280 $generated@@779))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ) (!  (=> (and (= (type $generated@@780) $generated@@204) (= (type $generated@@781) $generated@@204)) (= ($generated@@240 ($generated@@284 $generated@@780) ($generated@@284 $generated@@781)) ($generated@@284 ($generated@@240 $generated@@780 $generated@@781))))
 :pattern ( ($generated@@240 ($generated@@284 $generated@@780) ($generated@@284 $generated@@781)))
)))
(assert (forall (($generated@@782 Int) ) (! (= ($generated@@336 ($generated@@8 ($generated@@282 $generated@@782))) ($generated@@284 ($generated@@336 ($generated@@8 $generated@@782))))
 :pattern ( ($generated@@336 ($generated@@8 ($generated@@282 $generated@@782))))
)))
(assert (forall (($generated@@783 T@U) ) (! (= ($generated@@336 ($generated@@284 $generated@@783)) ($generated@@284 ($generated@@336 $generated@@783)))
 :pattern ( ($generated@@336 ($generated@@284 $generated@@783)))
)))
(assert (forall (($generated@@784 T@U) ) (! (let (($generated@@785 ($generated@@172 (type $generated@@784))))
 (=> (and (= (type $generated@@784) ($generated@@171 $generated@@785)) (= ($generated@@211 $generated@@784) 0)) (= $generated@@784 ($generated@@169 $generated@@785))))
 :pattern ( ($generated@@211 $generated@@784))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 Int) ) (! (let (($generated@@788 ($generated@@172 (type $generated@@786))))
 (=> (and (= (type $generated@@786) ($generated@@171 $generated@@788)) (= $generated@@787 0)) (= ($generated@@248 $generated@@786 $generated@@787) ($generated@@169 $generated@@788))))
 :pattern ( ($generated@@248 $generated@@786 $generated@@787))
)))
(assert (forall (($generated@@789 T@U) ($generated@@790 T@U) ($generated@@791 T@U) ) (! (let (($generated@@792 (type $generated@@790)))
 (=> (and (and (= (type $generated@@789) ($generated@@80 $generated@@792 $generated@@2)) (= (type $generated@@791) $generated@@2)) (<= 0 ($generated $generated@@791))) (= ($generated@@145 ($generated@@86 $generated@@789 $generated@@790 $generated@@791)) (+ (- ($generated@@145 $generated@@789) ($generated ($generated@@85 $generated@@789 $generated@@790))) ($generated $generated@@791)))))
 :pattern ( ($generated@@145 ($generated@@86 $generated@@789 $generated@@790 $generated@@791)))
)))
(assert (forall (($generated@@793 T@U) ($generated@@794 T@U) ) (!  (=> (and (= (type $generated@@793) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@794) $generated@@2)) ($generated@@78 $generated@@794 $generated@@46 $generated@@793))
 :pattern ( ($generated@@78 $generated@@794 $generated@@46 $generated@@793))
)))
(assert (forall (($generated@@795 T@U) ($generated@@796 T@U) ) (!  (=> (and (= (type $generated@@795) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@796) $generated@@3)) ($generated@@78 $generated@@796 $generated@@47 $generated@@795))
 :pattern ( ($generated@@78 $generated@@796 $generated@@47 $generated@@795))
)))
(assert (forall (($generated@@797 T@U) ($generated@@798 T@U) ) (!  (=> (and (= (type $generated@@797) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@798) $generated@@4)) ($generated@@78 $generated@@798 $generated@@44 $generated@@797))
 :pattern ( ($generated@@78 $generated@@798 $generated@@44 $generated@@797))
)))
(assert (forall (($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (= (type $generated@@799) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@800) $generated@@548)) ($generated@@78 $generated@@800 $generated@@45 $generated@@799))
 :pattern ( ($generated@@78 $generated@@800 $generated@@45 $generated@@799))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ) (!  (=> (and (= (type $generated@@801) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@802) $generated@@204)) ($generated@@78 $generated@@802 $generated@@48 $generated@@801))
 :pattern ( ($generated@@78 $generated@@802 $generated@@48 $generated@@801))
)))
(assert (forall (($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (= (type $generated@@803) ($generated@@171 $generated@@204)) (= (type $generated@@804) $generated@@67)) (= ($generated@@140 $generated@@803 ($generated@@288 $generated@@804)) (forall (($generated@@805 Int) ) (!  (=> (and (<= 0 $generated@@805) (< $generated@@805 ($generated@@211 $generated@@803))) ($generated@@241 ($generated@@232 $generated@@803 $generated@@805) $generated@@804))
 :pattern ( ($generated@@232 $generated@@803 $generated@@805))
))))
 :pattern ( ($generated@@140 $generated@@803 ($generated@@288 $generated@@804)))
)))
(assert (forall (($generated@@806 T@U) ($generated@@807 Int) ) (!  (=> (= (type $generated@@806) ($generated@@171 $generated@@204)) (=> (and (<= 0 $generated@@807) (< $generated@@807 ($generated@@211 $generated@@806))) (< ($generated@@641 ($generated@@467 $generated@@195 ($generated@@232 $generated@@806 $generated@@807))) ($generated@@313 $generated@@806))))
 :pattern ( ($generated@@641 ($generated@@467 $generated@@195 ($generated@@232 $generated@@806 $generated@@807))))
)))
(assert (forall (($generated@@808 T@U) ($generated@@809 T@U) ($generated@@810 T@U) ) (!  (=> (and (and (and (= (type $generated@@808) ($generated@@366 $generated@@204 $generated@@204)) (= (type $generated@@809) $generated@@67)) (= (type $generated@@810) $generated@@67)) ($generated@@140 $generated@@808 ($generated@@495 $generated@@809 $generated@@810))) (and (and ($generated@@140 ($generated@@364 $generated@@808) ($generated@@270 $generated@@809)) ($generated@@140 ($generated@@423 $generated@@808) ($generated@@270 $generated@@810))) ($generated@@140 ($generated@@466 $generated@@808) ($generated@@270 ($generated@@194 $generated@@809 $generated@@810)))))
 :pattern ( ($generated@@140 $generated@@808 ($generated@@495 $generated@@809 $generated@@810)))
)))
(assert (forall (($generated@@811 T@U) ($generated@@812 T@U) ($generated@@813 T@U) ) (!  (=> (and (and (and (= (type $generated@@811) ($generated@@384 $generated@@204 $generated@@204)) (= (type $generated@@812) $generated@@67)) (= (type $generated@@813) $generated@@67)) ($generated@@140 $generated@@811 ($generated@@503 $generated@@812 $generated@@813))) (and (and ($generated@@140 ($generated@@382 $generated@@811) ($generated@@275 $generated@@812)) ($generated@@140 ($generated@@434 $generated@@811) ($generated@@275 $generated@@813))) ($generated@@140 ($generated@@477 $generated@@811) ($generated@@275 ($generated@@194 $generated@@812 $generated@@813)))))
 :pattern ( ($generated@@140 $generated@@811 ($generated@@503 $generated@@812 $generated@@813)))
)))
(assert (forall (($generated@@814 T@U) ) (!  (=> (= (type $generated@@814) $generated@@2) ($generated@@140 $generated@@814 $generated@@46))
 :pattern ( ($generated@@140 $generated@@814 $generated@@46))
)))
(assert (forall (($generated@@815 T@U) ) (!  (=> (= (type $generated@@815) $generated@@3) ($generated@@140 $generated@@815 $generated@@47))
 :pattern ( ($generated@@140 $generated@@815 $generated@@47))
)))
(assert (forall (($generated@@816 T@U) ) (!  (=> (= (type $generated@@816) $generated@@4) ($generated@@140 $generated@@816 $generated@@44))
 :pattern ( ($generated@@140 $generated@@816 $generated@@44))
)))
(assert (forall (($generated@@817 T@U) ) (!  (=> (= (type $generated@@817) $generated@@548) ($generated@@140 $generated@@817 $generated@@45))
 :pattern ( ($generated@@140 $generated@@817 $generated@@45))
)))
(assert (forall (($generated@@818 T@U) ) (!  (=> (= (type $generated@@818) $generated@@204) ($generated@@140 $generated@@818 $generated@@48))
 :pattern ( ($generated@@140 $generated@@818 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@819 () Int)
(declare-fun $generated@@820 () Int)
(declare-fun $generated@@821 () T@U)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 (T@U) Bool)
(declare-fun $generated@@824 () T@U)
(declare-fun $generated@@825 () T@U)
(declare-fun $generated@@826 () Int)
(assert  (and (and (and (= (type $generated@@821) $generated@@81) (= (type $generated@@822) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@824) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@825) ($generated@@665 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@827  (=> (and (and (and (<= ($generated@@282 0) $generated@@819) (< $generated@@819 $generated@@820)) (<= $generated@@820 ($generated@@136 $generated@@821))) (and (and ($generated@@180 $generated@@822) ($generated@@823 $generated@@822)) (and (forall (($generated@@828 T@U) ) (!  (=> (= (type $generated@@828) $generated@@81) (=> (and (not (= $generated@@828 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@824 $generated@@828) $generated@@60))) (or (= ($generated@@85 $generated@@822 $generated@@828) ($generated@@85 $generated@@824 $generated@@828)) (= $generated@@828 $generated@@821))))
 :pattern ( ($generated@@85 $generated@@822 $generated@@828))
)) ($generated@@161 $generated@@824 $generated@@822)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (not (= $generated@@821 $generated@@138))) (=> (not (= $generated@@821 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= 0 $generated@@819) (<= $generated@@819 ($generated@@136 $generated@@821)))) (=> (and (<= 0 $generated@@819) (<= $generated@@819 ($generated@@136 $generated@@821))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= $generated@@819 (- $generated@@820 1)) (<= (- $generated@@820 1) ($generated@@136 $generated@@821)))) (=> (and (<= $generated@@819 (- $generated@@820 1)) (<= (- $generated@@820 1) ($generated@@136 $generated@@821))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@821 $generated@@138))) (=> (not (= $generated@@821 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 $generated@@819) (<= $generated@@819 ($generated@@136 $generated@@821)))) (=> (and (<= 0 $generated@@819) (<= $generated@@819 ($generated@@136 $generated@@821))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@819 $generated@@820) (<= $generated@@820 ($generated@@136 $generated@@821)))) (=> (and (<= $generated@@819 $generated@@820) (<= $generated@@820 ($generated@@136 $generated@@821))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@821 $generated@@138))) (=> (not (= $generated@@821 $generated@@138)) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 (- $generated@@820 1)) (< (- $generated@@820 1) ($generated@@136 $generated@@821)))))))))))))))))))))
(let (($generated@@829  (=> (and (not (and (<= ($generated@@282 0) $generated@@819) (< $generated@@819 $generated@@820))) (= (ControlFlow 0 12) 2)) $generated@@827)))
(let (($generated@@830  (=> (and (<= ($generated@@282 0) $generated@@819) (< $generated@@819 $generated@@820)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (= $generated@@821 $generated@@138))) (=> (not (= $generated@@821 $generated@@138)) (=> (= (ControlFlow 0 10) 2) $generated@@827))))))
(let (($generated@@831  (=> (< $generated@@819 ($generated@@282 0)) (and (=> (= (ControlFlow 0 14) 10) $generated@@830) (=> (= (ControlFlow 0 14) 12) $generated@@829)))))
(let (($generated@@832  (=> (<= ($generated@@282 0) $generated@@819) (and (=> (= (ControlFlow 0 13) 10) $generated@@830) (=> (= (ControlFlow 0 13) 12) $generated@@829)))))
(let (($generated@@833  (=> (= $generated@@825 ($generated@@664 $generated@@138 $generated@@824 $generated@@60 $generated@@821)) (and (=> (= (ControlFlow 0 15) 13) $generated@@832) (=> (= (ControlFlow 0 15) 14) $generated@@831)))))
(let (($generated@@834  (=> (and ($generated@@180 $generated@@824) ($generated@@823 $generated@@824)) (=> (and (and ($generated@@140 $generated@@821 ($generated@@188 $generated@@46)) ($generated@@78 $generated@@821 ($generated@@188 $generated@@46) $generated@@824)) (and (= 1 $generated@@826) (= (ControlFlow 0 16) 15))) $generated@@833))))
$generated@@834))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@T) T@U)
(declare-fun $generated@@166 (T@T) T@U)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (Int Int) Int)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U) T@U)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@197 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@205 (T@U Int) T@U)
(declare-fun $generated@@206 (T@U T@U) T@U)
(declare-fun $generated@@207 (T@U) Int)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@228 (T@U Int) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U Int) T@U)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@257 (Int) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (Int) Int)
(declare-fun $generated@@286 (Int) Int)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@301 (T@U T@U T@U) Bool)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@313 (T@U T@U) Bool)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@330 (T@U T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@T) T@U)
(declare-fun $generated@@385 (T@T T@T) T@T)
(declare-fun $generated@@386 (T@T) T@T)
(declare-fun $generated@@387 (T@T) T@T)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) Bool)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@T T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@499 (T@U T@U) T@U)
(declare-fun $generated@@507 (T@U T@U) T@U)
(declare-fun $generated@@528 (T@T) T@U)
(declare-fun $generated@@552 () T@T)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@626 (T@U) Int)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@648 (T@U) Int)
(declare-fun $generated@@649 (T@U) Int)
(declare-fun $generated@@668 (T@U T@U T@U) T@U)
(declare-fun $generated@@669 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@670 (T@T T@T) T@T)
(declare-fun $generated@@671 (T@T) T@T)
(declare-fun $generated@@672 (T@T) T@T)
(declare-fun $generated@@673 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@728 (T@U) T@U)
(declare-fun $generated@@729 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert  (and (and (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@83 (type $generated@@149))))
(= (type ($generated@@146 $generated@@149 $generated@@150)) ($generated@@80 $generated@@151 $generated@@2)))
 :pattern ( ($generated@@146 $generated@@149 $generated@@150))
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@83 (type $generated@@152))))
(= (type ($generated@@147 $generated@@152 $generated@@153)) ($generated@@80 $generated@@154 $generated@@2)))
 :pattern ( ($generated@@147 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@83 (type $generated@@155))))
(= (type ($generated@@148 $generated@@155 $generated@@156)) ($generated@@80 $generated@@157 $generated@@2)))
 :pattern ( ($generated@@148 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@83 (type $generated@@158))))
 (=> (and (= (type $generated@@158) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@159) ($generated@@80 $generated@@160 $generated@@2))) (and (= (+ (+ ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) ($generated@@145 ($generated@@146 $generated@@159 $generated@@158))) (* 2 ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))) ($generated@@145 ($generated@@148 $generated@@158 $generated@@159))) (= ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)) (- ($generated@@145 $generated@@158) ($generated@@145 ($generated@@147 $generated@@158 $generated@@159)))))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@67) (= (type $generated@@162) $generated@@81)) (= (type $generated@@163) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@162 ($generated@@137 $generated@@161) $generated@@163)  (or (= $generated@@162 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@163 $generated@@162) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@162 ($generated@@137 $generated@@161) $generated@@163))
)))
(assert  (and (and (and (and (forall (($generated@@169 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@169)) 14)) (forall (($generated@@170 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@168 (type $generated@@171))))
(= (type ($generated@@164 $generated@@171)) ($generated@@80 $generated@@172 $generated@@2)))
 :pattern ( ($generated@@164 $generated@@171))
))) (forall (($generated@@173 T@T) ) (! (= (type ($generated@@165 $generated@@173)) ($generated@@167 $generated@@173))
 :pattern ( ($generated@@165 $generated@@173))
))) (forall (($generated@@174 T@T) ) (! (= (type ($generated@@166 $generated@@174)) ($generated@@80 $generated@@174 $generated@@2))
 :pattern ( ($generated@@166 $generated@@174))
))))
(assert (forall (($generated@@175 T@T) ) (= ($generated@@164 ($generated@@165 $generated@@175)) ($generated@@166 $generated@@175))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (and (= (type $generated@@177) $generated@@67) (= (type $generated@@178) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@179) $generated@@81)) (and (and ($generated@@176 $generated@@178) (and (not (= $generated@@179 $generated@@138)) (= ($generated@@139 $generated@@179) ($generated@@137 $generated@@177)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@178 $generated@@179) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@179)) $generated@@46 $generated@@178))
 :pattern ( ($generated@@136 $generated@@179) ($generated@@87 ($generated@@85 $generated@@178 $generated@@179) $generated@@60) ($generated@@137 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@140 $generated@@180 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@180 ($generated@@79 0)))
)))
(assert (forall (($generated@@182 Int) ($generated@@183 Int) ) (!  (or (= ($generated@@181 $generated@@182 $generated@@183) $generated@@182) (= ($generated@@181 $generated@@182 $generated@@183) $generated@@183))
 :pattern ( ($generated@@181 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@67)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@81)) (= (type $generated@@188) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@187 ($generated@@184 $generated@@186) $generated@@188) ($generated@@78 $generated@@187 ($generated@@137 $generated@@186) $generated@@188)))
 :pattern ( ($generated@@78 $generated@@187 ($generated@@184 $generated@@186) $generated@@188))
)))
(assert  (and (= ($generated@@1 $generated@@191) 15) (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@192 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@190 $generated@@192 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (and (= (type $generated@@194) $generated@@67) (= (type $generated@@195) $generated@@67)) (= (type $generated@@196) $generated@@191)) ($generated@@140 $generated@@196 ($generated@@190 $generated@@194 $generated@@195))) ($generated@@189 $generated@@196))
 :pattern ( ($generated@@189 $generated@@196) ($generated@@140 $generated@@196 ($generated@@190 $generated@@194 $generated@@195)))
)))
(assert  (and (and (= ($generated@@1 $generated@@200) 16) (forall (($generated@@201 T@U) ) (! (= (type ($generated@@198 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@198 $generated@@201))
))) (forall (($generated@@202 T@U) ) (! (= (type ($generated@@199 $generated@@202)) $generated@@200)
 :pattern ( ($generated@@199 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) $generated@@191) (= (type $generated@@204) $generated@@191)) true) (= ($generated@@197 $generated@@203 $generated@@204)  (and (= ($generated@@198 $generated@@203) ($generated@@198 $generated@@204)) (= ($generated@@199 $generated@@203) ($generated@@199 $generated@@204)))))
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
)))
(assert  (and (forall (($generated@@208 T@U) ($generated@@209 Int) ) (! (let (($generated@@210 ($generated@@168 (type $generated@@208))))
(= (type ($generated@@205 $generated@@208 $generated@@209)) ($generated@@167 $generated@@210)))
 :pattern ( ($generated@@205 $generated@@208 $generated@@209))
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@206 $generated@@211 $generated@@212)) ($generated@@167 $generated@@213)))
 :pattern ( ($generated@@206 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Int) ) (! (let (($generated@@217 (type $generated@@215)))
 (=> (= (type $generated@@214) ($generated@@167 $generated@@217)) (=> (and (<= 0 $generated@@216) (<= $generated@@216 ($generated@@207 $generated@@214))) (= ($generated@@205 ($generated@@206 $generated@@214 $generated@@215) $generated@@216) ($generated@@206 ($generated@@205 $generated@@214 $generated@@216) $generated@@215)))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@214 $generated@@215) $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@67)
 :pattern ( ($generated@@218 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@80 $generated@@200 $generated@@2)) (= (type $generated@@222) $generated@@67)) ($generated@@140 $generated@@221 ($generated@@218 $generated@@222))) ($generated@@219 $generated@@221))
 :pattern ( ($generated@@140 $generated@@221 ($generated@@218 $generated@@222)))
)))
(assert (forall (($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@168 (type $generated@@223))))
 (=> (= (type $generated@@223) ($generated@@167 $generated@@224)) ($generated@@219 ($generated@@164 $generated@@223))))
 :pattern ( ($generated@@164 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@83 (type $generated@@225))))
 (=> (and (= (type $generated@@225) ($generated@@80 $generated@@227 $generated@@2)) (= (type $generated@@226) ($generated@@80 $generated@@227 $generated@@2))) (= ($generated@@147 ($generated@@147 $generated@@225 $generated@@226) $generated@@226) ($generated@@147 $generated@@225 $generated@@226))))
 :pattern ( ($generated@@147 ($generated@@147 $generated@@225 $generated@@226) $generated@@226))
)))
(assert  (and (forall (($generated@@230 T@U) ($generated@@231 Int) ) (! (let (($generated@@232 ($generated@@168 (type $generated@@230))))
(= (type ($generated@@228 $generated@@230 $generated@@231)) ($generated@@167 $generated@@232)))
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@168 (type $generated@@233))))
(= (type ($generated@@229 $generated@@233 $generated@@234)) ($generated@@167 $generated@@235)))
 :pattern ( ($generated@@229 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Int) ) (! (let (($generated@@239 ($generated@@168 (type $generated@@236))))
 (=> (and (and (= (type $generated@@236) ($generated@@167 $generated@@239)) (= (type $generated@@237) ($generated@@167 $generated@@239))) (= $generated@@238 ($generated@@207 $generated@@236))) (and (= ($generated@@228 ($generated@@229 $generated@@236 $generated@@237) $generated@@238) $generated@@236) (= ($generated@@205 ($generated@@229 $generated@@236 $generated@@237) $generated@@238) $generated@@237))))
 :pattern ( ($generated@@228 ($generated@@229 $generated@@236 $generated@@237) $generated@@238))
 :pattern ( ($generated@@205 ($generated@@229 $generated@@236 $generated@@237) $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 Int) ) (! (let (($generated@@243 ($generated@@168 (type $generated@@241))))
(= (type ($generated@@240 $generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
 (=> (= (type $generated@@244) ($generated@@167 $generated@@246)) (= (exists (($generated@@247 Int) ) (!  (and (and (<= 0 $generated@@247) (< $generated@@247 ($generated@@207 $generated@@244))) (= $generated@@245 ($generated@@240 $generated@@244 $generated@@247)))
 :pattern ( ($generated@@240 $generated@@244 $generated@@247))
)) (< 0 ($generated ($generated@@85 ($generated@@164 $generated@@244) $generated@@245))))))
 :pattern ( ($generated@@85 ($generated@@164 $generated@@244) $generated@@245))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@191)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@200)) (= (type $generated@@255) $generated@@200)) (= ($generated@@140 ($generated@@248 $generated@@254 $generated@@255) ($generated@@190 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@140 ($generated@@248 $generated@@254 $generated@@255) ($generated@@190 $generated@@252 $generated@@253)))
)))
(assert  (and (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) ($generated@@167 $generated@@200))
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)) (forall (($generated@@260 Int) ) (! (= (type ($generated@@257 $generated@@260)) ($generated@@69 $generated@@200))
 :pattern ( ($generated@@257 $generated@@260))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 Int) ($generated@@264 Int) ) (!  (=> (and (= (type $generated@@261) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@262) $generated@@81)) (=> (and (and (= (+ $generated@@263 1) $generated@@264) (<= 0 $generated@@263)) (<= $generated@@264 ($generated@@136 $generated@@262))) (= ($generated@@228 ($generated@@256 $generated@@261 $generated@@262) $generated@@264) ($generated@@206 ($generated@@228 ($generated@@256 $generated@@261 $generated@@262) $generated@@263) ($generated@@87 ($generated@@85 $generated@@261 $generated@@262) ($generated@@257 $generated@@263))))))
 :pattern ( ($generated@@228 ($generated@@256 $generated@@261 $generated@@262) $generated@@263) ($generated@@228 ($generated@@256 $generated@@261 $generated@@262) $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
 (=> (and (= (type $generated@@265) ($generated@@80 $generated@@268 $generated@@2)) (= (type $generated@@266) ($generated@@80 $generated@@268 $generated@@2))) (= ($generated ($generated@@85 ($generated@@148 $generated@@265 $generated@@266) $generated@@267)) (+ ($generated ($generated@@85 $generated@@265 $generated@@267)) ($generated ($generated@@85 $generated@@266 $generated@@267))))))
 :pattern ( ($generated@@85 ($generated@@148 $generated@@265 $generated@@266) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@191) (= (type $generated@@270) $generated@@191)) (= ($generated@@197 $generated@@269 $generated@@270) (= $generated@@269 $generated@@270)))
 :pattern ( ($generated@@197 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 Int) ) (! (let (($generated@@273 ($generated@@168 (type $generated@@271))))
 (=> (and (= (type $generated@@271) ($generated@@167 $generated@@273)) (= $generated@@272 0)) (= ($generated@@205 $generated@@271 $generated@@272) $generated@@271)))
 :pattern ( ($generated@@205 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@67)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@80 $generated@@200 $generated@@4)) (= (type $generated@@277) $generated@@67)) (= ($generated@@140 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@200) ($generated@@0 ($generated@@85 $generated@@276 $generated@@278))) ($generated@@249 $generated@@278 $generated@@277))
 :pattern ( ($generated@@85 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@140 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@67)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@80 $generated@@200 $generated@@4)) (= (type $generated@@282) $generated@@67)) (= ($generated@@140 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@200) ($generated@@0 ($generated@@85 $generated@@281 $generated@@283))) ($generated@@249 $generated@@283 $generated@@282))
 :pattern ( ($generated@@85 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@140 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@285 Int) ) (!  (=> (<= 0 $generated@@285) (= ($generated@@284 $generated@@285) $generated@@285))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 Int) ) (! (= ($generated@@286 $generated@@287) $generated@@287)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
(= (type ($generated@@288 $generated@@289)) $generated@@290))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= ($generated@@288 $generated@@291) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@67)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (= (type $generated@@294) ($generated@@167 $generated@@200)) (= (type $generated@@295) $generated@@200)) (= (type $generated@@296) $generated@@67)) (and ($generated@@140 $generated@@294 ($generated@@292 $generated@@296)) ($generated@@249 $generated@@295 $generated@@296))) ($generated@@140 ($generated@@206 $generated@@294 $generated@@295) ($generated@@292 $generated@@296)))
 :pattern ( ($generated@@140 ($generated@@206 $generated@@294 $generated@@295) ($generated@@292 $generated@@296)))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 Int) ($generated@@299 Int) ) (! (let (($generated@@300 ($generated@@168 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@167 $generated@@300)) (=> (and (and (<= 0 $generated@@299) (< $generated@@299 $generated@@298)) (< $generated@@299 ($generated@@207 $generated@@297))) (= ($generated@@240 ($generated@@228 $generated@@297 $generated@@298) $generated@@299) ($generated@@240 $generated@@297 $generated@@299)))))
 :weight 25
 :pattern ( ($generated@@240 ($generated@@228 $generated@@297 $generated@@298) $generated@@299))
 :pattern ( ($generated@@240 $generated@@297 $generated@@299) ($generated@@228 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) $generated@@67) (= (type $generated@@303) $generated@@67)) (= (type $generated@@304) $generated@@200)) (= (type $generated@@305) $generated@@200)) (= (type $generated@@306) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@176 $generated@@306)) (= ($generated@@78 ($generated@@248 $generated@@304 $generated@@305) ($generated@@190 $generated@@302 $generated@@303) $generated@@306)  (and ($generated@@301 $generated@@304 $generated@@302 $generated@@306) ($generated@@301 $generated@@305 $generated@@303 $generated@@306))))
 :pattern ( ($generated@@78 ($generated@@248 $generated@@304 $generated@@305) ($generated@@190 $generated@@302 $generated@@303) $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 Int) ) (! (let (($generated@@309 ($generated@@168 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@167 $generated@@309)) (=> (and (<= 0 $generated@@308) (<= $generated@@308 ($generated@@207 $generated@@307))) (= ($generated@@207 ($generated@@205 $generated@@307 $generated@@308)) (- ($generated@@207 $generated@@307) $generated@@308)))))
 :pattern ( ($generated@@207 ($generated@@205 $generated@@307 $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@71)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@191) (= ($generated@@189 $generated@@312) (= ($generated@@310 $generated@@312) $generated@@63)))
 :pattern ( ($generated@@189 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@168 (type $generated@@314))))
 (=> (and (= (type $generated@@314) ($generated@@167 $generated@@316)) (= (type $generated@@315) ($generated@@167 $generated@@316))) (= ($generated@@313 $generated@@314 $generated@@315)  (and (= ($generated@@207 $generated@@314) ($generated@@207 $generated@@315)) (forall (($generated@@317 Int) ) (!  (=> (and (<= 0 $generated@@317) (< $generated@@317 ($generated@@207 $generated@@314))) (= ($generated@@240 $generated@@314 $generated@@317) ($generated@@240 $generated@@315 $generated@@317)))
 :pattern ( ($generated@@240 $generated@@314 $generated@@317))
 :pattern ( ($generated@@240 $generated@@315 $generated@@317))
))))))
 :pattern ( ($generated@@313 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (! (let (($generated@@321 (type $generated@@320)))
 (=> (and (= (type $generated@@318) ($generated@@80 $generated@@321 $generated@@2)) (= (type $generated@@319) ($generated@@80 $generated@@321 $generated@@2))) (= ($generated ($generated@@85 ($generated@@146 $generated@@318 $generated@@319) $generated@@320)) ($generated@@284 (- ($generated ($generated@@85 $generated@@318 $generated@@320)) ($generated ($generated@@85 $generated@@319 $generated@@320)))))))
 :pattern ( ($generated@@85 ($generated@@146 $generated@@318 $generated@@319) $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 Int) ) (! (let (($generated@@325 ($generated@@168 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@167 $generated@@325)) (=> (and (<= 0 $generated@@324) (< $generated@@324 ($generated@@207 $generated@@323))) (< ($generated@@322 ($generated@@228 $generated@@323 $generated@@324)) ($generated@@322 $generated@@323)))))
 :pattern ( ($generated@@322 ($generated@@228 $generated@@323 $generated@@324)))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@191) ($generated@@189 $generated@@326)) (exists (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (and (and (= (type $generated@@327) $generated@@200) (= (type $generated@@328) $generated@@200)) (= $generated@@326 ($generated@@248 $generated@@327 $generated@@328)))
 :no-pattern (type $generated@@327)
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
)))
 :pattern ( ($generated@@189 $generated@@326))
)))
(assert (forall (($generated@@329 T@T) ) (! (= ($generated@@207 ($generated@@165 $generated@@329)) 0)
 :pattern ( ($generated@@165 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (! (let (($generated@@333 (type $generated@@332)))
(= (type ($generated@@330 $generated@@331 $generated@@332)) ($generated@@80 $generated@@333 $generated@@2)))
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (! (let (($generated@@336 (type $generated@@335)))
 (=> (= (type $generated@@334) ($generated@@80 $generated@@336 $generated@@2)) (= ($generated@@145 ($generated@@330 $generated@@334 $generated@@335)) (+ ($generated@@145 $generated@@334) 1))))
 :pattern ( ($generated@@145 ($generated@@330 $generated@@334 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 Int) ) (! (let (($generated@@339 ($generated@@168 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@167 $generated@@339)) (=> (and (< 0 $generated@@338) (<= $generated@@338 ($generated@@207 $generated@@337))) (< ($generated@@322 ($generated@@205 $generated@@337 $generated@@338)) ($generated@@322 $generated@@337)))))
 :pattern ( ($generated@@322 ($generated@@205 $generated@@337 $generated@@338)))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
 (=> (= (type $generated@@340) ($generated@@167 $generated@@342)) (= ($generated@@207 ($generated@@206 $generated@@340 $generated@@341)) (+ 1 ($generated@@207 $generated@@340)))))
 :pattern ( ($generated@@206 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@67) (= (type $generated@@344) $generated@@81)) (= ($generated@@140 $generated@@344 ($generated@@184 $generated@@343))  (and ($generated@@140 $generated@@344 ($generated@@137 $generated@@343)) (not (= $generated@@344 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@344 ($generated@@184 $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@200)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@301 ($generated@@345 $generated@@347) $generated@@348 $generated@@349) ($generated@@78 $generated@@347 $generated@@348 $generated@@349)))
 :pattern ( ($generated@@301 ($generated@@345 $generated@@347) $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 Int) ($generated@@352 Int) ) (! (let (($generated@@353 ($generated@@168 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@167 $generated@@353)) (=> (and (and (<= 0 $generated@@351) (<= 0 $generated@@352)) (< $generated@@352 (- ($generated@@207 $generated@@350) $generated@@351))) (= ($generated@@240 ($generated@@205 $generated@@350 $generated@@351) $generated@@352) ($generated@@240 $generated@@350 (+ $generated@@352 $generated@@351))))))
 :weight 25
 :pattern ( ($generated@@240 ($generated@@205 $generated@@350 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@83 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@80 $generated@@355 $generated@@2)) (and (= (= ($generated@@145 $generated@@354) 0) (= $generated@@354 ($generated@@166 $generated@@355))) (=> (not (= ($generated@@145 $generated@@354) 0)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) (< 0 ($generated ($generated@@85 $generated@@354 $generated@@356))))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@145 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@72)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@359)) $generated@@61) (= ($generated@@357 ($generated@@137 $generated@@359)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@67) (and (= ($generated@@76 ($generated@@184 $generated@@360)) $generated@@62) (= ($generated@@357 ($generated@@184 $generated@@360)) $generated@@65)))
 :pattern ( ($generated@@184 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
 (=> (and (and (= (type $generated@@361) ($generated@@80 $generated@@364 $generated@@2)) (= (type $generated@@362) ($generated@@80 $generated@@364 $generated@@2))) (<= ($generated ($generated@@85 $generated@@361 $generated@@363)) ($generated ($generated@@85 $generated@@362 $generated@@363)))) (= ($generated ($generated@@85 ($generated@@146 $generated@@361 $generated@@362) $generated@@363)) 0)))
 :pattern ( ($generated@@146 $generated@@361 $generated@@362) ($generated@@85 $generated@@362 $generated@@363) ($generated@@85 $generated@@361 $generated@@363))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 17)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@80 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@85 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@85 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert  (and (and (and (and (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (= ($generated@@1 ($generated@@385 $generated@@388 $generated@@389)) 18)) (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (! (= ($generated@@386 ($generated@@385 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@385 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= ($generated@@387 ($generated@@385 $generated@@392 $generated@@393)) $generated@@393)
 :pattern ( ($generated@@385 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@386 (type $generated@@394))))
(= (type ($generated@@383 $generated@@394)) ($generated@@80 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@394))
))) (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (! (= (type ($generated@@384 $generated@@396 $generated@@397)) ($generated@@385 $generated@@396 $generated@@397))
 :pattern ( ($generated@@384 $generated@@396 $generated@@397))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@T) ) (! (let (($generated@@400 (type $generated@@398)))
 (not ($generated@@0 ($generated@@85 ($generated@@383 ($generated@@384 $generated@@400 $generated@@399)) $generated@@398))))
 :pattern ( (let (($generated@@400 (type $generated@@398)))
($generated@@85 ($generated@@383 ($generated@@384 $generated@@400 $generated@@399)) $generated@@398)))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@83 (type $generated@@401))))
 (=> (and (= (type $generated@@401) ($generated@@80 $generated@@403 $generated@@2)) (= (type $generated@@402) ($generated@@80 $generated@@403 $generated@@2))) (= ($generated@@145 ($generated@@148 $generated@@401 $generated@@402)) (+ ($generated@@145 $generated@@401) ($generated@@145 $generated@@402)))))
 :pattern ( ($generated@@145 ($generated@@148 $generated@@401 $generated@@402)))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@168 (type $generated@@404))))
 (=> (and (= (type $generated@@404) ($generated@@167 $generated@@406)) (= (type $generated@@405) ($generated@@167 $generated@@406))) (= ($generated@@207 ($generated@@229 $generated@@404 $generated@@405)) (+ ($generated@@207 $generated@@404) ($generated@@207 $generated@@405)))))
 :pattern ( ($generated@@207 ($generated@@229 $generated@@404 $generated@@405)))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@83 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@80 $generated@@408 $generated@@2)) (= ($generated@@219 $generated@@407) (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@408) (and (<= 0 ($generated ($generated@@85 $generated@@407 $generated@@409))) (<= ($generated ($generated@@85 $generated@@407 $generated@@409)) ($generated@@145 $generated@@407))))
 :pattern ( ($generated@@85 $generated@@407 $generated@@409))
)))))
 :pattern ( ($generated@@219 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@67) (= (type $generated@@411) $generated@@81)) (= ($generated@@140 $generated@@411 ($generated@@137 $generated@@410))  (or (= $generated@@411 $generated@@138) (= ($generated@@139 $generated@@411) ($generated@@137 $generated@@410)))))
 :pattern ( ($generated@@140 $generated@@411 ($generated@@137 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
 (=> (= (type $generated@@412) ($generated@@80 $generated@@414 $generated@@2)) (= ($generated ($generated@@85 ($generated@@330 $generated@@412 $generated@@413) $generated@@413)) (+ ($generated ($generated@@85 $generated@@412 $generated@@413)) 1))))
 :pattern ( ($generated@@330 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 Int) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
 (=> (= (type $generated@@415) ($generated@@167 $generated@@418)) (and (=> (= $generated@@416 ($generated@@207 $generated@@415)) (= ($generated@@240 ($generated@@206 $generated@@415 $generated@@417) $generated@@416) $generated@@417)) (=> (not (= $generated@@416 ($generated@@207 $generated@@415))) (= ($generated@@240 ($generated@@206 $generated@@415 $generated@@417) $generated@@416) ($generated@@240 $generated@@415 $generated@@416))))))
 :pattern ( ($generated@@240 ($generated@@206 $generated@@415 $generated@@417) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@420)))
 (=> (and (and (= (type $generated@@419) ($generated@@80 $generated@@422 $generated@@2)) (= (type $generated@@421) $generated@@422)) (< 0 ($generated ($generated@@85 $generated@@419 $generated@@421)))) (< 0 ($generated ($generated@@85 ($generated@@330 $generated@@419 $generated@@420) $generated@@421)))))
 :pattern ( ($generated@@330 $generated@@419 $generated@@420) ($generated@@85 $generated@@419 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@369 (type $generated@@423))))
(let (($generated@@425 ($generated@@368 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@367 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@366 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@423) $generated@@426)))
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@365 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@369 (type $generated@@428))))
(= (type ($generated@@427 $generated@@428)) ($generated@@80 $generated@@429 $generated@@4)))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@369 (type $generated@@430))))
(let (($generated@@432 ($generated@@368 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@367 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@366 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@431) ($generated@@0 ($generated@@85 ($generated@@427 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@427 $generated@@430))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@387 (type $generated@@434))))
(let (($generated@@436 ($generated@@386 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@385 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@384 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@383 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@387 (type $generated@@439))))
(= (type ($generated@@438 $generated@@439)) ($generated@@80 $generated@@440 $generated@@4)))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@387 (type $generated@@441))))
(let (($generated@@443 ($generated@@386 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@385 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@384 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@442) ($generated@@0 ($generated@@85 ($generated@@438 $generated@@441) $generated@@444)))
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@438 $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@446)))
 (=> (and (= (type $generated@@445) ($generated@@80 $generated@@448 $generated@@2)) (= (type $generated@@447) $generated@@448)) (= (< 0 ($generated ($generated@@85 ($generated@@330 $generated@@445 $generated@@446) $generated@@447)))  (or (= $generated@@447 $generated@@446) (< 0 ($generated ($generated@@85 $generated@@445 $generated@@447)))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@450) $generated@@81)) (forall (($generated@@451 Int) ) (!  (=> (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@207 ($generated@@256 $generated@@449 $generated@@450)))) (= ($generated@@240 ($generated@@256 $generated@@449 $generated@@450) $generated@@451) ($generated@@87 ($generated@@85 $generated@@449 $generated@@450) ($generated@@257 $generated@@451))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@449 $generated@@450) ($generated@@257 $generated@@451)))
 :pattern ( ($generated@@240 ($generated@@256 $generated@@449 $generated@@450) $generated@@451))
)))
 :pattern ( ($generated@@256 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@80 $generated@@200 $generated@@2)) (= (type $generated@@453) $generated@@67)) (= ($generated@@140 $generated@@452 ($generated@@218 $generated@@453)) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@200) (< 0 ($generated ($generated@@85 $generated@@452 $generated@@454)))) ($generated@@249 $generated@@454 $generated@@453))
 :pattern ( ($generated@@85 $generated@@452 $generated@@454))
))))
 :pattern ( ($generated@@140 $generated@@452 ($generated@@218 $generated@@453)))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@83 (type $generated@@456))))
 (=> (and (= (type $generated@@456) ($generated@@80 $generated@@458 $generated@@2)) (= (type $generated@@457) ($generated@@80 $generated@@458 $generated@@2))) (= ($generated@@455 $generated@@456 $generated@@457) (forall (($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@458) (= ($generated ($generated@@85 $generated@@456 $generated@@459)) ($generated ($generated@@85 $generated@@457 $generated@@459))))
 :pattern ( ($generated@@85 $generated@@456 $generated@@459))
 :pattern ( ($generated@@85 $generated@@457 $generated@@459))
)))))
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@80 $generated@@200 $generated@@4)) (= (type $generated@@461) $generated@@67)) (= (type $generated@@462) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@460 ($generated@@274 $generated@@461) $generated@@462) (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@200) ($generated@@0 ($generated@@85 $generated@@460 $generated@@463))) ($generated@@301 $generated@@463 $generated@@461 $generated@@462))
 :pattern ( ($generated@@85 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@78 $generated@@460 ($generated@@274 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@80 $generated@@200 $generated@@4)) (= (type $generated@@465) $generated@@67)) (= (type $generated@@466) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@464 ($generated@@279 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@200) ($generated@@0 ($generated@@85 $generated@@464 $generated@@467))) ($generated@@301 $generated@@467 $generated@@465 $generated@@466))
 :pattern ( ($generated@@85 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@78 $generated@@464 ($generated@@279 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@468)))
(= ($generated ($generated@@85 ($generated@@166 $generated@@469) $generated@@468)) 0))
 :pattern ( (let (($generated@@469 (type $generated@@468)))
($generated@@85 ($generated@@166 $generated@@469) $generated@@468)))
)))
(assert  (and (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@470 $generated@@473)) ($generated@@80 $generated@@200 $generated@@4))
 :pattern ( ($generated@@470 $generated@@473))
)) (forall (($generated@@474 T@T) ($generated@@475 T@U) ) (! (= (type ($generated@@471 $generated@@474 $generated@@475)) $generated@@474)
 :pattern ( ($generated@@471 $generated@@474 $generated@@475))
))) (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@369 (type $generated@@476))))
(let (($generated@@478 ($generated@@368 (type $generated@@476))))
(= (type ($generated@@472 $generated@@476)) ($generated@@80 $generated@@478 $generated@@477))))
 :pattern ( ($generated@@472 $generated@@476))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) ($generated@@367 $generated@@200 $generated@@200)) (= (type $generated@@480) $generated@@200)) (= ($generated@@0 ($generated@@85 ($generated@@470 $generated@@479) $generated@@480))  (and ($generated@@0 ($generated@@85 ($generated@@365 $generated@@479) ($generated@@198 ($generated@@471 $generated@@191 $generated@@480)))) (= ($generated@@85 ($generated@@472 $generated@@479) ($generated@@198 ($generated@@471 $generated@@191 $generated@@480))) ($generated@@199 ($generated@@471 $generated@@191 $generated@@480))))))
 :pattern ( ($generated@@85 ($generated@@470 $generated@@479) $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) ($generated@@80 $generated@@200 $generated@@4))
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@387 (type $generated@@484))))
(let (($generated@@486 ($generated@@386 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484)) ($generated@@80 $generated@@486 $generated@@485))))
 :pattern ( ($generated@@482 $generated@@484))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) ($generated@@385 $generated@@200 $generated@@200)) (= (type $generated@@488) $generated@@200)) (= ($generated@@0 ($generated@@85 ($generated@@481 $generated@@487) $generated@@488))  (and ($generated@@0 ($generated@@85 ($generated@@383 $generated@@487) ($generated@@198 ($generated@@471 $generated@@191 $generated@@488)))) (= ($generated@@85 ($generated@@482 $generated@@487) ($generated@@198 ($generated@@471 $generated@@191 $generated@@488))) ($generated@@199 ($generated@@471 $generated@@191 $generated@@488))))))
 :pattern ( ($generated@@85 ($generated@@481 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(let (($generated@@492 ($generated@@368 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@367 $generated@@492 $generated@@491)) (= ($generated@@0 ($generated@@85 ($generated@@427 $generated@@489) $generated@@490)) (exists (($generated@@493 T@U) ) (!  (and (= (type $generated@@493) $generated@@492) (and ($generated@@0 ($generated@@85 ($generated@@365 $generated@@489) $generated@@493)) (= $generated@@490 ($generated@@85 ($generated@@472 $generated@@489) $generated@@493))))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@489) $generated@@493))
 :pattern ( ($generated@@85 ($generated@@472 $generated@@489) $generated@@493))
))))))
 :pattern ( ($generated@@85 ($generated@@427 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(let (($generated@@497 ($generated@@386 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@385 $generated@@497 $generated@@496)) (= ($generated@@0 ($generated@@85 ($generated@@438 $generated@@494) $generated@@495)) (exists (($generated@@498 T@U) ) (!  (and (= (type $generated@@498) $generated@@497) (and ($generated@@0 ($generated@@85 ($generated@@383 $generated@@494) $generated@@498)) (= $generated@@495 ($generated@@85 ($generated@@482 $generated@@494) $generated@@498))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@494) $generated@@498))
 :pattern ( ($generated@@85 ($generated@@482 $generated@@494) $generated@@498))
))))))
 :pattern ( ($generated@@85 ($generated@@438 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) ($generated@@367 $generated@@200 $generated@@200)) (= (type $generated@@503) $generated@@67)) (= (type $generated@@504) $generated@@67)) (= (type $generated@@505) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@502 ($generated@@499 $generated@@503 $generated@@504) $generated@@505) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@200) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@502) $generated@@506))) (and ($generated@@301 ($generated@@85 ($generated@@472 $generated@@502) $generated@@506) $generated@@504 $generated@@505) ($generated@@301 $generated@@506 $generated@@503 $generated@@505)))
 :pattern ( ($generated@@85 ($generated@@472 $generated@@502) $generated@@506))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@502) $generated@@506))
))))
 :pattern ( ($generated@@78 $generated@@502 ($generated@@499 $generated@@503 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) ($generated@@385 $generated@@200 $generated@@200)) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@510 ($generated@@507 $generated@@511 $generated@@512) $generated@@513) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@200) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@510) $generated@@514))) (and ($generated@@301 ($generated@@85 ($generated@@482 $generated@@510) $generated@@514) $generated@@512 $generated@@513) ($generated@@301 $generated@@514 $generated@@511 $generated@@513)))
 :pattern ( ($generated@@85 ($generated@@482 $generated@@510) $generated@@514))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@510) $generated@@514))
))))
 :pattern ( ($generated@@78 $generated@@510 ($generated@@507 $generated@@511 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@83 (type $generated@@515))))
 (=> (and (and (= (type $generated@@515) ($generated@@80 $generated@@517 $generated@@2)) (= (type $generated@@516) ($generated@@80 $generated@@517 $generated@@2))) ($generated@@455 $generated@@515 $generated@@516)) (= $generated@@515 $generated@@516)))
 :pattern ( ($generated@@455 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@168 (type $generated@@518))))
 (=> (and (and (= (type $generated@@518) ($generated@@167 $generated@@520)) (= (type $generated@@519) ($generated@@167 $generated@@520))) ($generated@@313 $generated@@518 $generated@@519)) (= $generated@@518 $generated@@519)))
 :pattern ( ($generated@@313 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@168 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@167 $generated@@523)) (=> (and (<= 0 $generated@@522) (<= $generated@@522 ($generated@@207 $generated@@521))) (= ($generated@@207 ($generated@@228 $generated@@521 $generated@@522)) $generated@@522))))
 :pattern ( ($generated@@207 ($generated@@228 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 Int) ) (!  (=> (and (and (= (type $generated@@524) $generated@@67) (= (type $generated@@525) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@526) $generated@@81)) (=> (and (and (and ($generated@@176 $generated@@525) (and (not (= $generated@@526 $generated@@138)) (= ($generated@@139 $generated@@526) ($generated@@137 $generated@@524)))) (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@136 $generated@@526)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@525 $generated@@526) $generated@@60))) ($generated@@301 ($generated@@87 ($generated@@85 $generated@@525 $generated@@526) ($generated@@257 $generated@@527)) $generated@@524 $generated@@525)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@525 $generated@@526) ($generated@@257 $generated@@527)) ($generated@@137 $generated@@524))
)))
(assert (forall (($generated@@529 T@T) ) (! (= (type ($generated@@528 $generated@@529)) ($generated@@80 $generated@@529 $generated@@4))
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@387 (type $generated@@530))))
(let (($generated@@532 ($generated@@386 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@385 $generated@@532 $generated@@531)) (= (= $generated@@530 ($generated@@384 $generated@@532 $generated@@531)) (= ($generated@@383 $generated@@530) ($generated@@528 $generated@@532))))))
 :pattern ( ($generated@@383 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@387 (type $generated@@533))))
(let (($generated@@535 ($generated@@386 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@385 $generated@@535 $generated@@534)) (= (= $generated@@533 ($generated@@384 $generated@@535 $generated@@534)) (= ($generated@@438 $generated@@533) ($generated@@528 $generated@@534))))))
 :pattern ( ($generated@@438 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@387 (type $generated@@536))))
(let (($generated@@538 ($generated@@386 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@385 $generated@@538 $generated@@537)) (= (= $generated@@536 ($generated@@384 $generated@@538 $generated@@537)) (= ($generated@@481 $generated@@536) ($generated@@528 $generated@@200))))))
 :pattern ( ($generated@@481 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@369 (type $generated@@539))))
(let (($generated@@541 ($generated@@368 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@367 $generated@@541 $generated@@540)) (or (= $generated@@539 ($generated@@366 $generated@@541 $generated@@540)) (exists (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (and (and (= (type $generated@@542) $generated@@200) (= (type $generated@@543) $generated@@200)) ($generated@@0 ($generated@@85 ($generated@@470 $generated@@539) ($generated@@345 ($generated@@248 $generated@@542 $generated@@543)))))
 :no-pattern (type $generated@@542)
 :no-pattern (type $generated@@543)
 :no-pattern ($generated $generated@@542)
 :no-pattern ($generated@@0 $generated@@542)
 :no-pattern ($generated $generated@@543)
 :no-pattern ($generated@@0 $generated@@543)
))))))
 :pattern ( ($generated@@470 $generated@@539))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@387 (type $generated@@544))))
(let (($generated@@546 ($generated@@386 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@385 $generated@@546 $generated@@545)) (or (= $generated@@544 ($generated@@384 $generated@@546 $generated@@545)) (exists (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (and (and (= (type $generated@@547) $generated@@200) (= (type $generated@@548) $generated@@200)) ($generated@@0 ($generated@@85 ($generated@@481 $generated@@544) ($generated@@345 ($generated@@248 $generated@@547 $generated@@548)))))
 :no-pattern (type $generated@@547)
 :no-pattern (type $generated@@548)
 :no-pattern ($generated $generated@@547)
 :no-pattern ($generated@@0 $generated@@547)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
))))))
 :pattern ( ($generated@@481 $generated@@544))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@200) ($generated@@249 $generated@@549 $generated@@46)) (and (= ($generated@@345 ($generated@@471 $generated@@2 $generated@@549)) $generated@@549) ($generated@@140 ($generated@@471 $generated@@2 $generated@@549) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@549 $generated@@46))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@200) ($generated@@249 $generated@@550 $generated@@47)) (and (= ($generated@@345 ($generated@@471 $generated@@3 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@471 $generated@@3 $generated@@550) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@550 $generated@@47))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@200) ($generated@@249 $generated@@551 $generated@@44)) (and (= ($generated@@345 ($generated@@471 $generated@@4 $generated@@551)) $generated@@551) ($generated@@140 ($generated@@471 $generated@@4 $generated@@551) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@551 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@552) 19))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@200) ($generated@@249 $generated@@553 $generated@@45)) (and (= ($generated@@345 ($generated@@471 $generated@@552 $generated@@553)) $generated@@553) ($generated@@140 ($generated@@471 $generated@@552 $generated@@553) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@553 $generated@@45))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@67) (= ($generated@@249 ($generated@@345 $generated@@554) $generated@@555) ($generated@@140 $generated@@554 $generated@@555)))
 :pattern ( ($generated@@249 ($generated@@345 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@81) (<= 0 ($generated@@136 $generated@@556)))
 :no-pattern (type $generated@@556)
 :no-pattern ($generated $generated@@556)
 :no-pattern ($generated@@0 $generated@@556)
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@83 (type $generated@@557))))
 (=> (= (type $generated@@557) ($generated@@80 $generated@@558 $generated@@2)) (<= 0 ($generated@@145 $generated@@557))))
 :pattern ( ($generated@@145 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@168 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@167 $generated@@560)) (<= 0 ($generated@@207 $generated@@559))))
 :pattern ( ($generated@@207 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 Int) ($generated@@563 Int) ) (! (let (($generated@@564 ($generated@@168 (type $generated@@561))))
 (=> (= (type $generated@@561) ($generated@@167 $generated@@564)) (=> (and (and (<= 0 $generated@@562) (< $generated@@562 $generated@@563)) (<= $generated@@563 ($generated@@207 $generated@@561))) (< ($generated@@322 ($generated@@229 ($generated@@228 $generated@@561 $generated@@562) ($generated@@205 $generated@@561 $generated@@563))) ($generated@@322 $generated@@561)))))
 :pattern ( ($generated@@322 ($generated@@229 ($generated@@228 $generated@@561 $generated@@562) ($generated@@205 $generated@@561 $generated@@563))))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (=> (and (= (type $generated@@565) ($generated@@80 $generated@@568 $generated@@2)) (= (type $generated@@566) ($generated@@80 $generated@@568 $generated@@2))) (= ($generated ($generated@@85 ($generated@@147 $generated@@565 $generated@@566) $generated@@567)) ($generated@@181 ($generated ($generated@@85 $generated@@565 $generated@@567)) ($generated ($generated@@85 $generated@@566 $generated@@567))))))
 :pattern ( ($generated@@85 ($generated@@147 $generated@@565 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@67)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@67)) (= ($generated@@569 ($generated@@499 $generated@@571 $generated@@572)) $generated@@571))
 :pattern ( ($generated@@499 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@67)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (= ($generated@@573 ($generated@@499 $generated@@575 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@499 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@67) (= (type $generated@@578) $generated@@67)) (= ($generated@@76 ($generated@@499 $generated@@577 $generated@@578)) $generated@@58))
 :pattern ( ($generated@@499 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@67)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@67) (= (type $generated@@582) $generated@@67)) (= ($generated@@579 ($generated@@507 $generated@@581 $generated@@582)) $generated@@581))
 :pattern ( ($generated@@507 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@67)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@67) (= (type $generated@@586) $generated@@67)) (= ($generated@@583 ($generated@@507 $generated@@585 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@507 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@67)) (= ($generated@@76 ($generated@@507 $generated@@587 $generated@@588)) $generated@@59))
 :pattern ( ($generated@@507 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@200) (= (type $generated@@590) $generated@@200)) (= ($generated@@310 ($generated@@248 $generated@@589 $generated@@590)) $generated@@63))
 :pattern ( ($generated@@248 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@67)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@67) (= (type $generated@@594) $generated@@67)) (= ($generated@@591 ($generated@@190 $generated@@593 $generated@@594)) $generated@@593))
 :pattern ( ($generated@@190 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@67)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@67) (= (type $generated@@598) $generated@@67)) (= ($generated@@595 ($generated@@190 $generated@@597 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@190 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@200) (= (type $generated@@600) $generated@@200)) (= ($generated@@198 ($generated@@248 $generated@@599 $generated@@600)) $generated@@599))
 :pattern ( ($generated@@248 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@200) (= (type $generated@@602) $generated@@200)) (= ($generated@@199 ($generated@@248 $generated@@601 $generated@@602)) $generated@@602))
 :pattern ( ($generated@@248 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@167 $generated@@200)) (= (type $generated@@604) $generated@@67)) (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@603 ($generated@@292 $generated@@604) $generated@@605) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@207 $generated@@603))) ($generated@@301 ($generated@@240 $generated@@603 $generated@@606) $generated@@604 $generated@@605))
 :pattern ( ($generated@@240 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@78 $generated@@603 ($generated@@292 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@608 Int) ) (! (= ($generated@@607 ($generated@@79 $generated@@608)) $generated@@608)
 :pattern ( ($generated@@79 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@67)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@67) (= ($generated@@609 ($generated@@274 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@274 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@67) (= ($generated@@76 ($generated@@274 $generated@@612)) $generated@@54))
 :pattern ( ($generated@@274 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@67)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@67) (= ($generated@@613 ($generated@@279 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@279 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@67) (= ($generated@@76 ($generated@@279 $generated@@616)) $generated@@55))
 :pattern ( ($generated@@279 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@67)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@67) (= ($generated@@617 ($generated@@218 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@218 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@67) (= ($generated@@76 ($generated@@218 $generated@@620)) $generated@@56))
 :pattern ( ($generated@@218 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@67)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@67) (= ($generated@@621 ($generated@@292 $generated@@623)) $generated@@623))
 :pattern ( ($generated@@292 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@67) (= ($generated@@76 ($generated@@292 $generated@@624)) $generated@@57))
 :pattern ( ($generated@@292 $generated@@624))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@75 ($generated@@257 $generated@@625)) 1)
 :pattern ( ($generated@@257 $generated@@625))
)))
(assert (forall (($generated@@627 Int) ) (! (= ($generated@@626 ($generated@@257 $generated@@627)) $generated@@627)
 :pattern ( ($generated@@257 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@67)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@67) (= ($generated@@628 ($generated@@137 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@137 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@67)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@67) (= ($generated@@631 ($generated@@184 $generated@@633)) $generated@@633))
 :pattern ( ($generated@@184 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@634)))
(= ($generated@@471 $generated@@635 ($generated@@345 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@345 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@636) ($generated@@367 $generated@@200 $generated@@200)) (= (type $generated@@637) $generated@@67)) (= (type $generated@@638) $generated@@67)) (= ($generated@@140 $generated@@636 ($generated@@499 $generated@@637 $generated@@638)) (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@200) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@636) $generated@@639))) (and ($generated@@249 ($generated@@85 ($generated@@472 $generated@@636) $generated@@639) $generated@@638) ($generated@@249 $generated@@639 $generated@@637)))
 :pattern ( ($generated@@85 ($generated@@472 $generated@@636) $generated@@639))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@636) $generated@@639))
))))
 :pattern ( ($generated@@140 $generated@@636 ($generated@@499 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@385 $generated@@200 $generated@@200)) (= (type $generated@@641) $generated@@67)) (= (type $generated@@642) $generated@@67)) (= ($generated@@140 $generated@@640 ($generated@@507 $generated@@641 $generated@@642)) (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@200) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@640) $generated@@643))) (and ($generated@@249 ($generated@@85 ($generated@@482 $generated@@640) $generated@@643) $generated@@642) ($generated@@249 $generated@@643 $generated@@641)))
 :pattern ( ($generated@@85 ($generated@@482 $generated@@640) $generated@@643))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@640) $generated@@643))
))))
 :pattern ( ($generated@@140 $generated@@640 ($generated@@507 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 Int) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@67) (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@646) $generated@@81)) (and (and ($generated@@176 $generated@@645) (and (not (= $generated@@646 $generated@@138)) (= ($generated@@139 $generated@@646) ($generated@@137 $generated@@644)))) (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@136 $generated@@646))))) ($generated@@249 ($generated@@87 ($generated@@85 $generated@@645 $generated@@646) ($generated@@257 $generated@@647)) $generated@@644))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@645 $generated@@646) ($generated@@257 $generated@@647)) ($generated@@137 $generated@@644))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@200) (= (type $generated@@651) $generated@@200)) (< ($generated@@648 $generated@@650) ($generated@@649 ($generated@@248 $generated@@650 $generated@@651))))
 :pattern ( ($generated@@248 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@200) (= (type $generated@@653) $generated@@200)) (< ($generated@@648 $generated@@653) ($generated@@649 ($generated@@248 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@248 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@83 (type $generated@@654))))
 (=> (and (= (type $generated@@654) ($generated@@80 $generated@@656 $generated@@2)) (= (type $generated@@655) ($generated@@80 $generated@@656 $generated@@2))) (= ($generated@@147 $generated@@654 ($generated@@147 $generated@@654 $generated@@655)) ($generated@@147 $generated@@654 $generated@@655))))
 :pattern ( ($generated@@147 $generated@@654 ($generated@@147 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) $generated@@200) (= (type $generated@@658) $generated@@67)) (= (type $generated@@659) $generated@@67)) ($generated@@249 $generated@@657 ($generated@@499 $generated@@658 $generated@@659))) (and (= ($generated@@345 ($generated@@471 ($generated@@367 $generated@@200 $generated@@200) $generated@@657)) $generated@@657) ($generated@@140 ($generated@@471 ($generated@@367 $generated@@200 $generated@@200) $generated@@657) ($generated@@499 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@249 $generated@@657 ($generated@@499 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) $generated@@200) (= (type $generated@@661) $generated@@67)) (= (type $generated@@662) $generated@@67)) ($generated@@249 $generated@@660 ($generated@@507 $generated@@661 $generated@@662))) (and (= ($generated@@345 ($generated@@471 ($generated@@385 $generated@@200 $generated@@200) $generated@@660)) $generated@@660) ($generated@@140 ($generated@@471 ($generated@@385 $generated@@200 $generated@@200) $generated@@660) ($generated@@507 $generated@@661 $generated@@662))))
 :pattern ( ($generated@@249 $generated@@660 ($generated@@507 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) $generated@@67) (= (type $generated@@664) $generated@@67)) (= (type $generated@@665) $generated@@200)) ($generated@@249 $generated@@665 ($generated@@190 $generated@@663 $generated@@664))) (and (= ($generated@@345 ($generated@@471 $generated@@191 $generated@@665)) $generated@@665) ($generated@@140 ($generated@@471 $generated@@191 $generated@@665) ($generated@@190 $generated@@663 $generated@@664))))
 :pattern ( ($generated@@249 $generated@@665 ($generated@@190 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@666 T@U) ) (! (let (($generated@@667 (type $generated@@666)))
 (not ($generated@@0 ($generated@@85 ($generated@@528 $generated@@667) $generated@@666))))
 :pattern ( (let (($generated@@667 (type $generated@@666)))
($generated@@85 ($generated@@528 $generated@@667) $generated@@666)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@674 T@T) ($generated@@675 T@T) ) (= ($generated@@1 ($generated@@670 $generated@@674 $generated@@675)) 20)) (forall (($generated@@676 T@T) ($generated@@677 T@T) ) (! (= ($generated@@671 ($generated@@670 $generated@@676 $generated@@677)) $generated@@676)
 :pattern ( ($generated@@670 $generated@@676 $generated@@677))
))) (forall (($generated@@678 T@T) ($generated@@679 T@T) ) (! (= ($generated@@672 ($generated@@670 $generated@@678 $generated@@679)) $generated@@679)
 :pattern ( ($generated@@670 $generated@@678 $generated@@679))
))) (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (! (let (($generated@@683 ($generated@@672 (type $generated@@680))))
(= (type ($generated@@668 $generated@@680 $generated@@681 $generated@@682)) $generated@@683))
 :pattern ( ($generated@@668 $generated@@680 $generated@@681 $generated@@682))
))) (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (! (let (($generated@@688 (type $generated@@687)))
(let (($generated@@689 (type $generated@@685)))
(= (type ($generated@@673 $generated@@684 $generated@@685 $generated@@686 $generated@@687)) ($generated@@670 $generated@@689 $generated@@688))))
 :pattern ( ($generated@@673 $generated@@684 $generated@@685 $generated@@686 $generated@@687))
))) (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (! (let (($generated@@694 ($generated@@672 (type $generated@@690))))
 (=> (= (type $generated@@693) $generated@@694) (= ($generated@@668 ($generated@@673 $generated@@690 $generated@@691 $generated@@692 $generated@@693) $generated@@691 $generated@@692) $generated@@693)))
 :weight 0
))) (and (and (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (or (= $generated@@697 $generated@@699) (= ($generated@@668 ($generated@@673 $generated@@696 $generated@@697 $generated@@698 $generated@@695) $generated@@699 $generated@@700) ($generated@@668 $generated@@696 $generated@@699 $generated@@700)))
 :weight 0
)) (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (or (= $generated@@704 $generated@@706) (= ($generated@@668 ($generated@@673 $generated@@702 $generated@@703 $generated@@704 $generated@@701) $generated@@705 $generated@@706) ($generated@@668 $generated@@702 $generated@@705 $generated@@706)))
 :weight 0
))) (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (or true (= ($generated@@668 ($generated@@673 $generated@@708 $generated@@709 $generated@@710 $generated@@707) $generated@@711 $generated@@712) ($generated@@668 $generated@@708 $generated@@711 $generated@@712)))
 :weight 0
)))) (forall (($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (! (= (type ($generated@@669 $generated@@713 $generated@@714 $generated@@715 $generated@@716)) ($generated@@670 $generated@@81 $generated@@4))
 :pattern ( ($generated@@669 $generated@@713 $generated@@714 $generated@@715 $generated@@716))
))))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (! (let (($generated@@723 ($generated@@70 (type $generated@@722))))
 (=> (and (and (and (and (and (= (type $generated@@717) $generated@@81) (= (type $generated@@718) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@719) ($generated@@69 $generated@@4))) (= (type $generated@@720) $generated@@81)) (= (type $generated@@721) $generated@@81)) (= (type $generated@@722) ($generated@@69 $generated@@723))) (= ($generated@@0 ($generated@@668 ($generated@@669 $generated@@717 $generated@@718 $generated@@719 $generated@@720) $generated@@721 $generated@@722))  (=> (and (not (= $generated@@721 $generated@@717)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@718 $generated@@721) $generated@@719))) (= $generated@@721 $generated@@720)))))
 :pattern ( ($generated@@668 ($generated@@669 $generated@@717 $generated@@718 $generated@@719 $generated@@720) $generated@@721 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@725) $generated@@81)) (= ($generated@@207 ($generated@@256 $generated@@724 $generated@@725)) ($generated@@136 $generated@@725)))
 :pattern ( ($generated@@207 ($generated@@256 $generated@@724 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) $generated@@67) (= (type $generated@@727) $generated@@67)) (and (= ($generated@@76 ($generated@@190 $generated@@726 $generated@@727)) $generated@@64) (= ($generated@@357 ($generated@@190 $generated@@726 $generated@@727)) $generated@@66)))
 :pattern ( ($generated@@190 $generated@@726 $generated@@727))
)))
(assert  (and (forall (($generated@@730 T@U) ) (! (let (($generated@@731 ($generated@@168 (type $generated@@730))))
(= (type ($generated@@728 $generated@@730)) ($generated@@167 $generated@@731)))
 :pattern ( ($generated@@728 $generated@@730))
)) (forall (($generated@@732 T@U) ) (! (let (($generated@@733 ($generated@@168 (type $generated@@732))))
(= (type ($generated@@729 $generated@@732)) $generated@@733))
 :pattern ( ($generated@@729 $generated@@732))
))))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (! (let (($generated@@736 (type $generated@@735)))
 (=> (= (type $generated@@734) ($generated@@167 $generated@@736)) (and (= ($generated@@728 ($generated@@206 $generated@@734 $generated@@735)) $generated@@734) (= ($generated@@729 ($generated@@206 $generated@@734 $generated@@735)) $generated@@735))))
 :pattern ( ($generated@@206 $generated@@734 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (= (type $generated@@737) $generated@@191) (= ($generated@@648 ($generated@@345 $generated@@737)) ($generated@@649 $generated@@737)))
 :pattern ( ($generated@@648 ($generated@@345 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ) (! (let (($generated@@739 ($generated@@168 (type $generated@@738))))
 (=> (= (type $generated@@738) ($generated@@167 $generated@@739)) (= ($generated@@145 ($generated@@164 $generated@@738)) ($generated@@207 $generated@@738))))
 :pattern ( ($generated@@145 ($generated@@164 $generated@@738)))
)))
(assert (forall (($generated@@740 Int) ($generated@@741 Int) ) (! (= (<= $generated@@740 $generated@@741) (= ($generated@@181 $generated@@740 $generated@@741) $generated@@740))
 :pattern ( ($generated@@181 $generated@@740 $generated@@741))
)))
(assert (forall (($generated@@742 Int) ($generated@@743 Int) ) (! (= (<= $generated@@743 $generated@@742) (= ($generated@@181 $generated@@742 $generated@@743) $generated@@743))
 :pattern ( ($generated@@181 $generated@@742 $generated@@743))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@200) ($generated@@249 $generated@@744 ($generated@@79 0))) (and (= ($generated@@345 ($generated@@471 $generated@@2 $generated@@744)) $generated@@744) ($generated@@140 ($generated@@471 ($generated@@80 $generated@@200 $generated@@4) $generated@@744) ($generated@@79 0))))
 :pattern ( ($generated@@249 $generated@@744 ($generated@@79 0)))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (and (= (type $generated@@745) $generated@@200) (= (type $generated@@746) $generated@@67)) ($generated@@249 $generated@@745 ($generated@@274 $generated@@746))) (and (= ($generated@@345 ($generated@@471 ($generated@@80 $generated@@200 $generated@@4) $generated@@745)) $generated@@745) ($generated@@140 ($generated@@471 ($generated@@80 $generated@@200 $generated@@4) $generated@@745) ($generated@@274 $generated@@746))))
 :pattern ( ($generated@@249 $generated@@745 ($generated@@274 $generated@@746)))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (and (= (type $generated@@747) $generated@@200) (= (type $generated@@748) $generated@@67)) ($generated@@249 $generated@@747 ($generated@@279 $generated@@748))) (and (= ($generated@@345 ($generated@@471 ($generated@@80 $generated@@200 $generated@@4) $generated@@747)) $generated@@747) ($generated@@140 ($generated@@471 ($generated@@80 $generated@@200 $generated@@4) $generated@@747) ($generated@@279 $generated@@748))))
 :pattern ( ($generated@@249 $generated@@747 ($generated@@279 $generated@@748)))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (and (= (type $generated@@749) $generated@@200) (= (type $generated@@750) $generated@@67)) ($generated@@249 $generated@@749 ($generated@@218 $generated@@750))) (and (= ($generated@@345 ($generated@@471 ($generated@@80 $generated@@200 $generated@@2) $generated@@749)) $generated@@749) ($generated@@140 ($generated@@471 ($generated@@80 $generated@@200 $generated@@2) $generated@@749) ($generated@@218 $generated@@750))))
 :pattern ( ($generated@@249 $generated@@749 ($generated@@218 $generated@@750)))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (and (= (type $generated@@751) $generated@@200) (= (type $generated@@752) $generated@@67)) ($generated@@249 $generated@@751 ($generated@@292 $generated@@752))) (and (= ($generated@@345 ($generated@@471 ($generated@@167 $generated@@200) $generated@@751)) $generated@@751) ($generated@@140 ($generated@@471 ($generated@@167 $generated@@200) $generated@@751) ($generated@@292 $generated@@752))))
 :pattern ( ($generated@@249 $generated@@751 ($generated@@292 $generated@@752)))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (and (= (type $generated@@753) $generated@@67) (= (type $generated@@754) $generated@@200)) ($generated@@249 $generated@@754 ($generated@@137 $generated@@753))) (and (= ($generated@@345 ($generated@@471 $generated@@81 $generated@@754)) $generated@@754) ($generated@@140 ($generated@@471 $generated@@81 $generated@@754) ($generated@@137 $generated@@753))))
 :pattern ( ($generated@@249 $generated@@754 ($generated@@137 $generated@@753)))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (and (= (type $generated@@755) $generated@@67) (= (type $generated@@756) $generated@@200)) ($generated@@249 $generated@@756 ($generated@@184 $generated@@755))) (and (= ($generated@@345 ($generated@@471 $generated@@81 $generated@@756)) $generated@@756) ($generated@@140 ($generated@@471 $generated@@81 $generated@@756) ($generated@@184 $generated@@755))))
 :pattern ( ($generated@@249 $generated@@756 ($generated@@184 $generated@@755)))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (! (let (($generated@@759 (type $generated@@758)))
 (=> (= (type $generated@@757) ($generated@@167 $generated@@759)) (= ($generated@@164 ($generated@@206 $generated@@757 $generated@@758)) ($generated@@330 ($generated@@164 $generated@@757) $generated@@758))))
 :pattern ( ($generated@@164 ($generated@@206 $generated@@757 $generated@@758)))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 Int) ($generated@@762 Int) ) (! (let (($generated@@763 ($generated@@168 (type $generated@@760))))
 (=> (= (type $generated@@760) ($generated@@167 $generated@@763)) (=> (and (and (<= 0 $generated@@761) (<= $generated@@761 $generated@@762)) (< $generated@@762 ($generated@@207 $generated@@760))) (= ($generated@@240 ($generated@@205 $generated@@760 $generated@@761) (- $generated@@762 $generated@@761)) ($generated@@240 $generated@@760 $generated@@762)))))
 :weight 25
 :pattern ( ($generated@@240 $generated@@760 $generated@@762) ($generated@@205 $generated@@760 $generated@@761))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (and (= (type $generated@@764) ($generated@@80 $generated@@200 $generated@@2)) (= (type $generated@@765) $generated@@67)) (= (type $generated@@766) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@764 ($generated@@218 $generated@@765) $generated@@766) (forall (($generated@@767 T@U) ) (!  (=> (and (= (type $generated@@767) $generated@@200) (< 0 ($generated ($generated@@85 $generated@@764 $generated@@767)))) ($generated@@301 $generated@@767 $generated@@765 $generated@@766))
 :pattern ( ($generated@@85 $generated@@764 $generated@@767))
))))
 :pattern ( ($generated@@78 $generated@@764 ($generated@@218 $generated@@765) $generated@@766))
)))
(assert (forall (($generated@@768 T@U) ($generated@@769 Int) ($generated@@770 Int) ) (! (let (($generated@@771 ($generated@@168 (type $generated@@768))))
 (=> (= (type $generated@@768) ($generated@@167 $generated@@771)) (=> (and (and (<= 0 $generated@@769) (<= 0 $generated@@770)) (<= (+ $generated@@769 $generated@@770) ($generated@@207 $generated@@768))) (= ($generated@@205 ($generated@@205 $generated@@768 $generated@@769) $generated@@770) ($generated@@205 $generated@@768 (+ $generated@@769 $generated@@770))))))
 :pattern ( ($generated@@205 ($generated@@205 $generated@@768 $generated@@769) $generated@@770))
)))
(assert (forall (($generated@@772 T@U) ($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (and (and (= (type $generated@@772) $generated@@191) (= (type $generated@@773) $generated@@67)) (= (type $generated@@774) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@176 $generated@@774) (and ($generated@@189 $generated@@772) (exists (($generated@@775 T@U) ) (!  (and (= (type $generated@@775) $generated@@67) ($generated@@78 $generated@@772 ($generated@@190 $generated@@773 $generated@@775) $generated@@774))
 :pattern ( ($generated@@78 $generated@@772 ($generated@@190 $generated@@773 $generated@@775) $generated@@774))
))))) ($generated@@301 ($generated@@198 $generated@@772) $generated@@773 $generated@@774))
 :pattern ( ($generated@@301 ($generated@@198 $generated@@772) $generated@@773 $generated@@774))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (and (and (= (type $generated@@776) $generated@@191) (= (type $generated@@777) $generated@@67)) (= (type $generated@@778) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@176 $generated@@778) (and ($generated@@189 $generated@@776) (exists (($generated@@779 T@U) ) (!  (and (= (type $generated@@779) $generated@@67) ($generated@@78 $generated@@776 ($generated@@190 $generated@@779 $generated@@777) $generated@@778))
 :pattern ( ($generated@@78 $generated@@776 ($generated@@190 $generated@@779 $generated@@777) $generated@@778))
))))) ($generated@@301 ($generated@@199 $generated@@776) $generated@@777 $generated@@778))
 :pattern ( ($generated@@301 ($generated@@199 $generated@@776) $generated@@777 $generated@@778))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ($generated@@782 T@U) ) (! (let (($generated@@783 (type $generated@@781)))
 (=> (and (and (= (type $generated@@780) ($generated@@80 $generated@@783 $generated@@2)) (= (type $generated@@782) $generated@@783)) (not (= $generated@@781 $generated@@782))) (= ($generated ($generated@@85 $generated@@780 $generated@@782)) ($generated ($generated@@85 ($generated@@330 $generated@@780 $generated@@781) $generated@@782)))))
 :pattern ( ($generated@@330 $generated@@780 $generated@@781) ($generated@@85 $generated@@780 $generated@@782))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ($generated@@786 Int) ) (! (let (($generated@@787 ($generated@@168 (type $generated@@784))))
 (=> (and (= (type $generated@@784) ($generated@@167 $generated@@787)) (= (type $generated@@785) ($generated@@167 $generated@@787))) (and (=> (< $generated@@786 ($generated@@207 $generated@@784)) (= ($generated@@240 ($generated@@229 $generated@@784 $generated@@785) $generated@@786) ($generated@@240 $generated@@784 $generated@@786))) (=> (<= ($generated@@207 $generated@@784) $generated@@786) (= ($generated@@240 ($generated@@229 $generated@@784 $generated@@785) $generated@@786) ($generated@@240 $generated@@785 (- $generated@@786 ($generated@@207 $generated@@784))))))))
 :pattern ( ($generated@@240 ($generated@@229 $generated@@784 $generated@@785) $generated@@786))
)))
(assert (forall (($generated@@788 Int) ) (!  (=> (< $generated@@788 0) (= ($generated@@284 $generated@@788) 0))
 :pattern ( ($generated@@284 $generated@@788))
)))
(assert (forall (($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (= (type $generated@@789) $generated@@200) (= (type $generated@@790) $generated@@200)) (= ($generated@@248 ($generated@@288 $generated@@789) ($generated@@288 $generated@@790)) ($generated@@288 ($generated@@248 $generated@@789 $generated@@790))))
 :pattern ( ($generated@@248 ($generated@@288 $generated@@789) ($generated@@288 $generated@@790)))
)))
(assert (forall (($generated@@791 Int) ) (! (= ($generated@@345 ($generated@@8 ($generated@@286 $generated@@791))) ($generated@@288 ($generated@@345 ($generated@@8 $generated@@791))))
 :pattern ( ($generated@@345 ($generated@@8 ($generated@@286 $generated@@791))))
)))
(assert (forall (($generated@@792 T@U) ) (! (= ($generated@@345 ($generated@@288 $generated@@792)) ($generated@@288 ($generated@@345 $generated@@792)))
 :pattern ( ($generated@@345 ($generated@@288 $generated@@792)))
)))
(assert (forall (($generated@@793 T@U) ($generated@@794 T@U) ) (! (let (($generated@@795 ($generated@@168 (type $generated@@793))))
 (=> (and (= (type $generated@@793) ($generated@@167 $generated@@795)) (= (type $generated@@794) ($generated@@167 $generated@@795))) (= ($generated@@164 ($generated@@229 $generated@@793 $generated@@794)) ($generated@@148 ($generated@@164 $generated@@793) ($generated@@164 $generated@@794)))))
 :pattern ( ($generated@@164 ($generated@@229 $generated@@793 $generated@@794)))
)))
(assert (forall (($generated@@796 T@U) ) (! (let (($generated@@797 ($generated@@168 (type $generated@@796))))
 (=> (and (= (type $generated@@796) ($generated@@167 $generated@@797)) (= ($generated@@207 $generated@@796) 0)) (= $generated@@796 ($generated@@165 $generated@@797))))
 :pattern ( ($generated@@207 $generated@@796))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 Int) ) (! (let (($generated@@800 ($generated@@168 (type $generated@@798))))
 (=> (and (= (type $generated@@798) ($generated@@167 $generated@@800)) (= $generated@@799 0)) (= ($generated@@228 $generated@@798 $generated@@799) ($generated@@165 $generated@@800))))
 :pattern ( ($generated@@228 $generated@@798 $generated@@799))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ($generated@@803 T@U) ) (! (let (($generated@@804 (type $generated@@802)))
 (=> (and (and (= (type $generated@@801) ($generated@@80 $generated@@804 $generated@@2)) (= (type $generated@@803) $generated@@2)) (<= 0 ($generated $generated@@803))) (= ($generated@@145 ($generated@@86 $generated@@801 $generated@@802 $generated@@803)) (+ (- ($generated@@145 $generated@@801) ($generated ($generated@@85 $generated@@801 $generated@@802))) ($generated $generated@@803)))))
 :pattern ( ($generated@@145 ($generated@@86 $generated@@801 $generated@@802 $generated@@803)))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ) (!  (=> (and (= (type $generated@@805) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@806) $generated@@2)) ($generated@@78 $generated@@806 $generated@@46 $generated@@805))
 :pattern ( ($generated@@78 $generated@@806 $generated@@46 $generated@@805))
)))
(assert (forall (($generated@@807 T@U) ($generated@@808 T@U) ) (!  (=> (and (= (type $generated@@807) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@808) $generated@@3)) ($generated@@78 $generated@@808 $generated@@47 $generated@@807))
 :pattern ( ($generated@@78 $generated@@808 $generated@@47 $generated@@807))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ) (!  (=> (and (= (type $generated@@809) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@810) $generated@@4)) ($generated@@78 $generated@@810 $generated@@44 $generated@@809))
 :pattern ( ($generated@@78 $generated@@810 $generated@@44 $generated@@809))
)))
(assert (forall (($generated@@811 T@U) ($generated@@812 T@U) ) (!  (=> (and (= (type $generated@@811) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@812) $generated@@552)) ($generated@@78 $generated@@812 $generated@@45 $generated@@811))
 :pattern ( ($generated@@78 $generated@@812 $generated@@45 $generated@@811))
)))
(assert (forall (($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (= (type $generated@@813) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@814) $generated@@200)) ($generated@@78 $generated@@814 $generated@@48 $generated@@813))
 :pattern ( ($generated@@78 $generated@@814 $generated@@48 $generated@@813))
)))
(assert (forall (($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (= (type $generated@@815) ($generated@@167 $generated@@200)) (= (type $generated@@816) $generated@@67)) (= ($generated@@140 $generated@@815 ($generated@@292 $generated@@816)) (forall (($generated@@817 Int) ) (!  (=> (and (<= 0 $generated@@817) (< $generated@@817 ($generated@@207 $generated@@815))) ($generated@@249 ($generated@@240 $generated@@815 $generated@@817) $generated@@816))
 :pattern ( ($generated@@240 $generated@@815 $generated@@817))
))))
 :pattern ( ($generated@@140 $generated@@815 ($generated@@292 $generated@@816)))
)))
(assert (forall (($generated@@818 T@U) ($generated@@819 Int) ) (!  (=> (= (type $generated@@818) ($generated@@167 $generated@@200)) (=> (and (<= 0 $generated@@819) (< $generated@@819 ($generated@@207 $generated@@818))) (< ($generated@@649 ($generated@@471 $generated@@191 ($generated@@240 $generated@@818 $generated@@819))) ($generated@@322 $generated@@818))))
 :pattern ( ($generated@@649 ($generated@@471 $generated@@191 ($generated@@240 $generated@@818 $generated@@819))))
)))
(assert (forall (($generated@@820 T@U) ($generated@@821 T@U) ($generated@@822 T@U) ) (!  (=> (and (and (and (= (type $generated@@820) ($generated@@367 $generated@@200 $generated@@200)) (= (type $generated@@821) $generated@@67)) (= (type $generated@@822) $generated@@67)) ($generated@@140 $generated@@820 ($generated@@499 $generated@@821 $generated@@822))) (and (and ($generated@@140 ($generated@@365 $generated@@820) ($generated@@274 $generated@@821)) ($generated@@140 ($generated@@427 $generated@@820) ($generated@@274 $generated@@822))) ($generated@@140 ($generated@@470 $generated@@820) ($generated@@274 ($generated@@190 $generated@@821 $generated@@822)))))
 :pattern ( ($generated@@140 $generated@@820 ($generated@@499 $generated@@821 $generated@@822)))
)))
(assert (forall (($generated@@823 T@U) ($generated@@824 T@U) ($generated@@825 T@U) ) (!  (=> (and (and (and (= (type $generated@@823) ($generated@@385 $generated@@200 $generated@@200)) (= (type $generated@@824) $generated@@67)) (= (type $generated@@825) $generated@@67)) ($generated@@140 $generated@@823 ($generated@@507 $generated@@824 $generated@@825))) (and (and ($generated@@140 ($generated@@383 $generated@@823) ($generated@@279 $generated@@824)) ($generated@@140 ($generated@@438 $generated@@823) ($generated@@279 $generated@@825))) ($generated@@140 ($generated@@481 $generated@@823) ($generated@@279 ($generated@@190 $generated@@824 $generated@@825)))))
 :pattern ( ($generated@@140 $generated@@823 ($generated@@507 $generated@@824 $generated@@825)))
)))
(assert (forall (($generated@@826 T@U) ) (!  (=> (= (type $generated@@826) $generated@@2) ($generated@@140 $generated@@826 $generated@@46))
 :pattern ( ($generated@@140 $generated@@826 $generated@@46))
)))
(assert (forall (($generated@@827 T@U) ) (!  (=> (= (type $generated@@827) $generated@@3) ($generated@@140 $generated@@827 $generated@@47))
 :pattern ( ($generated@@140 $generated@@827 $generated@@47))
)))
(assert (forall (($generated@@828 T@U) ) (!  (=> (= (type $generated@@828) $generated@@4) ($generated@@140 $generated@@828 $generated@@44))
 :pattern ( ($generated@@140 $generated@@828 $generated@@44))
)))
(assert (forall (($generated@@829 T@U) ) (!  (=> (= (type $generated@@829) $generated@@552) ($generated@@140 $generated@@829 $generated@@45))
 :pattern ( ($generated@@140 $generated@@829 $generated@@45))
)))
(assert (forall (($generated@@830 T@U) ) (!  (=> (= (type $generated@@830) $generated@@200) ($generated@@140 $generated@@830 $generated@@48))
 :pattern ( ($generated@@140 $generated@@830 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@831 () T@U)
(declare-fun $generated@@832 () T@U)
(declare-fun $generated@@833 () T@U)
(declare-fun $generated@@834 () Int)
(declare-fun $generated@@835 () Int)
(declare-fun $generated@@836 (T@U) Bool)
(declare-fun $generated@@837 () Int)
(assert  (and (and (= (type $generated@@831) ($generated@@670 $generated@@81 $generated@@4)) (= (type $generated@@832) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@833) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@838  (=> (= $generated@@831 ($generated@@669 $generated@@138 $generated@@832 $generated@@60 $generated@@833)) (and (=> (= (ControlFlow 0 2) (- 0 20)) (not (= $generated@@833 $generated@@138))) (=> (not (= $generated@@833 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 19)) (and (<= 0 $generated@@834) (<= $generated@@834 ($generated@@136 $generated@@833)))) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= $generated@@834 (- $generated@@835 1)) (<= (- $generated@@835 1) ($generated@@136 $generated@@833)))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (not (= $generated@@833 $generated@@138))) (=> (not (= $generated@@833 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 16)) (and (<= 0 (- $generated@@835 1)) (< (- $generated@@835 1) ($generated@@136 $generated@@833)))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (not (= $generated@@833 $generated@@138))) (=> (not (= $generated@@833 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= 0 $generated@@834) (<= $generated@@834 ($generated@@136 $generated@@833)))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= $generated@@834 $generated@@835) (<= $generated@@835 ($generated@@136 $generated@@833)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@313 ($generated@@229 ($generated@@205 ($generated@@228 ($generated@@256 $generated@@832 $generated@@833) (- $generated@@835 1)) $generated@@834) ($generated@@206 ($generated@@165 $generated@@200) ($generated@@87 ($generated@@85 $generated@@832 $generated@@833) ($generated@@257 (- $generated@@835 1))))) ($generated@@205 ($generated@@228 ($generated@@256 $generated@@832 $generated@@833) $generated@@835) $generated@@834))) (=> ($generated@@313 ($generated@@229 ($generated@@205 ($generated@@228 ($generated@@256 $generated@@832 $generated@@833) (- $generated@@835 1)) $generated@@834) ($generated@@206 ($generated@@165 $generated@@200) ($generated@@87 ($generated@@85 $generated@@832 $generated@@833) ($generated@@257 (- $generated@@835 1))))) ($generated@@205 ($generated@@228 ($generated@@256 $generated@@832 $generated@@833) $generated@@835) $generated@@834)) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= $generated@@833 $generated@@138))) (=> (not (= $generated@@833 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= 0 $generated@@834) (<= $generated@@834 ($generated@@136 $generated@@833)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= $generated@@834 (- $generated@@835 1)) (<= (- $generated@@835 1) ($generated@@136 $generated@@833)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@833 $generated@@138))) (=> (not (= $generated@@833 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 (- $generated@@835 1)) (< (- $generated@@835 1) ($generated@@136 $generated@@833)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@833 $generated@@138))) (=> (not (= $generated@@833 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 $generated@@834) (<= $generated@@834 ($generated@@136 $generated@@833)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@834 $generated@@835) (<= $generated@@835 ($generated@@136 $generated@@833)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@455 ($generated@@148 ($generated@@164 ($generated@@205 ($generated@@228 ($generated@@256 $generated@@832 $generated@@833) (- $generated@@835 1)) $generated@@834)) ($generated@@164 ($generated@@206 ($generated@@165 $generated@@200) ($generated@@87 ($generated@@85 $generated@@832 $generated@@833) ($generated@@257 (- $generated@@835 1)))))) ($generated@@164 ($generated@@205 ($generated@@228 ($generated@@256 $generated@@832 $generated@@833) $generated@@835) $generated@@834)))) (=> ($generated@@455 ($generated@@148 ($generated@@164 ($generated@@205 ($generated@@228 ($generated@@256 $generated@@832 $generated@@833) (- $generated@@835 1)) $generated@@834)) ($generated@@164 ($generated@@206 ($generated@@165 $generated@@200) ($generated@@87 ($generated@@85 $generated@@832 $generated@@833) ($generated@@257 (- $generated@@835 1)))))) ($generated@@164 ($generated@@205 ($generated@@228 ($generated@@256 $generated@@832 $generated@@833) $generated@@835) $generated@@834))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@455 ($generated@@164 ($generated@@205 ($generated@@228 ($generated@@256 $generated@@832 $generated@@833) (- $generated@@835 1)) $generated@@834)) ($generated@@146 ($generated@@164 ($generated@@205 ($generated@@228 ($generated@@256 $generated@@832 $generated@@833) $generated@@835) $generated@@834)) ($generated@@330 ($generated@@166 $generated@@200) ($generated@@87 ($generated@@85 $generated@@832 $generated@@833) ($generated@@257 (- $generated@@835 1))))))))))))))))))))))))))))))))))))
(let (($generated@@839  (=> (and ($generated@@176 $generated@@832) ($generated@@836 $generated@@832)) (=> (and (and (and ($generated@@140 $generated@@833 ($generated@@184 $generated@@46)) ($generated@@78 $generated@@833 ($generated@@184 $generated@@46) $generated@@832)) (= 1 $generated@@837)) (and (and (<= ($generated@@286 0) $generated@@834) (< $generated@@834 $generated@@835)) (and (<= $generated@@835 ($generated@@136 $generated@@833)) (= (ControlFlow 0 21) 2)))) $generated@@838))))
$generated@@839)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (Int Int) Int)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@451 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@612 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert (forall (($generated@@135 Int) ($generated@@136 Int) ) (!  (or (= ($generated@@134 $generated@@135 $generated@@136) $generated@@135) (= ($generated@@134 $generated@@135 $generated@@136) $generated@@136))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@64)) (= (type $generated@@144) $generated@@139)) ($generated@@132 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@132 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@64)) ($generated@@132 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@132 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@164 $generated@@165)) 16)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@162 (type $generated@@170))))
(= (type ($generated@@158 $generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@158 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(let (($generated@@179 (type $generated@@175)))
(= (type ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177)) ($generated@@160 $generated@@179 $generated@@178))))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@162 (type $generated@@180))))
 (=> (= (type $generated@@183) $generated@@184) (= ($generated@@158 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@181 $generated@@182) $generated@@183)))
 :weight 0
))) (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@158 ($generated@@163 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@158 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@158 ($generated@@163 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@158 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or true (= ($generated@@158 ($generated@@163 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@158 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ) (! (= (type ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@160 $generated@@77 $generated@@4))
 :pattern ( ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@67 (type $generated@@212))))
 (=> (and (and (and (and (= (type $generated@@207) $generated@@77) (= (type $generated@@208) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@209) ($generated@@66 $generated@@4))) (= (type $generated@@211) $generated@@77)) (= (type $generated@@212) ($generated@@66 $generated@@213))) (= ($generated@@0 ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (not (= $generated@@211 $generated@@207)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@208 $generated@@211) $generated@@209))) $generated@@210))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@79 (type $generated@@215))))
(= (type ($generated@@214 $generated@@215 $generated@@216)) ($generated@@76 $generated@@217 $generated@@2)))
 :pattern ( ($generated@@214 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@79 (type $generated@@218))))
 (=> (and (= (type $generated@@218) ($generated@@76 $generated@@220 $generated@@2)) (= (type $generated@@219) ($generated@@76 $generated@@220 $generated@@2))) (= ($generated@@214 ($generated@@214 $generated@@218 $generated@@219) $generated@@219) ($generated@@214 $generated@@218 $generated@@219))))
 :pattern ( ($generated@@214 ($generated@@214 $generated@@218 $generated@@219) $generated@@219))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@139)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@64) (= (type $generated@@226) $generated@@64)) (= (type $generated@@227) $generated@@148)) (= (type $generated@@228) $generated@@148)) (= ($generated@@132 ($generated@@221 $generated@@227 $generated@@228) ($generated@@138 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@132 ($generated@@221 $generated@@227 $generated@@228) ($generated@@138 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@79 (type $generated@@230))))
(= (type ($generated@@229 $generated@@230 $generated@@231)) ($generated@@76 $generated@@232 $generated@@2)))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 (type $generated@@235)))
 (=> (and (= (type $generated@@233) ($generated@@76 $generated@@236 $generated@@2)) (= (type $generated@@234) ($generated@@76 $generated@@236 $generated@@2))) (= ($generated ($generated@@81 ($generated@@229 $generated@@233 $generated@@234) $generated@@235)) (+ ($generated ($generated@@81 $generated@@233 $generated@@235)) ($generated ($generated@@81 $generated@@234 $generated@@235))))))
 :pattern ( ($generated@@81 ($generated@@229 $generated@@233 $generated@@234) $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@139) (= (type $generated@@238) $generated@@139)) (= ($generated@@145 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@145 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@222 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@148) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@222 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) $generated@@64)) (= (type $generated@@259) $generated@@148)) (= (type $generated@@260) $generated@@148)) (= (type $generated@@261) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@255 $generated@@261)) (= ($generated@@74 ($generated@@221 $generated@@259 $generated@@260) ($generated@@138 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@74 ($generated@@221 $generated@@259 $generated@@260) ($generated@@138 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@139) (= ($generated@@137 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@139) ($generated@@137 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@148) (= (type $generated@@267) $generated@@148)) (= $generated@@265 ($generated@@221 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@137 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@277 $generated@@278 $generated@@279)) ($generated@@76 $generated@@280 $generated@@2)))
 :pattern ( ($generated@@277 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
 (=> (= (type $generated@@281) ($generated@@76 $generated@@283 $generated@@2)) (= ($generated@@276 ($generated@@277 $generated@@281 $generated@@282)) (+ ($generated@@276 $generated@@281) 1))))
 :pattern ( ($generated@@276 ($generated@@277 $generated@@281 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@148)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@64) (= (type $generated@@288) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@256 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@74 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@256 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@76 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@79 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@76 $generated@@292 $generated@@2)) (and (= (= ($generated@@276 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@276 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@81 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@276 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@76 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@79 (type $generated@@330))))
 (=> (and (= (type $generated@@330) ($generated@@76 $generated@@332 $generated@@2)) (= (type $generated@@331) ($generated@@76 $generated@@332 $generated@@2))) (= ($generated@@276 ($generated@@229 $generated@@330 $generated@@331)) (+ ($generated@@276 $generated@@330) ($generated@@276 $generated@@331)))))
 :pattern ( ($generated@@276 ($generated@@229 $generated@@330 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@154 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@276 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@154 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
 (=> (= (type $generated@@336) ($generated@@76 $generated@@338 $generated@@2)) (= ($generated ($generated@@81 ($generated@@277 $generated@@336 $generated@@337) $generated@@337)) (+ ($generated ($generated@@81 $generated@@336 $generated@@337)) 1))))
 :pattern ( ($generated@@277 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@340)))
 (=> (and (and (= (type $generated@@339) ($generated@@76 $generated@@342 $generated@@2)) (= (type $generated@@341) $generated@@342)) (< 0 ($generated ($generated@@81 $generated@@339 $generated@@341)))) (< 0 ($generated ($generated@@81 ($generated@@277 $generated@@339 $generated@@340) $generated@@341)))))
 :pattern ( ($generated@@277 $generated@@339 $generated@@340) ($generated@@81 $generated@@339 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@298 (type $generated@@343))))
(let (($generated@@345 ($generated@@297 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@296 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@295 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@294 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@298 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@298 (type $generated@@350))))
(let (($generated@@352 ($generated@@297 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@296 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@295 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@316 (type $generated@@354))))
(let (($generated@@356 ($generated@@315 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@314 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@313 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@312 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@316 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@76 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@316 (type $generated@@361))))
(let (($generated@@363 ($generated@@315 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@314 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@313 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@366)))
 (=> (and (= (type $generated@@365) ($generated@@76 $generated@@368 $generated@@2)) (= (type $generated@@367) $generated@@368)) (= (< 0 ($generated ($generated@@81 ($generated@@277 $generated@@365 $generated@@366) $generated@@367)))  (or (= $generated@@367 $generated@@366) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367)))))))
 :pattern ( ($generated@@81 ($generated@@277 $generated@@365 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@370) $generated@@64)) (= ($generated@@132 $generated@@369 ($generated@@153 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@369 $generated@@371)))) ($generated@@222 $generated@@371 $generated@@370))
 :pattern ( ($generated@@81 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@132 $generated@@369 ($generated@@153 $generated@@370)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@239 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@148) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@256 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@239 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@376 ($generated@@244 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@148) ($generated@@0 ($generated@@81 $generated@@376 $generated@@379))) ($generated@@256 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@81 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@376 ($generated@@244 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@81 ($generated@@289 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@81 ($generated@@289 $generated@@381) $generated@@380)))
)))
(assert  (and (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@382 $generated@@385)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@382 $generated@@385))
)) (forall (($generated@@386 T@T) ($generated@@387 T@U) ) (! (= (type ($generated@@383 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@383 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@298 (type $generated@@388))))
(let (($generated@@390 ($generated@@297 (type $generated@@388))))
(= (type ($generated@@384 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@384 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@296 $generated@@148 $generated@@148)) (= (type $generated@@392) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@391) ($generated@@146 ($generated@@383 $generated@@139 $generated@@392)))) (= ($generated@@81 ($generated@@384 $generated@@391) ($generated@@146 ($generated@@383 $generated@@139 $generated@@392))) ($generated@@147 ($generated@@383 $generated@@139 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@316 (type $generated@@396))))
(let (($generated@@398 ($generated@@315 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@76 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@314 $generated@@148 $generated@@148)) (= (type $generated@@400) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@399) ($generated@@146 ($generated@@383 $generated@@139 $generated@@400)))) (= ($generated@@81 ($generated@@394 $generated@@399) ($generated@@146 ($generated@@383 $generated@@139 $generated@@400))) ($generated@@147 ($generated@@383 $generated@@139 $generated@@400))))))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@297 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@296 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@315 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@314 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@296 $generated@@148 $generated@@148)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@414) $generated@@418))) (and ($generated@@256 ($generated@@81 ($generated@@384 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@256 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@314 $generated@@148 $generated@@148)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) $generated@@64)) (= (type $generated@@425) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@422) $generated@@426))) (and ($generated@@256 ($generated@@81 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@256 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@T) ) (! (= (type ($generated@@427 $generated@@428)) ($generated@@76 $generated@@428 $generated@@4))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@316 (type $generated@@429))))
(let (($generated@@431 ($generated@@315 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@314 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@313 $generated@@431 $generated@@430)) (= ($generated@@312 $generated@@429) ($generated@@427 $generated@@431))))))
 :pattern ( ($generated@@312 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@316 (type $generated@@432))))
(let (($generated@@434 ($generated@@315 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@314 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@313 $generated@@434 $generated@@433)) (= ($generated@@358 $generated@@432) ($generated@@427 $generated@@433))))))
 :pattern ( ($generated@@358 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@316 (type $generated@@435))))
(let (($generated@@437 ($generated@@315 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@314 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@313 $generated@@437 $generated@@436)) (= ($generated@@393 $generated@@435) ($generated@@427 $generated@@148))))))
 :pattern ( ($generated@@393 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@298 (type $generated@@438))))
(let (($generated@@440 ($generated@@297 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@296 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@295 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@148) (= (type $generated@@442) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@438) ($generated@@284 ($generated@@221 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@382 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@316 (type $generated@@443))))
(let (($generated@@445 ($generated@@315 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@314 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@313 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@148) (= (type $generated@@447) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@393 $generated@@443) ($generated@@284 ($generated@@221 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@393 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@148) ($generated@@222 $generated@@448 $generated@@46)) (and (= ($generated@@284 ($generated@@383 $generated@@2 $generated@@448)) $generated@@448) ($generated@@132 ($generated@@383 $generated@@2 $generated@@448) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@448 $generated@@46))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@148) ($generated@@222 $generated@@449 $generated@@47)) (and (= ($generated@@284 ($generated@@383 $generated@@3 $generated@@449)) $generated@@449) ($generated@@132 ($generated@@383 $generated@@3 $generated@@449) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@449 $generated@@47))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@148) ($generated@@222 $generated@@450 $generated@@44)) (and (= ($generated@@284 ($generated@@383 $generated@@4 $generated@@450)) $generated@@450) ($generated@@132 ($generated@@383 $generated@@4 $generated@@450) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@450 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@451) 20))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@148) ($generated@@222 $generated@@452 $generated@@45)) (and (= ($generated@@284 ($generated@@383 $generated@@451 $generated@@452)) $generated@@452) ($generated@@132 ($generated@@383 $generated@@451 $generated@@452) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@452 $generated@@45))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@64) (= ($generated@@222 ($generated@@284 $generated@@453) $generated@@454) ($generated@@132 $generated@@453 $generated@@454)))
 :pattern ( ($generated@@222 ($generated@@284 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@79 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@76 $generated@@456 $generated@@2)) (<= 0 ($generated@@276 $generated@@455))))
 :pattern ( ($generated@@276 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@271 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@270 $generated@@458)) (<= 0 ($generated@@269 $generated@@457))))
 :pattern ( ($generated@@269 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
 (=> (and (= (type $generated@@459) ($generated@@76 $generated@@462 $generated@@2)) (= (type $generated@@460) ($generated@@76 $generated@@462 $generated@@2))) (= ($generated ($generated@@81 ($generated@@214 $generated@@459 $generated@@460) $generated@@461)) ($generated@@134 ($generated ($generated@@81 $generated@@459 $generated@@461)) ($generated ($generated@@81 $generated@@460 $generated@@461))))))
 :pattern ( ($generated@@81 ($generated@@214 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@411 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@411 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@411 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@419 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@419 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@72 ($generated@@419 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@148) (= (type $generated@@484) $generated@@148)) (= ($generated@@262 ($generated@@221 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@138 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@138 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@489 ($generated@@138 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@138 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@148) (= (type $generated@@494) $generated@@148)) (= ($generated@@146 ($generated@@221 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@221 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@148) (= (type $generated@@496) $generated@@148)) (= ($generated@@147 ($generated@@221 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@221 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@271 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@270 $generated@@148)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@269 $generated@@503))) ($generated@@256 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@74 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@75 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@75 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@239 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@239 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@244 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@244 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@153 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@153 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@72 ($generated@@153 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@72 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@383 $generated@@526 ($generated@@284 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@284 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@296 $generated@@148 $generated@@148)) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) (= ($generated@@132 $generated@@527 ($generated@@411 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@527) $generated@@530))) (and ($generated@@222 ($generated@@81 ($generated@@384 $generated@@527) $generated@@530) $generated@@529) ($generated@@222 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@527) $generated@@530))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@132 $generated@@527 ($generated@@411 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@314 $generated@@148 $generated@@148)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) (= ($generated@@132 $generated@@531 ($generated@@419 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@531) $generated@@534))) (and ($generated@@222 ($generated@@81 ($generated@@394 $generated@@531) $generated@@534) $generated@@533) ($generated@@222 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@531) $generated@@534))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@132 $generated@@531 ($generated@@419 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@148) (= (type $generated@@538) $generated@@148)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@221 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@148) (= (type $generated@@540) $generated@@148)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@221 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@79 (type $generated@@541))))
 (=> (and (= (type $generated@@541) ($generated@@76 $generated@@543 $generated@@2)) (= (type $generated@@542) ($generated@@76 $generated@@543 $generated@@2))) (= ($generated@@214 $generated@@541 ($generated@@214 $generated@@541 $generated@@542)) ($generated@@214 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@214 $generated@@541 ($generated@@214 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@148) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@64)) ($generated@@222 $generated@@544 ($generated@@411 $generated@@545 $generated@@546))) (and (= ($generated@@284 ($generated@@383 ($generated@@296 $generated@@148 $generated@@148) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@383 ($generated@@296 $generated@@148 $generated@@148) $generated@@544) ($generated@@411 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@222 $generated@@544 ($generated@@411 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@148) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) $generated@@64)) ($generated@@222 $generated@@547 ($generated@@419 $generated@@548 $generated@@549))) (and (= ($generated@@284 ($generated@@383 ($generated@@314 $generated@@148 $generated@@148) $generated@@547)) $generated@@547) ($generated@@132 ($generated@@383 ($generated@@314 $generated@@148 $generated@@148) $generated@@547) ($generated@@419 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@222 $generated@@547 ($generated@@419 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) $generated@@148)) ($generated@@222 $generated@@552 ($generated@@138 $generated@@550 $generated@@551))) (and (= ($generated@@284 ($generated@@383 $generated@@139 $generated@@552)) $generated@@552) ($generated@@132 ($generated@@383 $generated@@139 $generated@@552) ($generated@@138 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@222 $generated@@552 ($generated@@138 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
 (not ($generated@@0 ($generated@@81 ($generated@@427 $generated@@554) $generated@@553))))
 :pattern ( (let (($generated@@554 (type $generated@@553)))
($generated@@81 ($generated@@427 $generated@@554) $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@69)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@64) (= (type $generated@@558) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@557 $generated@@558)) $generated@@62) (= ($generated@@555 ($generated@@138 $generated@@557 $generated@@558)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@139) (= ($generated@@535 ($generated@@284 $generated@@559)) ($generated@@536 $generated@@559)))
 :pattern ( ($generated@@535 ($generated@@284 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ($generated@@561 Int) ) (! (= (<= $generated@@560 $generated@@561) (= ($generated@@134 $generated@@560 $generated@@561) $generated@@560))
 :pattern ( ($generated@@134 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 Int) ($generated@@563 Int) ) (! (= (<= $generated@@563 $generated@@562) (= ($generated@@134 $generated@@562 $generated@@563) $generated@@563))
 :pattern ( ($generated@@134 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@148) ($generated@@222 $generated@@564 ($generated@@75 0))) (and (= ($generated@@284 ($generated@@383 $generated@@2 $generated@@564)) $generated@@564) ($generated@@132 ($generated@@383 ($generated@@76 $generated@@148 $generated@@4) $generated@@564) ($generated@@75 0))))
 :pattern ( ($generated@@222 $generated@@564 ($generated@@75 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@148) (= (type $generated@@566) $generated@@64)) ($generated@@222 $generated@@565 ($generated@@239 $generated@@566))) (and (= ($generated@@284 ($generated@@383 ($generated@@76 $generated@@148 $generated@@4) $generated@@565)) $generated@@565) ($generated@@132 ($generated@@383 ($generated@@76 $generated@@148 $generated@@4) $generated@@565) ($generated@@239 $generated@@566))))
 :pattern ( ($generated@@222 $generated@@565 ($generated@@239 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@148) (= (type $generated@@568) $generated@@64)) ($generated@@222 $generated@@567 ($generated@@244 $generated@@568))) (and (= ($generated@@284 ($generated@@383 ($generated@@76 $generated@@148 $generated@@4) $generated@@567)) $generated@@567) ($generated@@132 ($generated@@383 ($generated@@76 $generated@@148 $generated@@4) $generated@@567) ($generated@@244 $generated@@568))))
 :pattern ( ($generated@@222 $generated@@567 ($generated@@244 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@148) (= (type $generated@@570) $generated@@64)) ($generated@@222 $generated@@569 ($generated@@153 $generated@@570))) (and (= ($generated@@284 ($generated@@383 ($generated@@76 $generated@@148 $generated@@2) $generated@@569)) $generated@@569) ($generated@@132 ($generated@@383 ($generated@@76 $generated@@148 $generated@@2) $generated@@569) ($generated@@153 $generated@@570))))
 :pattern ( ($generated@@222 $generated@@569 ($generated@@153 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@148) (= (type $generated@@572) $generated@@64)) ($generated@@222 $generated@@571 ($generated@@497 $generated@@572))) (and (= ($generated@@284 ($generated@@383 ($generated@@270 $generated@@148) $generated@@571)) $generated@@571) ($generated@@132 ($generated@@383 ($generated@@270 $generated@@148) $generated@@571) ($generated@@497 $generated@@572))))
 :pattern ( ($generated@@222 $generated@@571 ($generated@@497 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@573 ($generated@@153 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@573 $generated@@576)))) ($generated@@256 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@81 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@74 $generated@@573 ($generated@@153 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@139) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@579) (and ($generated@@137 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@64) ($generated@@74 $generated@@577 ($generated@@138 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@74 $generated@@577 ($generated@@138 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@256 ($generated@@146 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@256 ($generated@@146 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@139) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@583) (and ($generated@@137 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@64) ($generated@@74 $generated@@581 ($generated@@138 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@74 $generated@@581 ($generated@@138 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@256 ($generated@@147 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@256 ($generated@@147 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@76 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@588)) (not (= $generated@@586 $generated@@587))) (= ($generated ($generated@@81 $generated@@585 $generated@@587)) ($generated ($generated@@81 ($generated@@277 $generated@@585 $generated@@586) $generated@@587)))))
 :pattern ( ($generated@@277 $generated@@585 $generated@@586) ($generated@@81 $generated@@585 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@148) (= (type $generated@@590) $generated@@148)) (= ($generated@@221 ($generated@@251 $generated@@589) ($generated@@251 $generated@@590)) ($generated@@251 ($generated@@221 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@221 ($generated@@251 $generated@@589) ($generated@@251 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@284 ($generated@@8 ($generated@@249 $generated@@591))) ($generated@@251 ($generated@@284 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@284 ($generated@@8 ($generated@@249 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ) (! (= ($generated@@284 ($generated@@251 $generated@@592)) ($generated@@251 ($generated@@284 $generated@@592)))
 :pattern ( ($generated@@284 ($generated@@251 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@271 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@270 $generated@@594)) (= ($generated@@269 $generated@@593) 0)) (= $generated@@593 ($generated@@268 $generated@@594))))
 :pattern ( ($generated@@269 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@76 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@2)) (<= 0 ($generated $generated@@597))) (= ($generated@@276 ($generated@@82 $generated@@595 $generated@@596 $generated@@597)) (+ (- ($generated@@276 $generated@@595) ($generated ($generated@@81 $generated@@595 $generated@@596))) ($generated $generated@@597)))))
 :pattern ( ($generated@@276 ($generated@@82 $generated@@595 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@2)) ($generated@@74 $generated@@600 $generated@@46 $generated@@599))
 :pattern ( ($generated@@74 $generated@@600 $generated@@46 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@602) $generated@@3)) ($generated@@74 $generated@@602 $generated@@47 $generated@@601))
 :pattern ( ($generated@@74 $generated@@602 $generated@@47 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@604) $generated@@4)) ($generated@@74 $generated@@604 $generated@@44 $generated@@603))
 :pattern ( ($generated@@74 $generated@@604 $generated@@44 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) $generated@@451)) ($generated@@74 $generated@@606 $generated@@45 $generated@@605))
 :pattern ( ($generated@@74 $generated@@606 $generated@@45 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@608) $generated@@148)) ($generated@@74 $generated@@608 $generated@@48 $generated@@607))
 :pattern ( ($generated@@74 $generated@@608 $generated@@48 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@270 $generated@@148)) (= (type $generated@@610) $generated@@64)) (= ($generated@@132 $generated@@609 ($generated@@497 $generated@@610)) (forall (($generated@@611 Int) ) (!  (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@269 $generated@@609))) ($generated@@222 ($generated@@498 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@498 $generated@@609 $generated@@611))
))))
 :pattern ( ($generated@@132 $generated@@609 ($generated@@497 $generated@@610)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@270 $generated@@148)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@269 $generated@@613))) (< ($generated@@536 ($generated@@383 $generated@@139 ($generated@@498 $generated@@613 $generated@@614))) ($generated@@612 $generated@@613))))
 :pattern ( ($generated@@536 ($generated@@383 $generated@@139 ($generated@@498 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@296 $generated@@148 $generated@@148)) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@132 $generated@@615 ($generated@@411 $generated@@616 $generated@@617))) (and (and ($generated@@132 ($generated@@294 $generated@@615) ($generated@@239 $generated@@616)) ($generated@@132 ($generated@@347 $generated@@615) ($generated@@239 $generated@@617))) ($generated@@132 ($generated@@382 $generated@@615) ($generated@@239 ($generated@@138 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@132 $generated@@615 ($generated@@411 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@314 $generated@@148 $generated@@148)) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@64)) ($generated@@132 $generated@@618 ($generated@@419 $generated@@619 $generated@@620))) (and (and ($generated@@132 ($generated@@312 $generated@@618) ($generated@@244 $generated@@619)) ($generated@@132 ($generated@@358 $generated@@618) ($generated@@244 $generated@@620))) ($generated@@132 ($generated@@393 $generated@@618) ($generated@@244 ($generated@@138 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@132 $generated@@618 ($generated@@419 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@132 $generated@@621 $generated@@46))
 :pattern ( ($generated@@132 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@132 $generated@@622 $generated@@47))
 :pattern ( ($generated@@132 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@132 $generated@@623 $generated@@44))
 :pattern ( ($generated@@132 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@451) ($generated@@132 $generated@@624 $generated@@45))
 :pattern ( ($generated@@132 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@148) ($generated@@132 $generated@@625 $generated@@48))
 :pattern ( ($generated@@132 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 (T@U) Bool)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@626) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@627) ($generated@@76 $generated@@148 $generated@@2))) (= (type $generated@@631) ($generated@@160 $generated@@77 $generated@@4))) (= (type $generated@@632) $generated@@77)) (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@634) ($generated@@76 $generated@@148 $generated@@2))) (= (type $generated@@635) ($generated@@76 $generated@@148 $generated@@2))) (= (type $generated@@636) ($generated@@76 $generated@@148 $generated@@2))) (= (type $generated@@637) ($generated@@76 $generated@@148 $generated@@2))) (= (type $generated@@639) ($generated@@76 $generated@@148 $generated@@2))) (= (type $generated@@640) ($generated@@76 $generated@@148 $generated@@2))) (= (type $generated@@641) ($generated@@76 $generated@@148 $generated@@2))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@643  (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated ($generated@@81 ($generated@@214 $generated@@626 $generated@@627) ($generated@@284 ($generated@@251 ($generated@@11 false))))) (ite (<= $generated@@628 $generated@@629) $generated@@628 $generated@@629))) (=> (= ($generated ($generated@@81 ($generated@@214 $generated@@626 $generated@@627) ($generated@@284 ($generated@@251 ($generated@@11 false))))) (ite (<= $generated@@628 $generated@@629) $generated@@628 $generated@@629)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= 0 $generated@@630))))))
(let (($generated@@644  (=> (and (< $generated@@629 $generated@@628) (= (ControlFlow 0 5) 2)) $generated@@643)))
(let (($generated@@645  (=> (and (<= $generated@@628 $generated@@629) (= (ControlFlow 0 4) 2)) $generated@@643)))
(let (($generated@@646  (=> (= $generated@@631 ($generated@@159 $generated@@632 $generated@@633 $generated@@60 false)) (=> (and (and (and ($generated@@132 $generated@@634 ($generated@@153 $generated@@44)) ($generated@@74 $generated@@634 ($generated@@153 $generated@@44) $generated@@633)) (and ($generated@@132 $generated@@635 ($generated@@153 $generated@@44)) ($generated@@74 $generated@@635 ($generated@@153 $generated@@44) $generated@@633))) (and (and ($generated@@132 $generated@@636 ($generated@@153 $generated@@44)) ($generated@@74 $generated@@636 ($generated@@153 $generated@@44) $generated@@633)) (= $generated@@637 ($generated@@251 ($generated@@277 ($generated@@277 ($generated@@277 ($generated@@289 $generated@@148) ($generated@@284 ($generated@@251 ($generated@@11 false)))) ($generated@@284 ($generated@@251 ($generated@@11 true)))) ($generated@@284 ($generated@@251 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (<= 0 $generated@@628)) (=> (<= 0 $generated@@628) (=> (= $generated@@626 ($generated@@82 ($generated@@251 ($generated@@277 ($generated@@289 $generated@@148) ($generated@@284 ($generated@@251 ($generated@@11 true))))) ($generated@@284 ($generated@@251 ($generated@@11 false))) ($generated@@8 $generated@@628))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (<= 0 $generated@@629)) (=> (<= 0 $generated@@629) (=> (= $generated@@627 ($generated@@82 ($generated@@251 ($generated@@289 $generated@@148)) ($generated@@284 ($generated@@251 ($generated@@11 false))) ($generated@@8 $generated@@629))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (= ($generated ($generated@@81 ($generated@@229 ($generated@@229 $generated@@637 $generated@@626) $generated@@627) ($generated@@284 ($generated@@251 ($generated@@11 true))))) ($generated@@249 3))) (=> (= ($generated ($generated@@81 ($generated@@229 ($generated@@229 $generated@@637 $generated@@626) $generated@@627) ($generated@@284 ($generated@@251 ($generated@@11 true))))) ($generated@@249 3)) (and (=> (= (ControlFlow 0 6) 4) $generated@@645) (=> (= (ControlFlow 0 6) 5) $generated@@644))))))))))))))
(let (($generated@@647  (=> (and (and ($generated@@255 $generated@@633) ($generated@@638 $generated@@633)) (and (<= ($generated@@249 0) $generated@@628) (<= ($generated@@249 0) $generated@@629))) (=> (and (and (and (and ($generated@@132 $generated@@639 ($generated@@153 $generated@@44)) ($generated@@74 $generated@@639 ($generated@@153 $generated@@44) $generated@@633)) true) (and (and ($generated@@132 $generated@@640 ($generated@@153 $generated@@44)) ($generated@@74 $generated@@640 ($generated@@153 $generated@@44) $generated@@633)) true)) (and (and (and ($generated@@132 $generated@@641 ($generated@@153 $generated@@44)) ($generated@@74 $generated@@641 ($generated@@153 $generated@@44) $generated@@633)) true) (and (= 1 $generated@@642) (= (ControlFlow 0 10) 6)))) $generated@@646))))
$generated@@647))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@420 () T@T)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@334))))
 (=> (and (= (type $generated@@334) ($generated@@76 $generated@@336 $generated@@2)) (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@2))) (= ($generated@@333 $generated@@334 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (= ($generated ($generated@@81 $generated@@334 $generated@@337)) ($generated ($generated@@81 $generated@@335 $generated@@337))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@145) ($generated@@0 ($generated@@81 $generated@@338 $generated@@341))) ($generated@@238 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@81 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@238 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@347) $generated@@346)) 0))
 :pattern ( (let (($generated@@347 (type $generated@@346)))
($generated@@81 ($generated@@264 $generated@@347) $generated@@346)))
)))
(assert  (and (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@348 $generated@@351)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@348 $generated@@351))
)) (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@349 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@349 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@273 (type $generated@@354))))
(let (($generated@@356 ($generated@@272 (type $generated@@354))))
(= (type ($generated@@350 $generated@@354)) ($generated@@76 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@350 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@358) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358)))) (= ($generated@@81 ($generated@@350 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@358))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@291 (type $generated@@362))))
(let (($generated@@364 ($generated@@290 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@76 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@366) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366)))) (= ($generated@@81 ($generated@@360 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@366))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@272 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@271 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@290 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@289 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@372) $generated@@376))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@64)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))) (and ($generated@@238 ($generated@@81 ($generated@@350 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@238 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@64)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))) (and ($generated@@238 ($generated@@81 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@238 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@79 (type $generated@@393))))
 (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@395 $generated@@2)) (= (type $generated@@394) ($generated@@76 $generated@@395 $generated@@2))) ($generated@@333 $generated@@393 $generated@@394)) (= $generated@@393 $generated@@394)))
 :pattern ( ($generated@@333 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@291 (type $generated@@398))))
(let (($generated@@400 ($generated@@290 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@289 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@288 $generated@@400 $generated@@399)) (= ($generated@@287 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@287 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@291 (type $generated@@401))))
(let (($generated@@403 ($generated@@290 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@289 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@288 $generated@@403 $generated@@402)) (= ($generated@@323 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@323 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (= ($generated@@359 $generated@@404) ($generated@@396 $generated@@145))))))
 :pattern ( ($generated@@359 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@273 (type $generated@@407))))
(let (($generated@@409 ($generated@@272 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@271 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@270 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@145) (= (type $generated@@411) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@407) ($generated@@258 ($generated@@211 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@348 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@291 (type $generated@@412))))
(let (($generated@@414 ($generated@@290 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@289 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@288 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@145) (= (type $generated@@416) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@412) ($generated@@258 ($generated@@211 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@46)) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@349 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@47)) (and (= ($generated@@258 ($generated@@349 $generated@@3 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@349 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@44)) (and (= ($generated@@258 ($generated@@349 $generated@@4 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@349 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@420) 20))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@45)) (and (= ($generated@@258 ($generated@@349 $generated@@420 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@349 $generated@@420 $generated@@421) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@45))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@422) $generated@@423) ($generated@@132 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@79 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@76 $generated@@425 $generated@@2)) (<= 0 ($generated@@263 $generated@@424))))
 :pattern ( ($generated@@263 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@253 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@252 $generated@@427)) (<= 0 ($generated@@251 $generated@@426))))
 :pattern ( ($generated@@251 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@377 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@377 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@377 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@377 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@377 $generated@@436 $generated@@437)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@385 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@385 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@385 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@72 ($generated@@385 $generated@@446 $generated@@447)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@448 $generated@@449)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@135 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@135 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@135 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@135 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@211 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (! (let (($generated@@467 ($generated@@253 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465 $generated@@466)) $generated@@467))
 :pattern ( ($generated@@463 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@252 $generated@@145)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@251 $generated@@468))) ($generated@@238 ($generated@@463 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@463 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@75 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@75 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@221 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@221 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@226 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@226 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@150 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@150 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@462 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@462 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@462 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@462 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@349 $generated@@491 ($generated@@258 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@258 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) $generated@@64)) (= ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))) (and ($generated@@212 ($generated@@81 ($generated@@350 $generated@@492) $generated@@495) $generated@@494) ($generated@@212 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@492) $generated@@495))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) (= ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))) (and ($generated@@212 ($generated@@81 ($generated@@360 $generated@@496) $generated@@499) $generated@@498) ($generated@@212 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@496) $generated@@499))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@145)) (< ($generated@@500 $generated@@502) ($generated@@501 ($generated@@211 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@211 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@145)) (< ($generated@@500 $generated@@505) ($generated@@501 ($generated@@211 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@211 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508))) (and (= ($generated@@258 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506)) $generated@@506) ($generated@@132 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506) ($generated@@377 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511))) (and (= ($generated@@258 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509)) $generated@@509) ($generated@@132 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509) ($generated@@385 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@145)) ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513))) (and (= ($generated@@258 ($generated@@349 $generated@@136 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@349 $generated@@136 $generated@@514) ($generated@@135 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
 (not ($generated@@0 ($generated@@81 ($generated@@396 $generated@@516) $generated@@515))))
 :pattern ( (let (($generated@@516 (type $generated@@515)))
($generated@@81 ($generated@@396 $generated@@516) $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@519 $generated@@520)) $generated@@62) (= ($generated@@517 ($generated@@135 $generated@@519 $generated@@520)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@136) (= ($generated@@500 ($generated@@258 $generated@@521)) ($generated@@501 $generated@@521)))
 :pattern ( ($generated@@500 ($generated@@258 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@212 $generated@@522 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@75 0)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@64)) ($generated@@212 $generated@@523 ($generated@@221 $generated@@524))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523)) $generated@@523) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523) ($generated@@221 $generated@@524))))
 :pattern ( ($generated@@212 $generated@@523 ($generated@@221 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) ($generated@@212 $generated@@525 ($generated@@226 $generated@@526))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525) ($generated@@226 $generated@@526))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@226 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@150 $generated@@528))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527) ($generated@@150 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@150 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@462 $generated@@530))) (and (= ($generated@@258 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529) ($generated@@462 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@462 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@531 $generated@@534)))) ($generated@@238 $generated@@534 $generated@@532 $generated@@533))
 :pattern ( ($generated@@81 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@136) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@537) (and ($generated@@134 $generated@@535) (exists (($generated@@538 T@U) ) (!  (and (= (type $generated@@538) $generated@@64) ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
))))) ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
))))) ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)) ($generated@@233 ($generated@@211 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@545))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))))
)))
(assert (forall (($generated@@546 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@546)) ($generated@@233 ($generated@@258 $generated@@546)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@253 (type $generated@@547))))
 (=> (and (= (type $generated@@547) ($generated@@252 $generated@@548)) (= ($generated@@251 $generated@@547) 0)) (= $generated@@547 ($generated@@250 $generated@@548))))
 :pattern ( ($generated@@251 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@550)))
 (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@2)) (= (type $generated@@551) $generated@@2)) (<= 0 ($generated $generated@@551))) (= ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)) (+ (- ($generated@@263 $generated@@549) ($generated ($generated@@81 $generated@@549 $generated@@550))) ($generated $generated@@551)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@2)) ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@3)) ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@4)) ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@420)) ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@145)) ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@252 $generated@@145)) (= (type $generated@@564) $generated@@64)) (= ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@251 $generated@@563))) ($generated@@212 ($generated@@463 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@463 $generated@@563 $generated@@565))
))))
 :pattern ( ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (= (type $generated@@567) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@251 $generated@@567))) (< ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))) ($generated@@566 $generated@@567))))
 :pattern ( ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571))) (and (and ($generated@@132 ($generated@@269 $generated@@569) ($generated@@221 $generated@@570)) ($generated@@132 ($generated@@312 $generated@@569) ($generated@@221 $generated@@571))) ($generated@@132 ($generated@@348 $generated@@569) ($generated@@221 ($generated@@135 $generated@@570 $generated@@571)))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@287 $generated@@572) ($generated@@226 $generated@@573)) ($generated@@132 ($generated@@323 $generated@@572) ($generated@@226 $generated@@574))) ($generated@@132 ($generated@@359 $generated@@572) ($generated@@226 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) ($generated@@132 $generated@@575 $generated@@46))
 :pattern ( ($generated@@132 $generated@@575 $generated@@46))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@3) ($generated@@132 $generated@@576 $generated@@47))
 :pattern ( ($generated@@132 $generated@@576 $generated@@47))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@4) ($generated@@132 $generated@@577 $generated@@44))
 :pattern ( ($generated@@132 $generated@@577 $generated@@44))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@420) ($generated@@132 $generated@@578 $generated@@45))
 :pattern ( ($generated@@132 $generated@@578 $generated@@45))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@145) ($generated@@132 $generated@@579 $generated@@48))
 :pattern ( ($generated@@132 $generated@@579 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () Int)
(assert  (and (and (and (= (type $generated@@580) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@581) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@582) $generated@@77)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@586 true))
(let (($generated@@587  (=> (= (ControlFlow 0 12) (- 0 11)) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@2) (> ($generated ($generated@@81 $generated@@580 ($generated@@258 $generated@@588))) 0))
 :pattern ( ($generated@@81 $generated@@580 ($generated@@258 $generated@@588)))
)))))
(let (($generated@@589  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 14) 12) $generated@@587) (=> (= (ControlFlow 0 14) 13) $generated@@586)))))
(let (($generated@@590 true))
(let (($generated@@591  (=> (= (ControlFlow 0 8) (- 0 7)) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (> ($generated ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 ($generated@@231 0))))) 0)) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@2) (> ($generated ($generated@@81 $generated@@580 ($generated@@258 $generated@@592))) 0))
 :no-pattern (type $generated@@592)
 :no-pattern ($generated $generated@@592)
 :no-pattern ($generated@@0 $generated@@592)
))))))
(let (($generated@@593  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 10) 8) $generated@@591) (=> (= (ControlFlow 0 10) 9) $generated@@590)))))
(let (($generated@@594  (=> (and (and (and (and (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@595  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 4) (- 0 3))) (not (= ($generated@@263 $generated@@580) 0)))))
(let (($generated@@596  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@333 $generated@@580 ($generated@@264 $generated@@145))))))
(let (($generated@@597  (=> (= $generated@@581 ($generated@@156 $generated@@582 $generated@@583 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 15) 2) $generated@@596) (=> (= (ControlFlow 0 15) 4) $generated@@595)) (=> (= (ControlFlow 0 15) 14) $generated@@589)) (=> (= (ControlFlow 0 15) 10) $generated@@593)) (=> (= (ControlFlow 0 15) 6) $generated@@594)))))
(let (($generated@@598  (=> (and ($generated@@237 $generated@@583) ($generated@@584 $generated@@583)) (=> (and (and (and ($generated@@132 $generated@@580 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@580 ($generated@@150 $generated@@46) $generated@@583)) (= 0 $generated@@585)) (and (not ($generated@@333 $generated@@580 ($generated@@264 $generated@@145))) (= (ControlFlow 0 16) 15))) $generated@@597))))
$generated@@598))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@420 () T@T)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@334))))
 (=> (and (= (type $generated@@334) ($generated@@76 $generated@@336 $generated@@2)) (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@2))) (= ($generated@@333 $generated@@334 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (= ($generated ($generated@@81 $generated@@334 $generated@@337)) ($generated ($generated@@81 $generated@@335 $generated@@337))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@145) ($generated@@0 ($generated@@81 $generated@@338 $generated@@341))) ($generated@@238 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@81 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@238 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@347) $generated@@346)) 0))
 :pattern ( (let (($generated@@347 (type $generated@@346)))
($generated@@81 ($generated@@264 $generated@@347) $generated@@346)))
)))
(assert  (and (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@348 $generated@@351)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@348 $generated@@351))
)) (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@349 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@349 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@273 (type $generated@@354))))
(let (($generated@@356 ($generated@@272 (type $generated@@354))))
(= (type ($generated@@350 $generated@@354)) ($generated@@76 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@350 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@358) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358)))) (= ($generated@@81 ($generated@@350 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@358))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@291 (type $generated@@362))))
(let (($generated@@364 ($generated@@290 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@76 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@366) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366)))) (= ($generated@@81 ($generated@@360 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@366))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@272 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@271 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@290 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@289 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@372) $generated@@376))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@64)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))) (and ($generated@@238 ($generated@@81 ($generated@@350 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@238 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@64)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))) (and ($generated@@238 ($generated@@81 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@238 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@79 (type $generated@@393))))
 (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@395 $generated@@2)) (= (type $generated@@394) ($generated@@76 $generated@@395 $generated@@2))) ($generated@@333 $generated@@393 $generated@@394)) (= $generated@@393 $generated@@394)))
 :pattern ( ($generated@@333 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@291 (type $generated@@398))))
(let (($generated@@400 ($generated@@290 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@289 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@288 $generated@@400 $generated@@399)) (= ($generated@@287 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@287 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@291 (type $generated@@401))))
(let (($generated@@403 ($generated@@290 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@289 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@288 $generated@@403 $generated@@402)) (= ($generated@@323 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@323 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (= ($generated@@359 $generated@@404) ($generated@@396 $generated@@145))))))
 :pattern ( ($generated@@359 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@273 (type $generated@@407))))
(let (($generated@@409 ($generated@@272 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@271 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@270 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@145) (= (type $generated@@411) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@407) ($generated@@258 ($generated@@211 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@348 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@291 (type $generated@@412))))
(let (($generated@@414 ($generated@@290 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@289 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@288 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@145) (= (type $generated@@416) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@412) ($generated@@258 ($generated@@211 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@46)) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@349 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@47)) (and (= ($generated@@258 ($generated@@349 $generated@@3 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@349 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@44)) (and (= ($generated@@258 ($generated@@349 $generated@@4 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@349 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@420) 20))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@45)) (and (= ($generated@@258 ($generated@@349 $generated@@420 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@349 $generated@@420 $generated@@421) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@45))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@422) $generated@@423) ($generated@@132 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@79 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@76 $generated@@425 $generated@@2)) (<= 0 ($generated@@263 $generated@@424))))
 :pattern ( ($generated@@263 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@253 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@252 $generated@@427)) (<= 0 ($generated@@251 $generated@@426))))
 :pattern ( ($generated@@251 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@377 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@377 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@377 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@377 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@377 $generated@@436 $generated@@437)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@385 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@385 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@385 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@72 ($generated@@385 $generated@@446 $generated@@447)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@448 $generated@@449)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@135 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@135 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@135 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@135 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@211 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (! (let (($generated@@467 ($generated@@253 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465 $generated@@466)) $generated@@467))
 :pattern ( ($generated@@463 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@252 $generated@@145)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@251 $generated@@468))) ($generated@@238 ($generated@@463 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@463 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@75 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@75 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@221 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@221 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@226 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@226 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@150 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@150 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@462 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@462 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@462 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@462 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@349 $generated@@491 ($generated@@258 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@258 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) $generated@@64)) (= ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))) (and ($generated@@212 ($generated@@81 ($generated@@350 $generated@@492) $generated@@495) $generated@@494) ($generated@@212 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@492) $generated@@495))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) (= ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))) (and ($generated@@212 ($generated@@81 ($generated@@360 $generated@@496) $generated@@499) $generated@@498) ($generated@@212 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@496) $generated@@499))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@145)) (< ($generated@@500 $generated@@502) ($generated@@501 ($generated@@211 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@211 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@145)) (< ($generated@@500 $generated@@505) ($generated@@501 ($generated@@211 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@211 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508))) (and (= ($generated@@258 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506)) $generated@@506) ($generated@@132 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506) ($generated@@377 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511))) (and (= ($generated@@258 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509)) $generated@@509) ($generated@@132 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509) ($generated@@385 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@145)) ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513))) (and (= ($generated@@258 ($generated@@349 $generated@@136 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@349 $generated@@136 $generated@@514) ($generated@@135 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
 (not ($generated@@0 ($generated@@81 ($generated@@396 $generated@@516) $generated@@515))))
 :pattern ( (let (($generated@@516 (type $generated@@515)))
($generated@@81 ($generated@@396 $generated@@516) $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@519 $generated@@520)) $generated@@62) (= ($generated@@517 ($generated@@135 $generated@@519 $generated@@520)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@136) (= ($generated@@500 ($generated@@258 $generated@@521)) ($generated@@501 $generated@@521)))
 :pattern ( ($generated@@500 ($generated@@258 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@212 $generated@@522 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@75 0)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@64)) ($generated@@212 $generated@@523 ($generated@@221 $generated@@524))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523)) $generated@@523) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523) ($generated@@221 $generated@@524))))
 :pattern ( ($generated@@212 $generated@@523 ($generated@@221 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) ($generated@@212 $generated@@525 ($generated@@226 $generated@@526))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525) ($generated@@226 $generated@@526))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@226 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@150 $generated@@528))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527) ($generated@@150 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@150 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@462 $generated@@530))) (and (= ($generated@@258 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529) ($generated@@462 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@462 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@531 $generated@@534)))) ($generated@@238 $generated@@534 $generated@@532 $generated@@533))
 :pattern ( ($generated@@81 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@136) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@537) (and ($generated@@134 $generated@@535) (exists (($generated@@538 T@U) ) (!  (and (= (type $generated@@538) $generated@@64) ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
))))) ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
))))) ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)) ($generated@@233 ($generated@@211 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@545))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))))
)))
(assert (forall (($generated@@546 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@546)) ($generated@@233 ($generated@@258 $generated@@546)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@253 (type $generated@@547))))
 (=> (and (= (type $generated@@547) ($generated@@252 $generated@@548)) (= ($generated@@251 $generated@@547) 0)) (= $generated@@547 ($generated@@250 $generated@@548))))
 :pattern ( ($generated@@251 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@550)))
 (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@2)) (= (type $generated@@551) $generated@@2)) (<= 0 ($generated $generated@@551))) (= ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)) (+ (- ($generated@@263 $generated@@549) ($generated ($generated@@81 $generated@@549 $generated@@550))) ($generated $generated@@551)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@2)) ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@3)) ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@4)) ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@420)) ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@145)) ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@252 $generated@@145)) (= (type $generated@@564) $generated@@64)) (= ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@251 $generated@@563))) ($generated@@212 ($generated@@463 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@463 $generated@@563 $generated@@565))
))))
 :pattern ( ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (= (type $generated@@567) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@251 $generated@@567))) (< ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))) ($generated@@566 $generated@@567))))
 :pattern ( ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571))) (and (and ($generated@@132 ($generated@@269 $generated@@569) ($generated@@221 $generated@@570)) ($generated@@132 ($generated@@312 $generated@@569) ($generated@@221 $generated@@571))) ($generated@@132 ($generated@@348 $generated@@569) ($generated@@221 ($generated@@135 $generated@@570 $generated@@571)))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@287 $generated@@572) ($generated@@226 $generated@@573)) ($generated@@132 ($generated@@323 $generated@@572) ($generated@@226 $generated@@574))) ($generated@@132 ($generated@@359 $generated@@572) ($generated@@226 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) ($generated@@132 $generated@@575 $generated@@46))
 :pattern ( ($generated@@132 $generated@@575 $generated@@46))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@3) ($generated@@132 $generated@@576 $generated@@47))
 :pattern ( ($generated@@132 $generated@@576 $generated@@47))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@4) ($generated@@132 $generated@@577 $generated@@44))
 :pattern ( ($generated@@132 $generated@@577 $generated@@44))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@420) ($generated@@132 $generated@@578 $generated@@45))
 :pattern ( ($generated@@132 $generated@@578 $generated@@45))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@145) ($generated@@132 $generated@@579 $generated@@48))
 :pattern ( ($generated@@132 $generated@@579 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () Int)
(assert  (and (and (and (= (type $generated@@580) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@581) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@582) $generated@@77)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@586 true))
(let (($generated@@587  (=> (= (ControlFlow 0 12) (- 0 11)) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@2) (> ($generated ($generated@@81 $generated@@580 ($generated@@258 $generated@@588))) 0))
 :pattern ( ($generated@@81 $generated@@580 ($generated@@258 $generated@@588)))
)))))
(let (($generated@@589  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 14) 12) $generated@@587) (=> (= (ControlFlow 0 14) 13) $generated@@586)))))
(let (($generated@@590 true))
(let (($generated@@591  (=> (= (ControlFlow 0 8) (- 0 7)) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (> ($generated ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 ($generated@@231 0))))) 0)) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@2) (> ($generated ($generated@@81 $generated@@580 ($generated@@258 $generated@@592))) 0))
 :no-pattern (type $generated@@592)
 :no-pattern ($generated $generated@@592)
 :no-pattern ($generated@@0 $generated@@592)
))))))
(let (($generated@@593  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 10) 8) $generated@@591) (=> (= (ControlFlow 0 10) 9) $generated@@590)))))
(let (($generated@@594  (=> (and (and (and (and (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@595  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 4) (- 0 3))) (not (= ($generated@@263 $generated@@580) 0)))))
(let (($generated@@596  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@333 $generated@@580 ($generated@@264 $generated@@145))))))
(let (($generated@@597  (=> (= $generated@@581 ($generated@@156 $generated@@582 $generated@@583 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 15) 2) $generated@@596) (=> (= (ControlFlow 0 15) 4) $generated@@595)) (=> (= (ControlFlow 0 15) 14) $generated@@589)) (=> (= (ControlFlow 0 15) 10) $generated@@593)) (=> (= (ControlFlow 0 15) 6) $generated@@594)))))
(let (($generated@@598  (=> (and ($generated@@237 $generated@@583) ($generated@@584 $generated@@583)) (=> (and (and (and ($generated@@132 $generated@@580 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@580 ($generated@@150 $generated@@46) $generated@@583)) (= 0 $generated@@585)) (and (not (= ($generated@@263 $generated@@580) 0)) (= (ControlFlow 0 16) 15))) $generated@@597))))
$generated@@598))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@420 () T@T)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@334))))
 (=> (and (= (type $generated@@334) ($generated@@76 $generated@@336 $generated@@2)) (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@2))) (= ($generated@@333 $generated@@334 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (= ($generated ($generated@@81 $generated@@334 $generated@@337)) ($generated ($generated@@81 $generated@@335 $generated@@337))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@145) ($generated@@0 ($generated@@81 $generated@@338 $generated@@341))) ($generated@@238 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@81 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@238 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@347) $generated@@346)) 0))
 :pattern ( (let (($generated@@347 (type $generated@@346)))
($generated@@81 ($generated@@264 $generated@@347) $generated@@346)))
)))
(assert  (and (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@348 $generated@@351)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@348 $generated@@351))
)) (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@349 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@349 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@273 (type $generated@@354))))
(let (($generated@@356 ($generated@@272 (type $generated@@354))))
(= (type ($generated@@350 $generated@@354)) ($generated@@76 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@350 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@358) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358)))) (= ($generated@@81 ($generated@@350 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@358))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@291 (type $generated@@362))))
(let (($generated@@364 ($generated@@290 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@76 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@366) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366)))) (= ($generated@@81 ($generated@@360 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@366))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@272 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@271 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@290 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@289 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@372) $generated@@376))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@64)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))) (and ($generated@@238 ($generated@@81 ($generated@@350 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@238 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@64)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))) (and ($generated@@238 ($generated@@81 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@238 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@79 (type $generated@@393))))
 (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@395 $generated@@2)) (= (type $generated@@394) ($generated@@76 $generated@@395 $generated@@2))) ($generated@@333 $generated@@393 $generated@@394)) (= $generated@@393 $generated@@394)))
 :pattern ( ($generated@@333 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@291 (type $generated@@398))))
(let (($generated@@400 ($generated@@290 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@289 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@288 $generated@@400 $generated@@399)) (= ($generated@@287 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@287 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@291 (type $generated@@401))))
(let (($generated@@403 ($generated@@290 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@289 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@288 $generated@@403 $generated@@402)) (= ($generated@@323 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@323 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (= ($generated@@359 $generated@@404) ($generated@@396 $generated@@145))))))
 :pattern ( ($generated@@359 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@273 (type $generated@@407))))
(let (($generated@@409 ($generated@@272 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@271 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@270 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@145) (= (type $generated@@411) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@407) ($generated@@258 ($generated@@211 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@348 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@291 (type $generated@@412))))
(let (($generated@@414 ($generated@@290 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@289 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@288 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@145) (= (type $generated@@416) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@412) ($generated@@258 ($generated@@211 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@46)) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@349 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@47)) (and (= ($generated@@258 ($generated@@349 $generated@@3 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@349 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@44)) (and (= ($generated@@258 ($generated@@349 $generated@@4 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@349 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@420) 20))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@45)) (and (= ($generated@@258 ($generated@@349 $generated@@420 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@349 $generated@@420 $generated@@421) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@45))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@422) $generated@@423) ($generated@@132 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@79 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@76 $generated@@425 $generated@@2)) (<= 0 ($generated@@263 $generated@@424))))
 :pattern ( ($generated@@263 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@253 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@252 $generated@@427)) (<= 0 ($generated@@251 $generated@@426))))
 :pattern ( ($generated@@251 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@377 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@377 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@377 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@377 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@377 $generated@@436 $generated@@437)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@385 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@385 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@385 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@72 ($generated@@385 $generated@@446 $generated@@447)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@448 $generated@@449)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@135 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@135 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@135 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@135 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@211 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (! (let (($generated@@467 ($generated@@253 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465 $generated@@466)) $generated@@467))
 :pattern ( ($generated@@463 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@252 $generated@@145)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@251 $generated@@468))) ($generated@@238 ($generated@@463 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@463 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@75 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@75 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@221 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@221 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@226 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@226 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@150 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@150 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@462 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@462 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@462 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@462 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@349 $generated@@491 ($generated@@258 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@258 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) $generated@@64)) (= ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))) (and ($generated@@212 ($generated@@81 ($generated@@350 $generated@@492) $generated@@495) $generated@@494) ($generated@@212 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@492) $generated@@495))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) (= ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))) (and ($generated@@212 ($generated@@81 ($generated@@360 $generated@@496) $generated@@499) $generated@@498) ($generated@@212 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@496) $generated@@499))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@145)) (< ($generated@@500 $generated@@502) ($generated@@501 ($generated@@211 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@211 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@145)) (< ($generated@@500 $generated@@505) ($generated@@501 ($generated@@211 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@211 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508))) (and (= ($generated@@258 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506)) $generated@@506) ($generated@@132 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506) ($generated@@377 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511))) (and (= ($generated@@258 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509)) $generated@@509) ($generated@@132 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509) ($generated@@385 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@145)) ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513))) (and (= ($generated@@258 ($generated@@349 $generated@@136 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@349 $generated@@136 $generated@@514) ($generated@@135 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
 (not ($generated@@0 ($generated@@81 ($generated@@396 $generated@@516) $generated@@515))))
 :pattern ( (let (($generated@@516 (type $generated@@515)))
($generated@@81 ($generated@@396 $generated@@516) $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@519 $generated@@520)) $generated@@62) (= ($generated@@517 ($generated@@135 $generated@@519 $generated@@520)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@136) (= ($generated@@500 ($generated@@258 $generated@@521)) ($generated@@501 $generated@@521)))
 :pattern ( ($generated@@500 ($generated@@258 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@212 $generated@@522 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@75 0)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@64)) ($generated@@212 $generated@@523 ($generated@@221 $generated@@524))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523)) $generated@@523) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523) ($generated@@221 $generated@@524))))
 :pattern ( ($generated@@212 $generated@@523 ($generated@@221 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) ($generated@@212 $generated@@525 ($generated@@226 $generated@@526))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525) ($generated@@226 $generated@@526))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@226 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@150 $generated@@528))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527) ($generated@@150 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@150 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@462 $generated@@530))) (and (= ($generated@@258 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529) ($generated@@462 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@462 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@531 $generated@@534)))) ($generated@@238 $generated@@534 $generated@@532 $generated@@533))
 :pattern ( ($generated@@81 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@136) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@537) (and ($generated@@134 $generated@@535) (exists (($generated@@538 T@U) ) (!  (and (= (type $generated@@538) $generated@@64) ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
))))) ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
))))) ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)) ($generated@@233 ($generated@@211 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@545))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))))
)))
(assert (forall (($generated@@546 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@546)) ($generated@@233 ($generated@@258 $generated@@546)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@253 (type $generated@@547))))
 (=> (and (= (type $generated@@547) ($generated@@252 $generated@@548)) (= ($generated@@251 $generated@@547) 0)) (= $generated@@547 ($generated@@250 $generated@@548))))
 :pattern ( ($generated@@251 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@550)))
 (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@2)) (= (type $generated@@551) $generated@@2)) (<= 0 ($generated $generated@@551))) (= ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)) (+ (- ($generated@@263 $generated@@549) ($generated ($generated@@81 $generated@@549 $generated@@550))) ($generated $generated@@551)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@2)) ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@3)) ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@4)) ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@420)) ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@145)) ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@252 $generated@@145)) (= (type $generated@@564) $generated@@64)) (= ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@251 $generated@@563))) ($generated@@212 ($generated@@463 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@463 $generated@@563 $generated@@565))
))))
 :pattern ( ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (= (type $generated@@567) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@251 $generated@@567))) (< ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))) ($generated@@566 $generated@@567))))
 :pattern ( ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571))) (and (and ($generated@@132 ($generated@@269 $generated@@569) ($generated@@221 $generated@@570)) ($generated@@132 ($generated@@312 $generated@@569) ($generated@@221 $generated@@571))) ($generated@@132 ($generated@@348 $generated@@569) ($generated@@221 ($generated@@135 $generated@@570 $generated@@571)))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@287 $generated@@572) ($generated@@226 $generated@@573)) ($generated@@132 ($generated@@323 $generated@@572) ($generated@@226 $generated@@574))) ($generated@@132 ($generated@@359 $generated@@572) ($generated@@226 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) ($generated@@132 $generated@@575 $generated@@46))
 :pattern ( ($generated@@132 $generated@@575 $generated@@46))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@3) ($generated@@132 $generated@@576 $generated@@47))
 :pattern ( ($generated@@132 $generated@@576 $generated@@47))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@4) ($generated@@132 $generated@@577 $generated@@44))
 :pattern ( ($generated@@132 $generated@@577 $generated@@44))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@420) ($generated@@132 $generated@@578 $generated@@45))
 :pattern ( ($generated@@132 $generated@@578 $generated@@45))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@145) ($generated@@132 $generated@@579 $generated@@48))
 :pattern ( ($generated@@132 $generated@@579 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () Int)
(assert  (and (and (and (= (type $generated@@580) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@581) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@582) $generated@@77)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@586 true))
(let (($generated@@587  (=> (= (ControlFlow 0 12) (- 0 11)) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@2) (> ($generated ($generated@@81 $generated@@580 ($generated@@258 $generated@@588))) 0))
 :pattern ( ($generated@@81 $generated@@580 ($generated@@258 $generated@@588)))
)))))
(let (($generated@@589  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 14) 12) $generated@@587) (=> (= (ControlFlow 0 14) 13) $generated@@586)))))
(let (($generated@@590 true))
(let (($generated@@591  (=> (= (ControlFlow 0 8) (- 0 7)) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (> ($generated ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 ($generated@@231 0))))) 0)) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@2) (> ($generated ($generated@@81 $generated@@580 ($generated@@258 $generated@@592))) 0))
 :no-pattern (type $generated@@592)
 :no-pattern ($generated $generated@@592)
 :no-pattern ($generated@@0 $generated@@592)
))))))
(let (($generated@@593  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 10) 8) $generated@@591) (=> (= (ControlFlow 0 10) 9) $generated@@590)))))
(let (($generated@@594  (=> (and (and (and (and (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@595  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 4) (- 0 3))) (not (= ($generated@@263 $generated@@580) 0)))))
(let (($generated@@596  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@333 $generated@@580 ($generated@@264 $generated@@145))))))
(let (($generated@@597  (=> (= $generated@@581 ($generated@@156 $generated@@582 $generated@@583 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 15) 2) $generated@@596) (=> (= (ControlFlow 0 15) 4) $generated@@595)) (=> (= (ControlFlow 0 15) 14) $generated@@589)) (=> (= (ControlFlow 0 15) 10) $generated@@593)) (=> (= (ControlFlow 0 15) 6) $generated@@594)))))
(let (($generated@@598  (=> (and ($generated@@237 $generated@@583) ($generated@@584 $generated@@583)) (=> (and (and (and ($generated@@132 $generated@@580 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@580 ($generated@@150 $generated@@46) $generated@@583)) (= 0 $generated@@585)) (and (exists (($generated@@599 Int) ) (! (> ($generated ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 $generated@@599)))) 0)
 :pattern ( ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 $generated@@599))))
)) (= (ControlFlow 0 16) 15))) $generated@@597))))
$generated@@598))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@420 () T@T)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@334))))
 (=> (and (= (type $generated@@334) ($generated@@76 $generated@@336 $generated@@2)) (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@2))) (= ($generated@@333 $generated@@334 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (= ($generated ($generated@@81 $generated@@334 $generated@@337)) ($generated ($generated@@81 $generated@@335 $generated@@337))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@145) ($generated@@0 ($generated@@81 $generated@@338 $generated@@341))) ($generated@@238 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@81 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@238 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@347) $generated@@346)) 0))
 :pattern ( (let (($generated@@347 (type $generated@@346)))
($generated@@81 ($generated@@264 $generated@@347) $generated@@346)))
)))
(assert  (and (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@348 $generated@@351)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@348 $generated@@351))
)) (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@349 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@349 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@273 (type $generated@@354))))
(let (($generated@@356 ($generated@@272 (type $generated@@354))))
(= (type ($generated@@350 $generated@@354)) ($generated@@76 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@350 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@358) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358)))) (= ($generated@@81 ($generated@@350 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@358))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@291 (type $generated@@362))))
(let (($generated@@364 ($generated@@290 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@76 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@366) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366)))) (= ($generated@@81 ($generated@@360 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@366))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@272 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@271 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@290 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@289 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@372) $generated@@376))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@64)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))) (and ($generated@@238 ($generated@@81 ($generated@@350 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@238 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@64)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))) (and ($generated@@238 ($generated@@81 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@238 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@79 (type $generated@@393))))
 (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@395 $generated@@2)) (= (type $generated@@394) ($generated@@76 $generated@@395 $generated@@2))) ($generated@@333 $generated@@393 $generated@@394)) (= $generated@@393 $generated@@394)))
 :pattern ( ($generated@@333 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@291 (type $generated@@398))))
(let (($generated@@400 ($generated@@290 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@289 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@288 $generated@@400 $generated@@399)) (= ($generated@@287 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@287 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@291 (type $generated@@401))))
(let (($generated@@403 ($generated@@290 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@289 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@288 $generated@@403 $generated@@402)) (= ($generated@@323 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@323 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (= ($generated@@359 $generated@@404) ($generated@@396 $generated@@145))))))
 :pattern ( ($generated@@359 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@273 (type $generated@@407))))
(let (($generated@@409 ($generated@@272 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@271 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@270 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@145) (= (type $generated@@411) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@407) ($generated@@258 ($generated@@211 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@348 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@291 (type $generated@@412))))
(let (($generated@@414 ($generated@@290 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@289 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@288 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@145) (= (type $generated@@416) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@412) ($generated@@258 ($generated@@211 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@46)) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@349 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@47)) (and (= ($generated@@258 ($generated@@349 $generated@@3 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@349 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@44)) (and (= ($generated@@258 ($generated@@349 $generated@@4 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@349 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@420) 20))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@45)) (and (= ($generated@@258 ($generated@@349 $generated@@420 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@349 $generated@@420 $generated@@421) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@45))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@422) $generated@@423) ($generated@@132 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@79 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@76 $generated@@425 $generated@@2)) (<= 0 ($generated@@263 $generated@@424))))
 :pattern ( ($generated@@263 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@253 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@252 $generated@@427)) (<= 0 ($generated@@251 $generated@@426))))
 :pattern ( ($generated@@251 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@377 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@377 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@377 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@377 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@377 $generated@@436 $generated@@437)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@385 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@385 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@385 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@72 ($generated@@385 $generated@@446 $generated@@447)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@448 $generated@@449)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@135 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@135 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@135 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@135 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@211 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (! (let (($generated@@467 ($generated@@253 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465 $generated@@466)) $generated@@467))
 :pattern ( ($generated@@463 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@252 $generated@@145)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@251 $generated@@468))) ($generated@@238 ($generated@@463 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@463 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@75 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@75 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@221 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@221 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@226 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@226 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@150 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@150 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@462 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@462 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@462 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@462 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@349 $generated@@491 ($generated@@258 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@258 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) $generated@@64)) (= ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))) (and ($generated@@212 ($generated@@81 ($generated@@350 $generated@@492) $generated@@495) $generated@@494) ($generated@@212 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@492) $generated@@495))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) (= ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))) (and ($generated@@212 ($generated@@81 ($generated@@360 $generated@@496) $generated@@499) $generated@@498) ($generated@@212 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@496) $generated@@499))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@145)) (< ($generated@@500 $generated@@502) ($generated@@501 ($generated@@211 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@211 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@145)) (< ($generated@@500 $generated@@505) ($generated@@501 ($generated@@211 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@211 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508))) (and (= ($generated@@258 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506)) $generated@@506) ($generated@@132 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506) ($generated@@377 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511))) (and (= ($generated@@258 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509)) $generated@@509) ($generated@@132 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509) ($generated@@385 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@145)) ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513))) (and (= ($generated@@258 ($generated@@349 $generated@@136 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@349 $generated@@136 $generated@@514) ($generated@@135 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
 (not ($generated@@0 ($generated@@81 ($generated@@396 $generated@@516) $generated@@515))))
 :pattern ( (let (($generated@@516 (type $generated@@515)))
($generated@@81 ($generated@@396 $generated@@516) $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@519 $generated@@520)) $generated@@62) (= ($generated@@517 ($generated@@135 $generated@@519 $generated@@520)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@136) (= ($generated@@500 ($generated@@258 $generated@@521)) ($generated@@501 $generated@@521)))
 :pattern ( ($generated@@500 ($generated@@258 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@212 $generated@@522 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@75 0)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@64)) ($generated@@212 $generated@@523 ($generated@@221 $generated@@524))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523)) $generated@@523) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523) ($generated@@221 $generated@@524))))
 :pattern ( ($generated@@212 $generated@@523 ($generated@@221 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) ($generated@@212 $generated@@525 ($generated@@226 $generated@@526))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525) ($generated@@226 $generated@@526))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@226 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@150 $generated@@528))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527) ($generated@@150 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@150 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@462 $generated@@530))) (and (= ($generated@@258 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529) ($generated@@462 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@462 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@531 $generated@@534)))) ($generated@@238 $generated@@534 $generated@@532 $generated@@533))
 :pattern ( ($generated@@81 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@136) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@537) (and ($generated@@134 $generated@@535) (exists (($generated@@538 T@U) ) (!  (and (= (type $generated@@538) $generated@@64) ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
))))) ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
))))) ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)) ($generated@@233 ($generated@@211 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@545))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))))
)))
(assert (forall (($generated@@546 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@546)) ($generated@@233 ($generated@@258 $generated@@546)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@253 (type $generated@@547))))
 (=> (and (= (type $generated@@547) ($generated@@252 $generated@@548)) (= ($generated@@251 $generated@@547) 0)) (= $generated@@547 ($generated@@250 $generated@@548))))
 :pattern ( ($generated@@251 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@550)))
 (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@2)) (= (type $generated@@551) $generated@@2)) (<= 0 ($generated $generated@@551))) (= ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)) (+ (- ($generated@@263 $generated@@549) ($generated ($generated@@81 $generated@@549 $generated@@550))) ($generated $generated@@551)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@2)) ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@3)) ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@4)) ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@420)) ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@145)) ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@252 $generated@@145)) (= (type $generated@@564) $generated@@64)) (= ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@251 $generated@@563))) ($generated@@212 ($generated@@463 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@463 $generated@@563 $generated@@565))
))))
 :pattern ( ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (= (type $generated@@567) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@251 $generated@@567))) (< ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))) ($generated@@566 $generated@@567))))
 :pattern ( ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571))) (and (and ($generated@@132 ($generated@@269 $generated@@569) ($generated@@221 $generated@@570)) ($generated@@132 ($generated@@312 $generated@@569) ($generated@@221 $generated@@571))) ($generated@@132 ($generated@@348 $generated@@569) ($generated@@221 ($generated@@135 $generated@@570 $generated@@571)))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@287 $generated@@572) ($generated@@226 $generated@@573)) ($generated@@132 ($generated@@323 $generated@@572) ($generated@@226 $generated@@574))) ($generated@@132 ($generated@@359 $generated@@572) ($generated@@226 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) ($generated@@132 $generated@@575 $generated@@46))
 :pattern ( ($generated@@132 $generated@@575 $generated@@46))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@3) ($generated@@132 $generated@@576 $generated@@47))
 :pattern ( ($generated@@132 $generated@@576 $generated@@47))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@4) ($generated@@132 $generated@@577 $generated@@44))
 :pattern ( ($generated@@132 $generated@@577 $generated@@44))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@420) ($generated@@132 $generated@@578 $generated@@45))
 :pattern ( ($generated@@132 $generated@@578 $generated@@45))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@145) ($generated@@132 $generated@@579 $generated@@48))
 :pattern ( ($generated@@132 $generated@@579 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () Int)
(assert  (and (and (and (= (type $generated@@580) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@581) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@582) $generated@@77)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@586 true))
(let (($generated@@587  (=> (= (ControlFlow 0 12) (- 0 11)) (not (exists (($generated@@588 Int) ) (! (> ($generated ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 $generated@@588)))) 0)
 :pattern ( ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 $generated@@588))))
))))))
(let (($generated@@589  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 14) 12) $generated@@587) (=> (= (ControlFlow 0 14) 13) $generated@@586)))))
(let (($generated@@590 true))
(let (($generated@@591  (=> (= (ControlFlow 0 8) (- 0 7)) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (not (> ($generated ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 ($generated@@231 0))))) 0))) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@2) (not (> ($generated ($generated@@81 $generated@@580 ($generated@@258 $generated@@592))) 0)))
 :no-pattern (type $generated@@592)
 :no-pattern ($generated $generated@@592)
 :no-pattern ($generated@@0 $generated@@592)
))))))
(let (($generated@@593  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 10) 8) $generated@@591) (=> (= (ControlFlow 0 10) 9) $generated@@590)))))
(let (($generated@@594  (=> (and (and (and (and (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@595  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 4) (- 0 3))) (= ($generated@@263 $generated@@580) ($generated@@231 0)))))
(let (($generated@@596  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@333 $generated@@580 ($generated@@264 $generated@@145)))))
(let (($generated@@597  (=> (= $generated@@581 ($generated@@156 $generated@@582 $generated@@583 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 15) 2) $generated@@596) (=> (= (ControlFlow 0 15) 4) $generated@@595)) (=> (= (ControlFlow 0 15) 14) $generated@@589)) (=> (= (ControlFlow 0 15) 10) $generated@@593)) (=> (= (ControlFlow 0 15) 6) $generated@@594)))))
(let (($generated@@598  (=> (and ($generated@@237 $generated@@583) ($generated@@584 $generated@@583)) (=> (and (and (and ($generated@@132 $generated@@580 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@580 ($generated@@150 $generated@@46) $generated@@583)) (= 0 $generated@@585)) (and ($generated@@333 $generated@@580 ($generated@@264 $generated@@145)) (= (ControlFlow 0 16) 15))) $generated@@597))))
$generated@@598))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@420 () T@T)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@334))))
 (=> (and (= (type $generated@@334) ($generated@@76 $generated@@336 $generated@@2)) (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@2))) (= ($generated@@333 $generated@@334 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (= ($generated ($generated@@81 $generated@@334 $generated@@337)) ($generated ($generated@@81 $generated@@335 $generated@@337))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@145) ($generated@@0 ($generated@@81 $generated@@338 $generated@@341))) ($generated@@238 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@81 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@238 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@347) $generated@@346)) 0))
 :pattern ( (let (($generated@@347 (type $generated@@346)))
($generated@@81 ($generated@@264 $generated@@347) $generated@@346)))
)))
(assert  (and (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@348 $generated@@351)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@348 $generated@@351))
)) (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@349 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@349 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@273 (type $generated@@354))))
(let (($generated@@356 ($generated@@272 (type $generated@@354))))
(= (type ($generated@@350 $generated@@354)) ($generated@@76 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@350 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@358) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358)))) (= ($generated@@81 ($generated@@350 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@358))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@291 (type $generated@@362))))
(let (($generated@@364 ($generated@@290 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@76 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@366) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366)))) (= ($generated@@81 ($generated@@360 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@366))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@272 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@271 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@290 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@289 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@372) $generated@@376))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@64)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))) (and ($generated@@238 ($generated@@81 ($generated@@350 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@238 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@64)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))) (and ($generated@@238 ($generated@@81 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@238 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@79 (type $generated@@393))))
 (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@395 $generated@@2)) (= (type $generated@@394) ($generated@@76 $generated@@395 $generated@@2))) ($generated@@333 $generated@@393 $generated@@394)) (= $generated@@393 $generated@@394)))
 :pattern ( ($generated@@333 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@291 (type $generated@@398))))
(let (($generated@@400 ($generated@@290 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@289 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@288 $generated@@400 $generated@@399)) (= ($generated@@287 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@287 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@291 (type $generated@@401))))
(let (($generated@@403 ($generated@@290 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@289 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@288 $generated@@403 $generated@@402)) (= ($generated@@323 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@323 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (= ($generated@@359 $generated@@404) ($generated@@396 $generated@@145))))))
 :pattern ( ($generated@@359 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@273 (type $generated@@407))))
(let (($generated@@409 ($generated@@272 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@271 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@270 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@145) (= (type $generated@@411) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@407) ($generated@@258 ($generated@@211 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@348 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@291 (type $generated@@412))))
(let (($generated@@414 ($generated@@290 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@289 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@288 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@145) (= (type $generated@@416) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@412) ($generated@@258 ($generated@@211 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@46)) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@349 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@47)) (and (= ($generated@@258 ($generated@@349 $generated@@3 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@349 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@44)) (and (= ($generated@@258 ($generated@@349 $generated@@4 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@349 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@420) 20))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@45)) (and (= ($generated@@258 ($generated@@349 $generated@@420 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@349 $generated@@420 $generated@@421) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@45))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@422) $generated@@423) ($generated@@132 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@79 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@76 $generated@@425 $generated@@2)) (<= 0 ($generated@@263 $generated@@424))))
 :pattern ( ($generated@@263 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@253 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@252 $generated@@427)) (<= 0 ($generated@@251 $generated@@426))))
 :pattern ( ($generated@@251 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@377 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@377 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@377 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@377 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@377 $generated@@436 $generated@@437)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@385 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@385 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@385 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@72 ($generated@@385 $generated@@446 $generated@@447)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@448 $generated@@449)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@135 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@135 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@135 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@135 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@211 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (! (let (($generated@@467 ($generated@@253 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465 $generated@@466)) $generated@@467))
 :pattern ( ($generated@@463 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@252 $generated@@145)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@251 $generated@@468))) ($generated@@238 ($generated@@463 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@463 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@75 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@75 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@221 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@221 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@226 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@226 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@150 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@150 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@462 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@462 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@462 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@462 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@349 $generated@@491 ($generated@@258 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@258 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) $generated@@64)) (= ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))) (and ($generated@@212 ($generated@@81 ($generated@@350 $generated@@492) $generated@@495) $generated@@494) ($generated@@212 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@492) $generated@@495))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) (= ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))) (and ($generated@@212 ($generated@@81 ($generated@@360 $generated@@496) $generated@@499) $generated@@498) ($generated@@212 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@496) $generated@@499))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@145)) (< ($generated@@500 $generated@@502) ($generated@@501 ($generated@@211 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@211 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@145)) (< ($generated@@500 $generated@@505) ($generated@@501 ($generated@@211 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@211 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508))) (and (= ($generated@@258 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506)) $generated@@506) ($generated@@132 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506) ($generated@@377 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511))) (and (= ($generated@@258 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509)) $generated@@509) ($generated@@132 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509) ($generated@@385 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@145)) ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513))) (and (= ($generated@@258 ($generated@@349 $generated@@136 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@349 $generated@@136 $generated@@514) ($generated@@135 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
 (not ($generated@@0 ($generated@@81 ($generated@@396 $generated@@516) $generated@@515))))
 :pattern ( (let (($generated@@516 (type $generated@@515)))
($generated@@81 ($generated@@396 $generated@@516) $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@519 $generated@@520)) $generated@@62) (= ($generated@@517 ($generated@@135 $generated@@519 $generated@@520)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@136) (= ($generated@@500 ($generated@@258 $generated@@521)) ($generated@@501 $generated@@521)))
 :pattern ( ($generated@@500 ($generated@@258 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@212 $generated@@522 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@75 0)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@64)) ($generated@@212 $generated@@523 ($generated@@221 $generated@@524))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523)) $generated@@523) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523) ($generated@@221 $generated@@524))))
 :pattern ( ($generated@@212 $generated@@523 ($generated@@221 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) ($generated@@212 $generated@@525 ($generated@@226 $generated@@526))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525) ($generated@@226 $generated@@526))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@226 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@150 $generated@@528))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527) ($generated@@150 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@150 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@462 $generated@@530))) (and (= ($generated@@258 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529) ($generated@@462 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@462 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@531 $generated@@534)))) ($generated@@238 $generated@@534 $generated@@532 $generated@@533))
 :pattern ( ($generated@@81 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@136) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@537) (and ($generated@@134 $generated@@535) (exists (($generated@@538 T@U) ) (!  (and (= (type $generated@@538) $generated@@64) ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
))))) ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
))))) ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)) ($generated@@233 ($generated@@211 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@545))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))))
)))
(assert (forall (($generated@@546 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@546)) ($generated@@233 ($generated@@258 $generated@@546)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@253 (type $generated@@547))))
 (=> (and (= (type $generated@@547) ($generated@@252 $generated@@548)) (= ($generated@@251 $generated@@547) 0)) (= $generated@@547 ($generated@@250 $generated@@548))))
 :pattern ( ($generated@@251 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@550)))
 (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@2)) (= (type $generated@@551) $generated@@2)) (<= 0 ($generated $generated@@551))) (= ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)) (+ (- ($generated@@263 $generated@@549) ($generated ($generated@@81 $generated@@549 $generated@@550))) ($generated $generated@@551)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@2)) ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@3)) ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@4)) ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@420)) ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@145)) ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@252 $generated@@145)) (= (type $generated@@564) $generated@@64)) (= ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@251 $generated@@563))) ($generated@@212 ($generated@@463 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@463 $generated@@563 $generated@@565))
))))
 :pattern ( ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (= (type $generated@@567) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@251 $generated@@567))) (< ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))) ($generated@@566 $generated@@567))))
 :pattern ( ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571))) (and (and ($generated@@132 ($generated@@269 $generated@@569) ($generated@@221 $generated@@570)) ($generated@@132 ($generated@@312 $generated@@569) ($generated@@221 $generated@@571))) ($generated@@132 ($generated@@348 $generated@@569) ($generated@@221 ($generated@@135 $generated@@570 $generated@@571)))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@287 $generated@@572) ($generated@@226 $generated@@573)) ($generated@@132 ($generated@@323 $generated@@572) ($generated@@226 $generated@@574))) ($generated@@132 ($generated@@359 $generated@@572) ($generated@@226 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) ($generated@@132 $generated@@575 $generated@@46))
 :pattern ( ($generated@@132 $generated@@575 $generated@@46))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@3) ($generated@@132 $generated@@576 $generated@@47))
 :pattern ( ($generated@@132 $generated@@576 $generated@@47))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@4) ($generated@@132 $generated@@577 $generated@@44))
 :pattern ( ($generated@@132 $generated@@577 $generated@@44))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@420) ($generated@@132 $generated@@578 $generated@@45))
 :pattern ( ($generated@@132 $generated@@578 $generated@@45))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@145) ($generated@@132 $generated@@579 $generated@@48))
 :pattern ( ($generated@@132 $generated@@579 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () Int)
(assert  (and (and (and (= (type $generated@@580) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@581) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@582) $generated@@77)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@586 true))
(let (($generated@@587  (=> (= (ControlFlow 0 12) (- 0 11)) (not (exists (($generated@@588 Int) ) (! (> ($generated ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 $generated@@588)))) 0)
 :pattern ( ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 $generated@@588))))
))))))
(let (($generated@@589  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 14) 12) $generated@@587) (=> (= (ControlFlow 0 14) 13) $generated@@586)))))
(let (($generated@@590 true))
(let (($generated@@591  (=> (= (ControlFlow 0 8) (- 0 7)) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (not (> ($generated ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 ($generated@@231 0))))) 0))) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@2) (not (> ($generated ($generated@@81 $generated@@580 ($generated@@258 $generated@@592))) 0)))
 :no-pattern (type $generated@@592)
 :no-pattern ($generated $generated@@592)
 :no-pattern ($generated@@0 $generated@@592)
))))))
(let (($generated@@593  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 10) 8) $generated@@591) (=> (= (ControlFlow 0 10) 9) $generated@@590)))))
(let (($generated@@594  (=> (and (and (and (and (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@595  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 4) (- 0 3))) (= ($generated@@263 $generated@@580) ($generated@@231 0)))))
(let (($generated@@596  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@333 $generated@@580 ($generated@@264 $generated@@145)))))
(let (($generated@@597  (=> (= $generated@@581 ($generated@@156 $generated@@582 $generated@@583 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 15) 2) $generated@@596) (=> (= (ControlFlow 0 15) 4) $generated@@595)) (=> (= (ControlFlow 0 15) 14) $generated@@589)) (=> (= (ControlFlow 0 15) 10) $generated@@593)) (=> (= (ControlFlow 0 15) 6) $generated@@594)))))
(let (($generated@@598  (=> (and ($generated@@237 $generated@@583) ($generated@@584 $generated@@583)) (=> (and (and (and ($generated@@132 $generated@@580 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@580 ($generated@@150 $generated@@46) $generated@@583)) (= 0 $generated@@585)) (and (= ($generated@@263 $generated@@580) ($generated@@231 0)) (= (ControlFlow 0 16) 15))) $generated@@597))))
$generated@@598))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@420 () T@T)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@334))))
 (=> (and (= (type $generated@@334) ($generated@@76 $generated@@336 $generated@@2)) (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@2))) (= ($generated@@333 $generated@@334 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (= ($generated ($generated@@81 $generated@@334 $generated@@337)) ($generated ($generated@@81 $generated@@335 $generated@@337))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@145) ($generated@@0 ($generated@@81 $generated@@338 $generated@@341))) ($generated@@238 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@81 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@238 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@347) $generated@@346)) 0))
 :pattern ( (let (($generated@@347 (type $generated@@346)))
($generated@@81 ($generated@@264 $generated@@347) $generated@@346)))
)))
(assert  (and (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@348 $generated@@351)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@348 $generated@@351))
)) (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@349 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@349 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@273 (type $generated@@354))))
(let (($generated@@356 ($generated@@272 (type $generated@@354))))
(= (type ($generated@@350 $generated@@354)) ($generated@@76 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@350 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@358) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358)))) (= ($generated@@81 ($generated@@350 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@358))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@291 (type $generated@@362))))
(let (($generated@@364 ($generated@@290 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@76 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@366) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366)))) (= ($generated@@81 ($generated@@360 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@366))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@272 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@271 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@290 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@289 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@372) $generated@@376))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@64)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))) (and ($generated@@238 ($generated@@81 ($generated@@350 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@238 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@64)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))) (and ($generated@@238 ($generated@@81 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@238 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@79 (type $generated@@393))))
 (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@395 $generated@@2)) (= (type $generated@@394) ($generated@@76 $generated@@395 $generated@@2))) ($generated@@333 $generated@@393 $generated@@394)) (= $generated@@393 $generated@@394)))
 :pattern ( ($generated@@333 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@291 (type $generated@@398))))
(let (($generated@@400 ($generated@@290 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@289 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@288 $generated@@400 $generated@@399)) (= ($generated@@287 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@287 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@291 (type $generated@@401))))
(let (($generated@@403 ($generated@@290 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@289 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@288 $generated@@403 $generated@@402)) (= ($generated@@323 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@323 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (= ($generated@@359 $generated@@404) ($generated@@396 $generated@@145))))))
 :pattern ( ($generated@@359 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@273 (type $generated@@407))))
(let (($generated@@409 ($generated@@272 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@271 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@270 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@145) (= (type $generated@@411) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@407) ($generated@@258 ($generated@@211 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@348 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@291 (type $generated@@412))))
(let (($generated@@414 ($generated@@290 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@289 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@288 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@145) (= (type $generated@@416) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@412) ($generated@@258 ($generated@@211 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@46)) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@349 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@47)) (and (= ($generated@@258 ($generated@@349 $generated@@3 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@349 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@44)) (and (= ($generated@@258 ($generated@@349 $generated@@4 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@349 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@420) 20))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@45)) (and (= ($generated@@258 ($generated@@349 $generated@@420 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@349 $generated@@420 $generated@@421) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@45))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@422) $generated@@423) ($generated@@132 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@79 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@76 $generated@@425 $generated@@2)) (<= 0 ($generated@@263 $generated@@424))))
 :pattern ( ($generated@@263 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@253 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@252 $generated@@427)) (<= 0 ($generated@@251 $generated@@426))))
 :pattern ( ($generated@@251 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@377 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@377 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@377 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@377 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@377 $generated@@436 $generated@@437)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@385 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@385 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@385 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@72 ($generated@@385 $generated@@446 $generated@@447)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@448 $generated@@449)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@135 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@135 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@135 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@135 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@211 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (! (let (($generated@@467 ($generated@@253 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465 $generated@@466)) $generated@@467))
 :pattern ( ($generated@@463 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@252 $generated@@145)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@251 $generated@@468))) ($generated@@238 ($generated@@463 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@463 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@74 $generated@@468 ($generated@@462 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@75 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@75 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@221 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@221 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@226 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@226 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@150 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@150 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@462 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@462 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@462 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@462 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@349 $generated@@491 ($generated@@258 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@258 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) $generated@@64)) (= ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))) (and ($generated@@212 ($generated@@81 ($generated@@350 $generated@@492) $generated@@495) $generated@@494) ($generated@@212 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@492) $generated@@495))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@132 $generated@@492 ($generated@@377 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) (= ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))) (and ($generated@@212 ($generated@@81 ($generated@@360 $generated@@496) $generated@@499) $generated@@498) ($generated@@212 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@496) $generated@@499))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@132 $generated@@496 ($generated@@385 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@145)) (< ($generated@@500 $generated@@502) ($generated@@501 ($generated@@211 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@211 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@145)) (< ($generated@@500 $generated@@505) ($generated@@501 ($generated@@211 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@211 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508))) (and (= ($generated@@258 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506)) $generated@@506) ($generated@@132 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@506) ($generated@@377 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@377 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511))) (and (= ($generated@@258 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509)) $generated@@509) ($generated@@132 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@509) ($generated@@385 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@385 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@145)) ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513))) (and (= ($generated@@258 ($generated@@349 $generated@@136 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@349 $generated@@136 $generated@@514) ($generated@@135 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
 (not ($generated@@0 ($generated@@81 ($generated@@396 $generated@@516) $generated@@515))))
 :pattern ( (let (($generated@@516 (type $generated@@515)))
($generated@@81 ($generated@@396 $generated@@516) $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@519 $generated@@520)) $generated@@62) (= ($generated@@517 ($generated@@135 $generated@@519 $generated@@520)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@136) (= ($generated@@500 ($generated@@258 $generated@@521)) ($generated@@501 $generated@@521)))
 :pattern ( ($generated@@500 ($generated@@258 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@212 $generated@@522 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@75 0)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@64)) ($generated@@212 $generated@@523 ($generated@@221 $generated@@524))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523)) $generated@@523) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@523) ($generated@@221 $generated@@524))))
 :pattern ( ($generated@@212 $generated@@523 ($generated@@221 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) ($generated@@212 $generated@@525 ($generated@@226 $generated@@526))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@525) ($generated@@226 $generated@@526))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@226 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@150 $generated@@528))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@527) ($generated@@150 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@150 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@462 $generated@@530))) (and (= ($generated@@258 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@349 ($generated@@252 $generated@@145) $generated@@529) ($generated@@462 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@462 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@531 $generated@@534)))) ($generated@@238 $generated@@534 $generated@@532 $generated@@533))
 :pattern ( ($generated@@81 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@136) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@537) (and ($generated@@134 $generated@@535) (exists (($generated@@538 T@U) ) (!  (and (= (type $generated@@538) $generated@@64) ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
))))) ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
))))) ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)) ($generated@@233 ($generated@@211 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@543) ($generated@@233 $generated@@544)))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@545))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@545))))
)))
(assert (forall (($generated@@546 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@546)) ($generated@@233 ($generated@@258 $generated@@546)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@253 (type $generated@@547))))
 (=> (and (= (type $generated@@547) ($generated@@252 $generated@@548)) (= ($generated@@251 $generated@@547) 0)) (= $generated@@547 ($generated@@250 $generated@@548))))
 :pattern ( ($generated@@251 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@550)))
 (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@2)) (= (type $generated@@551) $generated@@2)) (<= 0 ($generated $generated@@551))) (= ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)) (+ (- ($generated@@263 $generated@@549) ($generated ($generated@@81 $generated@@549 $generated@@550))) ($generated $generated@@551)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@2)) ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@3)) ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@4)) ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@420)) ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@145)) ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@252 $generated@@145)) (= (type $generated@@564) $generated@@64)) (= ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@251 $generated@@563))) ($generated@@212 ($generated@@463 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@463 $generated@@563 $generated@@565))
))))
 :pattern ( ($generated@@132 $generated@@563 ($generated@@462 $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (= (type $generated@@567) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@251 $generated@@567))) (< ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))) ($generated@@566 $generated@@567))))
 :pattern ( ($generated@@501 ($generated@@349 $generated@@136 ($generated@@463 $generated@@567 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571))) (and (and ($generated@@132 ($generated@@269 $generated@@569) ($generated@@221 $generated@@570)) ($generated@@132 ($generated@@312 $generated@@569) ($generated@@221 $generated@@571))) ($generated@@132 ($generated@@348 $generated@@569) ($generated@@221 ($generated@@135 $generated@@570 $generated@@571)))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@377 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@287 $generated@@572) ($generated@@226 $generated@@573)) ($generated@@132 ($generated@@323 $generated@@572) ($generated@@226 $generated@@574))) ($generated@@132 ($generated@@359 $generated@@572) ($generated@@226 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@385 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) ($generated@@132 $generated@@575 $generated@@46))
 :pattern ( ($generated@@132 $generated@@575 $generated@@46))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@3) ($generated@@132 $generated@@576 $generated@@47))
 :pattern ( ($generated@@132 $generated@@576 $generated@@47))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@4) ($generated@@132 $generated@@577 $generated@@44))
 :pattern ( ($generated@@132 $generated@@577 $generated@@44))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@420) ($generated@@132 $generated@@578 $generated@@45))
 :pattern ( ($generated@@132 $generated@@578 $generated@@45))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@145) ($generated@@132 $generated@@579 $generated@@48))
 :pattern ( ($generated@@132 $generated@@579 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () Int)
(assert  (and (and (and (= (type $generated@@580) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@581) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@582) $generated@@77)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@586 true))
(let (($generated@@587  (=> (= (ControlFlow 0 12) (- 0 11)) (not (exists (($generated@@588 Int) ) (! (> ($generated ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 $generated@@588)))) 0)
 :pattern ( ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 $generated@@588))))
))))))
(let (($generated@@589  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 14) 12) $generated@@587) (=> (= (ControlFlow 0 14) 13) $generated@@586)))))
(let (($generated@@590 true))
(let (($generated@@591  (=> (= (ControlFlow 0 8) (- 0 7)) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (not (> ($generated ($generated@@81 $generated@@580 ($generated@@258 ($generated@@8 ($generated@@231 0))))) 0))) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@2) (not (> ($generated ($generated@@81 $generated@@580 ($generated@@258 $generated@@592))) 0)))
 :no-pattern (type $generated@@592)
 :no-pattern ($generated $generated@@592)
 :no-pattern ($generated@@0 $generated@@592)
))))))
(let (($generated@@593  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 10) 8) $generated@@591) (=> (= (ControlFlow 0 10) 9) $generated@@590)))))
(let (($generated@@594  (=> (and (and (and (and (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (not ($generated@@0 ($generated@@233 ($generated@@11 true))))) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@595  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 4) (- 0 3))) (= ($generated@@263 $generated@@580) ($generated@@231 0)))))
(let (($generated@@596  (=> (and ($generated@@0 ($generated@@233 ($generated@@11 true))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@333 $generated@@580 ($generated@@264 $generated@@145)))))
(let (($generated@@597  (=> (= $generated@@581 ($generated@@156 $generated@@582 $generated@@583 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 15) 2) $generated@@596) (=> (= (ControlFlow 0 15) 4) $generated@@595)) (=> (= (ControlFlow 0 15) 14) $generated@@589)) (=> (= (ControlFlow 0 15) 10) $generated@@593)) (=> (= (ControlFlow 0 15) 6) $generated@@594)))))
(let (($generated@@598  (=> (and ($generated@@237 $generated@@583) ($generated@@584 $generated@@583)) (=> (and (and (and ($generated@@132 $generated@@580 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@580 ($generated@@150 $generated@@46) $generated@@583)) (= 0 $generated@@585)) (and (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@2) true) (not (> ($generated ($generated@@81 $generated@@580 ($generated@@258 $generated@@599))) 0)))
 :pattern ( ($generated@@81 $generated@@580 ($generated@@258 $generated@@599)))
)) (= (ControlFlow 0 16) 15))) $generated@@597))))
$generated@@598))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U) Int)
(declare-fun $generated@@401 (T@U) Bool)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@430 () T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@473 (T@U Int) T@U)
(declare-fun $generated@@482 (T@U) Int)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@76 $generated@@149 $generated@@2)) ($generated@@401 $generated@@402)) (> ($generated ($generated@@81 $generated@@402 ($generated@@262 ($generated@@8 ($generated@@400 $generated@@402))))) 0))
 :pattern ( ($generated@@400 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@403 $generated@@405))) (and ($generated@@132 $generated@@403 $generated@@404) ($generated@@132 $generated@@404 $generated@@405))) ($generated@@132 $generated@@403 $generated@@405))
 :pattern ( ($generated@@132 $generated@@403 $generated@@404) ($generated@@132 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@76 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@299 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@299 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@335 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@335 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@303 (type $generated@@414))))
(let (($generated@@416 ($generated@@302 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@301 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@300 $generated@@416 $generated@@415)) (= ($generated@@366 $generated@@414) ($generated@@406 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@285 (type $generated@@417))))
(let (($generated@@419 ($generated@@284 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@283 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@282 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@149) (= (type $generated@@421) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@417) ($generated@@262 ($generated@@215 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@355 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@303 (type $generated@@422))))
(let (($generated@@424 ($generated@@302 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@301 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@300 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@149) (= (type $generated@@426) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@422) ($generated@@262 ($generated@@215 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@366 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@149) ($generated@@216 $generated@@427 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@427)) $generated@@427) ($generated@@136 ($generated@@356 $generated@@2 $generated@@427) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@427 $generated@@46))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@149) ($generated@@216 $generated@@428 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@356 $generated@@3 $generated@@428) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@428 $generated@@47))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@149) ($generated@@216 $generated@@429 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@429)) $generated@@429) ($generated@@136 ($generated@@356 $generated@@4 $generated@@429) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@429 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@430) 20))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@149) ($generated@@216 $generated@@431 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@430 $generated@@431)) $generated@@431) ($generated@@136 ($generated@@356 $generated@@430 $generated@@431) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@431 $generated@@45))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (= (type $generated@@433) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@432) $generated@@433) ($generated@@136 $generated@@432 $generated@@433)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@79 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@76 $generated@@435 $generated@@2)) (<= 0 ($generated@@275 $generated@@434))))
 :pattern ( ($generated@@275 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@257 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@256 $generated@@437)) (<= 0 ($generated@@255 $generated@@436))))
 :pattern ( ($generated@@255 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@384 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@384 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@384 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@384 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@446 $generated@@447)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@392 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@392 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@392 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@392 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@456 $generated@@457)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@149) (= (type $generated@@459) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@458 $generated@@459)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@139 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@139 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@139 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@139 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@149) (= (type $generated@@469) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@215 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@149) (= (type $generated@@471) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@215 $generated@@470 $generated@@471))
)))
(assert  (and (forall (($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@474))
)) (forall (($generated@@475 T@U) ($generated@@476 Int) ) (! (let (($generated@@477 ($generated@@257 (type $generated@@475))))
(= (type ($generated@@473 $generated@@475 $generated@@476)) $generated@@477))
 :pattern ( ($generated@@473 $generated@@475 $generated@@476))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@256 $generated@@149)) (= (type $generated@@479) $generated@@64)) (= (type $generated@@480) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@478 ($generated@@472 $generated@@479) $generated@@480) (forall (($generated@@481 Int) ) (!  (=> (and (<= 0 $generated@@481) (< $generated@@481 ($generated@@255 $generated@@478))) ($generated@@242 ($generated@@473 $generated@@478 $generated@@481) $generated@@479 $generated@@480))
 :pattern ( ($generated@@473 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@74 $generated@@478 ($generated@@472 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@483 Int) ) (! (= ($generated@@482 ($generated@@75 $generated@@483)) $generated@@483)
 :pattern ( ($generated@@75 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@225 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@225 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@487)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@491)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@154 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@154 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@495)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@472 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@472 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@472 $generated@@499)) $generated@@57))
 :pattern ( ($generated@@472 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(= ($generated@@356 $generated@@501 ($generated@@262 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@262 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@64)) (= ($generated@@136 $generated@@502 ($generated@@384 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@502) $generated@@505))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@502) $generated@@505) $generated@@504) ($generated@@216 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@502) $generated@@505))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@136 $generated@@502 ($generated@@384 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) (= ($generated@@136 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@506) $generated@@509))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@506) $generated@@509) $generated@@508) ($generated@@216 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@506) $generated@@509))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@136 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@149) (= (type $generated@@513) $generated@@149)) (< ($generated@@510 $generated@@512) ($generated@@511 ($generated@@215 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@215 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@149) (= (type $generated@@515) $generated@@149)) (< ($generated@@510 $generated@@515) ($generated@@511 ($generated@@215 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@215 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@149) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@216 $generated@@516 ($generated@@384 $generated@@517 $generated@@518))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@516) ($generated@@384 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@516 ($generated@@384 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@149) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) ($generated@@216 $generated@@519 ($generated@@392 $generated@@520 $generated@@521))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@519)) $generated@@519) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@519) ($generated@@392 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@216 $generated@@519 ($generated@@392 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@149)) ($generated@@216 $generated@@524 ($generated@@139 $generated@@522 $generated@@523))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@524)) $generated@@524) ($generated@@136 ($generated@@356 $generated@@140 $generated@@524) ($generated@@139 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@216 $generated@@524 ($generated@@139 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
 (not ($generated@@0 ($generated@@81 ($generated@@406 $generated@@526) $generated@@525))))
 :pattern ( (let (($generated@@526 (type $generated@@525)))
($generated@@81 ($generated@@406 $generated@@526) $generated@@525)))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@529 $generated@@530)) $generated@@62) (= ($generated@@527 ($generated@@139 $generated@@529 $generated@@530)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@140) (= ($generated@@510 ($generated@@262 $generated@@531)) ($generated@@511 $generated@@531)))
 :pattern ( ($generated@@510 ($generated@@262 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@149) ($generated@@216 $generated@@532 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@532)) $generated@@532) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@532 ($generated@@75 0)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@149) (= (type $generated@@534) $generated@@64)) ($generated@@216 $generated@@533 ($generated@@225 $generated@@534))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@533)) $generated@@533) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@533) ($generated@@225 $generated@@534))))
 :pattern ( ($generated@@216 $generated@@533 ($generated@@225 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@149) (= (type $generated@@536) $generated@@64)) ($generated@@216 $generated@@535 ($generated@@230 $generated@@536))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@535)) $generated@@535) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@535) ($generated@@230 $generated@@536))))
 :pattern ( ($generated@@216 $generated@@535 ($generated@@230 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@149) (= (type $generated@@538) $generated@@64)) ($generated@@216 $generated@@537 ($generated@@154 $generated@@538))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@537)) $generated@@537) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@537) ($generated@@154 $generated@@538))))
 :pattern ( ($generated@@216 $generated@@537 ($generated@@154 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@149) (= (type $generated@@540) $generated@@64)) ($generated@@216 $generated@@539 ($generated@@472 $generated@@540))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@539)) $generated@@539) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@539) ($generated@@472 $generated@@540))))
 :pattern ( ($generated@@216 $generated@@539 ($generated@@472 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@541 ($generated@@154 $generated@@542) $generated@@543) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@541 $generated@@544)))) ($generated@@242 $generated@@544 $generated@@542 $generated@@543))
 :pattern ( ($generated@@81 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@74 $generated@@541 ($generated@@154 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@140) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@547) (and ($generated@@138 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@64) ($generated@@74 $generated@@545 ($generated@@139 $generated@@546 $generated@@548) $generated@@547))
 :pattern ( ($generated@@74 $generated@@545 ($generated@@139 $generated@@546 $generated@@548) $generated@@547))
))))) ($generated@@242 ($generated@@147 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@140) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@551) (and ($generated@@138 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@74 $generated@@549 ($generated@@139 $generated@@552 $generated@@550) $generated@@551))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@139 $generated@@552 $generated@@550) $generated@@551))
))))) ($generated@@242 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)) ($generated@@237 ($generated@@215 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@555))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@555))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@555))))
)))
(assert (forall (($generated@@556 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@556)) ($generated@@237 ($generated@@262 $generated@@556)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@257 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@256 $generated@@558)) (= ($generated@@255 $generated@@557) 0)) (= $generated@@557 ($generated@@254 $generated@@558))))
 :pattern ( ($generated@@255 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@562 $generated@@2)) (= (type $generated@@561) $generated@@2)) (<= 0 ($generated $generated@@561))) (= ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)) (+ (- ($generated@@275 $generated@@559) ($generated ($generated@@81 $generated@@559 $generated@@560))) ($generated $generated@@561)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@2)) ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@3)) ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@4)) ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@430)) ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@149)) ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@256 $generated@@149)) (= (type $generated@@574) $generated@@64)) (= ($generated@@136 $generated@@573 ($generated@@472 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@255 $generated@@573))) ($generated@@216 ($generated@@473 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@473 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@136 $generated@@573 ($generated@@472 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@255 $generated@@577))) (< ($generated@@511 ($generated@@356 $generated@@140 ($generated@@473 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@511 ($generated@@356 $generated@@140 ($generated@@473 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@384 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@281 $generated@@579) ($generated@@225 $generated@@580)) ($generated@@136 ($generated@@324 $generated@@579) ($generated@@225 $generated@@581))) ($generated@@136 ($generated@@355 $generated@@579) ($generated@@225 ($generated@@139 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@384 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@136 $generated@@582 ($generated@@392 $generated@@583 $generated@@584))) (and (and ($generated@@136 ($generated@@299 $generated@@582) ($generated@@230 $generated@@583)) ($generated@@136 ($generated@@335 $generated@@582) ($generated@@230 $generated@@584))) ($generated@@136 ($generated@@366 $generated@@582) ($generated@@230 ($generated@@139 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@136 $generated@@582 ($generated@@392 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@136 $generated@@585 $generated@@46))
 :pattern ( ($generated@@136 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@136 $generated@@586 $generated@@47))
 :pattern ( ($generated@@136 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@136 $generated@@587 $generated@@44))
 :pattern ( ($generated@@136 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@430) ($generated@@136 $generated@@588 $generated@@45))
 :pattern ( ($generated@@136 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@149) ($generated@@136 $generated@@589 $generated@@48))
 :pattern ( ($generated@@136 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 (T@U) Bool)
(declare-fun $generated@@596 () Int)
(assert  (and (and (and (and (= (type $generated@@590) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@591) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@592) $generated@@77)) (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@597 true))
(let (($generated@@598  (=> (= (ControlFlow 0 3) (- 0 2)) (or (and ($generated@@136 ($generated@@8 ($generated@@235 0)) $generated@@46) (> ($generated ($generated@@81 $generated@@590 ($generated@@262 ($generated@@8 ($generated@@235 0))))) 0)) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@2) (> ($generated ($generated@@81 $generated@@590 ($generated@@262 $generated@@599))) 0))
 :no-pattern (type $generated@@599)
 :no-pattern ($generated $generated@@599)
 :no-pattern ($generated@@0 $generated@@599)
))))))
(let (($generated@@600  (=> (not (= ($generated@@275 $generated@@590) 0)) (and (=> (= (ControlFlow 0 5) 3) $generated@@598) (=> (= (ControlFlow 0 5) 4) $generated@@597)))))
(let (($generated@@601 true))
(let (($generated@@602  (=> (= $generated@@591 ($generated@@160 $generated@@592 $generated@@593 $generated@@60 false)) (=> (and (and ($generated@@241 $generated@@594) ($generated@@595 $generated@@594)) (and (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@77) (=> (and (not (= $generated@@603 $generated@@592)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@593 $generated@@603) $generated@@60))) (= ($generated@@81 $generated@@594 $generated@@603) ($generated@@81 $generated@@593 $generated@@603))))
 :pattern ( ($generated@@81 $generated@@594 $generated@@603))
)) ($generated@@132 $generated@@593 $generated@@594))) (and (=> (= (ControlFlow 0 6) 5) $generated@@600) (=> (= (ControlFlow 0 6) 1) $generated@@601))))))
(let (($generated@@604  (=> (and ($generated@@241 $generated@@593) ($generated@@595 $generated@@593)) (=> (and (and ($generated@@136 $generated@@590 ($generated@@154 $generated@@46)) ($generated@@74 $generated@@590 ($generated@@154 $generated@@46) $generated@@593)) (and (= 0 $generated@@596) (= (ControlFlow 0 7) 6))) $generated@@602))))
$generated@@604)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@U) Int)
(declare-fun $generated@@387 (T@U) Bool)
(declare-fun $generated@@389 (T@T) T@U)
(declare-fun $generated@@413 () T@T)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@U Int) T@U)
(declare-fun $generated@@465 (T@U) Int)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= (type $generated@@333) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@145) ($generated@@0 ($generated@@81 $generated@@331 $generated@@334))) ($generated@@236 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@81 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@340) $generated@@339)) 0))
 :pattern ( (let (($generated@@340 (type $generated@@339)))
($generated@@81 ($generated@@262 $generated@@340) $generated@@339)))
)))
(assert  (and (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@341 $generated@@344)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@341 $generated@@344))
)) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@342 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@271 (type $generated@@347))))
(let (($generated@@349 ($generated@@270 (type $generated@@347))))
(= (type ($generated@@343 $generated@@347)) ($generated@@76 $generated@@349 $generated@@348))))
 :pattern ( ($generated@@343 $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@351) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351)))) (= ($generated@@81 ($generated@@343 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@351))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@289 (type $generated@@355))))
(let (($generated@@357 ($generated@@288 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@76 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@359) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359)))) (= ($generated@@81 ($generated@@353 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@359))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(let (($generated@@363 ($generated@@270 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@269 $generated@@363 $generated@@362)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@360) $generated@@361)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@360) $generated@@364)) (= $generated@@361 ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@360) $generated@@364))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@288 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@287 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@64)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@373) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))) (and ($generated@@236 ($generated@@81 ($generated@@343 $generated@@373) $generated@@377) $generated@@375 $generated@@376) ($generated@@236 $generated@@377 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@64)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))) (and ($generated@@236 ($generated@@81 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@236 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@76 $generated@@145 $generated@@2)) ($generated@@387 $generated@@388)) (> ($generated ($generated@@81 $generated@@388 ($generated@@256 ($generated@@8 ($generated@@386 $generated@@388))))) 0))
 :pattern ( ($generated@@386 $generated@@388))
)))
(assert (forall (($generated@@390 T@T) ) (! (= (type ($generated@@389 $generated@@390)) ($generated@@76 $generated@@390 $generated@@4))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@289 (type $generated@@391))))
(let (($generated@@393 ($generated@@288 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@287 $generated@@393 $generated@@392)) (= (= $generated@@391 ($generated@@286 $generated@@393 $generated@@392)) (= ($generated@@285 $generated@@391) ($generated@@389 $generated@@393))))))
 :pattern ( ($generated@@285 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@289 (type $generated@@394))))
(let (($generated@@396 ($generated@@288 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@287 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@286 $generated@@396 $generated@@395)) (= ($generated@@321 $generated@@394) ($generated@@389 $generated@@395))))))
 :pattern ( ($generated@@321 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@289 (type $generated@@397))))
(let (($generated@@399 ($generated@@288 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@287 $generated@@399 $generated@@398)) (= (= $generated@@397 ($generated@@286 $generated@@399 $generated@@398)) (= ($generated@@352 $generated@@397) ($generated@@389 $generated@@145))))))
 :pattern ( ($generated@@352 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@271 (type $generated@@400))))
(let (($generated@@402 ($generated@@270 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@269 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@268 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@145) (= (type $generated@@404) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@400) ($generated@@256 ($generated@@211 $generated@@403 $generated@@404)))))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@341 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@289 (type $generated@@405))))
(let (($generated@@407 ($generated@@288 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@287 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@286 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (and (and (= (type $generated@@408) $generated@@145) (= (type $generated@@409) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@405) ($generated@@256 ($generated@@211 $generated@@408 $generated@@409)))))
 :no-pattern (type $generated@@408)
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@352 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@46)) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@342 $generated@@2 $generated@@410) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@46))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@47)) (and (= ($generated@@256 ($generated@@342 $generated@@3 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@342 $generated@@3 $generated@@411) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@47))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@212 $generated@@412 $generated@@44)) (and (= ($generated@@256 ($generated@@342 $generated@@4 $generated@@412)) $generated@@412) ($generated@@132 ($generated@@342 $generated@@4 $generated@@412) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@412 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@413) 20))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@212 $generated@@414 $generated@@45)) (and (= ($generated@@256 ($generated@@342 $generated@@413 $generated@@414)) $generated@@414) ($generated@@132 ($generated@@342 $generated@@413 $generated@@414) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@414 $generated@@45))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (= (type $generated@@416) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@415) $generated@@416) ($generated@@132 $generated@@415 $generated@@416)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@79 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@76 $generated@@418 $generated@@2)) (<= 0 ($generated@@261 $generated@@417))))
 :pattern ( ($generated@@261 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@251 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@250 $generated@@420)) (<= 0 ($generated@@249 $generated@@419))))
 :pattern ( ($generated@@249 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@64)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@64) (= (type $generated@@424) $generated@@64)) (= ($generated@@421 ($generated@@370 $generated@@423 $generated@@424)) $generated@@423))
 :pattern ( ($generated@@370 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@64)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@64) (= (type $generated@@428) $generated@@64)) (= ($generated@@425 ($generated@@370 $generated@@427 $generated@@428)) $generated@@428))
 :pattern ( ($generated@@370 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@64) (= (type $generated@@430) $generated@@64)) (= ($generated@@72 ($generated@@370 $generated@@429 $generated@@430)) $generated@@58))
 :pattern ( ($generated@@370 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@431 ($generated@@378 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@378 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@378 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@378 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@72 ($generated@@378 $generated@@439 $generated@@440)) $generated@@59))
 :pattern ( ($generated@@378 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) (= (type $generated@@442) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@441 $generated@@442)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@135 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@135 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@135 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@135 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) (= (type $generated@@452) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@211 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) (= (type $generated@@454) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@211 $generated@@453 $generated@@454))
)))
(assert  (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@457))
)) (forall (($generated@@458 T@U) ($generated@@459 Int) ) (! (let (($generated@@460 ($generated@@251 (type $generated@@458))))
(= (type ($generated@@456 $generated@@458 $generated@@459)) $generated@@460))
 :pattern ( ($generated@@456 $generated@@458 $generated@@459))
))))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@461) ($generated@@250 $generated@@145)) (= (type $generated@@462) $generated@@64)) (= (type $generated@@463) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@461 ($generated@@455 $generated@@462) $generated@@463) (forall (($generated@@464 Int) ) (!  (=> (and (<= 0 $generated@@464) (< $generated@@464 ($generated@@249 $generated@@461))) ($generated@@236 ($generated@@456 $generated@@461 $generated@@464) $generated@@462 $generated@@463))
 :pattern ( ($generated@@456 $generated@@461 $generated@@464))
))))
 :pattern ( ($generated@@74 $generated@@461 ($generated@@455 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@466 Int) ) (! (= ($generated@@465 ($generated@@75 $generated@@466)) $generated@@466)
 :pattern ( ($generated@@75 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@467 ($generated@@221 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@470)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@471 ($generated@@226 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@474)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@475 ($generated@@150 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@478)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@479 ($generated@@455 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@455 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@72 ($generated@@455 $generated@@482)) $generated@@57))
 :pattern ( ($generated@@455 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 (type $generated@@483)))
(= ($generated@@342 $generated@@484 ($generated@@256 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@256 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) $generated@@64)) (= ($generated@@132 $generated@@485 ($generated@@370 $generated@@486 $generated@@487)) (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@485) $generated@@488))) (and ($generated@@212 ($generated@@81 ($generated@@343 $generated@@485) $generated@@488) $generated@@487) ($generated@@212 $generated@@488 $generated@@486)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@485) $generated@@488))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@485) $generated@@488))
))))
 :pattern ( ($generated@@132 $generated@@485 ($generated@@370 $generated@@486 $generated@@487)))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) $generated@@64)) (= ($generated@@132 $generated@@489 ($generated@@378 $generated@@490 $generated@@491)) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@489) $generated@@492))) (and ($generated@@212 ($generated@@81 ($generated@@353 $generated@@489) $generated@@492) $generated@@491) ($generated@@212 $generated@@492 $generated@@490)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@489) $generated@@492))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@489) $generated@@492))
))))
 :pattern ( ($generated@@132 $generated@@489 ($generated@@378 $generated@@490 $generated@@491)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@145) (= (type $generated@@496) $generated@@145)) (< ($generated@@493 $generated@@495) ($generated@@494 ($generated@@211 $generated@@495 $generated@@496))))
 :pattern ( ($generated@@211 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@145) (= (type $generated@@498) $generated@@145)) (< ($generated@@493 $generated@@498) ($generated@@494 ($generated@@211 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@211 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) ($generated@@212 $generated@@499 ($generated@@370 $generated@@500 $generated@@501))) (and (= ($generated@@256 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@499)) $generated@@499) ($generated@@132 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@499) ($generated@@370 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@212 $generated@@499 ($generated@@370 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@64)) ($generated@@212 $generated@@502 ($generated@@378 $generated@@503 $generated@@504))) (and (= ($generated@@256 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@502)) $generated@@502) ($generated@@132 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@502) ($generated@@378 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@212 $generated@@502 ($generated@@378 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@145)) ($generated@@212 $generated@@507 ($generated@@135 $generated@@505 $generated@@506))) (and (= ($generated@@256 ($generated@@342 $generated@@136 $generated@@507)) $generated@@507) ($generated@@132 ($generated@@342 $generated@@136 $generated@@507) ($generated@@135 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@212 $generated@@507 ($generated@@135 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
 (not ($generated@@0 ($generated@@81 ($generated@@389 $generated@@509) $generated@@508))))
 :pattern ( (let (($generated@@509 (type $generated@@508)))
($generated@@81 ($generated@@389 $generated@@509) $generated@@508)))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@512 $generated@@513)) $generated@@62) (= ($generated@@510 ($generated@@135 $generated@@512 $generated@@513)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@136) (= ($generated@@493 ($generated@@256 $generated@@514)) ($generated@@494 $generated@@514)))
 :pattern ( ($generated@@493 ($generated@@256 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) ($generated@@212 $generated@@515 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@515)) $generated@@515) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@75 0)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@64)) ($generated@@212 $generated@@516 ($generated@@221 $generated@@517))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@516)) $generated@@516) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@516) ($generated@@221 $generated@@517))))
 :pattern ( ($generated@@212 $generated@@516 ($generated@@221 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) ($generated@@212 $generated@@518 ($generated@@226 $generated@@519))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@518) ($generated@@226 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@226 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) ($generated@@212 $generated@@520 ($generated@@150 $generated@@521))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@520) ($generated@@150 $generated@@521))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@150 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@212 $generated@@522 ($generated@@455 $generated@@523))) (and (= ($generated@@256 ($generated@@342 ($generated@@250 $generated@@145) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@342 ($generated@@250 $generated@@145) $generated@@522) ($generated@@455 $generated@@523))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@455 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@524 ($generated@@150 $generated@@525) $generated@@526) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@524 $generated@@527)))) ($generated@@236 $generated@@527 $generated@@525 $generated@@526))
 :pattern ( ($generated@@81 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@74 $generated@@524 ($generated@@150 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@136) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@530) (and ($generated@@134 $generated@@528) (exists (($generated@@531 T@U) ) (!  (and (= (type $generated@@531) $generated@@64) ($generated@@74 $generated@@528 ($generated@@135 $generated@@529 $generated@@531) $generated@@530))
 :pattern ( ($generated@@74 $generated@@528 ($generated@@135 $generated@@529 $generated@@531) $generated@@530))
))))) ($generated@@236 ($generated@@143 $generated@@528) $generated@@529 $generated@@530))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@528) $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@136) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@534) (and ($generated@@134 $generated@@532) (exists (($generated@@535 T@U) ) (!  (and (= (type $generated@@535) $generated@@64) ($generated@@74 $generated@@532 ($generated@@135 $generated@@535 $generated@@533) $generated@@534))
 :pattern ( ($generated@@74 $generated@@532 ($generated@@135 $generated@@535 $generated@@533) $generated@@534))
))))) ($generated@@236 ($generated@@144 $generated@@532) $generated@@533 $generated@@534))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@532) $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@536) ($generated@@231 $generated@@537)) ($generated@@231 ($generated@@211 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@536) ($generated@@231 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@538)) ($generated@@231 ($generated@@256 $generated@@538)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@251 (type $generated@@539))))
 (=> (and (= (type $generated@@539) ($generated@@250 $generated@@540)) (= ($generated@@249 $generated@@539) 0)) (= $generated@@539 ($generated@@248 $generated@@540))))
 :pattern ( ($generated@@249 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@542)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@2)) (= (type $generated@@543) $generated@@2)) (<= 0 ($generated $generated@@543))) (= ($generated@@261 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)) (+ (- ($generated@@261 $generated@@541) ($generated ($generated@@81 $generated@@541 $generated@@542))) ($generated $generated@@543)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@546) $generated@@2)) ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
 :pattern ( ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@3)) ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@4)) ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@413)) ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@145)) ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@250 $generated@@145)) (= (type $generated@@556) $generated@@64)) (= ($generated@@132 $generated@@555 ($generated@@455 $generated@@556)) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@249 $generated@@555))) ($generated@@212 ($generated@@456 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@456 $generated@@555 $generated@@557))
))))
 :pattern ( ($generated@@132 $generated@@555 ($generated@@455 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@249 $generated@@559))) (< ($generated@@494 ($generated@@342 $generated@@136 ($generated@@456 $generated@@559 $generated@@560))) ($generated@@558 $generated@@559))))
 :pattern ( ($generated@@494 ($generated@@342 $generated@@136 ($generated@@456 $generated@@559 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@370 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@267 $generated@@561) ($generated@@221 $generated@@562)) ($generated@@132 ($generated@@310 $generated@@561) ($generated@@221 $generated@@563))) ($generated@@132 ($generated@@341 $generated@@561) ($generated@@221 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@370 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@378 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@285 $generated@@564) ($generated@@226 $generated@@565)) ($generated@@132 ($generated@@321 $generated@@564) ($generated@@226 $generated@@566))) ($generated@@132 ($generated@@352 $generated@@564) ($generated@@226 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@378 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@2) ($generated@@132 $generated@@567 $generated@@46))
 :pattern ( ($generated@@132 $generated@@567 $generated@@46))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@3) ($generated@@132 $generated@@568 $generated@@47))
 :pattern ( ($generated@@132 $generated@@568 $generated@@47))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@4) ($generated@@132 $generated@@569 $generated@@44))
 :pattern ( ($generated@@132 $generated@@569 $generated@@44))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@413) ($generated@@132 $generated@@570 $generated@@45))
 :pattern ( ($generated@@132 $generated@@570 $generated@@45))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@145) ($generated@@132 $generated@@571 $generated@@48))
 :pattern ( ($generated@@132 $generated@@571 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 (T@U) Bool)
(declare-fun $generated@@577 () Int)
(assert  (and (and (and (= (type $generated@@572) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@573) $generated@@77)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@575) ($generated@@76 $generated@@145 $generated@@2))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@578  (=> (and (and (= $generated@@572 ($generated@@156 $generated@@573 $generated@@574 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@261 $generated@@575) 0))) ($generated@@0 ($generated@@231 ($generated@@11 true))))))
(let (($generated@@579  (=> (and ($generated@@235 $generated@@574) ($generated@@576 $generated@@574)) (=> (and (and ($generated@@132 $generated@@575 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@575 ($generated@@150 $generated@@46) $generated@@574)) (and (= 0 $generated@@577) (= (ControlFlow 0 3) 2))) $generated@@578))))
$generated@@579)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@157 (Int Int) Int)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) Bool)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@517 (T@U Int) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@82 (type $generated@@139))))
(= (type ($generated@@136 $generated@@139 $generated@@140)) ($generated@@79 $generated@@141 $generated@@2)))
 :pattern ( ($generated@@136 $generated@@139 $generated@@140))
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@82 (type $generated@@142))))
(= (type ($generated@@137 $generated@@142 $generated@@143)) ($generated@@79 $generated@@144 $generated@@2)))
 :pattern ( ($generated@@137 $generated@@142 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@82 (type $generated@@145))))
(= (type ($generated@@138 $generated@@145 $generated@@146)) ($generated@@79 $generated@@147 $generated@@2)))
 :pattern ( ($generated@@138 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 ($generated@@82 (type $generated@@148))))
 (=> (and (= (type $generated@@148) ($generated@@79 $generated@@150 $generated@@2)) (= (type $generated@@149) ($generated@@79 $generated@@150 $generated@@2))) (and (= (+ (+ ($generated@@135 ($generated@@136 $generated@@148 $generated@@149)) ($generated@@135 ($generated@@136 $generated@@149 $generated@@148))) (* 2 ($generated@@135 ($generated@@137 $generated@@148 $generated@@149)))) ($generated@@135 ($generated@@138 $generated@@148 $generated@@149))) (= ($generated@@135 ($generated@@136 $generated@@148 $generated@@149)) (- ($generated@@135 $generated@@148) ($generated@@135 ($generated@@137 $generated@@148 $generated@@149)))))))
 :pattern ( ($generated@@135 ($generated@@136 $generated@@148 $generated@@149)))
)))
(assert  (and (= (type $generated@@151) $generated@@67) (= (type $generated@@152) $generated@@80)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@80) (= (type $generated@@154) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@153 $generated@@151 $generated@@154)  (or (= $generated@@153 $generated@@152) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@153 $generated@@151 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@78 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@78 0)))
)))
(assert (forall (($generated@@158 Int) ($generated@@159 Int) ) (!  (or (= ($generated@@157 $generated@@158 $generated@@159) $generated@@158) (= ($generated@@157 $generated@@158 $generated@@159) $generated@@159))
 :pattern ( ($generated@@157 $generated@@158 $generated@@159))
)))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) $generated@@67)) (= (type $generated@@167) $generated@@162)) ($generated@@155 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@155 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@67)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@79 $generated@@171 $generated@@2)) (= (type $generated@@180) $generated@@67)) ($generated@@155 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@155 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@80 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@70 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@80) (= (type $generated@@231) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@232) ($generated@@69 $generated@@4))) (= (type $generated@@234) $generated@@80)) (= (type $generated@@235) ($generated@@69 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@82 (type $generated@@237))))
 (=> (and (= (type $generated@@237) ($generated@@79 $generated@@239 $generated@@2)) (= (type $generated@@238) ($generated@@79 $generated@@239 $generated@@2))) (= ($generated@@137 ($generated@@137 $generated@@237 $generated@@238) $generated@@238) ($generated@@137 $generated@@237 $generated@@238))))
 :pattern ( ($generated@@137 ($generated@@137 $generated@@237 $generated@@238) $generated@@238))
)))
(assert (= (type $generated@@240) $generated@@67))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@80) (= (type $generated@@242) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@241 $generated@@240 $generated@@242) ($generated@@77 $generated@@241 $generated@@151 $generated@@242)))
 :pattern ( ($generated@@77 $generated@@241 $generated@@240 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@162)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@171)) (= (type $generated@@250) $generated@@171)) (= ($generated@@155 ($generated@@243 $generated@@249 $generated@@250) ($generated@@161 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@155 ($generated@@243 $generated@@249 $generated@@250) ($generated@@161 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
 (=> (and (= (type $generated@@251) ($generated@@79 $generated@@254 $generated@@2)) (= (type $generated@@252) ($generated@@79 $generated@@254 $generated@@2))) (= ($generated ($generated@@84 ($generated@@138 $generated@@251 $generated@@252) $generated@@253)) (+ ($generated ($generated@@84 $generated@@251 $generated@@253)) ($generated ($generated@@84 $generated@@252 $generated@@253))))))
 :pattern ( ($generated@@84 ($generated@@138 $generated@@251 $generated@@252) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@162) (= (type $generated@@256) $generated@@162)) (= ($generated@@168 $generated@@255 $generated@@256) (= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@168 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@67)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@79 $generated@@171 $generated@@4)) (= (type $generated@@260) $generated@@67)) (= ($generated@@155 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@171) ($generated@@0 ($generated@@84 $generated@@259 $generated@@261))) ($generated@@244 $generated@@261 $generated@@260))
 :pattern ( ($generated@@84 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@155 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@67)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@79 $generated@@171 $generated@@4)) (= (type $generated@@265) $generated@@67)) (= ($generated@@155 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@171) ($generated@@0 ($generated@@84 $generated@@264 $generated@@266))) ($generated@@244 $generated@@266 $generated@@265))
 :pattern ( ($generated@@84 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@155 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 Int) ) (!  (=> (<= 0 $generated@@268) (= ($generated@@267 $generated@@268) $generated@@268))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@67) (= (type $generated@@276) $generated@@67)) (= (type $generated@@277) $generated@@171)) (= (type $generated@@278) $generated@@171)) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@273 $generated@@279)) (= ($generated@@77 ($generated@@243 $generated@@277 $generated@@278) ($generated@@161 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@77 ($generated@@243 $generated@@277 $generated@@278) ($generated@@161 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@71)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@162) (= ($generated@@160 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@160 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
 (=> (and (= (type $generated@@283) ($generated@@79 $generated@@286 $generated@@2)) (= (type $generated@@284) ($generated@@79 $generated@@286 $generated@@2))) (= ($generated ($generated@@84 ($generated@@136 $generated@@283 $generated@@284) $generated@@285)) ($generated@@267 (- ($generated ($generated@@84 $generated@@283 $generated@@285)) ($generated ($generated@@84 $generated@@284 $generated@@285)))))))
 :pattern ( ($generated@@84 ($generated@@136 $generated@@283 $generated@@284) $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@162) ($generated@@160 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@171) (= (type $generated@@289) $generated@@171)) (= $generated@@287 ($generated@@243 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@160 $generated@@287))
)))
(assert  (and (and (forall (($generated@@294 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@294)) 17)) (forall (($generated@@295 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@292 $generated@@295))
))) (forall (($generated@@296 T@T) ) (! (= (type ($generated@@290 $generated@@296)) ($generated@@292 $generated@@296))
 :pattern ( ($generated@@290 $generated@@296))
))))
(assert (forall (($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@297)) 0)
 :pattern ( ($generated@@290 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@171)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@67) (= (type $generated@@302) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@274 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@77 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@274 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@79 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@82 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@79 $generated@@306 $generated@@2)) (and (= (= ($generated@@135 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@135 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@84 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@135 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (! (let (($generated@@311 (type $generated@@310)))
 (=> (and (and (= (type $generated@@308) ($generated@@79 $generated@@311 $generated@@2)) (= (type $generated@@309) ($generated@@79 $generated@@311 $generated@@2))) (<= ($generated ($generated@@84 $generated@@308 $generated@@310)) ($generated ($generated@@84 $generated@@309 $generated@@310)))) (= ($generated ($generated@@84 ($generated@@136 $generated@@308 $generated@@309) $generated@@310)) 0)))
 :pattern ( ($generated@@136 $generated@@308 $generated@@309) ($generated@@84 $generated@@309 $generated@@310) ($generated@@84 $generated@@308 $generated@@310))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@79 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@79 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@84 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@84 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@82 (type $generated@@348))))
 (=> (and (= (type $generated@@348) ($generated@@79 $generated@@350 $generated@@2)) (= (type $generated@@349) ($generated@@79 $generated@@350 $generated@@2))) (= ($generated@@135 ($generated@@138 $generated@@348 $generated@@349)) (+ ($generated@@135 $generated@@348) ($generated@@135 $generated@@349)))))
 :pattern ( ($generated@@135 ($generated@@138 $generated@@348 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@82 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@79 $generated@@352 $generated@@2)) (= ($generated@@177 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@84 $generated@@351 $generated@@353))) (<= ($generated ($generated@@84 $generated@@351 $generated@@353)) ($generated@@135 $generated@@351))))
 :pattern ( ($generated@@84 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@177 $generated@@351))
)))
(assert (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@171) ($generated@@244 $generated@@357 $generated@@151)) (and (= ($generated@@298 ($generated@@354 $generated@@80 $generated@@357)) $generated@@357) ($generated@@155 ($generated@@354 $generated@@80 $generated@@357) $generated@@151)))
 :pattern ( ($generated@@244 $generated@@357 $generated@@151))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@171) ($generated@@244 $generated@@358 $generated@@240)) (and (= ($generated@@298 ($generated@@354 $generated@@80 $generated@@358)) $generated@@358) ($generated@@155 ($generated@@354 $generated@@80 $generated@@358) $generated@@240)))
 :pattern ( ($generated@@244 $generated@@358 $generated@@240))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@80) (= ($generated@@155 $generated@@359 $generated@@240)  (and ($generated@@155 $generated@@359 $generated@@151) (not (= $generated@@359 $generated@@152)))))
 :pattern ( ($generated@@155 $generated@@359 $generated@@240))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@316 (type $generated@@360))))
(let (($generated@@362 ($generated@@315 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@314 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@313 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@312 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@316 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@79 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@316 (type $generated@@367))))
(let (($generated@@369 ($generated@@315 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@314 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@313 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@84 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@334 (type $generated@@371))))
(let (($generated@@373 ($generated@@333 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@332 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@331 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@84 ($generated@@330 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@330 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@334 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@334 (type $generated@@378))))
(let (($generated@@380 ($generated@@333 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@332 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@331 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@84 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@79 $generated@@171 $generated@@2)) (= (type $generated@@383) $generated@@67)) (= ($generated@@155 $generated@@382 ($generated@@176 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@171) (< 0 ($generated ($generated@@84 $generated@@382 $generated@@384)))) ($generated@@244 $generated@@384 $generated@@383))
 :pattern ( ($generated@@84 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@155 $generated@@382 ($generated@@176 $generated@@383)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@82 (type $generated@@386))))
 (=> (and (= (type $generated@@386) ($generated@@79 $generated@@388 $generated@@2)) (= (type $generated@@387) ($generated@@79 $generated@@388 $generated@@2))) (= ($generated@@385 $generated@@386 $generated@@387) (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@388) (= ($generated ($generated@@84 $generated@@386 $generated@@389)) ($generated ($generated@@84 $generated@@387 $generated@@389))))
 :pattern ( ($generated@@84 $generated@@386 $generated@@389))
 :pattern ( ($generated@@84 $generated@@387 $generated@@389))
)))))
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@79 $generated@@171 $generated@@4)) (= (type $generated@@391) $generated@@67)) (= (type $generated@@392) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@390 ($generated@@257 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@171) ($generated@@0 ($generated@@84 $generated@@390 $generated@@393))) ($generated@@274 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@84 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@77 $generated@@390 ($generated@@257 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@79 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@394 ($generated@@262 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@84 $generated@@394 $generated@@397))) ($generated@@274 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@84 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@77 $generated@@394 ($generated@@262 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated ($generated@@84 ($generated@@303 $generated@@399) $generated@@398)) 0))
 :pattern ( (let (($generated@@399 (type $generated@@398)))
($generated@@84 ($generated@@303 $generated@@399) $generated@@398)))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@79 $generated@@171 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@316 (type $generated@@403))))
(let (($generated@@405 ($generated@@315 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@79 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@314 $generated@@171 $generated@@171)) (= (type $generated@@407) $generated@@171)) (= ($generated@@0 ($generated@@84 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@406) ($generated@@169 ($generated@@354 $generated@@162 $generated@@407)))) (= ($generated@@84 ($generated@@401 $generated@@406) ($generated@@169 ($generated@@354 $generated@@162 $generated@@407))) ($generated@@170 ($generated@@354 $generated@@162 $generated@@407))))))
 :pattern ( ($generated@@84 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@79 $generated@@171 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@334 (type $generated@@411))))
(let (($generated@@413 ($generated@@333 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@79 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@332 $generated@@171 $generated@@171)) (= (type $generated@@415) $generated@@171)) (= ($generated@@0 ($generated@@84 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@84 ($generated@@330 $generated@@414) ($generated@@169 ($generated@@354 $generated@@162 $generated@@415)))) (= ($generated@@84 ($generated@@409 $generated@@414) ($generated@@169 ($generated@@354 $generated@@162 $generated@@415))) ($generated@@170 ($generated@@354 $generated@@162 $generated@@415))))))
 :pattern ( ($generated@@84 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@315 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@314 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@84 ($generated@@364 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@84 ($generated@@401 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@416) $generated@@420))
 :pattern ( ($generated@@84 ($generated@@401 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@333 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@332 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@84 ($generated@@375 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@84 ($generated@@330 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@84 ($generated@@409 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@84 ($generated@@330 $generated@@421) $generated@@425))
 :pattern ( ($generated@@84 ($generated@@409 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@314 $generated@@171 $generated@@171)) (= (type $generated@@430) $generated@@67)) (= (type $generated@@431) $generated@@67)) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@171) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@429) $generated@@433))) (and ($generated@@274 ($generated@@84 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@274 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@84 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@77 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@332 $generated@@171 $generated@@171)) (= (type $generated@@438) $generated@@67)) (= (type $generated@@439) $generated@@67)) (= (type $generated@@440) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@171) ($generated@@0 ($generated@@84 ($generated@@330 $generated@@437) $generated@@441))) (and ($generated@@274 ($generated@@84 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@274 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@84 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@84 ($generated@@330 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@77 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@82 (type $generated@@442))))
 (=> (and (and (= (type $generated@@442) ($generated@@79 $generated@@444 $generated@@2)) (= (type $generated@@443) ($generated@@79 $generated@@444 $generated@@2))) ($generated@@385 $generated@@442 $generated@@443)) (= $generated@@442 $generated@@443)))
 :pattern ( ($generated@@385 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@446 T@T) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@79 $generated@@446 $generated@@4))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@334 (type $generated@@447))))
(let (($generated@@449 ($generated@@333 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@332 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@331 $generated@@449 $generated@@448)) (= ($generated@@330 $generated@@447) ($generated@@445 $generated@@449))))))
 :pattern ( ($generated@@330 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@334 (type $generated@@450))))
(let (($generated@@452 ($generated@@333 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@332 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@331 $generated@@452 $generated@@451)) (= ($generated@@375 $generated@@450) ($generated@@445 $generated@@451))))))
 :pattern ( ($generated@@375 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@334 (type $generated@@453))))
(let (($generated@@455 ($generated@@333 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@332 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@331 $generated@@455 $generated@@454)) (= ($generated@@408 $generated@@453) ($generated@@445 $generated@@171))))))
 :pattern ( ($generated@@408 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@316 (type $generated@@456))))
(let (($generated@@458 ($generated@@315 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@314 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@313 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@171) (= (type $generated@@460) $generated@@171)) ($generated@@0 ($generated@@84 ($generated@@400 $generated@@456) ($generated@@298 ($generated@@243 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@400 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@334 (type $generated@@461))))
(let (($generated@@463 ($generated@@333 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@332 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@331 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@171) (= (type $generated@@465) $generated@@171)) ($generated@@0 ($generated@@84 ($generated@@408 $generated@@461) ($generated@@298 ($generated@@243 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@408 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@171) ($generated@@244 $generated@@466 $generated@@46)) (and (= ($generated@@298 ($generated@@354 $generated@@2 $generated@@466)) $generated@@466) ($generated@@155 ($generated@@354 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@244 $generated@@467 $generated@@47)) (and (= ($generated@@298 ($generated@@354 $generated@@3 $generated@@467)) $generated@@467) ($generated@@155 ($generated@@354 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@244 $generated@@468 $generated@@44)) (and (= ($generated@@298 ($generated@@354 $generated@@4 $generated@@468)) $generated@@468) ($generated@@155 ($generated@@354 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 20))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@171) ($generated@@244 $generated@@470 $generated@@45)) (and (= ($generated@@298 ($generated@@354 $generated@@469 $generated@@470)) $generated@@470) ($generated@@155 ($generated@@354 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@67) (= ($generated@@244 ($generated@@298 $generated@@471) $generated@@472) ($generated@@155 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@244 ($generated@@298 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@82 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@79 $generated@@474 $generated@@2)) (<= 0 ($generated@@135 $generated@@473))))
 :pattern ( ($generated@@135 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@293 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@292 $generated@@476)) (<= 0 ($generated@@291 $generated@@475))))
 :pattern ( ($generated@@291 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
 (=> (and (= (type $generated@@477) ($generated@@79 $generated@@480 $generated@@2)) (= (type $generated@@478) ($generated@@79 $generated@@480 $generated@@2))) (= ($generated ($generated@@84 ($generated@@137 $generated@@477 $generated@@478) $generated@@479)) ($generated@@157 ($generated ($generated@@84 $generated@@477 $generated@@479)) ($generated ($generated@@84 $generated@@478 $generated@@479))))))
 :pattern ( ($generated@@84 ($generated@@137 $generated@@477 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@481 ($generated@@426 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@426 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@426 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@426 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@75 ($generated@@426 $generated@@489 $generated@@490)) $generated@@58))
 :pattern ( ($generated@@426 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@491 ($generated@@434 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@434 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@434 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@434 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@75 ($generated@@434 $generated@@499 $generated@@500)) $generated@@59))
 :pattern ( ($generated@@434 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@171) (= (type $generated@@502) $generated@@171)) (= ($generated@@280 ($generated@@243 $generated@@501 $generated@@502)) $generated@@63))
 :pattern ( ($generated@@243 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@67) (= (type $generated@@506) $generated@@67)) (= ($generated@@503 ($generated@@161 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@161 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@67) (= (type $generated@@510) $generated@@67)) (= ($generated@@507 ($generated@@161 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@161 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@171) (= (type $generated@@512) $generated@@171)) (= ($generated@@169 ($generated@@243 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@243 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@171) (= (type $generated@@514) $generated@@171)) (= ($generated@@170 ($generated@@243 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@80) ($generated@@155 $generated@@515 $generated@@151))
 :pattern ( ($generated@@155 $generated@@515 $generated@@151))
)))
(assert  (and (forall (($generated@@518 T@U) ) (! (= (type ($generated@@516 $generated@@518)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@518))
)) (forall (($generated@@519 T@U) ($generated@@520 Int) ) (! (let (($generated@@521 ($generated@@293 (type $generated@@519))))
(= (type ($generated@@517 $generated@@519 $generated@@520)) $generated@@521))
 :pattern ( ($generated@@517 $generated@@519 $generated@@520))
))))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@292 $generated@@171)) (= (type $generated@@523) $generated@@67)) (= (type $generated@@524) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@522 ($generated@@516 $generated@@523) $generated@@524) (forall (($generated@@525 Int) ) (!  (=> (and (<= 0 $generated@@525) (< $generated@@525 ($generated@@291 $generated@@522))) ($generated@@274 ($generated@@517 $generated@@522 $generated@@525) $generated@@523 $generated@@524))
 :pattern ( ($generated@@517 $generated@@522 $generated@@525))
))))
 :pattern ( ($generated@@77 $generated@@522 ($generated@@516 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@526 ($generated@@78 $generated@@527)) $generated@@527)
 :pattern ( ($generated@@78 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@257 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@257 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@75 ($generated@@257 $generated@@531)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@532 ($generated@@262 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@262 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@75 ($generated@@262 $generated@@535)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@176 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@176 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@75 ($generated@@176 $generated@@539)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@516 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@516 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@75 ($generated@@516 $generated@@543)) $generated@@57))
 :pattern ( ($generated@@516 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@354 $generated@@545 ($generated@@298 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@298 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@314 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (= ($generated@@155 $generated@@546 ($generated@@426 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@546) $generated@@549))) (and ($generated@@244 ($generated@@84 ($generated@@401 $generated@@546) $generated@@549) $generated@@548) ($generated@@244 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@84 ($generated@@401 $generated@@546) $generated@@549))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@155 $generated@@546 ($generated@@426 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@332 $generated@@171 $generated@@171)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) (= ($generated@@155 $generated@@550 ($generated@@434 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@171) ($generated@@0 ($generated@@84 ($generated@@330 $generated@@550) $generated@@553))) (and ($generated@@244 ($generated@@84 ($generated@@409 $generated@@550) $generated@@553) $generated@@552) ($generated@@244 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@84 ($generated@@409 $generated@@550) $generated@@553))
 :pattern ( ($generated@@84 ($generated@@330 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@155 $generated@@550 ($generated@@434 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@171)) (< ($generated@@554 $generated@@556) ($generated@@555 ($generated@@243 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@243 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@171) (= (type $generated@@559) $generated@@171)) (< ($generated@@554 $generated@@559) ($generated@@555 ($generated@@243 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@243 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@82 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@79 $generated@@562 $generated@@2)) (= (type $generated@@561) ($generated@@79 $generated@@562 $generated@@2))) (= ($generated@@137 $generated@@560 ($generated@@137 $generated@@560 $generated@@561)) ($generated@@137 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@137 $generated@@560 ($generated@@137 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@171) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) $generated@@67)) ($generated@@244 $generated@@563 ($generated@@426 $generated@@564 $generated@@565))) (and (= ($generated@@298 ($generated@@354 ($generated@@314 $generated@@171 $generated@@171) $generated@@563)) $generated@@563) ($generated@@155 ($generated@@354 ($generated@@314 $generated@@171 $generated@@171) $generated@@563) ($generated@@426 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@244 $generated@@563 ($generated@@426 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@171) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) $generated@@67)) ($generated@@244 $generated@@566 ($generated@@434 $generated@@567 $generated@@568))) (and (= ($generated@@298 ($generated@@354 ($generated@@332 $generated@@171 $generated@@171) $generated@@566)) $generated@@566) ($generated@@155 ($generated@@354 ($generated@@332 $generated@@171 $generated@@171) $generated@@566) ($generated@@434 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@244 $generated@@566 ($generated@@434 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@67) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) $generated@@171)) ($generated@@244 $generated@@571 ($generated@@161 $generated@@569 $generated@@570))) (and (= ($generated@@298 ($generated@@354 $generated@@162 $generated@@571)) $generated@@571) ($generated@@155 ($generated@@354 $generated@@162 $generated@@571) ($generated@@161 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@244 $generated@@571 ($generated@@161 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@84 ($generated@@445 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@84 ($generated@@445 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@72)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@67) (= (type $generated@@577) $generated@@67)) (and (= ($generated@@75 ($generated@@161 $generated@@576 $generated@@577)) $generated@@64) (= ($generated@@574 ($generated@@161 $generated@@576 $generated@@577)) $generated@@66)))
 :pattern ( ($generated@@161 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@162) (= ($generated@@554 ($generated@@298 $generated@@578)) ($generated@@555 $generated@@578)))
 :pattern ( ($generated@@554 ($generated@@298 $generated@@578)))
)))
(assert (forall (($generated@@579 Int) ($generated@@580 Int) ) (! (= (<= $generated@@579 $generated@@580) (= ($generated@@157 $generated@@579 $generated@@580) $generated@@579))
 :pattern ( ($generated@@157 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 Int) ($generated@@582 Int) ) (! (= (<= $generated@@582 $generated@@581) (= ($generated@@157 $generated@@581 $generated@@582) $generated@@582))
 :pattern ( ($generated@@157 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@171) ($generated@@244 $generated@@583 ($generated@@78 0))) (and (= ($generated@@298 ($generated@@354 $generated@@2 $generated@@583)) $generated@@583) ($generated@@155 ($generated@@354 ($generated@@79 $generated@@171 $generated@@4) $generated@@583) ($generated@@78 0))))
 :pattern ( ($generated@@244 $generated@@583 ($generated@@78 0)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@171) (= (type $generated@@585) $generated@@67)) ($generated@@244 $generated@@584 ($generated@@257 $generated@@585))) (and (= ($generated@@298 ($generated@@354 ($generated@@79 $generated@@171 $generated@@4) $generated@@584)) $generated@@584) ($generated@@155 ($generated@@354 ($generated@@79 $generated@@171 $generated@@4) $generated@@584) ($generated@@257 $generated@@585))))
 :pattern ( ($generated@@244 $generated@@584 ($generated@@257 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@171) (= (type $generated@@587) $generated@@67)) ($generated@@244 $generated@@586 ($generated@@262 $generated@@587))) (and (= ($generated@@298 ($generated@@354 ($generated@@79 $generated@@171 $generated@@4) $generated@@586)) $generated@@586) ($generated@@155 ($generated@@354 ($generated@@79 $generated@@171 $generated@@4) $generated@@586) ($generated@@262 $generated@@587))))
 :pattern ( ($generated@@244 $generated@@586 ($generated@@262 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@171) (= (type $generated@@589) $generated@@67)) ($generated@@244 $generated@@588 ($generated@@176 $generated@@589))) (and (= ($generated@@298 ($generated@@354 ($generated@@79 $generated@@171 $generated@@2) $generated@@588)) $generated@@588) ($generated@@155 ($generated@@354 ($generated@@79 $generated@@171 $generated@@2) $generated@@588) ($generated@@176 $generated@@589))))
 :pattern ( ($generated@@244 $generated@@588 ($generated@@176 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@171) (= (type $generated@@591) $generated@@67)) ($generated@@244 $generated@@590 ($generated@@516 $generated@@591))) (and (= ($generated@@298 ($generated@@354 ($generated@@292 $generated@@171) $generated@@590)) $generated@@590) ($generated@@155 ($generated@@354 ($generated@@292 $generated@@171) $generated@@590) ($generated@@516 $generated@@591))))
 :pattern ( ($generated@@244 $generated@@590 ($generated@@516 $generated@@591)))
)))
(assert (= ($generated@@75 $generated@@151) $generated@@61))
(assert (= ($generated@@574 $generated@@151) $generated@@65))
(assert (= ($generated@@75 $generated@@240) $generated@@62))
(assert (= ($generated@@574 $generated@@240) $generated@@65))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@171 $generated@@2)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@592 ($generated@@176 $generated@@593) $generated@@594) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@171) (< 0 ($generated ($generated@@84 $generated@@592 $generated@@595)))) ($generated@@274 $generated@@595 $generated@@593 $generated@@594))
 :pattern ( ($generated@@84 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@77 $generated@@592 ($generated@@176 $generated@@593) $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@162) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@273 $generated@@598) (and ($generated@@160 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@67) ($generated@@77 $generated@@596 ($generated@@161 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@77 $generated@@596 ($generated@@161 $generated@@597 $generated@@599) $generated@@598))
))))) ($generated@@274 ($generated@@169 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@274 ($generated@@169 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@162) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@273 $generated@@602) (and ($generated@@160 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@77 $generated@@600 ($generated@@161 $generated@@603 $generated@@601) $generated@@602))
 :pattern ( ($generated@@77 $generated@@600 ($generated@@161 $generated@@603 $generated@@601) $generated@@602))
))))) ($generated@@274 ($generated@@170 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@274 ($generated@@170 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 Int) ) (!  (=> (< $generated@@604 0) (= ($generated@@267 $generated@@604) 0))
 :pattern ( ($generated@@267 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@171) (= (type $generated@@606) $generated@@171)) (= ($generated@@243 ($generated@@269 $generated@@605) ($generated@@269 $generated@@606)) ($generated@@269 ($generated@@243 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@243 ($generated@@269 $generated@@605) ($generated@@269 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@298 ($generated@@269 $generated@@607)) ($generated@@269 ($generated@@298 $generated@@607)))
 :pattern ( ($generated@@298 ($generated@@269 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@293 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@292 $generated@@609)) (= ($generated@@291 $generated@@608) 0)) (= $generated@@608 ($generated@@290 $generated@@609))))
 :pattern ( ($generated@@291 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@79 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@135 ($generated@@85 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@135 $generated@@610) ($generated ($generated@@84 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@135 ($generated@@85 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@615) $generated@@2)) ($generated@@77 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@77 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@617) $generated@@3)) ($generated@@77 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@77 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@619) $generated@@4)) ($generated@@77 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@77 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@621) $generated@@469)) ($generated@@77 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@77 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@623) $generated@@171)) ($generated@@77 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@77 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@292 $generated@@171)) (= (type $generated@@625) $generated@@67)) (= ($generated@@155 $generated@@624 ($generated@@516 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@291 $generated@@624))) ($generated@@244 ($generated@@517 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@517 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@155 $generated@@624 ($generated@@516 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@292 $generated@@171)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@291 $generated@@628))) (< ($generated@@555 ($generated@@354 $generated@@162 ($generated@@517 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@555 ($generated@@354 $generated@@162 ($generated@@517 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@314 $generated@@171 $generated@@171)) (= (type $generated@@631) $generated@@67)) (= (type $generated@@632) $generated@@67)) ($generated@@155 $generated@@630 ($generated@@426 $generated@@631 $generated@@632))) (and (and ($generated@@155 ($generated@@312 $generated@@630) ($generated@@257 $generated@@631)) ($generated@@155 ($generated@@364 $generated@@630) ($generated@@257 $generated@@632))) ($generated@@155 ($generated@@400 $generated@@630) ($generated@@257 ($generated@@161 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@155 $generated@@630 ($generated@@426 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@332 $generated@@171 $generated@@171)) (= (type $generated@@634) $generated@@67)) (= (type $generated@@635) $generated@@67)) ($generated@@155 $generated@@633 ($generated@@434 $generated@@634 $generated@@635))) (and (and ($generated@@155 ($generated@@330 $generated@@633) ($generated@@262 $generated@@634)) ($generated@@155 ($generated@@375 $generated@@633) ($generated@@262 $generated@@635))) ($generated@@155 ($generated@@408 $generated@@633) ($generated@@262 ($generated@@161 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@155 $generated@@633 ($generated@@434 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@155 $generated@@636 $generated@@46))
 :pattern ( ($generated@@155 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@155 $generated@@637 $generated@@47))
 :pattern ( ($generated@@155 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@155 $generated@@638 $generated@@44))
 :pattern ( ($generated@@155 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@469) ($generated@@155 $generated@@639 $generated@@45))
 :pattern ( ($generated@@155 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@171) ($generated@@155 $generated@@640 $generated@@48))
 :pattern ( ($generated@@155 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 (T@U) Bool)
(declare-fun $generated@@647 () Int)
(assert  (and (and (and (and (= (type $generated@@641) ($generated@@79 $generated@@171 $generated@@2)) (= (type $generated@@642) ($generated@@79 $generated@@171 $generated@@2))) (= (type $generated@@643) $generated@@80)) (= (type $generated@@644) ($generated@@183 $generated@@80 $generated@@4))) (= (type $generated@@645) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@648  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@385 ($generated@@138 $generated@@641 ($generated@@136 $generated@@642 $generated@@641)) $generated@@642))))
(let (($generated@@649  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@385 ($generated@@136 ($generated@@138 $generated@@641 $generated@@642) $generated@@642) $generated@@641))))
(let (($generated@@650  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@385 ($generated@@136 ($generated@@138 $generated@@641 $generated@@642) $generated@@641) $generated@@642))))
(let (($generated@@651  (=> (<= ($generated ($generated@@84 $generated@@642 ($generated@@298 $generated@@643))) 0) (and (and (=> (= (ControlFlow 0 9) 2) $generated@@650) (=> (= (ControlFlow 0 9) 4) $generated@@649)) (=> (= (ControlFlow 0 9) 6) $generated@@648)))))
(let (($generated@@652  (=> (< 0 ($generated ($generated@@84 $generated@@642 ($generated@@298 $generated@@643)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (< 0 ($generated ($generated@@84 ($generated@@138 $generated@@641 $generated@@642) ($generated@@298 $generated@@643))))) (=> (< 0 ($generated ($generated@@84 ($generated@@138 $generated@@641 $generated@@642) ($generated@@298 $generated@@643)))) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@650) (=> (= (ControlFlow 0 7) 4) $generated@@649)) (=> (= (ControlFlow 0 7) 6) $generated@@648)))))))
(let (($generated@@653  (and (=> (= (ControlFlow 0 10) 7) $generated@@652) (=> (= (ControlFlow 0 10) 9) $generated@@651))))
(let (($generated@@654  (=> (and (<= ($generated ($generated@@84 $generated@@641 ($generated@@298 $generated@@643))) 0) (= (ControlFlow 0 13) 10)) $generated@@653)))
(let (($generated@@655  (=> (< 0 ($generated ($generated@@84 $generated@@641 ($generated@@298 $generated@@643)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (< 0 ($generated ($generated@@84 ($generated@@138 $generated@@641 $generated@@642) ($generated@@298 $generated@@643))))) (=> (< 0 ($generated ($generated@@84 ($generated@@138 $generated@@641 $generated@@642) ($generated@@298 $generated@@643)))) (=> (= (ControlFlow 0 11) 10) $generated@@653))))))
(let (($generated@@656  (=> (= $generated@@644 ($generated@@182 $generated@@152 $generated@@645 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 11) $generated@@655) (=> (= (ControlFlow 0 14) 13) $generated@@654)))))
(let (($generated@@657  (=> (and ($generated@@273 $generated@@645) ($generated@@646 $generated@@645)) (=> (and (and (and ($generated@@155 $generated@@641 ($generated@@176 $generated@@240)) ($generated@@77 $generated@@641 ($generated@@176 $generated@@240) $generated@@645)) (and ($generated@@155 $generated@@642 ($generated@@176 $generated@@240)) ($generated@@77 $generated@@642 ($generated@@176 $generated@@240) $generated@@645))) (and (and ($generated@@155 $generated@@643 $generated@@240) ($generated@@77 $generated@@643 $generated@@240 $generated@@645)) (and (= 1 $generated@@647) (= (ControlFlow 0 15) 14)))) $generated@@656))))
$generated@@657)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@511 $generated@@512)) $generated@@62) (= ($generated@@509 ($generated@@135 $generated@@511 $generated@@512)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@513)) ($generated@@493 $generated@@513)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@212 $generated@@514 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@514) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@75 0)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@221 $generated@@516))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@221 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@221 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@226 $generated@@518))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@226 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@226 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@150 $generated@@520))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519) ($generated@@150 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@150 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) ($generated@@212 $generated@@521 ($generated@@454 $generated@@522))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521) ($generated@@454 $generated@@522))))
 :pattern ( ($generated@@212 $generated@@521 ($generated@@454 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@523 $generated@@526)))) ($generated@@238 $generated@@526 $generated@@524 $generated@@525))
 :pattern ( ($generated@@81 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@136) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@529) (and ($generated@@134 $generated@@527) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@64) ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
 :pattern ( ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
))))) ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@136) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@533) (and ($generated@@134 $generated@@531) (exists (($generated@@534 T@U) ) (!  (and (= (type $generated@@534) $generated@@64) ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
))))) ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)) ($generated@@233 ($generated@@211 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@537))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))))
)))
(assert (forall (($generated@@538 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@538)) ($generated@@233 ($generated@@258 $generated@@538)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@253 (type $generated@@539))))
 (=> (and (= (type $generated@@539) ($generated@@252 $generated@@540)) (= ($generated@@251 $generated@@539) 0)) (= $generated@@539 ($generated@@250 $generated@@540))))
 :pattern ( ($generated@@251 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@542)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@2)) (= (type $generated@@543) $generated@@2)) (<= 0 ($generated $generated@@543))) (= ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)) (+ (- ($generated@@263 $generated@@541) ($generated ($generated@@81 $generated@@541 $generated@@542))) ($generated $generated@@543)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@546) $generated@@2)) ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
 :pattern ( ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@3)) ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@4)) ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@412)) ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@145)) ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@252 $generated@@145)) (= (type $generated@@556) $generated@@64)) (= ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@251 $generated@@555))) ($generated@@212 ($generated@@455 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@455 $generated@@555 $generated@@557))
))))
 :pattern ( ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@559))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))) ($generated@@558 $generated@@559))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@269 $generated@@561) ($generated@@221 $generated@@562)) ($generated@@132 ($generated@@312 $generated@@561) ($generated@@221 $generated@@563))) ($generated@@132 ($generated@@343 $generated@@561) ($generated@@221 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@287 $generated@@564) ($generated@@226 $generated@@565)) ($generated@@132 ($generated@@323 $generated@@564) ($generated@@226 $generated@@566))) ($generated@@132 ($generated@@354 $generated@@564) ($generated@@226 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@2) ($generated@@132 $generated@@567 $generated@@46))
 :pattern ( ($generated@@132 $generated@@567 $generated@@46))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@3) ($generated@@132 $generated@@568 $generated@@47))
 :pattern ( ($generated@@132 $generated@@568 $generated@@47))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@4) ($generated@@132 $generated@@569 $generated@@44))
 :pattern ( ($generated@@132 $generated@@569 $generated@@44))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@412) ($generated@@132 $generated@@570 $generated@@45))
 :pattern ( ($generated@@132 $generated@@570 $generated@@45))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@145) ($generated@@132 $generated@@571 $generated@@48))
 :pattern ( ($generated@@132 $generated@@571 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () Int)
(declare-fun $generated@@577 (T@U) Bool)
(declare-fun $generated@@578 () Int)
(assert  (and (and (and (= (type $generated@@572) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@573) $generated@@77)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@575) ($generated@@76 $generated@@145 $generated@@2))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@579  (=> (= $generated@@572 ($generated@@156 $generated@@573 $generated@@574 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@231 0) ($generated ($generated@@81 $generated@@575 ($generated@@258 ($generated@@8 $generated@@576)))))) (=> (<= ($generated@@231 0) ($generated ($generated@@81 $generated@@575 ($generated@@258 ($generated@@8 $generated@@576))))) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated ($generated@@81 $generated@@575 ($generated@@258 ($generated@@8 $generated@@576)))) ($generated@@263 $generated@@575))))))))
(let (($generated@@580  (=> (and ($generated@@237 $generated@@574) ($generated@@577 $generated@@574)) (=> (and (and ($generated@@132 $generated@@575 ($generated@@150 $generated@@46)) ($generated@@74 $generated@@575 ($generated@@150 $generated@@46) $generated@@574)) (and (= 0 $generated@@578) (= (ControlFlow 0 4) 2))) $generated@@579))))
$generated@@580)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@T) T@U)
(declare-fun $generated@@134 (T@T) T@U)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U Int) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@T) T@U)
(declare-fun $generated@@424 () T@T)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@567 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@137)) 14)) (forall (($generated@@138 T@T) ) (! (= ($generated@@136 ($generated@@135 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@135 $generated@@138))
))) (forall (($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@136 (type $generated@@139))))
(= (type ($generated@@132 $generated@@139)) ($generated@@76 $generated@@140 $generated@@2)))
 :pattern ( ($generated@@132 $generated@@139))
))) (forall (($generated@@141 T@T) ) (! (= (type ($generated@@133 $generated@@141)) ($generated@@135 $generated@@141))
 :pattern ( ($generated@@133 $generated@@141))
))) (forall (($generated@@142 T@T) ) (! (= (type ($generated@@134 $generated@@142)) ($generated@@76 $generated@@142 $generated@@2))
 :pattern ( ($generated@@134 $generated@@142))
))))
(assert (forall (($generated@@143 T@T) ) (= ($generated@@132 ($generated@@133 $generated@@143)) ($generated@@134 $generated@@143))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@136 (type $generated@@167))))
 (=> (= (type $generated@@167) ($generated@@135 $generated@@168)) ($generated@@163 ($generated@@132 $generated@@167))))
 :pattern ( ($generated@@132 $generated@@167))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 17)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@77 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@67 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@77) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@220) ($generated@@66 $generated@@4))) (= (type $generated@@222) $generated@@77)) (= (type $generated@@223) ($generated@@66 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 Int) ) (! (let (($generated@@229 ($generated@@136 (type $generated@@227))))
(= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@229))
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 (type $generated@@231)))
 (=> (= (type $generated@@230) ($generated@@135 $generated@@232)) (= (exists (($generated@@233 Int) ) (!  (and (and (<= 0 $generated@@233) (< $generated@@233 ($generated@@226 $generated@@230))) (= $generated@@231 ($generated@@225 $generated@@230 $generated@@233)))
 :pattern ( ($generated@@225 $generated@@230 $generated@@233))
)) (< 0 ($generated ($generated@@81 ($generated@@132 $generated@@230) $generated@@231))))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@230) $generated@@231))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@148)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@157)) (= (type $generated@@241) $generated@@157)) (= ($generated@@144 ($generated@@234 $generated@@240 $generated@@241) ($generated@@147 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@144 ($generated@@234 $generated@@240 $generated@@241) ($generated@@147 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@148) (= (type $generated@@243) $generated@@148)) (= ($generated@@154 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@154 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@144 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@157) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@235 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@144 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@252) $generated@@64)) (= ($generated@@144 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@157) ($generated@@0 ($generated@@81 $generated@@251 $generated@@253))) ($generated@@235 $generated@@253 $generated@@252))
 :pattern ( ($generated@@81 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@144 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@157)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@258 $generated@@264)) (= ($generated@@74 ($generated@@234 $generated@@262 $generated@@263) ($generated@@147 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@74 ($generated@@234 $generated@@262 $generated@@263) ($generated@@147 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@148) (= ($generated@@146 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@148) ($generated@@146 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@157) (= (type $generated@@270) $generated@@157)) (= $generated@@268 ($generated@@234 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@226 ($generated@@133 $generated@@271)) 0)
 :pattern ( ($generated@@133 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@157)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@259 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@74 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@259 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@277 $generated@@278) 0) (= $generated@@278 ($generated@@134 $generated@@279))) (=> (not (= ($generated@@277 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@163 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@277 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@163 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@144 $generated@@342 ($generated@@162 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@235 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@144 $generated@@342 ($generated@@162 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@244 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@157) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@259 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@244 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@249 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@157) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@259 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@249 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@134 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@134 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@157 $generated@@157)) (= (type $generated@@365) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@155 ($generated@@356 $generated@@148 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@155 ($generated@@356 $generated@@148 $generated@@365))) ($generated@@156 ($generated@@356 $generated@@148 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@157 $generated@@157)) (= (type $generated@@373) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@155 ($generated@@356 $generated@@148 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@155 ($generated@@356 $generated@@148 $generated@@373))) ($generated@@156 ($generated@@356 $generated@@148 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@157 $generated@@157)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@259 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@259 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@157 $generated@@157)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@259 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@259 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@T) ) (! (= (type ($generated@@400 $generated@@401)) ($generated@@76 $generated@@401 $generated@@4))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@303 (type $generated@@402))))
(let (($generated@@404 ($generated@@302 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@301 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@300 $generated@@404 $generated@@403)) (= ($generated@@299 $generated@@402) ($generated@@400 $generated@@404))))))
 :pattern ( ($generated@@299 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@335 $generated@@405) ($generated@@400 $generated@@406))))))
 :pattern ( ($generated@@335 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@366 $generated@@408) ($generated@@400 $generated@@157))))))
 :pattern ( ($generated@@366 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@285 (type $generated@@411))))
(let (($generated@@413 ($generated@@284 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@283 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@282 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (and (and (= (type $generated@@414) $generated@@157) (= (type $generated@@415) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@411) ($generated@@272 ($generated@@234 $generated@@414 $generated@@415)))))
 :no-pattern (type $generated@@414)
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@355 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@303 (type $generated@@416))))
(let (($generated@@418 ($generated@@302 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@301 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@300 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@157) (= (type $generated@@420) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@416) ($generated@@272 ($generated@@234 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@366 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@157) ($generated@@235 $generated@@421 $generated@@46)) (and (= ($generated@@272 ($generated@@356 $generated@@2 $generated@@421)) $generated@@421) ($generated@@144 ($generated@@356 $generated@@2 $generated@@421) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@421 $generated@@46))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@157) ($generated@@235 $generated@@422 $generated@@47)) (and (= ($generated@@272 ($generated@@356 $generated@@3 $generated@@422)) $generated@@422) ($generated@@144 ($generated@@356 $generated@@3 $generated@@422) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@422 $generated@@47))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@157) ($generated@@235 $generated@@423 $generated@@44)) (and (= ($generated@@272 ($generated@@356 $generated@@4 $generated@@423)) $generated@@423) ($generated@@144 ($generated@@356 $generated@@4 $generated@@423) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@423 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@424) 20))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@157) ($generated@@235 $generated@@425 $generated@@45)) (and (= ($generated@@272 ($generated@@356 $generated@@424 $generated@@425)) $generated@@425) ($generated@@144 ($generated@@356 $generated@@424 $generated@@425) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@425 $generated@@45))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (= (type $generated@@427) $generated@@64) (= ($generated@@235 ($generated@@272 $generated@@426) $generated@@427) ($generated@@144 $generated@@426 $generated@@427)))
 :pattern ( ($generated@@235 ($generated@@272 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@79 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@76 $generated@@429 $generated@@2)) (<= 0 ($generated@@277 $generated@@428))))
 :pattern ( ($generated@@277 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@136 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@135 $generated@@431)) (<= 0 ($generated@@226 $generated@@430))))
 :pattern ( ($generated@@226 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@384 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@384 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@384 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@384 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@440 $generated@@441)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@392 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@392 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@392 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@392 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@450 $generated@@451)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@157) (= (type $generated@@453) $generated@@157)) (= ($generated@@265 ($generated@@234 $generated@@452 $generated@@453)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@147 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@147 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@147 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@147 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@157) (= (type $generated@@463) $generated@@157)) (= ($generated@@155 ($generated@@234 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@234 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@156 ($generated@@234 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@234 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@135 $generated@@157)) (= (type $generated@@469) $generated@@64)) (= (type $generated@@470) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@468 ($generated@@466 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@226 $generated@@468))) ($generated@@259 ($generated@@225 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@225 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@74 $generated@@468 ($generated@@466 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@75 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@75 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@244 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@244 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@249 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@249 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@162 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@162 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@466 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@466 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@466 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@466 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@356 $generated@@491 ($generated@@272 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@272 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@283 $generated@@157 $generated@@157)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) $generated@@64)) (= ($generated@@144 $generated@@492 ($generated@@384 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@492) $generated@@495))) (and ($generated@@235 ($generated@@81 ($generated@@357 $generated@@492) $generated@@495) $generated@@494) ($generated@@235 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@492) $generated@@495))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@144 $generated@@492 ($generated@@384 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@301 $generated@@157 $generated@@157)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) (= ($generated@@144 $generated@@496 ($generated@@392 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@496) $generated@@499))) (and ($generated@@235 ($generated@@81 ($generated@@367 $generated@@496) $generated@@499) $generated@@498) ($generated@@235 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@496) $generated@@499))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@144 $generated@@496 ($generated@@392 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@157) (= (type $generated@@503) $generated@@157)) (< ($generated@@500 $generated@@502) ($generated@@501 ($generated@@234 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@234 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@157) (= (type $generated@@505) $generated@@157)) (< ($generated@@500 $generated@@505) ($generated@@501 ($generated@@234 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@234 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@157) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@235 $generated@@506 ($generated@@384 $generated@@507 $generated@@508))) (and (= ($generated@@272 ($generated@@356 ($generated@@283 $generated@@157 $generated@@157) $generated@@506)) $generated@@506) ($generated@@144 ($generated@@356 ($generated@@283 $generated@@157 $generated@@157) $generated@@506) ($generated@@384 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@235 $generated@@506 ($generated@@384 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@157) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@235 $generated@@509 ($generated@@392 $generated@@510 $generated@@511))) (and (= ($generated@@272 ($generated@@356 ($generated@@301 $generated@@157 $generated@@157) $generated@@509)) $generated@@509) ($generated@@144 ($generated@@356 ($generated@@301 $generated@@157 $generated@@157) $generated@@509) ($generated@@392 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@235 $generated@@509 ($generated@@392 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@157)) ($generated@@235 $generated@@514 ($generated@@147 $generated@@512 $generated@@513))) (and (= ($generated@@272 ($generated@@356 $generated@@148 $generated@@514)) $generated@@514) ($generated@@144 ($generated@@356 $generated@@148 $generated@@514) ($generated@@147 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@235 $generated@@514 ($generated@@147 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
 (not ($generated@@0 ($generated@@81 ($generated@@400 $generated@@516) $generated@@515))))
 :pattern ( (let (($generated@@516 (type $generated@@515)))
($generated@@81 ($generated@@400 $generated@@516) $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@519 $generated@@520)) $generated@@62) (= ($generated@@517 ($generated@@147 $generated@@519 $generated@@520)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@148) (= ($generated@@500 ($generated@@272 $generated@@521)) ($generated@@501 $generated@@521)))
 :pattern ( ($generated@@500 ($generated@@272 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@136 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@135 $generated@@523)) (= ($generated@@277 ($generated@@132 $generated@@522)) ($generated@@226 $generated@@522))))
 :pattern ( ($generated@@277 ($generated@@132 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@157) ($generated@@235 $generated@@524 ($generated@@75 0))) (and (= ($generated@@272 ($generated@@356 $generated@@2 $generated@@524)) $generated@@524) ($generated@@144 ($generated@@356 ($generated@@76 $generated@@157 $generated@@4) $generated@@524) ($generated@@75 0))))
 :pattern ( ($generated@@235 $generated@@524 ($generated@@75 0)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@64)) ($generated@@235 $generated@@525 ($generated@@244 $generated@@526))) (and (= ($generated@@272 ($generated@@356 ($generated@@76 $generated@@157 $generated@@4) $generated@@525)) $generated@@525) ($generated@@144 ($generated@@356 ($generated@@76 $generated@@157 $generated@@4) $generated@@525) ($generated@@244 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 ($generated@@244 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@157) (= (type $generated@@528) $generated@@64)) ($generated@@235 $generated@@527 ($generated@@249 $generated@@528))) (and (= ($generated@@272 ($generated@@356 ($generated@@76 $generated@@157 $generated@@4) $generated@@527)) $generated@@527) ($generated@@144 ($generated@@356 ($generated@@76 $generated@@157 $generated@@4) $generated@@527) ($generated@@249 $generated@@528))))
 :pattern ( ($generated@@235 $generated@@527 ($generated@@249 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) ($generated@@235 $generated@@529 ($generated@@162 $generated@@530))) (and (= ($generated@@272 ($generated@@356 ($generated@@76 $generated@@157 $generated@@2) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@356 ($generated@@76 $generated@@157 $generated@@2) $generated@@529) ($generated@@162 $generated@@530))))
 :pattern ( ($generated@@235 $generated@@529 ($generated@@162 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@157) (= (type $generated@@532) $generated@@64)) ($generated@@235 $generated@@531 ($generated@@466 $generated@@532))) (and (= ($generated@@272 ($generated@@356 ($generated@@135 $generated@@157) $generated@@531)) $generated@@531) ($generated@@144 ($generated@@356 ($generated@@135 $generated@@157) $generated@@531) ($generated@@466 $generated@@532))))
 :pattern ( ($generated@@235 $generated@@531 ($generated@@466 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@533 ($generated@@162 $generated@@534) $generated@@535) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@533 $generated@@536)))) ($generated@@259 $generated@@536 $generated@@534 $generated@@535))
 :pattern ( ($generated@@81 $generated@@533 $generated@@536))
))))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@162 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@148) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@258 $generated@@539) (and ($generated@@146 $generated@@537) (exists (($generated@@540 T@U) ) (!  (and (= (type $generated@@540) $generated@@64) ($generated@@74 $generated@@537 ($generated@@147 $generated@@538 $generated@@540) $generated@@539))
 :pattern ( ($generated@@74 $generated@@537 ($generated@@147 $generated@@538 $generated@@540) $generated@@539))
))))) ($generated@@259 ($generated@@155 $generated@@537) $generated@@538 $generated@@539))
 :pattern ( ($generated@@259 ($generated@@155 $generated@@537) $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@148) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@258 $generated@@543) (and ($generated@@146 $generated@@541) (exists (($generated@@544 T@U) ) (!  (and (= (type $generated@@544) $generated@@64) ($generated@@74 $generated@@541 ($generated@@147 $generated@@544 $generated@@542) $generated@@543))
 :pattern ( ($generated@@74 $generated@@541 ($generated@@147 $generated@@544 $generated@@542) $generated@@543))
))))) ($generated@@259 ($generated@@156 $generated@@541) $generated@@542 $generated@@543))
 :pattern ( ($generated@@259 ($generated@@156 $generated@@541) $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) (= (type $generated@@546) $generated@@157)) (= ($generated@@234 ($generated@@254 $generated@@545) ($generated@@254 $generated@@546)) ($generated@@254 ($generated@@234 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@234 ($generated@@254 $generated@@545) ($generated@@254 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= ($generated@@272 ($generated@@254 $generated@@547)) ($generated@@254 ($generated@@272 $generated@@547)))
 :pattern ( ($generated@@272 ($generated@@254 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@136 (type $generated@@548))))
 (=> (and (= (type $generated@@548) ($generated@@135 $generated@@549)) (= ($generated@@226 $generated@@548) 0)) (= $generated@@548 ($generated@@133 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@551)))
 (=> (and (and (= (type $generated@@550) ($generated@@76 $generated@@553 $generated@@2)) (= (type $generated@@552) $generated@@2)) (<= 0 ($generated $generated@@552))) (= ($generated@@277 ($generated@@82 $generated@@550 $generated@@551 $generated@@552)) (+ (- ($generated@@277 $generated@@550) ($generated ($generated@@81 $generated@@550 $generated@@551))) ($generated $generated@@552)))))
 :pattern ( ($generated@@277 ($generated@@82 $generated@@550 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@2)) ($generated@@74 $generated@@555 $generated@@46 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@46 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@3)) ($generated@@74 $generated@@557 $generated@@47 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@47 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@4)) ($generated@@74 $generated@@559 $generated@@44 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@44 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@424)) ($generated@@74 $generated@@561 $generated@@45 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@45 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@157)) ($generated@@74 $generated@@563 $generated@@48 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@48 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@135 $generated@@157)) (= (type $generated@@565) $generated@@64)) (= ($generated@@144 $generated@@564 ($generated@@466 $generated@@565)) (forall (($generated@@566 Int) ) (!  (=> (and (<= 0 $generated@@566) (< $generated@@566 ($generated@@226 $generated@@564))) ($generated@@235 ($generated@@225 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@225 $generated@@564 $generated@@566))
))))
 :pattern ( ($generated@@144 $generated@@564 ($generated@@466 $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 Int) ) (!  (=> (= (type $generated@@568) ($generated@@135 $generated@@157)) (=> (and (<= 0 $generated@@569) (< $generated@@569 ($generated@@226 $generated@@568))) (< ($generated@@501 ($generated@@356 $generated@@148 ($generated@@225 $generated@@568 $generated@@569))) ($generated@@567 $generated@@568))))
 :pattern ( ($generated@@501 ($generated@@356 $generated@@148 ($generated@@225 $generated@@568 $generated@@569))))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) ($generated@@283 $generated@@157 $generated@@157)) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) $generated@@64)) ($generated@@144 $generated@@570 ($generated@@384 $generated@@571 $generated@@572))) (and (and ($generated@@144 ($generated@@281 $generated@@570) ($generated@@244 $generated@@571)) ($generated@@144 ($generated@@324 $generated@@570) ($generated@@244 $generated@@572))) ($generated@@144 ($generated@@355 $generated@@570) ($generated@@244 ($generated@@147 $generated@@571 $generated@@572)))))
 :pattern ( ($generated@@144 $generated@@570 ($generated@@384 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) ($generated@@301 $generated@@157 $generated@@157)) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) $generated@@64)) ($generated@@144 $generated@@573 ($generated@@392 $generated@@574 $generated@@575))) (and (and ($generated@@144 ($generated@@299 $generated@@573) ($generated@@249 $generated@@574)) ($generated@@144 ($generated@@335 $generated@@573) ($generated@@249 $generated@@575))) ($generated@@144 ($generated@@366 $generated@@573) ($generated@@249 ($generated@@147 $generated@@574 $generated@@575)))))
 :pattern ( ($generated@@144 $generated@@573 ($generated@@392 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@2) ($generated@@144 $generated@@576 $generated@@46))
 :pattern ( ($generated@@144 $generated@@576 $generated@@46))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@3) ($generated@@144 $generated@@577 $generated@@47))
 :pattern ( ($generated@@144 $generated@@577 $generated@@47))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@4) ($generated@@144 $generated@@578 $generated@@44))
 :pattern ( ($generated@@144 $generated@@578 $generated@@44))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@424) ($generated@@144 $generated@@579 $generated@@45))
 :pattern ( ($generated@@144 $generated@@579 $generated@@45))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@157) ($generated@@144 $generated@@580 $generated@@48))
 :pattern ( ($generated@@144 $generated@@580 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 (T@U) Bool)
(declare-fun $generated@@586 () Int)
(assert  (and (and (and (= (type $generated@@581) ($generated@@171 $generated@@77 $generated@@4)) (= (type $generated@@582) $generated@@77)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@584) ($generated@@135 $generated@@157))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@587  (=> (and (= $generated@@581 ($generated@@170 $generated@@582 $generated@@583 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@277 ($generated@@132 $generated@@584)) ($generated@@226 $generated@@584)))))
(let (($generated@@588  (=> (and ($generated@@258 $generated@@583) ($generated@@585 $generated@@583)) (=> (and (and ($generated@@144 $generated@@584 ($generated@@466 $generated@@46)) ($generated@@74 $generated@@584 ($generated@@466 $generated@@46) $generated@@583)) (and (= 0 $generated@@586) (= (ControlFlow 0 3) 2))) $generated@@587))))
$generated@@588)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@171 (T@T) T@U)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@201 (T@U) Int)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@213 (T@T T@U) T@U)
(declare-fun $generated@@214 () T@T)
(declare-fun $generated@@220 (T@T) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (let (($generated@@167 (type $generated@@166)))
(= (type ($generated@@164 $generated@@165 $generated@@166)) ($generated@@48 $generated@@167 $generated@@2)))
 :pattern ( ($generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
 (=> (= (type $generated@@168) ($generated@@48 $generated@@170 $generated@@2)) (= ($generated@@163 ($generated@@164 $generated@@168 $generated@@169)) (+ ($generated@@163 $generated@@168) 1))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@168 $generated@@169)))
)))
(assert (forall (($generated@@172 T@T) ) (! (= (type ($generated@@171 $generated@@172)) ($generated@@48 $generated@@172 $generated@@2))
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@53 (type $generated@@173))))
 (=> (= (type $generated@@173) ($generated@@48 $generated@@174 $generated@@2)) (and (= (= ($generated@@163 $generated@@173) 0) (= $generated@@173 ($generated@@171 $generated@@174))) (=> (not (= ($generated@@163 $generated@@173) 0)) (exists (($generated@@175 T@U) ) (!  (and (= (type $generated@@175) $generated@@174) (< 0 ($generated ($generated@@52 $generated@@173 $generated@@175))))
 :no-pattern (type $generated@@175)
 :no-pattern ($generated $generated@@175)
 :no-pattern ($generated@@0 $generated@@175)
))))))
 :pattern ( ($generated@@163 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
 (=> (= (type $generated@@176) ($generated@@48 $generated@@178 $generated@@2)) (= ($generated ($generated@@52 ($generated@@164 $generated@@176 $generated@@177) $generated@@177)) (+ ($generated ($generated@@52 $generated@@176 $generated@@177)) 1))))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@180)))
 (=> (and (and (= (type $generated@@179) ($generated@@48 $generated@@182 $generated@@2)) (= (type $generated@@181) $generated@@182)) (< 0 ($generated ($generated@@52 $generated@@179 $generated@@181)))) (< 0 ($generated ($generated@@52 ($generated@@164 $generated@@179 $generated@@180) $generated@@181)))))
 :pattern ( ($generated@@164 $generated@@179 $generated@@180) ($generated@@52 $generated@@179 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@184)))
 (=> (and (= (type $generated@@183) ($generated@@48 $generated@@186 $generated@@2)) (= (type $generated@@185) $generated@@186)) (= (< 0 ($generated ($generated@@52 ($generated@@164 $generated@@183 $generated@@184) $generated@@185)))  (or (= $generated@@185 $generated@@184) (< 0 ($generated ($generated@@52 $generated@@183 $generated@@185)))))))
 :pattern ( ($generated@@52 ($generated@@164 $generated@@183 $generated@@184) $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated ($generated@@52 ($generated@@171 $generated@@188) $generated@@187)) 0))
 :pattern ( (let (($generated@@188 (type $generated@@187)))
($generated@@52 ($generated@@171 $generated@@188) $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(= (type ($generated@@189 $generated@@190 $generated@@191)) ($generated@@48 $generated@@192 $generated@@4)))
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@194)))
 (=> (and (and (= (type $generated@@193) ($generated@@48 $generated@@196 $generated@@4)) (= (type $generated@@195) $generated@@196)) ($generated@@0 ($generated@@52 $generated@@193 $generated@@195))) ($generated@@0 ($generated@@52 ($generated@@189 $generated@@193 $generated@@194) $generated@@195))))
 :pattern ( ($generated@@189 $generated@@193 $generated@@194) ($generated@@52 $generated@@193 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@198)))
 (=> (and (= (type $generated@@197) ($generated@@48 $generated@@200 $generated@@4)) (= (type $generated@@199) $generated@@200)) (= ($generated@@0 ($generated@@52 ($generated@@189 $generated@@197 $generated@@198) $generated@@199))  (or (= $generated@@199 $generated@@198) ($generated@@0 ($generated@@52 $generated@@197 $generated@@199))))))
 :pattern ( ($generated@@52 ($generated@@189 $generated@@197 $generated@@198) $generated@@199))
)))
(assert (forall (($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@53 (type $generated@@202))))
 (=> (= (type $generated@@202) ($generated@@48 $generated@@203 $generated@@4)) (<= 0 ($generated@@201 $generated@@202))))
 :pattern ( ($generated@@201 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@53 (type $generated@@204))))
 (=> (= (type $generated@@204) ($generated@@48 $generated@@205 $generated@@2)) (<= 0 ($generated@@163 $generated@@204))))
 :pattern ( ($generated@@163 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
 (=> (= (type $generated@@206) ($generated@@48 $generated@@208 $generated@@4)) ($generated@@0 ($generated@@52 ($generated@@189 $generated@@206 $generated@@207) $generated@@207))))
 :pattern ( ($generated@@189 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
 (=> (and (= (type $generated@@209) ($generated@@48 $generated@@211 $generated@@4)) ($generated@@0 ($generated@@52 $generated@@209 $generated@@210))) (= ($generated@@201 ($generated@@189 $generated@@209 $generated@@210)) ($generated@@201 $generated@@209))))
 :pattern ( ($generated@@201 ($generated@@189 $generated@@209 $generated@@210)))
)))
(assert  (and (and (= ($generated@@1 $generated@@214) 11) (forall (($generated@@215 T@U) ) (! (= (type ($generated@@212 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@212 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@U) ) (! (= (type ($generated@@213 $generated@@216 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(= ($generated@@213 $generated@@219 ($generated@@212 $generated@@218)) $generated@@218))
 :pattern ( ($generated@@212 $generated@@218))
)))
(assert (forall (($generated@@221 T@T) ) (! (= (type ($generated@@220 $generated@@221)) ($generated@@48 $generated@@221 $generated@@4))
 :pattern ( ($generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (! (let (($generated@@223 (type $generated@@222)))
 (not ($generated@@0 ($generated@@52 ($generated@@220 $generated@@223) $generated@@222))))
 :pattern ( (let (($generated@@223 (type $generated@@222)))
($generated@@52 ($generated@@220 $generated@@223) $generated@@222)))
)))
(assert (forall (($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@53 (type $generated@@224))))
 (=> (= (type $generated@@224) ($generated@@48 $generated@@225 $generated@@4)) (and (= (= ($generated@@201 $generated@@224) 0) (= $generated@@224 ($generated@@220 $generated@@225))) (=> (not (= ($generated@@201 $generated@@224) 0)) (exists (($generated@@226 T@U) ) (!  (and (= (type $generated@@226) $generated@@225) ($generated@@0 ($generated@@52 $generated@@224 $generated@@226)))
 :no-pattern (type $generated@@226)
 :no-pattern ($generated $generated@@226)
 :no-pattern ($generated@@0 $generated@@226)
))))))
 :pattern ( ($generated@@201 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
 (=> (and (= (type $generated@@227) ($generated@@48 $generated@@229 $generated@@4)) (not ($generated@@0 ($generated@@52 $generated@@227 $generated@@228)))) (= ($generated@@201 ($generated@@189 $generated@@227 $generated@@228)) (+ ($generated@@201 $generated@@227) 1))))
 :pattern ( ($generated@@201 ($generated@@189 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@231)))
 (=> (and (and (= (type $generated@@230) ($generated@@48 $generated@@233 $generated@@2)) (= (type $generated@@232) $generated@@233)) (not (= $generated@@231 $generated@@232))) (= ($generated ($generated@@52 $generated@@230 $generated@@232)) ($generated ($generated@@52 ($generated@@164 $generated@@230 $generated@@231) $generated@@232)))))
 :pattern ( ($generated@@164 $generated@@230 $generated@@231) ($generated@@52 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@234 Int) ) (! (= ($generated@@212 ($generated@@8 ($generated@@157 $generated@@234))) ($generated@@159 ($generated@@212 ($generated@@8 $generated@@234))))
 :pattern ( ($generated@@212 ($generated@@8 ($generated@@157 $generated@@234))))
)))
(assert (forall (($generated@@235 T@U) ) (! (= ($generated@@212 ($generated@@159 $generated@@235)) ($generated@@159 ($generated@@212 $generated@@235)))
 :pattern ( ($generated@@212 ($generated@@159 $generated@@235)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@237)))
 (=> (and (and (= (type $generated@@236) ($generated@@48 $generated@@239 $generated@@2)) (= (type $generated@@238) $generated@@2)) (<= 0 ($generated $generated@@238))) (= ($generated@@163 ($generated@@55 $generated@@236 $generated@@237 $generated@@238)) (+ (- ($generated@@163 $generated@@236) ($generated ($generated@@52 $generated@@236 $generated@@237))) ($generated $generated@@238)))))
 :pattern ( ($generated@@163 ($generated@@55 $generated@@236 $generated@@237 $generated@@238)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 () Int)
(assert  (and (and (and (= (type $generated@@242) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@243) $generated@@47)) (= (type $generated@@244) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@245) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@249  (=> (and (= $generated@@240 $generated@@241) (= (ControlFlow 0 6) (- 0 5))) (<= ($generated@@157 2) ($generated@@201 ($generated@@189 ($generated@@189 ($generated@@220 $generated@@214) ($generated@@212 ($generated@@8 $generated@@240))) ($generated@@212 ($generated@@8 $generated@@241))))))))
(let (($generated@@250  (=> (and (not (= $generated@@240 $generated@@241)) (= (ControlFlow 0 4) (- 0 3))) (<= ($generated@@157 2) ($generated@@201 ($generated@@189 ($generated@@189 ($generated@@220 $generated@@214) ($generated@@212 ($generated@@8 $generated@@240))) ($generated@@212 ($generated@@8 $generated@@241))))))))
(let (($generated@@251  (and (=> (= (ControlFlow 0 7) (- 0 9)) (<= ($generated@@157 1) ($generated@@201 ($generated@@189 ($generated@@189 ($generated@@220 $generated@@214) ($generated@@212 ($generated@@8 $generated@@240))) ($generated@@212 ($generated@@8 $generated@@241)))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (<= ($generated@@201 ($generated@@189 ($generated@@189 ($generated@@220 $generated@@214) ($generated@@212 ($generated@@8 $generated@@240))) ($generated@@212 ($generated@@8 $generated@@241)))) ($generated@@157 2))) (=> (and (<= ($generated@@157 1) ($generated@@201 ($generated@@189 ($generated@@189 ($generated@@220 $generated@@214) ($generated@@212 ($generated@@8 $generated@@240))) ($generated@@212 ($generated@@8 $generated@@241))))) (<= ($generated@@201 ($generated@@189 ($generated@@189 ($generated@@220 $generated@@214) ($generated@@212 ($generated@@8 $generated@@240))) ($generated@@212 ($generated@@8 $generated@@241)))) ($generated@@157 2))) (and (=> (= (ControlFlow 0 7) 4) $generated@@250) (=> (= (ControlFlow 0 7) 6) $generated@@249)))))))
(let (($generated@@252  (=> (and (< ($generated@@201 ($generated@@189 ($generated@@189 ($generated@@220 $generated@@214) ($generated@@212 ($generated@@8 $generated@@240))) ($generated@@212 ($generated@@8 $generated@@241)))) ($generated@@157 1)) (= (ControlFlow 0 11) 7)) $generated@@251)))
(let (($generated@@253  (=> (and (<= ($generated@@157 1) ($generated@@201 ($generated@@189 ($generated@@189 ($generated@@220 $generated@@214) ($generated@@212 ($generated@@8 $generated@@240))) ($generated@@212 ($generated@@8 $generated@@241))))) (= (ControlFlow 0 10) 7)) $generated@@251)))
(let (($generated@@254  (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@163 ($generated@@164 ($generated@@164 ($generated@@171 $generated@@214) ($generated@@212 ($generated@@8 $generated@@240))) ($generated@@212 ($generated@@8 $generated@@241)))) ($generated@@157 2)))))
(let (($generated@@255  (=> (= $generated@@242 ($generated@@45 $generated@@243 $generated@@244 $generated@@245 false)) (and (and (=> (= (ControlFlow 0 12) 2) $generated@@254) (=> (= (ControlFlow 0 12) 10) $generated@@253)) (=> (= (ControlFlow 0 12) 11) $generated@@252)))))
(let (($generated@@256  (=> (and (and ($generated@@246 $generated@@244) ($generated@@247 $generated@@244)) (and (= 0 $generated@@248) (= (ControlFlow 0 13) 12))) $generated@@255)))
$generated@@256)))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
