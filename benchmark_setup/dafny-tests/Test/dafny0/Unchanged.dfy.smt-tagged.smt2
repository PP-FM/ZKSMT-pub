(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@188 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@T T@U T@U) T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@203 (T@U T@U T@U) T@U)
(declare-fun $generated@@204 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@205 (T@T T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U T@U) Bool)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 () T@T)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@533 (T@U Int) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@588 (T@T) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@647 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@146) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (and (= (type $generated@@148) $generated@@71) (= (type $generated@@149) $generated@@89)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@89) (= (type $generated@@151) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@150 $generated@@148 $generated@@151)  (or (= $generated@@150 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@150 $generated@@148 $generated@@151))
)))
(assert  (and (= (type $generated@@152) ($generated@@73 $generated@@2)) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@71)
 :pattern ( ($generated@@154 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@158) $generated@@89)) (and ($generated@@153 $generated@@157) (and (not (= $generated@@158 $generated@@149)) (= ($generated@@154 $generated@@158) $generated@@148)))) ($generated@@155 ($generated@@95 ($generated@@93 $generated@@157 $generated@@158) $generated@@152) $generated@@46))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@157 $generated@@158) $generated@@152))
)))
(assert (= (type $generated@@159) ($generated@@73 $generated@@2)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@161) $generated@@89)) (and ($generated@@153 $generated@@160) (and (not (= $generated@@161 $generated@@149)) (= ($generated@@154 $generated@@161) $generated@@148)))) ($generated@@155 ($generated@@95 ($generated@@93 $generated@@160 $generated@@161) $generated@@159) $generated@@46))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@160 $generated@@161) $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@155 $generated@@162 ($generated@@87 0)))
 :pattern ( ($generated@@155 $generated@@162 ($generated@@87 0)))
)))
(assert  (and (= ($generated@@1 $generated@@165) 16) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@166 $generated@@167)) $generated@@71)
 :pattern ( ($generated@@164 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (= (type $generated@@168) $generated@@71) (= (type $generated@@169) $generated@@71)) (= (type $generated@@170) $generated@@165)) ($generated@@155 $generated@@170 ($generated@@164 $generated@@168 $generated@@169))) ($generated@@163 $generated@@170))
 :pattern ( ($generated@@163 $generated@@170) ($generated@@155 $generated@@170 ($generated@@164 $generated@@168 $generated@@169)))
)))
(assert  (and (and (= ($generated@@1 $generated@@174) 17) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@172 $generated@@175))
))) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@173 $generated@@176)) $generated@@174)
 :pattern ( ($generated@@173 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@165) (= (type $generated@@178) $generated@@165)) true) (= ($generated@@171 $generated@@177 $generated@@178)  (and (= ($generated@@172 $generated@@177) ($generated@@172 $generated@@178)) (= ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)))))
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@71)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@88 $generated@@174 $generated@@2)) (= (type $generated@@183) $generated@@71)) ($generated@@155 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@155 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@89) (= ($generated@@155 $generated@@184 $generated@@148)  (or (= $generated@@184 $generated@@149) (= ($generated@@154 $generated@@184) $generated@@148))))
 :pattern ( ($generated@@155 $generated@@184 $generated@@148))
)))
(assert (= (type $generated@@185) $generated@@71))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@89) (= (type $generated@@187) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@186 $generated@@185 $generated@@187) ($generated@@86 $generated@@186 $generated@@148 $generated@@187)))
 :pattern ( ($generated@@86 $generated@@186 $generated@@185 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@190 $generated@@191)) $generated@@165)
 :pattern ( ($generated@@188 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@71) (= (type $generated@@193) $generated@@71)) (= (type $generated@@194) $generated@@174)) (= (type $generated@@195) $generated@@174)) (= ($generated@@155 ($generated@@188 $generated@@194 $generated@@195) ($generated@@164 $generated@@192 $generated@@193))  (and ($generated@@189 $generated@@194 $generated@@192) ($generated@@189 $generated@@195 $generated@@193))))
 :pattern ( ($generated@@155 ($generated@@188 $generated@@194 $generated@@195) ($generated@@164 $generated@@192 $generated@@193)))
)))
(assert (= ($generated@@81 $generated@@152) 0))
(assert (forall (($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= (type ($generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@73 $generated@@197))
 :pattern ( ($generated@@196 $generated@@197 $generated@@198 $generated@@199))
)))
(assert (= ($generated@@196 $generated@@2 $generated@@64 $generated@@69) $generated@@152))
(assert  (not ($generated@@200 $generated@@152)))
(assert (= ($generated@@81 $generated@@159) 0))
(assert (= ($generated@@196 $generated@@2 $generated@@64 $generated@@70) $generated@@159))
(assert  (not ($generated@@200 $generated@@159)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@165) (= (type $generated@@202) $generated@@165)) (= ($generated@@171 $generated@@201 $generated@@202) (= $generated@@201 $generated@@202)))
 :pattern ( ($generated@@171 $generated@@201 $generated@@202))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@205 $generated@@209 $generated@@210)) 18)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@205 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@207 ($generated@@205 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@205 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@203 $generated@@215 $generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@203 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 (type $generated@@222)))
(let (($generated@@224 (type $generated@@220)))
(= (type ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@205 $generated@@224 $generated@@223))))
 :pattern ( ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@207 (type $generated@@225))))
 (=> (= (type $generated@@228) $generated@@229) (= ($generated@@203 ($generated@@208 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@226 $generated@@227) $generated@@228)))
 :weight 0
))) (and (and (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@203 ($generated@@208 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@203 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@203 ($generated@@208 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@203 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or true (= ($generated@@203 ($generated@@208 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@203 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
)))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251 $generated@@252)) ($generated@@205 $generated@@89 $generated@@4))
 :pattern ( ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@74 (type $generated@@259))))
 (=> (and (and (and (and (and (and (= (type $generated@@253) $generated@@89) (= (type $generated@@254) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@255) ($generated@@73 $generated@@4))) (= (type $generated@@256) $generated@@89)) (= (type $generated@@257) $generated@@89)) (= (type $generated@@258) $generated@@89)) (= (type $generated@@259) ($generated@@73 $generated@@260))) (= ($generated@@0 ($generated@@203 ($generated@@204 $generated@@253 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@253)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@254 $generated@@258) $generated@@255))) (or (= $generated@@258 $generated@@256) (= $generated@@258 $generated@@257))))))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@253 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@88 $generated@@174 $generated@@4)) (= (type $generated@@264) $generated@@71)) (= ($generated@@155 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@174) ($generated@@0 ($generated@@93 $generated@@263 $generated@@265))) ($generated@@189 $generated@@265 $generated@@264))
 :pattern ( ($generated@@93 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@155 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@71)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@88 $generated@@174 $generated@@4)) (= (type $generated@@269) $generated@@71)) (= ($generated@@155 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@174) ($generated@@0 ($generated@@93 $generated@@268 $generated@@270))) ($generated@@189 $generated@@270 $generated@@269))
 :pattern ( ($generated@@93 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@155 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@71) (= (type $generated@@277) $generated@@71)) (= (type $generated@@278) $generated@@174)) (= (type $generated@@279) $generated@@174)) (= (type $generated@@280) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@153 $generated@@280)) (= ($generated@@86 ($generated@@188 $generated@@278 $generated@@279) ($generated@@164 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@86 ($generated@@188 $generated@@278 $generated@@279) ($generated@@164 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@76)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@165) (= ($generated@@163 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@62)))
 :pattern ( ($generated@@163 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@165) ($generated@@163 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@174) (= (type $generated@@286) $generated@@174)) (= $generated@@284 ($generated@@188 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@163 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 19)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert ($generated@@200 $generated@@60))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@174)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@71) (= (type $generated@@299) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@86 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@301) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@302) $generated@@174)) (= (type $generated@@303) $generated@@71)) ($generated@@144 $generated@@300 $generated@@301)) ($generated@@275 $generated@@302 $generated@@303 $generated@@300)) ($generated@@275 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@144 $generated@@300 $generated@@301) ($generated@@275 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@305) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@307) $generated@@71)) ($generated@@144 $generated@@304 $generated@@305)) ($generated@@86 $generated@@306 $generated@@307 $generated@@304)) ($generated@@86 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@144 $generated@@304 $generated@@305) ($generated@@86 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@309) $generated@@89)) (=> (and (and ($generated@@153 $generated@@308) (and (not (= $generated@@309 $generated@@149)) (= ($generated@@154 $generated@@309) $generated@@148))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@308 $generated@@309) $generated@@60))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@308 $generated@@309) $generated@@152) $generated@@46 $generated@@308)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@308 $generated@@309) $generated@@152))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@311) $generated@@89)) (=> (and (and ($generated@@153 $generated@@310) (and (not (= $generated@@311 $generated@@149)) (= ($generated@@154 $generated@@311) $generated@@148))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@60))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@159) $generated@@46 $generated@@310)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@159))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@88 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@91 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@88 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@93 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 20)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@88 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@93 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@93 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 21)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@88 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@93 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@93 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@356) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@354 $generated@@355 $generated@@356)) (and ($generated@@144 $generated@@355 $generated@@356) (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@74 (type $generated@@358))))
 (=> (and (and (= (type $generated@@357) $generated@@89) (= (type $generated@@358) ($generated@@73 $generated@@359))) (not ($generated@@200 $generated@@358))) (= ($generated@@95 ($generated@@93 $generated@@355 $generated@@357) $generated@@358) ($generated@@95 ($generated@@93 $generated@@356 $generated@@357) $generated@@358))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@356 $generated@@357) $generated@@358))
))))
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@91 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@88 $generated@@361 $generated@@2)) (= ($generated@@180 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@93 $generated@@360 $generated@@362))) (<= ($generated ($generated@@93 $generated@@360 $generated@@362)) ($generated@@312 $generated@@360))))
 :pattern ( ($generated@@93 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@180 $generated@@360))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@174) ($generated@@189 $generated@@366 $generated@@148)) (and (= ($generated@@295 ($generated@@363 $generated@@89 $generated@@366)) $generated@@366) ($generated@@155 ($generated@@363 $generated@@89 $generated@@366) $generated@@148)))
 :pattern ( ($generated@@189 $generated@@366 $generated@@148))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@174) ($generated@@189 $generated@@367 $generated@@185)) (and (= ($generated@@295 ($generated@@363 $generated@@89 $generated@@367)) $generated@@367) ($generated@@155 ($generated@@363 $generated@@89 $generated@@367) $generated@@185)))
 :pattern ( ($generated@@189 $generated@@367 $generated@@185))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@89) (= ($generated@@155 $generated@@368 $generated@@185)  (and ($generated@@155 $generated@@368 $generated@@148) (not (= $generated@@368 $generated@@149)))))
 :pattern ( ($generated@@155 $generated@@368 $generated@@185))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@322 (type $generated@@369))))
(let (($generated@@371 ($generated@@321 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@320 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@319 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@93 ($generated@@318 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@318 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@88 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@322 (type $generated@@376))))
(let (($generated@@378 ($generated@@321 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@320 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@319 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@93 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@340 (type $generated@@380))))
(let (($generated@@382 ($generated@@339 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@338 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@337 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@93 ($generated@@336 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@336 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@88 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@340 (type $generated@@387))))
(let (($generated@@389 ($generated@@339 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@338 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@337 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@93 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@88 $generated@@174 $generated@@2)) (= (type $generated@@392) $generated@@71)) (= ($generated@@155 $generated@@391 ($generated@@179 $generated@@392)) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@174) (< 0 ($generated ($generated@@93 $generated@@391 $generated@@393)))) ($generated@@189 $generated@@393 $generated@@392))
 :pattern ( ($generated@@93 $generated@@391 $generated@@393))
))))
 :pattern ( ($generated@@155 $generated@@391 ($generated@@179 $generated@@392)))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@88 $generated@@174 $generated@@4)) (= (type $generated@@395) $generated@@71)) (= (type $generated@@396) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@394 ($generated@@261 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@174) ($generated@@0 ($generated@@93 $generated@@394 $generated@@397))) ($generated@@275 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@93 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@86 $generated@@394 ($generated@@261 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@88 $generated@@174 $generated@@4)) (= (type $generated@@399) $generated@@71)) (= (type $generated@@400) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@398 ($generated@@266 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@174) ($generated@@0 ($generated@@93 $generated@@398 $generated@@401))) ($generated@@275 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@93 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@86 $generated@@398 ($generated@@266 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@93 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@93 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@88 $generated@@174 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@88 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@174 $generated@@174)) (= (type $generated@@411) $generated@@174)) (= ($generated@@0 ($generated@@93 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@93 ($generated@@318 $generated@@410) ($generated@@172 ($generated@@363 $generated@@165 $generated@@411)))) (= ($generated@@93 ($generated@@405 $generated@@410) ($generated@@172 ($generated@@363 $generated@@165 $generated@@411))) ($generated@@173 ($generated@@363 $generated@@165 $generated@@411))))))
 :pattern ( ($generated@@93 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@88 $generated@@174 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@88 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@174 $generated@@174)) (= (type $generated@@419) $generated@@174)) (= ($generated@@0 ($generated@@93 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@93 ($generated@@336 $generated@@418) ($generated@@172 ($generated@@363 $generated@@165 $generated@@419)))) (= ($generated@@93 ($generated@@413 $generated@@418) ($generated@@172 ($generated@@363 $generated@@165 $generated@@419))) ($generated@@173 ($generated@@363 $generated@@165 $generated@@419))))))
 :pattern ( ($generated@@93 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@93 ($generated@@373 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@93 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@93 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@93 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@93 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@93 ($generated@@373 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@93 ($generated@@384 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@93 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@93 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@93 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@93 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@71)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@174 $generated@@174)) (= (type $generated@@434) $generated@@71)) (= (type $generated@@435) $generated@@71)) (= (type $generated@@436) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@174) ($generated@@0 ($generated@@93 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@275 ($generated@@93 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@275 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@93 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@93 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@86 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@71)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@174 $generated@@174)) (= (type $generated@@442) $generated@@71)) (= (type $generated@@443) $generated@@71)) (= (type $generated@@444) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@174) ($generated@@0 ($generated@@93 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@275 ($generated@@93 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@275 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@93 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@93 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@86 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(= (type ($generated@@446 $generated@@447 $generated@@448)) ($generated@@88 $generated@@449 $generated@@4)))
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@451)))
 (=> (and (and (= (type $generated@@450) ($generated@@88 $generated@@453 $generated@@4)) (= (type $generated@@452) $generated@@453)) ($generated@@0 ($generated@@93 $generated@@450 $generated@@452))) ($generated@@0 ($generated@@93 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))))
 :pattern ( ($generated@@446 $generated@@450 $generated@@451) ($generated@@93 $generated@@450 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@455)))
 (=> (and (= (type $generated@@454) ($generated@@88 $generated@@457 $generated@@4)) (= (type $generated@@456) $generated@@457)) (= ($generated@@0 ($generated@@93 ($generated@@446 $generated@@454 $generated@@455) $generated@@456))  (or (= $generated@@456 $generated@@455) ($generated@@0 ($generated@@93 $generated@@454 $generated@@456))))))
 :pattern ( ($generated@@93 ($generated@@446 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@458) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@459) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@460) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@458 $generated@@460))) (and ($generated@@144 $generated@@458 $generated@@459) ($generated@@144 $generated@@459 $generated@@460))) ($generated@@144 $generated@@458 $generated@@460))
 :pattern ( ($generated@@144 $generated@@458 $generated@@459) ($generated@@144 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@88 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@340 (type $generated@@463))))
(let (($generated@@465 ($generated@@339 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@338 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@337 $generated@@465 $generated@@464)) (= ($generated@@336 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@336 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@340 (type $generated@@466))))
(let (($generated@@468 ($generated@@339 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@338 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@337 $generated@@468 $generated@@467)) (= ($generated@@384 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@384 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@340 (type $generated@@469))))
(let (($generated@@471 ($generated@@339 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@338 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@337 $generated@@471 $generated@@470)) (= ($generated@@412 $generated@@469) ($generated@@461 $generated@@174))))))
 :pattern ( ($generated@@412 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@322 (type $generated@@472))))
(let (($generated@@474 ($generated@@321 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@320 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@319 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@174) (= (type $generated@@476) $generated@@174)) ($generated@@0 ($generated@@93 ($generated@@404 $generated@@472) ($generated@@295 ($generated@@188 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@404 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@340 (type $generated@@477))))
(let (($generated@@479 ($generated@@339 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@338 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@337 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@174) (= (type $generated@@481) $generated@@174)) ($generated@@0 ($generated@@93 ($generated@@412 $generated@@477) ($generated@@295 ($generated@@188 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@412 $generated@@477))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@77)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@T) ) (!  (=> (and (= (type $generated@@484) $generated@@77) (= (type $generated@@485) $generated@@75)) (and (= ($generated@@482 ($generated@@196 $generated@@486 $generated@@484 $generated@@485)) $generated@@484) (= ($generated@@84 ($generated@@196 $generated@@486 $generated@@484 $generated@@485)) $generated@@485)))
 :pattern ( ($generated@@196 $generated@@486 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@174) ($generated@@189 $generated@@487 $generated@@46)) (and (= ($generated@@295 ($generated@@363 $generated@@2 $generated@@487)) $generated@@487) ($generated@@155 ($generated@@363 $generated@@2 $generated@@487) $generated@@46)))
 :pattern ( ($generated@@189 $generated@@487 $generated@@46))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@174) ($generated@@189 $generated@@488 $generated@@47)) (and (= ($generated@@295 ($generated@@363 $generated@@3 $generated@@488)) $generated@@488) ($generated@@155 ($generated@@363 $generated@@3 $generated@@488) $generated@@47)))
 :pattern ( ($generated@@189 $generated@@488 $generated@@47))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@174) ($generated@@189 $generated@@489 $generated@@44)) (and (= ($generated@@295 ($generated@@363 $generated@@4 $generated@@489)) $generated@@489) ($generated@@155 ($generated@@363 $generated@@4 $generated@@489) $generated@@44)))
 :pattern ( ($generated@@189 $generated@@489 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@490) 22))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@174) ($generated@@189 $generated@@491 $generated@@45)) (and (= ($generated@@295 ($generated@@363 $generated@@490 $generated@@491)) $generated@@491) ($generated@@155 ($generated@@363 $generated@@490 $generated@@491) $generated@@45)))
 :pattern ( ($generated@@189 $generated@@491 $generated@@45))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@71) (= ($generated@@189 ($generated@@295 $generated@@492) $generated@@493) ($generated@@155 $generated@@492 $generated@@493)))
 :pattern ( ($generated@@189 ($generated@@295 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@91 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@88 $generated@@495 $generated@@2)) (<= 0 ($generated@@312 $generated@@494))))
 :pattern ( ($generated@@312 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@290 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@289 $generated@@497)) (<= 0 ($generated@@288 $generated@@496))))
 :pattern ( ($generated@@288 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@71)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@71) (= (type $generated@@501) $generated@@71)) (= ($generated@@498 ($generated@@430 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@430 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@71)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@71) (= (type $generated@@505) $generated@@71)) (= ($generated@@502 ($generated@@430 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@430 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@71) (= (type $generated@@507) $generated@@71)) (= ($generated@@82 ($generated@@430 $generated@@506 $generated@@507)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@71)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@71) (= (type $generated@@511) $generated@@71)) (= ($generated@@508 ($generated@@438 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@438 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@71)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@71) (= (type $generated@@515) $generated@@71)) (= ($generated@@512 ($generated@@438 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@438 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@71) (= (type $generated@@517) $generated@@71)) (= ($generated@@82 ($generated@@438 $generated@@516 $generated@@517)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@174) (= (type $generated@@519) $generated@@174)) (= ($generated@@281 ($generated@@188 $generated@@518 $generated@@519)) $generated@@62))
 :pattern ( ($generated@@188 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@71)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@71) (= (type $generated@@523) $generated@@71)) (= ($generated@@520 ($generated@@164 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@164 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@71)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@71) (= (type $generated@@527) $generated@@71)) (= ($generated@@524 ($generated@@164 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@164 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@174) (= (type $generated@@529) $generated@@174)) (= ($generated@@172 ($generated@@188 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@188 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@174) (= (type $generated@@531) $generated@@174)) (= ($generated@@173 ($generated@@188 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@188 $generated@@530 $generated@@531))
)))
(assert  (and (forall (($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@532 $generated@@534))
)) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (! (let (($generated@@537 ($generated@@290 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@533 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@289 $generated@@174)) (= (type $generated@@539) $generated@@71)) (= (type $generated@@540) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@538 ($generated@@532 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@288 $generated@@538))) ($generated@@275 ($generated@@533 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@533 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@86 $generated@@538 ($generated@@532 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (=> (= (type $generated@@542) ($generated@@88 $generated@@544 $generated@@4)) ($generated@@0 ($generated@@93 ($generated@@446 $generated@@542 $generated@@543) $generated@@543))))
 :pattern ( ($generated@@446 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@545 ($generated@@87 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@87 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@71)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@71) (= ($generated@@547 ($generated@@261 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@261 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@71) (= ($generated@@82 ($generated@@261 $generated@@550)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@71)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@71) (= ($generated@@551 ($generated@@266 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@266 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@71) (= ($generated@@82 ($generated@@266 $generated@@554)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@71)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@71) (= ($generated@@555 ($generated@@179 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@179 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@71) (= ($generated@@82 ($generated@@179 $generated@@558)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@71)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@71) (= ($generated@@559 ($generated@@532 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@532 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@71) (= ($generated@@82 ($generated@@532 $generated@@562)) $generated@@57))
 :pattern ( ($generated@@532 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
(= ($generated@@363 $generated@@564 ($generated@@295 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@295 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@320 $generated@@174 $generated@@174)) (= (type $generated@@566) $generated@@71)) (= (type $generated@@567) $generated@@71)) (= ($generated@@155 $generated@@565 ($generated@@430 $generated@@566 $generated@@567)) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@174) ($generated@@0 ($generated@@93 ($generated@@318 $generated@@565) $generated@@568))) (and ($generated@@189 ($generated@@93 ($generated@@405 $generated@@565) $generated@@568) $generated@@567) ($generated@@189 $generated@@568 $generated@@566)))
 :pattern ( ($generated@@93 ($generated@@405 $generated@@565) $generated@@568))
 :pattern ( ($generated@@93 ($generated@@318 $generated@@565) $generated@@568))
))))
 :pattern ( ($generated@@155 $generated@@565 ($generated@@430 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@338 $generated@@174 $generated@@174)) (= (type $generated@@570) $generated@@71)) (= (type $generated@@571) $generated@@71)) (= ($generated@@155 $generated@@569 ($generated@@438 $generated@@570 $generated@@571)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@174) ($generated@@0 ($generated@@93 ($generated@@336 $generated@@569) $generated@@572))) (and ($generated@@189 ($generated@@93 ($generated@@413 $generated@@569) $generated@@572) $generated@@571) ($generated@@189 $generated@@572 $generated@@570)))
 :pattern ( ($generated@@93 ($generated@@413 $generated@@569) $generated@@572))
 :pattern ( ($generated@@93 ($generated@@336 $generated@@569) $generated@@572))
))))
 :pattern ( ($generated@@155 $generated@@569 ($generated@@438 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@174) (= (type $generated@@576) $generated@@174)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@188 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@188 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@174) (= (type $generated@@578) $generated@@174)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@188 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@188 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@174) (= (type $generated@@580) $generated@@71)) (= (type $generated@@581) $generated@@71)) ($generated@@189 $generated@@579 ($generated@@430 $generated@@580 $generated@@581))) (and (= ($generated@@295 ($generated@@363 ($generated@@320 $generated@@174 $generated@@174) $generated@@579)) $generated@@579) ($generated@@155 ($generated@@363 ($generated@@320 $generated@@174 $generated@@174) $generated@@579) ($generated@@430 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@189 $generated@@579 ($generated@@430 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@174) (= (type $generated@@583) $generated@@71)) (= (type $generated@@584) $generated@@71)) ($generated@@189 $generated@@582 ($generated@@438 $generated@@583 $generated@@584))) (and (= ($generated@@295 ($generated@@363 ($generated@@338 $generated@@174 $generated@@174) $generated@@582)) $generated@@582) ($generated@@155 ($generated@@363 ($generated@@338 $generated@@174 $generated@@174) $generated@@582) ($generated@@438 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@189 $generated@@582 ($generated@@438 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@71) (= (type $generated@@586) $generated@@71)) (= (type $generated@@587) $generated@@174)) ($generated@@189 $generated@@587 ($generated@@164 $generated@@585 $generated@@586))) (and (= ($generated@@295 ($generated@@363 $generated@@165 $generated@@587)) $generated@@587) ($generated@@155 ($generated@@363 $generated@@165 $generated@@587) ($generated@@164 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@189 $generated@@587 ($generated@@164 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@589 T@T) ) (! (= (type ($generated@@588 $generated@@589)) ($generated@@88 $generated@@589 $generated@@4))
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@93 ($generated@@588 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@93 ($generated@@588 $generated@@591) $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@592)))
 (not ($generated@@0 ($generated@@93 ($generated@@461 $generated@@593) $generated@@592))))
 :pattern ( (let (($generated@@593 (type $generated@@592)))
($generated@@93 ($generated@@461 $generated@@593) $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@78)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@71) (= (type $generated@@597) $generated@@71)) (and (= ($generated@@82 ($generated@@164 $generated@@596 $generated@@597)) $generated@@63) (= ($generated@@594 ($generated@@164 $generated@@596 $generated@@597)) $generated@@67)))
 :pattern ( ($generated@@164 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@165) (= ($generated@@573 ($generated@@295 $generated@@598)) ($generated@@574 $generated@@598)))
 :pattern ( ($generated@@573 ($generated@@295 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@174) ($generated@@189 $generated@@599 ($generated@@87 0))) (and (= ($generated@@295 ($generated@@363 $generated@@2 $generated@@599)) $generated@@599) ($generated@@155 ($generated@@363 ($generated@@88 $generated@@174 $generated@@4) $generated@@599) ($generated@@87 0))))
 :pattern ( ($generated@@189 $generated@@599 ($generated@@87 0)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@174) (= (type $generated@@601) $generated@@71)) ($generated@@189 $generated@@600 ($generated@@261 $generated@@601))) (and (= ($generated@@295 ($generated@@363 ($generated@@88 $generated@@174 $generated@@4) $generated@@600)) $generated@@600) ($generated@@155 ($generated@@363 ($generated@@88 $generated@@174 $generated@@4) $generated@@600) ($generated@@261 $generated@@601))))
 :pattern ( ($generated@@189 $generated@@600 ($generated@@261 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@174) (= (type $generated@@603) $generated@@71)) ($generated@@189 $generated@@602 ($generated@@266 $generated@@603))) (and (= ($generated@@295 ($generated@@363 ($generated@@88 $generated@@174 $generated@@4) $generated@@602)) $generated@@602) ($generated@@155 ($generated@@363 ($generated@@88 $generated@@174 $generated@@4) $generated@@602) ($generated@@266 $generated@@603))))
 :pattern ( ($generated@@189 $generated@@602 ($generated@@266 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@174) (= (type $generated@@605) $generated@@71)) ($generated@@189 $generated@@604 ($generated@@179 $generated@@605))) (and (= ($generated@@295 ($generated@@363 ($generated@@88 $generated@@174 $generated@@2) $generated@@604)) $generated@@604) ($generated@@155 ($generated@@363 ($generated@@88 $generated@@174 $generated@@2) $generated@@604) ($generated@@179 $generated@@605))))
 :pattern ( ($generated@@189 $generated@@604 ($generated@@179 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@174) (= (type $generated@@607) $generated@@71)) ($generated@@189 $generated@@606 ($generated@@532 $generated@@607))) (and (= ($generated@@295 ($generated@@363 ($generated@@289 $generated@@174) $generated@@606)) $generated@@606) ($generated@@155 ($generated@@363 ($generated@@289 $generated@@174) $generated@@606) ($generated@@532 $generated@@607))))
 :pattern ( ($generated@@189 $generated@@606 ($generated@@532 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
 (=> (and (and (and (= (type $generated@@608) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@609) $generated@@89)) (= (type $generated@@610) ($generated@@73 $generated@@612))) ($generated@@153 ($generated@@94 $generated@@608 $generated@@609 ($generated@@96 ($generated@@93 $generated@@608 $generated@@609) $generated@@610 $generated@@611)))) ($generated@@144 $generated@@608 ($generated@@94 $generated@@608 $generated@@609 ($generated@@96 ($generated@@93 $generated@@608 $generated@@609) $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@94 $generated@@608 $generated@@609 ($generated@@96 ($generated@@93 $generated@@608 $generated@@609) $generated@@610 $generated@@611)))
)))
(assert (= ($generated@@82 $generated@@148) $generated@@65))
(assert (= ($generated@@594 $generated@@148) $generated@@68))
(assert (= ($generated@@82 $generated@@185) $generated@@66))
(assert (= ($generated@@594 $generated@@185) $generated@@68))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@88 $generated@@174 $generated@@2)) (= (type $generated@@614) $generated@@71)) (= (type $generated@@615) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@613 ($generated@@179 $generated@@614) $generated@@615) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@174) (< 0 ($generated ($generated@@93 $generated@@613 $generated@@616)))) ($generated@@275 $generated@@616 $generated@@614 $generated@@615))
 :pattern ( ($generated@@93 $generated@@613 $generated@@616))
))))
 :pattern ( ($generated@@86 $generated@@613 ($generated@@179 $generated@@614) $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@165) (= (type $generated@@618) $generated@@71)) (= (type $generated@@619) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@153 $generated@@619) (and ($generated@@163 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@71) ($generated@@86 $generated@@617 ($generated@@164 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@86 $generated@@617 ($generated@@164 $generated@@618 $generated@@620) $generated@@619))
))))) ($generated@@275 ($generated@@172 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@275 ($generated@@172 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@165) (= (type $generated@@622) $generated@@71)) (= (type $generated@@623) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@153 $generated@@623) (and ($generated@@163 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@71) ($generated@@86 $generated@@621 ($generated@@164 $generated@@624 $generated@@622) $generated@@623))
 :pattern ( ($generated@@86 $generated@@621 ($generated@@164 $generated@@624 $generated@@622) $generated@@623))
))))) ($generated@@275 ($generated@@173 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@275 ($generated@@173 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@174) (= (type $generated@@626) $generated@@174)) (= ($generated@@188 ($generated@@271 $generated@@625) ($generated@@271 $generated@@626)) ($generated@@271 ($generated@@188 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@188 ($generated@@271 $generated@@625) ($generated@@271 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (= ($generated@@295 ($generated@@271 $generated@@627)) ($generated@@271 ($generated@@295 $generated@@627)))
 :pattern ( ($generated@@295 ($generated@@271 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@290 (type $generated@@628))))
 (=> (and (= (type $generated@@628) ($generated@@289 $generated@@629)) (= ($generated@@288 $generated@@628) 0)) (= $generated@@628 ($generated@@287 $generated@@629))))
 :pattern ( ($generated@@288 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@631)))
 (=> (and (and (= (type $generated@@630) ($generated@@88 $generated@@633 $generated@@2)) (= (type $generated@@632) $generated@@2)) (<= 0 ($generated $generated@@632))) (= ($generated@@312 ($generated@@94 $generated@@630 $generated@@631 $generated@@632)) (+ (- ($generated@@312 $generated@@630) ($generated ($generated@@93 $generated@@630 $generated@@631))) ($generated $generated@@632)))))
 :pattern ( ($generated@@312 ($generated@@94 $generated@@630 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@635) $generated@@2)) ($generated@@86 $generated@@635 $generated@@46 $generated@@634))
 :pattern ( ($generated@@86 $generated@@635 $generated@@46 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@637) $generated@@3)) ($generated@@86 $generated@@637 $generated@@47 $generated@@636))
 :pattern ( ($generated@@86 $generated@@637 $generated@@47 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@639) $generated@@4)) ($generated@@86 $generated@@639 $generated@@44 $generated@@638))
 :pattern ( ($generated@@86 $generated@@639 $generated@@44 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@641) $generated@@490)) ($generated@@86 $generated@@641 $generated@@45 $generated@@640))
 :pattern ( ($generated@@86 $generated@@641 $generated@@45 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@643) $generated@@174)) ($generated@@86 $generated@@643 $generated@@48 $generated@@642))
 :pattern ( ($generated@@86 $generated@@643 $generated@@48 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@289 $generated@@174)) (= (type $generated@@645) $generated@@71)) (= ($generated@@155 $generated@@644 ($generated@@532 $generated@@645)) (forall (($generated@@646 Int) ) (!  (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@288 $generated@@644))) ($generated@@189 ($generated@@533 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@533 $generated@@644 $generated@@646))
))))
 :pattern ( ($generated@@155 $generated@@644 ($generated@@532 $generated@@645)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 Int) ) (!  (=> (= (type $generated@@648) ($generated@@289 $generated@@174)) (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@288 $generated@@648))) (< ($generated@@574 ($generated@@363 $generated@@165 ($generated@@533 $generated@@648 $generated@@649))) ($generated@@647 $generated@@648))))
 :pattern ( ($generated@@574 ($generated@@363 $generated@@165 ($generated@@533 $generated@@648 $generated@@649))))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@320 $generated@@174 $generated@@174)) (= (type $generated@@651) $generated@@71)) (= (type $generated@@652) $generated@@71)) ($generated@@155 $generated@@650 ($generated@@430 $generated@@651 $generated@@652))) (and (and ($generated@@155 ($generated@@318 $generated@@650) ($generated@@261 $generated@@651)) ($generated@@155 ($generated@@373 $generated@@650) ($generated@@261 $generated@@652))) ($generated@@155 ($generated@@404 $generated@@650) ($generated@@261 ($generated@@164 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@155 $generated@@650 ($generated@@430 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) ($generated@@338 $generated@@174 $generated@@174)) (= (type $generated@@654) $generated@@71)) (= (type $generated@@655) $generated@@71)) ($generated@@155 $generated@@653 ($generated@@438 $generated@@654 $generated@@655))) (and (and ($generated@@155 ($generated@@336 $generated@@653) ($generated@@266 $generated@@654)) ($generated@@155 ($generated@@384 $generated@@653) ($generated@@266 $generated@@655))) ($generated@@155 ($generated@@412 $generated@@653) ($generated@@266 ($generated@@164 $generated@@654 $generated@@655)))))
 :pattern ( ($generated@@155 $generated@@653 ($generated@@438 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@2) ($generated@@155 $generated@@656 $generated@@46))
 :pattern ( ($generated@@155 $generated@@656 $generated@@46))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@3) ($generated@@155 $generated@@657 $generated@@47))
 :pattern ( ($generated@@155 $generated@@657 $generated@@47))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@4) ($generated@@155 $generated@@658 $generated@@44))
 :pattern ( ($generated@@155 $generated@@658 $generated@@44))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@490) ($generated@@155 $generated@@659 $generated@@45))
 :pattern ( ($generated@@155 $generated@@659 $generated@@45))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@174) ($generated@@155 $generated@@660 $generated@@48))
 :pattern ( ($generated@@155 $generated@@660 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 (T@U) Bool)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@661) $generated@@89) (= (type $generated@@662) $generated@@89)) (= (type $generated@@663) $generated@@89)) (= (type $generated@@664) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@665) ($generated@@88 $generated@@174 $generated@@4))) (= (type $generated@@666) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@667) ($generated@@205 $generated@@89 $generated@@4))) (= (type $generated@@670) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@671) $generated@@89)) (= (type $generated@@672) $generated@@89)) (= (type $generated@@673) $generated@@89)) (= (type $generated@@676) ($generated@@88 $generated@@174 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 44) (let (($generated@@678  (and (=> (= (ControlFlow 0 2) (- 0 9)) (=> (and (not (= $generated@@661 $generated@@662)) (not (= $generated@@661 $generated@@663))) (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (! (let (($generated@@681 ($generated@@74 (type $generated@@680))))
 (=> (and (and (and (= (type $generated@@679) $generated@@89) (= (type $generated@@680) ($generated@@73 $generated@@681))) (not (= $generated@@679 $generated@@149))) ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@679)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@679) $generated@@680) ($generated@@95 ($generated@@93 $generated@@666 $generated@@679) $generated@@680))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@679) $generated@@680))
)))) (=> (=> (and (not (= $generated@@661 $generated@@662)) (not (= $generated@@661 $generated@@663))) (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 ($generated@@74 (type $generated@@683))))
 (=> (and (and (and (= (type $generated@@682) $generated@@89) (= (type $generated@@683) ($generated@@73 $generated@@684))) (not (= $generated@@682 $generated@@149))) ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@682)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@682) $generated@@683) ($generated@@95 ($generated@@93 $generated@@666 $generated@@682) $generated@@683))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@682) $generated@@683))
))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@661 $generated@@149))) (=> (not (= $generated@@661 $generated@@149)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@0 ($generated@@203 $generated@@667 $generated@@661 $generated@@152))) (=> ($generated@@0 ($generated@@203 $generated@@667 $generated@@661 $generated@@152)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@661 $generated@@149))) (=> (not (= $generated@@661 $generated@@149)) (=> (= $generated@@668 (- ($generated ($generated@@95 ($generated@@93 $generated@@664 $generated@@661) $generated@@152)) $generated@@669)) (=> (and (= $generated@@670 ($generated@@94 $generated@@664 $generated@@661 ($generated@@96 ($generated@@93 $generated@@664 $generated@@661) $generated@@152 ($generated@@8 $generated@@668)))) ($generated@@153 $generated@@670)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@86 $generated@@661 $generated@@185 $generated@@666)) (=> ($generated@@86 $generated@@661 $generated@@185 $generated@@666) (and (=> (= (ControlFlow 0 2) (- 0 4)) (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (! (let (($generated@@687 ($generated@@74 (type $generated@@686))))
 (=> (and (and (and (= (type $generated@@685) $generated@@89) (= (type $generated@@686) ($generated@@73 $generated@@687))) (not (= $generated@@685 $generated@@149))) (= $generated@@685 $generated@@661)) (= ($generated@@95 ($generated@@93 $generated@@670 $generated@@685) $generated@@686) ($generated@@95 ($generated@@93 $generated@@666 $generated@@685) $generated@@686))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@670 $generated@@685) $generated@@686))
))) (=> (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (! (let (($generated@@690 ($generated@@74 (type $generated@@689))))
 (=> (and (and (and (= (type $generated@@688) $generated@@89) (= (type $generated@@689) ($generated@@73 $generated@@690))) (not (= $generated@@688 $generated@@149))) (= $generated@@688 $generated@@661)) (= ($generated@@95 ($generated@@93 $generated@@670 $generated@@688) $generated@@689) ($generated@@95 ($generated@@93 $generated@@666 $generated@@688) $generated@@689))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@670 $generated@@688) $generated@@689))
)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@671))) ($generated@@86 $generated@@671 $generated@@185 $generated@@666))) (=> (=> ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@671))) ($generated@@86 $generated@@671 $generated@@185 $generated@@666)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (! (let (($generated@@693 ($generated@@74 (type $generated@@692))))
 (=> (and (and (and (= (type $generated@@691) $generated@@89) (= (type $generated@@692) ($generated@@73 $generated@@693))) (not (= $generated@@691 $generated@@149))) ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@691)))) (= ($generated@@95 ($generated@@93 $generated@@670 $generated@@691) $generated@@692) ($generated@@95 ($generated@@93 $generated@@666 $generated@@691) $generated@@692))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@670 $generated@@691) $generated@@692))
)))))))))))))))))))))
(let (($generated@@694  (=> (and (not (and (not (= $generated@@661 $generated@@662)) (not (= $generated@@661 $generated@@663)))) (= (ControlFlow 0 12) 2)) $generated@@678)))
(let (($generated@@695  (=> (and (not (= $generated@@661 $generated@@662)) (not (= $generated@@661 $generated@@663))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@672))) ($generated@@86 $generated@@672 $generated@@185 $generated@@666))) (=> (=> ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@672))) ($generated@@86 $generated@@672 $generated@@185 $generated@@666)) (=> (= (ControlFlow 0 10) 2) $generated@@678))))))
(let (($generated@@696  (=> (= $generated@@661 $generated@@662) (and (=> (= (ControlFlow 0 14) 10) $generated@@695) (=> (= (ControlFlow 0 14) 12) $generated@@694)))))
(let (($generated@@697  (=> (not (= $generated@@661 $generated@@662)) (and (=> (= (ControlFlow 0 13) 10) $generated@@695) (=> (= (ControlFlow 0 13) 12) $generated@@694)))))
(let (($generated@@698  (and (=> (= (ControlFlow 0 15) (- 0 26)) (=> (not (= $generated@@663 $generated@@661)) (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (! (let (($generated@@701 ($generated@@74 (type $generated@@700))))
 (=> (and (and (and (= (type $generated@@699) $generated@@89) (= (type $generated@@700) ($generated@@73 $generated@@701))) (not (= $generated@@699 $generated@@149))) (= $generated@@699 $generated@@663)) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@699) $generated@@700) ($generated@@95 ($generated@@93 $generated@@666 $generated@@699) $generated@@700))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@699) $generated@@700))
)))) (=> (=> (not (= $generated@@663 $generated@@661)) (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (! (let (($generated@@704 ($generated@@74 (type $generated@@703))))
 (=> (and (and (and (= (type $generated@@702) $generated@@89) (= (type $generated@@703) ($generated@@73 $generated@@704))) (not (= $generated@@702 $generated@@149))) (= $generated@@702 $generated@@663)) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@702) $generated@@703) ($generated@@95 ($generated@@93 $generated@@666 $generated@@702) $generated@@703))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@702) $generated@@703))
))) (and (=> (= (ControlFlow 0 15) (- 0 25)) ($generated@@86 $generated@@663 $generated@@185 $generated@@666)) (=> ($generated@@86 $generated@@663 $generated@@185 $generated@@666) (and (=> (= (ControlFlow 0 15) (- 0 24)) (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (! (let (($generated@@707 ($generated@@74 (type $generated@@706))))
 (=> (and (and (and (= (type $generated@@705) $generated@@89) (= (type $generated@@706) ($generated@@73 $generated@@707))) (not (= $generated@@705 $generated@@149))) (and (= $generated@@705 $generated@@663) (or (= $generated@@706 $generated@@159) (= $generated@@706 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@705) $generated@@706) ($generated@@95 ($generated@@93 $generated@@666 $generated@@705) $generated@@706))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@705) $generated@@706))
))) (=> (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (! (let (($generated@@710 ($generated@@74 (type $generated@@709))))
 (=> (and (and (and (= (type $generated@@708) $generated@@89) (= (type $generated@@709) ($generated@@73 $generated@@710))) (not (= $generated@@708 $generated@@149))) (and (= $generated@@708 $generated@@663) (or (= $generated@@709 $generated@@159) (= $generated@@709 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@708) $generated@@709) ($generated@@95 ($generated@@93 $generated@@666 $generated@@708) $generated@@709))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@708) $generated@@709))
)) (and (=> (= (ControlFlow 0 15) (- 0 23)) ($generated@@86 $generated@@662 $generated@@185 $generated@@666)) (=> ($generated@@86 $generated@@662 $generated@@185 $generated@@666) (and (=> (= (ControlFlow 0 15) (- 0 22)) (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (! (let (($generated@@713 ($generated@@74 (type $generated@@712))))
 (=> (and (and (and (= (type $generated@@711) $generated@@89) (= (type $generated@@712) ($generated@@73 $generated@@713))) (not (= $generated@@711 $generated@@149))) (and (= $generated@@711 $generated@@662) (or (= $generated@@712 $generated@@159) (= $generated@@712 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@711) $generated@@712) ($generated@@95 ($generated@@93 $generated@@666 $generated@@711) $generated@@712))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@711) $generated@@712))
))) (=> (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (! (let (($generated@@716 ($generated@@74 (type $generated@@715))))
 (=> (and (and (and (= (type $generated@@714) $generated@@89) (= (type $generated@@715) ($generated@@73 $generated@@716))) (not (= $generated@@714 $generated@@149))) (and (= $generated@@714 $generated@@662) (or (= $generated@@715 $generated@@159) (= $generated@@715 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@714) $generated@@715) ($generated@@95 ($generated@@93 $generated@@666 $generated@@714) $generated@@715))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@714) $generated@@715))
)) (and (=> (= (ControlFlow 0 15) (- 0 21)) ($generated@@86 $generated@@661 $generated@@185 $generated@@666)) (=> ($generated@@86 $generated@@661 $generated@@185 $generated@@666) (and (=> (= (ControlFlow 0 15) (- 0 20)) (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (! (let (($generated@@719 ($generated@@74 (type $generated@@718))))
 (=> (and (and (and (= (type $generated@@717) $generated@@89) (= (type $generated@@718) ($generated@@73 $generated@@719))) (not (= $generated@@717 $generated@@149))) (and (= $generated@@717 $generated@@661) (or (= $generated@@718 $generated@@159) (= $generated@@718 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@717) $generated@@718) ($generated@@95 ($generated@@93 $generated@@666 $generated@@717) $generated@@718))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@717) $generated@@718))
))) (=> (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (! (let (($generated@@722 ($generated@@74 (type $generated@@721))))
 (=> (and (and (and (= (type $generated@@720) $generated@@89) (= (type $generated@@721) ($generated@@73 $generated@@722))) (not (= $generated@@720 $generated@@149))) (and (= $generated@@720 $generated@@661) (or (= $generated@@721 $generated@@159) (= $generated@@721 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@720) $generated@@721) ($generated@@95 ($generated@@93 $generated@@666 $generated@@720) $generated@@721))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@720) $generated@@721))
)) (=> (= $generated@@665 ($generated@@446 ($generated@@446 ($generated@@588 $generated@@174) ($generated@@295 $generated@@662)) ($generated@@295 $generated@@663))) (and (=> (= (ControlFlow 0 15) (- 0 19)) ($generated@@86 $generated@@661 $generated@@185 $generated@@666)) (=> ($generated@@86 $generated@@661 $generated@@185 $generated@@666) (and (=> (= (ControlFlow 0 15) (- 0 18)) (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (! (let (($generated@@725 ($generated@@74 (type $generated@@724))))
 (=> (and (and (and (= (type $generated@@723) $generated@@89) (= (type $generated@@724) ($generated@@73 $generated@@725))) (not (= $generated@@723 $generated@@149))) (and (= $generated@@723 $generated@@661) (or (= $generated@@724 $generated@@159) (= $generated@@724 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@723) $generated@@724) ($generated@@95 ($generated@@93 $generated@@666 $generated@@723) $generated@@724))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@723) $generated@@724))
))) (=> (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (! (let (($generated@@728 ($generated@@74 (type $generated@@727))))
 (=> (and (and (and (= (type $generated@@726) $generated@@89) (= (type $generated@@727) ($generated@@73 $generated@@728))) (not (= $generated@@726 $generated@@149))) (and (= $generated@@726 $generated@@661) (or (= $generated@@727 $generated@@159) (= $generated@@727 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@726) $generated@@727) ($generated@@95 ($generated@@93 $generated@@666 $generated@@726) $generated@@727))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@726) $generated@@727))
)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (=> ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@673))) ($generated@@86 $generated@@673 $generated@@185 $generated@@666))) (=> (=> ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@673))) ($generated@@86 $generated@@673 $generated@@185 $generated@@666)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (! (let (($generated@@731 ($generated@@74 (type $generated@@730))))
 (=> (and (and (and (= (type $generated@@729) $generated@@89) (= (type $generated@@730) ($generated@@73 $generated@@731))) (not (= $generated@@729 $generated@@149))) (and ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@729))) (or (= $generated@@730 $generated@@159) (= $generated@@730 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@729) $generated@@730) ($generated@@95 ($generated@@93 $generated@@666 $generated@@729) $generated@@730))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@729) $generated@@730))
))) (=> (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (! (let (($generated@@734 ($generated@@74 (type $generated@@733))))
 (=> (and (and (and (= (type $generated@@732) $generated@@89) (= (type $generated@@733) ($generated@@73 $generated@@734))) (not (= $generated@@732 $generated@@149))) (and ($generated@@0 ($generated@@93 $generated@@665 ($generated@@295 $generated@@732))) (or (= $generated@@733 $generated@@159) (= $generated@@733 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@732) $generated@@733) ($generated@@95 ($generated@@93 $generated@@666 $generated@@732) $generated@@733))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@732) $generated@@733))
)) (and (=> (= (ControlFlow 0 15) 13) $generated@@697) (=> (= (ControlFlow 0 15) 14) $generated@@696)))))))))))))))))))))))))))
(let (($generated@@735  (=> (and (= $generated@@663 $generated@@661) (= (ControlFlow 0 29) 15)) $generated@@698)))
(let (($generated@@736  (=> (not (= $generated@@663 $generated@@661)) (and (=> (= (ControlFlow 0 27) (- 0 28)) ($generated@@86 $generated@@663 $generated@@185 $generated@@666)) (=> ($generated@@86 $generated@@663 $generated@@185 $generated@@666) (=> (= (ControlFlow 0 27) 15) $generated@@698))))))
(let (($generated@@737  (and (=> (= (ControlFlow 0 30) (- 0 31)) (=> (not (= $generated@@669 0)) (not (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (! (let (($generated@@740 ($generated@@74 (type $generated@@739))))
 (=> (and (and (and (= (type $generated@@738) $generated@@89) (= (type $generated@@739) ($generated@@73 $generated@@740))) (not (= $generated@@738 $generated@@149))) (and (= $generated@@738 $generated@@661) (or (= $generated@@739 $generated@@152) (= $generated@@739 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@738) $generated@@739) ($generated@@95 ($generated@@93 $generated@@666 $generated@@738) $generated@@739))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@738) $generated@@739))
))))) (=> (=> (not (= $generated@@669 0)) (not (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (! (let (($generated@@743 ($generated@@74 (type $generated@@742))))
 (=> (and (and (and (= (type $generated@@741) $generated@@89) (= (type $generated@@742) ($generated@@73 $generated@@743))) (not (= $generated@@741 $generated@@149))) (and (= $generated@@741 $generated@@661) (or (= $generated@@742 $generated@@152) (= $generated@@742 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@741) $generated@@742) ($generated@@95 ($generated@@93 $generated@@666 $generated@@741) $generated@@742))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@741) $generated@@742))
)))) (and (=> (= (ControlFlow 0 30) 27) $generated@@736) (=> (= (ControlFlow 0 30) 29) $generated@@735))))))
(let (($generated@@744  (=> (and (= $generated@@669 0) (= (ControlFlow 0 34) 30)) $generated@@737)))
(let (($generated@@745  (=> (not (= $generated@@669 0)) (and (=> (= (ControlFlow 0 32) (- 0 33)) ($generated@@86 $generated@@661 $generated@@185 $generated@@666)) (=> ($generated@@86 $generated@@661 $generated@@185 $generated@@666) (=> (= (ControlFlow 0 32) 30) $generated@@737))))))
(let (($generated@@746  (and (=> (= (ControlFlow 0 35) (- 0 36)) (=> (not (= $generated@@669 0)) (not (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (! (let (($generated@@749 ($generated@@74 (type $generated@@748))))
 (=> (and (and (and (= (type $generated@@747) $generated@@89) (= (type $generated@@748) ($generated@@73 $generated@@749))) (not (= $generated@@747 $generated@@149))) (= $generated@@747 $generated@@661)) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@747) $generated@@748) ($generated@@95 ($generated@@93 $generated@@666 $generated@@747) $generated@@748))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@747) $generated@@748))
))))) (=> (=> (not (= $generated@@669 0)) (not (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (! (let (($generated@@752 ($generated@@74 (type $generated@@751))))
 (=> (and (and (and (= (type $generated@@750) $generated@@89) (= (type $generated@@751) ($generated@@73 $generated@@752))) (not (= $generated@@750 $generated@@149))) (= $generated@@750 $generated@@661)) (= ($generated@@95 ($generated@@93 $generated@@664 $generated@@750) $generated@@751) ($generated@@95 ($generated@@93 $generated@@666 $generated@@750) $generated@@751))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@664 $generated@@750) $generated@@751))
)))) (and (=> (= (ControlFlow 0 35) 32) $generated@@745) (=> (= (ControlFlow 0 35) 34) $generated@@744))))))
(let (($generated@@753  (=> (and (= $generated@@669 0) (= (ControlFlow 0 39) 35)) $generated@@746)))
(let (($generated@@754  (=> (not (= $generated@@669 0)) (and (=> (= (ControlFlow 0 37) (- 0 38)) ($generated@@86 $generated@@661 $generated@@185 $generated@@666)) (=> ($generated@@86 $generated@@661 $generated@@185 $generated@@666) (=> (= (ControlFlow 0 37) 35) $generated@@746))))))
(let (($generated@@755  (=> (= $generated@@667 ($generated@@204 $generated@@149 $generated@@666 $generated@@60 $generated@@662 $generated@@661)) (and (=> (= (ControlFlow 0 40) (- 0 43)) (not (= $generated@@661 $generated@@149))) (=> (not (= $generated@@661 $generated@@149)) (and (=> (= (ControlFlow 0 40) (- 0 42)) ($generated@@0 ($generated@@203 $generated@@667 $generated@@661 $generated@@152))) (=> ($generated@@0 ($generated@@203 $generated@@667 $generated@@661 $generated@@152)) (and (=> (= (ControlFlow 0 40) (- 0 41)) (not (= $generated@@661 $generated@@149))) (=> (not (= $generated@@661 $generated@@149)) (=> (= $generated@@674 (+ ($generated ($generated@@95 ($generated@@93 $generated@@666 $generated@@661) $generated@@152)) $generated@@669)) (=> (and (= $generated@@664 ($generated@@94 $generated@@666 $generated@@661 ($generated@@96 ($generated@@93 $generated@@666 $generated@@661) $generated@@152 ($generated@@8 $generated@@674)))) ($generated@@153 $generated@@664)) (and (=> (= (ControlFlow 0 40) 37) $generated@@754) (=> (= (ControlFlow 0 40) 39) $generated@@753)))))))))))))
(let (($generated@@756  (=> (and (and (and (and ($generated@@153 $generated@@666) ($generated@@675 $generated@@666)) (and (not (= $generated@@662 $generated@@149)) (and ($generated@@155 $generated@@662 $generated@@185) ($generated@@86 $generated@@662 $generated@@185 $generated@@666)))) (and (and ($generated@@155 $generated@@661 $generated@@185) ($generated@@86 $generated@@661 $generated@@185 $generated@@666)) (and ($generated@@155 $generated@@663 $generated@@185) ($generated@@86 $generated@@663 $generated@@185 $generated@@666)))) (and (and (and ($generated@@155 $generated@@676 ($generated@@261 $generated@@185)) ($generated@@86 $generated@@676 ($generated@@261 $generated@@185) $generated@@666)) true) (and (= 1 $generated@@677) (= (ControlFlow 0 44) 40)))) $generated@@755)))
$generated@@756)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@188 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@T T@U T@U) T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@203 (T@U T@U T@U) T@U)
(declare-fun $generated@@204 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@205 (T@T T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U T@U) Bool)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@T) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@521 (T@U Int) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@628 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@146) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (and (= (type $generated@@148) $generated@@71) (= (type $generated@@149) $generated@@89)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@89) (= (type $generated@@151) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@150 $generated@@148 $generated@@151)  (or (= $generated@@150 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@150 $generated@@148 $generated@@151))
)))
(assert  (and (= (type $generated@@152) ($generated@@73 $generated@@2)) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@71)
 :pattern ( ($generated@@154 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@158) $generated@@89)) (and ($generated@@153 $generated@@157) (and (not (= $generated@@158 $generated@@149)) (= ($generated@@154 $generated@@158) $generated@@148)))) ($generated@@155 ($generated@@95 ($generated@@93 $generated@@157 $generated@@158) $generated@@152) $generated@@46))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@157 $generated@@158) $generated@@152))
)))
(assert (= (type $generated@@159) ($generated@@73 $generated@@2)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@161) $generated@@89)) (and ($generated@@153 $generated@@160) (and (not (= $generated@@161 $generated@@149)) (= ($generated@@154 $generated@@161) $generated@@148)))) ($generated@@155 ($generated@@95 ($generated@@93 $generated@@160 $generated@@161) $generated@@159) $generated@@46))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@160 $generated@@161) $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@155 $generated@@162 ($generated@@87 0)))
 :pattern ( ($generated@@155 $generated@@162 ($generated@@87 0)))
)))
(assert  (and (= ($generated@@1 $generated@@165) 16) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@166 $generated@@167)) $generated@@71)
 :pattern ( ($generated@@164 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (= (type $generated@@168) $generated@@71) (= (type $generated@@169) $generated@@71)) (= (type $generated@@170) $generated@@165)) ($generated@@155 $generated@@170 ($generated@@164 $generated@@168 $generated@@169))) ($generated@@163 $generated@@170))
 :pattern ( ($generated@@163 $generated@@170) ($generated@@155 $generated@@170 ($generated@@164 $generated@@168 $generated@@169)))
)))
(assert  (and (and (= ($generated@@1 $generated@@174) 17) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@172 $generated@@175))
))) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@173 $generated@@176)) $generated@@174)
 :pattern ( ($generated@@173 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@165) (= (type $generated@@178) $generated@@165)) true) (= ($generated@@171 $generated@@177 $generated@@178)  (and (= ($generated@@172 $generated@@177) ($generated@@172 $generated@@178)) (= ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)))))
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@71)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@88 $generated@@174 $generated@@2)) (= (type $generated@@183) $generated@@71)) ($generated@@155 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@155 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@89) (= ($generated@@155 $generated@@184 $generated@@148)  (or (= $generated@@184 $generated@@149) (= ($generated@@154 $generated@@184) $generated@@148))))
 :pattern ( ($generated@@155 $generated@@184 $generated@@148))
)))
(assert (= (type $generated@@185) $generated@@71))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@89) (= (type $generated@@187) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@186 $generated@@185 $generated@@187) ($generated@@86 $generated@@186 $generated@@148 $generated@@187)))
 :pattern ( ($generated@@86 $generated@@186 $generated@@185 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@190 $generated@@191)) $generated@@165)
 :pattern ( ($generated@@188 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@71) (= (type $generated@@193) $generated@@71)) (= (type $generated@@194) $generated@@174)) (= (type $generated@@195) $generated@@174)) (= ($generated@@155 ($generated@@188 $generated@@194 $generated@@195) ($generated@@164 $generated@@192 $generated@@193))  (and ($generated@@189 $generated@@194 $generated@@192) ($generated@@189 $generated@@195 $generated@@193))))
 :pattern ( ($generated@@155 ($generated@@188 $generated@@194 $generated@@195) ($generated@@164 $generated@@192 $generated@@193)))
)))
(assert (= ($generated@@81 $generated@@152) 0))
(assert (forall (($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= (type ($generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@73 $generated@@197))
 :pattern ( ($generated@@196 $generated@@197 $generated@@198 $generated@@199))
)))
(assert (= ($generated@@196 $generated@@2 $generated@@64 $generated@@69) $generated@@152))
(assert  (not ($generated@@200 $generated@@152)))
(assert (= ($generated@@81 $generated@@159) 0))
(assert (= ($generated@@196 $generated@@2 $generated@@64 $generated@@70) $generated@@159))
(assert  (not ($generated@@200 $generated@@159)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@165) (= (type $generated@@202) $generated@@165)) (= ($generated@@171 $generated@@201 $generated@@202) (= $generated@@201 $generated@@202)))
 :pattern ( ($generated@@171 $generated@@201 $generated@@202))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@205 $generated@@209 $generated@@210)) 18)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@205 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@207 ($generated@@205 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@205 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@203 $generated@@215 $generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@203 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 (type $generated@@222)))
(let (($generated@@224 (type $generated@@220)))
(= (type ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@205 $generated@@224 $generated@@223))))
 :pattern ( ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@207 (type $generated@@225))))
 (=> (= (type $generated@@228) $generated@@229) (= ($generated@@203 ($generated@@208 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@226 $generated@@227) $generated@@228)))
 :weight 0
))) (and (and (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@203 ($generated@@208 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@203 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@203 ($generated@@208 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@203 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or true (= ($generated@@203 ($generated@@208 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@203 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
)))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251 $generated@@252)) ($generated@@205 $generated@@89 $generated@@4))
 :pattern ( ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@74 (type $generated@@259))))
 (=> (and (and (and (and (and (and (= (type $generated@@253) $generated@@89) (= (type $generated@@254) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@255) ($generated@@73 $generated@@4))) (= (type $generated@@256) $generated@@89)) (= (type $generated@@257) $generated@@89)) (= (type $generated@@258) $generated@@89)) (= (type $generated@@259) ($generated@@73 $generated@@260))) (= ($generated@@0 ($generated@@203 ($generated@@204 $generated@@253 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@253)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@254 $generated@@258) $generated@@255))) (or (= $generated@@258 $generated@@256) (= $generated@@258 $generated@@257))))))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@253 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@88 $generated@@174 $generated@@4)) (= (type $generated@@264) $generated@@71)) (= ($generated@@155 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@174) ($generated@@0 ($generated@@93 $generated@@263 $generated@@265))) ($generated@@189 $generated@@265 $generated@@264))
 :pattern ( ($generated@@93 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@155 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@71)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@88 $generated@@174 $generated@@4)) (= (type $generated@@269) $generated@@71)) (= ($generated@@155 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@174) ($generated@@0 ($generated@@93 $generated@@268 $generated@@270))) ($generated@@189 $generated@@270 $generated@@269))
 :pattern ( ($generated@@93 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@155 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@71) (= (type $generated@@277) $generated@@71)) (= (type $generated@@278) $generated@@174)) (= (type $generated@@279) $generated@@174)) (= (type $generated@@280) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@153 $generated@@280)) (= ($generated@@86 ($generated@@188 $generated@@278 $generated@@279) ($generated@@164 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@86 ($generated@@188 $generated@@278 $generated@@279) ($generated@@164 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@76)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@165) (= ($generated@@163 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@62)))
 :pattern ( ($generated@@163 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@165) ($generated@@163 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@174) (= (type $generated@@286) $generated@@174)) (= $generated@@284 ($generated@@188 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@163 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 19)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert ($generated@@200 $generated@@60))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@174)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@71) (= (type $generated@@299) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@86 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@301) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@302) $generated@@174)) (= (type $generated@@303) $generated@@71)) ($generated@@144 $generated@@300 $generated@@301)) ($generated@@275 $generated@@302 $generated@@303 $generated@@300)) ($generated@@275 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@144 $generated@@300 $generated@@301) ($generated@@275 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@305) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@307) $generated@@71)) ($generated@@144 $generated@@304 $generated@@305)) ($generated@@86 $generated@@306 $generated@@307 $generated@@304)) ($generated@@86 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@144 $generated@@304 $generated@@305) ($generated@@86 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@309) $generated@@89)) (=> (and (and ($generated@@153 $generated@@308) (and (not (= $generated@@309 $generated@@149)) (= ($generated@@154 $generated@@309) $generated@@148))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@308 $generated@@309) $generated@@60))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@308 $generated@@309) $generated@@152) $generated@@46 $generated@@308)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@308 $generated@@309) $generated@@152))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@311) $generated@@89)) (=> (and (and ($generated@@153 $generated@@310) (and (not (= $generated@@311 $generated@@149)) (= ($generated@@154 $generated@@311) $generated@@148))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@60))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@159) $generated@@46 $generated@@310)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@159))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@88 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@91 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@88 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@93 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 20)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@88 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@93 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@93 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 21)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@88 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@93 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@93 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@356) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@354 $generated@@355 $generated@@356)) (and ($generated@@144 $generated@@355 $generated@@356) (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@74 (type $generated@@358))))
 (=> (and (and (= (type $generated@@357) $generated@@89) (= (type $generated@@358) ($generated@@73 $generated@@359))) (not ($generated@@200 $generated@@358))) (= ($generated@@95 ($generated@@93 $generated@@355 $generated@@357) $generated@@358) ($generated@@95 ($generated@@93 $generated@@356 $generated@@357) $generated@@358))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@356 $generated@@357) $generated@@358))
))))
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@91 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@88 $generated@@361 $generated@@2)) (= ($generated@@180 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@93 $generated@@360 $generated@@362))) (<= ($generated ($generated@@93 $generated@@360 $generated@@362)) ($generated@@312 $generated@@360))))
 :pattern ( ($generated@@93 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@180 $generated@@360))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@174) ($generated@@189 $generated@@366 $generated@@148)) (and (= ($generated@@295 ($generated@@363 $generated@@89 $generated@@366)) $generated@@366) ($generated@@155 ($generated@@363 $generated@@89 $generated@@366) $generated@@148)))
 :pattern ( ($generated@@189 $generated@@366 $generated@@148))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@174) ($generated@@189 $generated@@367 $generated@@185)) (and (= ($generated@@295 ($generated@@363 $generated@@89 $generated@@367)) $generated@@367) ($generated@@155 ($generated@@363 $generated@@89 $generated@@367) $generated@@185)))
 :pattern ( ($generated@@189 $generated@@367 $generated@@185))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@89) (= ($generated@@155 $generated@@368 $generated@@185)  (and ($generated@@155 $generated@@368 $generated@@148) (not (= $generated@@368 $generated@@149)))))
 :pattern ( ($generated@@155 $generated@@368 $generated@@185))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@322 (type $generated@@369))))
(let (($generated@@371 ($generated@@321 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@320 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@319 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@93 ($generated@@318 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@318 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@88 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@322 (type $generated@@376))))
(let (($generated@@378 ($generated@@321 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@320 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@319 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@93 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@340 (type $generated@@380))))
(let (($generated@@382 ($generated@@339 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@338 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@337 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@93 ($generated@@336 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@336 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@88 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@340 (type $generated@@387))))
(let (($generated@@389 ($generated@@339 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@338 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@337 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@93 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@88 $generated@@174 $generated@@2)) (= (type $generated@@392) $generated@@71)) (= ($generated@@155 $generated@@391 ($generated@@179 $generated@@392)) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@174) (< 0 ($generated ($generated@@93 $generated@@391 $generated@@393)))) ($generated@@189 $generated@@393 $generated@@392))
 :pattern ( ($generated@@93 $generated@@391 $generated@@393))
))))
 :pattern ( ($generated@@155 $generated@@391 ($generated@@179 $generated@@392)))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@88 $generated@@174 $generated@@4)) (= (type $generated@@395) $generated@@71)) (= (type $generated@@396) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@394 ($generated@@261 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@174) ($generated@@0 ($generated@@93 $generated@@394 $generated@@397))) ($generated@@275 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@93 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@86 $generated@@394 ($generated@@261 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@88 $generated@@174 $generated@@4)) (= (type $generated@@399) $generated@@71)) (= (type $generated@@400) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@398 ($generated@@266 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@174) ($generated@@0 ($generated@@93 $generated@@398 $generated@@401))) ($generated@@275 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@93 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@86 $generated@@398 ($generated@@266 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@93 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@93 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@88 $generated@@174 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@88 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@174 $generated@@174)) (= (type $generated@@411) $generated@@174)) (= ($generated@@0 ($generated@@93 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@93 ($generated@@318 $generated@@410) ($generated@@172 ($generated@@363 $generated@@165 $generated@@411)))) (= ($generated@@93 ($generated@@405 $generated@@410) ($generated@@172 ($generated@@363 $generated@@165 $generated@@411))) ($generated@@173 ($generated@@363 $generated@@165 $generated@@411))))))
 :pattern ( ($generated@@93 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@88 $generated@@174 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@88 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@174 $generated@@174)) (= (type $generated@@419) $generated@@174)) (= ($generated@@0 ($generated@@93 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@93 ($generated@@336 $generated@@418) ($generated@@172 ($generated@@363 $generated@@165 $generated@@419)))) (= ($generated@@93 ($generated@@413 $generated@@418) ($generated@@172 ($generated@@363 $generated@@165 $generated@@419))) ($generated@@173 ($generated@@363 $generated@@165 $generated@@419))))))
 :pattern ( ($generated@@93 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@93 ($generated@@373 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@93 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@93 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@93 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@93 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@93 ($generated@@373 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@93 ($generated@@384 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@93 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@93 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@93 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@93 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@71)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@174 $generated@@174)) (= (type $generated@@434) $generated@@71)) (= (type $generated@@435) $generated@@71)) (= (type $generated@@436) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@174) ($generated@@0 ($generated@@93 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@275 ($generated@@93 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@275 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@93 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@93 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@86 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@71)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@174 $generated@@174)) (= (type $generated@@442) $generated@@71)) (= (type $generated@@443) $generated@@71)) (= (type $generated@@444) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@174) ($generated@@0 ($generated@@93 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@275 ($generated@@93 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@275 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@93 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@93 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@86 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@446) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@447) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@448) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@446 $generated@@448))) (and ($generated@@144 $generated@@446 $generated@@447) ($generated@@144 $generated@@447 $generated@@448))) ($generated@@144 $generated@@446 $generated@@448))
 :pattern ( ($generated@@144 $generated@@446 $generated@@447) ($generated@@144 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@T) ) (! (= (type ($generated@@449 $generated@@450)) ($generated@@88 $generated@@450 $generated@@4))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@336 $generated@@451) ($generated@@449 $generated@@453))))))
 :pattern ( ($generated@@336 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@384 $generated@@454) ($generated@@449 $generated@@455))))))
 :pattern ( ($generated@@384 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@340 (type $generated@@457))))
(let (($generated@@459 ($generated@@339 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@338 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@337 $generated@@459 $generated@@458)) (= ($generated@@412 $generated@@457) ($generated@@449 $generated@@174))))))
 :pattern ( ($generated@@412 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@322 (type $generated@@460))))
(let (($generated@@462 ($generated@@321 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@320 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@319 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@174) (= (type $generated@@464) $generated@@174)) ($generated@@0 ($generated@@93 ($generated@@404 $generated@@460) ($generated@@295 ($generated@@188 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@404 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@340 (type $generated@@465))))
(let (($generated@@467 ($generated@@339 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@338 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@337 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@174) (= (type $generated@@469) $generated@@174)) ($generated@@0 ($generated@@93 ($generated@@412 $generated@@465) ($generated@@295 ($generated@@188 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@412 $generated@@465))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@77)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@T) ) (!  (=> (and (= (type $generated@@472) $generated@@77) (= (type $generated@@473) $generated@@75)) (and (= ($generated@@470 ($generated@@196 $generated@@474 $generated@@472 $generated@@473)) $generated@@472) (= ($generated@@84 ($generated@@196 $generated@@474 $generated@@472 $generated@@473)) $generated@@473)))
 :pattern ( ($generated@@196 $generated@@474 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@174) ($generated@@189 $generated@@475 $generated@@46)) (and (= ($generated@@295 ($generated@@363 $generated@@2 $generated@@475)) $generated@@475) ($generated@@155 ($generated@@363 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@189 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@174) ($generated@@189 $generated@@476 $generated@@47)) (and (= ($generated@@295 ($generated@@363 $generated@@3 $generated@@476)) $generated@@476) ($generated@@155 ($generated@@363 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@189 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@174) ($generated@@189 $generated@@477 $generated@@44)) (and (= ($generated@@295 ($generated@@363 $generated@@4 $generated@@477)) $generated@@477) ($generated@@155 ($generated@@363 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@189 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 22))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@174) ($generated@@189 $generated@@479 $generated@@45)) (and (= ($generated@@295 ($generated@@363 $generated@@478 $generated@@479)) $generated@@479) ($generated@@155 ($generated@@363 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@189 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@71) (= ($generated@@189 ($generated@@295 $generated@@480) $generated@@481) ($generated@@155 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@189 ($generated@@295 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@91 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@88 $generated@@483 $generated@@2)) (<= 0 ($generated@@312 $generated@@482))))
 :pattern ( ($generated@@312 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@290 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@289 $generated@@485)) (<= 0 ($generated@@288 $generated@@484))))
 :pattern ( ($generated@@288 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@71)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@71) (= (type $generated@@489) $generated@@71)) (= ($generated@@486 ($generated@@430 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@430 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@71)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@71) (= (type $generated@@493) $generated@@71)) (= ($generated@@490 ($generated@@430 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@430 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@71) (= (type $generated@@495) $generated@@71)) (= ($generated@@82 ($generated@@430 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@71)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@71) (= (type $generated@@499) $generated@@71)) (= ($generated@@496 ($generated@@438 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@438 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@71)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@71) (= (type $generated@@503) $generated@@71)) (= ($generated@@500 ($generated@@438 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@438 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@71) (= (type $generated@@505) $generated@@71)) (= ($generated@@82 ($generated@@438 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@174) (= (type $generated@@507) $generated@@174)) (= ($generated@@281 ($generated@@188 $generated@@506 $generated@@507)) $generated@@62))
 :pattern ( ($generated@@188 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@71)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@71) (= (type $generated@@511) $generated@@71)) (= ($generated@@508 ($generated@@164 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@164 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@71)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@71) (= (type $generated@@515) $generated@@71)) (= ($generated@@512 ($generated@@164 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@164 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@174) (= (type $generated@@517) $generated@@174)) (= ($generated@@172 ($generated@@188 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@188 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@174) (= (type $generated@@519) $generated@@174)) (= ($generated@@173 ($generated@@188 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@188 $generated@@518 $generated@@519))
)))
(assert  (and (forall (($generated@@522 T@U) ) (! (= (type ($generated@@520 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@520 $generated@@522))
)) (forall (($generated@@523 T@U) ($generated@@524 Int) ) (! (let (($generated@@525 ($generated@@290 (type $generated@@523))))
(= (type ($generated@@521 $generated@@523 $generated@@524)) $generated@@525))
 :pattern ( ($generated@@521 $generated@@523 $generated@@524))
))))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@289 $generated@@174)) (= (type $generated@@527) $generated@@71)) (= (type $generated@@528) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@526 ($generated@@520 $generated@@527) $generated@@528) (forall (($generated@@529 Int) ) (!  (=> (and (<= 0 $generated@@529) (< $generated@@529 ($generated@@288 $generated@@526))) ($generated@@275 ($generated@@521 $generated@@526 $generated@@529) $generated@@527 $generated@@528))
 :pattern ( ($generated@@521 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@86 $generated@@526 ($generated@@520 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@531 Int) ) (! (= ($generated@@530 ($generated@@87 $generated@@531)) $generated@@531)
 :pattern ( ($generated@@87 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@71)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@71) (= ($generated@@532 ($generated@@261 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@261 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@71) (= ($generated@@82 ($generated@@261 $generated@@535)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@71) (= ($generated@@536 ($generated@@266 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@266 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@71) (= ($generated@@82 ($generated@@266 $generated@@539)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@71)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@71) (= ($generated@@540 ($generated@@179 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@179 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@71) (= ($generated@@82 ($generated@@179 $generated@@543)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@71)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@71) (= ($generated@@544 ($generated@@520 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@520 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@71) (= ($generated@@82 ($generated@@520 $generated@@547)) $generated@@57))
 :pattern ( ($generated@@520 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
(= ($generated@@363 $generated@@549 ($generated@@295 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@295 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@320 $generated@@174 $generated@@174)) (= (type $generated@@551) $generated@@71)) (= (type $generated@@552) $generated@@71)) (= ($generated@@155 $generated@@550 ($generated@@430 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@174) ($generated@@0 ($generated@@93 ($generated@@318 $generated@@550) $generated@@553))) (and ($generated@@189 ($generated@@93 ($generated@@405 $generated@@550) $generated@@553) $generated@@552) ($generated@@189 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@93 ($generated@@405 $generated@@550) $generated@@553))
 :pattern ( ($generated@@93 ($generated@@318 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@155 $generated@@550 ($generated@@430 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@338 $generated@@174 $generated@@174)) (= (type $generated@@555) $generated@@71)) (= (type $generated@@556) $generated@@71)) (= ($generated@@155 $generated@@554 ($generated@@438 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@174) ($generated@@0 ($generated@@93 ($generated@@336 $generated@@554) $generated@@557))) (and ($generated@@189 ($generated@@93 ($generated@@413 $generated@@554) $generated@@557) $generated@@556) ($generated@@189 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@93 ($generated@@413 $generated@@554) $generated@@557))
 :pattern ( ($generated@@93 ($generated@@336 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@155 $generated@@554 ($generated@@438 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@174) (= (type $generated@@561) $generated@@174)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@188 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@188 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@174) (= (type $generated@@563) $generated@@174)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@188 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@188 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@174) (= (type $generated@@565) $generated@@71)) (= (type $generated@@566) $generated@@71)) ($generated@@189 $generated@@564 ($generated@@430 $generated@@565 $generated@@566))) (and (= ($generated@@295 ($generated@@363 ($generated@@320 $generated@@174 $generated@@174) $generated@@564)) $generated@@564) ($generated@@155 ($generated@@363 ($generated@@320 $generated@@174 $generated@@174) $generated@@564) ($generated@@430 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@189 $generated@@564 ($generated@@430 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@174) (= (type $generated@@568) $generated@@71)) (= (type $generated@@569) $generated@@71)) ($generated@@189 $generated@@567 ($generated@@438 $generated@@568 $generated@@569))) (and (= ($generated@@295 ($generated@@363 ($generated@@338 $generated@@174 $generated@@174) $generated@@567)) $generated@@567) ($generated@@155 ($generated@@363 ($generated@@338 $generated@@174 $generated@@174) $generated@@567) ($generated@@438 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@189 $generated@@567 ($generated@@438 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@71) (= (type $generated@@571) $generated@@71)) (= (type $generated@@572) $generated@@174)) ($generated@@189 $generated@@572 ($generated@@164 $generated@@570 $generated@@571))) (and (= ($generated@@295 ($generated@@363 $generated@@165 $generated@@572)) $generated@@572) ($generated@@155 ($generated@@363 $generated@@165 $generated@@572) ($generated@@164 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@189 $generated@@572 ($generated@@164 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@93 ($generated@@449 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@93 ($generated@@449 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@78)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@71) (= (type $generated@@578) $generated@@71)) (and (= ($generated@@82 ($generated@@164 $generated@@577 $generated@@578)) $generated@@63) (= ($generated@@575 ($generated@@164 $generated@@577 $generated@@578)) $generated@@67)))
 :pattern ( ($generated@@164 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@165) (= ($generated@@558 ($generated@@295 $generated@@579)) ($generated@@559 $generated@@579)))
 :pattern ( ($generated@@558 ($generated@@295 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@174) ($generated@@189 $generated@@580 ($generated@@87 0))) (and (= ($generated@@295 ($generated@@363 $generated@@2 $generated@@580)) $generated@@580) ($generated@@155 ($generated@@363 ($generated@@88 $generated@@174 $generated@@4) $generated@@580) ($generated@@87 0))))
 :pattern ( ($generated@@189 $generated@@580 ($generated@@87 0)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@174) (= (type $generated@@582) $generated@@71)) ($generated@@189 $generated@@581 ($generated@@261 $generated@@582))) (and (= ($generated@@295 ($generated@@363 ($generated@@88 $generated@@174 $generated@@4) $generated@@581)) $generated@@581) ($generated@@155 ($generated@@363 ($generated@@88 $generated@@174 $generated@@4) $generated@@581) ($generated@@261 $generated@@582))))
 :pattern ( ($generated@@189 $generated@@581 ($generated@@261 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@174) (= (type $generated@@584) $generated@@71)) ($generated@@189 $generated@@583 ($generated@@266 $generated@@584))) (and (= ($generated@@295 ($generated@@363 ($generated@@88 $generated@@174 $generated@@4) $generated@@583)) $generated@@583) ($generated@@155 ($generated@@363 ($generated@@88 $generated@@174 $generated@@4) $generated@@583) ($generated@@266 $generated@@584))))
 :pattern ( ($generated@@189 $generated@@583 ($generated@@266 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@174) (= (type $generated@@586) $generated@@71)) ($generated@@189 $generated@@585 ($generated@@179 $generated@@586))) (and (= ($generated@@295 ($generated@@363 ($generated@@88 $generated@@174 $generated@@2) $generated@@585)) $generated@@585) ($generated@@155 ($generated@@363 ($generated@@88 $generated@@174 $generated@@2) $generated@@585) ($generated@@179 $generated@@586))))
 :pattern ( ($generated@@189 $generated@@585 ($generated@@179 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@174) (= (type $generated@@588) $generated@@71)) ($generated@@189 $generated@@587 ($generated@@520 $generated@@588))) (and (= ($generated@@295 ($generated@@363 ($generated@@289 $generated@@174) $generated@@587)) $generated@@587) ($generated@@155 ($generated@@363 ($generated@@289 $generated@@174) $generated@@587) ($generated@@520 $generated@@588))))
 :pattern ( ($generated@@189 $generated@@587 ($generated@@520 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@592)))
 (=> (and (and (and (= (type $generated@@589) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@590) $generated@@89)) (= (type $generated@@591) ($generated@@73 $generated@@593))) ($generated@@153 ($generated@@94 $generated@@589 $generated@@590 ($generated@@96 ($generated@@93 $generated@@589 $generated@@590) $generated@@591 $generated@@592)))) ($generated@@144 $generated@@589 ($generated@@94 $generated@@589 $generated@@590 ($generated@@96 ($generated@@93 $generated@@589 $generated@@590) $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@94 $generated@@589 $generated@@590 ($generated@@96 ($generated@@93 $generated@@589 $generated@@590) $generated@@591 $generated@@592)))
)))
(assert (= ($generated@@82 $generated@@148) $generated@@65))
(assert (= ($generated@@575 $generated@@148) $generated@@68))
(assert (= ($generated@@82 $generated@@185) $generated@@66))
(assert (= ($generated@@575 $generated@@185) $generated@@68))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@88 $generated@@174 $generated@@2)) (= (type $generated@@595) $generated@@71)) (= (type $generated@@596) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@594 ($generated@@179 $generated@@595) $generated@@596) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@174) (< 0 ($generated ($generated@@93 $generated@@594 $generated@@597)))) ($generated@@275 $generated@@597 $generated@@595 $generated@@596))
 :pattern ( ($generated@@93 $generated@@594 $generated@@597))
))))
 :pattern ( ($generated@@86 $generated@@594 ($generated@@179 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@165) (= (type $generated@@599) $generated@@71)) (= (type $generated@@600) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@153 $generated@@600) (and ($generated@@163 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@71) ($generated@@86 $generated@@598 ($generated@@164 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@86 $generated@@598 ($generated@@164 $generated@@599 $generated@@601) $generated@@600))
))))) ($generated@@275 ($generated@@172 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@275 ($generated@@172 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@165) (= (type $generated@@603) $generated@@71)) (= (type $generated@@604) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@153 $generated@@604) (and ($generated@@163 $generated@@602) (exists (($generated@@605 T@U) ) (!  (and (= (type $generated@@605) $generated@@71) ($generated@@86 $generated@@602 ($generated@@164 $generated@@605 $generated@@603) $generated@@604))
 :pattern ( ($generated@@86 $generated@@602 ($generated@@164 $generated@@605 $generated@@603) $generated@@604))
))))) ($generated@@275 ($generated@@173 $generated@@602) $generated@@603 $generated@@604))
 :pattern ( ($generated@@275 ($generated@@173 $generated@@602) $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@174) (= (type $generated@@607) $generated@@174)) (= ($generated@@188 ($generated@@271 $generated@@606) ($generated@@271 $generated@@607)) ($generated@@271 ($generated@@188 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@188 ($generated@@271 $generated@@606) ($generated@@271 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@295 ($generated@@271 $generated@@608)) ($generated@@271 ($generated@@295 $generated@@608)))
 :pattern ( ($generated@@295 ($generated@@271 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@290 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@289 $generated@@610)) (= ($generated@@288 $generated@@609) 0)) (= $generated@@609 ($generated@@287 $generated@@610))))
 :pattern ( ($generated@@288 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@88 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@312 ($generated@@94 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@312 $generated@@611) ($generated ($generated@@93 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@312 ($generated@@94 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@616) $generated@@2)) ($generated@@86 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@86 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@618) $generated@@3)) ($generated@@86 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@86 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@620) $generated@@4)) ($generated@@86 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@86 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@622) $generated@@478)) ($generated@@86 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@86 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@624) $generated@@174)) ($generated@@86 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@86 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@289 $generated@@174)) (= (type $generated@@626) $generated@@71)) (= ($generated@@155 $generated@@625 ($generated@@520 $generated@@626)) (forall (($generated@@627 Int) ) (!  (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@288 $generated@@625))) ($generated@@189 ($generated@@521 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@521 $generated@@625 $generated@@627))
))))
 :pattern ( ($generated@@155 $generated@@625 ($generated@@520 $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) ($generated@@289 $generated@@174)) (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@288 $generated@@629))) (< ($generated@@559 ($generated@@363 $generated@@165 ($generated@@521 $generated@@629 $generated@@630))) ($generated@@628 $generated@@629))))
 :pattern ( ($generated@@559 ($generated@@363 $generated@@165 ($generated@@521 $generated@@629 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@320 $generated@@174 $generated@@174)) (= (type $generated@@632) $generated@@71)) (= (type $generated@@633) $generated@@71)) ($generated@@155 $generated@@631 ($generated@@430 $generated@@632 $generated@@633))) (and (and ($generated@@155 ($generated@@318 $generated@@631) ($generated@@261 $generated@@632)) ($generated@@155 ($generated@@373 $generated@@631) ($generated@@261 $generated@@633))) ($generated@@155 ($generated@@404 $generated@@631) ($generated@@261 ($generated@@164 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@155 $generated@@631 ($generated@@430 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@338 $generated@@174 $generated@@174)) (= (type $generated@@635) $generated@@71)) (= (type $generated@@636) $generated@@71)) ($generated@@155 $generated@@634 ($generated@@438 $generated@@635 $generated@@636))) (and (and ($generated@@155 ($generated@@336 $generated@@634) ($generated@@266 $generated@@635)) ($generated@@155 ($generated@@384 $generated@@634) ($generated@@266 $generated@@636))) ($generated@@155 ($generated@@412 $generated@@634) ($generated@@266 ($generated@@164 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@155 $generated@@634 ($generated@@438 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@2) ($generated@@155 $generated@@637 $generated@@46))
 :pattern ( ($generated@@155 $generated@@637 $generated@@46))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@3) ($generated@@155 $generated@@638 $generated@@47))
 :pattern ( ($generated@@155 $generated@@638 $generated@@47))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@4) ($generated@@155 $generated@@639 $generated@@44))
 :pattern ( ($generated@@155 $generated@@639 $generated@@44))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@478) ($generated@@155 $generated@@640 $generated@@45))
 :pattern ( ($generated@@155 $generated@@640 $generated@@45))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@174) ($generated@@155 $generated@@641 $generated@@48))
 :pattern ( ($generated@@155 $generated@@641 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 (T@U) Bool)
(declare-fun $generated@@653 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@642) $generated@@89) (= (type $generated@@648) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@645) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@649) $generated@@89)) (= (type $generated@@643) ($generated@@205 $generated@@89 $generated@@4))) (= (type $generated@@647) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@650) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@654  (=> (and (and (and (and (not ($generated@@0 ($generated@@271 ($generated@@11 true)))) (not ($generated@@0 ($generated@@271 ($generated@@11 true))))) (not ($generated@@0 ($generated@@271 ($generated@@11 true))))) (not ($generated@@0 ($generated@@271 ($generated@@11 true))))) (= (ControlFlow 0 17) (- 0 16))) false)))
(let (($generated@@655  (=> ($generated@@0 ($generated@@271 ($generated@@11 true))) (and (=> (= (ControlFlow 0 11) (- 0 15)) (not (= $generated@@642 $generated@@149))) (=> (not (= $generated@@642 $generated@@149)) (and (=> (= (ControlFlow 0 11) (- 0 14)) ($generated@@0 ($generated@@203 $generated@@643 $generated@@642 $generated@@159))) (=> ($generated@@0 ($generated@@203 $generated@@643 $generated@@642 $generated@@159)) (and (=> (= (ControlFlow 0 11) (- 0 13)) (not (= $generated@@642 $generated@@149))) (=> (not (= $generated@@642 $generated@@149)) (=> (= $generated@@644 (+ ($generated ($generated@@95 ($generated@@93 $generated@@645 $generated@@642) $generated@@159)) $generated@@646)) (=> (and (= $generated@@647 ($generated@@94 $generated@@645 $generated@@642 ($generated@@96 ($generated@@93 $generated@@645 $generated@@642) $generated@@159 ($generated@@8 $generated@@644)))) ($generated@@153 $generated@@647)) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@86 $generated@@642 $generated@@185 $generated@@648)) (=> ($generated@@86 $generated@@642 $generated@@185 $generated@@648) (=> (= (ControlFlow 0 11) (- 0 10)) (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (! (let (($generated@@658 ($generated@@74 (type $generated@@657))))
 (=> (and (and (and (= (type $generated@@656) $generated@@89) (= (type $generated@@657) ($generated@@73 $generated@@658))) (not (= $generated@@656 $generated@@149))) (and (= $generated@@656 $generated@@642) (or (= $generated@@657 $generated@@159) (= $generated@@657 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@647 $generated@@656) $generated@@657) ($generated@@95 ($generated@@93 $generated@@648 $generated@@656) $generated@@657))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@647 $generated@@656) $generated@@657))
))))))))))))))))
(let (($generated@@659  (=> ($generated@@0 ($generated@@271 ($generated@@11 true))) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@86 $generated@@642 $generated@@185 $generated@@648)) (=> ($generated@@86 $generated@@642 $generated@@185 $generated@@648) (=> (= (ControlFlow 0 8) (- 0 7)) (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (! (let (($generated@@662 ($generated@@74 (type $generated@@661))))
 (=> (and (and (and (= (type $generated@@660) $generated@@89) (= (type $generated@@661) ($generated@@73 $generated@@662))) (not (= $generated@@660 $generated@@149))) (and (= $generated@@660 $generated@@642) (or (= $generated@@661 $generated@@152) (= $generated@@661 $generated@@60)))) (= ($generated@@95 ($generated@@93 $generated@@645 $generated@@660) $generated@@661) ($generated@@95 ($generated@@93 $generated@@648 $generated@@660) $generated@@661))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@645 $generated@@660) $generated@@661))
))))))))
(let (($generated@@663  (=> ($generated@@0 ($generated@@271 ($generated@@11 true))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@86 $generated@@649 $generated@@185 $generated@@648)) (=> ($generated@@86 $generated@@649 $generated@@185 $generated@@648) (=> (= (ControlFlow 0 5) (- 0 4)) (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@74 (type $generated@@665))))
 (=> (and (and (and (= (type $generated@@664) $generated@@89) (= (type $generated@@665) ($generated@@73 $generated@@666))) (not (= $generated@@664 $generated@@149))) (= $generated@@664 $generated@@649)) (= ($generated@@95 ($generated@@93 $generated@@645 $generated@@664) $generated@@665) ($generated@@95 ($generated@@93 $generated@@648 $generated@@664) $generated@@665))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@645 $generated@@664) $generated@@665))
))))))))
(let (($generated@@667  (=> ($generated@@0 ($generated@@271 ($generated@@11 true))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@86 $generated@@642 $generated@@185 $generated@@648)) (=> ($generated@@86 $generated@@642 $generated@@185 $generated@@648) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (! (let (($generated@@670 ($generated@@74 (type $generated@@669))))
 (=> (and (and (and (= (type $generated@@668) $generated@@89) (= (type $generated@@669) ($generated@@73 $generated@@670))) (not (= $generated@@668 $generated@@149))) (= $generated@@668 $generated@@642)) (= ($generated@@95 ($generated@@93 $generated@@645 $generated@@668) $generated@@669) ($generated@@95 ($generated@@93 $generated@@648 $generated@@668) $generated@@669))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@645 $generated@@668) $generated@@669))
))))))))
(let (($generated@@671  (=> (= $generated@@643 ($generated@@204 $generated@@149 $generated@@648 $generated@@60 $generated@@650 $generated@@642)) (and (=> (= (ControlFlow 0 18) (- 0 21)) (not (= $generated@@642 $generated@@149))) (=> (not (= $generated@@642 $generated@@149)) (and (=> (= (ControlFlow 0 18) (- 0 20)) ($generated@@0 ($generated@@203 $generated@@643 $generated@@642 $generated@@152))) (=> ($generated@@0 ($generated@@203 $generated@@643 $generated@@642 $generated@@152)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (not (= $generated@@642 $generated@@149))) (=> (not (= $generated@@642 $generated@@149)) (=> (= $generated@@651 (+ ($generated ($generated@@95 ($generated@@93 $generated@@648 $generated@@642) $generated@@152)) 1)) (=> (and (= $generated@@645 ($generated@@94 $generated@@648 $generated@@642 ($generated@@96 ($generated@@93 $generated@@648 $generated@@642) $generated@@152 ($generated@@8 $generated@@651)))) ($generated@@153 $generated@@645)) (and (and (and (and (=> (= (ControlFlow 0 18) 2) $generated@@667) (=> (= (ControlFlow 0 18) 5) $generated@@663)) (=> (= (ControlFlow 0 18) 8) $generated@@659)) (=> (= (ControlFlow 0 18) 11) $generated@@655)) (=> (= (ControlFlow 0 18) 17) $generated@@654)))))))))))))
(let (($generated@@672  (=> (and ($generated@@153 $generated@@648) ($generated@@652 $generated@@648)) (=> (and (and (and (not (= $generated@@650 $generated@@149)) (and ($generated@@155 $generated@@650 $generated@@185) ($generated@@86 $generated@@650 $generated@@185 $generated@@648))) (and ($generated@@155 $generated@@642 $generated@@185) ($generated@@86 $generated@@642 $generated@@185 $generated@@648))) (and (and ($generated@@155 $generated@@649 $generated@@185) ($generated@@86 $generated@@649 $generated@@185 $generated@@648)) (and (= 1 $generated@@653) (= (ControlFlow 0 22) 18)))) $generated@@671))))
$generated@@672))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 7))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 11) (- 10))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@T T@U T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@T) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@620 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 18)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@88 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@88) (= (type $generated@@231) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@88)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@237) $generated@@70))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@88) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@238 $generated@@237 $generated@@239) ($generated@@85 $generated@@238 $generated@@147 $generated@@239)))
 :pattern ( ($generated@@85 $generated@@238 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@161)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@70) (= (type $generated@@245) $generated@@70)) (= (type $generated@@246) $generated@@170)) (= (type $generated@@247) $generated@@170)) (= ($generated@@154 ($generated@@240 $generated@@246 $generated@@247) ($generated@@160 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@154 ($generated@@240 $generated@@246 $generated@@247) ($generated@@160 $generated@@244 $generated@@245)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@249 T@T) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@72 $generated@@249))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250 $generated@@251))
)))
(assert (= ($generated@@248 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@252 $generated@@151)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) (= (type $generated@@254) $generated@@161)) (= ($generated@@167 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@167 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@258) $generated@@70)) (= ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@170) ($generated@@0 ($generated@@92 $generated@@257 $generated@@259))) ($generated@@241 $generated@@259 $generated@@258))
 :pattern ( ($generated@@92 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@263) $generated@@70)) (= ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@170) ($generated@@0 ($generated@@92 $generated@@262 $generated@@264))) ($generated@@241 $generated@@264 $generated@@263))
 :pattern ( ($generated@@92 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@170)) (= (type $generated@@273) $generated@@170)) (= (type $generated@@274) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@274)) (= ($generated@@85 ($generated@@240 $generated@@272 $generated@@273) ($generated@@160 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@85 ($generated@@240 $generated@@272 $generated@@273) ($generated@@160 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@75)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@161) (= ($generated@@159 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@161) ($generated@@159 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@170) (= (type $generated@@280) $generated@@170)) (= $generated@@278 ($generated@@240 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@159 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 19)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert ($generated@@252 $generated@@60))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@170)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@85 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@295) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@296) $generated@@170)) (= (type $generated@@297) $generated@@70)) ($generated@@143 $generated@@294 $generated@@295)) ($generated@@269 $generated@@296 $generated@@297 $generated@@294)) ($generated@@269 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@143 $generated@@294 $generated@@295) ($generated@@269 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@301) $generated@@70)) ($generated@@143 $generated@@298 $generated@@299)) ($generated@@85 $generated@@300 $generated@@301 $generated@@298)) ($generated@@85 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@143 $generated@@298 $generated@@299) ($generated@@85 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@303) $generated@@88)) (=> (and (and ($generated@@152 $generated@@302) (and (not (= $generated@@303 $generated@@148)) (= ($generated@@153 $generated@@303) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@151) $generated@@46 $generated@@302)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@151))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@87 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@90 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@87 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@92 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 20)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@92 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@92 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 21)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@87 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@348) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@346 $generated@@347 $generated@@348)) (and ($generated@@143 $generated@@347 $generated@@348) (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@73 (type $generated@@350))))
 (=> (and (and (= (type $generated@@349) $generated@@88) (= (type $generated@@350) ($generated@@72 $generated@@351))) (not ($generated@@252 $generated@@350))) (= ($generated@@94 ($generated@@92 $generated@@347 $generated@@349) $generated@@350) ($generated@@94 ($generated@@92 $generated@@348 $generated@@349) $generated@@350))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@348 $generated@@349) $generated@@350))
))))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@90 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@87 $generated@@353 $generated@@2)) (= ($generated@@176 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@92 $generated@@352 $generated@@354))) (<= ($generated ($generated@@92 $generated@@352 $generated@@354)) ($generated@@304 $generated@@352))))
 :pattern ( ($generated@@92 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@176 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@170) ($generated@@241 $generated@@358 $generated@@147)) (and (= ($generated@@289 ($generated@@355 $generated@@88 $generated@@358)) $generated@@358) ($generated@@154 ($generated@@355 $generated@@88 $generated@@358) $generated@@147)))
 :pattern ( ($generated@@241 $generated@@358 $generated@@147))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@170) ($generated@@241 $generated@@359 $generated@@237)) (and (= ($generated@@289 ($generated@@355 $generated@@88 $generated@@359)) $generated@@359) ($generated@@154 ($generated@@355 $generated@@88 $generated@@359) $generated@@237)))
 :pattern ( ($generated@@241 $generated@@359 $generated@@237))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@88) (= ($generated@@154 $generated@@360 $generated@@237)  (and ($generated@@154 $generated@@360 $generated@@147) (not (= $generated@@360 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@360 $generated@@237))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@314 (type $generated@@361))))
(let (($generated@@363 ($generated@@313 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@312 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@311 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@310 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@314 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@87 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@314 (type $generated@@368))))
(let (($generated@@370 ($generated@@313 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@312 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@311 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@92 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@332 (type $generated@@372))))
(let (($generated@@374 ($generated@@331 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@330 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@329 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@328 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@332 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@87 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@332 (type $generated@@379))))
(let (($generated@@381 ($generated@@331 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@330 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@329 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@92 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@384) $generated@@70)) (= ($generated@@154 $generated@@383 ($generated@@175 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@383 $generated@@385)))) ($generated@@241 $generated@@385 $generated@@384))
 :pattern ( ($generated@@92 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@154 $generated@@383 ($generated@@175 $generated@@384)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@387) $generated@@70)) (= (type $generated@@388) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@386 ($generated@@255 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@170) ($generated@@0 ($generated@@92 $generated@@386 $generated@@389))) ($generated@@269 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@92 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@85 $generated@@386 ($generated@@255 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@391) $generated@@70)) (= (type $generated@@392) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@390 ($generated@@260 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@170) ($generated@@0 ($generated@@92 $generated@@390 $generated@@393))) ($generated@@269 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@92 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@85 $generated@@390 ($generated@@260 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@92 ($generated@@305 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@92 ($generated@@305 $generated@@395) $generated@@394)))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@314 (type $generated@@399))))
(let (($generated@@401 ($generated@@313 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@87 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@403) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@92 ($generated@@310 $generated@@402) ($generated@@168 ($generated@@355 $generated@@161 $generated@@403)))) (= ($generated@@92 ($generated@@397 $generated@@402) ($generated@@168 ($generated@@355 $generated@@161 $generated@@403))) ($generated@@169 ($generated@@355 $generated@@161 $generated@@403))))))
 :pattern ( ($generated@@92 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@332 (type $generated@@407))))
(let (($generated@@409 ($generated@@331 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@87 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@411) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@410) ($generated@@168 ($generated@@355 $generated@@161 $generated@@411)))) (= ($generated@@92 ($generated@@405 $generated@@410) ($generated@@168 ($generated@@355 $generated@@161 $generated@@411))) ($generated@@169 ($generated@@355 $generated@@161 $generated@@411))))))
 :pattern ( ($generated@@92 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@313 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@312 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@92 ($generated@@365 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@92 ($generated@@310 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@92 ($generated@@397 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@412) $generated@@416))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@92 ($generated@@365 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@331 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@330 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@92 ($generated@@376 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@92 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@417) $generated@@421))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@92 ($generated@@376 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@425) $generated@@429))) (and ($generated@@269 ($generated@@92 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@269 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@85 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@70)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@433) $generated@@437))) (and ($generated@@269 ($generated@@92 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@269 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@85 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@439) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@438 $generated@@440))) (and ($generated@@143 $generated@@438 $generated@@439) ($generated@@143 $generated@@439 $generated@@440))) ($generated@@143 $generated@@438 $generated@@440))
 :pattern ( ($generated@@143 $generated@@438 $generated@@439) ($generated@@143 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@T) ) (! (= (type ($generated@@441 $generated@@442)) ($generated@@87 $generated@@442 $generated@@4))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@332 (type $generated@@443))))
(let (($generated@@445 ($generated@@331 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@330 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@329 $generated@@445 $generated@@444)) (= ($generated@@328 $generated@@443) ($generated@@441 $generated@@445))))))
 :pattern ( ($generated@@328 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@332 (type $generated@@446))))
(let (($generated@@448 ($generated@@331 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@330 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@329 $generated@@448 $generated@@447)) (= ($generated@@376 $generated@@446) ($generated@@441 $generated@@447))))))
 :pattern ( ($generated@@376 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@332 (type $generated@@449))))
(let (($generated@@451 ($generated@@331 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@330 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@329 $generated@@451 $generated@@450)) (= ($generated@@404 $generated@@449) ($generated@@441 $generated@@170))))))
 :pattern ( ($generated@@404 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@314 (type $generated@@452))))
(let (($generated@@454 ($generated@@313 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@312 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@311 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@170) (= (type $generated@@456) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@396 $generated@@452) ($generated@@289 ($generated@@240 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@396 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@332 (type $generated@@457))))
(let (($generated@@459 ($generated@@331 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@330 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@329 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@170) (= (type $generated@@461) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@404 $generated@@457) ($generated@@289 ($generated@@240 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@76)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@T) ) (!  (=> (and (= (type $generated@@464) $generated@@76) (= (type $generated@@465) $generated@@74)) (and (= ($generated@@462 ($generated@@248 $generated@@466 $generated@@464 $generated@@465)) $generated@@464) (= ($generated@@83 ($generated@@248 $generated@@466 $generated@@464 $generated@@465)) $generated@@465)))
 :pattern ( ($generated@@248 $generated@@466 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@170) ($generated@@241 $generated@@467 $generated@@46)) (and (= ($generated@@289 ($generated@@355 $generated@@2 $generated@@467)) $generated@@467) ($generated@@154 ($generated@@355 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@170) ($generated@@241 $generated@@468 $generated@@47)) (and (= ($generated@@289 ($generated@@355 $generated@@3 $generated@@468)) $generated@@468) ($generated@@154 ($generated@@355 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@170) ($generated@@241 $generated@@469 $generated@@44)) (and (= ($generated@@289 ($generated@@355 $generated@@4 $generated@@469)) $generated@@469) ($generated@@154 ($generated@@355 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 22))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@170) ($generated@@241 $generated@@471 $generated@@45)) (and (= ($generated@@289 ($generated@@355 $generated@@470 $generated@@471)) $generated@@471) ($generated@@154 ($generated@@355 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@241 ($generated@@289 $generated@@472) $generated@@473) ($generated@@154 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@241 ($generated@@289 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@90 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@87 $generated@@475 $generated@@2)) (<= 0 ($generated@@304 $generated@@474))))
 :pattern ( ($generated@@304 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@284 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@283 $generated@@477)) (<= 0 ($generated@@282 $generated@@476))))
 :pattern ( ($generated@@282 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@422 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@422 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@81 ($generated@@422 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@430 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@430 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@430 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@430 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@81 ($generated@@430 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (= ($generated@@275 ($generated@@240 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@240 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@160 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@160 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@160 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@160 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@170) (= (type $generated@@509) $generated@@170)) (= ($generated@@168 ($generated@@240 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@240 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@170) (= (type $generated@@511) $generated@@170)) (= ($generated@@169 ($generated@@240 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@240 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@284 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@283 $generated@@170)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@282 $generated@@518))) ($generated@@269 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@85 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@86 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@86 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@255 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@255 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@81 ($generated@@255 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@260 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@260 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@81 ($generated@@260 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@175 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@175 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@81 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@355 $generated@@541 ($generated@@289 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@289 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@154 $generated@@542 ($generated@@422 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@542) $generated@@545))) (and ($generated@@241 ($generated@@92 ($generated@@397 $generated@@542) $generated@@545) $generated@@544) ($generated@@241 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@542) $generated@@545))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@154 $generated@@542 ($generated@@422 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@154 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@546) $generated@@549))) (and ($generated@@241 ($generated@@92 ($generated@@405 $generated@@546) $generated@@549) $generated@@548) ($generated@@241 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@546) $generated@@549))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@154 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@170) (= (type $generated@@553) $generated@@170)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@240 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@240 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@170) (= (type $generated@@555) $generated@@170)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@240 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@240 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@170) (= (type $generated@@557) $generated@@70)) (= (type $generated@@558) $generated@@70)) ($generated@@241 $generated@@556 ($generated@@422 $generated@@557 $generated@@558))) (and (= ($generated@@289 ($generated@@355 ($generated@@312 $generated@@170 $generated@@170) $generated@@556)) $generated@@556) ($generated@@154 ($generated@@355 ($generated@@312 $generated@@170 $generated@@170) $generated@@556) ($generated@@422 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@241 $generated@@556 ($generated@@422 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@170) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) $generated@@70)) ($generated@@241 $generated@@559 ($generated@@430 $generated@@560 $generated@@561))) (and (= ($generated@@289 ($generated@@355 ($generated@@330 $generated@@170 $generated@@170) $generated@@559)) $generated@@559) ($generated@@154 ($generated@@355 ($generated@@330 $generated@@170 $generated@@170) $generated@@559) ($generated@@430 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@241 $generated@@559 ($generated@@430 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@70) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@170)) ($generated@@241 $generated@@564 ($generated@@160 $generated@@562 $generated@@563))) (and (= ($generated@@289 ($generated@@355 $generated@@161 $generated@@564)) $generated@@564) ($generated@@154 ($generated@@355 $generated@@161 $generated@@564) ($generated@@160 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@241 $generated@@564 ($generated@@160 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@92 ($generated@@441 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@92 ($generated@@441 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@161) (= ($generated@@550 ($generated@@289 $generated@@571)) ($generated@@551 $generated@@571)))
 :pattern ( ($generated@@550 ($generated@@289 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@170) ($generated@@241 $generated@@572 ($generated@@86 0))) (and (= ($generated@@289 ($generated@@355 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@241 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@170) (= (type $generated@@574) $generated@@70)) ($generated@@241 $generated@@573 ($generated@@255 $generated@@574))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@573) ($generated@@255 $generated@@574))))
 :pattern ( ($generated@@241 $generated@@573 ($generated@@255 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@241 $generated@@575 ($generated@@260 $generated@@576))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@260 $generated@@576))))
 :pattern ( ($generated@@241 $generated@@575 ($generated@@260 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@241 $generated@@577 ($generated@@175 $generated@@578))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@2) $generated@@577) ($generated@@175 $generated@@578))))
 :pattern ( ($generated@@241 $generated@@577 ($generated@@175 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@241 $generated@@579 ($generated@@512 $generated@@580))) (and (= ($generated@@289 ($generated@@355 ($generated@@283 $generated@@170) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@355 ($generated@@283 $generated@@170) $generated@@579) ($generated@@512 $generated@@580))))
 :pattern ( ($generated@@241 $generated@@579 ($generated@@512 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
 (=> (and (and (and (= (type $generated@@581) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@582) $generated@@88)) (= (type $generated@@583) ($generated@@72 $generated@@585))) ($generated@@152 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))) ($generated@@143 $generated@@581 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@237) $generated@@66))
(assert (= ($generated@@567 $generated@@237) $generated@@68))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@586 ($generated@@175 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@586 $generated@@589)))) ($generated@@269 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@92 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@85 $generated@@586 ($generated@@175 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@161) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@592) (and ($generated@@159 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@70) ($generated@@85 $generated@@590 ($generated@@160 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@160 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@269 ($generated@@168 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@269 ($generated@@168 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@161) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@596) (and ($generated@@159 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@70) ($generated@@85 $generated@@594 ($generated@@160 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@85 $generated@@594 ($generated@@160 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@269 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@269 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@170) (= (type $generated@@599) $generated@@170)) (= ($generated@@240 ($generated@@265 $generated@@598) ($generated@@265 $generated@@599)) ($generated@@265 ($generated@@240 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@240 ($generated@@265 $generated@@598) ($generated@@265 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@289 ($generated@@265 $generated@@600)) ($generated@@265 ($generated@@289 $generated@@600)))
 :pattern ( ($generated@@289 ($generated@@265 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@284 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@283 $generated@@602)) (= ($generated@@282 $generated@@601) 0)) (= $generated@@601 ($generated@@281 $generated@@602))))
 :pattern ( ($generated@@282 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@87 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@304 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@304 $generated@@603) ($generated ($generated@@92 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@304 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@608) $generated@@2)) ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@610) $generated@@3)) ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@612) $generated@@4)) ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@614) $generated@@470)) ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@616) $generated@@170)) ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@283 $generated@@170)) (= (type $generated@@618) $generated@@70)) (= ($generated@@154 $generated@@617 ($generated@@512 $generated@@618)) (forall (($generated@@619 Int) ) (!  (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@282 $generated@@617))) ($generated@@241 ($generated@@513 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@513 $generated@@617 $generated@@619))
))))
 :pattern ( ($generated@@154 $generated@@617 ($generated@@512 $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 Int) ) (!  (=> (= (type $generated@@621) ($generated@@283 $generated@@170)) (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@282 $generated@@621))) (< ($generated@@551 ($generated@@355 $generated@@161 ($generated@@513 $generated@@621 $generated@@622))) ($generated@@620 $generated@@621))))
 :pattern ( ($generated@@551 ($generated@@355 $generated@@161 ($generated@@513 $generated@@621 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@624) $generated@@70)) (= (type $generated@@625) $generated@@70)) ($generated@@154 $generated@@623 ($generated@@422 $generated@@624 $generated@@625))) (and (and ($generated@@154 ($generated@@310 $generated@@623) ($generated@@255 $generated@@624)) ($generated@@154 ($generated@@365 $generated@@623) ($generated@@255 $generated@@625))) ($generated@@154 ($generated@@396 $generated@@623) ($generated@@255 ($generated@@160 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@154 $generated@@623 ($generated@@422 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@154 $generated@@626 ($generated@@430 $generated@@627 $generated@@628))) (and (and ($generated@@154 ($generated@@328 $generated@@626) ($generated@@260 $generated@@627)) ($generated@@154 ($generated@@376 $generated@@626) ($generated@@260 $generated@@628))) ($generated@@154 ($generated@@404 $generated@@626) ($generated@@260 ($generated@@160 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@154 $generated@@626 ($generated@@430 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@2) ($generated@@154 $generated@@629 $generated@@46))
 :pattern ( ($generated@@154 $generated@@629 $generated@@46))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@3) ($generated@@154 $generated@@630 $generated@@47))
 :pattern ( ($generated@@154 $generated@@630 $generated@@47))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@4) ($generated@@154 $generated@@631 $generated@@44))
 :pattern ( ($generated@@154 $generated@@631 $generated@@44))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@470) ($generated@@154 $generated@@632 $generated@@45))
 :pattern ( ($generated@@154 $generated@@632 $generated@@45))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@170) ($generated@@154 $generated@@633 $generated@@48))
 :pattern ( ($generated@@154 $generated@@633 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 (T@U) Bool)
(declare-fun $generated@@640 () Bool)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(assert  (and (and (and (and (and (= (type $generated@@636) $generated@@88) (= (type $generated@@637) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@634) $generated@@88)) (= (type $generated@@638) ($generated@@183 $generated@@88 $generated@@4))) (= (type $generated@@641) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@643  (=> (and (and (and (and (and (and (and (and (not ($generated@@0 ($generated@@265 ($generated@@11 true)))) (not ($generated@@0 ($generated@@265 ($generated@@11 true))))) (not ($generated@@0 ($generated@@265 ($generated@@11 true))))) (not ($generated@@0 ($generated@@265 ($generated@@11 true))))) (not ($generated@@0 ($generated@@265 ($generated@@11 true))))) (not ($generated@@0 ($generated@@265 ($generated@@11 true))))) (not ($generated@@0 ($generated@@265 ($generated@@11 true))))) (not ($generated@@0 ($generated@@265 ($generated@@11 true))))) (= (ControlFlow 0 36) (- 0 35))) false)))
(let (($generated@@644  (=> ($generated@@0 ($generated@@265 ($generated@@11 true))) (and (=> (= (ControlFlow 0 32) (- 0 34)) true) (and (=> (= (ControlFlow 0 32) (- 0 33)) ($generated@@85 $generated@@634 $generated@@237 $generated@@635)) (=> ($generated@@85 $generated@@634 $generated@@237 $generated@@635) (=> (= (ControlFlow 0 32) (- 0 31)) (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 ($generated@@73 (type $generated@@646))))
 (=> (and (and (and (= (type $generated@@645) $generated@@88) (= (type $generated@@646) ($generated@@72 $generated@@647))) (not (= $generated@@645 $generated@@148))) (and (= $generated@@645 $generated@@634) (or (= $generated@@646 $generated@@151) (= $generated@@646 $generated@@60)))) (= ($generated@@94 ($generated@@92 $generated@@635 $generated@@645) $generated@@646) ($generated@@94 ($generated@@92 $generated@@635 $generated@@645) $generated@@646))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@635 $generated@@645) $generated@@646))
)))))))))
(let (($generated@@648  (=> ($generated@@0 ($generated@@265 ($generated@@11 true))) (and (=> (= (ControlFlow 0 28) (- 0 30)) true) (and (=> (= (ControlFlow 0 28) (- 0 29)) ($generated@@85 $generated@@634 $generated@@237 $generated@@635)) (=> ($generated@@85 $generated@@634 $generated@@237 $generated@@635) (=> (= (ControlFlow 0 28) (- 0 27)) (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@73 (type $generated@@650))))
 (=> (and (and (and (= (type $generated@@649) $generated@@88) (= (type $generated@@650) ($generated@@72 $generated@@651))) (not (= $generated@@649 $generated@@148))) (= $generated@@649 $generated@@634)) (= ($generated@@94 ($generated@@92 $generated@@635 $generated@@649) $generated@@650) ($generated@@94 ($generated@@92 $generated@@635 $generated@@649) $generated@@650))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@635 $generated@@649) $generated@@650))
)))))))))
(let (($generated@@652  (=> ($generated@@0 ($generated@@265 ($generated@@11 true))) (and (=> (= (ControlFlow 0 25) (- 0 26)) ($generated@@85 $generated@@636 $generated@@237 $generated@@635)) (=> ($generated@@85 $generated@@636 $generated@@237 $generated@@635) (=> (= (ControlFlow 0 25) (- 0 24)) (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@73 (type $generated@@654))))
 (=> (and (and (and (= (type $generated@@653) $generated@@88) (= (type $generated@@654) ($generated@@72 $generated@@655))) (not (= $generated@@653 $generated@@148))) (= $generated@@653 $generated@@636)) (= ($generated@@94 ($generated@@92 $generated@@635 $generated@@653) $generated@@654) ($generated@@94 ($generated@@92 $generated@@635 $generated@@653) $generated@@654))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@635 $generated@@653) $generated@@654))
))))))))
(let (($generated@@656  (=> ($generated@@0 ($generated@@265 ($generated@@11 true))) (and (=> (= (ControlFlow 0 19) (- 0 23)) true) (and (=> (= (ControlFlow 0 19) (- 0 22)) ($generated@@85 $generated@@634 $generated@@237 $generated@@637)) (=> ($generated@@85 $generated@@634 $generated@@237 $generated@@637) (and (=> (= (ControlFlow 0 19) (- 0 21)) ($generated@@85 $generated@@636 $generated@@237 $generated@@637)) (=> ($generated@@85 $generated@@636 $generated@@237 $generated@@637) (and (=> (= (ControlFlow 0 19) (- 0 20)) (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (! (let (($generated@@659 ($generated@@73 (type $generated@@658))))
 (=> (and (and (and (= (type $generated@@657) $generated@@88) (= (type $generated@@658) ($generated@@72 $generated@@659))) (not (= $generated@@657 $generated@@148))) (= $generated@@657 $generated@@634)) (= ($generated@@94 ($generated@@92 $generated@@635 $generated@@657) $generated@@658) ($generated@@94 ($generated@@92 $generated@@637 $generated@@657) $generated@@658))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@635 $generated@@657) $generated@@658))
))) (=> (= (ControlFlow 0 19) (- 0 18)) (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (! (let (($generated@@662 ($generated@@73 (type $generated@@661))))
 (=> (and (and (and (= (type $generated@@660) $generated@@88) (= (type $generated@@661) ($generated@@72 $generated@@662))) (not (= $generated@@660 $generated@@148))) (= $generated@@660 $generated@@636)) (= ($generated@@94 ($generated@@92 $generated@@635 $generated@@660) $generated@@661) ($generated@@94 ($generated@@92 $generated@@637 $generated@@660) $generated@@661))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@635 $generated@@660) $generated@@661))
))))))))))))
(let (($generated@@663  (=> ($generated@@0 ($generated@@265 ($generated@@11 true))) (and (=> (= (ControlFlow 0 13) (- 0 17)) ($generated@@85 $generated@@636 $generated@@237 $generated@@637)) (=> ($generated@@85 $generated@@636 $generated@@237 $generated@@637) (and (=> (= (ControlFlow 0 13) (- 0 16)) true) (and (=> (= (ControlFlow 0 13) (- 0 15)) ($generated@@85 $generated@@634 $generated@@237 $generated@@637)) (=> ($generated@@85 $generated@@634 $generated@@237 $generated@@637) (and (=> (= (ControlFlow 0 13) (- 0 14)) (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@73 (type $generated@@665))))
 (=> (and (and (and (= (type $generated@@664) $generated@@88) (= (type $generated@@665) ($generated@@72 $generated@@666))) (not (= $generated@@664 $generated@@148))) (= $generated@@664 $generated@@636)) (= ($generated@@94 ($generated@@92 $generated@@635 $generated@@664) $generated@@665) ($generated@@94 ($generated@@92 $generated@@637 $generated@@664) $generated@@665))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@635 $generated@@664) $generated@@665))
))) (=> (= (ControlFlow 0 13) (- 0 12)) (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 ($generated@@73 (type $generated@@668))))
 (=> (and (and (and (= (type $generated@@667) $generated@@88) (= (type $generated@@668) ($generated@@72 $generated@@669))) (not (= $generated@@667 $generated@@148))) (= $generated@@667 $generated@@634)) (= ($generated@@94 ($generated@@92 $generated@@635 $generated@@667) $generated@@668) ($generated@@94 ($generated@@92 $generated@@637 $generated@@667) $generated@@668))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@635 $generated@@667) $generated@@668))
))))))))))))
(let (($generated@@670  (=> ($generated@@0 ($generated@@265 ($generated@@11 true))) (and (=> (= (ControlFlow 0 9) (- 0 11)) true) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@85 $generated@@634 $generated@@237 $generated@@637)) (=> ($generated@@85 $generated@@634 $generated@@237 $generated@@637) (=> (= (ControlFlow 0 9) (- 0 8)) (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (! (let (($generated@@673 ($generated@@73 (type $generated@@672))))
 (=> (and (and (and (= (type $generated@@671) $generated@@88) (= (type $generated@@672) ($generated@@72 $generated@@673))) (not (= $generated@@671 $generated@@148))) (and (= $generated@@671 $generated@@634) (or (= $generated@@672 $generated@@151) (= $generated@@672 $generated@@60)))) (= ($generated@@94 ($generated@@92 $generated@@635 $generated@@671) $generated@@672) ($generated@@94 ($generated@@92 $generated@@637 $generated@@671) $generated@@672))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@635 $generated@@671) $generated@@672))
)))))))))
(let (($generated@@674  (=> ($generated@@0 ($generated@@265 ($generated@@11 true))) (and (=> (= (ControlFlow 0 5) (- 0 7)) true) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@85 $generated@@634 $generated@@237 $generated@@637)) (=> ($generated@@85 $generated@@634 $generated@@237 $generated@@637) (=> (= (ControlFlow 0 5) (- 0 4)) (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (! (let (($generated@@677 ($generated@@73 (type $generated@@676))))
 (=> (and (and (and (= (type $generated@@675) $generated@@88) (= (type $generated@@676) ($generated@@72 $generated@@677))) (not (= $generated@@675 $generated@@148))) (= $generated@@675 $generated@@634)) (= ($generated@@94 ($generated@@92 $generated@@635 $generated@@675) $generated@@676) ($generated@@94 ($generated@@92 $generated@@637 $generated@@675) $generated@@676))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@635 $generated@@675) $generated@@676))
)))))))))
(let (($generated@@678  (=> ($generated@@0 ($generated@@265 ($generated@@11 true))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@85 $generated@@636 $generated@@237 $generated@@637)) (=> ($generated@@85 $generated@@636 $generated@@237 $generated@@637) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (! (let (($generated@@681 ($generated@@73 (type $generated@@680))))
 (=> (and (and (and (= (type $generated@@679) $generated@@88) (= (type $generated@@680) ($generated@@72 $generated@@681))) (not (= $generated@@679 $generated@@148))) (= $generated@@679 $generated@@636)) (= ($generated@@94 ($generated@@92 $generated@@635 $generated@@679) $generated@@680) ($generated@@94 ($generated@@92 $generated@@637 $generated@@679) $generated@@680))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@635 $generated@@679) $generated@@680))
))))))))
(let (($generated@@682  (=> (= $generated@@638 ($generated@@182 $generated@@148 $generated@@637 $generated@@60 false)) (=> (and (not (= $generated@@634 $generated@@148)) (= ($generated@@153 $generated@@634) $generated@@147)) (=> (and (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@637 $generated@@634) $generated@@60))) (= $generated@@635 ($generated@@93 $generated@@637 $generated@@634 ($generated@@95 ($generated@@92 $generated@@637 $generated@@634) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@635) ($generated@@639 $generated@@635))) (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 37) 2) $generated@@678) (=> (= (ControlFlow 0 37) 5) $generated@@674)) (=> (= (ControlFlow 0 37) 9) $generated@@670)) (=> (= (ControlFlow 0 37) 13) $generated@@663)) (=> (= (ControlFlow 0 37) 19) $generated@@656)) (=> (= (ControlFlow 0 37) 25) $generated@@652)) (=> (= (ControlFlow 0 37) 28) $generated@@648)) (=> (= (ControlFlow 0 37) 32) $generated@@644)) (=> (= (ControlFlow 0 37) 36) $generated@@643)))))))
(let (($generated@@683  (=> (and (and (and ($generated@@152 $generated@@637) ($generated@@639 $generated@@637)) (and (not (= $generated@@636 $generated@@148)) (and ($generated@@154 $generated@@636 $generated@@237) ($generated@@85 $generated@@636 $generated@@237 $generated@@637)))) (and (and (=> $generated@@640 (and ($generated@@154 $generated@@641 $generated@@237) ($generated@@85 $generated@@641 $generated@@237 $generated@@637))) true) (and (= 1 $generated@@642) (= (ControlFlow 0 38) 37)))) $generated@@682)))
$generated@@683))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 10))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 13) (- 15))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 19) (- 22))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
