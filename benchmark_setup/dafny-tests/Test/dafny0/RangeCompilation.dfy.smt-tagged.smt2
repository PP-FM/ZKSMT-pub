(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 () Int)
(declare-fun $generated@@318 (Int) Bool)
(declare-fun $generated@@319 (Int) Bool)
(declare-fun $generated@@320 (Int Int) Int)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@430 () T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@473 (T@U Int) T@U)
(declare-fun $generated@@482 (T@U) Int)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (=> (<= 1 $generated@@317) (forall (($generated@@321 Int) ) (!  (=> (or ($generated@@319 $generated@@321) (and (not (= 1 $generated@@317)) (and (<= ($generated@@243 0) $generated@@321) (< $generated@@321 256)))) (= ($generated@@318 $generated@@321) (= ($generated@@320 $generated@@321 ($generated@@243 3)) ($generated@@243 2))))
 :pattern ( ($generated@@318 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@79 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@76 $generated@@323 $generated@@2)) (= ($generated@@151 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@81 $generated@@322 $generated@@324))) (<= ($generated ($generated@@81 $generated@@322 $generated@@324)) ($generated@@275 $generated@@322))))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@151 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(let (($generated@@327 ($generated@@284 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@283 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@282 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@281 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@285 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@285 (type $generated@@332))))
(let (($generated@@334 ($generated@@284 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@283 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@282 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(let (($generated@@338 ($generated@@302 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@301 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@300 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@299 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@303 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(let (($generated@@345 ($generated@@302 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@301 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@300 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@224 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@351) $generated@@64)) (= (type $generated@@352) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@350 ($generated@@233 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@145) ($generated@@0 ($generated@@81 $generated@@350 $generated@@353))) ($generated@@250 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@81 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@74 $generated@@350 ($generated@@233 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@238 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@145) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@250 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@238 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@359) $generated@@358)) 0))
 :pattern ( (let (($generated@@359 (type $generated@@358)))
($generated@@81 ($generated@@276 $generated@@359) $generated@@358)))
)))
(assert  (and (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@360 $generated@@363)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@360 $generated@@363))
)) (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@361 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@361 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@285 (type $generated@@366))))
(let (($generated@@368 ($generated@@284 (type $generated@@366))))
(= (type ($generated@@362 $generated@@366)) ($generated@@76 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@362 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@370) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370)))) (= ($generated@@81 ($generated@@362 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@370))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@303 (type $generated@@374))))
(let (($generated@@376 ($generated@@302 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378)))) (= ($generated@@81 ($generated@@372 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@284 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@283 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@302 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@301 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@64)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@392) $generated@@396))) (and ($generated@@250 ($generated@@81 ($generated@@362 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@250 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@400) $generated@@404))) (and ($generated@@250 ($generated@@81 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@250 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert  (=> (<= 1 $generated@@317) (forall (($generated@@405 Int) ) (!  (=> (or ($generated@@319 ($generated@@243 $generated@@405)) (and (not (= 1 $generated@@317)) (and (<= ($generated@@243 0) $generated@@405) (< $generated@@405 256)))) (= ($generated@@318 ($generated@@243 $generated@@405)) (= ($generated@@243 ($generated@@320 $generated@@405 ($generated@@243 3))) ($generated@@243 2))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@243 $generated@@405)))
))))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@76 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@299 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@299 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@340 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@340 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@303 (type $generated@@414))))
(let (($generated@@416 ($generated@@302 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@301 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@300 $generated@@416 $generated@@415)) (= ($generated@@371 $generated@@414) ($generated@@406 $generated@@145))))))
 :pattern ( ($generated@@371 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@285 (type $generated@@417))))
(let (($generated@@419 ($generated@@284 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@283 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@282 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@145) (= (type $generated@@421) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@360 $generated@@417) ($generated@@270 ($generated@@223 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@360 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@303 (type $generated@@422))))
(let (($generated@@424 ($generated@@302 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@301 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@300 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@145) (= (type $generated@@426) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@422) ($generated@@270 ($generated@@223 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@371 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@224 $generated@@427 $generated@@46)) (and (= ($generated@@270 ($generated@@361 $generated@@2 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@361 $generated@@2 $generated@@427) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@427 $generated@@46))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@224 $generated@@428 $generated@@47)) (and (= ($generated@@270 ($generated@@361 $generated@@3 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@361 $generated@@3 $generated@@428) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@428 $generated@@47))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@44)) (and (= ($generated@@270 ($generated@@361 $generated@@4 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@361 $generated@@4 $generated@@429) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@430) 20))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@45)) (and (= ($generated@@270 ($generated@@361 $generated@@430 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@361 $generated@@430 $generated@@431) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@45))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (= (type $generated@@433) $generated@@64) (= ($generated@@224 ($generated@@270 $generated@@432) $generated@@433) ($generated@@132 $generated@@432 $generated@@433)))
 :pattern ( ($generated@@224 ($generated@@270 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@79 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@76 $generated@@435 $generated@@2)) (<= 0 ($generated@@275 $generated@@434))))
 :pattern ( ($generated@@275 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@265 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@264 $generated@@437)) (<= 0 ($generated@@263 $generated@@436))))
 :pattern ( ($generated@@263 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@389 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@389 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@389 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@389 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@72 ($generated@@389 $generated@@446 $generated@@447)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@397 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@397 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@397 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@397 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@456 $generated@@457)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@458 $generated@@459)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@135 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@135 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@135 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@135 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@145) (= (type $generated@@471) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@223 $generated@@470 $generated@@471))
)))
(assert  (and (forall (($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@474))
)) (forall (($generated@@475 T@U) ($generated@@476 Int) ) (! (let (($generated@@477 ($generated@@265 (type $generated@@475))))
(= (type ($generated@@473 $generated@@475 $generated@@476)) $generated@@477))
 :pattern ( ($generated@@473 $generated@@475 $generated@@476))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@264 $generated@@145)) (= (type $generated@@479) $generated@@64)) (= (type $generated@@480) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@478 ($generated@@472 $generated@@479) $generated@@480) (forall (($generated@@481 Int) ) (!  (=> (and (<= 0 $generated@@481) (< $generated@@481 ($generated@@263 $generated@@478))) ($generated@@250 ($generated@@473 $generated@@478 $generated@@481) $generated@@479 $generated@@480))
 :pattern ( ($generated@@473 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@74 $generated@@478 ($generated@@472 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@483 Int) ) (! (= ($generated@@482 ($generated@@75 $generated@@483)) $generated@@483)
 :pattern ( ($generated@@75 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@233 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@233 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@487)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@238 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@238 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@491)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@150 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@150 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@495)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@472 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@472 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@472 $generated@@499)) $generated@@57))
 :pattern ( ($generated@@472 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(= ($generated@@361 $generated@@501 ($generated@@270 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@270 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@64)) (= ($generated@@132 $generated@@502 ($generated@@389 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@502) $generated@@505))) (and ($generated@@224 ($generated@@81 ($generated@@362 $generated@@502) $generated@@505) $generated@@504) ($generated@@224 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@502) $generated@@505))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@132 $generated@@502 ($generated@@389 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) (= ($generated@@132 $generated@@506 ($generated@@397 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@506) $generated@@509))) (and ($generated@@224 ($generated@@81 ($generated@@372 $generated@@506) $generated@@509) $generated@@508) ($generated@@224 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@506) $generated@@509))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@132 $generated@@506 ($generated@@397 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@145)) (< ($generated@@510 $generated@@512) ($generated@@511 ($generated@@223 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@223 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@145)) (< ($generated@@510 $generated@@515) ($generated@@511 ($generated@@223 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@223 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@224 $generated@@516 ($generated@@389 $generated@@517 $generated@@518))) (and (= ($generated@@270 ($generated@@361 ($generated@@283 $generated@@145 $generated@@145) $generated@@516)) $generated@@516) ($generated@@132 ($generated@@361 ($generated@@283 $generated@@145 $generated@@145) $generated@@516) ($generated@@389 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@224 $generated@@516 ($generated@@389 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) ($generated@@224 $generated@@519 ($generated@@397 $generated@@520 $generated@@521))) (and (= ($generated@@270 ($generated@@361 ($generated@@301 $generated@@145 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@361 ($generated@@301 $generated@@145 $generated@@145) $generated@@519) ($generated@@397 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@519 ($generated@@397 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@145)) ($generated@@224 $generated@@524 ($generated@@135 $generated@@522 $generated@@523))) (and (= ($generated@@270 ($generated@@361 $generated@@136 $generated@@524)) $generated@@524) ($generated@@132 ($generated@@361 $generated@@136 $generated@@524) ($generated@@135 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@524 ($generated@@135 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
 (not ($generated@@0 ($generated@@81 ($generated@@406 $generated@@526) $generated@@525))))
 :pattern ( (let (($generated@@526 (type $generated@@525)))
($generated@@81 ($generated@@406 $generated@@526) $generated@@525)))
)))
(assert (forall (($generated@@527 Int) ($generated@@528 Int) ) (! (= ($generated@@320 $generated@@527 $generated@@528) (mod $generated@@527 $generated@@528))
 :pattern ( ($generated@@320 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@135 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@136) (= ($generated@@510 ($generated@@270 $generated@@533)) ($generated@@511 $generated@@533)))
 :pattern ( ($generated@@510 ($generated@@270 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) ($generated@@224 $generated@@534 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@361 $generated@@2 $generated@@534)) $generated@@534) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@75 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@535 ($generated@@233 $generated@@536))) (and (= ($generated@@270 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@233 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) ($generated@@224 $generated@@537 ($generated@@238 $generated@@538))) (and (= ($generated@@270 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@238 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@238 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@150 $generated@@540))) (and (= ($generated@@270 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@539) ($generated@@150 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@150 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@472 $generated@@542))) (and (= ($generated@@270 ($generated@@361 ($generated@@264 $generated@@145) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@361 ($generated@@264 $generated@@145) $generated@@541) ($generated@@472 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@472 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@543 $generated@@546)))) ($generated@@250 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@81 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@549) (and ($generated@@134 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@64) ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@250 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@250 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)) ($generated@@245 ($generated@@223 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@243 $generated@@557))) ($generated@@245 ($generated@@270 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@243 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@558)) ($generated@@245 ($generated@@270 $generated@@558)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@558)))
)))
(assert  (=> (<= 1 $generated@@317) (forall (($generated@@559 Int) ) (!  (=> (or ($generated@@319 $generated@@559) (and (not (= 1 $generated@@317)) (and (<= ($generated@@243 0) $generated@@559) (< $generated@@559 256)))) true)
 :pattern ( ($generated@@318 $generated@@559))
))))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@265 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@264 $generated@@561)) (= ($generated@@263 $generated@@560) 0)) (= $generated@@560 ($generated@@262 $generated@@561))))
 :pattern ( ($generated@@263 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@76 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@275 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@275 $generated@@562) ($generated ($generated@@81 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@430)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@264 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@472 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@263 $generated@@576))) ($generated@@224 ($generated@@473 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@473 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@472 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@263 $generated@@580))) (< ($generated@@511 ($generated@@361 $generated@@136 ($generated@@473 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@511 ($generated@@361 $generated@@136 ($generated@@473 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@389 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@281 $generated@@582) ($generated@@233 $generated@@583)) ($generated@@132 ($generated@@329 $generated@@582) ($generated@@233 $generated@@584))) ($generated@@132 ($generated@@360 $generated@@582) ($generated@@233 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@389 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@397 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@299 $generated@@585) ($generated@@238 $generated@@586)) ($generated@@132 ($generated@@340 $generated@@585) ($generated@@238 $generated@@587))) ($generated@@132 ($generated@@371 $generated@@585) ($generated@@238 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@397 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@430) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@593) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@594) $generated@@77)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@600) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@602  (=> (and (= $generated@@593 ($generated@@211 $generated@@594 $generated@@595 $generated@@60 false)) (= $generated@@596 ($generated@@243 3))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (and (<= ($generated@@243 0) $generated@@596) (< $generated@@596 256))) (=> (and (<= ($generated@@243 0) $generated@@596) (< $generated@@596 256)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= ($generated@@243 3) 0))) (=> (not (= ($generated@@243 3) 0)) (=> (= $generated@@597 ($generated@@320 $generated@@598 ($generated@@243 3))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= ($generated@@243 0) $generated@@597) (< $generated@@597 256))) (=> (and (<= ($generated@@243 0) $generated@@597) (< $generated@@597 256)) (=> (and (= $generated@@599 ($generated@@243 2)) (= (ControlFlow 0 3) (- 0 2))) (and (<= ($generated@@243 0) $generated@@599) (< $generated@@599 256)))))))))))))
(let (($generated@@603 true))
(let (($generated@@604  (=> (= $generated@@600 ($generated@@156 $generated@@594 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@603) (=> (= (ControlFlow 0 7) 3) $generated@@602)))))
(let (($generated@@605  (=> (and ($generated@@249 $generated@@595) ($generated@@601 $generated@@595)) (=> (and (and (<= ($generated@@243 0) $generated@@598) (< $generated@@598 256)) (and (= 1 $generated@@317) (= (ControlFlow 0 8) 7))) $generated@@604))))
$generated@@605)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (Int) Bool)
(declare-fun $generated@@251 (Int) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (Int Int) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@252 Int) ) (!  (=> (or ($generated@@251 $generated@@252) (not (= 0 $generated@@249))) true)
 :pattern ( ($generated@@250 $generated@@252))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@145)) (= (type $generated@@258) $generated@@145)) (= (type $generated@@259) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@253 $generated@@259)) (= ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@136) (= ($generated@@134 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@134 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@145) (= (type $generated@@265) $generated@@145)) (= $generated@@263 ($generated@@223 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@134 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 17)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@145)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@74 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@76 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@79 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@76 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@81 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 18)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@151 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@151 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@285 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@289 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@307 (type $generated@@335))))
(let (($generated@@337 ($generated@@306 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@305 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@304 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@303 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@307 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@132 $generated@@346 ($generated@@150 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@224 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@132 $generated@@346 ($generated@@150 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@254 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@254 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@81 ($generated@@280 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@81 ($generated@@280 $generated@@358) $generated@@357)))
)))
(assert  (and (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@359 $generated@@362)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@362))
)) (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@360 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@360 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@289 (type $generated@@365))))
(let (($generated@@367 ($generated@@288 (type $generated@@365))))
(= (type ($generated@@361 $generated@@365)) ($generated@@76 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@361 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@369) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369)))) (= ($generated@@81 ($generated@@361 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@307 (type $generated@@373))))
(let (($generated@@375 ($generated@@306 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@371 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@288 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@287 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@306 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@305 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@64)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))) (and ($generated@@254 ($generated@@81 ($generated@@361 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@254 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))) (and ($generated@@254 ($generated@@81 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@254 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@76 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@307 (type $generated@@406))))
(let (($generated@@408 ($generated@@306 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@305 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@304 $generated@@408 $generated@@407)) (= ($generated@@303 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@303 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@307 (type $generated@@409))))
(let (($generated@@411 ($generated@@306 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@305 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@304 $generated@@411 $generated@@410)) (= ($generated@@339 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@339 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@307 (type $generated@@412))))
(let (($generated@@414 ($generated@@306 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@305 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@304 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@145))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@289 (type $generated@@415))))
(let (($generated@@417 ($generated@@288 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@287 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@286 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@415) ($generated@@274 ($generated@@223 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@359 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@307 (type $generated@@420))))
(let (($generated@@422 ($generated@@306 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@305 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@304 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@145) (= (type $generated@@424) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@420) ($generated@@274 ($generated@@223 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@224 $generated@@425 $generated@@46)) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@360 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@224 $generated@@426 $generated@@47)) (and (= ($generated@@274 ($generated@@360 $generated@@3 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@360 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@224 $generated@@427 $generated@@44)) (and (= ($generated@@274 ($generated@@360 $generated@@4 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@360 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@45)) (and (= ($generated@@274 ($generated@@360 $generated@@428 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@360 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@64) (= ($generated@@224 ($generated@@274 $generated@@430) $generated@@431) ($generated@@132 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@224 ($generated@@274 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@79 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@76 $generated@@433 $generated@@2)) (<= 0 ($generated@@279 $generated@@432))))
 :pattern ( ($generated@@279 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@269 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@268 $generated@@435)) (<= 0 ($generated@@267 $generated@@434))))
 :pattern ( ($generated@@267 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@72 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) (= ($generated@@260 ($generated@@223 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@135 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@135 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@135 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) (= (type $generated@@467) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@223 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@269 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@268 $generated@@145)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@267 $generated@@476))) ($generated@@254 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@75 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@75 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@238 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@238 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@150 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@150 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@360 $generated@@499 ($generated@@274 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@274 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))) (and ($generated@@224 ($generated@@81 ($generated@@361 $generated@@500) $generated@@503) $generated@@502) ($generated@@224 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))) (and ($generated@@224 ($generated@@81 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@224 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@223 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@223 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@145)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@223 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@223 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@274 ($generated@@360 ($generated@@287 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@360 ($generated@@287 $generated@@145 $generated@@145) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@274 ($generated@@360 ($generated@@305 $generated@@145 $generated@@145) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@360 ($generated@@305 $generated@@145 $generated@@145) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@145)) ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521))) (and (= ($generated@@274 ($generated@@360 $generated@@136 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@360 $generated@@136 $generated@@522) ($generated@@135 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@81 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@81 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@526 Int) ) (!  (=> (or ($generated@@251 $generated@@526) (not (= 0 $generated@@249))) (= ($generated@@250 $generated@@526) (= ($generated@@525 $generated@@526 ($generated@@243 5)) ($generated@@243 4))))
 :pattern ( ($generated@@250 $generated@@526))
))))
(assert (forall (($generated@@527 Int) ($generated@@528 Int) ) (! (= ($generated@@525 $generated@@527 $generated@@528) (mod $generated@@527 $generated@@528))
 :pattern ( ($generated@@525 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@135 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@136) (= ($generated@@508 ($generated@@274 $generated@@533)) ($generated@@509 $generated@@533)))
 :pattern ( ($generated@@508 ($generated@@274 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) ($generated@@224 $generated@@534 ($generated@@75 0))) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@534)) $generated@@534) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@75 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@535 ($generated@@233 $generated@@536))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@233 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) ($generated@@224 $generated@@537 ($generated@@238 $generated@@538))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@238 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@238 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@150 $generated@@540))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@539) ($generated@@150 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@150 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@470 $generated@@542))) (and (= ($generated@@274 ($generated@@360 ($generated@@268 $generated@@145) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@360 ($generated@@268 $generated@@145) $generated@@541) ($generated@@470 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@470 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@543 $generated@@546)))) ($generated@@254 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@81 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@549) (and ($generated@@134 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@64) ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@254 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@254 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@254 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@254 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)) ($generated@@245 ($generated@@223 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@243 $generated@@557))) ($generated@@245 ($generated@@274 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@243 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@274 ($generated@@245 $generated@@558)) ($generated@@245 ($generated@@274 $generated@@558)))
 :pattern ( ($generated@@274 ($generated@@245 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@269 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@268 $generated@@560)) (= ($generated@@267 $generated@@559) 0)) (= $generated@@559 ($generated@@266 $generated@@560))))
 :pattern ( ($generated@@267 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@279 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@279 $generated@@561) ($generated ($generated@@81 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@279 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@565 Int) ) (!  (=> (or ($generated@@251 ($generated@@243 $generated@@565)) (not (= 0 $generated@@249))) (= ($generated@@250 ($generated@@243 $generated@@565)) (= ($generated@@243 ($generated@@525 $generated@@565 ($generated@@243 5))) ($generated@@243 4))))
 :weight 3
 :pattern ( ($generated@@250 ($generated@@243 $generated@@565)))
))))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@428)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@268 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@470 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@267 $generated@@576))) ($generated@@224 ($generated@@471 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@471 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@470 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@268 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@267 $generated@@580))) (< ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@388 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@285 $generated@@582) ($generated@@233 $generated@@583)) ($generated@@132 ($generated@@328 $generated@@582) ($generated@@233 $generated@@584))) ($generated@@132 ($generated@@359 $generated@@582) ($generated@@233 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@388 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@396 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@303 $generated@@585) ($generated@@238 $generated@@586)) ($generated@@132 ($generated@@339 $generated@@585) ($generated@@238 $generated@@587))) ($generated@@132 ($generated@@370 $generated@@585) ($generated@@238 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@396 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@428) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@593) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@594) $generated@@77)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@596) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@598  (=> (and (= $generated@@593 ($generated@@211 $generated@@594 $generated@@595 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@243 5) 0)))))
(let (($generated@@599 true))
(let (($generated@@600  (=> (= $generated@@596 ($generated@@156 $generated@@594 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@599) (=> (= (ControlFlow 0 4) 3) $generated@@598)))))
(let (($generated@@601  (=> (and (and ($generated@@253 $generated@@595) ($generated@@597 $generated@@595)) (and (= 0 $generated@@249) (= (ControlFlow 0 5) 4))) $generated@@600)))
$generated@@601)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 () Int)
(declare-fun $generated@@270 (Int) Bool)
(declare-fun $generated@@271 (Int) Bool)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@349 (Int) Bool)
(declare-fun $generated@@350 (Int) Bool)
(declare-fun $generated@@351 (Int Int) Int)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@471 () T@T)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@628 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert (= (type $generated@@144) $generated@@72))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@145 $generated@@144 $generated@@146))
 :pattern ( ($generated@@82 $generated@@145 $generated@@144 $generated@@146))
)))
(assert  (and (= (type $generated@@147) $generated@@72) (= (type $generated@@148) $generated@@85)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@85) (= (type $generated@@150) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@149 $generated@@147 $generated@@150))
)))
(assert (= (type $generated@@151) $generated@@72))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@85) (= (type $generated@@153) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@152 $generated@@151 $generated@@153)  (or (= $generated@@152 $generated@@148) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@152 $generated@@151 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@154 $generated@@155 ($generated@@83 0)))
 :pattern ( ($generated@@154 $generated@@155 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@158) 14) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@159 $generated@@160)) $generated@@72)
 :pattern ( ($generated@@157 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@72) (= (type $generated@@162) $generated@@72)) (= (type $generated@@163) $generated@@158)) ($generated@@154 $generated@@163 ($generated@@157 $generated@@161 $generated@@162))) ($generated@@156 $generated@@163))
 :pattern ( ($generated@@156 $generated@@163) ($generated@@154 $generated@@163 ($generated@@157 $generated@@161 $generated@@162)))
)))
(assert  (and (and (= ($generated@@1 $generated@@167) 15) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@167)
 :pattern ( ($generated@@166 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@158) (= (type $generated@@171) $generated@@158)) true) (= ($generated@@164 $generated@@170 $generated@@171)  (and (= ($generated@@165 $generated@@170) ($generated@@165 $generated@@171)) (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)))))
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@72)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@84 $generated@@167 $generated@@2)) (= (type $generated@@176) $generated@@72)) ($generated@@154 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@154 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@72)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@85) (= ($generated@@154 $generated@@179 $generated@@147)  (or (= $generated@@179 $generated@@148) (= ($generated@@177 $generated@@179) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@179 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@85) (= ($generated@@154 $generated@@180 $generated@@151)  (or (= $generated@@180 $generated@@148) (= ($generated@@177 $generated@@180) $generated@@151))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@151))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@85 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@75 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@85) (= (type $generated@@231) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@232) ($generated@@74 $generated@@4))) (= (type $generated@@234) $generated@@85)) (= (type $generated@@235) ($generated@@74 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@237) $generated@@72))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@85) (= (type $generated@@239) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@238 $generated@@237 $generated@@239) ($generated@@82 $generated@@238 $generated@@147 $generated@@239)))
 :pattern ( ($generated@@82 $generated@@238 $generated@@237 $generated@@239))
)))
(assert (= (type $generated@@240) $generated@@72))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@85) (= (type $generated@@242) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@241 $generated@@240 $generated@@242) ($generated@@82 $generated@@241 $generated@@151 $generated@@242)))
 :pattern ( ($generated@@82 $generated@@241 $generated@@240 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@158)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@72) (= (type $generated@@248) $generated@@72)) (= (type $generated@@249) $generated@@167)) (= (type $generated@@250) $generated@@167)) (= ($generated@@154 ($generated@@243 $generated@@249 $generated@@250) ($generated@@157 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@154 ($generated@@243 $generated@@249 $generated@@250) ($generated@@157 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@158) (= (type $generated@@252) $generated@@158)) (= ($generated@@164 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@164 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@72)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@84 $generated@@167 $generated@@4)) (= (type $generated@@256) $generated@@72)) (= ($generated@@154 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@167) ($generated@@0 ($generated@@89 $generated@@255 $generated@@257))) ($generated@@244 $generated@@257 $generated@@256))
 :pattern ( ($generated@@89 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@154 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@72)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@84 $generated@@167 $generated@@4)) (= (type $generated@@261) $generated@@72)) (= ($generated@@154 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@167) ($generated@@0 ($generated@@89 $generated@@260 $generated@@262))) ($generated@@244 $generated@@262 $generated@@261))
 :pattern ( ($generated@@89 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@154 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert  (=> (<= 0 $generated@@269) (forall (($generated@@272 Int) ) (!  (=> (or ($generated@@271 $generated@@272) (not (= 0 $generated@@269))) true)
 :pattern ( ($generated@@270 $generated@@272))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@72) (= (type $generated@@276) $generated@@72)) (= (type $generated@@277) $generated@@167)) (= (type $generated@@278) $generated@@167)) (= (type $generated@@279) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@273 $generated@@279)) (= ($generated@@82 ($generated@@243 $generated@@277 $generated@@278) ($generated@@157 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@82 ($generated@@243 $generated@@277 $generated@@278) ($generated@@157 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@76)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@158) (= ($generated@@156 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@156 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@158) ($generated@@156 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@167) (= (type $generated@@285) $generated@@167)) (= $generated@@283 ($generated@@243 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@156 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@167)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@72) (= (type $generated@@298) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@274 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@82 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@274 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@300) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@301) $generated@@167)) (= (type $generated@@302) $generated@@72)) ($generated@@140 $generated@@299 $generated@@300)) ($generated@@274 $generated@@301 $generated@@302 $generated@@299)) ($generated@@274 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@140 $generated@@299 $generated@@300) ($generated@@274 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@303) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@304) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@306) $generated@@72)) ($generated@@140 $generated@@303 $generated@@304)) ($generated@@82 $generated@@305 $generated@@306 $generated@@303)) ($generated@@82 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@140 $generated@@303 $generated@@304) ($generated@@82 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@309 T@T) ) (! (= (type ($generated@@308 $generated@@309)) ($generated@@84 $generated@@309 $generated@@2))
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@87 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@84 $generated@@311 $generated@@2)) (and (= (= ($generated@@307 $generated@@310) 0) (= $generated@@310 ($generated@@308 $generated@@311))) (=> (not (= ($generated@@307 $generated@@310) 0)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@311) (< 0 ($generated ($generated@@89 $generated@@310 $generated@@312))))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@84 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@89 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@89 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@84 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@89 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@89 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@352 Int) ) (!  (=> (or ($generated@@350 $generated@@352) (and (not (= 1 $generated@@269)) (and (<= ($generated@@263 0) $generated@@352) (< $generated@@352 256)))) (= ($generated@@349 $generated@@352) (= ($generated@@351 $generated@@352 ($generated@@263 3)) ($generated@@263 2))))
 :pattern ( ($generated@@349 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@87 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@84 $generated@@354 $generated@@2)) (= ($generated@@173 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@89 $generated@@353 $generated@@355))) (<= ($generated ($generated@@89 $generated@@353 $generated@@355)) ($generated@@307 $generated@@353))))
 :pattern ( ($generated@@89 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@173 $generated@@353))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@167) ($generated@@244 $generated@@359 $generated@@144)) (and (= ($generated@@294 ($generated@@356 $generated@@2 $generated@@359)) $generated@@359) ($generated@@154 ($generated@@356 $generated@@2 $generated@@359) $generated@@144)))
 :pattern ( ($generated@@244 $generated@@359 $generated@@144))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@167) ($generated@@244 $generated@@360 $generated@@147)) (and (= ($generated@@294 ($generated@@356 $generated@@85 $generated@@360)) $generated@@360) ($generated@@154 ($generated@@356 $generated@@85 $generated@@360) $generated@@147)))
 :pattern ( ($generated@@244 $generated@@360 $generated@@147))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@167) ($generated@@244 $generated@@361 $generated@@237)) (and (= ($generated@@294 ($generated@@356 $generated@@85 $generated@@361)) $generated@@361) ($generated@@154 ($generated@@356 $generated@@85 $generated@@361) $generated@@237)))
 :pattern ( ($generated@@244 $generated@@361 $generated@@237))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@167) ($generated@@244 $generated@@362 $generated@@240)) (and (= ($generated@@294 ($generated@@356 $generated@@85 $generated@@362)) $generated@@362) ($generated@@154 ($generated@@356 $generated@@85 $generated@@362) $generated@@240)))
 :pattern ( ($generated@@244 $generated@@362 $generated@@240))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@167) ($generated@@244 $generated@@363 $generated@@151)) (and (= ($generated@@294 ($generated@@356 $generated@@85 $generated@@363)) $generated@@363) ($generated@@154 ($generated@@356 $generated@@85 $generated@@363) $generated@@151)))
 :pattern ( ($generated@@244 $generated@@363 $generated@@151))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@85) (= ($generated@@154 $generated@@364 $generated@@237)  (and ($generated@@154 $generated@@364 $generated@@147) (not (= $generated@@364 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@364 $generated@@237))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@154 $generated@@365 $generated@@240)  (and ($generated@@154 $generated@@365 $generated@@151) (not (= $generated@@365 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@365 $generated@@240))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@317 (type $generated@@366))))
(let (($generated@@368 ($generated@@316 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@315 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@314 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@313 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@317 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@84 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@317 (type $generated@@373))))
(let (($generated@@375 ($generated@@316 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@315 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@314 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@89 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@335 (type $generated@@377))))
(let (($generated@@379 ($generated@@334 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@333 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@332 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@89 ($generated@@331 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@331 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@335 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@84 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@335 (type $generated@@384))))
(let (($generated@@386 ($generated@@334 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@333 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@332 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@89 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@84 $generated@@167 $generated@@2)) (= (type $generated@@389) $generated@@72)) (= ($generated@@154 $generated@@388 ($generated@@172 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@167) (< 0 ($generated ($generated@@89 $generated@@388 $generated@@390)))) ($generated@@244 $generated@@390 $generated@@389))
 :pattern ( ($generated@@89 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@154 $generated@@388 ($generated@@172 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@84 $generated@@167 $generated@@4)) (= (type $generated@@392) $generated@@72)) (= (type $generated@@393) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@391 ($generated@@253 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@167) ($generated@@0 ($generated@@89 $generated@@391 $generated@@394))) ($generated@@274 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@89 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@82 $generated@@391 ($generated@@253 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@84 $generated@@167 $generated@@4)) (= (type $generated@@396) $generated@@72)) (= (type $generated@@397) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@395 ($generated@@258 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@167) ($generated@@0 ($generated@@89 $generated@@395 $generated@@398))) ($generated@@274 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@89 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@82 $generated@@395 ($generated@@258 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@89 ($generated@@308 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@89 ($generated@@308 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@84 $generated@@167 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@317 (type $generated@@404))))
(let (($generated@@406 ($generated@@316 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@84 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@315 $generated@@167 $generated@@167)) (= (type $generated@@408) $generated@@167)) (= ($generated@@0 ($generated@@89 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@89 ($generated@@313 $generated@@407) ($generated@@165 ($generated@@356 $generated@@158 $generated@@408)))) (= ($generated@@89 ($generated@@402 $generated@@407) ($generated@@165 ($generated@@356 $generated@@158 $generated@@408))) ($generated@@166 ($generated@@356 $generated@@158 $generated@@408))))))
 :pattern ( ($generated@@89 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@84 $generated@@167 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@335 (type $generated@@412))))
(let (($generated@@414 ($generated@@334 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@84 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@333 $generated@@167 $generated@@167)) (= (type $generated@@416) $generated@@167)) (= ($generated@@0 ($generated@@89 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@89 ($generated@@331 $generated@@415) ($generated@@165 ($generated@@356 $generated@@158 $generated@@416)))) (= ($generated@@89 ($generated@@410 $generated@@415) ($generated@@165 ($generated@@356 $generated@@158 $generated@@416))) ($generated@@166 ($generated@@356 $generated@@158 $generated@@416))))))
 :pattern ( ($generated@@89 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@316 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@315 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@89 ($generated@@370 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@89 ($generated@@313 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@89 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@417) $generated@@421))
 :pattern ( ($generated@@89 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@89 ($generated@@370 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@334 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@333 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@89 ($generated@@381 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@89 ($generated@@331 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@89 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@89 ($generated@@331 $generated@@422) $generated@@426))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@89 ($generated@@381 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@72)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@315 $generated@@167 $generated@@167)) (= (type $generated@@431) $generated@@72)) (= (type $generated@@432) $generated@@72)) (= (type $generated@@433) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@167) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@89 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@89 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@82 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@72)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@333 $generated@@167 $generated@@167)) (= (type $generated@@439) $generated@@72)) (= (type $generated@@440) $generated@@72)) (= (type $generated@@441) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@167) ($generated@@0 ($generated@@89 ($generated@@331 $generated@@438) $generated@@442))) (and ($generated@@274 ($generated@@89 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@274 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@89 ($generated@@331 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@82 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@443 Int) ) (!  (=> (or ($generated@@350 ($generated@@263 $generated@@443)) (and (not (= 1 $generated@@269)) (and (<= ($generated@@263 0) $generated@@443) (< $generated@@443 256)))) (= ($generated@@349 ($generated@@263 $generated@@443)) (= ($generated@@263 ($generated@@351 $generated@@443 ($generated@@263 3))) ($generated@@263 2))))
 :weight 3
 :pattern ( ($generated@@349 ($generated@@263 $generated@@443)))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@445) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@446) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@444 $generated@@446))) (and ($generated@@140 $generated@@444 $generated@@445) ($generated@@140 $generated@@445 $generated@@446))) ($generated@@140 $generated@@444 $generated@@446))
 :pattern ( ($generated@@140 $generated@@444 $generated@@445) ($generated@@140 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@84 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@335 (type $generated@@449))))
(let (($generated@@451 ($generated@@334 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@333 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@332 $generated@@451 $generated@@450)) (= ($generated@@331 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@331 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@335 (type $generated@@452))))
(let (($generated@@454 ($generated@@334 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@333 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@332 $generated@@454 $generated@@453)) (= ($generated@@381 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@381 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@335 (type $generated@@455))))
(let (($generated@@457 ($generated@@334 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@333 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@332 $generated@@457 $generated@@456)) (= ($generated@@409 $generated@@455) ($generated@@447 $generated@@167))))))
 :pattern ( ($generated@@409 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@317 (type $generated@@458))))
(let (($generated@@460 ($generated@@316 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@315 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@314 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@167) (= (type $generated@@462) $generated@@167)) ($generated@@0 ($generated@@89 ($generated@@401 $generated@@458) ($generated@@294 ($generated@@243 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@401 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@335 (type $generated@@463))))
(let (($generated@@465 ($generated@@334 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@333 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@332 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@167) (= (type $generated@@467) $generated@@167)) ($generated@@0 ($generated@@89 ($generated@@409 $generated@@463) ($generated@@294 ($generated@@243 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@409 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@167) ($generated@@244 $generated@@468 $generated@@46)) (and (= ($generated@@294 ($generated@@356 $generated@@2 $generated@@468)) $generated@@468) ($generated@@154 ($generated@@356 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@167) ($generated@@244 $generated@@469 $generated@@47)) (and (= ($generated@@294 ($generated@@356 $generated@@3 $generated@@469)) $generated@@469) ($generated@@154 ($generated@@356 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@167) ($generated@@244 $generated@@470 $generated@@44)) (and (= ($generated@@294 ($generated@@356 $generated@@4 $generated@@470)) $generated@@470) ($generated@@154 ($generated@@356 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@470 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@471) 20))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@167) ($generated@@244 $generated@@472 $generated@@45)) (and (= ($generated@@294 ($generated@@356 $generated@@471 $generated@@472)) $generated@@472) ($generated@@154 ($generated@@356 $generated@@471 $generated@@472) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@472 $generated@@45))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@72) (= ($generated@@244 ($generated@@294 $generated@@473) $generated@@474) ($generated@@154 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@244 ($generated@@294 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@87 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@84 $generated@@476 $generated@@2)) (<= 0 ($generated@@307 $generated@@475))))
 :pattern ( ($generated@@307 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@289 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@288 $generated@@478)) (<= 0 ($generated@@287 $generated@@477))))
 :pattern ( ($generated@@287 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@72)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@72) (= (type $generated@@482) $generated@@72)) (= ($generated@@479 ($generated@@427 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@427 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@72)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@72) (= (type $generated@@486) $generated@@72)) (= ($generated@@483 ($generated@@427 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@427 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@72) (= (type $generated@@488) $generated@@72)) (= ($generated@@80 ($generated@@427 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@72)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@72) (= (type $generated@@492) $generated@@72)) (= ($generated@@489 ($generated@@435 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@435 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@72)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@72) (= (type $generated@@496) $generated@@72)) (= ($generated@@493 ($generated@@435 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@435 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@72) (= (type $generated@@498) $generated@@72)) (= ($generated@@80 ($generated@@435 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@167) (= (type $generated@@500) $generated@@167)) (= ($generated@@280 ($generated@@243 $generated@@499 $generated@@500)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@72)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@72) (= (type $generated@@504) $generated@@72)) (= ($generated@@501 ($generated@@157 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@157 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@72)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@72) (= (type $generated@@508) $generated@@72)) (= ($generated@@505 ($generated@@157 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@157 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@167) (= (type $generated@@510) $generated@@167)) (= ($generated@@165 ($generated@@243 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@243 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@167) (= (type $generated@@512) $generated@@167)) (= ($generated@@166 ($generated@@243 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@243 $generated@@511 $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@72)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@289 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@288 $generated@@167)) (= (type $generated@@520) $generated@@72)) (= (type $generated@@521) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@287 $generated@@519))) ($generated@@274 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@82 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@83 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@83 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@525 ($generated@@253 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@253 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@72) (= ($generated@@80 ($generated@@253 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@72)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@529 ($generated@@258 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@258 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@72) (= ($generated@@80 ($generated@@258 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@72)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@533 ($generated@@172 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@172 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@72) (= ($generated@@80 ($generated@@172 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@72)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@72) (= ($generated@@80 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
(= ($generated@@356 $generated@@542 ($generated@@294 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@294 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@315 $generated@@167 $generated@@167)) (= (type $generated@@544) $generated@@72)) (= (type $generated@@545) $generated@@72)) (= ($generated@@154 $generated@@543 ($generated@@427 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@167) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@543) $generated@@546))) (and ($generated@@244 ($generated@@89 ($generated@@402 $generated@@543) $generated@@546) $generated@@545) ($generated@@244 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@89 ($generated@@402 $generated@@543) $generated@@546))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@154 $generated@@543 ($generated@@427 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@333 $generated@@167 $generated@@167)) (= (type $generated@@548) $generated@@72)) (= (type $generated@@549) $generated@@72)) (= ($generated@@154 $generated@@547 ($generated@@435 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@167) ($generated@@0 ($generated@@89 ($generated@@331 $generated@@547) $generated@@550))) (and ($generated@@244 ($generated@@89 ($generated@@410 $generated@@547) $generated@@550) $generated@@549) ($generated@@244 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@547) $generated@@550))
 :pattern ( ($generated@@89 ($generated@@331 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@154 $generated@@547 ($generated@@435 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@167) (= (type $generated@@554) $generated@@167)) (< ($generated@@551 $generated@@553) ($generated@@552 ($generated@@243 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@243 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@167) (= (type $generated@@556) $generated@@167)) (< ($generated@@551 $generated@@556) ($generated@@552 ($generated@@243 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@243 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@167) (= (type $generated@@558) $generated@@72)) (= (type $generated@@559) $generated@@72)) ($generated@@244 $generated@@557 ($generated@@427 $generated@@558 $generated@@559))) (and (= ($generated@@294 ($generated@@356 ($generated@@315 $generated@@167 $generated@@167) $generated@@557)) $generated@@557) ($generated@@154 ($generated@@356 ($generated@@315 $generated@@167 $generated@@167) $generated@@557) ($generated@@427 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@244 $generated@@557 ($generated@@427 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@167) (= (type $generated@@561) $generated@@72)) (= (type $generated@@562) $generated@@72)) ($generated@@244 $generated@@560 ($generated@@435 $generated@@561 $generated@@562))) (and (= ($generated@@294 ($generated@@356 ($generated@@333 $generated@@167 $generated@@167) $generated@@560)) $generated@@560) ($generated@@154 ($generated@@356 ($generated@@333 $generated@@167 $generated@@167) $generated@@560) ($generated@@435 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@244 $generated@@560 ($generated@@435 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@72) (= (type $generated@@564) $generated@@72)) (= (type $generated@@565) $generated@@167)) ($generated@@244 $generated@@565 ($generated@@157 $generated@@563 $generated@@564))) (and (= ($generated@@294 ($generated@@356 $generated@@158 $generated@@565)) $generated@@565) ($generated@@154 ($generated@@356 $generated@@158 $generated@@565) ($generated@@157 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@244 $generated@@565 ($generated@@157 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@89 ($generated@@447 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@89 ($generated@@447 $generated@@567) $generated@@566)))
)))
(assert  (=> (<= 0 $generated@@269) (forall (($generated@@568 Int) ) (!  (=> (or ($generated@@271 $generated@@568) (not (= 0 $generated@@269))) (= ($generated@@270 $generated@@568) (= ($generated@@351 $generated@@568 ($generated@@263 5)) ($generated@@263 4))))
 :pattern ( ($generated@@270 $generated@@568))
))))
(assert (forall (($generated@@569 Int) ($generated@@570 Int) ) (! (= ($generated@@351 $generated@@569 $generated@@570) (mod $generated@@569 $generated@@570))
 :pattern ( ($generated@@351 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@77)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@72) (= (type $generated@@574) $generated@@72)) (and (= ($generated@@80 ($generated@@157 $generated@@573 $generated@@574)) $generated@@62) (= ($generated@@571 ($generated@@157 $generated@@573 $generated@@574)) $generated@@68)))
 :pattern ( ($generated@@157 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@158) (= ($generated@@551 ($generated@@294 $generated@@575)) ($generated@@552 $generated@@575)))
 :pattern ( ($generated@@551 ($generated@@294 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@167) ($generated@@244 $generated@@576 ($generated@@83 0))) (and (= ($generated@@294 ($generated@@356 $generated@@2 $generated@@576)) $generated@@576) ($generated@@154 ($generated@@356 ($generated@@84 $generated@@167 $generated@@4) $generated@@576) ($generated@@83 0))))
 :pattern ( ($generated@@244 $generated@@576 ($generated@@83 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@167) (= (type $generated@@578) $generated@@72)) ($generated@@244 $generated@@577 ($generated@@253 $generated@@578))) (and (= ($generated@@294 ($generated@@356 ($generated@@84 $generated@@167 $generated@@4) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@356 ($generated@@84 $generated@@167 $generated@@4) $generated@@577) ($generated@@253 $generated@@578))))
 :pattern ( ($generated@@244 $generated@@577 ($generated@@253 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@167) (= (type $generated@@580) $generated@@72)) ($generated@@244 $generated@@579 ($generated@@258 $generated@@580))) (and (= ($generated@@294 ($generated@@356 ($generated@@84 $generated@@167 $generated@@4) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@356 ($generated@@84 $generated@@167 $generated@@4) $generated@@579) ($generated@@258 $generated@@580))))
 :pattern ( ($generated@@244 $generated@@579 ($generated@@258 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@167) (= (type $generated@@582) $generated@@72)) ($generated@@244 $generated@@581 ($generated@@172 $generated@@582))) (and (= ($generated@@294 ($generated@@356 ($generated@@84 $generated@@167 $generated@@2) $generated@@581)) $generated@@581) ($generated@@154 ($generated@@356 ($generated@@84 $generated@@167 $generated@@2) $generated@@581) ($generated@@172 $generated@@582))))
 :pattern ( ($generated@@244 $generated@@581 ($generated@@172 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@167) (= (type $generated@@584) $generated@@72)) ($generated@@244 $generated@@583 ($generated@@513 $generated@@584))) (and (= ($generated@@294 ($generated@@356 ($generated@@288 $generated@@167) $generated@@583)) $generated@@583) ($generated@@154 ($generated@@356 ($generated@@288 $generated@@167) $generated@@583) ($generated@@513 $generated@@584))))
 :pattern ( ($generated@@244 $generated@@583 ($generated@@513 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
 (=> (and (and (and (= (type $generated@@585) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@586) $generated@@85)) (= (type $generated@@587) ($generated@@74 $generated@@589))) ($generated@@273 ($generated@@90 $generated@@585 $generated@@586 ($generated@@92 ($generated@@89 $generated@@585 $generated@@586) $generated@@587 $generated@@588)))) ($generated@@140 $generated@@585 ($generated@@90 $generated@@585 $generated@@586 ($generated@@92 ($generated@@89 $generated@@585 $generated@@586) $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@90 $generated@@585 $generated@@586 ($generated@@92 ($generated@@89 $generated@@585 $generated@@586) $generated@@587 $generated@@588)))
)))
(assert (= ($generated@@80 $generated@@144) $generated@@63))
(assert (= ($generated@@571 $generated@@144) $generated@@69))
(assert (= ($generated@@80 $generated@@147) $generated@@64))
(assert (= ($generated@@571 $generated@@147) $generated@@70))
(assert (= ($generated@@80 $generated@@237) $generated@@65))
(assert (= ($generated@@571 $generated@@237) $generated@@70))
(assert (= ($generated@@80 $generated@@240) $generated@@66))
(assert (= ($generated@@571 $generated@@240) $generated@@71))
(assert (= ($generated@@80 $generated@@151) $generated@@67))
(assert (= ($generated@@571 $generated@@151) $generated@@71))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@84 $generated@@167 $generated@@2)) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@590 ($generated@@172 $generated@@591) $generated@@592) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@167) (< 0 ($generated ($generated@@89 $generated@@590 $generated@@593)))) ($generated@@274 $generated@@593 $generated@@591 $generated@@592))
 :pattern ( ($generated@@89 $generated@@590 $generated@@593))
))))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@172 $generated@@591) $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@158) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@273 $generated@@596) (and ($generated@@156 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@157 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@157 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@274 ($generated@@165 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@274 ($generated@@165 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@158) (= (type $generated@@599) $generated@@72)) (= (type $generated@@600) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@273 $generated@@600) (and ($generated@@156 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@72) ($generated@@82 $generated@@598 ($generated@@157 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@82 $generated@@598 ($generated@@157 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@274 ($generated@@166 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@274 ($generated@@166 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@2) (= ($generated@@154 $generated@@602 $generated@@144)  (and (<= ($generated@@263 0) ($generated $generated@@602)) (< ($generated $generated@@602) 256))))
 :pattern ( ($generated@@154 $generated@@602 $generated@@144))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@167) (= (type $generated@@604) $generated@@167)) (= ($generated@@243 ($generated@@265 $generated@@603) ($generated@@265 $generated@@604)) ($generated@@265 ($generated@@243 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@243 ($generated@@265 $generated@@603) ($generated@@265 $generated@@604)))
)))
(assert (forall (($generated@@605 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@263 $generated@@605))) ($generated@@265 ($generated@@294 ($generated@@8 $generated@@605))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@263 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@294 ($generated@@265 $generated@@606)) ($generated@@265 ($generated@@294 $generated@@606)))
 :pattern ( ($generated@@294 ($generated@@265 $generated@@606)))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@607 Int) ) (!  (=> (or ($generated@@350 $generated@@607) (and (not (= 1 $generated@@269)) (and (<= ($generated@@263 0) $generated@@607) (< $generated@@607 256)))) true)
 :pattern ( ($generated@@349 $generated@@607))
))))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@289 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@288 $generated@@609)) (= ($generated@@287 $generated@@608) 0)) (= $generated@@608 ($generated@@286 $generated@@609))))
 :pattern ( ($generated@@287 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@84 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@307 ($generated@@90 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@307 $generated@@610) ($generated ($generated@@89 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@307 ($generated@@90 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert  (=> (<= 0 $generated@@269) (forall (($generated@@614 Int) ) (!  (=> (or ($generated@@271 ($generated@@263 $generated@@614)) (not (= 0 $generated@@269))) (= ($generated@@270 ($generated@@263 $generated@@614)) (= ($generated@@263 ($generated@@351 $generated@@614 ($generated@@263 5))) ($generated@@263 4))))
 :weight 3
 :pattern ( ($generated@@270 ($generated@@263 $generated@@614)))
))))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@616) $generated@@2)) ($generated@@82 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@82 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@618) $generated@@3)) ($generated@@82 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@82 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@620) $generated@@4)) ($generated@@82 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@82 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@622) $generated@@471)) ($generated@@82 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@82 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@624) $generated@@167)) ($generated@@82 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@82 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@288 $generated@@167)) (= (type $generated@@626) $generated@@72)) (= ($generated@@154 $generated@@625 ($generated@@513 $generated@@626)) (forall (($generated@@627 Int) ) (!  (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@287 $generated@@625))) ($generated@@244 ($generated@@514 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@514 $generated@@625 $generated@@627))
))))
 :pattern ( ($generated@@154 $generated@@625 ($generated@@513 $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) ($generated@@288 $generated@@167)) (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@287 $generated@@629))) (< ($generated@@552 ($generated@@356 $generated@@158 ($generated@@514 $generated@@629 $generated@@630))) ($generated@@628 $generated@@629))))
 :pattern ( ($generated@@552 ($generated@@356 $generated@@158 ($generated@@514 $generated@@629 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@315 $generated@@167 $generated@@167)) (= (type $generated@@632) $generated@@72)) (= (type $generated@@633) $generated@@72)) ($generated@@154 $generated@@631 ($generated@@427 $generated@@632 $generated@@633))) (and (and ($generated@@154 ($generated@@313 $generated@@631) ($generated@@253 $generated@@632)) ($generated@@154 ($generated@@370 $generated@@631) ($generated@@253 $generated@@633))) ($generated@@154 ($generated@@401 $generated@@631) ($generated@@253 ($generated@@157 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@154 $generated@@631 ($generated@@427 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@333 $generated@@167 $generated@@167)) (= (type $generated@@635) $generated@@72)) (= (type $generated@@636) $generated@@72)) ($generated@@154 $generated@@634 ($generated@@435 $generated@@635 $generated@@636))) (and (and ($generated@@154 ($generated@@331 $generated@@634) ($generated@@258 $generated@@635)) ($generated@@154 ($generated@@381 $generated@@634) ($generated@@258 $generated@@636))) ($generated@@154 ($generated@@409 $generated@@634) ($generated@@258 ($generated@@157 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@154 $generated@@634 ($generated@@435 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@2) ($generated@@154 $generated@@637 $generated@@46))
 :pattern ( ($generated@@154 $generated@@637 $generated@@46))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@3) ($generated@@154 $generated@@638 $generated@@47))
 :pattern ( ($generated@@154 $generated@@638 $generated@@47))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@4) ($generated@@154 $generated@@639 $generated@@44))
 :pattern ( ($generated@@154 $generated@@639 $generated@@44))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@471) ($generated@@154 $generated@@640 $generated@@45))
 :pattern ( ($generated@@154 $generated@@640 $generated@@45))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@167) ($generated@@154 $generated@@641 $generated@@48))
 :pattern ( ($generated@@154 $generated@@641 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 (T@U) Bool)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Bool)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Bool)
(declare-fun $generated@@655 () T@U)
(assert  (and (and (and (= (type $generated@@643) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@647) ($generated@@183 $generated@@85 $generated@@4))) (= (type $generated@@653) $generated@@85)) (= (type $generated@@655) $generated@@85)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@656  (=> (and (=> (<= ($generated@@263 0) $generated@@642) (=> (< $generated@@642 256) ($generated@@271 $generated@@642))) (= (ControlFlow 0 3) (- 0 2))) (or (and ($generated@@154 ($generated@@8 ($generated@@263 (- 256 1))) $generated@@46) (and (and (<= ($generated@@263 0) ($generated@@263 (- 256 1))) (< (- 256 1) 256)) ($generated@@270 ($generated@@263 (- 256 1))))) (or (and ($generated@@154 ($generated@@8 ($generated@@263 0)) $generated@@46) (and (and (<= ($generated@@263 0) ($generated@@263 0)) (< 0 256)) ($generated@@270 ($generated@@263 0)))) (or (and ($generated@@154 ($generated@@8 ($generated@@263 0)) $generated@@46) (and (and (<= ($generated@@263 0) ($generated@@263 0)) (< 0 256)) ($generated@@270 ($generated@@263 0)))) (exists (($generated@@657 Int) )  (and (and (<= ($generated@@263 0) $generated@@657) (< $generated@@657 256)) ($generated@@270 $generated@@657)))))))))
(let (($generated@@658  (=> (and (not (and (<= ($generated@@263 0) $generated@@642) (< $generated@@642 256))) (= (ControlFlow 0 5) 3)) $generated@@656)))
(let (($generated@@659  (=> (and (and (and (<= ($generated@@263 0) $generated@@642) (< $generated@@642 256)) ($generated@@82 ($generated@@8 $generated@@642) $generated@@46 $generated@@643)) (and ($generated@@271 $generated@@642) (= (ControlFlow 0 4) 3))) $generated@@656)))
(let (($generated@@660  (=> (< $generated@@642 ($generated@@263 0)) (and (=> (= (ControlFlow 0 7) 4) $generated@@659) (=> (= (ControlFlow 0 7) 5) $generated@@658)))))
(let (($generated@@661  (=> (<= ($generated@@263 0) $generated@@642) (and (=> (= (ControlFlow 0 6) 4) $generated@@659) (=> (= (ControlFlow 0 6) 5) $generated@@658)))))
(let (($generated@@662  (and (=> (= (ControlFlow 0 8) 6) $generated@@661) (=> (= (ControlFlow 0 8) 7) $generated@@660))))
(let (($generated@@663 true))
(let (($generated@@664  (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (and ($generated@@154 ($generated@@8 ($generated@@263 (- 256 1))) $generated@@144) ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@349 ($generated@@263 (- 256 1))))))) (or (and ($generated@@154 ($generated@@8 ($generated@@263 0)) $generated@@144) ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@349 ($generated@@263 0)))))) (or (and ($generated@@154 ($generated@@8 ($generated@@263 0)) $generated@@144) ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@349 ($generated@@263 0)))))) (exists (($generated@@665 Int) )  (and (and (<= ($generated@@263 0) $generated@@665) (< $generated@@665 256)) ($generated@@349 $generated@@665))))))) (=> (or (and ($generated@@154 ($generated@@8 ($generated@@263 (- 256 1))) $generated@@144) ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@349 ($generated@@263 (- 256 1))))))) (or (and ($generated@@154 ($generated@@8 ($generated@@263 0)) $generated@@144) ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@349 ($generated@@263 0)))))) (or (and ($generated@@154 ($generated@@8 ($generated@@263 0)) $generated@@144) ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@349 ($generated@@263 0)))))) (exists (($generated@@666 Int) )  (and (and (<= ($generated@@263 0) $generated@@666) (< $generated@@666 256)) ($generated@@349 $generated@@666)))))) (=> (and (and (<= ($generated@@263 0) $generated@@644) (< $generated@@644 256)) ($generated@@349 $generated@@644)) (and (=> (= (ControlFlow 0 9) 8) $generated@@662) (=> (= (ControlFlow 0 9) 1) $generated@@663)))))))
(let (($generated@@667  (=> (and (not (and (<= ($generated@@263 0) $generated@@645) (< $generated@@645 256))) (= (ControlFlow 0 12) 9)) $generated@@664)))
(let (($generated@@668  (=> (and (<= ($generated@@263 0) $generated@@645) (< $generated@@645 256)) (=> (and (and ($generated@@82 ($generated@@8 $generated@@645) $generated@@144 $generated@@643) ($generated@@350 $generated@@645)) (and ($generated@@350 $generated@@645) (= (ControlFlow 0 11) 9))) $generated@@664))))
(let (($generated@@669  (=> (and ($generated@@350 ($generated@@263 11)) (=> ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@349 ($generated@@263 11))))) ($generated@@271 ($generated@@263 24)))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (=> ($generated@@350 ($generated@@263 11)) (or ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@349 ($generated@@263 11))))) (= ($generated@@263 ($generated@@351 11 ($generated@@263 3))) ($generated@@263 2))))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (=> ($generated@@271 ($generated@@263 24)) (or ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@270 ($generated@@263 24))))) (= ($generated@@263 ($generated@@351 24 ($generated@@263 5))) ($generated@@263 4))))) (=> ($generated@@0 ($generated@@265 ($generated@@11  (and ($generated@@349 ($generated@@263 11)) ($generated@@270 ($generated@@263 24)))))) (and (=> (= (ControlFlow 0 13) 11) $generated@@668) (=> (= (ControlFlow 0 13) 12) $generated@@667))))))))
(let (($generated@@670  (=> (and (not ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@349 ($generated@@263 11)))))) (= (ControlFlow 0 17) 13)) $generated@@669)))
(let (($generated@@671  (=> ($generated@@0 ($generated@@265 ($generated@@11 ($generated@@349 ($generated@@263 11))))) (=> (and (and (= $generated@@646 ($generated@@263 24)) ($generated@@82 ($generated@@8 $generated@@646) $generated@@46 $generated@@643)) (and ($generated@@271 ($generated@@263 24)) (= (ControlFlow 0 16) 13))) $generated@@669))))
(let (($generated@@672  (=> (and (= $generated@@647 ($generated@@182 $generated@@148 $generated@@643 $generated@@60 false)) (= $generated@@648 ($generated@@263 11))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= ($generated@@263 0) $generated@@648) (< $generated@@648 256))) (=> (and (<= ($generated@@263 0) $generated@@648) (< $generated@@648 256)) (=> (= $generated@@649 ($generated@@263 11)) (=> (and ($generated@@82 ($generated@@8 $generated@@649) $generated@@144 $generated@@643) ($generated@@350 ($generated@@263 11))) (and (=> (= (ControlFlow 0 18) 16) $generated@@671) (=> (= (ControlFlow 0 18) 17) $generated@@670)))))))))
(let (($generated@@673  (=> (and ($generated@@273 $generated@@643) ($generated@@650 $generated@@643)) (=> (and (and (and (and (<= ($generated@@263 0) $generated@@651) (< $generated@@651 256)) true) (and (=> $generated@@652 (and ($generated@@154 $generated@@653 $generated@@237) ($generated@@82 $generated@@653 $generated@@237 $generated@@643))) true)) (and (and (=> $generated@@654 (and ($generated@@154 $generated@@655 $generated@@240) ($generated@@82 $generated@@655 $generated@@240 $generated@@643))) true) (and (= 2 $generated@@269) (= (ControlFlow 0 20) 18)))) $generated@@672))))
$generated@@673))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
