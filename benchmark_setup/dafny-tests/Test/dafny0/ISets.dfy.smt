(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U T@U) Bool)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U Int) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@79 (type $generated@@306))))
 (=> (and (= (type $generated@@306) ($generated@@76 $generated@@308 $generated@@4)) (= (type $generated@@307) ($generated@@76 $generated@@308 $generated@@4))) (= ($generated@@305 $generated@@306 $generated@@307) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@308) (= ($generated@@0 ($generated@@81 $generated@@306 $generated@@309)) ($generated@@0 ($generated@@81 $generated@@307 $generated@@309))))
 :pattern ( ($generated@@81 $generated@@306 $generated@@309))
 :pattern ( ($generated@@81 $generated@@307 $generated@@309))
)))))
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@79 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@76 $generated@@311 $generated@@2)) (= ($generated@@151 $generated@@310) (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@311) (and (<= 0 ($generated ($generated@@81 $generated@@310 $generated@@312))) (<= ($generated ($generated@@81 $generated@@310 $generated@@312)) ($generated@@263 $generated@@310))))
 :pattern ( ($generated@@81 $generated@@310 $generated@@312))
)))))
 :pattern ( ($generated@@151 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(let (($generated@@315 ($generated@@272 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@271 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@270 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@269 $generated@@313))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@273 (type $generated@@318))))
(= (type ($generated@@317 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@273 (type $generated@@320))))
(let (($generated@@322 ($generated@@272 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@271 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@270 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(let (($generated@@326 ($generated@@290 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@289 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@288 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@287 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@291 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(let (($generated@@333 ($generated@@290 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@289 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@288 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@336) $generated@@64)) (= ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@335 $generated@@337)))) ($generated@@212 $generated@@337 $generated@@336))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
))))
 :pattern ( ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@145) ($generated@@0 ($generated@@81 $generated@@338 $generated@@341))) ($generated@@238 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@81 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@238 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@347) $generated@@346)) 0))
 :pattern ( (let (($generated@@347 (type $generated@@346)))
($generated@@81 ($generated@@264 $generated@@347) $generated@@346)))
)))
(assert  (and (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@348 $generated@@351)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@348 $generated@@351))
)) (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@349 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@349 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@273 (type $generated@@354))))
(let (($generated@@356 ($generated@@272 (type $generated@@354))))
(= (type ($generated@@350 $generated@@354)) ($generated@@76 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@350 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@358) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358)))) (= ($generated@@81 ($generated@@350 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@358))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@291 (type $generated@@362))))
(let (($generated@@364 ($generated@@290 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@76 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@366) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366)))) (= ($generated@@81 ($generated@@360 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@366))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@272 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@271 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@317 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@290 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@289 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@372) $generated@@376))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@64)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))) (and ($generated@@238 ($generated@@81 ($generated@@350 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@238 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@64)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))) (and ($generated@@238 ($generated@@81 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@238 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@79 (type $generated@@393))))
 (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@395 $generated@@4)) (= (type $generated@@394) ($generated@@76 $generated@@395 $generated@@4))) ($generated@@305 $generated@@393 $generated@@394)) (= $generated@@393 $generated@@394)))
 :pattern ( ($generated@@305 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= (type ($generated@@396 $generated@@397 $generated@@398)) ($generated@@76 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@401)))
 (=> (and (and (= (type $generated@@400) ($generated@@76 $generated@@403 $generated@@4)) (= (type $generated@@402) $generated@@403)) ($generated@@0 ($generated@@81 $generated@@400 $generated@@402))) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))))
 :pattern ( ($generated@@396 $generated@@400 $generated@@401) ($generated@@81 $generated@@400 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@405)))
 (=> (and (= (type $generated@@404) ($generated@@76 $generated@@407 $generated@@4)) (= (type $generated@@406) $generated@@407)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@404 $generated@@405) $generated@@406))  (or (= $generated@@406 $generated@@405) ($generated@@0 ($generated@@81 $generated@@404 $generated@@406))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@291 (type $generated@@410))))
(let (($generated@@412 ($generated@@290 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@289 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@288 $generated@@412 $generated@@411)) (= ($generated@@287 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@287 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@291 (type $generated@@413))))
(let (($generated@@415 ($generated@@290 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@289 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@288 $generated@@415 $generated@@414)) (= ($generated@@328 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@328 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@291 (type $generated@@416))))
(let (($generated@@418 ($generated@@290 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@289 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@288 $generated@@418 $generated@@417)) (= ($generated@@359 $generated@@416) ($generated@@408 $generated@@145))))))
 :pattern ( ($generated@@359 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@273 (type $generated@@419))))
(let (($generated@@421 ($generated@@272 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@271 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@270 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@145) (= (type $generated@@423) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@419) ($generated@@258 ($generated@@211 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@348 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@291 (type $generated@@424))))
(let (($generated@@426 ($generated@@290 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@289 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@288 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@145) (= (type $generated@@428) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@424) ($generated@@258 ($generated@@211 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@359 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@212 $generated@@429 $generated@@46)) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@349 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@212 $generated@@430 $generated@@47)) (and (= ($generated@@258 ($generated@@349 $generated@@3 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@349 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@212 $generated@@431 $generated@@44)) (and (= ($generated@@258 ($generated@@349 $generated@@4 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@349 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@212 $generated@@433 $generated@@45)) (and (= ($generated@@258 ($generated@@349 $generated@@432 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@349 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@434) $generated@@435) ($generated@@132 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@263 $generated@@436))))
 :pattern ( ($generated@@263 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@253 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@252 $generated@@439)) (<= 0 ($generated@@251 $generated@@438))))
 :pattern ( ($generated@@251 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@377 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@377 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@377 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@377 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@72 ($generated@@377 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@385 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@385 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@385 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@385 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@72 ($generated@@385 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@460 $generated@@461)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@135 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@135 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@135 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@135 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@145) (= (type $generated@@471) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@211 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@145) (= (type $generated@@473) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@211 $generated@@472 $generated@@473))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@253 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@475 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@252 $generated@@145)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@474 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@251 $generated@@480))) ($generated@@238 ($generated@@475 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@475 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@474 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
 (=> (= (type $generated@@484) ($generated@@76 $generated@@486 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@484 $generated@@485) $generated@@485))))
 :pattern ( ($generated@@396 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@75 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@75 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@221 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@221 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@226 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@226 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@150 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@150 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@474 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@474 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@474 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@474 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@349 $generated@@506 ($generated@@258 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@258 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@377 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@507) $generated@@510))) (and ($generated@@212 ($generated@@81 ($generated@@350 $generated@@507) $generated@@510) $generated@@509) ($generated@@212 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@377 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@385 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@511) $generated@@514))) (and ($generated@@212 ($generated@@81 ($generated@@360 $generated@@511) $generated@@514) $generated@@513) ($generated@@212 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@385 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@145)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@211 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@211 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@145)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@211 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@211 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@212 $generated@@521 ($generated@@377 $generated@@522 $generated@@523))) (and (= ($generated@@258 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@521) ($generated@@377 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@212 $generated@@521 ($generated@@377 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@212 $generated@@524 ($generated@@385 $generated@@525 $generated@@526))) (and (= ($generated@@258 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@524) ($generated@@385 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@212 $generated@@524 ($generated@@385 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@145)) ($generated@@212 $generated@@529 ($generated@@135 $generated@@527 $generated@@528))) (and (= ($generated@@258 ($generated@@349 $generated@@136 $generated@@529)) $generated@@529) ($generated@@132 ($generated@@349 $generated@@136 $generated@@529) ($generated@@135 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@135 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@408 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@408 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@135 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@515 ($generated@@258 $generated@@536)) ($generated@@516 $generated@@536)))
 :pattern ( ($generated@@515 ($generated@@258 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@212 $generated@@537 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@212 $generated@@538 ($generated@@221 $generated@@539))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@221 $generated@@539))))
 :pattern ( ($generated@@212 $generated@@538 ($generated@@221 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@212 $generated@@540 ($generated@@226 $generated@@541))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@226 $generated@@541))))
 :pattern ( ($generated@@212 $generated@@540 ($generated@@226 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@212 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@212 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@212 $generated@@544 ($generated@@474 $generated@@545))) (and (= ($generated@@258 ($generated@@349 ($generated@@252 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@349 ($generated@@252 $generated@@145) $generated@@544) ($generated@@474 $generated@@545))))
 :pattern ( ($generated@@212 $generated@@544 ($generated@@474 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@238 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@136) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@552) (and ($generated@@134 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@238 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@238 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@558) ($generated@@233 $generated@@559)) ($generated@@233 ($generated@@211 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@558) ($generated@@233 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@560))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@561)) ($generated@@233 ($generated@@258 $generated@@561)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@253 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@252 $generated@@563)) (= ($generated@@251 $generated@@562) 0)) (= $generated@@562 ($generated@@250 $generated@@563))))
 :pattern ( ($generated@@251 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@263 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@263 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@432)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@145)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@252 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= ($generated@@132 $generated@@578 ($generated@@474 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@251 $generated@@578))) ($generated@@212 ($generated@@475 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@475 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@474 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@251 $generated@@582))) (< ($generated@@516 ($generated@@349 $generated@@136 ($generated@@475 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@516 ($generated@@349 $generated@@136 ($generated@@475 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@377 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@269 $generated@@584) ($generated@@221 $generated@@585)) ($generated@@132 ($generated@@317 $generated@@584) ($generated@@221 $generated@@586))) ($generated@@132 ($generated@@348 $generated@@584) ($generated@@221 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@377 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@132 $generated@@587 ($generated@@385 $generated@@588 $generated@@589))) (and (and ($generated@@132 ($generated@@287 $generated@@587) ($generated@@226 $generated@@588)) ($generated@@132 ($generated@@328 $generated@@587) ($generated@@226 $generated@@589))) ($generated@@132 ($generated@@359 $generated@@587) ($generated@@226 ($generated@@135 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@385 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@132 $generated@@590 $generated@@46))
 :pattern ( ($generated@@132 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@132 $generated@@591 $generated@@47))
 :pattern ( ($generated@@132 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@132 $generated@@592 $generated@@44))
 :pattern ( ($generated@@132 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@432) ($generated@@132 $generated@@593 $generated@@45))
 :pattern ( ($generated@@132 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@145) ($generated@@132 $generated@@594 $generated@@48))
 :pattern ( ($generated@@132 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 (T@U) Bool)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () Int)
(assert  (and (and (and (and (= (type $generated@@595) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@596) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@597) $generated@@77)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@600) ($generated@@76 $generated@@145 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@602  (=> (and (not ($generated@@305 $generated@@595 ($generated@@396 ($generated@@408 $generated@@145) ($generated@@258 ($generated@@8 ($generated@@231 2)))))) (= (ControlFlow 0 3) (- 0 2))) ($generated@@0 ($generated@@233 ($generated@@11 false))))))
(let (($generated@@603 true))
(let (($generated@@604  (and (=> (= (ControlFlow 0 4) 1) $generated@@603) (=> (= (ControlFlow 0 4) 3) $generated@@602))))
(let (($generated@@605  (=> ($generated@@0 ($generated@@81 $generated@@595 ($generated@@258 ($generated@@8 ($generated@@231 3))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@0 ($generated@@233 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@233 ($generated@@11 false))) (=> (= (ControlFlow 0 6) 4) $generated@@604))))))
(let (($generated@@606  (=> (and (not ($generated@@0 ($generated@@81 $generated@@595 ($generated@@258 ($generated@@8 ($generated@@231 3)))))) (= (ControlFlow 0 5) 4)) $generated@@604)))
(let (($generated@@607  (and (=> (= (ControlFlow 0 8) 5) $generated@@606) (=> (= (ControlFlow 0 8) 6) $generated@@605))))
(let (($generated@@608  (=> (not ($generated@@0 ($generated@@81 $generated@@595 ($generated@@258 ($generated@@8 ($generated@@231 2)))))) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@0 ($generated@@233 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@233 ($generated@@11 false))) (=> (= (ControlFlow 0 10) 8) $generated@@607))))))
(let (($generated@@609  (=> (and ($generated@@0 ($generated@@81 $generated@@595 ($generated@@258 ($generated@@8 ($generated@@231 2))))) (= (ControlFlow 0 9) 8)) $generated@@607)))
(let (($generated@@610  (=> (and (= $generated@@596 ($generated@@156 $generated@@597 $generated@@598 $generated@@60 false)) (= $generated@@595 ($generated@@233 ($generated@@396 ($generated@@408 $generated@@145) ($generated@@258 ($generated@@8 ($generated@@231 2))))))) (and (=> (= (ControlFlow 0 12) 9) $generated@@609) (=> (= (ControlFlow 0 12) 10) $generated@@608)))))
(let (($generated@@611  (=> (and ($generated@@237 $generated@@598) ($generated@@599 $generated@@598)) (=> (and (and (and ($generated@@132 $generated@@600 ($generated@@226 $generated@@46)) ($generated@@74 $generated@@600 ($generated@@226 $generated@@46) $generated@@598)) true) (and (= 0 $generated@@601) (= (ControlFlow 0 13) 12))) $generated@@610))))
$generated@@611)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U Bool) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@114 (Int) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@204 (T@U T@U) Bool)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 (T@U T@U) T@U)
(declare-fun $generated@@208 () T@T)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@226 (T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@296 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@315 (Int) Int)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Bool)
(declare-fun $generated@@322 (T@U T@U T@U) Bool)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@347 (T@U) Int)
(declare-fun $generated@@348 (T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@U T@U) Bool)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) Bool)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@T T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@488 (T@T) T@U)
(declare-fun $generated@@512 () T@T)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@555 (T@U Int) T@U)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@658 (T@U Int T@U) T@U)
(declare-fun $generated@@669 (Int) T@U)
(declare-fun $generated@@698 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 11) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@82 $generated@@83)) 12))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@78 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@80 ($generated@@78 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@78 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (let (($generated@@90 ($generated@@80 (type $generated@@88))))
(= (type ($generated@@74 $generated@@88 $generated@@89)) $generated@@90))
 :pattern ( ($generated@@74 $generated@@88 $generated@@89))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 (type $generated@@93)))
(let (($generated@@95 (type $generated@@92)))
(= (type ($generated@@81 $generated@@91 $generated@@92 $generated@@93)) ($generated@@78 $generated@@95 $generated@@94))))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92 $generated@@93))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@80 (type $generated@@96))))
 (=> (= (type $generated@@98) $generated@@99) (= ($generated@@74 ($generated@@81 $generated@@96 $generated@@97 $generated@@98) $generated@@97) $generated@@98)))
 :weight 0
))) (and (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@102 $generated@@103) (= ($generated@@74 ($generated@@81 $generated@@101 $generated@@102 $generated@@100) $generated@@103) ($generated@@74 $generated@@101 $generated@@103)))
 :weight 0
)) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or true (= ($generated@@74 ($generated@@81 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@74 $generated@@105 $generated@@107)))
 :weight 0
)))) (forall (($generated@@108 T@U) ($generated@@109 Bool) ) (! (= (type ($generated@@75 $generated@@108 $generated@@109)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@75 $generated@@108 $generated@@109))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 Bool) ($generated@@112 T@U) ) (!  (=> (and (= (type $generated@@110) $generated@@64) (= (type $generated@@112) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@75 $generated@@110 $generated@@111) $generated@@112))  (and ($generated@@77 $generated@@112 $generated@@110) $generated@@111)))
 :pattern ( ($generated@@74 ($generated@@75 $generated@@110 $generated@@111) $generated@@112))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@115) 13) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@117 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@117 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@116) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@118 $generated@@122 $generated@@123 $generated@@124)) $generated@@116)
 :pattern ( ($generated@@118 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@117 ($generated@@118 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@117 ($generated@@118 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@117 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@117 ($generated@@118 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@117 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@114 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@114 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@113 $generated@@138 ($generated@@114 0) $generated@@139))
 :pattern ( ($generated@@113 $generated@@138 ($generated@@114 0) $generated@@139))
)))
(assert  (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@142 $generated@@145 $generated@@146)) 15)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@143 ($generated@@142 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@142 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@144 ($generated@@142 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@142 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (let (($generated@@152 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@140 $generated@@151)) ($generated@@78 $generated@@152 $generated@@4)))
 :pattern ( ($generated@@140 $generated@@151))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@80 (type $generated@@154))))
(let (($generated@@157 ($generated@@79 (type $generated@@153))))
(= (type ($generated@@141 $generated@@153 $generated@@154 $generated@@155)) ($generated@@142 $generated@@157 $generated@@156))))
 :pattern ( ($generated@@141 $generated@@153 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@80 (type $generated@@159))))
(let (($generated@@162 ($generated@@79 (type $generated@@158))))
 (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@162 $generated@@4)) (= (type $generated@@159) ($generated@@78 $generated@@162 $generated@@161))) (= (type $generated@@160) $generated@@64)) (= ($generated@@140 ($generated@@141 $generated@@158 $generated@@159 $generated@@160)) $generated@@158))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@158 $generated@@159 $generated@@160)))
)))
(assert (forall (($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@144 (type $generated@@164))))
(let (($generated@@166 ($generated@@143 (type $generated@@164))))
(= (type ($generated@@163 $generated@@164)) ($generated@@78 $generated@@166 $generated@@165))))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@80 (type $generated@@168))))
(let (($generated@@171 ($generated@@79 (type $generated@@167))))
 (=> (and (and (= (type $generated@@167) ($generated@@78 $generated@@171 $generated@@4)) (= (type $generated@@168) ($generated@@78 $generated@@171 $generated@@170))) (= (type $generated@@169) $generated@@64)) (= ($generated@@163 ($generated@@141 $generated@@167 $generated@@168 $generated@@169)) $generated@@168))))
 :pattern ( ($generated@@163 ($generated@@141 $generated@@167 $generated@@168 $generated@@169)))
)))
(assert  (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@174 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@174 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@172 $generated@@183)) ($generated@@78 $generated@@184 $generated@@4)))
 :pattern ( ($generated@@172 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@80 (type $generated@@186))))
(let (($generated@@189 ($generated@@79 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) ($generated@@174 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@80 (type $generated@@191))))
(let (($generated@@194 ($generated@@79 (type $generated@@190))))
 (=> (and (and (= (type $generated@@190) ($generated@@78 $generated@@194 $generated@@4)) (= (type $generated@@191) ($generated@@78 $generated@@194 $generated@@193))) (= (type $generated@@192) $generated@@64)) (= ($generated@@172 ($generated@@173 $generated@@190 $generated@@191 $generated@@192)) $generated@@190))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@190 $generated@@191 $generated@@192)))
)))
(assert (forall (($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@176 (type $generated@@196))))
(let (($generated@@198 ($generated@@175 (type $generated@@196))))
(= (type ($generated@@195 $generated@@196)) ($generated@@78 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@195 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@80 (type $generated@@200))))
(let (($generated@@203 ($generated@@79 (type $generated@@199))))
 (=> (and (and (= (type $generated@@199) ($generated@@78 $generated@@203 $generated@@4)) (= (type $generated@@200) ($generated@@78 $generated@@203 $generated@@202))) (= (type $generated@@201) $generated@@64)) (= ($generated@@195 ($generated@@173 $generated@@199 $generated@@200 $generated@@201)) $generated@@200))))
 :pattern ( ($generated@@195 ($generated@@173 $generated@@199 $generated@@200 $generated@@201)))
)))
(assert (forall (($generated@@205 T@U) ) (!  (=> (= (type $generated@@205) $generated@@2) ($generated@@204 $generated@@205 ($generated@@114 0)))
 :pattern ( ($generated@@204 $generated@@205 ($generated@@114 0)))
)))
(assert  (and (= ($generated@@1 $generated@@208) 17) (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@209 $generated@@210)) $generated@@64)
 :pattern ( ($generated@@207 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (= (type $generated@@211) $generated@@64) (= (type $generated@@212) $generated@@64)) (= (type $generated@@213) $generated@@208)) ($generated@@204 $generated@@213 ($generated@@207 $generated@@211 $generated@@212))) ($generated@@206 $generated@@213))
 :pattern ( ($generated@@206 $generated@@213) ($generated@@204 $generated@@213 ($generated@@207 $generated@@211 $generated@@212)))
)))
(assert  (and (forall (($generated@@217 T@U) ) (! (= (type ($generated@@215 $generated@@217)) $generated@@76)
 :pattern ( ($generated@@215 $generated@@217))
)) (forall (($generated@@218 T@U) ) (! (= (type ($generated@@216 $generated@@218)) $generated@@76)
 :pattern ( ($generated@@216 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (= (type $generated@@219) $generated@@208) (= (type $generated@@220) $generated@@208)) true) (= ($generated@@214 $generated@@219 $generated@@220)  (and (= ($generated@@215 $generated@@219) ($generated@@215 $generated@@220)) (= ($generated@@216 $generated@@219) ($generated@@216 $generated@@220)))))
 :pattern ( ($generated@@214 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ) (! (= (type ($generated@@221 $generated@@223)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (= (type $generated@@224) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@225) $generated@@64)) ($generated@@204 $generated@@224 ($generated@@221 $generated@@225))) ($generated@@222 $generated@@224))
 :pattern ( ($generated@@204 $generated@@224 ($generated@@221 $generated@@225)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@232 $generated@@233)) 18)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@228 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@228 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@230 (type $generated@@238))))
(= (type ($generated@@226 $generated@@238 $generated@@239 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@226 $generated@@238 $generated@@239 $generated@@240))
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(let (($generated@@247 (type $generated@@243)))
(= (type ($generated@@231 $generated@@242 $generated@@243 $generated@@244 $generated@@245)) ($generated@@228 $generated@@247 $generated@@246))))
 :pattern ( ($generated@@231 $generated@@242 $generated@@243 $generated@@244 $generated@@245))
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@230 (type $generated@@248))))
 (=> (= (type $generated@@251) $generated@@252) (= ($generated@@226 ($generated@@231 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@249 $generated@@250) $generated@@251)))
 :weight 0
))) (and (and (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@226 ($generated@@231 $generated@@254 $generated@@255 $generated@@256 $generated@@253) $generated@@257 $generated@@258) ($generated@@226 $generated@@254 $generated@@257 $generated@@258)))
 :weight 0
)) (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (or (= $generated@@262 $generated@@264) (= ($generated@@226 ($generated@@231 $generated@@260 $generated@@261 $generated@@262 $generated@@259) $generated@@263 $generated@@264) ($generated@@226 $generated@@260 $generated@@263 $generated@@264)))
 :weight 0
))) (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (or true (= ($generated@@226 ($generated@@231 $generated@@266 $generated@@267 $generated@@268 $generated@@265) $generated@@269 $generated@@270) ($generated@@226 $generated@@266 $generated@@269 $generated@@270)))
 :weight 0
)))) (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ) (! (= (type ($generated@@227 $generated@@271 $generated@@272 $generated@@273 $generated@@274)) ($generated@@228 $generated@@115 $generated@@4))
 :pattern ( ($generated@@227 $generated@@271 $generated@@272 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 Bool) ($generated@@279 T@U) ($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@67 (type $generated@@280))))
 (=> (and (and (and (and (= (type $generated@@275) $generated@@115) (= (type $generated@@276) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@277) ($generated@@66 $generated@@4))) (= (type $generated@@279) $generated@@115)) (= (type $generated@@280) ($generated@@66 $generated@@281))) (= ($generated@@0 ($generated@@226 ($generated@@227 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@279 $generated@@280))  (=> (and (not (= $generated@@279 $generated@@275)) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@276 $generated@@279) $generated@@277))) $generated@@278))))
 :pattern ( ($generated@@226 ($generated@@227 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@79 (type $generated@@283))))
(= (type ($generated@@282 $generated@@283 $generated@@284)) ($generated@@78 $generated@@285 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@79 (type $generated@@286))))
 (=> (and (= (type $generated@@286) ($generated@@78 $generated@@288 $generated@@4)) (= (type $generated@@287) ($generated@@78 $generated@@288 $generated@@4))) (= ($generated@@282 ($generated@@282 $generated@@286 $generated@@287) $generated@@287) ($generated@@282 $generated@@286 $generated@@287))))
 :pattern ( ($generated@@282 ($generated@@282 $generated@@286 $generated@@287) $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@79 (type $generated@@290))))
(= (type ($generated@@289 $generated@@290 $generated@@291)) ($generated@@78 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@293))))
 (=> (and (= (type $generated@@293) ($generated@@78 $generated@@295 $generated@@4)) (= (type $generated@@294) ($generated@@78 $generated@@295 $generated@@4))) (= ($generated@@289 ($generated@@289 $generated@@293 $generated@@294) $generated@@294) ($generated@@289 $generated@@293 $generated@@294))))
 :pattern ( ($generated@@289 ($generated@@289 $generated@@293 $generated@@294) $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (= (type ($generated@@296 $generated@@297 $generated@@298)) $generated@@208)
 :pattern ( ($generated@@296 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) $generated@@64) (= (type $generated@@300) $generated@@64)) (= (type $generated@@301) $generated@@76)) (= (type $generated@@302) $generated@@76)) (= ($generated@@204 ($generated@@296 $generated@@301 $generated@@302) ($generated@@207 $generated@@299 $generated@@300))  (and ($generated@@77 $generated@@301 $generated@@299) ($generated@@77 $generated@@302 $generated@@300))))
 :pattern ( ($generated@@204 ($generated@@296 $generated@@301 $generated@@302) ($generated@@207 $generated@@299 $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@208) (= (type $generated@@304) $generated@@208)) (= ($generated@@214 $generated@@303 $generated@@304) (= $generated@@303 $generated@@304)))
 :pattern ( ($generated@@214 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@64)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@308) $generated@@64)) (= ($generated@@204 $generated@@307 ($generated@@305 $generated@@308)) (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@76) ($generated@@0 ($generated@@74 $generated@@307 $generated@@309))) ($generated@@77 $generated@@309 $generated@@308))
 :pattern ( ($generated@@74 $generated@@307 $generated@@309))
))))
 :pattern ( ($generated@@204 $generated@@307 ($generated@@305 $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@64)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@313) $generated@@64)) (= ($generated@@204 $generated@@312 ($generated@@310 $generated@@313)) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@76) ($generated@@0 ($generated@@74 $generated@@312 $generated@@314))) ($generated@@77 $generated@@314 $generated@@313))
 :pattern ( ($generated@@74 $generated@@312 $generated@@314))
))))
 :pattern ( ($generated@@204 $generated@@312 ($generated@@310 $generated@@313)))
)))
(assert (forall (($generated@@316 Int) ) (! (= ($generated@@315 $generated@@316) $generated@@316)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 (type $generated@@318)))
(= (type ($generated@@317 $generated@@318)) $generated@@319))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (= ($generated@@317 $generated@@320) $generated@@320)
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@323) $generated@@64) (= (type $generated@@324) $generated@@64)) (= (type $generated@@325) $generated@@76)) (= (type $generated@@326) $generated@@76)) (= (type $generated@@327) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@321 $generated@@327)) (= ($generated@@113 ($generated@@296 $generated@@325 $generated@@326) ($generated@@207 $generated@@323 $generated@@324) $generated@@327)  (and ($generated@@322 $generated@@325 $generated@@323 $generated@@327) ($generated@@322 $generated@@326 $generated@@324 $generated@@327))))
 :pattern ( ($generated@@113 ($generated@@296 $generated@@325 $generated@@326) ($generated@@207 $generated@@323 $generated@@324) $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@68)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@208) (= ($generated@@206 $generated@@330) (= ($generated@@328 $generated@@330) $generated@@61)))
 :pattern ( ($generated@@206 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@208) ($generated@@206 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@76) (= (type $generated@@333) $generated@@76)) (= $generated@@331 ($generated@@296 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@206 $generated@@331))
)))
(assert  (and (and (forall (($generated@@338 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@338)) 19)) (forall (($generated@@339 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
))) (forall (($generated@@340 T@T) ) (! (= (type ($generated@@334 $generated@@340)) ($generated@@336 $generated@@340))
 :pattern ( ($generated@@334 $generated@@340))
))))
(assert (forall (($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@341)) 0)
 :pattern ( ($generated@@334 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@76)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@64) (= (type $generated@@346) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@322 ($generated@@342 $generated@@344) $generated@@345 $generated@@346) ($generated@@113 $generated@@344 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@322 ($generated@@342 $generated@@344) $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@349 T@T) ) (! (= (type ($generated@@348 $generated@@349)) ($generated@@78 $generated@@349 $generated@@2))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@79 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@78 $generated@@351 $generated@@2)) (and (= (= ($generated@@347 $generated@@350) 0) (= $generated@@350 ($generated@@348 $generated@@351))) (=> (not (= ($generated@@347 $generated@@350) 0)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) (< 0 ($generated ($generated@@74 $generated@@350 $generated@@352))))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) ($generated@@142 $generated@@354 $generated@@355))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@74 ($generated@@140 ($generated@@353 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@74 ($generated@@140 ($generated@@353 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) ($generated@@174 $generated@@360 $generated@@361))
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@74 ($generated@@172 ($generated@@359 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@74 ($generated@@172 ($generated@@359 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@79 (type $generated@@366))))
 (=> (and (= (type $generated@@366) ($generated@@78 $generated@@368 $generated@@4)) (= (type $generated@@367) ($generated@@78 $generated@@368 $generated@@4))) (= ($generated@@365 $generated@@366 $generated@@367) (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@368) (= ($generated@@0 ($generated@@74 $generated@@366 $generated@@369)) ($generated@@0 ($generated@@74 $generated@@367 $generated@@369))))
 :pattern ( ($generated@@74 $generated@@366 $generated@@369))
 :pattern ( ($generated@@74 $generated@@367 $generated@@369))
)))))
 :pattern ( ($generated@@365 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@79 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@78 $generated@@371 $generated@@2)) (= ($generated@@222 $generated@@370) (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@371) (and (<= 0 ($generated ($generated@@74 $generated@@370 $generated@@372))) (<= ($generated ($generated@@74 $generated@@370 $generated@@372)) ($generated@@347 $generated@@370))))
 :pattern ( ($generated@@74 $generated@@370 $generated@@372))
)))))
 :pattern ( ($generated@@222 $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@144 (type $generated@@373))))
(let (($generated@@375 ($generated@@143 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@142 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@353 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@74 ($generated@@140 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@140 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@144 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@78 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@144 (type $generated@@380))))
(let (($generated@@382 ($generated@@143 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@142 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@353 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@74 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@176 (type $generated@@384))))
(let (($generated@@386 ($generated@@175 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@174 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@359 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@74 ($generated@@172 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@172 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@176 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@78 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@176 (type $generated@@391))))
(let (($generated@@393 ($generated@@175 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@174 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@359 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@74 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@396) $generated@@64)) (= ($generated@@204 $generated@@395 ($generated@@221 $generated@@396)) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@76) (< 0 ($generated ($generated@@74 $generated@@395 $generated@@397)))) ($generated@@77 $generated@@397 $generated@@396))
 :pattern ( ($generated@@74 $generated@@395 $generated@@397))
))))
 :pattern ( ($generated@@204 $generated@@395 ($generated@@221 $generated@@396)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@79 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400 $generated@@401)) ($generated@@78 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@403))))
 (=> (and (and (= (type $generated@@403) ($generated@@78 $generated@@405 $generated@@4)) (= (type $generated@@404) ($generated@@78 $generated@@405 $generated@@4))) ($generated@@398 $generated@@403 $generated@@404)) (and (= ($generated@@399 ($generated@@282 $generated@@403 $generated@@404) $generated@@403) $generated@@404) (= ($generated@@399 ($generated@@282 $generated@@403 $generated@@404) $generated@@404) $generated@@403))))
 :pattern ( ($generated@@282 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
 (=> (and (= (type $generated@@406) ($generated@@78 $generated@@409 $generated@@4)) (= (type $generated@@407) ($generated@@78 $generated@@409 $generated@@4))) (= ($generated@@0 ($generated@@74 ($generated@@289 $generated@@406 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@74 $generated@@406 $generated@@408)) ($generated@@0 ($generated@@74 $generated@@407 $generated@@408))))))
 :pattern ( ($generated@@74 ($generated@@289 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
 (=> (and (= (type $generated@@410) ($generated@@78 $generated@@413 $generated@@4)) (= (type $generated@@411) ($generated@@78 $generated@@413 $generated@@4))) (= ($generated@@0 ($generated@@74 ($generated@@399 $generated@@410 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@74 $generated@@410 $generated@@412)) (not ($generated@@0 ($generated@@74 $generated@@411 $generated@@412)))))))
 :pattern ( ($generated@@74 ($generated@@399 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@414 ($generated@@305 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@76) ($generated@@0 ($generated@@74 $generated@@414 $generated@@417))) ($generated@@322 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@74 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@113 $generated@@414 ($generated@@305 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@418 ($generated@@310 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@76) ($generated@@0 ($generated@@74 $generated@@418 $generated@@421))) ($generated@@322 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@74 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@113 $generated@@418 ($generated@@310 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@74 ($generated@@348 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@74 ($generated@@348 $generated@@423) $generated@@422)))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@T) ($generated@@428 T@U) ) (! (= (type ($generated@@425 $generated@@427 $generated@@428)) $generated@@427)
 :pattern ( ($generated@@425 $generated@@427 $generated@@428))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@430) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@424 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@74 ($generated@@140 $generated@@429) ($generated@@215 ($generated@@425 $generated@@208 $generated@@430)))) (= ($generated@@74 ($generated@@163 $generated@@429) ($generated@@215 ($generated@@425 $generated@@208 $generated@@430))) ($generated@@216 ($generated@@425 $generated@@208 $generated@@430))))))
 :pattern ( ($generated@@74 ($generated@@424 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@434) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@431 $generated@@433) $generated@@434))  (and ($generated@@0 ($generated@@74 ($generated@@172 $generated@@433) ($generated@@215 ($generated@@425 $generated@@208 $generated@@434)))) (= ($generated@@74 ($generated@@195 $generated@@433) ($generated@@215 ($generated@@425 $generated@@208 $generated@@434))) ($generated@@216 ($generated@@425 $generated@@208 $generated@@434))))))
 :pattern ( ($generated@@74 ($generated@@431 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@143 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@142 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@74 ($generated@@377 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@74 ($generated@@140 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@74 ($generated@@163 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@74 ($generated@@140 $generated@@435) $generated@@439))
 :pattern ( ($generated@@74 ($generated@@163 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@74 ($generated@@377 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@175 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@174 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@74 ($generated@@388 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@74 ($generated@@172 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@74 ($generated@@195 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@74 ($generated@@172 $generated@@440) $generated@@444))
 :pattern ( ($generated@@74 ($generated@@195 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@74 ($generated@@388 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@448) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) $generated@@64)) (= (type $generated@@451) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@140 $generated@@448) $generated@@452))) (and ($generated@@322 ($generated@@74 ($generated@@163 $generated@@448) $generated@@452) $generated@@450 $generated@@451) ($generated@@322 $generated@@452 $generated@@449 $generated@@451)))
 :pattern ( ($generated@@74 ($generated@@163 $generated@@448) $generated@@452))
 :pattern ( ($generated@@74 ($generated@@140 $generated@@448) $generated@@452))
))))
 :pattern ( ($generated@@113 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@457) $generated@@64)) (= (type $generated@@458) $generated@@64)) (= (type $generated@@459) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@172 $generated@@456) $generated@@460))) (and ($generated@@322 ($generated@@74 ($generated@@195 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@322 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@74 ($generated@@195 $generated@@456) $generated@@460))
 :pattern ( ($generated@@74 ($generated@@172 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@113 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@79 (type $generated@@461))))
 (=> (and (and (= (type $generated@@461) ($generated@@78 $generated@@463 $generated@@4)) (= (type $generated@@462) ($generated@@78 $generated@@463 $generated@@4))) ($generated@@365 $generated@@461 $generated@@462)) (= $generated@@461 $generated@@462)))
 :pattern ( ($generated@@365 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (let (($generated@@467 (type $generated@@466)))
(= (type ($generated@@464 $generated@@465 $generated@@466)) ($generated@@78 $generated@@467 $generated@@4)))
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@469)))
 (=> (and (and (= (type $generated@@468) ($generated@@78 $generated@@471 $generated@@4)) (= (type $generated@@470) $generated@@471)) ($generated@@0 ($generated@@74 $generated@@468 $generated@@470))) ($generated@@0 ($generated@@74 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))))
 :pattern ( ($generated@@464 $generated@@468 $generated@@469) ($generated@@74 $generated@@468 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
 (=> (and (and (= (type $generated@@472) ($generated@@78 $generated@@475 $generated@@4)) (= (type $generated@@473) ($generated@@78 $generated@@475 $generated@@4))) ($generated@@0 ($generated@@74 $generated@@472 $generated@@474))) ($generated@@0 ($generated@@74 ($generated@@282 $generated@@472 $generated@@473) $generated@@474))))
 :pattern ( ($generated@@282 $generated@@472 $generated@@473) ($generated@@74 $generated@@472 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (! (let (($generated@@479 (type $generated@@478)))
 (=> (and (and (= (type $generated@@476) ($generated@@78 $generated@@479 $generated@@4)) (= (type $generated@@477) ($generated@@78 $generated@@479 $generated@@4))) ($generated@@0 ($generated@@74 $generated@@477 $generated@@478))) ($generated@@0 ($generated@@74 ($generated@@282 $generated@@476 $generated@@477) $generated@@478))))
 :pattern ( ($generated@@282 $generated@@476 $generated@@477) ($generated@@74 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@481)))
 (=> (and (= (type $generated@@480) ($generated@@78 $generated@@483 $generated@@4)) (= (type $generated@@482) $generated@@483)) (= ($generated@@0 ($generated@@74 ($generated@@464 $generated@@480 $generated@@481) $generated@@482))  (or (= $generated@@482 $generated@@481) ($generated@@0 ($generated@@74 $generated@@480 $generated@@482))))))
 :pattern ( ($generated@@74 ($generated@@464 $generated@@480 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
 (=> (and (and (= (type $generated@@484) ($generated@@78 $generated@@487 $generated@@4)) (= (type $generated@@485) ($generated@@78 $generated@@487 $generated@@4))) ($generated@@0 ($generated@@74 $generated@@485 $generated@@486))) (not ($generated@@0 ($generated@@74 ($generated@@399 $generated@@484 $generated@@485) $generated@@486)))))
 :pattern ( ($generated@@399 $generated@@484 $generated@@485) ($generated@@74 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@489 T@T) ) (! (= (type ($generated@@488 $generated@@489)) ($generated@@78 $generated@@489 $generated@@4))
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@176 (type $generated@@490))))
(let (($generated@@492 ($generated@@175 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@174 $generated@@492 $generated@@491)) (= (= $generated@@490 ($generated@@359 $generated@@492 $generated@@491)) (= ($generated@@172 $generated@@490) ($generated@@488 $generated@@492))))))
 :pattern ( ($generated@@172 $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@176 (type $generated@@493))))
(let (($generated@@495 ($generated@@175 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@174 $generated@@495 $generated@@494)) (= (= $generated@@493 ($generated@@359 $generated@@495 $generated@@494)) (= ($generated@@388 $generated@@493) ($generated@@488 $generated@@494))))))
 :pattern ( ($generated@@388 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@176 (type $generated@@496))))
(let (($generated@@498 ($generated@@175 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@174 $generated@@498 $generated@@497)) (= (= $generated@@496 ($generated@@359 $generated@@498 $generated@@497)) (= ($generated@@431 $generated@@496) ($generated@@488 $generated@@76))))))
 :pattern ( ($generated@@431 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@144 (type $generated@@499))))
(let (($generated@@501 ($generated@@143 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@142 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@353 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@76) (= (type $generated@@503) $generated@@76)) ($generated@@0 ($generated@@74 ($generated@@424 $generated@@499) ($generated@@342 ($generated@@296 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@424 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@176 (type $generated@@504))))
(let (($generated@@506 ($generated@@175 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@174 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@359 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@76) (= (type $generated@@508) $generated@@76)) ($generated@@0 ($generated@@74 ($generated@@431 $generated@@504) ($generated@@342 ($generated@@296 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@431 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@76) ($generated@@77 $generated@@509 $generated@@46)) (and (= ($generated@@342 ($generated@@425 $generated@@2 $generated@@509)) $generated@@509) ($generated@@204 ($generated@@425 $generated@@2 $generated@@509) $generated@@46)))
 :pattern ( ($generated@@77 $generated@@509 $generated@@46))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@76) ($generated@@77 $generated@@510 $generated@@47)) (and (= ($generated@@342 ($generated@@425 $generated@@3 $generated@@510)) $generated@@510) ($generated@@204 ($generated@@425 $generated@@3 $generated@@510) $generated@@47)))
 :pattern ( ($generated@@77 $generated@@510 $generated@@47))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@76) ($generated@@77 $generated@@511 $generated@@44)) (and (= ($generated@@342 ($generated@@425 $generated@@4 $generated@@511)) $generated@@511) ($generated@@204 ($generated@@425 $generated@@4 $generated@@511) $generated@@44)))
 :pattern ( ($generated@@77 $generated@@511 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@512) 20))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@76) ($generated@@77 $generated@@513 $generated@@45)) (and (= ($generated@@342 ($generated@@425 $generated@@512 $generated@@513)) $generated@@513) ($generated@@204 ($generated@@425 $generated@@512 $generated@@513) $generated@@45)))
 :pattern ( ($generated@@77 $generated@@513 $generated@@45))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@77 ($generated@@342 $generated@@514) $generated@@515) ($generated@@204 $generated@@514 $generated@@515)))
 :pattern ( ($generated@@77 ($generated@@342 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@79 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@78 $generated@@517 $generated@@2)) (<= 0 ($generated@@347 $generated@@516))))
 :pattern ( ($generated@@347 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@337 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@336 $generated@@519)) (<= 0 ($generated@@335 $generated@@518))))
 :pattern ( ($generated@@335 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= ($generated@@520 ($generated@@445 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@445 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (= ($generated@@524 ($generated@@445 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@445 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@72 ($generated@@445 $generated@@528 $generated@@529)) $generated@@58))
 :pattern ( ($generated@@445 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= ($generated@@530 ($generated@@453 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@453 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@453 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@453 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@72 ($generated@@453 $generated@@538 $generated@@539)) $generated@@59))
 :pattern ( ($generated@@453 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@76) (= (type $generated@@541) $generated@@76)) (= ($generated@@328 ($generated@@296 $generated@@540 $generated@@541)) $generated@@61))
 :pattern ( ($generated@@296 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@64)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@64) (= (type $generated@@545) $generated@@64)) (= ($generated@@542 ($generated@@207 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@207 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@64)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@64) (= (type $generated@@549) $generated@@64)) (= ($generated@@546 ($generated@@207 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@207 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@76) (= (type $generated@@551) $generated@@76)) (= ($generated@@215 ($generated@@296 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@296 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@76) (= (type $generated@@553) $generated@@76)) (= ($generated@@216 ($generated@@296 $generated@@552 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@296 $generated@@552 $generated@@553))
)))
(assert  (and (forall (($generated@@556 T@U) ) (! (= (type ($generated@@554 $generated@@556)) $generated@@64)
 :pattern ( ($generated@@554 $generated@@556))
)) (forall (($generated@@557 T@U) ($generated@@558 Int) ) (! (let (($generated@@559 ($generated@@337 (type $generated@@557))))
(= (type ($generated@@555 $generated@@557 $generated@@558)) $generated@@559))
 :pattern ( ($generated@@555 $generated@@557 $generated@@558))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@336 $generated@@76)) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@560 ($generated@@554 $generated@@561) $generated@@562) (forall (($generated@@563 Int) ) (!  (=> (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@335 $generated@@560))) ($generated@@322 ($generated@@555 $generated@@560 $generated@@563) $generated@@561 $generated@@562))
 :pattern ( ($generated@@555 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@113 $generated@@560 ($generated@@554 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (=> (= (type $generated@@564) ($generated@@78 $generated@@566 $generated@@4)) ($generated@@0 ($generated@@74 ($generated@@464 $generated@@564 $generated@@565) $generated@@565))))
 :pattern ( ($generated@@464 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@567 ($generated@@114 $generated@@568)) $generated@@568)
 :pattern ( ($generated@@114 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@569 ($generated@@305 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@305 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@64) (= ($generated@@72 ($generated@@305 $generated@@572)) $generated@@54))
 :pattern ( ($generated@@305 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@64)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@573 ($generated@@310 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@310 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@64) (= ($generated@@72 ($generated@@310 $generated@@576)) $generated@@55))
 :pattern ( ($generated@@310 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@64)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@577 ($generated@@221 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@221 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@580)) $generated@@56))
 :pattern ( ($generated@@221 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@64)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@64) (= ($generated@@581 ($generated@@554 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@554 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@64) (= ($generated@@72 ($generated@@554 $generated@@584)) $generated@@57))
 :pattern ( ($generated@@554 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
(= ($generated@@425 $generated@@586 ($generated@@342 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@342 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) (= ($generated@@204 $generated@@587 ($generated@@445 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@140 $generated@@587) $generated@@590))) (and ($generated@@77 ($generated@@74 ($generated@@163 $generated@@587) $generated@@590) $generated@@589) ($generated@@77 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@74 ($generated@@163 $generated@@587) $generated@@590))
 :pattern ( ($generated@@74 ($generated@@140 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@204 $generated@@587 ($generated@@445 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) (= ($generated@@204 $generated@@591 ($generated@@453 $generated@@592 $generated@@593)) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@172 $generated@@591) $generated@@594))) (and ($generated@@77 ($generated@@74 ($generated@@195 $generated@@591) $generated@@594) $generated@@593) ($generated@@77 $generated@@594 $generated@@592)))
 :pattern ( ($generated@@74 ($generated@@195 $generated@@591) $generated@@594))
 :pattern ( ($generated@@74 ($generated@@172 $generated@@591) $generated@@594))
))))
 :pattern ( ($generated@@204 $generated@@591 ($generated@@453 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@76) (= (type $generated@@598) $generated@@76)) (< ($generated@@595 $generated@@597) ($generated@@596 ($generated@@296 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@296 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@76) (= (type $generated@@600) $generated@@76)) (< ($generated@@595 $generated@@600) ($generated@@596 ($generated@@296 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@296 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@79 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@78 $generated@@603 $generated@@4)) (= (type $generated@@602) ($generated@@78 $generated@@603 $generated@@4))) (= ($generated@@282 $generated@@601 ($generated@@282 $generated@@601 $generated@@602)) ($generated@@282 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@282 $generated@@601 ($generated@@282 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@79 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@78 $generated@@606 $generated@@4)) (= (type $generated@@605) ($generated@@78 $generated@@606 $generated@@4))) (= ($generated@@289 $generated@@604 ($generated@@289 $generated@@604 $generated@@605)) ($generated@@289 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@289 $generated@@604 ($generated@@289 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@76) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) $generated@@64)) ($generated@@77 $generated@@607 ($generated@@445 $generated@@608 $generated@@609))) (and (= ($generated@@342 ($generated@@425 ($generated@@142 $generated@@76 $generated@@76) $generated@@607)) $generated@@607) ($generated@@204 ($generated@@425 ($generated@@142 $generated@@76 $generated@@76) $generated@@607) ($generated@@445 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@77 $generated@@607 ($generated@@445 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@76) (= (type $generated@@611) $generated@@64)) (= (type $generated@@612) $generated@@64)) ($generated@@77 $generated@@610 ($generated@@453 $generated@@611 $generated@@612))) (and (= ($generated@@342 ($generated@@425 ($generated@@174 $generated@@76 $generated@@76) $generated@@610)) $generated@@610) ($generated@@204 ($generated@@425 ($generated@@174 $generated@@76 $generated@@76) $generated@@610) ($generated@@453 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@77 $generated@@610 ($generated@@453 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@64) (= (type $generated@@614) $generated@@64)) (= (type $generated@@615) $generated@@76)) ($generated@@77 $generated@@615 ($generated@@207 $generated@@613 $generated@@614))) (and (= ($generated@@342 ($generated@@425 $generated@@208 $generated@@615)) $generated@@615) ($generated@@204 ($generated@@425 $generated@@208 $generated@@615) ($generated@@207 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@77 $generated@@615 ($generated@@207 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@616)))
 (not ($generated@@0 ($generated@@74 ($generated@@488 $generated@@617) $generated@@616))))
 :pattern ( (let (($generated@@617 (type $generated@@616)))
($generated@@74 ($generated@@488 $generated@@617) $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@618) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@619) ($generated@@78 $generated@@76 $generated@@76))) (= (type $generated@@620) $generated@@64)) (= (type $generated@@621) $generated@@64)) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@76) ($generated@@0 ($generated@@74 $generated@@618 $generated@@622))) (and ($generated@@77 $generated@@622 $generated@@620) ($generated@@77 ($generated@@74 $generated@@619 $generated@@622) $generated@@621)))
 :no-pattern (type $generated@@622)
 :no-pattern ($generated $generated@@622)
 :no-pattern ($generated@@0 $generated@@622)
))) ($generated@@204 ($generated@@141 $generated@@618 $generated@@619 ($generated@@445 $generated@@620 $generated@@621)) ($generated@@445 $generated@@620 $generated@@621)))
 :pattern ( ($generated@@141 $generated@@618 $generated@@619 ($generated@@445 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@623) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@624) ($generated@@78 $generated@@76 $generated@@76))) (= (type $generated@@625) $generated@@64)) (= (type $generated@@626) $generated@@64)) (forall (($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@76) ($generated@@0 ($generated@@74 $generated@@623 $generated@@627))) (and ($generated@@77 $generated@@627 $generated@@625) ($generated@@77 ($generated@@74 $generated@@624 $generated@@627) $generated@@626)))
 :no-pattern (type $generated@@627)
 :no-pattern ($generated $generated@@627)
 :no-pattern ($generated@@0 $generated@@627)
))) ($generated@@204 ($generated@@141 $generated@@623 $generated@@624 ($generated@@453 $generated@@625 $generated@@626)) ($generated@@453 $generated@@625 $generated@@626)))
 :pattern ( ($generated@@173 $generated@@623 $generated@@624 ($generated@@453 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@69)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@64) (= (type $generated@@631) $generated@@64)) (and (= ($generated@@72 ($generated@@207 $generated@@630 $generated@@631)) $generated@@62) (= ($generated@@628 ($generated@@207 $generated@@630 $generated@@631)) $generated@@63)))
 :pattern ( ($generated@@207 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@208) (= ($generated@@595 ($generated@@342 $generated@@632)) ($generated@@596 $generated@@632)))
 :pattern ( ($generated@@595 ($generated@@342 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@76) ($generated@@77 $generated@@633 ($generated@@114 0))) (and (= ($generated@@342 ($generated@@425 $generated@@2 $generated@@633)) $generated@@633) ($generated@@204 ($generated@@425 ($generated@@78 $generated@@76 $generated@@4) $generated@@633) ($generated@@114 0))))
 :pattern ( ($generated@@77 $generated@@633 ($generated@@114 0)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@76) (= (type $generated@@635) $generated@@64)) ($generated@@77 $generated@@634 ($generated@@305 $generated@@635))) (and (= ($generated@@342 ($generated@@425 ($generated@@78 $generated@@76 $generated@@4) $generated@@634)) $generated@@634) ($generated@@204 ($generated@@425 ($generated@@78 $generated@@76 $generated@@4) $generated@@634) ($generated@@305 $generated@@635))))
 :pattern ( ($generated@@77 $generated@@634 ($generated@@305 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@76) (= (type $generated@@637) $generated@@64)) ($generated@@77 $generated@@636 ($generated@@310 $generated@@637))) (and (= ($generated@@342 ($generated@@425 ($generated@@78 $generated@@76 $generated@@4) $generated@@636)) $generated@@636) ($generated@@204 ($generated@@425 ($generated@@78 $generated@@76 $generated@@4) $generated@@636) ($generated@@310 $generated@@637))))
 :pattern ( ($generated@@77 $generated@@636 ($generated@@310 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@76) (= (type $generated@@639) $generated@@64)) ($generated@@77 $generated@@638 ($generated@@221 $generated@@639))) (and (= ($generated@@342 ($generated@@425 ($generated@@78 $generated@@76 $generated@@2) $generated@@638)) $generated@@638) ($generated@@204 ($generated@@425 ($generated@@78 $generated@@76 $generated@@2) $generated@@638) ($generated@@221 $generated@@639))))
 :pattern ( ($generated@@77 $generated@@638 ($generated@@221 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@76) (= (type $generated@@641) $generated@@64)) ($generated@@77 $generated@@640 ($generated@@554 $generated@@641))) (and (= ($generated@@342 ($generated@@425 ($generated@@336 $generated@@76) $generated@@640)) $generated@@640) ($generated@@204 ($generated@@425 ($generated@@336 $generated@@76) $generated@@640) ($generated@@554 $generated@@641))))
 :pattern ( ($generated@@77 $generated@@640 ($generated@@554 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@642) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@643) $generated@@64)) (= (type $generated@@644) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@642 ($generated@@221 $generated@@643) $generated@@644) (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@76) (< 0 ($generated ($generated@@74 $generated@@642 $generated@@645)))) ($generated@@322 $generated@@645 $generated@@643 $generated@@644))
 :pattern ( ($generated@@74 $generated@@642 $generated@@645))
))))
 :pattern ( ($generated@@113 $generated@@642 ($generated@@221 $generated@@643) $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@79 (type $generated@@646))))
 (=> (and (= (type $generated@@646) ($generated@@78 $generated@@648 $generated@@4)) (= (type $generated@@647) ($generated@@78 $generated@@648 $generated@@4))) (= ($generated@@398 $generated@@646 $generated@@647) (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@648) (or (not ($generated@@0 ($generated@@74 $generated@@646 $generated@@649))) (not ($generated@@0 ($generated@@74 $generated@@647 $generated@@649)))))
 :pattern ( ($generated@@74 $generated@@646 $generated@@649))
 :pattern ( ($generated@@74 $generated@@647 $generated@@649))
)))))
 :pattern ( ($generated@@398 $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@208) (= (type $generated@@651) $generated@@64)) (= (type $generated@@652) ($generated@@78 $generated@@115 $generated@@116))) (and ($generated@@321 $generated@@652) (and ($generated@@206 $generated@@650) (exists (($generated@@653 T@U) ) (!  (and (= (type $generated@@653) $generated@@64) ($generated@@113 $generated@@650 ($generated@@207 $generated@@651 $generated@@653) $generated@@652))
 :pattern ( ($generated@@113 $generated@@650 ($generated@@207 $generated@@651 $generated@@653) $generated@@652))
))))) ($generated@@322 ($generated@@215 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@322 ($generated@@215 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) $generated@@208) (= (type $generated@@655) $generated@@64)) (= (type $generated@@656) ($generated@@78 $generated@@115 $generated@@116))) (and ($generated@@321 $generated@@656) (and ($generated@@206 $generated@@654) (exists (($generated@@657 T@U) ) (!  (and (= (type $generated@@657) $generated@@64) ($generated@@113 $generated@@654 ($generated@@207 $generated@@657 $generated@@655) $generated@@656))
 :pattern ( ($generated@@113 $generated@@654 ($generated@@207 $generated@@657 $generated@@655) $generated@@656))
))))) ($generated@@322 ($generated@@216 $generated@@654) $generated@@655 $generated@@656))
 :pattern ( ($generated@@322 ($generated@@216 $generated@@654) $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 Int) ($generated@@661 T@U) ) (! (= (type ($generated@@658 $generated@@659 $generated@@660 $generated@@661)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@658 $generated@@659 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@662) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@664) ($generated@@78 $generated@@76 $generated@@4))) (= (type $generated@@665) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@658 $generated@@662 $generated@@663 $generated@@664) $generated@@665)) (exists (($generated@@666 Int) ) (!  (and ($generated@@0 ($generated@@74 $generated@@662 ($generated@@342 ($generated@@8 $generated@@666)))) (= $generated@@665 ($generated@@342 ($generated@@8 (+ $generated@@666 $generated@@663)))))
 :pattern ( ($generated@@74 $generated@@664 ($generated@@342 ($generated@@8 $generated@@666))))
))))
 :pattern ( ($generated@@74 ($generated@@658 $generated@@662 $generated@@663 $generated@@664) $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@76) (= (type $generated@@668) $generated@@76)) (= ($generated@@296 ($generated@@317 $generated@@667) ($generated@@317 $generated@@668)) ($generated@@317 ($generated@@296 $generated@@667 $generated@@668))))
 :pattern ( ($generated@@296 ($generated@@317 $generated@@667) ($generated@@317 $generated@@668)))
)))
(assert (forall (($generated@@670 Int) ) (! (= (type ($generated@@669 $generated@@670)) ($generated@@78 $generated@@76 $generated@@76))
 :pattern ( ($generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 Int) ($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@76) (= ($generated@@74 ($generated@@669 $generated@@671) $generated@@672) ($generated@@342 ($generated@@8 (+ ($generated ($generated@@425 $generated@@2 $generated@@672)) $generated@@671)))))
 :pattern ( ($generated@@74 ($generated@@669 $generated@@671) $generated@@672))
)))
(assert (forall (($generated@@673 Int) ) (! (= ($generated@@342 ($generated@@8 ($generated@@315 $generated@@673))) ($generated@@317 ($generated@@342 ($generated@@8 $generated@@673))))
 :pattern ( ($generated@@342 ($generated@@8 ($generated@@315 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ) (! (= ($generated@@342 ($generated@@317 $generated@@674)) ($generated@@317 ($generated@@342 $generated@@674)))
 :pattern ( ($generated@@342 ($generated@@317 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ) (! (let (($generated@@676 ($generated@@337 (type $generated@@675))))
 (=> (and (= (type $generated@@675) ($generated@@336 $generated@@676)) (= ($generated@@335 $generated@@675) 0)) (= $generated@@675 ($generated@@334 $generated@@676))))
 :pattern ( ($generated@@335 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (! (let (($generated@@680 (type $generated@@678)))
 (=> (and (and (= (type $generated@@677) ($generated@@78 $generated@@680 $generated@@2)) (= (type $generated@@679) $generated@@2)) (<= 0 ($generated $generated@@679))) (= ($generated@@347 ($generated@@81 $generated@@677 $generated@@678 $generated@@679)) (+ (- ($generated@@347 $generated@@677) ($generated ($generated@@74 $generated@@677 $generated@@678))) ($generated $generated@@679)))))
 :pattern ( ($generated@@347 ($generated@@81 $generated@@677 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 (type $generated@@683)))
 (=> (and (= (type $generated@@681) ($generated@@78 $generated@@684 $generated@@4)) (= (type $generated@@682) ($generated@@78 $generated@@684 $generated@@4))) (= ($generated@@0 ($generated@@74 ($generated@@282 $generated@@681 $generated@@682) $generated@@683))  (or ($generated@@0 ($generated@@74 $generated@@681 $generated@@683)) ($generated@@0 ($generated@@74 $generated@@682 $generated@@683))))))
 :pattern ( ($generated@@74 ($generated@@282 $generated@@681 $generated@@682) $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@686) $generated@@2)) ($generated@@113 $generated@@686 $generated@@46 $generated@@685))
 :pattern ( ($generated@@113 $generated@@686 $generated@@46 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@688) $generated@@3)) ($generated@@113 $generated@@688 $generated@@47 $generated@@687))
 :pattern ( ($generated@@113 $generated@@688 $generated@@47 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@690) $generated@@4)) ($generated@@113 $generated@@690 $generated@@44 $generated@@689))
 :pattern ( ($generated@@113 $generated@@690 $generated@@44 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@692) $generated@@512)) ($generated@@113 $generated@@692 $generated@@45 $generated@@691))
 :pattern ( ($generated@@113 $generated@@692 $generated@@45 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@694) $generated@@76)) ($generated@@113 $generated@@694 $generated@@48 $generated@@693))
 :pattern ( ($generated@@113 $generated@@694 $generated@@48 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) ($generated@@336 $generated@@76)) (= (type $generated@@696) $generated@@64)) (= ($generated@@204 $generated@@695 ($generated@@554 $generated@@696)) (forall (($generated@@697 Int) ) (!  (=> (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@335 $generated@@695))) ($generated@@77 ($generated@@555 $generated@@695 $generated@@697) $generated@@696))
 :pattern ( ($generated@@555 $generated@@695 $generated@@697))
))))
 :pattern ( ($generated@@204 $generated@@695 ($generated@@554 $generated@@696)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 Int) ) (!  (=> (= (type $generated@@699) ($generated@@336 $generated@@76)) (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@335 $generated@@699))) (< ($generated@@596 ($generated@@425 $generated@@208 ($generated@@555 $generated@@699 $generated@@700))) ($generated@@698 $generated@@699))))
 :pattern ( ($generated@@596 ($generated@@425 $generated@@208 ($generated@@555 $generated@@699 $generated@@700))))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@702) $generated@@64)) (= (type $generated@@703) $generated@@64)) ($generated@@204 $generated@@701 ($generated@@445 $generated@@702 $generated@@703))) (and (and ($generated@@204 ($generated@@140 $generated@@701) ($generated@@305 $generated@@702)) ($generated@@204 ($generated@@377 $generated@@701) ($generated@@305 $generated@@703))) ($generated@@204 ($generated@@424 $generated@@701) ($generated@@305 ($generated@@207 $generated@@702 $generated@@703)))))
 :pattern ( ($generated@@204 $generated@@701 ($generated@@445 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@705) $generated@@64)) (= (type $generated@@706) $generated@@64)) ($generated@@204 $generated@@704 ($generated@@453 $generated@@705 $generated@@706))) (and (and ($generated@@204 ($generated@@172 $generated@@704) ($generated@@310 $generated@@705)) ($generated@@204 ($generated@@388 $generated@@704) ($generated@@310 $generated@@706))) ($generated@@204 ($generated@@431 $generated@@704) ($generated@@310 ($generated@@207 $generated@@705 $generated@@706)))))
 :pattern ( ($generated@@204 $generated@@704 ($generated@@453 $generated@@705 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@2) ($generated@@204 $generated@@707 $generated@@46))
 :pattern ( ($generated@@204 $generated@@707 $generated@@46))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@3) ($generated@@204 $generated@@708 $generated@@47))
 :pattern ( ($generated@@204 $generated@@708 $generated@@47))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@4) ($generated@@204 $generated@@709 $generated@@44))
 :pattern ( ($generated@@204 $generated@@709 $generated@@44))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@512) ($generated@@204 $generated@@710 $generated@@45))
 :pattern ( ($generated@@204 $generated@@710 $generated@@45))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@76) ($generated@@204 $generated@@711 $generated@@48))
 :pattern ( ($generated@@204 $generated@@711 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () Int)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 (T@U) Bool)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@712) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@714) ($generated@@78 $generated@@76 $generated@@4))) (= (type $generated@@715) ($generated@@78 $generated@@76 $generated@@4))) (= (type $generated@@716) ($generated@@228 $generated@@115 $generated@@4))) (= (type $generated@@717) $generated@@115)) (= (type $generated@@718) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@719) ($generated@@78 $generated@@76 $generated@@4))) (= (type $generated@@721) ($generated@@78 $generated@@76 $generated@@4))) (= (type $generated@@722) ($generated@@78 $generated@@76 $generated@@4))) (= (type $generated@@723) ($generated@@78 $generated@@76 $generated@@4))) (= (type $generated@@724) ($generated@@78 $generated@@76 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 29) (let (($generated@@726  (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@0 ($generated@@74 ($generated@@172 ($generated@@173 ($generated@@75 $generated@@46 ($generated@@0 ($generated@@317 ($generated@@11 true)))) ($generated@@669 1) ($generated@@453 $generated@@46 $generated@@46))) ($generated@@342 ($generated@@8 ($generated@@315 14)))))) (=> (= (ControlFlow 0 5) (- 0 4)) (= ($generated ($generated@@425 $generated@@2 ($generated@@74 ($generated@@195 ($generated@@173 ($generated@@75 $generated@@46 ($generated@@0 ($generated@@317 ($generated@@11 true)))) ($generated@@669 1) ($generated@@453 $generated@@46 $generated@@46))) ($generated@@342 ($generated@@8 ($generated@@315 14)))))) ($generated@@315 15))))))
(let (($generated@@727  (=> (and (not ($generated@@0 ($generated@@317 ($generated@@11 true)))) (= (ControlFlow 0 8) 5)) $generated@@726)))
(let (($generated@@728  (=> (and ($generated@@0 ($generated@@317 ($generated@@11 true))) (= (ControlFlow 0 7) 5)) $generated@@726)))
(let (($generated@@729  (and (=> (= (ControlFlow 0 9) 7) $generated@@728) (=> (= (ControlFlow 0 9) 8) $generated@@727))))
(let (($generated@@730 true))
(let (($generated@@731  (and (=> (= (ControlFlow 0 10) (- 0 11)) (exists (($generated@@732 T@U) ) (!  (and (= (type $generated@@732) $generated@@2) (and ($generated@@0 ($generated@@317 ($generated@@11 true))) (= ($generated@@342 ($generated@@8 ($generated@@315 17))) ($generated@@342 $generated@@732))))
 :no-pattern (type $generated@@732)
 :no-pattern ($generated $generated@@732)
 :no-pattern ($generated@@0 $generated@@732)
))) (=> (exists (($generated@@733 Int) )  (and ($generated@@0 ($generated@@317 ($generated@@11 true))) (= ($generated@@342 ($generated@@8 ($generated@@315 17))) ($generated@@342 ($generated@@8 $generated@@733))))) (and (=> (= (ControlFlow 0 10) 9) $generated@@729) (=> (= (ControlFlow 0 10) 3) $generated@@730))))))
(let (($generated@@734  (=> (and (not ($generated@@0 ($generated@@317 ($generated@@11 true)))) (= (ControlFlow 0 13) 10)) $generated@@731)))
(let (($generated@@735  (=> (and ($generated@@0 ($generated@@317 ($generated@@11 true))) (= (ControlFlow 0 12) 10)) $generated@@731)))
(let (($generated@@736  (and (=> (= (ControlFlow 0 14) 12) $generated@@735) (=> (= (ControlFlow 0 14) 13) $generated@@734))))
(let (($generated@@737 true))
(let (($generated@@738  (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@365 ($generated@@658 $generated@@712 1 $generated@@712) ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 2)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))) ($generated@@342 ($generated@@8 ($generated@@315 4)))))) (=> ($generated@@365 ($generated@@658 $generated@@712 1 $generated@@712) ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 2)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))) ($generated@@342 ($generated@@8 ($generated@@315 4))))) (and (=> (= (ControlFlow 0 15) 14) $generated@@736) (=> (= (ControlFlow 0 15) 2) $generated@@737))))))
(let (($generated@@739  (=> (and (not ($generated@@0 ($generated@@74 $generated@@712 ($generated@@342 ($generated@@8 $generated@@713))))) (= (ControlFlow 0 18) 15)) $generated@@738)))
(let (($generated@@740  (=> (and ($generated@@0 ($generated@@74 $generated@@712 ($generated@@342 ($generated@@8 $generated@@713)))) (= (ControlFlow 0 17) 15)) $generated@@738)))
(let (($generated@@741  (and (=> (= (ControlFlow 0 19) 17) $generated@@740) (=> (= (ControlFlow 0 19) 18) $generated@@739))))
(let (($generated@@742 true))
(let (($generated@@743  (and (=> (= (ControlFlow 0 20) (- 0 23)) ($generated@@365 ($generated@@289 $generated@@712 $generated@@714) ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 2)))))) (and (=> (= (ControlFlow 0 20) (- 0 22)) ($generated@@365 ($generated@@289 $generated@@712 $generated@@715) ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))))) (=> (and ($generated@@365 ($generated@@289 $generated@@712 $generated@@714) ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 2))))) ($generated@@365 ($generated@@289 $generated@@712 $generated@@715) ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))))) (and (=> (= (ControlFlow 0 20) (- 0 21)) ($generated@@365 ($generated@@399 $generated@@712 $generated@@714) ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 3)))))) (=> ($generated@@365 ($generated@@399 $generated@@712 $generated@@714) ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 3))))) (and (=> (= (ControlFlow 0 20) 19) $generated@@741) (=> (= (ControlFlow 0 20) 1) $generated@@742)))))))))
(let (($generated@@744  (=> (and (not ($generated@@365 ($generated@@289 $generated@@712 $generated@@714) ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 2)))))) (= (ControlFlow 0 25) 20)) $generated@@743)))
(let (($generated@@745  (=> (and ($generated@@365 ($generated@@289 $generated@@712 $generated@@714) ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 2))))) (= (ControlFlow 0 24) 20)) $generated@@743)))
(let (($generated@@746  (=> (= $generated@@716 ($generated@@227 $generated@@717 $generated@@718 $generated@@60 false)) (=> (and (= $generated@@719 ($generated@@317 ($generated@@488 $generated@@76))) (= $generated@@712 ($generated@@317 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 2)))) ($generated@@342 ($generated@@8 ($generated@@315 3))))))) (and (=> (= (ControlFlow 0 26) (- 0 28)) ($generated@@365 $generated@@712 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 2)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))))) (=> ($generated@@365 $generated@@712 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 2)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))) ($generated@@342 ($generated@@8 ($generated@@315 3))))) (=> (and (= $generated@@714 ($generated@@317 ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 2)))))) (= $generated@@715 ($generated@@317 ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 4))))))) (and (=> (= (ControlFlow 0 26) (- 0 27)) ($generated@@365 ($generated@@282 $generated@@712 $generated@@715) ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 2)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))) ($generated@@342 ($generated@@8 ($generated@@315 4)))))) (=> ($generated@@365 ($generated@@282 $generated@@712 $generated@@715) ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@464 ($generated@@488 $generated@@76) ($generated@@342 ($generated@@8 ($generated@@315 1)))) ($generated@@342 ($generated@@8 ($generated@@315 2)))) ($generated@@342 ($generated@@8 ($generated@@315 3)))) ($generated@@342 ($generated@@8 ($generated@@315 4))))) (and (=> (= (ControlFlow 0 26) 24) $generated@@745) (=> (= (ControlFlow 0 26) 25) $generated@@744)))))))))))
(let (($generated@@747  (=> (and ($generated@@321 $generated@@718) ($generated@@720 $generated@@718)) (=> (and (and ($generated@@204 $generated@@721 ($generated@@310 $generated@@46)) ($generated@@113 $generated@@721 ($generated@@310 $generated@@46) $generated@@718)) true) (=> (and (and (and (and ($generated@@204 $generated@@722 ($generated@@310 $generated@@46)) ($generated@@113 $generated@@722 ($generated@@310 $generated@@46) $generated@@718)) true) (and (and ($generated@@204 $generated@@723 ($generated@@310 $generated@@46)) ($generated@@113 $generated@@723 ($generated@@310 $generated@@46) $generated@@718)) true)) (and (and (and ($generated@@204 $generated@@724 ($generated@@310 $generated@@46)) ($generated@@113 $generated@@724 ($generated@@310 $generated@@46) $generated@@718)) true) (and (= 0 $generated@@725) (= (ControlFlow 0 29) 26)))) $generated@@746)))))
$generated@@747)))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
